{"version":3,"file":"backbase-stop-checks-http-ang.umd.js","sources":["../../model/schemeName.ts","../../model/stopCheckStatus.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/stopChecks.service.ts","../../api/stopChecks.service.mocks.ts"],"sourcesContent":["/**\n * Stop checks client\n * Create and retrieve a request to stop the clearance of an issued or lost check.\n *\n * The version of the OpenAPI document: 1.0.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * This describes the type of the account identifier. ID will mean it refers to an account known within DBS.\n */\nexport type SchemeName = 'IBAN' | 'BBAN' | 'ID';\n\nexport const SchemeName = {\n    IBAN: 'IBAN' as SchemeName,\n    BBAN: 'BBAN' as SchemeName,\n    ID: 'ID' as SchemeName\n};\n\n","/**\n * Stop checks client\n * Create and retrieve a request to stop the clearance of an issued or lost check.\n *\n * The version of the OpenAPI document: 1.0.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The status the stop-check can be in.\n */\nexport type StopCheckStatus = 'PENDING' | 'ACCEPTED' | 'REJECTED' | 'EXPIRED';\n\nexport const StopCheckStatus = {\n    PENDING: 'PENDING' as StopCheckStatus,\n    ACCEPTED: 'ACCEPTED' as StopCheckStatus,\n    REJECTED: 'REJECTED' as StopCheckStatus,\n    EXPIRED: 'EXPIRED' as StopCheckStatus\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const STOP_CHECKS_BASE_PATH = new InjectionToken<string>('STOP_CHECKS_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface StopChecksConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class StopChecksConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: StopChecksConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link StopChecksConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link StopChecksConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module StopChecksConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { StopChecksConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class StopChecksApiModule {\n    public static forRoot(configurationFactory: () => StopChecksConfiguration): ModuleWithProviders<StopChecksApiModule> {\n        return {\n            ngModule: StopChecksApiModule,\n            providers: [ { provide: StopChecksConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: StopChecksApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: StopChecksConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('StopChecksApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Stop checks client\n * Create and retrieve a request to stop the clearance of an issued or lost check.\n *\n * The version of the OpenAPI document: 1.0.2\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { StopCheckPostRequest } from '../model/models';\nimport { StopCheckPostResponse } from '../model/models';\nimport { StopChecksGetResponse } from '../model/models';\n\nimport { STOP_CHECKS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { StopChecksConfiguration }                                     from '../configuration';\n\n\nexport interface GetStopChecksRequestParams {\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface PostStopChecksRequestParams {\n    /** Create stop check */\n    [\"stopCheckPostRequest\"]?: StopCheckPostRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StopChecksHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new StopChecksConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(STOP_CHECKS_BASE_PATH) basePath: string, @Optional() configuration: StopChecksConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve list of stop orders.\n     * Retrieve list of stop orders\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStopChecks(requestParameters: GetStopChecksRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<StopChecksGetResponse>;\n    /**\n     * Retrieve list of stop orders.\n     * Retrieve list of stop orders\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStopChecks(requestParameters: GetStopChecksRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<StopChecksGetResponse>>;\n    /**\n     * Retrieve list of stop orders.\n     * Retrieve list of stop orders\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStopChecks(requestParameters: GetStopChecksRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<StopChecksGetResponse>>;\n    /**\n     * Retrieve list of stop orders.\n     * Retrieve list of stop orders\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStopChecks(requestParameters: GetStopChecksRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<StopChecksGetResponse>(`${this.configuration.basePath}/client-api/v1/stop-checks`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getStopChecksUrl(requestParameters: GetStopChecksRequestParams): string {\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/stop-checks${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Create stop check.\n     * Create stop check\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postStopChecks(requestParameters: PostStopChecksRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<StopCheckPostResponse>;\n    /**\n     * Create stop check.\n     * Create stop check\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postStopChecks(requestParameters: PostStopChecksRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<StopCheckPostResponse>>;\n    /**\n     * Create stop check.\n     * Create stop check\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postStopChecks(requestParameters: PostStopChecksRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<StopCheckPostResponse>>;\n    /**\n     * Create stop check.\n     * Create stop check\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postStopChecks(requestParameters: PostStopChecksRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _stopCheckPostRequest = requestParameters[\"stopCheckPostRequest\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<StopCheckPostResponse>(`${this.configuration.basePath}/client-api/v1/stop-checks`,\n            _stopCheckPostRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postStopChecksUrl(requestParameters: PostStopChecksRequestParams): string {\n        const _stopCheckPostRequest = requestParameters[\"stopCheckPostRequest\"];\n        return `${this.configuration.basePath}/client-api/v1/stop-checks`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/stop-checks URL pattern\n*/\nexport const StopChecksHttpServiceGetStopChecksMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/stop-checks\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"stopChecks\" : [ {\n    \"id\" : \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n    \"originatorAccount\" : {\n      \"name\" : \"Main Current\",\n      \"identification\" : \"0256108927\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Invalid name\",\n    \"status\" : \"REJECTED\",\n    \"check\" : {\n      \"number\" : \"10000001337900112340\"\n    },\n    \"dateOfRequest\" : \"2019-09-24T12:00:00.000Z\",\n    \"expirationDate\" : \"2019-09-30\"\n  }, {\n    \"id\" : \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n    \"originatorAccount\" : {\n      \"name\" : \"Shared Current\",\n      \"identification\" : \"0256108944\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Checks stolen\",\n    \"status\" : \"ACCEPTED\",\n    \"checkNumberRange\" : {\n      \"firstNumber\" : \"10000001337900112345\",\n      \"lastNumber\" : \"10000001337900112355\"\n    },\n    \"dateOfRequest\" : \"2019-09-30T16:00:00.000Z\",\n    \"expirationDate\" : \"2019-10-07\"\n  }, {\n    \"id\" : \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n    \"originatorAccount\" : {\n      \"name\" : \"Main Checking Current\",\n      \"identification\" : \"0256108963\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Insufficient funds\",\n    \"status\" : \"PENDING\",\n    \"check\" : {\n      \"number\" : \"10000001337900112344\",\n      \"amount\" : {\n        \"currencyCode\" : \"USD\",\n        \"amount\" : \"913.32\"\n      },\n      \"payeeName\" : \"Jack S. P. Arrow\",\n      \"dateIssued\" : \"2018-10-18\"\n    },\n    \"dateOfRequest\" : \"2019-10-24T12:00:00.000Z\",\n    \"expirationDate\" : \"2019-10-30\"\n  } ],\n  \"totalStopChecks\" : 3\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/stop-checks URL pattern\n*/\nexport const StopChecksHttpServicePostStopChecksMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/stop-checks\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"stopCheck\" : {\n    \"id\" : \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n    \"originatorAccount\" : {\n      \"name\" : \"Main Current\",\n      \"identification\" : \"0256108927\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Invalid name\",\n    \"status\" : \"REJECTED\",\n    \"check\" : {\n      \"number\" : \"10000001337900112340\"\n    },\n    \"dateOfRequest\" : \"2019-09-24T12:00:00.000Z\",\n    \"expirationDate\" : \"2019-09-30\"\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"stopCheck\" : {\n    \"id\" : \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n    \"originatorAccount\" : {\n      \"name\" : \"Main Checking Current\",\n      \"identification\" : \"0256108963\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Insufficient funds\",\n    \"status\" : \"PENDING\",\n    \"check\" : {\n      \"number\" : \"10000001337900112344\",\n      \"amount\" : {\n        \"currencyCode\" : \"USD\",\n        \"amount\" : \"913.32\"\n      },\n      \"payeeName\" : \"Jack S. P. Arrow\",\n      \"dateIssued\" : \"2018-10-18\"\n    },\n    \"dateOfRequest\" : \"2019-10-24T12:00:00.000Z\",\n    \"expirationDate\" : \"2019-10-30\"\n  }\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"stopCheck\" : {\n    \"id\" : \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n    \"originatorAccount\" : {\n      \"name\" : \"Shared Current\",\n      \"identification\" : \"0256108944\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Checks stolen\",\n    \"status\" : \"ACCEPTED\",\n    \"checkNumberRange\" : {\n      \"firstNumber\" : \"10000001337900112345\",\n      \"lastNumber\" : \"10000001337900112355\"\n    },\n    \"dateOfRequest\" : \"2019-09-30T16:00:00.000Z\",\n    \"expirationDate\" : \"2019-10-07\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const StopChecksHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/stop-checks\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"stopChecks\" : [ {\n    \"id\" : \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n    \"originatorAccount\" : {\n      \"name\" : \"Main Current\",\n      \"identification\" : \"0256108927\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Invalid name\",\n    \"status\" : \"REJECTED\",\n    \"check\" : {\n      \"number\" : \"10000001337900112340\"\n    },\n    \"dateOfRequest\" : \"2019-09-24T12:00:00.000Z\",\n    \"expirationDate\" : \"2019-09-30\"\n  }, {\n    \"id\" : \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n    \"originatorAccount\" : {\n      \"name\" : \"Shared Current\",\n      \"identification\" : \"0256108944\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Checks stolen\",\n    \"status\" : \"ACCEPTED\",\n    \"checkNumberRange\" : {\n      \"firstNumber\" : \"10000001337900112345\",\n      \"lastNumber\" : \"10000001337900112355\"\n    },\n    \"dateOfRequest\" : \"2019-09-30T16:00:00.000Z\",\n    \"expirationDate\" : \"2019-10-07\"\n  }, {\n    \"id\" : \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n    \"originatorAccount\" : {\n      \"name\" : \"Main Checking Current\",\n      \"identification\" : \"0256108963\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Insufficient funds\",\n    \"status\" : \"PENDING\",\n    \"check\" : {\n      \"number\" : \"10000001337900112344\",\n      \"amount\" : {\n        \"currencyCode\" : \"USD\",\n        \"amount\" : \"913.32\"\n      },\n      \"payeeName\" : \"Jack S. P. Arrow\",\n      \"dateIssued\" : \"2018-10-18\"\n    },\n    \"dateOfRequest\" : \"2019-10-24T12:00:00.000Z\",\n    \"expirationDate\" : \"2019-10-30\"\n  } ],\n  \"totalStopChecks\" : 3\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/stop-checks\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"stopCheck\" : {\n    \"id\" : \"cb881630-0860-4d2b-b0e1-ff288c531b91\",\n    \"originatorAccount\" : {\n      \"name\" : \"Main Current\",\n      \"identification\" : \"0256108927\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Invalid name\",\n    \"status\" : \"REJECTED\",\n    \"check\" : {\n      \"number\" : \"10000001337900112340\"\n    },\n    \"dateOfRequest\" : \"2019-09-24T12:00:00.000Z\",\n    \"expirationDate\" : \"2019-09-30\"\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"stopCheck\" : {\n    \"id\" : \"b60a8955-1523-429d-bdbe-905d95225a9c\",\n    \"originatorAccount\" : {\n      \"name\" : \"Main Checking Current\",\n      \"identification\" : \"0256108963\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Insufficient funds\",\n    \"status\" : \"PENDING\",\n    \"check\" : {\n      \"number\" : \"10000001337900112344\",\n      \"amount\" : {\n        \"currencyCode\" : \"USD\",\n        \"amount\" : \"913.32\"\n      },\n      \"payeeName\" : \"Jack S. P. Arrow\",\n      \"dateIssued\" : \"2018-10-18\"\n    },\n    \"dateOfRequest\" : \"2019-10-24T12:00:00.000Z\",\n    \"expirationDate\" : \"2019-10-30\"\n  }\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"stopCheck\" : {\n    \"id\" : \"d201e455-d744-44e5-8fc6-458be1cc99e7\",\n    \"originatorAccount\" : {\n      \"name\" : \"Shared Current\",\n      \"identification\" : \"0256108944\",\n      \"schemeName\" : \"BBAN\"\n    },\n    \"reason\" : \"Checks stolen\",\n    \"status\" : \"ACCEPTED\",\n    \"checkNumberRange\" : {\n      \"firstNumber\" : \"10000001337900112345\",\n      \"lastNumber\" : \"10000001337900112355\"\n    },\n    \"dateOfRequest\" : \"2019-09-30T16:00:00.000Z\",\n    \"expirationDate\" : \"2019-10-07\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}