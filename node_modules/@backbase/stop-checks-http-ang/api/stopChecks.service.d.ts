import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { StopCheckPostRequest } from '../model/models';
import { StopCheckPostResponse } from '../model/models';
import { StopChecksGetResponse } from '../model/models';
import { StopChecksConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetStopChecksRequestParams {
    ["from"]?: number;
    ["cursor"]?: string;
    ["size"]?: number;
}
export interface PostStopChecksRequestParams {
    ["stopCheckPostRequest"]?: StopCheckPostRequest;
}
export declare class StopChecksHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: StopChecksConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: StopChecksConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getStopChecks(requestParameters: GetStopChecksRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<StopChecksGetResponse>;
    getStopChecks(requestParameters: GetStopChecksRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<StopChecksGetResponse>>;
    getStopChecks(requestParameters: GetStopChecksRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<StopChecksGetResponse>>;
    getStopChecksUrl(requestParameters: GetStopChecksRequestParams): string;
    postStopChecks(requestParameters: PostStopChecksRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<StopCheckPostResponse>;
    postStopChecks(requestParameters: PostStopChecksRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<StopCheckPostResponse>>;
    postStopChecks(requestParameters: PostStopChecksRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<StopCheckPostResponse>>;
    postStopChecksUrl(requestParameters: PostStopChecksRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<StopChecksHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<StopChecksHttpService>;
}
