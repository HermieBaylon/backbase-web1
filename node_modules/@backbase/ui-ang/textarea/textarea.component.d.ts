import { ChangeDetectorRef } from '@angular/core';
import { InputBaseComponent } from '@backbase/ui-ang/base-classes';
import { NgControl } from '@angular/forms';
import { DomAttributesService } from '@backbase/ui-ang/services';
import { DeprecationsService } from '@backbase/foundation-ang/future';
import * as i0 from "@angular/core";
/**
 * @name TextareaComponent
 *
 * @a11y Current component provide option to pass needed accessibility
 * attributes. You need to take care of properties that are required in your case :
 *  - role
 *  - aria-activedescendant
 *  - aria-describedby
 *  - aria-expanded
 *  - aria-invalid
 *  - aria-label
 *  - aria-labelledby
 *  - aria-owns
 *
 * @description
 * Component that displays a text input.
 */
export declare class TextareaComponent extends InputBaseComponent {
    protected readonly cd: ChangeDetectorRef;
    private domAttributesService;
    parentFormControl: NgControl;
    protected readonly deprecationsService: DeprecationsService;
    /**
     * Number of rows
     */
    rows: number | undefined;
    /**
     * Number of columns
     */
    cols: number | undefined;
    /**
     * The placeholder for the text input. Defaults to an empty string;
     */
    placeholder: string;
    /**
     * The maxLength for the text input.
     */
    maxLength: number | undefined;
    /**
     * The minLength for the text input.
     */
    minLength: number | undefined;
    /**
     * Whether the text input is readonly.
     */
    readonly: boolean;
    /**
     * Shows character counter based on `maxLength`
     */
    showCharCounter: boolean;
    /**
     * Indicates how the control wraps text
     */
    wrap: ('soft' | 'hard') | undefined;
    charCounterId: string;
    /**
     * Utility function for use in template
     */
    idListAttr: (...tokens: any[]) => string | undefined;
    constructor(cd: ChangeDetectorRef, domAttributesService: DomAttributesService, parentFormControl: NgControl, deprecationsService: DeprecationsService);
    static ɵfac: i0.ɵɵFactoryDeclaration<TextareaComponent, [null, null, { optional: true; self: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TextareaComponent, "bb-textarea-ui", never, { "rows": "rows"; "cols": "cols"; "placeholder": "placeholder"; "maxLength": "maxLength"; "minLength": "minLength"; "readonly": "readonly"; "showCharCounter": "showCharCounter"; "wrap": "wrap"; }, {}, never, never>;
}
