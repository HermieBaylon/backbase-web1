import { AfterViewInit, ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { ButtonComponent } from '@backbase/ui-ang/button';
import * as i0 from "@angular/core";
export interface LoadMoreParams {
    from: number;
}
/**
 * @name LoadButtonComponent
 *
 * @description
 * Component that displays a button with integrated loading indicator.
 * The component counts the next page(from) param. Set enable/disable and loading's delay states
 * of component depend on incoming parametrs.
 */
export declare class LoadButtonComponent extends ButtonComponent implements AfterViewInit {
    private readonly elementRef;
    /**
     * This Boolean attribute indicates if loading indicator should be shown instead of button content
     */
    isLoading: boolean;
    /**
     * The page to list from
     */
    from: number;
    /**
     * The number of results per page
     */
    size: number;
    /**
     * The type of the button
     */
    circle: boolean;
    /**
     * The total item count
     */
    totalCount: number;
    /**
     * This emits new load more params to parent component
     */
    paramChange: EventEmitter<LoadMoreParams>;
    buttonComponent: ElementRef | undefined;
    constructor(elementRef: ElementRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    isLoadMore(): boolean;
    hasMore(): boolean;
    onLoadMore(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LoadButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LoadButtonComponent, "bb-load-button-ui", never, { "isLoading": "isLoading"; "from": "from"; "size": "size"; "circle": "circle"; "totalCount": "totalCount"; }, { "paramChange": "paramChange"; }, never, ["*"]>;
}
