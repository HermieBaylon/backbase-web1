import { EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @name PaginatorComponent
 *
 * @description
 * A component that displays page numbers and allows to customize them in several ways.
 */
export declare class PaginatorComponent {
    /**
     * The current page.
     *
     * bb-paginator-ui is 0-indexed, but ngb-pagination is 1-indexed.  Correct inputs by adding 1.
     */
    page: number;
    /**
     * If `true`, the "First" and "Last" page links are shown.
     */
    boundaryLinks: boolean;
    /**
     * If `true`, the "Next" and "Previous" page links are shown.
     */
    directionLinks: boolean;
    /**
     * The number of items in your paginated collection.
     *
     * Note, that this is not the number of pages. Page numbers are calculated dynamically based on
     * `totalItems` and `itemsPerPage`.
     */
    totalItems: number;
    /**
     * The number of items per page.
     */
    itemsPerPage: number;
    /**
     * The maximum number of pages to display.
     */
    maxNavPages: number;
    /**
     * An event fired when the page is changed. Will fire only if collection size is set and all values are valid.
     *
     * Event payload is the number of the newly selected page.
     *
     * bb-paginator-ui is 0-indexed, but ngb-pagination is 1-indexed. Correct outputs by subtracting 1.
     */
    pageChange: EventEmitter<number>;
    onPageChange(page: number): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PaginatorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PaginatorComponent, "bb-pagination-ui", never, { "page": "page"; "boundaryLinks": "boundaryLinks"; "directionLinks": "directionLinks"; "totalItems": "totalItems"; "itemsPerPage": "itemsPerPage"; "maxNavPages": "maxNavPages"; }, { "pageChange": "pageChange"; }, never, never>;
}
