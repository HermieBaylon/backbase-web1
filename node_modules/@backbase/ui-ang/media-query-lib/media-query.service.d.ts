import { NgZone } from '@angular/core';
import { Observable } from 'rxjs';
import { CssVariablesService } from '@backbase/ui-ang/css-variables-lib';
import * as i0 from "@angular/core";
export declare type MediaBreakpoints = 'xs' | 'sm' | 'md' | 'lg' | 'xl';
/**
 * @name MediaQueryService
 *
 * @dynamic (to suppress error with resolving Document type during compilation)
 *
 * @description
 * MediaQueryService is a utility for evaluating media queries and reacting to their changing.
 *
 * @example
 * import { MediaQueryService } from '@backbase/foundation-ang/ui';
 *
 * @Component({...})
 * class MyComponent {
 *
 *   constructor(private readonly mediaQueryService: MediaQueryService) {}
 *
 *   // with standard grid breakpoint
 *   readonly isStandardMdMedia$ = this.mediaQueryService.isMediaBreakpointMatches('max-width', 'md');
 *   // custom value
 *   readonly isCustomMedia$ = this.mediaQueryService.isMediaBreakpointMatches('max-width', 500);
 */
export declare class MediaQueryService {
    private readonly document;
    private readonly cssVariablesService;
    private readonly ngZone;
    constructor(document: Document, cssVariablesService: CssVariablesService, ngZone: NgZone);
    /**
     * Observe media changes for current window.
     *
     * @param value - breakpoint value (could be custom number/standard grid breakpoint)
     * @param type - breakpoint type
     */
    isMediaBreakpointMatches(type: 'max-width' | 'min-width', value: MediaBreakpoints | number): Observable<boolean>;
    private getMediaBreakpoints;
    static ɵfac: i0.ɵɵFactoryDeclaration<MediaQueryService, [null, { optional: true; }, null]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<MediaQueryService>;
}
