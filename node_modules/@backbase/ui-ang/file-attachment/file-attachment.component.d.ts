import { EventEmitter, OnInit, Renderer2 } from '@angular/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export interface FileSize {
    value: number;
    unit: string;
}
/**
 * @name FileAttachmentComponent
 *
 * @description
 * Component displays file attachment.
 *
 * @dynamic (to suppress error with resolving statics declarations during compilation)
 */
export declare class FileAttachmentComponent implements OnInit {
    private readonly document;
    private readonly renderer;
    /**
     * Set name (required).
     */
    set name(value: string | undefined);
    /**
     * Get name.
     */
    get name(): string | undefined;
    /**
     * Set file size (required).
     */
    set size(value: number | string | undefined);
    /**
     * Get file size in information units (Bytes, Kbs, etc.).
     */
    get sizeInUnits(): FileSize | undefined;
    /**
     * Set file content (required if disabled property is not set to true).
     */
    set fileContent(value: Observable<ArrayBuffer> | undefined);
    /**
     * Get file content.
     */
    get fileContent(): Observable<ArrayBuffer> | undefined;
    /**
     * Loading indicator flag. Defaults to false.
     */
    loading: boolean;
    /**
     * Show delete button flag. Defaults to false.
     */
    deletable: boolean;
    /**
     * Disabled state flag. Defaults to false.
     */
    disabled: boolean;
    /**
     * The flag to indicate whether the file-attachment should fill the container that it is in. Defaults to 'false'.
     */
    block: boolean;
    /**
     * Event emitted on delete button click.
     */
    delete: EventEmitter<void>;
    /**
     * File type which is determined by file extension. Defaults to 'unknown'.
     */
    fileType: string;
    private _sizeInUnits;
    private _name;
    private _fileContent;
    constructor(document: Document, renderer: Renderer2);
    ngOnInit(): void;
    /**
     * Download attachment method.
     *
     * @param $event Download button click event
     */
    onDownload($event: Event): void;
    /**
     * Delete attachment event emitter.
     *
     * @param event Delete button click event.
     */
    onDelete(event: MouseEvent): void;
    private getFileType;
    private formatBytes;
    static ɵfac: i0.ɵɵFactoryDeclaration<FileAttachmentComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FileAttachmentComponent, "bb-file-attachment-ui", never, { "name": "name"; "size": "size"; "fileContent": "fileContent"; "loading": "loading"; "deletable": "deletable"; "disabled": "disabled"; "block": "block"; }, { "delete": "delete"; }, never, never>;
}
