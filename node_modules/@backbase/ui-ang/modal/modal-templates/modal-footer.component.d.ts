import { EventEmitter, TemplateRef } from '@angular/core';
import { ModalComponent } from '../modal.component';
import * as i0 from "@angular/core";
export declare class CustomModalFooterDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomModalFooterDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomModalFooterDirective, "ng-template[bbCustomModalFooter]", never, {}, {}, never>;
}
export declare class ModalFooterComponent {
    private readonly modal;
    customModalFooter: CustomModalFooterDirective | undefined;
    readonly hostRef: ModalFooterComponent;
    constructor(modal: ModalComponent);
    /**
     * The text of the confirm button.
     */
    confirmText: string | undefined;
    /**
     * The text of the cancel button.
     */
    cancelText: string | undefined;
    /**
     * The event that's fired after confirm button is pressed. Can be used with (click)="dialogRef.onConfirm()"
     * where dialogRef is a templateRef on <bb-dialog-ui #dialogRef />
     */
    confirm: EventEmitter<any>;
    /**
     * The event that's fired after cancel button is pressed. Can be used with (click)="dialogRef.onCancel()"
     * where dialogRef is a templateRef on <bb-dialog-ui #dialogRef />
     */
    cancel: EventEmitter<any>;
    onCancel($event?: any): void;
    onConfirm($event?: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ModalFooterComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ModalFooterComponent, "bb-modal-footer-ui", never, { "confirmText": "confirmText"; "cancelText": "cancelText"; }, { "confirm": "confirm"; "cancel": "cancel"; }, ["customModalFooter"], never>;
}
