import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @name InputRadioComponent
 *
 * @a11y Current component provide option to pass needed accessibility
 * attributes. You need to take care of properties that are required in your case :
 *  - role
 *  - aria-activedescendant
 *  - aria-describedby
 *  - aria-expanded
 *  - aria-invalid
 *  - aria-label
 *  - aria-labelledby
 *  - aria-owns
 *
 * @description
 * Component that represents a single radio that is part of the radio group component.
 */
export declare class InputRadioComponent {
    /**
     * Custom label template
     */
    labelTemplate: TemplateRef<any> | undefined;
    /**
     * Label template context
     */
    labelTemplateContext: any | undefined;
    /**
     * The value of the native radio element
     */
    value: string | undefined;
    /**
     * The label of the radio item
     */
    label: string | undefined;
    /**
     * Accessible label when control does not need to render label tag.
     */
    ariaLabel: string | undefined;
    /**
     * The 'aria-labelledby' attribute for the radio button
     */
    ariaLabelledby: string | undefined;
    /**
     * The 'aria-describedby' attribute for the radio button
     */
    ariaDescribedby: string | undefined;
    role: string | undefined;
    ariaActivedescendant: string | undefined;
    ariaExpanded: string | undefined;
    ariaInvalid: string | undefined;
    ariaOwns: string | undefined;
    disabled: boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<InputRadioComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<InputRadioComponent, "bb-input-radio-ui", never, { "labelTemplate": "labelTemplate"; "labelTemplateContext": "labelTemplateContext"; "value": "value"; "label": "label"; "ariaLabel": "aria-label"; "ariaLabelledby": "aria-labelledby"; "ariaDescribedby": "aria-describedby"; "role": "role"; "ariaActivedescendant": "aria-activedescendant"; "ariaExpanded": "aria-expanded"; "ariaInvalid": "aria-invalid"; "ariaOwns": "aria-owns"; "disabled": "disabled"; }, {}, never, never>;
}
