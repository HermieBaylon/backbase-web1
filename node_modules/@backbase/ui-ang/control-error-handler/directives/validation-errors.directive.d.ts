import { ComponentFactoryResolver, ElementRef, OnDestroy, OnInit, Renderer2, Type, ViewContainerRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { ValidationErrorComponentModel, PlainObject } from '../control-error-handler.const';
import { FormSubmitDirective } from './form-submit.directive';
import { ControlErrorContainerDirective } from './control-error-container.directive';
import * as i0 from "@angular/core";
export declare class ValidationErrorsDirective implements OnInit, OnDestroy {
    private readonly form;
    private readonly controlErrorContainer;
    private readonly control;
    private readonly errors;
    private readonly errorTmpl;
    private readonly resolver;
    private readonly vcr;
    private readonly hostElem;
    private readonly renderer;
    private readonly onBlur;
    private readonly destroy;
    private readonly submit;
    private readonly ariaAttributeName;
    private ref;
    /**
     * Custom error labels object.
     *
     * Use only if you need to set custom error labels for specific control.
     * To specify custom error labels for entire form use BB_VALIDATION_ERRORS InjectionToken.
     *
     * @default `BB_VALIDATION_ERRORS`.
     */
    errorLabels: PlainObject<string>;
    /**
     * Custom function to specify when errors should be shown.
     * By default will be shown when control is invalid.
     */
    showError: () => boolean;
    /**
     * Selector to indicate the control in which `aria-describedby` should be set.
     */
    inputSelector: string;
    /**
     * Input label
     */
    label: string | null;
    /**
     * Custom component for error message.
     *
     * Use only if you need to set custom component for specific control.
     * To specify custom component for all form errors use BB_DYNAMIC_ERROR_TMPL InjectionToken.
     *
     * @default `BB_DYNAMIC_ERROR_TMPL`.
     */
    errorComponent: Type<ValidationErrorComponentModel>;
    onElBlur(): void;
    constructor(form: FormSubmitDirective, controlErrorContainer: ControlErrorContainerDirective, control: NgControl, errors: PlainObject<string>, errorTmpl: Type<ValidationErrorComponentModel>, resolver: ComponentFactoryResolver, vcr: ViewContainerRef, hostElem: ElementRef<HTMLElement>, renderer: Renderer2);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private manageErrors;
    private setDescribedById;
    private removeErrorId;
    private showErrorDefault;
    private setError;
    static ɵfac: i0.ɵɵFactoryDeclaration<ValidationErrorsDirective, [{ optional: true; host: true; }, { optional: true; }, { self: true; }, null, null, null, null, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ValidationErrorsDirective, "[bbFormControl]", never, { "errorLabels": "errorLabels"; "showError": "showError"; "inputSelector": "inputSelector"; "label": "label"; "errorComponent": "errorComponent"; }, {}, never>;
}
