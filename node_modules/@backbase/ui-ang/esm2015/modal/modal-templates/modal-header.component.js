import { Component, ContentChild, Directive, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/services";
import * as i2 from "@angular/common";
export class CustomModalHeaderDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
CustomModalHeaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomModalHeaderDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
CustomModalHeaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomModalHeaderDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbCustomModalHeader]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class ModalHeaderComponent {
    constructor(domAttrService) {
        this.domAttrService = domAttrService;
        this.hostRef = this;
        /**
         * Title text for the modal header. Defaults to empty string.
         */
        this.title = '';
        /**
         * The event emitted when the modal header close button is clicked.
         */
        this.close = new EventEmitter();
        this.showClose = false;
        this.headerId = this.domAttrService.generateId();
    }
    ngOnInit() {
        this.showClose = this.close.observers.length > 0;
    }
    onClose() {
        this.close.emit();
    }
}
ModalHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModalHeaderComponent, deps: [{ token: i1.DomAttributesService }], target: i0.ɵɵFactoryTarget.Component });
ModalHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: { title: "title" }, outputs: { close: "close" }, queries: [{ propertyName: "customModalHeader", first: true, predicate: CustomModalHeaderDirective, descendants: true, static: true }], ngImport: i0, template: "<div class=\"modal-header\" [attr.id]=\"headerId\" [attr.data-role]=\"'modal-header'\">\n  <ng-container *ngIf=\"customModalHeader; else bbDefaultModalHeader\">\n    <ng-container *ngTemplateOutlet=\"customModalHeader?.templateRef; context: hostRef\"> </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #bbDefaultModalHeader>\n  <h3 class=\"modal-title\" [innerText]=\"title\"></h3>\n  <button *ngIf=\"showClose\" class=\"btn btn-unstyled\" (click)=\"onClose()\">\n    <i class=\"bicon bicon-clear bb-icon bb-icon--clear\" aria-hidden=\"true\"></i>\n  </button>\n</ng-template>\n", directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModalHeaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-modal-header-ui',
                    templateUrl: './modal-header.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.DomAttributesService }]; }, propDecorators: { customModalHeader: [{
                type: ContentChild,
                args: [CustomModalHeaderDirective, { static: true }]
            }], title: [{
                type: Input
            }], close: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL21vZGFsL21vZGFsLXRlbXBsYXRlcy9tb2RhbC1oZWFkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvbW9kYWwvbW9kYWwtdGVtcGxhdGVzL21vZGFsLWhlYWRlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQWUsTUFBTSxlQUFlLENBQUM7Ozs7QUFJckgsTUFBTSxPQUFPLDBCQUEwQjtJQUNyQyxZQUFtQixXQUE2QjtRQUE3QixnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7SUFBRyxDQUFDOzt3SEFEekMsMEJBQTBCOzRHQUExQiwwQkFBMEI7NEZBQTFCLDBCQUEwQjtrQkFEdEMsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSxrQ0FBa0MsRUFBRTs7QUFTM0QsTUFBTSxPQUFPLG9CQUFvQjtJQWlCL0IsWUFBNkIsY0FBb0M7UUFBcEMsbUJBQWMsR0FBZCxjQUFjLENBQXNCO1FBZHhELFlBQU8sR0FBeUIsSUFBSSxDQUFDO1FBQzlDOztXQUVHO1FBQ00sVUFBSyxHQUFHLEVBQUUsQ0FBQztRQUNwQjs7V0FFRztRQUNPLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRXJDLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFFRixhQUFRLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUVRLENBQUM7SUFFckUsUUFBUTtRQUNOLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEIsQ0FBQzs7a0hBekJVLG9CQUFvQjtzR0FBcEIsb0JBQW9CLGtLQUNqQiwwQkFBMEIsOERDYjFDLDZrQkFZQTs0RkRBYSxvQkFBb0I7a0JBSmhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsV0FBVyxFQUFFLCtCQUErQjtpQkFDN0M7MkdBRTZELGlCQUFpQjtzQkFBNUUsWUFBWTt1QkFBQywwQkFBMEIsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Z0JBTWpELEtBQUs7c0JBQWIsS0FBSztnQkFJSSxLQUFLO3NCQUFkLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbUF0dHJpYnV0ZXNTZXJ2aWNlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9zZXJ2aWNlcyc7XG5cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ25nLXRlbXBsYXRlW2JiQ3VzdG9tTW9kYWxIZWFkZXJdJyB9KVxuZXhwb3J0IGNsYXNzIEN1c3RvbU1vZGFsSGVhZGVyRGlyZWN0aXZlIHtcbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1tb2RhbC1oZWFkZXItdWknLFxuICB0ZW1wbGF0ZVVybDogJy4vbW9kYWwtaGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgTW9kYWxIZWFkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAQ29udGVudENoaWxkKEN1c3RvbU1vZGFsSGVhZGVyRGlyZWN0aXZlLCB7IHN0YXRpYzogdHJ1ZSB9KSBjdXN0b21Nb2RhbEhlYWRlcjogQ3VzdG9tTW9kYWxIZWFkZXJEaXJlY3RpdmUgfCB1bmRlZmluZWQ7XG5cbiAgcmVhZG9ubHkgaG9zdFJlZjogTW9kYWxIZWFkZXJDb21wb25lbnQgPSB0aGlzO1xuICAvKipcbiAgICogVGl0bGUgdGV4dCBmb3IgdGhlIG1vZGFsIGhlYWRlci4gRGVmYXVsdHMgdG8gZW1wdHkgc3RyaW5nLlxuICAgKi9cbiAgQElucHV0KCkgdGl0bGUgPSAnJztcbiAgLyoqXG4gICAqIFRoZSBldmVudCBlbWl0dGVkIHdoZW4gdGhlIG1vZGFsIGhlYWRlciBjbG9zZSBidXR0b24gaXMgY2xpY2tlZC5cbiAgICovXG4gIEBPdXRwdXQoKSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBzaG93Q2xvc2UgPSBmYWxzZTtcblxuICBwdWJsaWMgcmVhZG9ubHkgaGVhZGVySWQgPSB0aGlzLmRvbUF0dHJTZXJ2aWNlLmdlbmVyYXRlSWQoKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGRvbUF0dHJTZXJ2aWNlOiBEb21BdHRyaWJ1dGVzU2VydmljZSkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnNob3dDbG9zZSA9IHRoaXMuY2xvc2Uub2JzZXJ2ZXJzLmxlbmd0aCA+IDA7XG4gIH1cblxuICBvbkNsb3NlKCkge1xuICAgIHRoaXMuY2xvc2UuZW1pdCgpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyXCIgW2F0dHIuaWRdPVwiaGVhZGVySWRcIiBbYXR0ci5kYXRhLXJvbGVdPVwiJ21vZGFsLWhlYWRlcidcIj5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImN1c3RvbU1vZGFsSGVhZGVyOyBlbHNlIGJiRGVmYXVsdE1vZGFsSGVhZGVyXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImN1c3RvbU1vZGFsSGVhZGVyPy50ZW1wbGF0ZVJlZjsgY29udGV4dDogaG9zdFJlZlwiPiA8L25nLWNvbnRhaW5lcj5cbiAgPC9uZy1jb250YWluZXI+XG48L2Rpdj5cblxuPG5nLXRlbXBsYXRlICNiYkRlZmF1bHRNb2RhbEhlYWRlcj5cbiAgPGgzIGNsYXNzPVwibW9kYWwtdGl0bGVcIiBbaW5uZXJUZXh0XT1cInRpdGxlXCI+PC9oMz5cbiAgPGJ1dHRvbiAqbmdJZj1cInNob3dDbG9zZVwiIGNsYXNzPVwiYnRuIGJ0bi11bnN0eWxlZFwiIChjbGljayk9XCJvbkNsb3NlKClcIj5cbiAgICA8aSBjbGFzcz1cImJpY29uIGJpY29uLWNsZWFyIGJiLWljb24gYmItaWNvbi0tY2xlYXJcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+XG4gIDwvYnV0dG9uPlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==