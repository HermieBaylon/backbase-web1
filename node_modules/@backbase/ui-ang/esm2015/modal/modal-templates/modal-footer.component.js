import { Component, ContentChild, Directive, EventEmitter, Input, Optional, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../modal.component";
import * as i2 from "@angular/common";
export class CustomModalFooterDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
CustomModalFooterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomModalFooterDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
CustomModalFooterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomModalFooterDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbCustomModalFooter]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class ModalFooterComponent {
    constructor(modal) {
        this.modal = modal;
        this.hostRef = this;
        /**
         * The event that's fired after confirm button is pressed. Can be used with (click)="dialogRef.onConfirm()"
         * where dialogRef is a templateRef on <bb-dialog-ui #dialogRef />
         */
        this.confirm = new EventEmitter();
        /**
         * The event that's fired after cancel button is pressed. Can be used with (click)="dialogRef.onCancel()"
         * where dialogRef is a templateRef on <bb-dialog-ui #dialogRef />
         */
        this.cancel = new EventEmitter();
    }
    onCancel($event) {
        if (this.modal) {
            this.modal.dismissModal($event);
        }
        else {
            this.cancel.emit($event);
        }
    }
    onConfirm($event) {
        if (this.modal) {
            this.modal.closeModal($event);
        }
        else {
            this.confirm.emit($event);
        }
    }
}
ModalFooterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModalFooterComponent, deps: [{ token: i1.ModalComponent, optional: true }], target: i0.ɵɵFactoryTarget.Component });
ModalFooterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: { confirmText: "confirmText", cancelText: "cancelText" }, outputs: { confirm: "confirm", cancel: "cancel" }, queries: [{ propertyName: "customModalFooter", first: true, predicate: CustomModalFooterDirective, descendants: true, static: true }], ngImport: i0, template: "<div class=\"modal-footer\" [attr.data-role]=\"'modal-footer'\">\n  <ng-container *ngIf=\"customModalFooter; else bbDefaultModalFooter\">\n    <ng-container *ngTemplateOutlet=\"customModalFooter?.templateRef; context: hostRef\"> </ng-container>\n  </ng-container>\n</div>\n\n<ng-template #bbDefaultModalFooter>\n  <div class=\"bb-button-bar\">\n    <button\n      (click)=\"onConfirm()\"\n      class=\"bb-button-bar__button btn btn-primary btn-md\"\n      type=\"button\"\n      data-role=\"confirm\"\n    >\n      <ng-container\n        *ngIf=\"!confirmText\"\n        i18n=\"Accept|Agree with the message presented in the dialog @@bb-dialog-ui.yes\"\n      >\n        Confirm\n      </ng-container>\n      <ng-container *ngIf=\"confirmText\">{{ confirmText }}</ng-container>\n    </button>\n    <button\n      (click)=\"onCancel()\"\n      class=\"bb-button-bar__button btn btn-secondary btn-md\"\n      type=\"button\"\n      data-role=\"cancel\"\n    >\n      <ng-container\n        *ngIf=\"!cancelText\"\n        i18n=\"Reject|Do not agree with the message presented in the dialog @@bb-dialog-ui.no\"\n      >\n        Cancel\n      </ng-container>\n      <ng-container *ngIf=\"cancelText\">{{ cancelText }}</ng-container>\n    </button>\n  </div>\n</ng-template>\n", directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModalFooterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-modal-footer-ui',
                    templateUrl: './modal-footer.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.ModalComponent, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { customModalFooter: [{
                type: ContentChild,
                args: [CustomModalFooterDirective, { static: true }]
            }], confirmText: [{
                type: Input
            }], cancelText: [{
                type: Input
            }], confirm: [{
                type: Output
            }], cancel: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtZm9vdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL21vZGFsL21vZGFsLXRlbXBsYXRlcy9tb2RhbC1mb290ZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvbW9kYWwvbW9kYWwtdGVtcGxhdGVzL21vZGFsLWZvb3Rlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFlLE1BQU0sZUFBZSxDQUFDOzs7O0FBSXZILE1BQU0sT0FBTywwQkFBMEI7SUFDckMsWUFBbUIsV0FBNkI7UUFBN0IsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO0lBQUcsQ0FBQzs7d0hBRHpDLDBCQUEwQjs0R0FBMUIsMEJBQTBCOzRGQUExQiwwQkFBMEI7a0JBRHRDLFNBQVM7bUJBQUMsRUFBRSxRQUFRLEVBQUUsa0NBQWtDLEVBQUU7O0FBUzNELE1BQU0sT0FBTyxvQkFBb0I7SUFLL0IsWUFBeUMsS0FBcUI7UUFBckIsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFGckQsWUFBTyxHQUF5QixJQUFJLENBQUM7UUFXOUM7OztXQUdHO1FBQ08sWUFBTyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDdkM7OztXQUdHO1FBQ08sV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFsQjJCLENBQUM7SUFvQmxFLFFBQVEsQ0FBQyxNQUFZO1FBQ25CLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2pDO2FBQU07WUFDTCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMxQjtJQUNILENBQUM7SUFFRCxTQUFTLENBQUMsTUFBWTtRQUNwQixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvQjthQUFNO1lBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDM0I7SUFDSCxDQUFDOztrSEF2Q1Usb0JBQW9CO3NHQUFwQixvQkFBb0IsOE5BQ2pCLDBCQUEwQiw4RENiMUMseXZDQXNDQTs0RkQxQmEsb0JBQW9CO2tCQUpoQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFdBQVcsRUFBRSwrQkFBK0I7aUJBQzdDOzswQkFNYyxRQUFROzRDQUp1QyxpQkFBaUI7c0JBQTVFLFlBQVk7dUJBQUMsMEJBQTBCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO2dCQVFqRCxXQUFXO3NCQUFuQixLQUFLO2dCQUlHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBS0ksT0FBTztzQkFBaEIsTUFBTTtnQkFLRyxNQUFNO3NCQUFmLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPcHRpb25hbCwgT3V0cHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTW9kYWxDb21wb25lbnQgfSBmcm9tICcuLi9tb2RhbC5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICduZy10ZW1wbGF0ZVtiYkN1c3RvbU1vZGFsRm9vdGVyXScgfSlcbmV4cG9ydCBjbGFzcyBDdXN0b21Nb2RhbEZvb3RlckRpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pikge31cbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItbW9kYWwtZm9vdGVyLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21vZGFsLWZvb3Rlci5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIE1vZGFsRm9vdGVyQ29tcG9uZW50IHtcbiAgQENvbnRlbnRDaGlsZChDdXN0b21Nb2RhbEZvb3RlckRpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSkgY3VzdG9tTW9kYWxGb290ZXI6IEN1c3RvbU1vZGFsRm9vdGVyRGlyZWN0aXZlIHwgdW5kZWZpbmVkO1xuXG4gIHJlYWRvbmx5IGhvc3RSZWY6IE1vZGFsRm9vdGVyQ29tcG9uZW50ID0gdGhpcztcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIHJlYWRvbmx5IG1vZGFsOiBNb2RhbENvbXBvbmVudCkge31cbiAgLyoqXG4gICAqIFRoZSB0ZXh0IG9mIHRoZSBjb25maXJtIGJ1dHRvbi5cbiAgICovXG4gIEBJbnB1dCgpIGNvbmZpcm1UZXh0OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBUaGUgdGV4dCBvZiB0aGUgY2FuY2VsIGJ1dHRvbi5cbiAgICovXG4gIEBJbnB1dCgpIGNhbmNlbFRleHQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFRoZSBldmVudCB0aGF0J3MgZmlyZWQgYWZ0ZXIgY29uZmlybSBidXR0b24gaXMgcHJlc3NlZC4gQ2FuIGJlIHVzZWQgd2l0aCAoY2xpY2spPVwiZGlhbG9nUmVmLm9uQ29uZmlybSgpXCJcbiAgICogd2hlcmUgZGlhbG9nUmVmIGlzIGEgdGVtcGxhdGVSZWYgb24gPGJiLWRpYWxvZy11aSAjZGlhbG9nUmVmIC8+XG4gICAqL1xuICBAT3V0cHV0KCkgY29uZmlybSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgLyoqXG4gICAqIFRoZSBldmVudCB0aGF0J3MgZmlyZWQgYWZ0ZXIgY2FuY2VsIGJ1dHRvbiBpcyBwcmVzc2VkLiBDYW4gYmUgdXNlZCB3aXRoIChjbGljayk9XCJkaWFsb2dSZWYub25DYW5jZWwoKVwiXG4gICAqIHdoZXJlIGRpYWxvZ1JlZiBpcyBhIHRlbXBsYXRlUmVmIG9uIDxiYi1kaWFsb2ctdWkgI2RpYWxvZ1JlZiAvPlxuICAgKi9cbiAgQE91dHB1dCgpIGNhbmNlbCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBvbkNhbmNlbCgkZXZlbnQ/OiBhbnkpIHtcbiAgICBpZiAodGhpcy5tb2RhbCkge1xuICAgICAgdGhpcy5tb2RhbC5kaXNtaXNzTW9kYWwoJGV2ZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jYW5jZWwuZW1pdCgkZXZlbnQpO1xuICAgIH1cbiAgfVxuXG4gIG9uQ29uZmlybSgkZXZlbnQ/OiBhbnkpIHtcbiAgICBpZiAodGhpcy5tb2RhbCkge1xuICAgICAgdGhpcy5tb2RhbC5jbG9zZU1vZGFsKCRldmVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY29uZmlybS5lbWl0KCRldmVudCk7XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwibW9kYWwtZm9vdGVyXCIgW2F0dHIuZGF0YS1yb2xlXT1cIidtb2RhbC1mb290ZXInXCI+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJjdXN0b21Nb2RhbEZvb3RlcjsgZWxzZSBiYkRlZmF1bHRNb2RhbEZvb3RlclwiPlxuICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJjdXN0b21Nb2RhbEZvb3Rlcj8udGVtcGxhdGVSZWY7IGNvbnRleHQ6IGhvc3RSZWZcIj4gPC9uZy1jb250YWluZXI+XG4gIDwvbmctY29udGFpbmVyPlxuPC9kaXY+XG5cbjxuZy10ZW1wbGF0ZSAjYmJEZWZhdWx0TW9kYWxGb290ZXI+XG4gIDxkaXYgY2xhc3M9XCJiYi1idXR0b24tYmFyXCI+XG4gICAgPGJ1dHRvblxuICAgICAgKGNsaWNrKT1cIm9uQ29uZmlybSgpXCJcbiAgICAgIGNsYXNzPVwiYmItYnV0dG9uLWJhcl9fYnV0dG9uIGJ0biBidG4tcHJpbWFyeSBidG4tbWRcIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICBkYXRhLXJvbGU9XCJjb25maXJtXCJcbiAgICA+XG4gICAgICA8bmctY29udGFpbmVyXG4gICAgICAgICpuZ0lmPVwiIWNvbmZpcm1UZXh0XCJcbiAgICAgICAgaTE4bj1cIkFjY2VwdHxBZ3JlZSB3aXRoIHRoZSBtZXNzYWdlIHByZXNlbnRlZCBpbiB0aGUgZGlhbG9nIEBAYmItZGlhbG9nLXVpLnllc1wiXG4gICAgICA+XG4gICAgICAgIENvbmZpcm1cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImNvbmZpcm1UZXh0XCI+e3sgY29uZmlybVRleHQgfX08L25nLWNvbnRhaW5lcj5cbiAgICA8L2J1dHRvbj5cbiAgICA8YnV0dG9uXG4gICAgICAoY2xpY2spPVwib25DYW5jZWwoKVwiXG4gICAgICBjbGFzcz1cImJiLWJ1dHRvbi1iYXJfX2J1dHRvbiBidG4gYnRuLXNlY29uZGFyeSBidG4tbWRcIlxuICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICBkYXRhLXJvbGU9XCJjYW5jZWxcIlxuICAgID5cbiAgICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgKm5nSWY9XCIhY2FuY2VsVGV4dFwiXG4gICAgICAgIGkxOG49XCJSZWplY3R8RG8gbm90IGFncmVlIHdpdGggdGhlIG1lc3NhZ2UgcHJlc2VudGVkIGluIHRoZSBkaWFsb2cgQEBiYi1kaWFsb2ctdWkubm9cIlxuICAgICAgPlxuICAgICAgICBDYW5jZWxcbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImNhbmNlbFRleHRcIj57eyBjYW5jZWxUZXh0IH19PC9uZy1jb250YWluZXI+XG4gICAgPC9idXR0b24+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==