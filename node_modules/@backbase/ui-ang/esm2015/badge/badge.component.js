import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * @name BadgeComponent
 *
 * @description
 * Component that displays a badge.
 */
export class BadgeComponent {
    constructor() {
        /**
         * The (background) color of the badge.  Defaults to 'primary'.
         */
        this.color = 'primary';
        /**
         * The abbreviation to show when using circle styling.
         */
        this.abbr = false;
        /**
         * Whether circle styling should be applied.
         */
        this.circle = false;
        /**
         * Whether text wrap styling should be applied.
         */
        this.wrap = false;
    }
    ngOnInit() {
        if (typeof this.text === 'undefined') {
            throw new Error(`"text" input is required in "${this.constructor.name}"`);
        }
    }
}
BadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BadgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeComponent, selector: "bb-badge-ui", inputs: { color: "color", text: "text", abbr: "abbr", circle: "circle", wrap: "wrap", ariaLabel: "ariaLabel" }, ngImport: i0, template: "<span\n  class=\"badge break-word\"\n  [ngClass]=\"[color ? 'badge-' + color : '', circle ? 'badge-pill' : '', wrap ? 'text-wrap' : '']\"\n>\n  <ng-container *ngIf=\"!abbr\">\n    {{ text }}\n  </ng-container>\n  <abbr [attr.aria-label]=\"ariaLabel\" title=\"{{ text }}\" *ngIf=\"abbr\">\n    {{ abbr === true && text ? text[0] : abbr }}\n  </abbr>\n</span>\n", directives: [{ type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-badge-ui',
                    templateUrl: './badge.component.html',
                }]
        }], propDecorators: { color: [{
                type: Input
            }], text: [{
                type: Input
            }], abbr: [{
                type: Input
            }], circle: [{
                type: Input
            }], wrap: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvYmFkZ2UvYmFkZ2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvYmFkZ2UvYmFkZ2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQUl6RDs7Ozs7R0FLRztBQUtILE1BQU0sT0FBTyxjQUFjO0lBSjNCO1FBS0U7O1dBRUc7UUFDTSxVQUFLLEdBQXdCLFNBQVMsQ0FBQztRQUtoRDs7V0FFRztRQUNNLFNBQUksR0FBcUIsS0FBSyxDQUFDO1FBQ3hDOztXQUVHO1FBQ00sV0FBTSxHQUFHLEtBQUssQ0FBQztRQUN4Qjs7V0FFRztRQUNNLFNBQUksR0FBRyxLQUFLLENBQUM7S0FXdkI7SUFMQyxRQUFRO1FBQ04sSUFBSSxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssV0FBVyxFQUFFO1lBQ3BDLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0NBQWdDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztTQUMzRTtJQUNILENBQUM7OzRHQTlCVSxjQUFjO2dHQUFkLGNBQWMsbUtDZDNCLHlXQVdBOzRGREdhLGNBQWM7a0JBSjFCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFdBQVcsRUFBRSx3QkFBd0I7aUJBQ3RDOzhCQUtVLEtBQUs7c0JBQWIsS0FBSztnQkFJRyxJQUFJO3NCQUFaLEtBQUs7Z0JBSUcsSUFBSTtzQkFBWixLQUFLO2dCQUlHLE1BQU07c0JBQWQsS0FBSztnQkFJRyxJQUFJO3NCQUFaLEtBQUs7Z0JBSUcsU0FBUztzQkFBakIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgdHlwZSBCYWRnZUNvbG9yID0gJ3ByaW1hcnknIHwgJ2luZm8nIHwgJ3N1Y2Nlc3MnIHwgJ3dhcm5pbmcnIHwgJ2RhbmdlcicgfCAnc2Vjb25kYXJ5JztcblxuLyoqXG4gKiBAbmFtZSBCYWRnZUNvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29tcG9uZW50IHRoYXQgZGlzcGxheXMgYSBiYWRnZS5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItYmFkZ2UtdWknLFxuICB0ZW1wbGF0ZVVybDogJy4vYmFkZ2UuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBCYWRnZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBUaGUgKGJhY2tncm91bmQpIGNvbG9yIG9mIHRoZSBiYWRnZS4gIERlZmF1bHRzIHRvICdwcmltYXJ5Jy5cbiAgICovXG4gIEBJbnB1dCgpIGNvbG9yOiBCYWRnZUNvbG9yIHwgc3RyaW5nID0gJ3ByaW1hcnknO1xuICAvKipcbiAgICogVGhlIHRleHQgdG8gZGlzcGxheSBpbiB0aGUgYmFkZ2UuXG4gICAqL1xuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBUaGUgYWJicmV2aWF0aW9uIHRvIHNob3cgd2hlbiB1c2luZyBjaXJjbGUgc3R5bGluZy5cbiAgICovXG4gIEBJbnB1dCgpIGFiYnI6IHN0cmluZyB8IGJvb2xlYW4gPSBmYWxzZTtcbiAgLyoqXG4gICAqIFdoZXRoZXIgY2lyY2xlIHN0eWxpbmcgc2hvdWxkIGJlIGFwcGxpZWQuXG4gICAqL1xuICBASW5wdXQoKSBjaXJjbGUgPSBmYWxzZTtcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGV4dCB3cmFwIHN0eWxpbmcgc2hvdWxkIGJlIGFwcGxpZWQuXG4gICAqL1xuICBASW5wdXQoKSB3cmFwID0gZmFsc2U7XG4gIC8qKlxuICAgKiBBcmlhIGxhYmVsIGZvciB0aGUgYmFkZ2VcbiAgICovXG4gIEBJbnB1dCgpIGFyaWFMYWJlbDogc3RyaW5nIHwgdW5kZWZpbmVkO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy50ZXh0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcInRleHRcIiBpbnB1dCBpcyByZXF1aXJlZCBpbiBcIiR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfVwiYCk7XG4gICAgfVxuICB9XG59XG4iLCI8c3BhblxuICBjbGFzcz1cImJhZGdlIGJyZWFrLXdvcmRcIlxuICBbbmdDbGFzc109XCJbY29sb3IgPyAnYmFkZ2UtJyArIGNvbG9yIDogJycsIGNpcmNsZSA/ICdiYWRnZS1waWxsJyA6ICcnLCB3cmFwID8gJ3RleHQtd3JhcCcgOiAnJ11cIlxuPlxuICA8bmctY29udGFpbmVyICpuZ0lmPVwiIWFiYnJcIj5cbiAgICB7eyB0ZXh0IH19XG4gIDwvbmctY29udGFpbmVyPlxuICA8YWJiciBbYXR0ci5hcmlhLWxhYmVsXT1cImFyaWFMYWJlbFwiIHRpdGxlPVwie3sgdGV4dCB9fVwiICpuZ0lmPVwiYWJiclwiPlxuICAgIHt7IGFiYnIgPT09IHRydWUgJiYgdGV4dCA/IHRleHRbMF0gOiBhYmJyIH19XG4gIDwvYWJicj5cbjwvc3Bhbj5cbiJdfQ==