import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * @name BadgeCounterComponent
 *
 * @description
 * Component that displays a counter badge.
 */
export class BadgeCounterComponent {
    constructor() {
        /**
         * The (background) color of the badge. Defaults to 'primary'.
         */
        this.color = 'primary';
        /**
         * The count to show in the badge. Defaults to 0 and badge will be hidden if count equals 0.
         */
        this.count = 0;
        /**
         * The max count value to limit text inside badge. Defaults to 999.
         */
        this.maxCount = 999;
    }
    ngOnChanges() {
        const value = this.maxCount && this.maxCount > 0 && this.count && this.maxCount < this.count ? `${this.maxCount}+` : this.count;
        this.countValue = value ? value.toString() : undefined;
    }
}
BadgeCounterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BadgeCounterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BadgeCounterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeCounterComponent, selector: "bb-badge-counter-ui", inputs: { color: "color", count: "count", maxCount: "maxCount" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"bb-badge-counter\">\n  <span class=\"badge badge-counter\" *ngIf=\"countValue\" [ngClass]=\"[color ? 'badge-counter-' + color : '']\">\n    {{ countValue }}\n  </span>\n</div>\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BadgeCounterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-badge-counter-ui',
                    templateUrl: './badge-counter.component.html',
                }]
        }], propDecorators: { color: [{
                type: Input
            }], count: [{
                type: Input
            }], maxCount: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UtY291bnRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9iYWRnZS1jb3VudGVyL2JhZGdlLWNvdW50ZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvYmFkZ2UtY291bnRlci9iYWRnZS1jb3VudGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDOzs7QUFHNUQ7Ozs7O0dBS0c7QUFLSCxNQUFNLE9BQU8scUJBQXFCO0lBSmxDO1FBS0U7O1dBRUc7UUFDTSxVQUFLLEdBQWUsU0FBUyxDQUFDO1FBQ3ZDOztXQUVHO1FBQ00sVUFBSyxHQUFHLENBQUMsQ0FBQztRQUNuQjs7V0FFRztRQUNNLGFBQVEsR0FBRyxHQUFHLENBQUM7S0FVekI7SUFOQyxXQUFXO1FBQ1QsTUFBTSxLQUFLLEdBQ1QsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFFcEgsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQ3pELENBQUM7O21IQXJCVSxxQkFBcUI7dUdBQXJCLHFCQUFxQixrSkNibEMsZ01BS0E7NEZEUWEscUJBQXFCO2tCQUpqQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFdBQVcsRUFBRSxnQ0FBZ0M7aUJBQzlDOzhCQUtVLEtBQUs7c0JBQWIsS0FBSztnQkFJRyxLQUFLO3NCQUFiLEtBQUs7Z0JBSUcsUUFBUTtzQkFBaEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFkZ2VDb2xvciB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvYmFkZ2UnO1xuXG4vKipcbiAqIEBuYW1lIEJhZGdlQ291bnRlckNvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29tcG9uZW50IHRoYXQgZGlzcGxheXMgYSBjb3VudGVyIGJhZGdlLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1iYWRnZS1jb3VudGVyLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2JhZGdlLWNvdW50ZXIuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBCYWRnZUNvdW50ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAvKipcbiAgICogVGhlIChiYWNrZ3JvdW5kKSBjb2xvciBvZiB0aGUgYmFkZ2UuIERlZmF1bHRzIHRvICdwcmltYXJ5Jy5cbiAgICovXG4gIEBJbnB1dCgpIGNvbG9yOiBCYWRnZUNvbG9yID0gJ3ByaW1hcnknO1xuICAvKipcbiAgICogVGhlIGNvdW50IHRvIHNob3cgaW4gdGhlIGJhZGdlLiBEZWZhdWx0cyB0byAwIGFuZCBiYWRnZSB3aWxsIGJlIGhpZGRlbiBpZiBjb3VudCBlcXVhbHMgMC5cbiAgICovXG4gIEBJbnB1dCgpIGNvdW50ID0gMDtcbiAgLyoqXG4gICAqIFRoZSBtYXggY291bnQgdmFsdWUgdG8gbGltaXQgdGV4dCBpbnNpZGUgYmFkZ2UuIERlZmF1bHRzIHRvIDk5OS5cbiAgICovXG4gIEBJbnB1dCgpIG1heENvdW50ID0gOTk5O1xuXG4gIGNvdW50VmFsdWU6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICBjb25zdCB2YWx1ZSA9XG4gICAgICB0aGlzLm1heENvdW50ICYmIHRoaXMubWF4Q291bnQgPiAwICYmIHRoaXMuY291bnQgJiYgdGhpcy5tYXhDb3VudCA8IHRoaXMuY291bnQgPyBgJHt0aGlzLm1heENvdW50fStgIDogdGhpcy5jb3VudDtcblxuICAgIHRoaXMuY291bnRWYWx1ZSA9IHZhbHVlID8gdmFsdWUudG9TdHJpbmcoKSA6IHVuZGVmaW5lZDtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImJiLWJhZGdlLWNvdW50ZXJcIj5cbiAgPHNwYW4gY2xhc3M9XCJiYWRnZSBiYWRnZS1jb3VudGVyXCIgKm5nSWY9XCJjb3VudFZhbHVlXCIgW25nQ2xhc3NdPVwiW2NvbG9yID8gJ2JhZGdlLWNvdW50ZXItJyArIGNvbG9yIDogJyddXCI+XG4gICAge3sgY291bnRWYWx1ZSB9fVxuICA8L3NwYW4+XG48L2Rpdj5cbiJdfQ==