import { Pipe } from '@angular/core';
import { AsYouType, parsePhoneNumber } from '@backbase/phone-number-lib';
import * as i0 from "@angular/core";
/**
 * @name PhoneNumberFormatPipe
 *
 * @description
 * Pipe for formatting phone numbers to various international formats
 */
export class PhoneNumberPipe {
    /**
     * @name PhoneNumberFormatPipe#transform
     * @param value - the phone number string to transform
     * @param countryCode - the two letter CDLR code for the country to format to
     * @param isInputElement - whether the value was entered in an input element
     *
     * @description
     * Formats a phone number to any entered country code international format
     */
    transform(value, countryCode, isInputElement) {
        try {
            if (isInputElement) {
                value = new AsYouType(countryCode).input(value.toString());
            }
            return parsePhoneNumber(value.toString(), countryCode).formatInternational();
        }
        catch (e) {
            return value.toString();
        }
    }
}
PhoneNumberPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PhoneNumberPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
PhoneNumberPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PhoneNumberPipe, name: "phoneNumber" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PhoneNumberPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'phoneNumber',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvbmUtbnVtYmVyLWZvcm1hdC5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvcGhvbmUtbnVtYmVyLWZvcm1hdC1waXBlL3Bob25lLW51bWJlci1mb3JtYXQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsU0FBUyxFQUFlLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7O0FBSXRGOzs7OztHQUtHO0FBSUgsTUFBTSxPQUFPLGVBQWU7SUFDMUI7Ozs7Ozs7O09BUUc7SUFDSCxTQUFTLENBQUMsS0FBc0IsRUFBRSxXQUF3QixFQUFFLGNBQXdCO1FBQ2xGLElBQUk7WUFDRixJQUFJLGNBQWMsRUFBRTtnQkFDbEIsS0FBSyxHQUFHLElBQUksU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQzthQUM1RDtZQUVELE9BQU8sZ0JBQWdCLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFFLFdBQVcsQ0FBQyxDQUFDLG1CQUFtQixFQUFFLENBQUM7U0FDOUU7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLE9BQU8sS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7NkdBcEJVLGVBQWU7MkdBQWYsZUFBZTs0RkFBZixlQUFlO2tCQUgzQixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxhQUFhO2lCQUNwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFzWW91VHlwZSwgQ291bnRyeUNvZGUsIHBhcnNlUGhvbmVOdW1iZXIgfSBmcm9tICdAYmFja2Jhc2UvcGhvbmUtbnVtYmVyLWxpYic7XG5cbmV4cG9ydCB7IENvdW50cnlDb2RlIH0gZnJvbSAnQGJhY2tiYXNlL3Bob25lLW51bWJlci1saWInO1xuXG4vKipcbiAqIEBuYW1lIFBob25lTnVtYmVyRm9ybWF0UGlwZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUGlwZSBmb3IgZm9ybWF0dGluZyBwaG9uZSBudW1iZXJzIHRvIHZhcmlvdXMgaW50ZXJuYXRpb25hbCBmb3JtYXRzXG4gKi9cbkBQaXBlKHtcbiAgbmFtZTogJ3Bob25lTnVtYmVyJyxcbn0pXG5leHBvcnQgY2xhc3MgUGhvbmVOdW1iZXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIC8qKlxuICAgKiBAbmFtZSBQaG9uZU51bWJlckZvcm1hdFBpcGUjdHJhbnNmb3JtXG4gICAqIEBwYXJhbSB2YWx1ZSAtIHRoZSBwaG9uZSBudW1iZXIgc3RyaW5nIHRvIHRyYW5zZm9ybVxuICAgKiBAcGFyYW0gY291bnRyeUNvZGUgLSB0aGUgdHdvIGxldHRlciBDRExSIGNvZGUgZm9yIHRoZSBjb3VudHJ5IHRvIGZvcm1hdCB0b1xuICAgKiBAcGFyYW0gaXNJbnB1dEVsZW1lbnQgLSB3aGV0aGVyIHRoZSB2YWx1ZSB3YXMgZW50ZXJlZCBpbiBhbiBpbnB1dCBlbGVtZW50XG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBGb3JtYXRzIGEgcGhvbmUgbnVtYmVyIHRvIGFueSBlbnRlcmVkIGNvdW50cnkgY29kZSBpbnRlcm5hdGlvbmFsIGZvcm1hdFxuICAgKi9cbiAgdHJhbnNmb3JtKHZhbHVlOiBzdHJpbmcgfCBudW1iZXIsIGNvdW50cnlDb2RlOiBDb3VudHJ5Q29kZSwgaXNJbnB1dEVsZW1lbnQ/OiBib29sZWFuKTogc3RyaW5nIHtcbiAgICB0cnkge1xuICAgICAgaWYgKGlzSW5wdXRFbGVtZW50KSB7XG4gICAgICAgIHZhbHVlID0gbmV3IEFzWW91VHlwZShjb3VudHJ5Q29kZSkuaW5wdXQodmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwYXJzZVBob25lTnVtYmVyKHZhbHVlLnRvU3RyaW5nKCksIGNvdW50cnlDb2RlKS5mb3JtYXRJbnRlcm5hdGlvbmFsKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgfVxuICB9XG59XG4iXX0=