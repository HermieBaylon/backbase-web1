import { ChangeDetectionStrategy, Component, Input, Optional, Self } from '@angular/core';
import { InputBaseComponent } from '@backbase/ui-ang/base-classes';
import { idListAttr } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/services";
import * as i2 from "@angular/forms";
import * as i3 from "@backbase/foundation-ang/future";
import * as i4 from "@backbase/ui-ang/char-counter";
import * as i5 from "@angular/common";
import * as i6 from "@backbase/ui-ang/focus";
/**
 * @name TextareaComponent
 *
 * @a11y Current component provide option to pass needed accessibility
 * attributes. You need to take care of properties that are required in your case :
 *  - role
 *  - aria-activedescendant
 *  - aria-describedby
 *  - aria-expanded
 *  - aria-invalid
 *  - aria-label
 *  - aria-labelledby
 *  - aria-owns
 *
 * @description
 * Component that displays a text input.
 */
export class TextareaComponent extends InputBaseComponent {
    constructor(cd, domAttributesService, parentFormControl, deprecationsService) {
        super(cd, deprecationsService);
        this.cd = cd;
        this.domAttributesService = domAttributesService;
        this.parentFormControl = parentFormControl;
        this.deprecationsService = deprecationsService;
        /**
         * The placeholder for the text input. Defaults to an empty string;
         */
        this.placeholder = '';
        /**
         * Whether the text input is readonly.
         */
        this.readonly = false;
        /**
         * Shows character counter based on `maxLength`
         */
        this.showCharCounter = false;
        /**
         * Utility function for use in template
         */
        this.idListAttr = idListAttr;
        this.charCounterId = this.domAttributesService.generateId();
        if (this.parentFormControl) {
            this.parentFormControl.valueAccessor = this;
        }
    }
}
TextareaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TextareaComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DomAttributesService }, { token: i2.NgControl, optional: true, self: true }, { token: i3.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });
TextareaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TextareaComponent, selector: "bb-textarea-ui", inputs: { rows: "rows", cols: "cols", placeholder: "placeholder", maxLength: "maxLength", minLength: "minLength", readonly: "readonly", showCharCounter: "showCharCounter", wrap: "wrap" }, usesInheritance: true, ngImport: i0, template: "<div\n  class=\"bb-textarea-ui\"\n  [ngClass]=\"{ 'ng-invalid': parentFormControl?.invalid, 'ng-touched': parentFormControl?.touched }\"\n>\n  <label *ngIf=\"label\" for=\"{{ id }}\" [attr.data-role]=\"'textarea-label'\">{{ label }}</label>\n  <textarea\n    #textarea\n    id=\"{{ id }}\"\n    [attr.aria-label]=\"label ? null : ariaLabel || null\"\n    [attr.aria-describedby]=\"idListAttr(ariaDescribedby, maxLength && showCharCounter ? charCounterId : null)\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.aria-expanded]=\"ariaExpanded\"\n    [attr.role]=\"role\"\n    [attr.aria-invalid]=\"ariaInvalid\"\n    [attr.aria-owns]=\"ariaOwns\"\n    [attr.aria-activedescendant]=\"ariaActivedescendant\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"onValueChange($event)\"\n    (blur)=\"onBlur()\"\n    class=\"form-control\"\n    [rows]=\"rows\"\n    [cols]=\"cols\"\n    (focus)=\"onFocus()\"\n    [disabled]=\"disabled\"\n    [readOnly]=\"readonly\"\n    [bbFocus]=\"autofocus\"\n    [placeholder]=\"placeholder\"\n    [required]=\"required\"\n    [attr.maxlength]=\"maxLength\"\n    [attr.minlength]=\"minLength\"\n    [wrap]=\"wrap\"\n    [attr.data-role]=\"'textarea-text-field'\"\n  ></textarea>\n  <bb-char-counter-ui\n    [attr.id]=\"charCounterId\"\n    *ngIf=\"maxLength && showCharCounter\"\n    [element]=\"textarea\"\n    [inputValue]=\"value\"\n    [maxLength]=\"maxLength\"\n    [attr.data-role]=\"'textarea-char-counter'\"\n  >\n  </bb-char-counter-ui>\n</div>\n", components: [{ type: i4.CharCounterComponent, selector: "bb-char-counter-ui", inputs: ["inputValue", "element", "maxLength", "blockTyping"] }], directives: [{ type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i6.FocusDirective, selector: "[bbFocus]", inputs: ["bbFocus"], exportAs: ["bbFocus"] }, { type: i2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i2.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i2.MinLengthValidator, selector: "[minlength][formControlName],[minlength][formControl],[minlength][ngModel]", inputs: ["minlength"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TextareaComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-textarea-ui',
                    templateUrl: './textarea.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DomAttributesService }, { type: i2.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }] }, { type: i3.DeprecationsService }]; }, propDecorators: { rows: [{
                type: Input
            }], cols: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], maxLength: [{
                type: Input
            }], minLength: [{
                type: Input
            }], readonly: [{
                type: Input
            }], showCharCounter: [{
                type: Input
            }], wrap: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGFyZWEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvdGV4dGFyZWEvdGV4dGFyZWEuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvdGV4dGFyZWEvdGV4dGFyZWEuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFxQixTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0csT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFHbkUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7Ozs7OztBQUduRDs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQU1ILE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxrQkFBa0I7SUF5Q3ZELFlBQ3FCLEVBQXFCLEVBQ2hDLG9CQUEwQyxFQUN2QixpQkFBNEIsRUFDcEMsbUJBQXdDO1FBRTNELEtBQUssQ0FBQyxFQUFFLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztRQUxaLE9BQUUsR0FBRixFQUFFLENBQW1CO1FBQ2hDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUFDdkIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFXO1FBQ3BDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFwQzdEOztXQUVHO1FBQ00sZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFTMUI7O1dBRUc7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzFCOztXQUVHO1FBQ00sb0JBQWUsR0FBRyxLQUFLLENBQUM7UUFRakM7O1dBRUc7UUFDSSxlQUFVLEdBQUcsVUFBVSxDQUFDO1FBUzdCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFVBQVUsRUFBRSxDQUFDO1FBRTVELElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQzFCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1NBQzdDO0lBQ0gsQ0FBQzs7K0dBckRVLGlCQUFpQjttR0FBakIsaUJBQWlCLHlRQzdCOUIsdTlDQTJDQTs0RkRkYSxpQkFBaUI7a0JBTDdCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsV0FBVyxFQUFFLDJCQUEyQjtvQkFDeEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzswQkE2Q0ksUUFBUTs7MEJBQUksSUFBSTs4RUF4Q1YsSUFBSTtzQkFBWixLQUFLO2dCQUlHLElBQUk7c0JBQVosS0FBSztnQkFJRyxXQUFXO3NCQUFuQixLQUFLO2dCQUlHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBSUcsU0FBUztzQkFBakIsS0FBSztnQkFJRyxRQUFRO3NCQUFoQixLQUFLO2dCQUlHLGVBQWU7c0JBQXZCLEtBQUs7Z0JBSUcsSUFBSTtzQkFBWixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBPcHRpb25hbCwgU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW5wdXRCYXNlQ29tcG9uZW50IH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9iYXNlLWNsYXNzZXMnO1xuaW1wb3J0IHsgTmdDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRG9tQXR0cmlidXRlc1NlcnZpY2UgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL3NlcnZpY2VzJztcbmltcG9ydCB7IGlkTGlzdEF0dHIgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL3V0aWwnO1xuaW1wb3J0IHsgRGVwcmVjYXRpb25zU2VydmljZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9mdXR1cmUnO1xuXG4vKipcbiAqIEBuYW1lIFRleHRhcmVhQ29tcG9uZW50XG4gKlxuICogQGExMXkgQ3VycmVudCBjb21wb25lbnQgcHJvdmlkZSBvcHRpb24gdG8gcGFzcyBuZWVkZWQgYWNjZXNzaWJpbGl0eVxuICogYXR0cmlidXRlcy4gWW91IG5lZWQgdG8gdGFrZSBjYXJlIG9mIHByb3BlcnRpZXMgdGhhdCBhcmUgcmVxdWlyZWQgaW4geW91ciBjYXNlIDpcbiAqICAtIHJvbGVcbiAqICAtIGFyaWEtYWN0aXZlZGVzY2VuZGFudFxuICogIC0gYXJpYS1kZXNjcmliZWRieVxuICogIC0gYXJpYS1leHBhbmRlZFxuICogIC0gYXJpYS1pbnZhbGlkXG4gKiAgLSBhcmlhLWxhYmVsXG4gKiAgLSBhcmlhLWxhYmVsbGVkYnlcbiAqICAtIGFyaWEtb3duc1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29tcG9uZW50IHRoYXQgZGlzcGxheXMgYSB0ZXh0IGlucHV0LlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi10ZXh0YXJlYS11aScsXG4gIHRlbXBsYXRlVXJsOiAnLi90ZXh0YXJlYS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUZXh0YXJlYUNvbXBvbmVudCBleHRlbmRzIElucHV0QmFzZUNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBOdW1iZXIgb2Ygcm93c1xuICAgKi9cbiAgQElucHV0KCkgcm93czogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogTnVtYmVyIG9mIGNvbHVtbnNcbiAgICovXG4gIEBJbnB1dCgpIGNvbHM6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFRoZSBwbGFjZWhvbGRlciBmb3IgdGhlIHRleHQgaW5wdXQuIERlZmF1bHRzIHRvIGFuIGVtcHR5IHN0cmluZztcbiAgICovXG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyID0gJyc7XG4gIC8qKlxuICAgKiBUaGUgbWF4TGVuZ3RoIGZvciB0aGUgdGV4dCBpbnB1dC5cbiAgICovXG4gIEBJbnB1dCgpIG1heExlbmd0aDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogVGhlIG1pbkxlbmd0aCBmb3IgdGhlIHRleHQgaW5wdXQuXG4gICAqL1xuICBASW5wdXQoKSBtaW5MZW5ndGg6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIHRleHQgaW5wdXQgaXMgcmVhZG9ubHkuXG4gICAqL1xuICBASW5wdXQoKSByZWFkb25seSA9IGZhbHNlO1xuICAvKipcbiAgICogU2hvd3MgY2hhcmFjdGVyIGNvdW50ZXIgYmFzZWQgb24gYG1heExlbmd0aGBcbiAgICovXG4gIEBJbnB1dCgpIHNob3dDaGFyQ291bnRlciA9IGZhbHNlO1xuICAvKipcbiAgICogSW5kaWNhdGVzIGhvdyB0aGUgY29udHJvbCB3cmFwcyB0ZXh0XG4gICAqL1xuICBASW5wdXQoKSB3cmFwOiAoJ3NvZnQnIHwgJ2hhcmQnKSB8IHVuZGVmaW5lZDtcblxuICBwdWJsaWMgY2hhckNvdW50ZXJJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciB1c2UgaW4gdGVtcGxhdGVcbiAgICovXG4gIHB1YmxpYyBpZExpc3RBdHRyID0gaWRMaXN0QXR0cjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgY2Q6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIHByaXZhdGUgZG9tQXR0cmlidXRlc1NlcnZpY2U6IERvbUF0dHJpYnV0ZXNTZXJ2aWNlLFxuICAgIEBPcHRpb25hbCgpIEBTZWxmKCkgcHVibGljIHBhcmVudEZvcm1Db250cm9sOiBOZ0NvbnRyb2wsXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IGRlcHJlY2F0aW9uc1NlcnZpY2U6IERlcHJlY2F0aW9uc1NlcnZpY2UsXG4gICkge1xuICAgIHN1cGVyKGNkLCBkZXByZWNhdGlvbnNTZXJ2aWNlKTtcbiAgICB0aGlzLmNoYXJDb3VudGVySWQgPSB0aGlzLmRvbUF0dHJpYnV0ZXNTZXJ2aWNlLmdlbmVyYXRlSWQoKTtcblxuICAgIGlmICh0aGlzLnBhcmVudEZvcm1Db250cm9sKSB7XG4gICAgICB0aGlzLnBhcmVudEZvcm1Db250cm9sLnZhbHVlQWNjZXNzb3IgPSB0aGlzO1xuICAgIH1cbiAgfVxufVxuIiwiPGRpdlxuICBjbGFzcz1cImJiLXRleHRhcmVhLXVpXCJcbiAgW25nQ2xhc3NdPVwieyAnbmctaW52YWxpZCc6IHBhcmVudEZvcm1Db250cm9sPy5pbnZhbGlkLCAnbmctdG91Y2hlZCc6IHBhcmVudEZvcm1Db250cm9sPy50b3VjaGVkIH1cIlxuPlxuICA8bGFiZWwgKm5nSWY9XCJsYWJlbFwiIGZvcj1cInt7IGlkIH19XCIgW2F0dHIuZGF0YS1yb2xlXT1cIid0ZXh0YXJlYS1sYWJlbCdcIj57eyBsYWJlbCB9fTwvbGFiZWw+XG4gIDx0ZXh0YXJlYVxuICAgICN0ZXh0YXJlYVxuICAgIGlkPVwie3sgaWQgfX1cIlxuICAgIFthdHRyLmFyaWEtbGFiZWxdPVwibGFiZWwgPyBudWxsIDogYXJpYUxhYmVsIHx8IG51bGxcIlxuICAgIFthdHRyLmFyaWEtZGVzY3JpYmVkYnldPVwiaWRMaXN0QXR0cihhcmlhRGVzY3JpYmVkYnksIG1heExlbmd0aCAmJiBzaG93Q2hhckNvdW50ZXIgPyBjaGFyQ291bnRlcklkIDogbnVsbClcIlxuICAgIFthdHRyLmFyaWEtbGFiZWxsZWRieV09XCJhcmlhTGFiZWxsZWRieVwiXG4gICAgW2F0dHIuYXJpYS1leHBhbmRlZF09XCJhcmlhRXhwYW5kZWRcIlxuICAgIFthdHRyLnJvbGVdPVwicm9sZVwiXG4gICAgW2F0dHIuYXJpYS1pbnZhbGlkXT1cImFyaWFJbnZhbGlkXCJcbiAgICBbYXR0ci5hcmlhLW93bnNdPVwiYXJpYU93bnNcIlxuICAgIFthdHRyLmFyaWEtYWN0aXZlZGVzY2VuZGFudF09XCJhcmlhQWN0aXZlZGVzY2VuZGFudFwiXG4gICAgW25nTW9kZWxdPVwidmFsdWVcIlxuICAgIChuZ01vZGVsQ2hhbmdlKT1cIm9uVmFsdWVDaGFuZ2UoJGV2ZW50KVwiXG4gICAgKGJsdXIpPVwib25CbHVyKClcIlxuICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICBbcm93c109XCJyb3dzXCJcbiAgICBbY29sc109XCJjb2xzXCJcbiAgICAoZm9jdXMpPVwib25Gb2N1cygpXCJcbiAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICAgIFtyZWFkT25seV09XCJyZWFkb25seVwiXG4gICAgW2JiRm9jdXNdPVwiYXV0b2ZvY3VzXCJcbiAgICBbcGxhY2Vob2xkZXJdPVwicGxhY2Vob2xkZXJcIlxuICAgIFtyZXF1aXJlZF09XCJyZXF1aXJlZFwiXG4gICAgW2F0dHIubWF4bGVuZ3RoXT1cIm1heExlbmd0aFwiXG4gICAgW2F0dHIubWlubGVuZ3RoXT1cIm1pbkxlbmd0aFwiXG4gICAgW3dyYXBdPVwid3JhcFwiXG4gICAgW2F0dHIuZGF0YS1yb2xlXT1cIid0ZXh0YXJlYS10ZXh0LWZpZWxkJ1wiXG4gID48L3RleHRhcmVhPlxuICA8YmItY2hhci1jb3VudGVyLXVpXG4gICAgW2F0dHIuaWRdPVwiY2hhckNvdW50ZXJJZFwiXG4gICAgKm5nSWY9XCJtYXhMZW5ndGggJiYgc2hvd0NoYXJDb3VudGVyXCJcbiAgICBbZWxlbWVudF09XCJ0ZXh0YXJlYVwiXG4gICAgW2lucHV0VmFsdWVdPVwidmFsdWVcIlxuICAgIFttYXhMZW5ndGhdPVwibWF4TGVuZ3RoXCJcbiAgICBbYXR0ci5kYXRhLXJvbGVdPVwiJ3RleHRhcmVhLWNoYXItY291bnRlcidcIlxuICA+XG4gIDwvYmItY2hhci1jb3VudGVyLXVpPlxuPC9kaXY+XG4iXX0=