import { NgModule } from '@angular/core';
import { EllipsisComponent } from './ellipsis.component';
import { TooltipModule } from '@backbase/ui-ang/tooltip-directive';
import { CommonModule } from '@angular/common';
import { IsContentTruncatedDirective } from './directives/is-content-truncated.directive';
import * as i0 from "@angular/core";
const directives = [IsContentTruncatedDirective];
export class EllipsisModule {
}
EllipsisModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EllipsisModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EllipsisModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EllipsisModule, declarations: [EllipsisComponent, IsContentTruncatedDirective], imports: [TooltipModule, CommonModule], exports: [EllipsisComponent, IsContentTruncatedDirective] });
EllipsisModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EllipsisModule, imports: [[TooltipModule, CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EllipsisModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [TooltipModule, CommonModule],
                    declarations: [EllipsisComponent, ...directives],
                    exports: [EllipsisComponent, ...directives],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxsaXBzaXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvZWxsaXBzaXMvZWxsaXBzaXMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQzs7QUFFMUYsTUFBTSxVQUFVLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0FBT2pELE1BQU0sT0FBTyxjQUFjOzs0R0FBZCxjQUFjOzZHQUFkLGNBQWMsaUJBSFYsaUJBQWlCLEVBSmQsMkJBQTJCLGFBR25DLGFBQWEsRUFBRSxZQUFZLGFBRTNCLGlCQUFpQixFQUxULDJCQUEyQjs2R0FPbEMsY0FBYyxZQUpoQixDQUFDLGFBQWEsRUFBRSxZQUFZLENBQUM7NEZBSTNCLGNBQWM7a0JBTDFCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFLENBQUMsYUFBYSxFQUFFLFlBQVksQ0FBQztvQkFDdEMsWUFBWSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxVQUFVLENBQUM7b0JBQ2hELE9BQU8sRUFBRSxDQUFDLGlCQUFpQixFQUFFLEdBQUcsVUFBVSxDQUFDO2lCQUM1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbGxpcHNpc0NvbXBvbmVudCB9IGZyb20gJy4vZWxsaXBzaXMuY29tcG9uZW50JztcbmltcG9ydCB7IFRvb2x0aXBNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL3Rvb2x0aXAtZGlyZWN0aXZlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBJc0NvbnRlbnRUcnVuY2F0ZWREaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvaXMtY29udGVudC10cnVuY2F0ZWQuZGlyZWN0aXZlJztcblxuY29uc3QgZGlyZWN0aXZlcyA9IFtJc0NvbnRlbnRUcnVuY2F0ZWREaXJlY3RpdmVdO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbVG9vbHRpcE1vZHVsZSwgQ29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbRWxsaXBzaXNDb21wb25lbnQsIC4uLmRpcmVjdGl2ZXNdLFxuICBleHBvcnRzOiBbRWxsaXBzaXNDb21wb25lbnQsIC4uLmRpcmVjdGl2ZXNdLFxufSlcbmV4cG9ydCBjbGFzcyBFbGxpcHNpc01vZHVsZSB7fVxuIl19