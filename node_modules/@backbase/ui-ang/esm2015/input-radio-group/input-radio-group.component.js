import { Component, ContentChildren, forwardRef, Input, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { InputBaseComponent } from '@backbase/ui-ang/base-classes';
import { InputRadioComponent } from './input-radio.component';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/future";
import * as i2 from "@ng-bootstrap/ng-bootstrap";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
/**
 * @name InputRadioGroupComponent
 *
 * @a11y Current component provide option to pass needed accessibility
 * attributes. You need to take care of properties that are required in your case :
 *  - role
 *  - aria-activedescendant
 *  - aria-describedby
 *  - aria-expanded
 *  - aria-invalid
 *  - aria-label
 *  - aria-labelledby
 *  - aria-owns
 *
 * @description
 * Component that represents a group of radio buttons.
 */
export class InputRadioGroupComponent extends InputBaseComponent {
    constructor(cd, deprecationsService) {
        super(cd, deprecationsService);
        this.cd = cd;
        this.deprecationsService = deprecationsService;
        /**
         * Set horizontal placement of the radio elements
         */
        this.horizontal = false;
        /**
         * Select first radio buttons onInit.
         */
        this.preselect = true;
        /**
         * Vertical align of the radio buttons
         */
        this.verticalAlign = 'middle';
        this.isComponentDestroyed = false;
    }
    ngAfterContentInit() {
        if (!this.preselect) {
            return;
        }
        setTimeout(() => {
            if (!this.val && this.radios && this.radios.first) {
                this.val = this.radios.first.value;
            }
        });
    }
    writeValue(value) {
        super.writeValue(value);
        if (!this.isComponentDestroyed) {
            this.cd.detectChanges();
        }
    }
    /**
     * Sets the value of the radio group with the provided value
     */
    set val(v) {
        this.value = v;
        this.onChange(this.value);
    }
    get val() {
        return this.value;
    }
    trackByFn(index, item) {
        return item.value;
    }
    ngOnDestroy() {
        this.isComponentDestroyed = true;
    }
}
InputRadioGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputRadioGroupComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });
InputRadioGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: { horizontal: "horizontal", preselect: "preselect", name: "name", verticalAlign: "verticalAlign" }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => InputRadioGroupComponent),
            multi: true,
        },
    ], queries: [{ propertyName: "radios", predicate: InputRadioComponent }], usesInheritance: true, ngImport: i0, template: "<fieldset\n  [attr.aria-describedby]=\"ariaDescribedby\"\n  class=\"bb-input-radio-group\"\n  [(ngModel)]=\"val\"\n  [attr.aria-label]=\"ariaLabel\"\n  [attr.aria-labelledby]=\"ariaLabelledby\"\n  ngbRadioGroup\n>\n  <legend class=\"bb-input-radio-group__label\" *ngIf=\"label\">{{ label }}</legend>\n  <div class=\"bb-input-radio-group__list\" [ngClass]=\"{ 'bb-input-radio-group__list--horizontal': horizontal }\">\n    <label\n      *ngFor=\"let radio of radios; trackBy: trackByFn\"\n      ngbButtonLabel\n      class=\"bb-input-radio-group__radio\"\n      [class.selected]=\"val === radio.value\"\n      [ngClass]=\"'bb-input-radio-group__radio--vertical-align-' + verticalAlign\"\n      [attr.data-role]=\"'radio-group-option'\"\n    >\n      <input\n        class=\"bb-input-radio-group__input\"\n        type=\"radio\"\n        ngbButton\n        name=\"{{ name }}\"\n        [value]=\"radio.value\"\n        [readOnly]=\"readonly\"\n        [required]=\"required\"\n        [disabled]=\"disabled || radio.disabled\"\n        [attr.aria-label]=\"radio.ariaLabel\"\n        [attr.aria-labelledby]=\"radio.ariaLabelledby\"\n        [attr.aria-describedby]=\"radio.ariaDescribedby\"\n        [attr.aria-expanded]=\"radio.ariaExpanded\"\n        [attr.role]=\"radio.role\"\n        [attr.aria-invalid]=\"radio.ariaInvalid\"\n        [attr.aria-owns]=\"radio.ariaOwns\"\n      />\n      <span class=\"bb-input-radio-group__radio-label\" *ngIf=\"radio.label\">\n        {{ radio.label }}\n      </span>\n      <ng-container *ngIf=\"!radio.label\">\n        <ng-container\n          *ngTemplateOutlet=\"radio.labelTemplate; context: { labelTemplateContext: radio.labelTemplateContext }\"\n        ></ng-container>\n      </ng-container>\n    </label>\n  </div>\n</fieldset>\n", directives: [{ type: i2.NgbRadioGroup, selector: "[ngbRadioGroup]", inputs: ["name"] }, { type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgbButtonLabel, selector: "[ngbButtonLabel]" }, { type: i2.NgbRadio, selector: "[ngbButton][type=radio]", inputs: ["value", "disabled", "name"] }, { type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputRadioGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-radio-group-ui',
                    templateUrl: './input-radio-group.component.html',
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => InputRadioGroupComponent),
                            multi: true,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DeprecationsService }]; }, propDecorators: { horizontal: [{
                type: Input
            }], preselect: [{
                type: Input
            }], name: [{
                type: Input
            }], verticalAlign: [{
                type: Input
            }], radios: [{
                type: ContentChildren,
                args: [InputRadioComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,