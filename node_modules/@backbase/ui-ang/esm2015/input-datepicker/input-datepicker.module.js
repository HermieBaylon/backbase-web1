import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';
import { BaseClassesModule } from '@backbase/ui-ang/base-classes';
import { ButtonModule } from '@backbase/ui-ang/button';
import { IconModule } from '@backbase/ui-ang/icon';
import { InputDatepickerComponent } from './input-datepicker.component';
import { MinDateValidatorDirective } from './validation/min-date-validator/min-date-validator.directive';
import { MaxDateValidatorDirective } from './validation/max-date-validator/max-date-validator.directive';
import { InputDatepickerDayTemplateSingleComponent } from './input-datepicker-day-template-single.component';
import { InputDatepickerDayTemplateRangeComponent } from './input-datepicker-day-template-range.component';
import * as i0 from "@angular/core";
export { MinDateValidatorDirective } from './validation/min-date-validator/min-date-validator.directive';
export { MaxDateValidatorDirective } from './validation/max-date-validator/max-date-validator.directive';
export class InputDatepickerModule {
}
InputDatepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
InputDatepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputDatepickerModule, declarations: [InputDatepickerComponent,
        MinDateValidatorDirective,
        MaxDateValidatorDirective,
        InputDatepickerDayTemplateSingleComponent,
        InputDatepickerDayTemplateRangeComponent], imports: [CommonModule,
        ReactiveFormsModule,
        FormsModule,
        NgbDatepickerModule,
        ButtonModule,
        IconModule,
        BaseClassesModule], exports: [InputDatepickerComponent,
        MinDateValidatorDirective,
        MaxDateValidatorDirective,
        /**
         * @deprecated
         * Exporting `FormsModule` is deprecated
         **/
        FormsModule] });
InputDatepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputDatepickerModule, imports: [[
            CommonModule,
            ReactiveFormsModule,
            FormsModule,
            NgbDatepickerModule,
            ButtonModule,
            IconModule,
            BaseClassesModule,
        ], 
        /**
         * @deprecated
         * Exporting `FormsModule` is deprecated
         **/
        FormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputDatepickerModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        ReactiveFormsModule,
                        FormsModule,
                        NgbDatepickerModule,
                        ButtonModule,
                        IconModule,
                        BaseClassesModule,
                    ],
                    declarations: [
                        InputDatepickerComponent,
                        MinDateValidatorDirective,
                        MaxDateValidatorDirective,
                        InputDatepickerDayTemplateSingleComponent,
                        InputDatepickerDayTemplateRangeComponent,
                    ],
                    exports: [
                        InputDatepickerComponent,
                        MinDateValidatorDirective,
                        MaxDateValidatorDirective,
                        /**
                         * @deprecated
                         * Exporting `FormsModule` is deprecated
                         **/
                        FormsModule,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtZGF0ZXBpY2tlci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9pbnB1dC1kYXRlcGlja2VyL2lucHV0LWRhdGVwaWNrZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVsRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVqRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ25ELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3hFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDhEQUE4RCxDQUFDO0FBQ3pHLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDhEQUE4RCxDQUFDO0FBQ3pHLE9BQU8sRUFBRSx5Q0FBeUMsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQzdHLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLGlEQUFpRCxDQUFDOztBQUUzRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw4REFBOEQsQ0FBQztBQUN6RyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw4REFBOEQsQ0FBQztBQStCekcsTUFBTSxPQUFPLHFCQUFxQjs7bUhBQXJCLHFCQUFxQjtvSEFBckIscUJBQXFCLGlCQWxCOUIsd0JBQXdCO1FBQ3hCLHlCQUF5QjtRQUN6Qix5QkFBeUI7UUFDekIseUNBQXlDO1FBQ3pDLHdDQUF3QyxhQWJ4QyxZQUFZO1FBQ1osbUJBQW1CO1FBQ25CLFdBQVc7UUFDWCxtQkFBbUI7UUFDbkIsWUFBWTtRQUNaLFVBQVU7UUFDVixpQkFBaUIsYUFVakIsd0JBQXdCO1FBQ3hCLHlCQUF5QjtRQUN6Qix5QkFBeUI7UUFFekI7OztZQUdJO1FBQ0osV0FBVztvSEFHRixxQkFBcUIsWUE1QnZCO1lBQ1AsWUFBWTtZQUNaLG1CQUFtQjtZQUNuQixXQUFXO1lBQ1gsbUJBQW1CO1lBQ25CLFlBQVk7WUFDWixVQUFVO1lBQ1YsaUJBQWlCO1NBQ2xCO1FBYUM7OztZQUdJO1FBQ0osV0FBVzs0RkFHRixxQkFBcUI7a0JBN0JqQyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLG1CQUFtQjt3QkFDbkIsV0FBVzt3QkFDWCxtQkFBbUI7d0JBQ25CLFlBQVk7d0JBQ1osVUFBVTt3QkFDVixpQkFBaUI7cUJBQ2xCO29CQUNELFlBQVksRUFBRTt3QkFDWix3QkFBd0I7d0JBQ3hCLHlCQUF5Qjt3QkFDekIseUJBQXlCO3dCQUN6Qix5Q0FBeUM7d0JBQ3pDLHdDQUF3QztxQkFDekM7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLHdCQUF3Qjt3QkFDeEIseUJBQXlCO3dCQUN6Qix5QkFBeUI7d0JBRXpCOzs7NEJBR0k7d0JBQ0osV0FBVztxQkFDWjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IE5nYkRhdGVwaWNrZXJNb2R1bGUgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XG5cbmltcG9ydCB7IEJhc2VDbGFzc2VzTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9iYXNlLWNsYXNzZXMnO1xuaW1wb3J0IHsgQnV0dG9uTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9idXR0b24nO1xuaW1wb3J0IHsgSWNvbk1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvaWNvbic7XG5pbXBvcnQgeyBJbnB1dERhdGVwaWNrZXJDb21wb25lbnQgfSBmcm9tICcuL2lucHV0LWRhdGVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IE1pbkRhdGVWYWxpZGF0b3JEaXJlY3RpdmUgfSBmcm9tICcuL3ZhbGlkYXRpb24vbWluLWRhdGUtdmFsaWRhdG9yL21pbi1kYXRlLXZhbGlkYXRvci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTWF4RGF0ZVZhbGlkYXRvckRpcmVjdGl2ZSB9IGZyb20gJy4vdmFsaWRhdGlvbi9tYXgtZGF0ZS12YWxpZGF0b3IvbWF4LWRhdGUtdmFsaWRhdG9yLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBJbnB1dERhdGVwaWNrZXJEYXlUZW1wbGF0ZVNpbmdsZUNvbXBvbmVudCB9IGZyb20gJy4vaW5wdXQtZGF0ZXBpY2tlci1kYXktdGVtcGxhdGUtc2luZ2xlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbnB1dERhdGVwaWNrZXJEYXlUZW1wbGF0ZVJhbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9pbnB1dC1kYXRlcGlja2VyLWRheS10ZW1wbGF0ZS1yYW5nZS5jb21wb25lbnQnO1xuXG5leHBvcnQgeyBNaW5EYXRlVmFsaWRhdG9yRGlyZWN0aXZlIH0gZnJvbSAnLi92YWxpZGF0aW9uL21pbi1kYXRlLXZhbGlkYXRvci9taW4tZGF0ZS12YWxpZGF0b3IuZGlyZWN0aXZlJztcbmV4cG9ydCB7IE1heERhdGVWYWxpZGF0b3JEaXJlY3RpdmUgfSBmcm9tICcuL3ZhbGlkYXRpb24vbWF4LWRhdGUtdmFsaWRhdG9yL21heC1kYXRlLXZhbGlkYXRvci5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgTmdiRGF0ZXBpY2tlck1vZHVsZSxcbiAgICBCdXR0b25Nb2R1bGUsXG4gICAgSWNvbk1vZHVsZSxcbiAgICBCYXNlQ2xhc3Nlc01vZHVsZSxcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgSW5wdXREYXRlcGlja2VyQ29tcG9uZW50LFxuICAgIE1pbkRhdGVWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgTWF4RGF0ZVZhbGlkYXRvckRpcmVjdGl2ZSxcbiAgICBJbnB1dERhdGVwaWNrZXJEYXlUZW1wbGF0ZVNpbmdsZUNvbXBvbmVudCxcbiAgICBJbnB1dERhdGVwaWNrZXJEYXlUZW1wbGF0ZVJhbmdlQ29tcG9uZW50LFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgSW5wdXREYXRlcGlja2VyQ29tcG9uZW50LFxuICAgIE1pbkRhdGVWYWxpZGF0b3JEaXJlY3RpdmUsXG4gICAgTWF4RGF0ZVZhbGlkYXRvckRpcmVjdGl2ZSxcblxuICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkXG4gICAgICogRXhwb3J0aW5nIGBGb3Jtc01vZHVsZWAgaXMgZGVwcmVjYXRlZFxuICAgICAqKi9cbiAgICBGb3Jtc01vZHVsZSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXREYXRlcGlja2VyTW9kdWxlIHt9XG4iXX0=