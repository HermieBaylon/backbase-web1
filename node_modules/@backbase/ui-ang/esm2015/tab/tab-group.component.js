import { Component, Input, Output, EventEmitter, ContentChildren } from '@angular/core';
import { TabComponent } from './tab.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * TabGroupComponent represents component that is used
 * as a wrapper for tab item components. It tracks user interaction and
 * notifies parent upon selection change
 */
export class TabGroupComponent {
    constructor() {
        /**
         * Event (Output) that emits new value once tab item selection has changed.
         * As a parameter it provides index of newly selected item
         */
        this.select = new EventEmitter();
        /**
         * Keeps track of currently active tab item index
         */
        this.activeIndexValue = 0;
    }
    /**
     * Setter (Input) for initial tab item selection
     *
     * @param initialSelection Index of initially selected tab item
     */
    set initialSelection(initSelection) {
        this.activeIndexValue = initSelection || 0;
    }
    /**
     * Getter for index of currently active tab item
     */
    get activeIndex() {
        return this.activeIndexValue;
    }
    /**
     * Internal handler for clicks on tab items
     *
     * @param index Index of element that has been clicked
     */
    onClick(event, index) {
        event.preventDefault();
        if (this.activeIndex === index) {
            return;
        }
        this.activeIndexValue = index;
        this.select.emit(index);
    }
}
TabGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TabGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TabGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TabGroupComponent, selector: "bb-tab-group-ui", inputs: { initialSelection: "initialSelection" }, outputs: { select: "select" }, queries: [{ propertyName: "items", predicate: TabComponent }], ngImport: i0, template: "<div class=\"nav nav-tabs\" role=\"tablist\">\n  <div *ngFor=\"let item of items; let i = index\" class=\"nav-item\">\n    <a href=\"#\" class=\"nav-link\" role=\"tab\" [ngClass]=\"{ active: i === activeIndex }\" (click)=\"onClick($event, i)\">\n      <ng-container *ngTemplateOutlet=\"item.template\"></ng-container>\n    </a>\n  </div>\n</div>\n", directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TabGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-tab-group-ui',
                    templateUrl: './tab-group.component.html',
                }]
        }], propDecorators: { initialSelection: [{
                type: Input
            }], select: [{
                type: Output
            }], items: [{
                type: ContentChildren,
                args: [TabComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL3RhYi90YWItZ3JvdXAuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvdGFiL3RhYi1ncm91cC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUVuRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7OztBQUUvQzs7OztHQUlHO0FBS0gsTUFBTSxPQUFPLGlCQUFpQjtJQUo5QjtRQWNFOzs7V0FHRztRQUNPLFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBVSxDQUFDO1FBTTlDOztXQUVHO1FBQ0sscUJBQWdCLEdBQUcsQ0FBQyxDQUFDO0tBd0I5QjtJQTlDQzs7OztPQUlHO0lBQ0gsSUFDSSxnQkFBZ0IsQ0FBQyxhQUFpQztRQUNwRCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsYUFBYSxJQUFJLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBZ0JEOztPQUVHO0lBQ0gsSUFBSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7SUFDL0IsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxPQUFPLENBQUMsS0FBaUIsRUFBRSxLQUFhO1FBQ3RDLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUV2QixJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssS0FBSyxFQUFFO1lBQzlCLE9BQU87U0FDUjtRQUVELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDOUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUIsQ0FBQzs7K0dBOUNVLGlCQUFpQjttR0FBakIsaUJBQWlCLDhKQWtCWCxZQUFZLDZCQy9CL0IsNlZBT0E7NEZETWEsaUJBQWlCO2tCQUo3QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFdBQVcsRUFBRSw0QkFBNEI7aUJBQzFDOzhCQVFLLGdCQUFnQjtzQkFEbkIsS0FBSztnQkFRSSxNQUFNO3NCQUFmLE1BQU07Z0JBSXdCLEtBQUs7c0JBQW5DLGVBQWU7dUJBQUMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBDb250ZW50Q2hpbGRyZW4sIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUYWJDb21wb25lbnQgfSBmcm9tICcuL3RhYi5jb21wb25lbnQnO1xuXG4vKipcbiAqIFRhYkdyb3VwQ29tcG9uZW50IHJlcHJlc2VudHMgY29tcG9uZW50IHRoYXQgaXMgdXNlZFxuICogYXMgYSB3cmFwcGVyIGZvciB0YWIgaXRlbSBjb21wb25lbnRzLiBJdCB0cmFja3MgdXNlciBpbnRlcmFjdGlvbiBhbmRcbiAqIG5vdGlmaWVzIHBhcmVudCB1cG9uIHNlbGVjdGlvbiBjaGFuZ2VcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItdGFiLWdyb3VwLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhYi1ncm91cC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFRhYkdyb3VwQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIFNldHRlciAoSW5wdXQpIGZvciBpbml0aWFsIHRhYiBpdGVtIHNlbGVjdGlvblxuICAgKlxuICAgKiBAcGFyYW0gaW5pdGlhbFNlbGVjdGlvbiBJbmRleCBvZiBpbml0aWFsbHkgc2VsZWN0ZWQgdGFiIGl0ZW1cbiAgICovXG4gIEBJbnB1dCgpXG4gIHNldCBpbml0aWFsU2VsZWN0aW9uKGluaXRTZWxlY3Rpb246IG51bWJlciB8IHVuZGVmaW5lZCkge1xuICAgIHRoaXMuYWN0aXZlSW5kZXhWYWx1ZSA9IGluaXRTZWxlY3Rpb24gfHwgMDtcbiAgfVxuICAvKipcbiAgICogRXZlbnQgKE91dHB1dCkgdGhhdCBlbWl0cyBuZXcgdmFsdWUgb25jZSB0YWIgaXRlbSBzZWxlY3Rpb24gaGFzIGNoYW5nZWQuXG4gICAqIEFzIGEgcGFyYW1ldGVyIGl0IHByb3ZpZGVzIGluZGV4IG9mIG5ld2x5IHNlbGVjdGVkIGl0ZW1cbiAgICovXG4gIEBPdXRwdXQoKSBzZWxlY3QgPSBuZXcgRXZlbnRFbWl0dGVyPG51bWJlcj4oKTtcbiAgLyoqXG4gICAqIFJlcHJlc2VudHMgYSBsaXN0IG9mIHRhYiBpdGVtcyBjb21wb25lbnQgaW5zaWRlIHRoaXMgd3JhcHBlclxuICAgKi9cbiAgQENvbnRlbnRDaGlsZHJlbihUYWJDb21wb25lbnQpIGl0ZW1zOiBRdWVyeUxpc3Q8VGFiQ29tcG9uZW50PiB8IHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogS2VlcHMgdHJhY2sgb2YgY3VycmVudGx5IGFjdGl2ZSB0YWIgaXRlbSBpbmRleFxuICAgKi9cbiAgcHJpdmF0ZSBhY3RpdmVJbmRleFZhbHVlID0gMDtcblxuICAvKipcbiAgICogR2V0dGVyIGZvciBpbmRleCBvZiBjdXJyZW50bHkgYWN0aXZlIHRhYiBpdGVtXG4gICAqL1xuICBnZXQgYWN0aXZlSW5kZXgoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWN0aXZlSW5kZXhWYWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbnRlcm5hbCBoYW5kbGVyIGZvciBjbGlja3Mgb24gdGFiIGl0ZW1zXG4gICAqXG4gICAqIEBwYXJhbSBpbmRleCBJbmRleCBvZiBlbGVtZW50IHRoYXQgaGFzIGJlZW4gY2xpY2tlZFxuICAgKi9cbiAgb25DbGljayhldmVudDogTW91c2VFdmVudCwgaW5kZXg6IG51bWJlcikge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAodGhpcy5hY3RpdmVJbmRleCA9PT0gaW5kZXgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmFjdGl2ZUluZGV4VmFsdWUgPSBpbmRleDtcbiAgICB0aGlzLnNlbGVjdC5lbWl0KGluZGV4KTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cIm5hdiBuYXYtdGFic1wiIHJvbGU9XCJ0YWJsaXN0XCI+XG4gIDxkaXYgKm5nRm9yPVwibGV0IGl0ZW0gb2YgaXRlbXM7IGxldCBpID0gaW5kZXhcIiBjbGFzcz1cIm5hdi1pdGVtXCI+XG4gICAgPGEgaHJlZj1cIiNcIiBjbGFzcz1cIm5hdi1saW5rXCIgcm9sZT1cInRhYlwiIFtuZ0NsYXNzXT1cInsgYWN0aXZlOiBpID09PSBhY3RpdmVJbmRleCB9XCIgKGNsaWNrKT1cIm9uQ2xpY2soJGV2ZW50LCBpKVwiPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cIml0ZW0udGVtcGxhdGVcIj48L25nLWNvbnRhaW5lcj5cbiAgICA8L2E+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=