import { Injectable } from '@angular/core';
import { NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';
import * as i0 from "@angular/core";
export class TimepickerStringAdapter extends NgbTimeAdapter {
    fromModel(value) {
        if (value) {
            const [hour, minute, second] = value.split(':').map((str) => parseInt(str, 10));
            return { hour, minute, second };
        }
        return null;
    }
    toModel(time) {
        if (!time) {
            // eslint-disable-next-line
            return null;
        }
        return `${String(time.hour).padStart(2, '0')}:${String(time.minute).padStart(2, '0')}:${String(time.second).padStart(2, '0')}`;
    }
}
TimepickerStringAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimepickerStringAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
TimepickerStringAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimepickerStringAdapter });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TimepickerStringAdapter, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtdGltZXBpY2tlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvaW5wdXQtdGltZXBpY2tlci9pbnB1dC10aW1lcGlja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFpQixNQUFNLDRCQUE0QixDQUFDOztBQUczRSxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsY0FBNkI7SUFDeEUsU0FBUyxDQUFDLEtBQWE7UUFDckIsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBRWhGLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFDO1NBQ2pDO1FBRUQsT0FBTyxJQUFnQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxPQUFPLENBQUMsSUFBbUI7UUFDekIsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNULDJCQUEyQjtZQUMzQixPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsT0FBTyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLElBQUksTUFBTSxDQUM1RixJQUFJLENBQUMsTUFBTSxDQUNaLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7O3FIQXBCVSx1QkFBdUI7eUhBQXZCLHVCQUF1Qjs0RkFBdkIsdUJBQXVCO2tCQURuQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiVGltZUFkYXB0ZXIsIE5nYlRpbWVTdHJ1Y3QgfSBmcm9tICdAbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBUaW1lcGlja2VyU3RyaW5nQWRhcHRlciBleHRlbmRzIE5nYlRpbWVBZGFwdGVyPHN0cmluZyB8IG51bGw+IHtcbiAgZnJvbU1vZGVsKHZhbHVlOiBzdHJpbmcpOiBOZ2JUaW1lU3RydWN0IHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIGNvbnN0IFtob3VyLCBtaW51dGUsIHNlY29uZF0gPSB2YWx1ZS5zcGxpdCgnOicpLm1hcCgoc3RyKSA9PiBwYXJzZUludChzdHIsIDEwKSk7XG5cbiAgICAgIHJldHVybiB7IGhvdXIsIG1pbnV0ZSwgc2Vjb25kIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGwgYXMgdW5rbm93biBhcyBOZ2JUaW1lU3RydWN0O1xuICB9XG5cbiAgdG9Nb2RlbCh0aW1lOiBOZ2JUaW1lU3RydWN0KTogc3RyaW5nIHwgbnVsbCB7XG4gICAgaWYgKCF0aW1lKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBgJHtTdHJpbmcodGltZS5ob3VyKS5wYWRTdGFydCgyLCAnMCcpfToke1N0cmluZyh0aW1lLm1pbnV0ZSkucGFkU3RhcnQoMiwgJzAnKX06JHtTdHJpbmcoXG4gICAgICB0aW1lLnNlY29uZCxcbiAgICApLnBhZFN0YXJ0KDIsICcwJyl9YDtcbiAgfVxufVxuIl19