import { Component, ChangeDetectionStrategy, Input, Directive, ContentChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "@angular/common";
export class ItemLogRecordDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
ItemLogRecordDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogRecordDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
ItemLogRecordDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ItemLogRecordDirective, selector: "ng-template[bbItemLogRecord]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogRecordDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbItemLogRecord]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class ItemLogComponent {
    constructor() {
        /**
         * Flag that denotes if item log status is pending. Defaults to false
         */
        this.isPending = false;
    }
}
ItemLogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ItemLogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ItemLogComponent, selector: "bb-item-log-ui", inputs: { isPending: "isPending", records: "records" }, queries: [{ propertyName: "customItemLog", first: true, predicate: ItemLogRecordDirective, descendants: true, static: true }], ngImport: i0, template: "<div class=\"bb-item-log\">\n  <div *ngIf=\"isPending\" class=\"bb-item-log__pending-record\" data-role=\"item-log-details-pending-row\">\n    <bb-icon-ui class=\"bb-text-support bb-item-log-record__icon\" name=\"watch-later\" size=\"md\"></bb-icon-ui>\n    <div class=\"bb-item-log__pending-record--details bb-text-bold\" i18n=\"@@item-log-waiting-for-approvals.label\">\n      Waiting for further approval(s)\n    </div>\n  </div>\n  <div *ngFor=\"let itemLogRecord of records\" class=\"bb-item-log__record\" data-role=\"item-log-details-record\">\n    <ng-container *ngIf=\"customItemLog; else default\">\n      <ng-container *ngTemplateOutlet=\"customItemLog?.templateRef; context: { $implicit: itemLogRecord }\">\n      </ng-container>\n    </ng-container>\n\n    <ng-template #default>\n      <div class=\"bb-stack bb-stack--align-top\">\n        <bb-icon-ui\n          class=\"bb-item-log-record__icon\"\n          size=\"md\"\n          [name]=\"itemLogRecord?.status === 'REJECTED' ? 'cancel' : 'success'\"\n          [color]=\"itemLogRecord?.status === 'REJECTED' ? 'danger' : 'success'\"\n        ></bb-icon-ui>\n        <div class=\"bb-item-log-record__details\">\n          <span class=\"bb-text-bold\" i18n=\"@@item-log-waiting-for-approvals.status\">\n            { itemLogRecord?.status, select, REJECTED {Rejected} APPROVED {Approved} other {} }\n          </span>\n\n          <span>\n            <ng-container i18n=\"@@item-log-approved-by.label\"> by {{ itemLogRecord.userFullName }}</ng-container>\n            <ng-container *ngIf=\"itemLogRecord?.externalUserId\"> ({{ itemLogRecord.externalUserId }})</ng-container>\n          </span>\n\n          <div class=\"bb-item-log-record__time\">\n            <time> {{ itemLogRecord?.createdAt | date }}</time>\n            <ng-container i18n=\"@@item.log.details.created.at\"> at</ng-container>\n            <time> {{ itemLogRecord?.createdAt | date: 'shortTime' }}</time>\n          </div>\n        </div>\n\n        <div class=\"bb-item-log-record__comment bb-stack bb-stack--density-sm\" *ngIf=\"itemLogRecord?.comment\">\n          <div class=\"bb-stack__item bb-stack__item--align-top\">\n            <bb-icon-ui color=\"secondary\" name=\"forum\" size=\"sm\"></bb-icon-ui>\n          </div>\n\n          <div class=\"bb-stack__item\">\n            {{ itemLogRecord?.comment }}\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </div>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "date": i2.DatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-item-log-ui',
                    templateUrl: './item-log.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { customItemLog: [{
                type: ContentChild,
                args: [ItemLogRecordDirective, { static: true }]
            }], isPending: [{
                type: Input
            }], records: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbS1sb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvaXRlbS1sb2cvaXRlbS1sb2cuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvaXRlbS1sb2cvaXRlbS1sb2cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSx1QkFBdUIsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFlLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUdoSCxNQUFNLE9BQU8sc0JBQXNCO0lBQ2pDLFlBQW1CLFdBQTZCO1FBQTdCLGdCQUFXLEdBQVgsV0FBVyxDQUFrQjtJQUFHLENBQUM7O29IQUR6QyxzQkFBc0I7d0dBQXRCLHNCQUFzQjs0RkFBdEIsc0JBQXNCO2tCQURsQyxTQUFTO21CQUFDLEVBQUUsUUFBUSxFQUFFLDhCQUE4QixFQUFFOztBQWlCdkQsTUFBTSxPQUFPLGdCQUFnQjtJQUw3QjtRQVNFOztXQUVHO1FBQ00sY0FBUyxHQUFHLEtBQUssQ0FBQztLQU01Qjs7OEdBYlksZ0JBQWdCO2tHQUFoQixnQkFBZ0IseUpBQ2Isc0JBQXNCLDhEQ3BCdEMsdTRFQW1EQTs0RkRoQ2EsZ0JBQWdCO2tCQUw1QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFdBQVcsRUFBRSwyQkFBMkI7b0JBQ3hDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs4QkFHQyxhQUFhO3NCQURaLFlBQVk7dUJBQUMsc0JBQXNCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO2dCQU03QyxTQUFTO3NCQUFqQixLQUFLO2dCQUtHLE9BQU87c0JBQWYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBEaXJlY3RpdmUsIFRlbXBsYXRlUmVmLCBDb250ZW50Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnbmctdGVtcGxhdGVbYmJJdGVtTG9nUmVjb3JkXScgfSlcbmV4cG9ydCBjbGFzcyBJdGVtTG9nUmVjb3JkRGlyZWN0aXZlIHtcbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuZXhwb3J0IGludGVyZmFjZSBJdGVtTG9nUmVjb3JkIHtcbiAgY3JlYXRlZEF0OiBzdHJpbmc7XG4gIHVzZXJGdWxsTmFtZTogc3RyaW5nO1xuICBzdGF0dXM6IHN0cmluZztcbiAgY29tbWVudD86IHN0cmluZztcbiAgZXh0ZXJuYWxVc2VySWQ/OiBzdHJpbmc7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWl0ZW0tbG9nLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2l0ZW0tbG9nLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEl0ZW1Mb2dDb21wb25lbnQ8VD4ge1xuICBAQ29udGVudENoaWxkKEl0ZW1Mb2dSZWNvcmREaXJlY3RpdmUsIHsgc3RhdGljOiB0cnVlIH0pXG4gIGN1c3RvbUl0ZW1Mb2c/OiBJdGVtTG9nUmVjb3JkRGlyZWN0aXZlO1xuXG4gIC8qKlxuICAgKiBGbGFnIHRoYXQgZGVub3RlcyBpZiBpdGVtIGxvZyBzdGF0dXMgaXMgcGVuZGluZy4gRGVmYXVsdHMgdG8gZmFsc2VcbiAgICovXG4gIEBJbnB1dCgpIGlzUGVuZGluZyA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBMaXN0IG9mIGl0ZW0gbG9nIHJlY29yZHMuXG4gICAqL1xuICBASW5wdXQoKSByZWNvcmRzPzogQXJyYXk8SXRlbUxvZ1JlY29yZCB8IFQ+O1xufVxuIiwiPGRpdiBjbGFzcz1cImJiLWl0ZW0tbG9nXCI+XG4gIDxkaXYgKm5nSWY9XCJpc1BlbmRpbmdcIiBjbGFzcz1cImJiLWl0ZW0tbG9nX19wZW5kaW5nLXJlY29yZFwiIGRhdGEtcm9sZT1cIml0ZW0tbG9nLWRldGFpbHMtcGVuZGluZy1yb3dcIj5cbiAgICA8YmItaWNvbi11aSBjbGFzcz1cImJiLXRleHQtc3VwcG9ydCBiYi1pdGVtLWxvZy1yZWNvcmRfX2ljb25cIiBuYW1lPVwid2F0Y2gtbGF0ZXJcIiBzaXplPVwibWRcIj48L2JiLWljb24tdWk+XG4gICAgPGRpdiBjbGFzcz1cImJiLWl0ZW0tbG9nX19wZW5kaW5nLXJlY29yZC0tZGV0YWlscyBiYi10ZXh0LWJvbGRcIiBpMThuPVwiQEBpdGVtLWxvZy13YWl0aW5nLWZvci1hcHByb3ZhbHMubGFiZWxcIj5cbiAgICAgIFdhaXRpbmcgZm9yIGZ1cnRoZXIgYXBwcm92YWwocylcbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgKm5nRm9yPVwibGV0IGl0ZW1Mb2dSZWNvcmQgb2YgcmVjb3Jkc1wiIGNsYXNzPVwiYmItaXRlbS1sb2dfX3JlY29yZFwiIGRhdGEtcm9sZT1cIml0ZW0tbG9nLWRldGFpbHMtcmVjb3JkXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImN1c3RvbUl0ZW1Mb2c7IGVsc2UgZGVmYXVsdFwiPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImN1c3RvbUl0ZW1Mb2c/LnRlbXBsYXRlUmVmOyBjb250ZXh0OiB7ICRpbXBsaWNpdDogaXRlbUxvZ1JlY29yZCB9XCI+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgIDxuZy10ZW1wbGF0ZSAjZGVmYXVsdD5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFjayBiYi1zdGFjay0tYWxpZ24tdG9wXCI+XG4gICAgICAgIDxiYi1pY29uLXVpXG4gICAgICAgICAgY2xhc3M9XCJiYi1pdGVtLWxvZy1yZWNvcmRfX2ljb25cIlxuICAgICAgICAgIHNpemU9XCJtZFwiXG4gICAgICAgICAgW25hbWVdPVwiaXRlbUxvZ1JlY29yZD8uc3RhdHVzID09PSAnUkVKRUNURUQnID8gJ2NhbmNlbCcgOiAnc3VjY2VzcydcIlxuICAgICAgICAgIFtjb2xvcl09XCJpdGVtTG9nUmVjb3JkPy5zdGF0dXMgPT09ICdSRUpFQ1RFRCcgPyAnZGFuZ2VyJyA6ICdzdWNjZXNzJ1wiXG4gICAgICAgID48L2JiLWljb24tdWk+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJiYi1pdGVtLWxvZy1yZWNvcmRfX2RldGFpbHNcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImJiLXRleHQtYm9sZFwiIGkxOG49XCJAQGl0ZW0tbG9nLXdhaXRpbmctZm9yLWFwcHJvdmFscy5zdGF0dXNcIj5cbiAgICAgICAgICAgIHsgaXRlbUxvZ1JlY29yZD8uc3RhdHVzLCBzZWxlY3QsIFJFSkVDVEVEIHtSZWplY3RlZH0gQVBQUk9WRUQge0FwcHJvdmVkfSBvdGhlciB7fSB9XG4gICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyIGkxOG49XCJAQGl0ZW0tbG9nLWFwcHJvdmVkLWJ5LmxhYmVsXCI+IGJ5IHt7IGl0ZW1Mb2dSZWNvcmQudXNlckZ1bGxOYW1lIH19PC9uZy1jb250YWluZXI+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaXRlbUxvZ1JlY29yZD8uZXh0ZXJuYWxVc2VySWRcIj4gKHt7IGl0ZW1Mb2dSZWNvcmQuZXh0ZXJuYWxVc2VySWQgfX0pPC9uZy1jb250YWluZXI+XG4gICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImJiLWl0ZW0tbG9nLXJlY29yZF9fdGltZVwiPlxuICAgICAgICAgICAgPHRpbWU+IHt7IGl0ZW1Mb2dSZWNvcmQ/LmNyZWF0ZWRBdCB8IGRhdGUgfX08L3RpbWU+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyIGkxOG49XCJAQGl0ZW0ubG9nLmRldGFpbHMuY3JlYXRlZC5hdFwiPiBhdDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgPHRpbWU+IHt7IGl0ZW1Mb2dSZWNvcmQ/LmNyZWF0ZWRBdCB8IGRhdGU6ICdzaG9ydFRpbWUnIH19PC90aW1lPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwiYmItaXRlbS1sb2ctcmVjb3JkX19jb21tZW50IGJiLXN0YWNrIGJiLXN0YWNrLS1kZW5zaXR5LXNtXCIgKm5nSWY9XCJpdGVtTG9nUmVjb3JkPy5jb21tZW50XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImJiLXN0YWNrX19pdGVtIGJiLXN0YWNrX19pdGVtLS1hbGlnbi10b3BcIj5cbiAgICAgICAgICAgIDxiYi1pY29uLXVpIGNvbG9yPVwic2Vjb25kYXJ5XCIgbmFtZT1cImZvcnVtXCIgc2l6ZT1cInNtXCI+PC9iYi1pY29uLXVpPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCI+XG4gICAgICAgICAgICB7eyBpdGVtTG9nUmVjb3JkPy5jb21tZW50IH19XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==