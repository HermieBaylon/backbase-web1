import { Directive, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
export class DropdownMenuOptionToken {
}
export class DropdownMenuOptionDirective extends DropdownMenuOptionToken {
    constructor() {
        super(...arguments);
        /**
         * Boolean value to add/remove the active class on menuitem
         *
         * @default false
         */
        this.active = false;
        /**
         * Event that is emitted when user clicks on menuitem
         */
        this.selectionChange = new EventEmitter();
    }
    onSelect() {
        this.selectionChange.emit(this);
    }
}
DropdownMenuOptionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownMenuOptionDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
DropdownMenuOptionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: DropdownMenuOptionDirective, selector: "[bbDropdownMenuOption]", inputs: { bbDropdownMenuOption: "bbDropdownMenuOption", active: "active" }, outputs: { selectionChange: "selectionChange" }, host: { listeners: { "click": "onSelect()", "keydown.enter": "onSelect()", "keydown.space": "onSelect()" }, properties: { "class.active": "this.active" } }, providers: [
        {
            provide: DropdownMenuOptionToken,
            useExisting: DropdownMenuOptionDirective,
        },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownMenuOptionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbDropdownMenuOption]',
                    providers: [
                        {
                            provide: DropdownMenuOptionToken,
                            useExisting: DropdownMenuOptionDirective,
                        },
                    ],
                }]
        }], propDecorators: { bbDropdownMenuOption: [{
                type: Input
            }], active: [{
                type: HostBinding,
                args: ['class.active']
            }, {
                type: Input
            }], selectionChange: [{
                type: Output
            }], onSelect: [{
                type: HostListener,
                args: ['click']
            }, {
                type: HostListener,
                args: ['keydown.enter']
            }, {
                type: HostListener,
                args: ['keydown.space']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tbWVudS1vcHRpb24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvZHJvcGRvd24tbWVudS9kaXJlY3RpdmVzL2Ryb3Bkb3duLW1lbnUtb3B0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRWxHLE1BQU0sT0FBZ0IsdUJBQXVCO0NBSTVDO0FBV0QsTUFBTSxPQUFPLDJCQUE0QixTQUFRLHVCQUF1QjtJQVR4RTs7UUFlRTs7OztXQUlHO1FBQ21DLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFFckQ7O1dBRUc7UUFDTyxvQkFBZSxHQUE4QyxJQUFJLFlBQVksRUFBRSxDQUFDO0tBUTNGO0lBSEMsUUFBUTtRQUNOLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7O3lIQXZCVSwyQkFBMkI7NkdBQTNCLDJCQUEyQiwyVUFQM0I7UUFDVDtZQUNFLE9BQU8sRUFBRSx1QkFBdUI7WUFDaEMsV0FBVyxFQUFFLDJCQUEyQjtTQUN6QztLQUNGOzRGQUVVLDJCQUEyQjtrQkFUdkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLHVCQUF1Qjs0QkFDaEMsV0FBVyw2QkFBNkI7eUJBQ3pDO3FCQUNGO2lCQUNGOzhCQUtVLG9CQUFvQjtzQkFBNUIsS0FBSztnQkFPZ0MsTUFBTTtzQkFBM0MsV0FBVzt1QkFBQyxjQUFjOztzQkFBRyxLQUFLO2dCQUt6QixlQUFlO3NCQUF4QixNQUFNO2dCQUtQLFFBQVE7c0JBSFAsWUFBWTt1QkFBQyxPQUFPOztzQkFDcEIsWUFBWTt1QkFBQyxlQUFlOztzQkFDNUIsWUFBWTt1QkFBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIERyb3Bkb3duTWVudU9wdGlvblRva2VuIHtcbiAgYWN0aXZlITogYm9vbGVhbjtcbiAgYmJEcm9wZG93bk1lbnVPcHRpb24hOiBzdHJpbmc7XG4gIHNlbGVjdGlvbkNoYW5nZSE6IEV2ZW50RW1pdHRlcjxEcm9wZG93bk1lbnVPcHRpb25EaXJlY3RpdmU+O1xufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJEcm9wZG93bk1lbnVPcHRpb25dJyxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogRHJvcGRvd25NZW51T3B0aW9uVG9rZW4sXG4gICAgICB1c2VFeGlzdGluZzogRHJvcGRvd25NZW51T3B0aW9uRGlyZWN0aXZlLFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIERyb3Bkb3duTWVudU9wdGlvbkRpcmVjdGl2ZSBleHRlbmRzIERyb3Bkb3duTWVudU9wdGlvblRva2VuIHtcbiAgLyoqXG4gICAqIHZhbHVlIG9mIHRoZSBkcm9wZG93biBtZW51aXRlbVxuICAgKi9cbiAgQElucHV0KCkgYmJEcm9wZG93bk1lbnVPcHRpb24hOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEJvb2xlYW4gdmFsdWUgdG8gYWRkL3JlbW92ZSB0aGUgYWN0aXZlIGNsYXNzIG9uIG1lbnVpdGVtXG4gICAqXG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqL1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFjdGl2ZScpIEBJbnB1dCgpIGFjdGl2ZSA9IGZhbHNlO1xuXG4gIC8qKlxuICAgKiBFdmVudCB0aGF0IGlzIGVtaXR0ZWQgd2hlbiB1c2VyIGNsaWNrcyBvbiBtZW51aXRlbVxuICAgKi9cbiAgQE91dHB1dCgpIHNlbGVjdGlvbkNoYW5nZTogRXZlbnRFbWl0dGVyPERyb3Bkb3duTWVudU9wdGlvbkRpcmVjdGl2ZT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICBASG9zdExpc3RlbmVyKCdrZXlkb3duLmVudGVyJylcbiAgQEhvc3RMaXN0ZW5lcigna2V5ZG93bi5zcGFjZScpXG4gIG9uU2VsZWN0KCkge1xuICAgIHRoaXMuc2VsZWN0aW9uQ2hhbmdlLmVtaXQodGhpcyk7XG4gIH1cbn1cbiJdfQ==