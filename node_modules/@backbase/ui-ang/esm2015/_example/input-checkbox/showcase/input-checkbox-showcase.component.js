import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/input-checkbox";
import * as i3 from "@backbase/ui-ang/input-validation-message";
let InputCheckboxShowcaseComponent = class InputCheckboxShowcaseComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.vForm = this.formBuilder.group({
            inputCheckbox: false,
            inputCheckbox2: false,
            inputCheckbox3: false,
            inputCheckbox4: false,
            inputCheckbox5: false,
            inputCheckbox6: false,
            inputCheckbox7: false,
            inputCheckboxDisabled: { value: false, disabled: true },
            inputCheckboxDisabledChecked: { value: true, disabled: true },
            inputCheckboxError: ['', Validators.requiredTrue],
            inputCheckboxIndeterminate: { value: true },
        });
    }
    isFieldValid(fieldName) {
        if (this.vForm) {
            const control = this.vForm.controls[fieldName];
            return control && control.valid;
        }
        return false;
    }
    ngOnInit() {
        if (this.vForm) {
            const control = this.vForm.get('inputCheckboxError');
            if (control) {
                control.markAsTouched();
            }
        }
    }
};
InputCheckboxShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputCheckboxShowcaseComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
InputCheckboxShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputCheckboxShowcaseComponent, selector: "bb-input-checkbox-ui-showcase", ngImport: i0, template: "<div click=\"update()\">Click</div>\n\n<form [formGroup]=\"vForm\">\n  <div class=\"bb-block bb-block--lg\">\n    <h4>List of vertically stacked checkboxes</h4>\n    <bb-input-checkbox-ui\n      #inputCheckbox\n      [id]=\"'inputCheckbox'\"\n      data-role=\"checkbox-default\"\n      formControlName=\"inputCheckbox\"\n      label=\"I accept the Terms of Service\"\n      class=\"bb-block bb-block--sm\"\n    ></bb-input-checkbox-ui>\n    <bb-input-checkbox-ui\n      #inputCheckbox2\n      [id]=\"'inputCheckbox2'\"\n      data-role=\"checkbox-default-2\"\n      formControlName=\"inputCheckbox2\"\n      label=\"I accept the Terms of Conditions\"\n    ></bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>List of horizontally stacked checkboxes</h4>\n    <div class=\"bb-stack\">\n      <bb-input-checkbox-ui\n        #inputCheckbox3\n        [id]=\"'inputCheckbox3'\"\n        data-role=\"checkbox-default-3\"\n        formControlName=\"inputCheckbox3\"\n        label=\"I accept the Terms of Service\"\n        class=\"bb-stack__item\"\n      ></bb-input-checkbox-ui>\n      <bb-input-checkbox-ui\n        #inputCheckbox4\n        [id]=\"'inputCheckbox4'\"\n        data-role=\"checkbox-default-4\"\n        formControlName=\"inputCheckbox4\"\n        label=\"I accept the Terms of Conditions\"\n      ></bb-input-checkbox-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Disabled</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxDisabled'\"\n      data-role=\"checkbox-disabled\"\n      formControlName=\"inputCheckboxDisabled\"\n      label=\"I accept the Terms of Service\"\n    ></bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Disabled, checked</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxDisabledChecked'\"\n      data-role=\"checkbox-disabled-selected\"\n      formControlName=\"inputCheckboxDisabledChecked\"\n      label=\"I accept the Terms of Service\"\n    ></bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Invalid checkbox</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxError'\"\n      [aria-describedby]=\"'inputCheckboxExampleError'\"\n      data-role=\"checkbox-validated\"\n      [required]=\"true\"\n      formControlName=\"inputCheckboxError\"\n      label=\"I accept the Terms of Service\"\n    ></bb-input-checkbox-ui>\n    <bb-input-validation-message-ui\n      [id]=\"'inputCheckboxExampleError'\"\n      [showErrors]=\"!isFieldValid('inputCheckboxError')\"\n    >\n      <span>This field is required.</span>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Indeterminate</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxIndeterminate'\"\n      data-role=\"checkbox-indeterminate\"\n      [indeterminate]=\"true\"\n      formControlName=\"inputCheckboxIndeterminate\"\n      label=\"I accept the Terms of Service\"\n    ></bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Labelled by child node with aria-labelledby</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxChildNode'\"\n      data-role=\"checkbox-child-node\"\n      formControlName=\"inputCheckbox5\"\n      [aria-labelledby]=\"'inputCheckboxChildNodeLabelId'\"\n    >\n      <span id=\"inputCheckboxChildNodeLabelId\">I accept the Terms of Service</span>\n    </bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Labelled by child node aria-label content</h4>\n    <bb-input-checkbox-ui\n      #inputCheckboxAriaLabel\n      [id]=\"'inputCheckboxAriaLabel'\"\n      data-role=\"checkbox-aria-labelled\"\n      formControlName=\"inputCheckbox6\"\n      [aria-label]=\"'I accept the Terms of Service'\"\n    >\n      <span>{{ inputCheckboxAriaLabel?.ariaLabel }}</span>\n    </bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block\">\n    <h4>Labelled by non child with aria-labelledby</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxAriaLabelledby'\"\n      data-role=\"checkbox-aria-labelledby\"\n      formControlName=\"inputCheckbox7\"\n      [aria-labelledby]=\"'ariaLabeledById'\"\n      class=\"bb-block bb-block--sm\"\n    >\n      Default label\n    </bb-input-checkbox-ui>\n    <span id=\"ariaLabeledById\">This label will be read out: I accept the Terms of Service</span>\n  </div>\n</form>\n", components: [{ type: i2.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
InputCheckboxShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], InputCheckboxShowcaseComponent);
export { InputCheckboxShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputCheckboxShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-checkbox-ui-showcase',
                    templateUrl: './input-checkbox-showcase.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,