import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/button";
import * as i2 from "@backbase/ui-ang/focus";
let FocusShowcaseComponent = class FocusShowcaseComponent {
};
FocusShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FocusShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
FocusShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FocusShowcaseComponent, selector: "bb-focus-ui-showcase", ngImport: i0, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Automatically setting focus</h4>\n  <p>Are you sure you want to delete something?</p>\n  <div class=\"bb-stack\">\n    <div class=\"bb-stack__item\">\n      <button bbButton bbFocus>Cancel</button>\n    </div>\n    <button bbButton>OK</button>\n  </div>\n</div>\n\n<div clsas=\"bb-block bb-block--xl\">\n  <h4>Manually setting focus</h4>\n  <div class=\"bb-stack\">\n    <div class=\"bb-stack__item\">\n      <button bbButton [bbFocus]=\"\" #focusThis=\"bbFocus\">Button with bbFocus</button>\n    </div>\n    <button bbButton (click)=\"focusThis.focus()\">Click to focus the other button</button>\n  </div>\n</div>\n", directives: [{ type: i1.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i2.FocusDirective, selector: "[bbFocus]", inputs: ["bbFocus"], exportAs: ["bbFocus"] }] });
FocusShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], FocusShowcaseComponent);
export { FocusShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FocusShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-focus-ui-showcase',
                    templateUrl: './focus-showcase.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMtc2hvd2Nhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvZm9jdXMvc2hvd2Nhc2UvZm9jdXMtc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvZm9jdXMvc2hvd2Nhc2UvZm9jdXMtc2hvd2Nhc2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7O0lBU3hDLHNCQUFzQixTQUF0QixzQkFBc0I7Q0FBRyxDQUFBO29IQUF6QixzQkFBc0I7d0dBQXRCLHNCQUFzQiw0RENWbkMsd3BCQW9CQTtBRFZhLHNCQUFzQjtJQUhsQyxZQUFZLENBQUM7UUFDWixjQUFjLEVBQUUsSUFBSTtLQUNyQixDQUFDO0dBQ1csc0JBQXNCLENBQUc7U0FBekIsc0JBQXNCOzRGQUF0QixzQkFBc0I7a0JBUGxDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsV0FBVyxFQUFFLGlDQUFpQztpQkFDL0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhY2tiYXNlRG9jcyB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvdXRpbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWZvY3VzLXVpLXNob3djYXNlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2ZvY3VzLXNob3djYXNlLmNvbXBvbmVudC5odG1sJyxcbn0pXG5AQmFja2Jhc2VEb2NzKHtcbiAgaXNUaGVtZTJTdGFibGU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIEZvY3VzU2hvd2Nhc2VDb21wb25lbnQge31cbiIsIjxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0teGxcIj5cbiAgPGg0PkF1dG9tYXRpY2FsbHkgc2V0dGluZyBmb2N1czwvaDQ+XG4gIDxwPkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgc29tZXRoaW5nPzwvcD5cbiAgPGRpdiBjbGFzcz1cImJiLXN0YWNrXCI+XG4gICAgPGRpdiBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCI+XG4gICAgICA8YnV0dG9uIGJiQnV0dG9uIGJiRm9jdXM+Q2FuY2VsPC9idXR0b24+XG4gICAgPC9kaXY+XG4gICAgPGJ1dHRvbiBiYkJ1dHRvbj5PSzwvYnV0dG9uPlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48ZGl2IGNsc2FzPVwiYmItYmxvY2sgYmItYmxvY2stLXhsXCI+XG4gIDxoND5NYW51YWxseSBzZXR0aW5nIGZvY3VzPC9oND5cbiAgPGRpdiBjbGFzcz1cImJiLXN0YWNrXCI+XG4gICAgPGRpdiBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCI+XG4gICAgICA8YnV0dG9uIGJiQnV0dG9uIFtiYkZvY3VzXT1cIlwiICNmb2N1c1RoaXM9XCJiYkZvY3VzXCI+QnV0dG9uIHdpdGggYmJGb2N1czwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICAgIDxidXR0b24gYmJCdXR0b24gKGNsaWNrKT1cImZvY3VzVGhpcy5mb2N1cygpXCI+Q2xpY2sgdG8gZm9jdXMgdGhlIG90aGVyIGJ1dHRvbjwvYnV0dG9uPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19