import { __decorate } from "tslib";
import { Component, ViewChild } from '@angular/core';
import { map } from 'rxjs/operators';
import { FormControl, FormGroup } from '@angular/forms';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/search-box";
import * as i2 from "@angular/forms";
const startsWithCaseInsensitive = (haystack, needle) => haystack.toLowerCase().startsWith(needle.toLowerCase());
let SearchBoxShowcaseComponent = class SearchBoxShowcaseComponent {
    constructor() {
        this.form = new FormGroup({
            name: new FormControl('John Doe'),
        });
        this.typeaheadOptions = {
            ngbTypeahead: this.search,
        };
    }
    search(text) {
        const searchItems = ['John', 'Jane', 'James', 'Joey'];
        return text.pipe(map((term) => searchItems.filter((item) => startsWithCaseInsensitive(item, term))));
    }
    customSearch(text) {
        const searchItems = [
            {
                fullName: 'John',
                legalEntityName: 'Legal Entity 1',
            },
            {
                fullName: 'Jane',
                legalEntityName: 'Legal Entity 2',
            },
            {
                fullName: 'James',
                legalEntityName: 'Legal Entity 3',
            },
            {
                fullName: 'Joey',
                legalEntityName: 'Legal Entity 4',
            },
        ];
        return text.pipe(map((term) => searchItems.filter((item) => startsWithCaseInsensitive(item.fullName, term))));
    }
    customInputFormatter(person) {
        return person.fullName;
    }
    get typeaheadOptionsWithTemplate() {
        return {
            ngbTypeahead: this.customSearch,
            resultTemplate: this.resultTemplate,
            inputFormatter: this.customInputFormatter,
        };
    }
};
SearchBoxShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SearchBoxShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SearchBoxShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SearchBoxShowcaseComponent, selector: "bb-search-box-ui-showcase", viewQueries: [{ propertyName: "resultTemplate", first: true, predicate: ["rt"], descendants: true, static: true }], ngImport: i0, template: "<form [formGroup]=\"form\">\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Small</h4>\n    <bb-search-box-ui\n      formControlName=\"name\"\n      [showClear]=\"true\"\n      [showSearch]=\"true\"\n      placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n      [typeaheadOptions]=\"typeaheadOptions\"\n      size=\"sm\"\n      [attr.data-role]=\"'searchbox-small'\"\n    >\n    </bb-search-box-ui>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Medium</h4>\n    <div class=\"bb-block bb-block--lg\">\n      <h5>Hide search</h5>\n      <bb-search-box-ui\n        formControlName=\"name\"\n        [showClear]=\"true\"\n        [showSearch]=\"false\"\n        placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n        [typeaheadOptions]=\"typeaheadOptions\"\n        [attr.data-role]=\"'searchbox-medium'\"\n      >\n      </bb-search-box-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <h5>Hide clear</h5>\n      <bb-search-box-ui\n        formControlName=\"name\"\n        [showClear]=\"false\"\n        [showSearch]=\"true\"\n        placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n        [typeaheadOptions]=\"typeaheadOptions\"\n        [attr.data-role]=\"'searchbox-medium'\"\n      >\n      </bb-search-box-ui>\n    </div>\n    <div>\n      <h5>Hide both clear and search</h5>\n      <bb-search-box-ui\n        formControlName=\"name\"\n        [showClear]=\"false\"\n        [showSearch]=\"false\"\n        placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n        [typeaheadOptions]=\"typeaheadOptions\"\n        [attr.data-role]=\"'searchbox-medium'\"\n      >\n      </bb-search-box-ui>\n    </div>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Disabled</h4>\n    <bb-search-box-ui\n      formControlName=\"name\"\n      [showClear]=\"false\"\n      [showSearch]=\"false\"\n      placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n      [typeaheadOptions]=\"typeaheadOptions\"\n      [disabled]=\"true\"\n      [attr.data-role]=\"'searchbox-disabled'\"\n    >\n    </bb-search-box-ui>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Search with custom template</h4>\n    <bb-search-box-ui\n      formControlName=\"name\"\n      [showClear]=\"true\"\n      [showSearch]=\"true\"\n      placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n      [typeaheadOptions]=\"typeaheadOptionsWithTemplate\"\n      [attr.data-role]=\"'searchbox-with-autocomplete'\"\n    >\n    </bb-search-box-ui>\n  </div>\n</form>\n\n<ng-template #rt let-r=\"result\">\n  <div class=\"p-2 w-50\">\n    <div class=\"font-weight-bold\">{{ r.fullName }}</div>\n    <div class=\"text-support\">{{ r.legalEntityName }}</div>\n  </div>\n</ng-template>\n", components: [{ type: i1.SearchBoxComponent, selector: "bb-search-box-ui", inputs: ["placeholder", "maxLength", "squareBorder", "typeaheadOptions", "showSearch", "showClear", "searchLabel", "clearLabel", "autocomplete"], outputs: ["submit", "clear", "valueChange"] }], directives: [{ type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
SearchBoxShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], SearchBoxShowcaseComponent);
export { SearchBoxShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SearchBoxShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-search-box-ui-showcase',
                    templateUrl: './search-box-showcase.component.html',
                }]
        }], propDecorators: { resultTemplate: [{
                type: ViewChild,
                args: ['rt', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,