import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/input-timepicker";
import * as i3 from "@backbase/ui-ang/input-validation-message";
import * as i4 from "@angular/common";
/**
 * @name InputTimepickerExampleComponent
 *
 * @description
 * Component that displays multiple examples with the timepicker component.
 */
export class InputTimepickerExampleComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.vForm = this.formBuilder.group({
            time: [''],
        });
        this.timeModel = '';
        this.min = '13:00:00';
        this.max = '14:30:00';
    }
    hasError(type) {
        const time = this.vForm.get('time');
        if (time !== null && time.errors) {
            return !!time.errors[type];
        }
        return false;
    }
    showErrors() {
        const time = this.vForm.get('time');
        if (time !== null) {
            return time.errors && !time.valid;
        }
        return null;
    }
}
InputTimepickerExampleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputTimepickerExampleComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
InputTimepickerExampleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputTimepickerExampleComponent, selector: "bb-input-timepicker-example-ui", ngImport: i0, template: "<div class=\"container d-block\">\n  <h5>Timepicker with 10 minute step and validation errors</h5>\n  <form [formGroup]=\"vForm\">\n    <bb-input-timepicker-ui\n      id=\"timePicker-validation\"\n      [readonly]=\"false\"\n      [minuteStep]=\"10\"\n      formControlName=\"time\"\n      [min]=\"min\"\n      [max]=\"max\"\n    >\n    </bb-input-timepicker-ui>\n\n    <bb-input-validation-message-ui [showErrors]=\"showErrors()\">\n      <span *ngIf=\"hasError('minTime')\">Time should be after {{ min }}</span>\n      <span *ngIf=\"hasError('maxTime')\">Time should not exceed {{ max }}</span>\n      <span *ngIf=\"hasError('minMaxTime')\">Time should be between {{ min }} and {{ max }}</span>\n    </bb-input-validation-message-ui>\n  </form>\n  <br />\n\n  <h5>Readonly timepicker</h5>\n  <bb-input-timepicker-ui id=\"timepicker-readonly\" [readonly]=\"true\"> </bb-input-timepicker-ui>\n  <br />\n\n  <h5>Timepicker with seconds and meridian</h5>\n  <bb-input-timepicker-ui\n    id=\"timepicker-meridian\"\n    [readonly]=\"false\"\n    [seconds]=\"true\"\n    clock=\"12h\"\n    [(ngModel)]=\"timeModel\"\n    [min]=\"min\"\n  >\n  </bb-input-timepicker-ui>\n</div>\n", components: [{ type: i2.InputTimepickerComponent, selector: "bb-input-timepicker-ui", inputs: ["hourStep", "clock", "minuteStep", "readonly", "seconds", "secondStep", "min", "max", "autocomplete"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputTimepickerExampleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-timepicker-example-ui',
                    templateUrl: './input-timepicker-example.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtdGltZXBpY2tlci1leGFtcGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL2lucHV0LXRpbWVwaWNrZXIvZXhhbXBsZXMvaW5wdXQtdGltZXBpY2tlci1leGFtcGxlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL2lucHV0LXRpbWVwaWNrZXIvZXhhbXBsZXMvaW5wdXQtdGltZXBpY2tlci1leGFtcGxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQVExQzs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTywrQkFBK0I7SUEwQjFDLFlBQTZCLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBekJyRCxVQUFLLEdBQWMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7WUFDeEMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO1NBQ1gsQ0FBQyxDQUFDO1FBQ0gsY0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNmLFFBQUcsR0FBRyxVQUFVLENBQUM7UUFDakIsUUFBRyxHQUFHLFVBQVUsQ0FBQztJQW9CdUMsQ0FBQztJQWxCekQsUUFBUSxDQUFDLElBQVk7UUFDbkIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEMsSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QjtRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELFVBQVU7UUFDUixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQyxJQUFJLElBQUksS0FBSyxJQUFJLEVBQUU7WUFDakIsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUNuQztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7NkhBeEJVLCtCQUErQjtpSEFBL0IsK0JBQStCLHNFQ2Q1Qyx3cENBb0NBOzRGRHRCYSwrQkFBK0I7a0JBWDNDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdDQUFnQztvQkFDMUMsV0FBVyxFQUFFLDJDQUEyQztpQkFDekQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWlucHV0LXRpbWVwaWNrZXItZXhhbXBsZS11aScsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC10aW1lcGlja2VyLWV4YW1wbGUuY29tcG9uZW50Lmh0bWwnLFxufSlcblxuLyoqXG4gKiBAbmFtZSBJbnB1dFRpbWVwaWNrZXJFeGFtcGxlQ29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBDb21wb25lbnQgdGhhdCBkaXNwbGF5cyBtdWx0aXBsZSBleGFtcGxlcyB3aXRoIHRoZSB0aW1lcGlja2VyIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIElucHV0VGltZXBpY2tlckV4YW1wbGVDb21wb25lbnQge1xuICB2Rm9ybTogRm9ybUdyb3VwID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7XG4gICAgdGltZTogWycnXSxcbiAgfSk7XG4gIHRpbWVNb2RlbCA9ICcnO1xuICBtaW4gPSAnMTM6MDA6MDAnO1xuICBtYXggPSAnMTQ6MzA6MDAnO1xuXG4gIGhhc0Vycm9yKHR5cGU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHRpbWUgPSB0aGlzLnZGb3JtLmdldCgndGltZScpO1xuICAgIGlmICh0aW1lICE9PSBudWxsICYmIHRpbWUuZXJyb3JzKSB7XG4gICAgICByZXR1cm4gISF0aW1lLmVycm9yc1t0eXBlXTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzaG93RXJyb3JzKCk6IGJvb2xlYW4gfCBudWxsIHtcbiAgICBjb25zdCB0aW1lID0gdGhpcy52Rm9ybS5nZXQoJ3RpbWUnKTtcbiAgICBpZiAodGltZSAhPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHRpbWUuZXJyb3JzICYmICF0aW1lLnZhbGlkO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIpIHt9XG59XG4iLCI8ZGl2IGNsYXNzPVwiY29udGFpbmVyIGQtYmxvY2tcIj5cbiAgPGg1PlRpbWVwaWNrZXIgd2l0aCAxMCBtaW51dGUgc3RlcCBhbmQgdmFsaWRhdGlvbiBlcnJvcnM8L2g1PlxuICA8Zm9ybSBbZm9ybUdyb3VwXT1cInZGb3JtXCI+XG4gICAgPGJiLWlucHV0LXRpbWVwaWNrZXItdWlcbiAgICAgIGlkPVwidGltZVBpY2tlci12YWxpZGF0aW9uXCJcbiAgICAgIFtyZWFkb25seV09XCJmYWxzZVwiXG4gICAgICBbbWludXRlU3RlcF09XCIxMFwiXG4gICAgICBmb3JtQ29udHJvbE5hbWU9XCJ0aW1lXCJcbiAgICAgIFttaW5dPVwibWluXCJcbiAgICAgIFttYXhdPVwibWF4XCJcbiAgICA+XG4gICAgPC9iYi1pbnB1dC10aW1lcGlja2VyLXVpPlxuXG4gICAgPGJiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aSBbc2hvd0Vycm9yc109XCJzaG93RXJyb3JzKClcIj5cbiAgICAgIDxzcGFuICpuZ0lmPVwiaGFzRXJyb3IoJ21pblRpbWUnKVwiPlRpbWUgc2hvdWxkIGJlIGFmdGVyIHt7IG1pbiB9fTwvc3Bhbj5cbiAgICAgIDxzcGFuICpuZ0lmPVwiaGFzRXJyb3IoJ21heFRpbWUnKVwiPlRpbWUgc2hvdWxkIG5vdCBleGNlZWQge3sgbWF4IH19PC9zcGFuPlxuICAgICAgPHNwYW4gKm5nSWY9XCJoYXNFcnJvcignbWluTWF4VGltZScpXCI+VGltZSBzaG91bGQgYmUgYmV0d2VlbiB7eyBtaW4gfX0gYW5kIHt7IG1heCB9fTwvc3Bhbj5cbiAgICA8L2JiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aT5cbiAgPC9mb3JtPlxuICA8YnIgLz5cblxuICA8aDU+UmVhZG9ubHkgdGltZXBpY2tlcjwvaDU+XG4gIDxiYi1pbnB1dC10aW1lcGlja2VyLXVpIGlkPVwidGltZXBpY2tlci1yZWFkb25seVwiIFtyZWFkb25seV09XCJ0cnVlXCI+IDwvYmItaW5wdXQtdGltZXBpY2tlci11aT5cbiAgPGJyIC8+XG5cbiAgPGg1PlRpbWVwaWNrZXIgd2l0aCBzZWNvbmRzIGFuZCBtZXJpZGlhbjwvaDU+XG4gIDxiYi1pbnB1dC10aW1lcGlja2VyLXVpXG4gICAgaWQ9XCJ0aW1lcGlja2VyLW1lcmlkaWFuXCJcbiAgICBbcmVhZG9ubHldPVwiZmFsc2VcIlxuICAgIFtzZWNvbmRzXT1cInRydWVcIlxuICAgIGNsb2NrPVwiMTJoXCJcbiAgICBbKG5nTW9kZWwpXT1cInRpbWVNb2RlbFwiXG4gICAgW21pbl09XCJtaW5cIlxuICA+XG4gIDwvYmItaW5wdXQtdGltZXBpY2tlci11aT5cbjwvZGl2PlxuIl19