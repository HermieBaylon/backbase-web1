import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/input-timepicker";
import * as i3 from "@backbase/ui-ang/input-validation-message";
import * as i4 from "@angular/common";
let InputTimepickerShowcaseComponent = class InputTimepickerShowcaseComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.vForm = this.formBuilder.group({
            time: [''],
        });
        this.timeModel = '';
        this.min = '13:00:00';
        this.max = '14:30:00';
    }
    hasError(type) {
        const time = this.vForm.get('time');
        if (time !== null && time.errors) {
            return !!time.errors[type];
        }
        return false;
    }
    showErrors() {
        const time = this.vForm.get('time');
        if (time !== null) {
            return time.errors && !time.valid;
        }
        return null;
    }
};
InputTimepickerShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputTimepickerShowcaseComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
InputTimepickerShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputTimepickerShowcaseComponent, selector: "bb-input-timepicker-ui-showcase", ngImport: i0, template: "<div class=\"bb-block bb-block--lg\">\n  <h2>Timepicker with 10 minute step and validation errors</h2>\n  <form [formGroup]=\"vForm\">\n    <bb-input-timepicker-ui\n      id=\"timePicker-validation\"\n      [aria-describedby]=\"'input-timepicker-example-error'\"\n      [readonly]=\"false\"\n      [minuteStep]=\"10\"\n      formControlName=\"time\"\n      [min]=\"min\"\n      [max]=\"max\"\n    >\n    </bb-input-timepicker-ui>\n\n    <bb-input-validation-message-ui [showErrors]=\"showErrors()\" [id]=\"'input-timepicker-example-error'\">\n      <span *ngIf=\"hasError('minTime')\">Time should be after {{ min }}</span>\n      <span *ngIf=\"hasError('maxTime')\">Time should not exceed {{ max }}</span>\n      <span *ngIf=\"hasError('minMaxTime')\">Time should be between {{ min }} and {{ max }}</span>\n    </bb-input-validation-message-ui>\n  </form>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Readonly timepicker</h2>\n  <bb-input-timepicker-ui id=\"timepicker-readonly\" [readonly]=\"true\"></bb-input-timepicker-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Disabled timepicker</h2>\n  <bb-input-timepicker-ui id=\"timepicker-readonly\" [disabled]=\"true\"></bb-input-timepicker-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Small timepicker</h2>\n  <bb-input-timepicker-ui id=\"timepicker-readonly-small\" [size]=\"'small'\"></bb-input-timepicker-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Timepicker with seconds and meridian</h2>\n  <bb-input-timepicker-ui\n    id=\"timepicker-meridian\"\n    [readonly]=\"false\"\n    [seconds]=\"true\"\n    clock=\"12h\"\n    [(ngModel)]=\"timeModel\"\n    [min]=\"min\"\n  >\n  </bb-input-timepicker-ui>\n</div>\n", components: [{ type: i2.InputTimepickerComponent, selector: "bb-input-timepicker-ui", inputs: ["hourStep", "clock", "minuteStep", "readonly", "seconds", "secondStep", "min", "max", "autocomplete"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
InputTimepickerShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
    /**
     * @name InputTimepickerShowcaseComponent
     *
     * @description
     * Component that displays multiple examples with the timepicker component.
     */
], InputTimepickerShowcaseComponent);
export { InputTimepickerShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputTimepickerShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-timepicker-ui-showcase',
                    templateUrl: './input-timepicker-showcase.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtdGltZXBpY2tlci1zaG93Y2FzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9fZXhhbXBsZS9pbnB1dC10aW1lcGlja2VyL3Nob3djYXNlL2lucHV0LXRpbWVwaWNrZXItc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvaW5wdXQtdGltZXBpY2tlci9zaG93Y2FzZS9pbnB1dC10aW1lcGlja2VyLXNob3djYXNlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7O0lBZXhDLGdDQUFnQyxTQUFoQyxnQ0FBZ0M7SUEwQjNDLFlBQTZCLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBekJyRCxVQUFLLEdBQWMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7WUFDeEMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO1NBQ1gsQ0FBQyxDQUFDO1FBQ0gsY0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNmLFFBQUcsR0FBRyxVQUFVLENBQUM7UUFDakIsUUFBRyxHQUFHLFVBQVUsQ0FBQztJQW9CdUMsQ0FBQztJQWxCekQsUUFBUSxDQUFDLElBQVk7UUFDbkIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEMsSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QjtRQUVELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELFVBQVU7UUFDUixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQyxJQUFJLElBQUksS0FBSyxJQUFJLEVBQUU7WUFDakIsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUNuQztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUdGLENBQUE7OEhBM0JZLGdDQUFnQztrSEFBaEMsZ0NBQWdDLHVFQ2pCN0Msa3JEQTZDQTtBRDVCYSxnQ0FBZ0M7SUFUNUMsWUFBWSxDQUFDO1FBQ1osY0FBYyxFQUFFLElBQUk7S0FDckIsQ0FBQztJQUNGOzs7OztPQUtHO0dBQ1UsZ0NBQWdDLENBMkI1QztTQTNCWSxnQ0FBZ0M7NEZBQWhDLGdDQUFnQztrQkFiNUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUNBQWlDO29CQUMzQyxXQUFXLEVBQUUsNENBQTRDO2lCQUMxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEJhY2tiYXNlRG9jcyB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvdXRpbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWlucHV0LXRpbWVwaWNrZXItdWktc2hvd2Nhc2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtdGltZXBpY2tlci1zaG93Y2FzZS5jb21wb25lbnQuaHRtbCcsXG59KVxuQEJhY2tiYXNlRG9jcyh7XG4gIGlzVGhlbWUyU3RhYmxlOiB0cnVlLFxufSlcbi8qKlxuICogQG5hbWUgSW5wdXRUaW1lcGlja2VyU2hvd2Nhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbXBvbmVudCB0aGF0IGRpc3BsYXlzIG11bHRpcGxlIGV4YW1wbGVzIHdpdGggdGhlIHRpbWVwaWNrZXIgY29tcG9uZW50LlxuICovXG5leHBvcnQgY2xhc3MgSW5wdXRUaW1lcGlja2VyU2hvd2Nhc2VDb21wb25lbnQge1xuICB2Rm9ybTogRm9ybUdyb3VwID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7XG4gICAgdGltZTogWycnXSxcbiAgfSk7XG4gIHRpbWVNb2RlbCA9ICcnO1xuICBtaW4gPSAnMTM6MDA6MDAnO1xuICBtYXggPSAnMTQ6MzA6MDAnO1xuXG4gIGhhc0Vycm9yKHR5cGU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHRpbWUgPSB0aGlzLnZGb3JtLmdldCgndGltZScpO1xuICAgIGlmICh0aW1lICE9PSBudWxsICYmIHRpbWUuZXJyb3JzKSB7XG4gICAgICByZXR1cm4gISF0aW1lLmVycm9yc1t0eXBlXTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzaG93RXJyb3JzKCk6IGJvb2xlYW4gfCBudWxsIHtcbiAgICBjb25zdCB0aW1lID0gdGhpcy52Rm9ybS5nZXQoJ3RpbWUnKTtcbiAgICBpZiAodGltZSAhPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHRpbWUuZXJyb3JzICYmICF0aW1lLnZhbGlkO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIpIHt9XG59XG4iLCI8ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLWxnXCI+XG4gIDxoMj5UaW1lcGlja2VyIHdpdGggMTAgbWludXRlIHN0ZXAgYW5kIHZhbGlkYXRpb24gZXJyb3JzPC9oMj5cbiAgPGZvcm0gW2Zvcm1Hcm91cF09XCJ2Rm9ybVwiPlxuICAgIDxiYi1pbnB1dC10aW1lcGlja2VyLXVpXG4gICAgICBpZD1cInRpbWVQaWNrZXItdmFsaWRhdGlvblwiXG4gICAgICBbYXJpYS1kZXNjcmliZWRieV09XCInaW5wdXQtdGltZXBpY2tlci1leGFtcGxlLWVycm9yJ1wiXG4gICAgICBbcmVhZG9ubHldPVwiZmFsc2VcIlxuICAgICAgW21pbnV0ZVN0ZXBdPVwiMTBcIlxuICAgICAgZm9ybUNvbnRyb2xOYW1lPVwidGltZVwiXG4gICAgICBbbWluXT1cIm1pblwiXG4gICAgICBbbWF4XT1cIm1heFwiXG4gICAgPlxuICAgIDwvYmItaW5wdXQtdGltZXBpY2tlci11aT5cblxuICAgIDxiYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWkgW3Nob3dFcnJvcnNdPVwic2hvd0Vycm9ycygpXCIgW2lkXT1cIidpbnB1dC10aW1lcGlja2VyLWV4YW1wbGUtZXJyb3InXCI+XG4gICAgICA8c3BhbiAqbmdJZj1cImhhc0Vycm9yKCdtaW5UaW1lJylcIj5UaW1lIHNob3VsZCBiZSBhZnRlciB7eyBtaW4gfX08L3NwYW4+XG4gICAgICA8c3BhbiAqbmdJZj1cImhhc0Vycm9yKCdtYXhUaW1lJylcIj5UaW1lIHNob3VsZCBub3QgZXhjZWVkIHt7IG1heCB9fTwvc3Bhbj5cbiAgICAgIDxzcGFuICpuZ0lmPVwiaGFzRXJyb3IoJ21pbk1heFRpbWUnKVwiPlRpbWUgc2hvdWxkIGJlIGJldHdlZW4ge3sgbWluIH19IGFuZCB7eyBtYXggfX08L3NwYW4+XG4gICAgPC9iYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWk+XG4gIDwvZm9ybT5cbjwvZGl2PlxuPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1sZ1wiPlxuICA8aDI+UmVhZG9ubHkgdGltZXBpY2tlcjwvaDI+XG4gIDxiYi1pbnB1dC10aW1lcGlja2VyLXVpIGlkPVwidGltZXBpY2tlci1yZWFkb25seVwiIFtyZWFkb25seV09XCJ0cnVlXCI+PC9iYi1pbnB1dC10aW1lcGlja2VyLXVpPlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLWxnXCI+XG4gIDxoMj5EaXNhYmxlZCB0aW1lcGlja2VyPC9oMj5cbiAgPGJiLWlucHV0LXRpbWVwaWNrZXItdWkgaWQ9XCJ0aW1lcGlja2VyLXJlYWRvbmx5XCIgW2Rpc2FibGVkXT1cInRydWVcIj48L2JiLWlucHV0LXRpbWVwaWNrZXItdWk+XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbGdcIj5cbiAgPGgyPlNtYWxsIHRpbWVwaWNrZXI8L2gyPlxuICA8YmItaW5wdXQtdGltZXBpY2tlci11aSBpZD1cInRpbWVwaWNrZXItcmVhZG9ubHktc21hbGxcIiBbc2l6ZV09XCInc21hbGwnXCI+PC9iYi1pbnB1dC10aW1lcGlja2VyLXVpPlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLWxnXCI+XG4gIDxoMj5UaW1lcGlja2VyIHdpdGggc2Vjb25kcyBhbmQgbWVyaWRpYW48L2gyPlxuICA8YmItaW5wdXQtdGltZXBpY2tlci11aVxuICAgIGlkPVwidGltZXBpY2tlci1tZXJpZGlhblwiXG4gICAgW3JlYWRvbmx5XT1cImZhbHNlXCJcbiAgICBbc2Vjb25kc109XCJ0cnVlXCJcbiAgICBjbG9jaz1cIjEyaFwiXG4gICAgWyhuZ01vZGVsKV09XCJ0aW1lTW9kZWxcIlxuICAgIFttaW5dPVwibWluXCJcbiAgPlxuICA8L2JiLWlucHV0LXRpbWVwaWNrZXItdWk+XG48L2Rpdj5cbiJdfQ==