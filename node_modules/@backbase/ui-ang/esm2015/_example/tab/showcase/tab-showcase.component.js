import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { tabsAnim, BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/tab";
import * as i2 from "@backbase/ui-ang/badge-counter";
import * as i3 from "@angular/common";
let TabShowcaseComponent = class TabShowcaseComponent {
    constructor() {
        this.index = 0;
    }
    onTabSelect(index) {
        this.index = index;
        console.log(`Selected tab with index: ${index}`);
    }
    onClick($event) {
        $event.stopPropagation();
        $event.preventDefault();
    }
};
TabShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TabShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TabShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TabShowcaseComponent, selector: "bb-tab-ui-showcase", ngImport: i0, template: "<h4>Tab group - Light</h4>\n\n<div class=\"bb-block bb-block--lg\">\n  <bb-tab-group-ui [initialSelection]=\"0\" (select)=\"onTabSelect($event)\" (click)=\"onClick($event)\">\n    <bb-tab-ui>First</bb-tab-ui>\n    <bb-tab-ui>Second</bb-tab-ui>\n    <bb-tab-ui>\n      <div class=\"bb-stack\">\n        <span class=\"bb-stack__item bb-stack__item--spacing-xs\">Third</span>\n        <bb-badge-counter-ui\n          class=\"bb-stack__item\"\n          [count]=\"3\"\n          [maxCount]=\"10\"\n          [color]=\"'danger'\"\n        ></bb-badge-counter-ui>\n      </div>\n    </bb-tab-ui>\n  </bb-tab-group-ui>\n</div>\n<h4>Tab group - Dark (Theme v2 only)</h4>\n\n<div class=\"bg-dark bb-block bb-block--lg\">\n  <bb-tab-group-ui\n    class=\"bb-tab--inverse\"\n    [initialSelection]=\"0\"\n    (select)=\"onTabSelect($event)\"\n    (click)=\"onClick($event)\"\n  >\n    <bb-tab-ui>First</bb-tab-ui>\n    <bb-tab-ui>Second</bb-tab-ui>\n    <bb-tab-ui>\n      <div class=\"bb-stack\">\n        <span class=\"bb-stack__item bb-stack__item--spacing-xs\">Third</span>\n        <bb-badge-counter-ui\n          class=\"bb-stack__item\"\n          [count]=\"3\"\n          [maxCount]=\"10\"\n          [color]=\"'danger'\"\n        ></bb-badge-counter-ui>\n      </div>\n    </bb-tab-ui>\n  </bb-tab-group-ui>\n</div>\n\n<h4>Animated tabs</h4>\n\n<div class=\"bb-quick-transfer__tabs-container\">\n  <bb-tab-group-ui [initialSelection]=\"0\" (select)=\"onTabSelect($event)\" (click)=\"onClick($event)\">\n    <bb-tab-ui>First</bb-tab-ui>\n    <bb-tab-ui>Second</bb-tab-ui>\n    <bb-tab-ui>Third</bb-tab-ui>\n  </bb-tab-group-ui>\n  <div class=\"scrollable-box-content position-relative\" [@tabsAnimation]=\"index\">\n    <div data-role=\"first-tab\" *ngIf=\"index === 0\">First tab content here</div>\n    <div data-role=\"second-tab\" *ngIf=\"index === 1\">Second tab content here</div>\n    <div data-role=\"third-tab\" *ngIf=\"index === 2\">Third tab content here</div>\n  </div>\n</div>\n", components: [{ type: i1.TabGroupComponent, selector: "bb-tab-group-ui", inputs: ["initialSelection"], outputs: ["select"] }, { type: i1.TabComponent, selector: "bb-tab-ui" }, { type: i2.BadgeCounterComponent, selector: "bb-badge-counter-ui", inputs: ["color", "count", "maxCount"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], animations: [tabsAnim] });
TabShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], TabShowcaseComponent);
export { TabShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TabShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-tab-ui-showcase',
                    templateUrl: './tab-showcase.component.html',
                    animations: [tabsAnim],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLXNob3djYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL3RhYi9zaG93Y2FzZS90YWItc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvdGFiL3Nob3djYXNlL3RhYi1zaG93Y2FzZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7OztJQVNsRCxvQkFBb0IsU0FBcEIsb0JBQW9COztRQUMvQixVQUFLLEdBQUcsQ0FBQyxDQUFDO0tBV1g7SUFUQyxXQUFXLENBQUMsS0FBYTtRQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLDRCQUE0QixLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCxPQUFPLENBQUMsTUFBVztRQUNqQixNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDekIsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQzFCLENBQUM7Q0FDRixDQUFBO2tIQVpZLG9CQUFvQjtzR0FBcEIsb0JBQW9CLDBEQ1ZqQyxzOERBMERBLDBZRHJEYyxDQUFDLFFBQVEsQ0FBQztBQUtYLG9CQUFvQjtJQUhoQyxZQUFZLENBQUM7UUFDWixjQUFjLEVBQUUsSUFBSTtLQUNyQixDQUFDO0dBQ1csb0JBQW9CLENBWWhDO1NBWlksb0JBQW9COzRGQUFwQixvQkFBb0I7a0JBUmhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsV0FBVyxFQUFFLCtCQUErQjtvQkFDNUMsVUFBVSxFQUFFLENBQUMsUUFBUSxDQUFDO2lCQUN2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdGFic0FuaW0sIEJhY2tiYXNlRG9jcyB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvdXRpbCc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi10YWItdWktc2hvd2Nhc2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFiLXNob3djYXNlLmNvbXBvbmVudC5odG1sJyxcbiAgYW5pbWF0aW9uczogW3RhYnNBbmltXSxcbn0pXG5AQmFja2Jhc2VEb2NzKHtcbiAgaXNUaGVtZTJTdGFibGU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIFRhYlNob3djYXNlQ29tcG9uZW50IHtcbiAgaW5kZXggPSAwO1xuXG4gIG9uVGFiU2VsZWN0KGluZGV4OiBudW1iZXIpIHtcbiAgICB0aGlzLmluZGV4ID0gaW5kZXg7XG4gICAgY29uc29sZS5sb2coYFNlbGVjdGVkIHRhYiB3aXRoIGluZGV4OiAke2luZGV4fWApO1xuICB9XG5cbiAgb25DbGljaygkZXZlbnQ6IGFueSkge1xuICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgfVxufVxuIiwiPGg0PlRhYiBncm91cCAtIExpZ2h0PC9oND5cblxuPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1sZ1wiPlxuICA8YmItdGFiLWdyb3VwLXVpIFtpbml0aWFsU2VsZWN0aW9uXT1cIjBcIiAoc2VsZWN0KT1cIm9uVGFiU2VsZWN0KCRldmVudClcIiAoY2xpY2spPVwib25DbGljaygkZXZlbnQpXCI+XG4gICAgPGJiLXRhYi11aT5GaXJzdDwvYmItdGFiLXVpPlxuICAgIDxiYi10YWItdWk+U2Vjb25kPC9iYi10YWItdWk+XG4gICAgPGJiLXRhYi11aT5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja1wiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImJiLXN0YWNrX19pdGVtIGJiLXN0YWNrX19pdGVtLS1zcGFjaW5nLXhzXCI+VGhpcmQ8L3NwYW4+XG4gICAgICAgIDxiYi1iYWRnZS1jb3VudGVyLXVpXG4gICAgICAgICAgY2xhc3M9XCJiYi1zdGFja19faXRlbVwiXG4gICAgICAgICAgW2NvdW50XT1cIjNcIlxuICAgICAgICAgIFttYXhDb3VudF09XCIxMFwiXG4gICAgICAgICAgW2NvbG9yXT1cIidkYW5nZXInXCJcbiAgICAgICAgPjwvYmItYmFkZ2UtY291bnRlci11aT5cbiAgICAgIDwvZGl2PlxuICAgIDwvYmItdGFiLXVpPlxuICA8L2JiLXRhYi1ncm91cC11aT5cbjwvZGl2PlxuPGg0PlRhYiBncm91cCAtIERhcmsgKFRoZW1lIHYyIG9ubHkpPC9oND5cblxuPGRpdiBjbGFzcz1cImJnLWRhcmsgYmItYmxvY2sgYmItYmxvY2stLWxnXCI+XG4gIDxiYi10YWItZ3JvdXAtdWlcbiAgICBjbGFzcz1cImJiLXRhYi0taW52ZXJzZVwiXG4gICAgW2luaXRpYWxTZWxlY3Rpb25dPVwiMFwiXG4gICAgKHNlbGVjdCk9XCJvblRhYlNlbGVjdCgkZXZlbnQpXCJcbiAgICAoY2xpY2spPVwib25DbGljaygkZXZlbnQpXCJcbiAgPlxuICAgIDxiYi10YWItdWk+Rmlyc3Q8L2JiLXRhYi11aT5cbiAgICA8YmItdGFiLXVpPlNlY29uZDwvYmItdGFiLXVpPlxuICAgIDxiYi10YWItdWk+XG4gICAgICA8ZGl2IGNsYXNzPVwiYmItc3RhY2tcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1zdGFja19faXRlbS0tc3BhY2luZy14c1wiPlRoaXJkPC9zcGFuPlxuICAgICAgICA8YmItYmFkZ2UtY291bnRlci11aVxuICAgICAgICAgIGNsYXNzPVwiYmItc3RhY2tfX2l0ZW1cIlxuICAgICAgICAgIFtjb3VudF09XCIzXCJcbiAgICAgICAgICBbbWF4Q291bnRdPVwiMTBcIlxuICAgICAgICAgIFtjb2xvcl09XCInZGFuZ2VyJ1wiXG4gICAgICAgID48L2JiLWJhZGdlLWNvdW50ZXItdWk+XG4gICAgICA8L2Rpdj5cbiAgICA8L2JiLXRhYi11aT5cbiAgPC9iYi10YWItZ3JvdXAtdWk+XG48L2Rpdj5cblxuPGg0PkFuaW1hdGVkIHRhYnM8L2g0PlxuXG48ZGl2IGNsYXNzPVwiYmItcXVpY2stdHJhbnNmZXJfX3RhYnMtY29udGFpbmVyXCI+XG4gIDxiYi10YWItZ3JvdXAtdWkgW2luaXRpYWxTZWxlY3Rpb25dPVwiMFwiIChzZWxlY3QpPVwib25UYWJTZWxlY3QoJGV2ZW50KVwiIChjbGljayk9XCJvbkNsaWNrKCRldmVudClcIj5cbiAgICA8YmItdGFiLXVpPkZpcnN0PC9iYi10YWItdWk+XG4gICAgPGJiLXRhYi11aT5TZWNvbmQ8L2JiLXRhYi11aT5cbiAgICA8YmItdGFiLXVpPlRoaXJkPC9iYi10YWItdWk+XG4gIDwvYmItdGFiLWdyb3VwLXVpPlxuICA8ZGl2IGNsYXNzPVwic2Nyb2xsYWJsZS1ib3gtY29udGVudCBwb3NpdGlvbi1yZWxhdGl2ZVwiIFtAdGFic0FuaW1hdGlvbl09XCJpbmRleFwiPlxuICAgIDxkaXYgZGF0YS1yb2xlPVwiZmlyc3QtdGFiXCIgKm5nSWY9XCJpbmRleCA9PT0gMFwiPkZpcnN0IHRhYiBjb250ZW50IGhlcmU8L2Rpdj5cbiAgICA8ZGl2IGRhdGEtcm9sZT1cInNlY29uZC10YWJcIiAqbmdJZj1cImluZGV4ID09PSAxXCI+U2Vjb25kIHRhYiBjb250ZW50IGhlcmU8L2Rpdj5cbiAgICA8ZGl2IGRhdGEtcm9sZT1cInRoaXJkLXRhYlwiICpuZ0lmPVwiaW5kZXggPT09IDJcIj5UaGlyZCB0YWIgY29udGVudCBoZXJlPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=