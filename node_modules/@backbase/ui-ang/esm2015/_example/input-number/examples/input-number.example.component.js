import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/input-number";
import * as i3 from "@backbase/ui-ang/input-validation-message";
import * as i4 from "@angular/common";
export class InputNumberExampleComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.vForm = this.formBuilder.group({
            count: [
                '',
                Validators.compose([
                    Validators.required,
                    Validators.min(2),
                    Validators.max(42),
                ]),
            ],
        });
    }
    isFieldValid(fieldName) {
        const control = this.getControl(fieldName);
        return control && (control.valid || control.untouched);
    }
    getControl(fieldName) {
        var _a;
        return (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls[fieldName];
    }
    hasError(field, type) {
        const fieldControl = this.getControl(field);
        if (!fieldControl || !fieldControl.errors) {
            return;
        }
        return fieldControl.errors[type];
    }
    hasRequiredError(field) {
        const fieldControl = this.getControl(field);
        if (!fieldControl || !fieldControl.errors) {
            return;
        }
        return fieldControl.errors.required;
    }
    hasMinError(field) {
        return this.hasError(field, 'min');
    }
    hasMaxError(field) {
        return this.hasError(field, 'max');
    }
}
InputNumberExampleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputNumberExampleComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
InputNumberExampleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputNumberExampleComponent, selector: "bb-input-number-example-ui", ngImport: i0, template: "<form [formGroup]=\"vForm\">\n  <bb-input-number-ui\n    label=\"Count\"\n    placeholder=\"Enter number...\"\n    formControlName=\"count\"\n    [aria-describedby]=\"'input-number-showcase-error'\"\n    [min]=\"2\"\n    [max]=\"42\"\n    [required]=\"true\"\n    #numberInput\n  >\n  </bb-input-number-ui>\n  <bb-input-validation-message-ui\n    id=\"input-number-showcase-error\"\n    [showErrors]=\"vForm?.dirty && vForm?.get('count')?.errors\"\n  >\n    <p *ngIf=\"hasRequiredError('count')\">Field is required.</p>\n    <p *ngIf=\"hasMinError('count')\">\n      Minimum number allowed is: {{ numberInput.min }}\n    </p>\n    <p *ngIf=\"hasMaxError('count')\">\n      Maximum number allowed is: {{ numberInput.max }}\n    </p>\n  </bb-input-validation-message-ui>\n</form>\n", components: [{ type: i2.InputNumberComponent, selector: "bb-input-number-ui", inputs: ["placeholder", "max", "min", "step", "readonly", "autocomplete", "ariaLabel", "allowNonDigits", "allowNegativeSign"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputNumberExampleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-number-example-ui',
                    templateUrl: './input-number.example.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtbnVtYmVyLmV4YW1wbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvaW5wdXQtbnVtYmVyL2V4YW1wbGVzL2lucHV0LW51bWJlci5leGFtcGxlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL2lucHV0LW51bWJlci9leGFtcGxlcy9pbnB1dC1udW1iZXIuZXhhbXBsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBMEIsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7OztBQU1wRSxNQUFNLE9BQU8sMkJBQTJCO0lBWXRDLFlBQW9CLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBWDVDLFVBQUssR0FBYyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztZQUN4QyxLQUFLLEVBQUU7Z0JBQ0wsRUFBRTtnQkFDRixVQUFVLENBQUMsT0FBTyxDQUFDO29CQUNqQixVQUFVLENBQUMsUUFBUTtvQkFDbkIsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ2pCLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO2lCQUNuQixDQUFDO2FBQ0g7U0FDRixDQUFDLENBQUM7SUFFNEMsQ0FBQztJQUVoRCxZQUFZLENBQUMsU0FBaUI7UUFDNUIsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUUzQyxPQUFPLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFTyxVQUFVLENBQUMsU0FBaUI7O1FBQ2xDLE9BQU8sTUFBQSxJQUFJLENBQUMsS0FBSywwQ0FBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFhLEVBQUUsSUFBWTtRQUNsQyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxZQUFZLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFO1lBQ3pDLE9BQU87U0FDUjtRQUVELE9BQU8sWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsZ0JBQWdCLENBQUMsS0FBYTtRQUM1QixNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxZQUFZLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFO1lBQ3pDLE9BQU87U0FDUjtRQUVELE9BQU8sWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7SUFDdEMsQ0FBQztJQUVELFdBQVcsQ0FBQyxLQUFhO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELFdBQVcsQ0FBQyxLQUFhO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQzs7eUhBaERVLDJCQUEyQjs2R0FBM0IsMkJBQTJCLGtFQ1B4Qyw2d0JBeUJBOzRGRGxCYSwyQkFBMkI7a0JBSnZDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsV0FBVyxFQUFFLHVDQUF1QztpQkFDckQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWlucHV0LW51bWJlci1leGFtcGxlLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LW51bWJlci5leGFtcGxlLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXROdW1iZXJFeGFtcGxlQ29tcG9uZW50IHtcbiAgdkZvcm06IEZvcm1Hcm91cCA9IHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAoe1xuICAgIGNvdW50OiBbXG4gICAgICAnJyxcbiAgICAgIFZhbGlkYXRvcnMuY29tcG9zZShbXG4gICAgICAgIFZhbGlkYXRvcnMucmVxdWlyZWQsXG4gICAgICAgIFZhbGlkYXRvcnMubWluKDIpLFxuICAgICAgICBWYWxpZGF0b3JzLm1heCg0MiksXG4gICAgICBdKSxcbiAgICBdLFxuICB9KTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZvcm1CdWlsZGVyOiBGb3JtQnVpbGRlcikge31cblxuICBpc0ZpZWxkVmFsaWQoZmllbGROYW1lOiBzdHJpbmcpIHtcbiAgICBjb25zdCBjb250cm9sID0gdGhpcy5nZXRDb250cm9sKGZpZWxkTmFtZSk7XG5cbiAgICByZXR1cm4gY29udHJvbCAmJiAoY29udHJvbC52YWxpZCB8fCBjb250cm9sLnVudG91Y2hlZCk7XG4gIH1cblxuICBwcml2YXRlIGdldENvbnRyb2woZmllbGROYW1lOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy52Rm9ybT8uY29udHJvbHNbZmllbGROYW1lXTtcbiAgfVxuXG4gIGhhc0Vycm9yKGZpZWxkOiBzdHJpbmcsIHR5cGU6IHN0cmluZykge1xuICAgIGNvbnN0IGZpZWxkQ29udHJvbCA9IHRoaXMuZ2V0Q29udHJvbChmaWVsZCk7XG4gICAgaWYgKCFmaWVsZENvbnRyb2wgfHwgIWZpZWxkQ29udHJvbC5lcnJvcnMpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICByZXR1cm4gZmllbGRDb250cm9sLmVycm9yc1t0eXBlXTtcbiAgfVxuXG4gIGhhc1JlcXVpcmVkRXJyb3IoZmllbGQ6IHN0cmluZykge1xuICAgIGNvbnN0IGZpZWxkQ29udHJvbCA9IHRoaXMuZ2V0Q29udHJvbChmaWVsZCk7XG4gICAgaWYgKCFmaWVsZENvbnRyb2wgfHwgIWZpZWxkQ29udHJvbC5lcnJvcnMpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICByZXR1cm4gZmllbGRDb250cm9sLmVycm9ycy5yZXF1aXJlZDtcbiAgfVxuXG4gIGhhc01pbkVycm9yKGZpZWxkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNFcnJvcihmaWVsZCwgJ21pbicpO1xuICB9XG5cbiAgaGFzTWF4RXJyb3IoZmllbGQ6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLmhhc0Vycm9yKGZpZWxkLCAnbWF4Jyk7XG4gIH1cbn1cbiIsIjxmb3JtIFtmb3JtR3JvdXBdPVwidkZvcm1cIj5cbiAgPGJiLWlucHV0LW51bWJlci11aVxuICAgIGxhYmVsPVwiQ291bnRcIlxuICAgIHBsYWNlaG9sZGVyPVwiRW50ZXIgbnVtYmVyLi4uXCJcbiAgICBmb3JtQ29udHJvbE5hbWU9XCJjb3VudFwiXG4gICAgW2FyaWEtZGVzY3JpYmVkYnldPVwiJ2lucHV0LW51bWJlci1zaG93Y2FzZS1lcnJvcidcIlxuICAgIFttaW5dPVwiMlwiXG4gICAgW21heF09XCI0MlwiXG4gICAgW3JlcXVpcmVkXT1cInRydWVcIlxuICAgICNudW1iZXJJbnB1dFxuICA+XG4gIDwvYmItaW5wdXQtbnVtYmVyLXVpPlxuICA8YmItaW5wdXQtdmFsaWRhdGlvbi1tZXNzYWdlLXVpXG4gICAgaWQ9XCJpbnB1dC1udW1iZXItc2hvd2Nhc2UtZXJyb3JcIlxuICAgIFtzaG93RXJyb3JzXT1cInZGb3JtPy5kaXJ0eSAmJiB2Rm9ybT8uZ2V0KCdjb3VudCcpPy5lcnJvcnNcIlxuICA+XG4gICAgPHAgKm5nSWY9XCJoYXNSZXF1aXJlZEVycm9yKCdjb3VudCcpXCI+RmllbGQgaXMgcmVxdWlyZWQuPC9wPlxuICAgIDxwICpuZ0lmPVwiaGFzTWluRXJyb3IoJ2NvdW50JylcIj5cbiAgICAgIE1pbmltdW0gbnVtYmVyIGFsbG93ZWQgaXM6IHt7IG51bWJlcklucHV0Lm1pbiB9fVxuICAgIDwvcD5cbiAgICA8cCAqbmdJZj1cImhhc01heEVycm9yKCdjb3VudCcpXCI+XG4gICAgICBNYXhpbXVtIG51bWJlciBhbGxvd2VkIGlzOiB7eyBudW1iZXJJbnB1dC5tYXggfX1cbiAgICA8L3A+XG4gIDwvYmItaW5wdXQtdmFsaWRhdGlvbi1tZXNzYWdlLXVpPlxuPC9mb3JtPlxuIl19