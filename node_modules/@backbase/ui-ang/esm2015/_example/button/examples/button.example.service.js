import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../configuration/configuration-input.service";
export class ButtonExampleService {
    constructor(configurationService) {
        this.configurationService = configurationService;
        this.btnCheckboxList = [
            {
                label: 'Block',
                value: false,
                formControlName: 'block',
            },
            {
                label: 'Disabled',
                value: false,
                formControlName: 'disabled',
            },
        ];
        this.btnRadioList = [
            {
                label: 'Button Size',
                formControlName: 'buttonSize',
                radioItems: [
                    {
                        label: 'Small',
                        value: 'sm',
                    },
                    {
                        label: 'Medium',
                        value: 'md',
                    },
                ],
            },
        ];
        this.btnDropdownList = [
            {
                label: 'Color',
                formControlName: 'color',
                dropdownItemList: ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'link', 'link-text'],
            },
        ];
        this.btnValues = {
            checkbox: {
                block: false,
                disabled: false,
            },
            radio: {
                buttonSize: 'sm',
            },
            dropdown: {
                color: 'primary',
            },
        };
        this.configurationService.sharedField.subscribe((val) => {
            this.btnValues.checkbox.block = val.checkbox.block;
            this.btnValues.checkbox.disabled = val.checkbox.disabled;
            this.btnValues.radio.buttonSize = val.radio.buttonSize;
            this.btnValues.dropdown.color = val.dropdown.color;
        });
    }
}
ButtonExampleService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ButtonExampleService, deps: [{ token: i1.ConfigurationInputService }], target: i0.ɵɵFactoryTarget.Injectable });
ButtonExampleService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ButtonExampleService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ButtonExampleService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationInputService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmV4YW1wbGUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL2J1dHRvbi9leGFtcGxlcy9idXR0b24uZXhhbXBsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQUkzQyxNQUFNLE9BQU8sb0JBQW9CO0lBbUQvQixZQUE2QixvQkFBK0M7UUFBL0MseUJBQW9CLEdBQXBCLG9CQUFvQixDQUEyQjtRQWxENUUsb0JBQWUsR0FBRztZQUNoQjtnQkFDRSxLQUFLLEVBQUUsT0FBTztnQkFDZCxLQUFLLEVBQUUsS0FBSztnQkFDWixlQUFlLEVBQUUsT0FBTzthQUN6QjtZQUNEO2dCQUNFLEtBQUssRUFBRSxVQUFVO2dCQUNqQixLQUFLLEVBQUUsS0FBSztnQkFDWixlQUFlLEVBQUUsVUFBVTthQUM1QjtTQUNGLENBQUM7UUFFRixpQkFBWSxHQUFHO1lBQ2I7Z0JBQ0UsS0FBSyxFQUFFLGFBQWE7Z0JBQ3BCLGVBQWUsRUFBRSxZQUFZO2dCQUM3QixVQUFVLEVBQUU7b0JBQ1Y7d0JBQ0UsS0FBSyxFQUFFLE9BQU87d0JBQ2QsS0FBSyxFQUFFLElBQUk7cUJBQ1o7b0JBQ0Q7d0JBQ0UsS0FBSyxFQUFFLFFBQVE7d0JBQ2YsS0FBSyxFQUFFLElBQUk7cUJBQ1o7aUJBQ0Y7YUFDRjtTQUNGLENBQUM7UUFFRixvQkFBZSxHQUFHO1lBQ2hCO2dCQUNFLEtBQUssRUFBRSxPQUFPO2dCQUNkLGVBQWUsRUFBRSxPQUFPO2dCQUN4QixnQkFBZ0IsRUFBRSxDQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxXQUFXLENBQUM7YUFDeEc7U0FDRixDQUFDO1FBRUYsY0FBUyxHQUFHO1lBQ1YsUUFBUSxFQUFFO2dCQUNSLEtBQUssRUFBRSxLQUFLO2dCQUNaLFFBQVEsRUFBRSxLQUFLO2FBQ2hCO1lBQ0QsS0FBSyxFQUFFO2dCQUNMLFVBQVUsRUFBRSxJQUFJO2FBQ2pCO1lBQ0QsUUFBUSxFQUFFO2dCQUNSLEtBQUssRUFBRSxTQUFTO2FBQ2pCO1NBQ0YsQ0FBQztRQUVBLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7WUFDM0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO1lBQ25ELElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztZQUN6RCxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUM7WUFDdkQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO1FBQ3JELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7a0hBMURVLG9CQUFvQjtzSEFBcEIsb0JBQW9CLGNBRFAsTUFBTTs0RkFDbkIsb0JBQW9CO2tCQURoQyxVQUFVO21CQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZ3VyYXRpb25JbnB1dFNlcnZpY2UgfSBmcm9tICcuLi8uLi9jb25maWd1cmF0aW9uL2NvbmZpZ3VyYXRpb24taW5wdXQuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgQnV0dG9uRXhhbXBsZVNlcnZpY2Uge1xuICBidG5DaGVja2JveExpc3QgPSBbXG4gICAge1xuICAgICAgbGFiZWw6ICdCbG9jaycsXG4gICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICBmb3JtQ29udHJvbE5hbWU6ICdibG9jaycsXG4gICAgfSxcbiAgICB7XG4gICAgICBsYWJlbDogJ0Rpc2FibGVkJyxcbiAgICAgIHZhbHVlOiBmYWxzZSxcbiAgICAgIGZvcm1Db250cm9sTmFtZTogJ2Rpc2FibGVkJyxcbiAgICB9LFxuICBdO1xuXG4gIGJ0blJhZGlvTGlzdCA9IFtcbiAgICB7XG4gICAgICBsYWJlbDogJ0J1dHRvbiBTaXplJyxcbiAgICAgIGZvcm1Db250cm9sTmFtZTogJ2J1dHRvblNpemUnLFxuICAgICAgcmFkaW9JdGVtczogW1xuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6ICdTbWFsbCcsXG4gICAgICAgICAgdmFsdWU6ICdzbScsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBsYWJlbDogJ01lZGl1bScsXG4gICAgICAgICAgdmFsdWU6ICdtZCcsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gIF07XG5cbiAgYnRuRHJvcGRvd25MaXN0ID0gW1xuICAgIHtcbiAgICAgIGxhYmVsOiAnQ29sb3InLFxuICAgICAgZm9ybUNvbnRyb2xOYW1lOiAnY29sb3InLFxuICAgICAgZHJvcGRvd25JdGVtTGlzdDogWydwcmltYXJ5JywgJ3NlY29uZGFyeScsICdzdWNjZXNzJywgJ2RhbmdlcicsICd3YXJuaW5nJywgJ2luZm8nLCAnbGluaycsICdsaW5rLXRleHQnXSxcbiAgICB9LFxuICBdO1xuXG4gIGJ0blZhbHVlcyA9IHtcbiAgICBjaGVja2JveDoge1xuICAgICAgYmxvY2s6IGZhbHNlLFxuICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIH0sXG4gICAgcmFkaW86IHtcbiAgICAgIGJ1dHRvblNpemU6ICdzbScsXG4gICAgfSxcbiAgICBkcm9wZG93bjoge1xuICAgICAgY29sb3I6ICdwcmltYXJ5JyxcbiAgICB9LFxuICB9O1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGNvbmZpZ3VyYXRpb25TZXJ2aWNlOiBDb25maWd1cmF0aW9uSW5wdXRTZXJ2aWNlKSB7XG4gICAgdGhpcy5jb25maWd1cmF0aW9uU2VydmljZS5zaGFyZWRGaWVsZC5zdWJzY3JpYmUoKHZhbDogYW55KSA9PiB7XG4gICAgICB0aGlzLmJ0blZhbHVlcy5jaGVja2JveC5ibG9jayA9IHZhbC5jaGVja2JveC5ibG9jaztcbiAgICAgIHRoaXMuYnRuVmFsdWVzLmNoZWNrYm94LmRpc2FibGVkID0gdmFsLmNoZWNrYm94LmRpc2FibGVkO1xuICAgICAgdGhpcy5idG5WYWx1ZXMucmFkaW8uYnV0dG9uU2l6ZSA9IHZhbC5yYWRpby5idXR0b25TaXplO1xuICAgICAgdGhpcy5idG5WYWx1ZXMuZHJvcGRvd24uY29sb3IgPSB2YWwuZHJvcGRvd24uY29sb3I7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==