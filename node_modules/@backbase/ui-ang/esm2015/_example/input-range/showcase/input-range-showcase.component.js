import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/input-number";
import * as i3 from "@backbase/ui-ang/input-validation-message";
import * as i4 from "@backbase/ui-ang/button";
import * as i5 from "@backbase/ui-ang/input-range";
import * as i6 from "@angular/common";
let InputRangeShowcaseComponent = class InputRangeShowcaseComponent {
    constructor(fb) {
        this.fb = fb;
        this.form = this.fb.group({
            range1: this.fb.group({
                min: [-10, Validators.min(10)],
                max: [100],
            }, {
                validator: (g) => {
                    const { errors } = g.get('min');
                    return errors ? Object.assign({}, errors) : null;
                },
            }),
            range2: this.fb.group({
                min: [30],
                max: [33, Validators.max(40)],
            }, {
                validator: (g) => {
                    const { errors } = g.get('max');
                    return errors ? Object.assign({}, errors) : null;
                },
            }),
            range3: this.fb.group({
                min: [2, Validators.min(0)],
                max: [5, Validators.max(10)],
            }, {
                validator: (g) => {
                    const min = g.get('min').errors;
                    const max = g.get('max').errors;
                    return min || max ? Object.assign(Object.assign({}, min), max) : null;
                },
            }),
        });
        this.range4Min = 5;
        this.range4Max = 7;
    }
};
InputRangeShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputRangeShowcaseComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
InputRangeShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputRangeShowcaseComponent, selector: "bb-input-range-ui-showcase", ngImport: i0, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <ng-container [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <h3>Range 1</h3>\n        <div class=\"sr-only\" id=\"input-range-label-one\">Two inputs for setting range between two values</div>\n        <div bbInputRange class=\"bb-stack bb-stack--align-top\" formGroupName=\"range1\">\n          <div class=\"bb-stack__item\">\n            <bb-input-number-ui\n              [aria-describedby]=\"'input-range-error-one-min'\"\n              [aria-labelledby]=\"'input-range-label-one'\"\n              bbInputRangeMin\n              label=\"Minimum\"\n              formControlName=\"min\"\n            ></bb-input-number-ui>\n            <bb-input-validation-message-ui\n              *ngIf=\"form.get('range1')?.errors as errors\"\n              [showErrors]=\"form.get('range1')?.touched\"\n              [id]=\"'input-range-error-one-min'\"\n            >\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item\" *ngIf=\"errors?.min as min\">Minimum value is {{ min.min }}</div>\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n          <div>\n            <bb-input-number-ui\n              [aria-describedby]=\"'input-range-error-one-max'\"\n              bbInputRangeMax\n              label=\"Maximum\"\n              formControlName=\"max\"\n            ></bb-input-number-ui>\n            <bb-input-validation-message-ui\n              *ngIf=\"form.get('range1')?.errors as errors\"\n              [showErrors]=\"form.get('range1')?.touched\"\n              [id]=\"'input-range-error-one-max'\"\n            >\n              <div class=\"bb-stack\">\n                <div *ngIf=\"errors?.max as max\">Maximum value is {{ max.max }}</div>\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <h3>Range 2</h3>\n        <div bbInputRange class=\"bb-stack bb-stack--align-top\" formGroupName=\"range2\">\n          <div class=\"bb-stack__item\">\n            <bb-input-number-ui\n              [aria-describedby]=\"'input-range-error-two-min'\"\n              bbInputRangeMin\n              label=\"Minimum\"\n              formControlName=\"min\"\n            ></bb-input-number-ui>\n            <bb-input-validation-message-ui\n              *ngIf=\"form.get('range2')?.errors as errors\"\n              [showErrors]=\"form.get('range2')?.touched\"\n              [id]=\"'input-range-error-two-min'\"\n            >\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item\" *ngIf=\"errors?.min as min\">Minimum value is {{ min.min }}</div>\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n          <div>\n            <bb-input-number-ui\n              [aria-describedby]=\"'input-range-error-two-max'\"\n              bbInputRangeMax\n              label=\"Maximum\"\n              formControlName=\"max\"\n            ></bb-input-number-ui>\n            <bb-input-validation-message-ui\n              *ngIf=\"form.get('range2')?.errors as errors\"\n              [showErrors]=\"form.get('range2')?.touched\"\n              [id]=\"'input-range-error-two-max'\"\n            >\n              <div class=\"bb-stack\">\n                <div *ngIf=\"errors?.max as max\">Maximum value is {{ max.max }}</div>\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"form-group\">\n      <h3>Range 3</h3>\n      <div bbInputRange class=\"bb-stack bb-stack--align-top\">\n        <div class=\"bb-stack__item\">\n          <bb-input-number-ui\n            [aria-describedby]=\"'input-range-error-three-min'\"\n            bbInputRangeMin\n            [formControl]=\"form.get('range3')?.get('min')\"\n            label=\"Minimum\"\n          ></bb-input-number-ui>\n          <bb-input-validation-message-ui\n            *ngIf=\"form.get('range3')?.errors as errors\"\n            [showErrors]=\"form.get('range3')?.touched\"\n            [id]=\"'input-range-error-three-min'\"\n          >\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\" *ngIf=\"errors?.min as min\">Minimum value is {{ min.min }}</div>\n            </div>\n          </bb-input-validation-message-ui>\n        </div>\n        <div>\n          <bb-input-number-ui\n            [aria-describedby]=\"'input-range-error-three-max'\"\n            bbInputRangeMax\n            [formControl]=\"form.get('range3')?.get('max')\"\n            label=\"Maximum\"\n          ></bb-input-number-ui>\n          <bb-input-validation-message-ui\n            *ngIf=\"form.get('range3')?.errors as errors\"\n            [showErrors]=\"form.get('range3')?.touched\"\n            [id]=\"'input-range-error-three-max'\"\n          >\n            <div class=\"bb-stack\">\n              <div *ngIf=\"errors?.max as max\">Maximum value is {{ max.max }}</div>\n            </div>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"bb-block--md\">\n      <bb-button-ui (click)=\"form.disable()\" *ngIf=\"form.enabled; else enable\">Disable</bb-button-ui>\n      <ng-template #enable>\n        <bb-button-ui (click)=\"form?.enable()\">Enable</bb-button-ui>\n      </ng-template>\n    </div>\n\n    <div class=\"form-group\">\n      <h3>Range 4</h3>\n      <div bbInputRange class=\"bb-stack\">\n        <bb-input-number-ui\n          class=\"bb-stack__item\"\n          [bbInputRangeMin]=\"form.get('range3')?.value?.min\"\n          [(ngModel)]=\"range4Min\"\n          label=\"Range with template driven form (min)\"\n        ></bb-input-number-ui>\n        <bb-input-number-ui\n          [bbInputRangeMax]=\"form.get('range3')?.value?.max\"\n          [(ngModel)]=\"range4Max\"\n          label=\"Range with template driven form (max)\"\n        ></bb-input-number-ui>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2.InputNumberComponent, selector: "bb-input-number-ui", inputs: ["placeholder", "max", "min", "step", "readonly", "autocomplete", "ariaLabel", "allowNonDigits", "allowNegativeSign"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i4.ButtonComponent, selector: "bb-button-ui", inputs: ["autofocus", "type", "disabled", "buttonSize", "color", "block"] }], directives: [{ type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i5.InputRangeDirective, selector: "[bbInputRange]" }, { type: i1.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i5.InputRangeMinDirective, selector: "bb-input-number-ui[bbInputRangeMin]", inputs: ["bbInputRangeMin"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.InputRangeMaxDirective, selector: "bb-input-number-ui[bbInputRangeMax]", inputs: ["bbInputRangeMax"] }, { type: i1.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
InputRangeShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], InputRangeShowcaseComponent);
export { InputRangeShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputRangeShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-range-ui-showcase',
                    templateUrl: './input-range-showcase.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,