import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/input-password";
import * as i3 from "@backbase/ui-ang/input-validation-message";
let InputPasswordShowcaseComponent = class InputPasswordShowcaseComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.passwordForm = this.formBuilder.group({
            inputPassword: ['', Validators.required],
            inputPasswordNoIcon: ['', Validators.required],
        });
    }
    onSubmit(form) {
        console.log(form.value.inputPassword);
    }
    isFieldValid(fieldName) {
        var _a;
        const control = (_a = this.passwordForm) === null || _a === void 0 ? void 0 : _a.controls[fieldName];
        return control && (control.valid || control.untouched);
    }
};
InputPasswordShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputPasswordShowcaseComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
InputPasswordShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputPasswordShowcaseComponent, selector: "bb-input-password-ui-showcase", ngImport: i0, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"passwordForm\" novalidate (ngSubmit)=\"onSubmit(passwordForm)\">\n      <div class=\"bb-block bb-block--md\">\n        <bb-input-password-ui\n          label=\"Password\"\n          [aria-describedby]=\"'input-password-error'\"\n          formControlName=\"inputPassword\"\n          [showVisibilityControl]=\"true\"\n          [maxLength]=\"5\"\n          [required]=\"true\"\n          placeholder=\"Please enter password...\"\n          [autocomplete]=\"'current-password'\"\n        >\n        </bb-input-password-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('inputPassword')\" [id]=\"'input-password-error'\">\n          <span>Password is required.</span>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <bb-input-password-ui\n          label=\"Password with no visibility button\"\n          [aria-describedby]=\"'input-password-error'\"\n          formControlName=\"inputPasswordNoIcon\"\n          [showVisibilityControl]=\"false\"\n          [maxLength]=\"5\"\n          [required]=\"true\"\n          placeholder=\"Please enter password...\"\n          [autocomplete]=\"'current-password'\"\n        >\n        </bb-input-password-ui>\n        <bb-input-validation-message-ui\n          [showErrors]=\"!isFieldValid('inputPasswordNoIcon')\"\n          [id]=\"'input-password-error'\"\n        >\n          <span>Password is required.</span>\n        </bb-input-validation-message-ui>\n      </div>\n    </form>\n  </div>\n</div>\n", components: [{ type: i2.InputPasswordComponent, selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
InputPasswordShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], InputPasswordShowcaseComponent);
export { InputPasswordShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputPasswordShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-password-ui-showcase',
                    templateUrl: './input-password-showcase.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtcGFzc3dvcmQtc2hvd2Nhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvaW5wdXQtcGFzc3dvcmQvc2hvd2Nhc2UvaW5wdXQtcGFzc3dvcmQtc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvaW5wdXQtcGFzc3dvcmQvc2hvd2Nhc2UvaW5wdXQtcGFzc3dvcmQtc2hvd2Nhc2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUEwQixVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7O0lBU3hDLDhCQUE4QixTQUE5Qiw4QkFBOEI7SUFHekMsWUFBNkIsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDbkQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztZQUN6QyxhQUFhLEVBQUUsQ0FBQyxFQUFFLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQztZQUN4QyxtQkFBbUIsRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDO1NBQy9DLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxRQUFRLENBQUMsSUFBZTtRQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELFlBQVksQ0FBQyxTQUFpQjs7UUFDNUIsTUFBTSxPQUFPLEdBQUcsTUFBQSxJQUFJLENBQUMsWUFBWSwwQ0FBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFdkQsT0FBTyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxJQUFJLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN6RCxDQUFDO0NBQ0YsQ0FBQTs0SEFuQlksOEJBQThCO2dIQUE5Qiw4QkFBOEIscUVDWDNDLHVrREF5Q0E7QUQ5QmEsOEJBQThCO0lBSDFDLFlBQVksQ0FBQztRQUNaLGNBQWMsRUFBRSxJQUFJO0tBQ3JCLENBQUM7R0FDVyw4QkFBOEIsQ0FtQjFDO1NBbkJZLDhCQUE4Qjs0RkFBOUIsOEJBQThCO2tCQVAxQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSwrQkFBK0I7b0JBQ3pDLFdBQVcsRUFBRSwwQ0FBMEM7aUJBQ3hEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtQnVpbGRlciwgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQmFja2Jhc2VEb2NzIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy91dGlsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItaW5wdXQtcGFzc3dvcmQtdWktc2hvd2Nhc2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtcGFzc3dvcmQtc2hvd2Nhc2UuY29tcG9uZW50Lmh0bWwnLFxufSlcbkBCYWNrYmFzZURvY3Moe1xuICBpc1RoZW1lMlN0YWJsZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRQYXNzd29yZFNob3djYXNlQ29tcG9uZW50IHtcbiAgcGFzc3dvcmRGb3JtOiBGb3JtR3JvdXA7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIpIHtcbiAgICB0aGlzLnBhc3N3b3JkRm9ybSA9IHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAoe1xuICAgICAgaW5wdXRQYXNzd29yZDogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcbiAgICAgIGlucHV0UGFzc3dvcmROb0ljb246IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXG4gICAgfSk7XG4gIH1cblxuICBvblN1Ym1pdChmb3JtOiBGb3JtR3JvdXApIHtcbiAgICBjb25zb2xlLmxvZyhmb3JtLnZhbHVlLmlucHV0UGFzc3dvcmQpO1xuICB9XG5cbiAgaXNGaWVsZFZhbGlkKGZpZWxkTmFtZTogc3RyaW5nKSB7XG4gICAgY29uc3QgY29udHJvbCA9IHRoaXMucGFzc3dvcmRGb3JtPy5jb250cm9sc1tmaWVsZE5hbWVdO1xuXG4gICAgcmV0dXJuIGNvbnRyb2wgJiYgKGNvbnRyb2wudmFsaWQgfHwgY29udHJvbC51bnRvdWNoZWQpO1xuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwicm93XCI+XG4gIDxkaXYgY2xhc3M9XCJjb2wtbWQtNlwiPlxuICAgIDxmb3JtIFtmb3JtR3JvdXBdPVwicGFzc3dvcmRGb3JtXCIgbm92YWxpZGF0ZSAobmdTdWJtaXQpPVwib25TdWJtaXQocGFzc3dvcmRGb3JtKVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1tZFwiPlxuICAgICAgICA8YmItaW5wdXQtcGFzc3dvcmQtdWlcbiAgICAgICAgICBsYWJlbD1cIlBhc3N3b3JkXCJcbiAgICAgICAgICBbYXJpYS1kZXNjcmliZWRieV09XCInaW5wdXQtcGFzc3dvcmQtZXJyb3InXCJcbiAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJpbnB1dFBhc3N3b3JkXCJcbiAgICAgICAgICBbc2hvd1Zpc2liaWxpdHlDb250cm9sXT1cInRydWVcIlxuICAgICAgICAgIFttYXhMZW5ndGhdPVwiNVwiXG4gICAgICAgICAgW3JlcXVpcmVkXT1cInRydWVcIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiUGxlYXNlIGVudGVyIHBhc3N3b3JkLi4uXCJcbiAgICAgICAgICBbYXV0b2NvbXBsZXRlXT1cIidjdXJyZW50LXBhc3N3b3JkJ1wiXG4gICAgICAgID5cbiAgICAgICAgPC9iYi1pbnB1dC1wYXNzd29yZC11aT5cbiAgICAgICAgPGJiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aSBbc2hvd0Vycm9yc109XCIhaXNGaWVsZFZhbGlkKCdpbnB1dFBhc3N3b3JkJylcIiBbaWRdPVwiJ2lucHV0LXBhc3N3b3JkLWVycm9yJ1wiPlxuICAgICAgICAgIDxzcGFuPlBhc3N3b3JkIGlzIHJlcXVpcmVkLjwvc3Bhbj5cbiAgICAgICAgPC9iYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWk+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbWRcIj5cbiAgICAgICAgPGJiLWlucHV0LXBhc3N3b3JkLXVpXG4gICAgICAgICAgbGFiZWw9XCJQYXNzd29yZCB3aXRoIG5vIHZpc2liaWxpdHkgYnV0dG9uXCJcbiAgICAgICAgICBbYXJpYS1kZXNjcmliZWRieV09XCInaW5wdXQtcGFzc3dvcmQtZXJyb3InXCJcbiAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJpbnB1dFBhc3N3b3JkTm9JY29uXCJcbiAgICAgICAgICBbc2hvd1Zpc2liaWxpdHlDb250cm9sXT1cImZhbHNlXCJcbiAgICAgICAgICBbbWF4TGVuZ3RoXT1cIjVcIlxuICAgICAgICAgIFtyZXF1aXJlZF09XCJ0cnVlXCJcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIlBsZWFzZSBlbnRlciBwYXNzd29yZC4uLlwiXG4gICAgICAgICAgW2F1dG9jb21wbGV0ZV09XCInY3VycmVudC1wYXNzd29yZCdcIlxuICAgICAgICA+XG4gICAgICAgIDwvYmItaW5wdXQtcGFzc3dvcmQtdWk+XG4gICAgICAgIDxiYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWlcbiAgICAgICAgICBbc2hvd0Vycm9yc109XCIhaXNGaWVsZFZhbGlkKCdpbnB1dFBhc3N3b3JkTm9JY29uJylcIlxuICAgICAgICAgIFtpZF09XCInaW5wdXQtcGFzc3dvcmQtZXJyb3InXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxzcGFuPlBhc3N3b3JkIGlzIHJlcXVpcmVkLjwvc3Bhbj5cbiAgICAgICAgPC9iYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWk+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Zvcm0+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=