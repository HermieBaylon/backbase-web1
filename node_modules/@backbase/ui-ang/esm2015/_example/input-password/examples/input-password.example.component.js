import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/notification";
import * as i3 from "@backbase/ui-ang/input-password";
import * as i4 from "@backbase/ui-ang/input-validation-message";
import * as i5 from "@backbase/ui-ang/button";
export class InputPasswordExampleComponent {
    constructor(formBuilder, notificationService) {
        this.formBuilder = formBuilder;
        this.notificationService = notificationService;
        this.changePasswordForm = this.formBuilder.group({
            password: ['', Validators.required],
        });
    }
    onSubmit() {
        this.notificationService.showNotification({
            message: 'Password has been changed',
            modifier: 'success',
        });
    }
}
InputPasswordExampleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputPasswordExampleComponent, deps: [{ token: i1.FormBuilder }, { token: i2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
InputPasswordExampleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputPasswordExampleComponent, selector: "bb-input-password-example-ui", ngImport: i0, template: "<form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSubmit()\">\n  <p>\n    <bb-input-password-ui\n      label=\"Password\"\n      placeholder=\"Please choose a new password\"\n      formControlName=\"password\"\n      autocomplete=\"new-password\"\n      [aria-describedby]=\"'password-error'\"\n      [showVisibilityControl]=\"true\"\n    >\n    </bb-input-password-ui>\n  </p>\n  <bb-input-validation-message-ui\n    id=\"password-error\"\n    [showErrors]=\"\n      !changePasswordForm.pristine && !changePasswordForm.valid\n    \"\n  >\n    <p>Password is required.</p>\n  </bb-input-validation-message-ui>\n\n  <button bbButton type=\"submit\">Change password</button>\n</form>\n", components: [{ type: i3.InputPasswordComponent, selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i4.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputPasswordExampleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-password-example-ui',
                    templateUrl: './input-password.example.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }, { type: i2.NotificationService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtcGFzc3dvcmQuZXhhbXBsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9fZXhhbXBsZS9pbnB1dC1wYXNzd29yZC9leGFtcGxlcy9pbnB1dC1wYXNzd29yZC5leGFtcGxlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL2lucHV0LXBhc3N3b3JkL2V4YW1wbGVzL2lucHV0LXBhc3N3b3JkLmV4YW1wbGUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQTBCLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7O0FBUXBFLE1BQU0sT0FBTyw2QkFBNkI7SUFLeEMsWUFDVSxXQUF3QixFQUN4QixtQkFBd0M7UUFEeEMsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDeEIsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQU5sRCx1QkFBa0IsR0FBYyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztZQUNyRCxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQztTQUNwQyxDQUFDLENBQUM7SUFLQSxDQUFDO0lBRUosUUFBUTtRQUNOLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FBQztZQUN4QyxPQUFPLEVBQUUsMkJBQTJCO1lBQ3BDLFFBQVEsRUFBRSxTQUFTO1NBQ3BCLENBQUMsQ0FBQztJQUNMLENBQUM7OzJIQWZVLDZCQUE2QjsrR0FBN0IsNkJBQTZCLG9FQ1QxQyxtckJBdUJBOzRGRGRhLDZCQUE2QjtrQkFKekMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsOEJBQThCO29CQUN4QyxXQUFXLEVBQUUseUNBQXlDO2lCQUN2RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbi8vIFBsZWFzZSByZXBsYWNlIHJlbGF0aXZlIHBhdGggaW1wb3J0cyBlLmcuICcuLi8uLi8qJyB3aXRoICdAYmFja2Jhc2UvdWktYW5nJy5cbmltcG9ydCB7IE5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL25vdGlmaWNhdGlvbic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWlucHV0LXBhc3N3b3JkLWV4YW1wbGUtdWknLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtcGFzc3dvcmQuZXhhbXBsZS5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIElucHV0UGFzc3dvcmRFeGFtcGxlQ29tcG9uZW50IHtcbiAgY2hhbmdlUGFzc3dvcmRGb3JtOiBGb3JtR3JvdXAgPSB0aGlzLmZvcm1CdWlsZGVyLmdyb3VwKHtcbiAgICBwYXNzd29yZDogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIsXG4gICAgcHJpdmF0ZSBub3RpZmljYXRpb25TZXJ2aWNlOiBOb3RpZmljYXRpb25TZXJ2aWNlLFxuICApIHt9XG5cbiAgb25TdWJtaXQoKSB7XG4gICAgdGhpcy5ub3RpZmljYXRpb25TZXJ2aWNlLnNob3dOb3RpZmljYXRpb24oe1xuICAgICAgbWVzc2FnZTogJ1Bhc3N3b3JkIGhhcyBiZWVuIGNoYW5nZWQnLFxuICAgICAgbW9kaWZpZXI6ICdzdWNjZXNzJyxcbiAgICB9KTtcbiAgfVxufVxuIiwiPGZvcm0gW2Zvcm1Hcm91cF09XCJjaGFuZ2VQYXNzd29yZEZvcm1cIiAobmdTdWJtaXQpPVwib25TdWJtaXQoKVwiPlxuICA8cD5cbiAgICA8YmItaW5wdXQtcGFzc3dvcmQtdWlcbiAgICAgIGxhYmVsPVwiUGFzc3dvcmRcIlxuICAgICAgcGxhY2Vob2xkZXI9XCJQbGVhc2UgY2hvb3NlIGEgbmV3IHBhc3N3b3JkXCJcbiAgICAgIGZvcm1Db250cm9sTmFtZT1cInBhc3N3b3JkXCJcbiAgICAgIGF1dG9jb21wbGV0ZT1cIm5ldy1wYXNzd29yZFwiXG4gICAgICBbYXJpYS1kZXNjcmliZWRieV09XCIncGFzc3dvcmQtZXJyb3InXCJcbiAgICAgIFtzaG93VmlzaWJpbGl0eUNvbnRyb2xdPVwidHJ1ZVwiXG4gICAgPlxuICAgIDwvYmItaW5wdXQtcGFzc3dvcmQtdWk+XG4gIDwvcD5cbiAgPGJiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aVxuICAgIGlkPVwicGFzc3dvcmQtZXJyb3JcIlxuICAgIFtzaG93RXJyb3JzXT1cIlxuICAgICAgIWNoYW5nZVBhc3N3b3JkRm9ybS5wcmlzdGluZSAmJiAhY2hhbmdlUGFzc3dvcmRGb3JtLnZhbGlkXG4gICAgXCJcbiAgPlxuICAgIDxwPlBhc3N3b3JkIGlzIHJlcXVpcmVkLjwvcD5cbiAgPC9iYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWk+XG5cbiAgPGJ1dHRvbiBiYkJ1dHRvbiB0eXBlPVwic3VibWl0XCI+Q2hhbmdlIHBhc3N3b3JkPC9idXR0b24+XG48L2Zvcm0+XG4iXX0=