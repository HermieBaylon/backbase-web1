import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/button";
export class ModalExampleComponent {
    constructor() {
        this.buttonColor = 'primary';
        this.showDialog = false;
    }
    openDialog() {
        this.showDialog = true;
    }
    closeDialog() {
        this.showDialog = false;
    }
    changeColor() {
        this.buttonColor =
            this.buttonColor === 'primary' ? 'secondary' : 'primary';
    }
    onConfirmDialog() {
        this.changeColor();
        this.closeDialog();
    }
}
ModalExampleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModalExampleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ModalExampleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModalExampleComponent, selector: "bb-modal-example-ui", ngImport: i0, template: "<div id=\"ariaDescribedById\">\n  Confirm Changing the color By Clicking on the button\n</div>\n<button\n  #button\n  bbButton\n  type=\"button\"\n  [color]=\"buttonColor\"\n  (click)=\"openDialog()\"\n  id=\"ariaLabelledByID\"\n>\n  Click here to change the color!\n</button>\n<bb-modal-ui\n  [isOpen]=\"showDialog\"\n  (cancel)=\"closeDialog()\"\n  (confirm)=\"onConfirmDialog()\"\n  [aria-describedby]=\"'ariaDescribedById'\"\n  [aria-labelledby]=\"'ariaLabelledByID'\"\n>\n  <bb-modal-header-ui\n    title=\"Confirm changing the color\"\n  ></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      Are you sure you want to change the color?\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui confirmText=\"I Agree\" (confirm)=\"closeDialog()\">\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i2.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModalExampleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-modal-example-ui',
                    templateUrl: './modal.example.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwuZXhhbXBsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9fZXhhbXBsZS9tb2RhbC9leGFtcGxlcy9tb2RhbC5leGFtcGxlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL21vZGFsL2V4YW1wbGVzL21vZGFsLmV4YW1wbGUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQUsxQyxNQUFNLE9BQU8scUJBQXFCO0lBSmxDO1FBS0UsZ0JBQVcsR0FBRyxTQUFTLENBQUM7UUFFeEIsZUFBVSxHQUFHLEtBQUssQ0FBQztLQW1CcEI7SUFqQkMsVUFBVTtRQUNSLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsV0FBVztZQUNkLElBQUksQ0FBQyxXQUFXLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUM3RCxDQUFDO0lBRUQsZUFBZTtRQUNiLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDckIsQ0FBQzs7bUhBckJVLHFCQUFxQjt1R0FBckIscUJBQXFCLDJEQ0xsQyx1MEJBK0JBOzRGRDFCYSxxQkFBcUI7a0JBSmpDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsV0FBVyxFQUFFLGdDQUFnQztpQkFDOUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLW1vZGFsLWV4YW1wbGUtdWknLFxuICB0ZW1wbGF0ZVVybDogJy4vbW9kYWwuZXhhbXBsZS5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIE1vZGFsRXhhbXBsZUNvbXBvbmVudCB7XG4gIGJ1dHRvbkNvbG9yID0gJ3ByaW1hcnknO1xuXG4gIHNob3dEaWFsb2cgPSBmYWxzZTtcblxuICBvcGVuRGlhbG9nKCkge1xuICAgIHRoaXMuc2hvd0RpYWxvZyA9IHRydWU7XG4gIH1cblxuICBjbG9zZURpYWxvZygpIHtcbiAgICB0aGlzLnNob3dEaWFsb2cgPSBmYWxzZTtcbiAgfVxuXG4gIGNoYW5nZUNvbG9yKCkge1xuICAgIHRoaXMuYnV0dG9uQ29sb3IgPVxuICAgICAgdGhpcy5idXR0b25Db2xvciA9PT0gJ3ByaW1hcnknID8gJ3NlY29uZGFyeScgOiAncHJpbWFyeSc7XG4gIH1cblxuICBvbkNvbmZpcm1EaWFsb2coKSB7XG4gICAgdGhpcy5jaGFuZ2VDb2xvcigpO1xuICAgIHRoaXMuY2xvc2VEaWFsb2coKTtcbiAgfVxufVxuIiwiPGRpdiBpZD1cImFyaWFEZXNjcmliZWRCeUlkXCI+XG4gIENvbmZpcm0gQ2hhbmdpbmcgdGhlIGNvbG9yIEJ5IENsaWNraW5nIG9uIHRoZSBidXR0b25cbjwvZGl2PlxuPGJ1dHRvblxuICAjYnV0dG9uXG4gIGJiQnV0dG9uXG4gIHR5cGU9XCJidXR0b25cIlxuICBbY29sb3JdPVwiYnV0dG9uQ29sb3JcIlxuICAoY2xpY2spPVwib3BlbkRpYWxvZygpXCJcbiAgaWQ9XCJhcmlhTGFiZWxsZWRCeUlEXCJcbj5cbiAgQ2xpY2sgaGVyZSB0byBjaGFuZ2UgdGhlIGNvbG9yIVxuPC9idXR0b24+XG48YmItbW9kYWwtdWlcbiAgW2lzT3Blbl09XCJzaG93RGlhbG9nXCJcbiAgKGNhbmNlbCk9XCJjbG9zZURpYWxvZygpXCJcbiAgKGNvbmZpcm0pPVwib25Db25maXJtRGlhbG9nKClcIlxuICBbYXJpYS1kZXNjcmliZWRieV09XCInYXJpYURlc2NyaWJlZEJ5SWQnXCJcbiAgW2FyaWEtbGFiZWxsZWRieV09XCInYXJpYUxhYmVsbGVkQnlJRCdcIlxuPlxuICA8YmItbW9kYWwtaGVhZGVyLXVpXG4gICAgdGl0bGU9XCJDb25maXJtIGNoYW5naW5nIHRoZSBjb2xvclwiXG4gID48L2JiLW1vZGFsLWhlYWRlci11aT5cbiAgPGJiLW1vZGFsLWJvZHktdWk+XG4gICAgPG5nLXRlbXBsYXRlIGJiQ3VzdG9tTW9kYWxCb2R5PlxuICAgICAgQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGNoYW5nZSB0aGUgY29sb3I/XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgPC9iYi1tb2RhbC1ib2R5LXVpPlxuICA8YmItbW9kYWwtZm9vdGVyLXVpIGNvbmZpcm1UZXh0PVwiSSBBZ3JlZVwiIChjb25maXJtKT1cImNsb3NlRGlhbG9nKClcIj5cbiAgPC9iYi1tb2RhbC1mb290ZXItdWk+XG48L2JiLW1vZGFsLXVpPlxuIl19