import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/badge-counter";
import * as i2 from "@angular/common";
let BadgeCounterShowcaseComponent = class BadgeCounterShowcaseComponent {
    constructor() {
        this.badgeCounterShowCaseSetup = [
            {
                type: 'success',
                count: 5,
            },
            {
                type: 'danger',
                count: 18,
            },
            {
                type: 'danger',
                count: 1900,
            },
            {
                type: 'danger',
                count: 100,
                maxCount: 99,
            },
        ];
    }
};
BadgeCounterShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BadgeCounterShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BadgeCounterShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeCounterShowcaseComponent, selector: "bb-badge-counter-ui-showcase", ngImport: i0, template: "<div class=\"bb-stack bb-block bb-block--md\">\n  <bb-badge-counter-ui\n    *ngFor=\"let badge of badgeCounterShowCaseSetup\"\n    [count]=\"badge.count\"\n    [maxCount]=\"badge.maxCount\"\n    [color]=\"badge.type\"\n    class=\"bb-stack__item\"\n  ></bb-badge-counter-ui>\n</div>\n", components: [{ type: i1.BadgeCounterComponent, selector: "bb-badge-counter-ui", inputs: ["color", "count", "maxCount"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
BadgeCounterShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], BadgeCounterShowcaseComponent);
export { BadgeCounterShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BadgeCounterShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-badge-counter-ui-showcase',
                    templateUrl: 'badge-counter-showcase.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UtY291bnRlci1zaG93Y2FzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9fZXhhbXBsZS9iYWRnZS1jb3VudGVyL3Nob3djYXNlL2JhZGdlLWNvdW50ZXItc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvYmFkZ2UtY291bnRlci9zaG93Y2FzZS9iYWRnZS1jb3VudGVyLXNob3djYXNlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7OztJQVN4Qyw2QkFBNkIsU0FBN0IsNkJBQTZCOztRQUNqQyw4QkFBeUIsR0FBRztZQUNqQztnQkFDRSxJQUFJLEVBQUUsU0FBUztnQkFDZixLQUFLLEVBQUUsQ0FBQzthQUNUO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsS0FBSyxFQUFFLEVBQUU7YUFDVjtZQUNEO2dCQUNFLElBQUksRUFBRSxRQUFRO2dCQUNkLEtBQUssRUFBRSxJQUFJO2FBQ1o7WUFDRDtnQkFDRSxJQUFJLEVBQUUsUUFBUTtnQkFDZCxLQUFLLEVBQUUsR0FBRztnQkFDVixRQUFRLEVBQUUsRUFBRTthQUNiO1NBQ0YsQ0FBQztLQUNIO0NBQUEsQ0FBQTsySEFwQlksNkJBQTZCOytHQUE3Qiw2QkFBNkIsb0VDVjFDLDhSQVNBO0FEQ2EsNkJBQTZCO0lBSHpDLFlBQVksQ0FBQztRQUNaLGNBQWMsRUFBRSxJQUFJO0tBQ3JCLENBQUM7R0FDVyw2QkFBNkIsQ0FvQnpDO1NBcEJZLDZCQUE2Qjs0RkFBN0IsNkJBQTZCO2tCQVB6QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw4QkFBOEI7b0JBQ3hDLFdBQVcsRUFBRSx1Q0FBdUM7aUJBQ3JEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYWNrYmFzZURvY3MgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL3V0aWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1iYWRnZS1jb3VudGVyLXVpLXNob3djYXNlJyxcbiAgdGVtcGxhdGVVcmw6ICdiYWRnZS1jb3VudGVyLXNob3djYXNlLmNvbXBvbmVudC5odG1sJyxcbn0pXG5AQmFja2Jhc2VEb2NzKHtcbiAgaXNUaGVtZTJTdGFibGU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIEJhZGdlQ291bnRlclNob3djYXNlQ29tcG9uZW50IHtcbiAgcHVibGljIGJhZGdlQ291bnRlclNob3dDYXNlU2V0dXAgPSBbXG4gICAge1xuICAgICAgdHlwZTogJ3N1Y2Nlc3MnLFxuICAgICAgY291bnQ6IDUsXG4gICAgfSxcbiAgICB7XG4gICAgICB0eXBlOiAnZGFuZ2VyJyxcbiAgICAgIGNvdW50OiAxOCxcbiAgICB9LFxuICAgIHtcbiAgICAgIHR5cGU6ICdkYW5nZXInLFxuICAgICAgY291bnQ6IDE5MDAsXG4gICAgfSxcbiAgICB7XG4gICAgICB0eXBlOiAnZGFuZ2VyJyxcbiAgICAgIGNvdW50OiAxMDAsXG4gICAgICBtYXhDb3VudDogOTksXG4gICAgfSxcbiAgXTtcbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi1zdGFjayBiYi1ibG9jayBiYi1ibG9jay0tbWRcIj5cbiAgPGJiLWJhZGdlLWNvdW50ZXItdWlcbiAgICAqbmdGb3I9XCJsZXQgYmFkZ2Ugb2YgYmFkZ2VDb3VudGVyU2hvd0Nhc2VTZXR1cFwiXG4gICAgW2NvdW50XT1cImJhZGdlLmNvdW50XCJcbiAgICBbbWF4Q291bnRdPVwiYmFkZ2UubWF4Q291bnRcIlxuICAgIFtjb2xvcl09XCJiYWRnZS50eXBlXCJcbiAgICBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCJcbiAgPjwvYmItYmFkZ2UtY291bnRlci11aT5cbjwvZGl2PlxuIl19