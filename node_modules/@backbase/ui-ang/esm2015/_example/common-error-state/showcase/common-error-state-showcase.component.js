import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import { HttpErrorResponse } from '@angular/common/http';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/common-error-state";
let CommonErrorStateShowcaseComponent = class CommonErrorStateShowcaseComponent {
    getErrorFromString(errorType) {
        switch (errorType) {
            case 'badRequestError':
                return new HttpErrorResponse({ status: 400 });
            case 'unauthorizedError':
                return new HttpErrorResponse({ status: 401 });
            case 'forbiddenError':
                return new HttpErrorResponse({ status: 403 });
            case 'notFoundError':
                return new HttpErrorResponse({ status: 404 });
            case 'internalServerError':
                return new HttpErrorResponse({ status: 500 });
            case 'connectivityError':
                return new HttpErrorResponse({ status: 0 });
            case 'textError':
            default:
                return 'Some text error';
        }
    }
};
CommonErrorStateShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CommonErrorStateShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CommonErrorStateShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CommonErrorStateShowcaseComponent, selector: "bb-common-error-state-ui-showcase", ngImport: i0, template: "<div class=\"bb-block bb-block--lg\">\n  <h4>Not Found Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('notFoundError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Bad Request Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('badRequestError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Unauthorized Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('unauthorizedError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Forbidden Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('forbiddenError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Connectivity Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('connectivityError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Internal Server Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('internalServerError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Text Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('textError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Custom i18n Template (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"i18nCustomError\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Not Found Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('notFoundError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Bad Request Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('badRequestError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"mb-3\">\n  <h4>Connectivity Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('connectivityError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Internal Server Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('internalServerError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Text Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('textError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Custom i18n Template - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"i18nCustomError\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #i18nCustomError>\n  <p>Custom error with i18n support</p>\n</ng-template>\n", components: [{ type: i1.ErrorCommonStateComponent, selector: "bb-common-error-state-ui", inputs: ["error"] }] });
CommonErrorStateShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], CommonErrorStateShowcaseComponent);
export { CommonErrorStateShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CommonErrorStateShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-common-error-state-ui-showcase',
                    templateUrl: 'common-error-state-showcase.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,