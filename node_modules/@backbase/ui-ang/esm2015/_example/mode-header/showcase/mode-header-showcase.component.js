import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/mode-header";
import * as i2 from "@backbase/ui-ang/icon";
import * as i3 from "@backbase/ui-ang/badge";
import * as i4 from "@backbase/ui-ang/dropdown-menu";
import * as i5 from "@angular/common";
import * as i6 from "@backbase/ui-ang/button";
let ModeHeaderShowcaseComponent = class ModeHeaderShowcaseComponent {
    constructor() {
        this.defaultModeHeader = {
            title: 'Close Button Displayed',
            secondaryTitle: undefined,
            showCloseButton: true,
            closeButtonAriaLabel: 'Close the mode header',
            reverseTitleOrder: true,
            displayIcon: false,
            displayStatus: false,
            displayUtilityArea: false,
            multiButtonUtilityArea: false,
        };
        this.modeHeaders = [
            Object.assign({}, this.defaultModeHeader),
            Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Close Button Hidden', showCloseButton: false, closeButtonAriaLabel: undefined }),
            Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Secondary title displayed', secondaryTitle: 'This is the secondary title' }),
            Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Title order not reversed', secondaryTitle: 'This is the secondary title', reverseTitleOrder: false }),
            Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Icon displayed', displayIcon: true }),
            Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Status displayed', displayStatus: true }),
            Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Utility Area displayed', displayUtilityArea: true }),
            Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Utility Area with multiple buttons', multiButtonUtilityArea: true }),
        ];
    }
};
ModeHeaderShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ModeHeaderShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModeHeaderShowcaseComponent, selector: "bb-mode-header-ui-showcase", ngImport: i0, template: "<ng-container *ngFor=\"let modeHeader of modeHeaders\">\n  <div class=\"bb-block bb-block--xl\">\n    <bb-mode-header-ui\n      [title]=\"modeHeader.title\"\n      [secondaryTitle]=\"modeHeader.secondaryTitle\"\n      [showCloseButton]=\"modeHeader.showCloseButton\"\n      [closeButtonAriaLabel]=\"modeHeader.closeButtonAriaLabel\"\n      [reverseTitleOrder]=\"modeHeader.reverseTitleOrder\"\n    >\n      <bb-icon-ui *ngIf=\"modeHeader.displayIcon\" mode-header-icon name=\"search\" size=\"sm\" color=\"primary\"></bb-icon-ui>\n      <bb-badge-ui *ngIf=\"modeHeader.displayStatus\" mode-header-status text=\"Sample Text\" color=\"success\">\n      </bb-badge-ui>\n      <bb-dropdown-menu-ui\n        *ngIf=\"modeHeader.displayUtilityArea\"\n        mode-header-utility-area\n        container=\"body\"\n        icon=\"caret-down\"\n        btnColor=\"primary\"\n        iconSize=\"md\"\n      >\n        <ng-template bbDropdownLabel> <span>Actions</span></ng-template>\n        <ng-template bbDropdownMenuItem>\n          <button class=\"dropdown-item\" type=\"button\">Action One</button>\n          <button class=\"dropdown-item\" type=\"button\">Action Two</button>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n      <ng-container *ngIf=\"modeHeader.multiButtonUtilityArea\" mode-header-utility-area>\n        <button bbButton buttonSize=\"md\" type=\"button\" class=\"bb-button-bar__button\" [circle]=\"true\">\n          <bb-icon-ui name=\"add\" size=\"md\" cropped></bb-icon-ui>\n        </button>\n        <button bbButton buttonSize=\"md\" type=\"button\" class=\"bb-button-bar__button\" [circle]=\"true\">\n          <bb-icon-ui name=\"user\" size=\"md\" cropped></bb-icon-ui>\n        </button>\n        <button bbButton buttonSize=\"md\" type=\"button\" class=\"bb-button-bar__button\" [circle]=\"true\">\n          <bb-icon-ui name=\"payment\" size=\"md\" cropped></bb-icon-ui>\n        </button>\n      </ng-container>\n    </bb-mode-header-ui>\n  </div>\n</ng-container>\n", components: [{ type: i1.ModeHeaderComponent, selector: "bb-mode-header-ui", inputs: ["title", "secondaryTitle", "showCloseButton", "closeButtonAriaLabel", "reverseTitleOrder"], outputs: ["close"] }, { type: i2.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i4.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }], directives: [{ type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.DropdownLabelDirective, selector: "ng-template[bbDropdownLabel]" }, { type: i4.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i6.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
ModeHeaderShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], ModeHeaderShowcaseComponent);
export { ModeHeaderShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-mode-header-ui-showcase',
                    templateUrl: './mode-header-showcase.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZS1oZWFkZXItc2hvd2Nhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvbW9kZS1oZWFkZXIvc2hvd2Nhc2UvbW9kZS1oZWFkZXItc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvbW9kZS1oZWFkZXIvc2hvd2Nhc2UvbW9kZS1oZWFkZXItc2hvd2Nhc2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7Ozs7OztJQVN4QywyQkFBMkIsU0FBM0IsMkJBQTJCOztRQUM5QixzQkFBaUIsR0FBRztZQUMxQixLQUFLLEVBQUUsd0JBQXdCO1lBQy9CLGNBQWMsRUFBRSxTQUFTO1lBQ3pCLGVBQWUsRUFBRSxJQUFJO1lBQ3JCLG9CQUFvQixFQUFFLHVCQUF1QjtZQUM3QyxpQkFBaUIsRUFBRSxJQUFJO1lBQ3ZCLFdBQVcsRUFBRSxLQUFLO1lBQ2xCLGFBQWEsRUFBRSxLQUFLO1lBQ3BCLGtCQUFrQixFQUFFLEtBQUs7WUFDekIsc0JBQXNCLEVBQUUsS0FBSztTQUM5QixDQUFDO1FBRUYsZ0JBQVcsR0FBRzs4QkFFUCxJQUFJLENBQUMsaUJBQWlCOzRDQUd0QixJQUFJLENBQUMsaUJBQWlCLEtBQ3pCLEtBQUssRUFBRSxxQkFBcUIsRUFDNUIsZUFBZSxFQUFFLEtBQUssRUFDdEIsb0JBQW9CLEVBQUUsU0FBUzs0Q0FHNUIsSUFBSSxDQUFDLGlCQUFpQixLQUN6QixLQUFLLEVBQUUsMkJBQTJCLEVBQ2xDLGNBQWMsRUFBRSw2QkFBNkI7NENBRzFDLElBQUksQ0FBQyxpQkFBaUIsS0FDekIsS0FBSyxFQUFFLDBCQUEwQixFQUNqQyxjQUFjLEVBQUUsNkJBQTZCLEVBQzdDLGlCQUFpQixFQUFFLEtBQUs7NENBR3JCLElBQUksQ0FBQyxpQkFBaUIsS0FDekIsS0FBSyxFQUFFLGdCQUFnQixFQUN2QixXQUFXLEVBQUUsSUFBSTs0Q0FHZCxJQUFJLENBQUMsaUJBQWlCLEtBQ3pCLEtBQUssRUFBRSxrQkFBa0IsRUFDekIsYUFBYSxFQUFFLElBQUk7NENBR2hCLElBQUksQ0FBQyxpQkFBaUIsS0FDekIsS0FBSyxFQUFFLHdCQUF3QixFQUMvQixrQkFBa0IsRUFBRSxJQUFJOzRDQUdyQixJQUFJLENBQUMsaUJBQWlCLEtBQ3pCLEtBQUssRUFBRSxvQ0FBb0MsRUFDM0Msc0JBQXNCLEVBQUUsSUFBSTtTQUUvQixDQUFDO0tBQ0g7Q0FBQSxDQUFBO3lIQXZEWSwyQkFBMkI7NkdBQTNCLDJCQUEyQixrRUNWeEMsZzlEQXdDQTtBRDlCYSwyQkFBMkI7SUFIdkMsWUFBWSxDQUFDO1FBQ1osY0FBYyxFQUFFLElBQUk7S0FDckIsQ0FBQztHQUNXLDJCQUEyQixDQXVEdkM7U0F2RFksMkJBQTJCOzRGQUEzQiwyQkFBMkI7a0JBUHZDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsV0FBVyxFQUFFLHVDQUF1QztpQkFDckQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhY2tiYXNlRG9jcyB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvdXRpbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLW1vZGUtaGVhZGVyLXVpLXNob3djYXNlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21vZGUtaGVhZGVyLXNob3djYXNlLmNvbXBvbmVudC5odG1sJyxcbn0pXG5AQmFja2Jhc2VEb2NzKHtcbiAgaXNUaGVtZTJTdGFibGU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIE1vZGVIZWFkZXJTaG93Y2FzZUNvbXBvbmVudCB7XG4gIHByaXZhdGUgZGVmYXVsdE1vZGVIZWFkZXIgPSB7XG4gICAgdGl0bGU6ICdDbG9zZSBCdXR0b24gRGlzcGxheWVkJyxcbiAgICBzZWNvbmRhcnlUaXRsZTogdW5kZWZpbmVkLFxuICAgIHNob3dDbG9zZUJ1dHRvbjogdHJ1ZSxcbiAgICBjbG9zZUJ1dHRvbkFyaWFMYWJlbDogJ0Nsb3NlIHRoZSBtb2RlIGhlYWRlcicsXG4gICAgcmV2ZXJzZVRpdGxlT3JkZXI6IHRydWUsXG4gICAgZGlzcGxheUljb246IGZhbHNlLFxuICAgIGRpc3BsYXlTdGF0dXM6IGZhbHNlLFxuICAgIGRpc3BsYXlVdGlsaXR5QXJlYTogZmFsc2UsXG4gICAgbXVsdGlCdXR0b25VdGlsaXR5QXJlYTogZmFsc2UsXG4gIH07XG5cbiAgbW9kZUhlYWRlcnMgPSBbXG4gICAge1xuICAgICAgLi4udGhpcy5kZWZhdWx0TW9kZUhlYWRlcixcbiAgICB9LFxuICAgIHtcbiAgICAgIC4uLnRoaXMuZGVmYXVsdE1vZGVIZWFkZXIsXG4gICAgICB0aXRsZTogJ0Nsb3NlIEJ1dHRvbiBIaWRkZW4nLFxuICAgICAgc2hvd0Nsb3NlQnV0dG9uOiBmYWxzZSxcbiAgICAgIGNsb3NlQnV0dG9uQXJpYUxhYmVsOiB1bmRlZmluZWQsXG4gICAgfSxcbiAgICB7XG4gICAgICAuLi50aGlzLmRlZmF1bHRNb2RlSGVhZGVyLFxuICAgICAgdGl0bGU6ICdTZWNvbmRhcnkgdGl0bGUgZGlzcGxheWVkJyxcbiAgICAgIHNlY29uZGFyeVRpdGxlOiAnVGhpcyBpcyB0aGUgc2Vjb25kYXJ5IHRpdGxlJyxcbiAgICB9LFxuICAgIHtcbiAgICAgIC4uLnRoaXMuZGVmYXVsdE1vZGVIZWFkZXIsXG4gICAgICB0aXRsZTogJ1RpdGxlIG9yZGVyIG5vdCByZXZlcnNlZCcsXG4gICAgICBzZWNvbmRhcnlUaXRsZTogJ1RoaXMgaXMgdGhlIHNlY29uZGFyeSB0aXRsZScsXG4gICAgICByZXZlcnNlVGl0bGVPcmRlcjogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICAuLi50aGlzLmRlZmF1bHRNb2RlSGVhZGVyLFxuICAgICAgdGl0bGU6ICdJY29uIGRpc3BsYXllZCcsXG4gICAgICBkaXNwbGF5SWNvbjogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIC4uLnRoaXMuZGVmYXVsdE1vZGVIZWFkZXIsXG4gICAgICB0aXRsZTogJ1N0YXR1cyBkaXNwbGF5ZWQnLFxuICAgICAgZGlzcGxheVN0YXR1czogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIC4uLnRoaXMuZGVmYXVsdE1vZGVIZWFkZXIsXG4gICAgICB0aXRsZTogJ1V0aWxpdHkgQXJlYSBkaXNwbGF5ZWQnLFxuICAgICAgZGlzcGxheVV0aWxpdHlBcmVhOiB0cnVlLFxuICAgIH0sXG4gICAge1xuICAgICAgLi4udGhpcy5kZWZhdWx0TW9kZUhlYWRlcixcbiAgICAgIHRpdGxlOiAnVXRpbGl0eSBBcmVhIHdpdGggbXVsdGlwbGUgYnV0dG9ucycsXG4gICAgICBtdWx0aUJ1dHRvblV0aWxpdHlBcmVhOiB0cnVlLFxuICAgIH0sXG4gIF07XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBtb2RlSGVhZGVyIG9mIG1vZGVIZWFkZXJzXCI+XG4gIDxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0teGxcIj5cbiAgICA8YmItbW9kZS1oZWFkZXItdWlcbiAgICAgIFt0aXRsZV09XCJtb2RlSGVhZGVyLnRpdGxlXCJcbiAgICAgIFtzZWNvbmRhcnlUaXRsZV09XCJtb2RlSGVhZGVyLnNlY29uZGFyeVRpdGxlXCJcbiAgICAgIFtzaG93Q2xvc2VCdXR0b25dPVwibW9kZUhlYWRlci5zaG93Q2xvc2VCdXR0b25cIlxuICAgICAgW2Nsb3NlQnV0dG9uQXJpYUxhYmVsXT1cIm1vZGVIZWFkZXIuY2xvc2VCdXR0b25BcmlhTGFiZWxcIlxuICAgICAgW3JldmVyc2VUaXRsZU9yZGVyXT1cIm1vZGVIZWFkZXIucmV2ZXJzZVRpdGxlT3JkZXJcIlxuICAgID5cbiAgICAgIDxiYi1pY29uLXVpICpuZ0lmPVwibW9kZUhlYWRlci5kaXNwbGF5SWNvblwiIG1vZGUtaGVhZGVyLWljb24gbmFtZT1cInNlYXJjaFwiIHNpemU9XCJzbVwiIGNvbG9yPVwicHJpbWFyeVwiPjwvYmItaWNvbi11aT5cbiAgICAgIDxiYi1iYWRnZS11aSAqbmdJZj1cIm1vZGVIZWFkZXIuZGlzcGxheVN0YXR1c1wiIG1vZGUtaGVhZGVyLXN0YXR1cyB0ZXh0PVwiU2FtcGxlIFRleHRcIiBjb2xvcj1cInN1Y2Nlc3NcIj5cbiAgICAgIDwvYmItYmFkZ2UtdWk+XG4gICAgICA8YmItZHJvcGRvd24tbWVudS11aVxuICAgICAgICAqbmdJZj1cIm1vZGVIZWFkZXIuZGlzcGxheVV0aWxpdHlBcmVhXCJcbiAgICAgICAgbW9kZS1oZWFkZXItdXRpbGl0eS1hcmVhXG4gICAgICAgIGNvbnRhaW5lcj1cImJvZHlcIlxuICAgICAgICBpY29uPVwiY2FyZXQtZG93blwiXG4gICAgICAgIGJ0bkNvbG9yPVwicHJpbWFyeVwiXG4gICAgICAgIGljb25TaXplPVwibWRcIlxuICAgICAgPlxuICAgICAgICA8bmctdGVtcGxhdGUgYmJEcm9wZG93bkxhYmVsPiA8c3Bhbj5BY3Rpb25zPC9zcGFuPjwvbmctdGVtcGxhdGU+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSBiYkRyb3Bkb3duTWVudUl0ZW0+XG4gICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImRyb3Bkb3duLWl0ZW1cIiB0eXBlPVwiYnV0dG9uXCI+QWN0aW9uIE9uZTwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJkcm9wZG93bi1pdGVtXCIgdHlwZT1cImJ1dHRvblwiPkFjdGlvbiBUd288L2J1dHRvbj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgIDwvYmItZHJvcGRvd24tbWVudS11aT5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJtb2RlSGVhZGVyLm11bHRpQnV0dG9uVXRpbGl0eUFyZWFcIiBtb2RlLWhlYWRlci11dGlsaXR5LWFyZWE+XG4gICAgICAgIDxidXR0b24gYmJCdXR0b24gYnV0dG9uU2l6ZT1cIm1kXCIgdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYmItYnV0dG9uLWJhcl9fYnV0dG9uXCIgW2NpcmNsZV09XCJ0cnVlXCI+XG4gICAgICAgICAgPGJiLWljb24tdWkgbmFtZT1cImFkZFwiIHNpemU9XCJtZFwiIGNyb3BwZWQ+PC9iYi1pY29uLXVpPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiBiYkJ1dHRvbiBidXR0b25TaXplPVwibWRcIiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b25cIiBbY2lyY2xlXT1cInRydWVcIj5cbiAgICAgICAgICA8YmItaWNvbi11aSBuYW1lPVwidXNlclwiIHNpemU9XCJtZFwiIGNyb3BwZWQ+PC9iYi1pY29uLXVpPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiBiYkJ1dHRvbiBidXR0b25TaXplPVwibWRcIiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b25cIiBbY2lyY2xlXT1cInRydWVcIj5cbiAgICAgICAgICA8YmItaWNvbi11aSBuYW1lPVwicGF5bWVudFwiIHNpemU9XCJtZFwiIGNyb3BwZWQ+PC9iYi1pY29uLXVpPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvYmItbW9kZS1oZWFkZXItdWk+XG4gIDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG4iXX0=