import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/rich-text-editor";
let RichTextEditorShowcaseComponent = class RichTextEditorShowcaseComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.vForm = this.formBuilder.group({
            modelMessage: '',
            modelMessage2: '',
        });
    }
};
RichTextEditorShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RichTextEditorShowcaseComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
RichTextEditorShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorShowcaseComponent, selector: "bb-rich-text-editor-ui-showcase", ngImport: i0, template: "<form [formGroup]=\"vForm\">\n  <div class=\"bb-block bb-block--xl\">\n    <p>\n      <bb-rich-text-editor-ui\n        #richTextEditor\n        [id]=\"'modelMessage'\"\n        label=\"Message (rich text editor)\"\n        formControlName=\"modelMessage\"\n        placeholder=\"Please, enter your message\"\n        [maxLength]=\"300\"\n        [readonly]=\"false\"\n        [required]=\"true\"\n        [aria-describedby]=\"'a4678b54-18f3-46eb-9f36-542093e5ece2'\"\n      ></bb-rich-text-editor-ui>\n    </p>\n    <p id=\"a4678b54-18f3-46eb-9f36-542093e5ece2\">\n      {{ richTextEditor.maxLength }} characters is the maximum, but the shorter the better.\n    </p>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Disabled editor</h4>\n    <p>\n      <bb-rich-text-editor-ui\n        [id]=\"'modelMessage2'\"\n        label=\"Message\"\n        formControlName=\"modelMessage2\"\n        placeholder=\"Please, enter your message\"\n        [maxLength]=\"300\"\n        [disabled]=\"true\"\n      ></bb-rich-text-editor-ui>\n    </p>\n  </div>\n</form>\n", components: [{ type: i2.RichTextEditorComponent, selector: "bb-rich-text-editor-ui", inputs: ["maxLength", "minLength", "placeholder", "counter", "readonly", "actionsTooltipPlacement"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
RichTextEditorShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], RichTextEditorShowcaseComponent);
export { RichTextEditorShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RichTextEditorShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-rich-text-editor-ui-showcase',
                    templateUrl: './rich-text-editor-showcase.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmljaC10ZXh0LWVkaXRvci1zaG93Y2FzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9fZXhhbXBsZS9yaWNoLXRleHQtZWRpdG9yL3Nob3djYXNlL3JpY2gtdGV4dC1lZGl0b3Itc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvcmljaC10ZXh0LWVkaXRvci9zaG93Y2FzZS9yaWNoLXRleHQtZWRpdG9yLXNob3djYXNlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7OztJQVN4QywrQkFBK0IsU0FBL0IsK0JBQStCO0lBRTFDLFlBQTZCLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ25ELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7WUFDbEMsWUFBWSxFQUFFLEVBQUU7WUFDaEIsYUFBYSxFQUFFLEVBQUU7U0FDbEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGLENBQUE7NkhBUlksK0JBQStCO2lIQUEvQiwrQkFBK0IsdUVDWDVDLDRpQ0FpQ0E7QUR0QmEsK0JBQStCO0lBSDNDLFlBQVksQ0FBQztRQUNaLGNBQWMsRUFBRSxJQUFJO0tBQ3JCLENBQUM7R0FDVywrQkFBK0IsQ0FRM0M7U0FSWSwrQkFBK0I7NEZBQS9CLCtCQUErQjtrQkFQM0MsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUNBQWlDO29CQUMzQyxXQUFXLEVBQUUsNENBQTRDO2lCQUMxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEJhY2tiYXNlRG9jcyB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvdXRpbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLXJpY2gtdGV4dC1lZGl0b3ItdWktc2hvd2Nhc2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vcmljaC10ZXh0LWVkaXRvci1zaG93Y2FzZS5jb21wb25lbnQuaHRtbCcsXG59KVxuQEJhY2tiYXNlRG9jcyh7XG4gIGlzVGhlbWUyU3RhYmxlOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBSaWNoVGV4dEVkaXRvclNob3djYXNlQ29tcG9uZW50IHtcbiAgdkZvcm06IEZvcm1Hcm91cCB8IHVuZGVmaW5lZDtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIpIHtcbiAgICB0aGlzLnZGb3JtID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7XG4gICAgICBtb2RlbE1lc3NhZ2U6ICcnLFxuICAgICAgbW9kZWxNZXNzYWdlMjogJycsXG4gICAgfSk7XG4gIH1cbn1cbiIsIjxmb3JtIFtmb3JtR3JvdXBdPVwidkZvcm1cIj5cbiAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS14bFwiPlxuICAgIDxwPlxuICAgICAgPGJiLXJpY2gtdGV4dC1lZGl0b3ItdWlcbiAgICAgICAgI3JpY2hUZXh0RWRpdG9yXG4gICAgICAgIFtpZF09XCInbW9kZWxNZXNzYWdlJ1wiXG4gICAgICAgIGxhYmVsPVwiTWVzc2FnZSAocmljaCB0ZXh0IGVkaXRvcilcIlxuICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJtb2RlbE1lc3NhZ2VcIlxuICAgICAgICBwbGFjZWhvbGRlcj1cIlBsZWFzZSwgZW50ZXIgeW91ciBtZXNzYWdlXCJcbiAgICAgICAgW21heExlbmd0aF09XCIzMDBcIlxuICAgICAgICBbcmVhZG9ubHldPVwiZmFsc2VcIlxuICAgICAgICBbcmVxdWlyZWRdPVwidHJ1ZVwiXG4gICAgICAgIFthcmlhLWRlc2NyaWJlZGJ5XT1cIidhNDY3OGI1NC0xOGYzLTQ2ZWItOWYzNi01NDIwOTNlNWVjZTInXCJcbiAgICAgID48L2JiLXJpY2gtdGV4dC1lZGl0b3ItdWk+XG4gICAgPC9wPlxuICAgIDxwIGlkPVwiYTQ2NzhiNTQtMThmMy00NmViLTlmMzYtNTQyMDkzZTVlY2UyXCI+XG4gICAgICB7eyByaWNoVGV4dEVkaXRvci5tYXhMZW5ndGggfX0gY2hhcmFjdGVycyBpcyB0aGUgbWF4aW11bSwgYnV0IHRoZSBzaG9ydGVyIHRoZSBiZXR0ZXIuXG4gICAgPC9wPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS14bFwiPlxuICAgIDxoND5EaXNhYmxlZCBlZGl0b3I8L2g0PlxuICAgIDxwPlxuICAgICAgPGJiLXJpY2gtdGV4dC1lZGl0b3ItdWlcbiAgICAgICAgW2lkXT1cIidtb2RlbE1lc3NhZ2UyJ1wiXG4gICAgICAgIGxhYmVsPVwiTWVzc2FnZVwiXG4gICAgICAgIGZvcm1Db250cm9sTmFtZT1cIm1vZGVsTWVzc2FnZTJcIlxuICAgICAgICBwbGFjZWhvbGRlcj1cIlBsZWFzZSwgZW50ZXIgeW91ciBtZXNzYWdlXCJcbiAgICAgICAgW21heExlbmd0aF09XCIzMDBcIlxuICAgICAgICBbZGlzYWJsZWRdPVwidHJ1ZVwiXG4gICAgICA+PC9iYi1yaWNoLXRleHQtZWRpdG9yLXVpPlxuICAgIDwvcD5cbiAgPC9kaXY+XG48L2Zvcm0+XG4iXX0=