import { Component } from '@angular/core';
import { FormControl, Validators } from '@angular/forms';
import { BB_DYNAMIC_VALIDATION_ERROR_TMPL, BB_VALIDATION_ERRORS } from '@backbase/ui-ang/control-error-handler';
import { customErrorMessagesShowcase, CustomErrorShowcaseComponent } from './custom-error-showcase.component';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/input-text";
import * as i2 from "@backbase/ui-ang/control-error-handler";
import * as i3 from "@angular/forms";
export class InputWithCustomErrorComponent {
    constructor() {
        this.inputField = new FormControl(null, [Validators.required]);
    }
}
InputWithCustomErrorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputWithCustomErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
InputWithCustomErrorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputWithCustomErrorComponent, selector: "bb-input-with-custom-error-showcase", providers: [
        {
            provide: BB_VALIDATION_ERRORS,
            useValue: customErrorMessagesShowcase,
        },
        {
            provide: BB_DYNAMIC_VALIDATION_ERROR_TMPL,
            useValue: CustomErrorShowcaseComponent,
        },
    ], ngImport: i0, template: `
    <div>
      <bb-input-text-ui
        bbFormControl
        label="Input with custom error component using InjectionToken"
        [formControl]="inputField"
        placeholder="Please enter a value, at most 35 chars..."
      >
      </bb-input-text-ui>
    </div>
  `, isInline: true, components: [{ type: i1.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }], directives: [{ type: i2.ValidationErrorsDirective, selector: "[bbFormControl]", inputs: ["errorLabels", "showError", "inputSelector", "label", "errorComponent"] }, { type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InputWithCustomErrorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-input-with-custom-error-showcase',
                    template: `
    <div>
      <bb-input-text-ui
        bbFormControl
        label="Input with custom error component using InjectionToken"
        [formControl]="inputField"
        placeholder="Please enter a value, at most 35 chars..."
      >
      </bb-input-text-ui>
    </div>
  `,
                    providers: [
                        {
                            provide: BB_VALIDATION_ERRORS,
                            useValue: customErrorMessagesShowcase,
                        },
                        {
                            provide: BB_DYNAMIC_VALIDATION_ERROR_TMPL,
                            useValue: CustomErrorShowcaseComponent,
                        },
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtd2l0aC1jdXN0b20tZXJyb3JzLXNob3djYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL2NvbnRyb2wtZXJyb3ItaGFuZGxlci9zaG93Y2FzZS9jdXN0b20tZXJyb3IvaW5wdXQtd2l0aC1jdXN0b20tZXJyb3JzLXNob3djYXNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDekQsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDaEgsT0FBTyxFQUFFLDJCQUEyQixFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7Ozs7O0FBMEI5RyxNQUFNLE9BQU8sNkJBQTZCO0lBeEIxQztRQXlCRSxlQUFVLEdBQUcsSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7S0FDM0Q7OzJIQUZZLDZCQUE2QjsrR0FBN0IsNkJBQTZCLDhEQVg3QjtRQUNUO1lBQ0UsT0FBTyxFQUFFLG9CQUFvQjtZQUM3QixRQUFRLEVBQUUsMkJBQTJCO1NBQ3RDO1FBQ0Q7WUFDRSxPQUFPLEVBQUUsZ0NBQWdDO1lBQ3pDLFFBQVEsRUFBRSw0QkFBNEI7U0FDdkM7S0FDRiwwQkFwQlM7Ozs7Ozs7Ozs7R0FVVDs0RkFZVSw2QkFBNkI7a0JBeEJ6QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxxQ0FBcUM7b0JBQy9DLFFBQVEsRUFBRTs7Ozs7Ozs7OztHQVVUO29CQUNELFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsb0JBQW9COzRCQUM3QixRQUFRLEVBQUUsMkJBQTJCO3lCQUN0Qzt3QkFDRDs0QkFDRSxPQUFPLEVBQUUsZ0NBQWdDOzRCQUN6QyxRQUFRLEVBQUUsNEJBQTRCO3lCQUN2QztxQkFDRjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUNvbnRyb2wsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBCQl9EWU5BTUlDX1ZBTElEQVRJT05fRVJST1JfVE1QTCwgQkJfVkFMSURBVElPTl9FUlJPUlMgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2NvbnRyb2wtZXJyb3ItaGFuZGxlcic7XG5pbXBvcnQgeyBjdXN0b21FcnJvck1lc3NhZ2VzU2hvd2Nhc2UsIEN1c3RvbUVycm9yU2hvd2Nhc2VDb21wb25lbnQgfSBmcm9tICcuL2N1c3RvbS1lcnJvci1zaG93Y2FzZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1pbnB1dC13aXRoLWN1c3RvbS1lcnJvci1zaG93Y2FzZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdj5cbiAgICAgIDxiYi1pbnB1dC10ZXh0LXVpXG4gICAgICAgIGJiRm9ybUNvbnRyb2xcbiAgICAgICAgbGFiZWw9XCJJbnB1dCB3aXRoIGN1c3RvbSBlcnJvciBjb21wb25lbnQgdXNpbmcgSW5qZWN0aW9uVG9rZW5cIlxuICAgICAgICBbZm9ybUNvbnRyb2xdPVwiaW5wdXRGaWVsZFwiXG4gICAgICAgIHBsYWNlaG9sZGVyPVwiUGxlYXNlIGVudGVyIGEgdmFsdWUsIGF0IG1vc3QgMzUgY2hhcnMuLi5cIlxuICAgICAgPlxuICAgICAgPC9iYi1pbnB1dC10ZXh0LXVpPlxuICAgIDwvZGl2PlxuICBgLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBCQl9WQUxJREFUSU9OX0VSUk9SUyxcbiAgICAgIHVzZVZhbHVlOiBjdXN0b21FcnJvck1lc3NhZ2VzU2hvd2Nhc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBCQl9EWU5BTUlDX1ZBTElEQVRJT05fRVJST1JfVE1QTCxcbiAgICAgIHVzZVZhbHVlOiBDdXN0b21FcnJvclNob3djYXNlQ29tcG9uZW50LFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0V2l0aEN1c3RvbUVycm9yQ29tcG9uZW50IHtcbiAgaW5wdXRGaWVsZCA9IG5ldyBGb3JtQ29udHJvbChudWxsLCBbVmFsaWRhdG9ycy5yZXF1aXJlZF0pO1xufVxuIl19