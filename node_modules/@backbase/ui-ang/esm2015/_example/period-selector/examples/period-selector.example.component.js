import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/period-selector";
const dateTimeToDate = (isoDateTime) => isoDateTime.replace(/T.+/, '');
export class PeriodSelectorExampleComponent {
    constructor() {
        this.startDate = new Date('2018-08-01');
        this.endDate = new Date('2018-08-31');
        this.periodFormatters = {
            start: (date) => dateTimeToDate(date.toISOString()),
            end: (date) => `End: ${dateTimeToDate(date.toISOString())}`,
        };
    }
}
PeriodSelectorExampleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PeriodSelectorExampleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PeriodSelectorExampleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PeriodSelectorExampleComponent, selector: "bb-period-selector-example-ui", ngImport: i0, template: "<bb-period-selector-ui\n  periodSize=\"month\"\n  [periodStart]=\"startDate\"\n  [periodEnd]=\"endDate\"\n  [periodFormatters]=\"periodFormatters\"\n></bb-period-selector-ui>\n", components: [{ type: i1.PeriodSelectorComponent, selector: "bb-period-selector-ui", inputs: ["periodStart", "periodEnd", "periodFormatters", "period"], outputs: ["periodChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: PeriodSelectorExampleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-period-selector-example-ui',
                    templateUrl: './period-selector.example.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyaW9kLXNlbGVjdG9yLmV4YW1wbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvcGVyaW9kLXNlbGVjdG9yL2V4YW1wbGVzL3BlcmlvZC1zZWxlY3Rvci5leGFtcGxlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL3BlcmlvZC1zZWxlY3Rvci9leGFtcGxlcy9wZXJpb2Qtc2VsZWN0b3IuZXhhbXBsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFJMUMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxXQUFtQixFQUFFLEVBQUUsQ0FDN0MsV0FBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFNakMsTUFBTSxPQUFPLDhCQUE4QjtJQUozQztRQUtFLGNBQVMsR0FBRyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNuQyxZQUFPLEdBQUcsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFakMscUJBQWdCLEdBQXFCO1lBQ25DLEtBQUssRUFBRSxDQUFDLElBQVUsRUFBRSxFQUFFLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN6RCxHQUFHLEVBQUUsQ0FBQyxJQUFVLEVBQUUsRUFBRSxDQUFDLFFBQVEsY0FBYyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFO1NBQ2xFLENBQUM7S0FDSDs7NEhBUlksOEJBQThCO2dIQUE5Qiw4QkFBOEIscUVDWDNDLGtMQU1BOzRGREthLDhCQUE4QjtrQkFKMUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsK0JBQStCO29CQUN6QyxXQUFXLEVBQUUsMENBQTBDO2lCQUN4RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLy8gUGxlYXNlIHJlcGxhY2UgcmVsYXRpdmUgcGF0aCBpbXBvcnRzIGUuZy4gJy4uLyonIHdpdGggJ0BiYWNrYmFzZS91aS1hbmcnLlxuaW1wb3J0IHsgUGVyaW9kRm9ybWF0dGVycyB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvcGVyaW9kLXNlbGVjdG9yJztcblxuY29uc3QgZGF0ZVRpbWVUb0RhdGUgPSAoaXNvRGF0ZVRpbWU6IHN0cmluZykgPT5cbiAgaXNvRGF0ZVRpbWUucmVwbGFjZSgvVC4rLywgJycpO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1wZXJpb2Qtc2VsZWN0b3ItZXhhbXBsZS11aScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wZXJpb2Qtc2VsZWN0b3IuZXhhbXBsZS5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFBlcmlvZFNlbGVjdG9yRXhhbXBsZUNvbXBvbmVudCB7XG4gIHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKCcyMDE4LTA4LTAxJyk7XG4gIGVuZERhdGUgPSBuZXcgRGF0ZSgnMjAxOC0wOC0zMScpO1xuXG4gIHBlcmlvZEZvcm1hdHRlcnM6IFBlcmlvZEZvcm1hdHRlcnMgPSB7XG4gICAgc3RhcnQ6IChkYXRlOiBEYXRlKSA9PiBkYXRlVGltZVRvRGF0ZShkYXRlLnRvSVNPU3RyaW5nKCkpLFxuICAgIGVuZDogKGRhdGU6IERhdGUpID0+IGBFbmQ6ICR7ZGF0ZVRpbWVUb0RhdGUoZGF0ZS50b0lTT1N0cmluZygpKX1gLFxuICB9O1xufVxuIiwiPGJiLXBlcmlvZC1zZWxlY3Rvci11aVxuICBwZXJpb2RTaXplPVwibW9udGhcIlxuICBbcGVyaW9kU3RhcnRdPVwic3RhcnREYXRlXCJcbiAgW3BlcmlvZEVuZF09XCJlbmREYXRlXCJcbiAgW3BlcmlvZEZvcm1hdHRlcnNdPVwicGVyaW9kRm9ybWF0dGVyc1wiXG4+PC9iYi1wZXJpb2Qtc2VsZWN0b3ItdWk+XG4iXX0=