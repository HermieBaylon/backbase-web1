import { __decorate } from "tslib";
import { Component, ViewChild } from '@angular/core';
import { FormControl, Validators } from '@angular/forms';
import { DefaultPaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import { Subject, BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/services";
import * as i2 from "@backbase/ui-ang/account-selector";
import * as i3 from "@backbase/ui-ang/input-validation-message";
import * as i4 from "@angular/common";
import * as i5 from "@angular/forms";
import * as i6 from "@backbase/ui-ang/button";
let AccountSelectorShowcaseComponent = class AccountSelectorShowcaseComponent {
    constructor(domAttributesService) {
        this.domAttributesService = domAttributesService;
        this.items = [
            {
                id: '1',
                name: 'Mrs J. Smith',
                balance: 102.1,
                number: 'GB29NWBK60161331926819',
                currency: 'EUR',
                favorite: true,
                status: 'inactive',
                bankBranchCode: '01788902',
            },
            {
                id: '2',
                name: 'Mr J. Simposon',
                balance: 131230.1,
                number: 'GB29NWBK60161331926819',
                currency: 'EUR',
                favorite: false,
                type: 'accounts',
                bankBranchCode: '01788902',
            },
            {
                id: '3',
                name: 'Eddie',
                balance: 133,
                number: 'GB29NWBK60161331926819',
                currency: 'USD',
                favorite: false,
                type: 'accounts',
                status: 'closed',
                bankBranchCode: '01788902',
            },
            {
                id: '4',
                name: 'Gerald Carr',
                balance: 400,
                number: 'GB94BARC10201530093459',
                currency: 'USD',
                favorite: false,
                type: 'accounts',
                status: 'inactive',
                bankBranchCode: '01788902',
            },
            {
                id: '5',
                name: 'Jenny Hawkins',
                balance: 500,
                number: 'GB33BUKB20201555555555',
                currency: 'USD',
                favorite: false,
                type: 'accounts',
                status: 'closed',
                bankBranchCode: '01788902',
            },
            {
                id: '6',
                name: 'Bob Sanders',
                balance: 300,
                number: 'GB29NWBK60161331926819',
                currency: 'USD',
                favorite: false,
                type: 'accounts',
                status: 'closed',
                bankBranchCode: '01788902',
            },
            {
                id: '7',
                name: 'Ashley Lowe',
                balance: 900,
                number: 'GB94BARC10201530093459',
                currency: 'USD',
                favorite: false,
                type: 'accounts',
                status: 'inactive',
                bankBranchCode: '01788902',
            },
            {
                id: '8',
                name: 'George Mason',
                balance: 250,
                number: 'GB33BUKB20201555555555',
                currency: 'USD',
                favorite: false,
                type: 'accounts',
                status: 'active',
                bankBranchCode: '01788902',
            },
            {
                id: '9',
                name: 'Wesley Harper',
                balance: 350,
                number: 'GB94BARC10201530093459',
                currency: 'USD',
                favorite: false,
                type: 'accounts',
                status: 'active',
                bankBranchCode: '01788902',
            },
            {
                id: '10',
                name: 'Kristin Frazier',
                balance: 550,
                number: 'GB33BUKB20201555555555',
                currency: 'USD',
                favorite: false,
                type: 'accounts',
                status: 'closed',
                bankBranchCode: '01788902',
            },
        ];
        this.typeahead = new Subject();
        this.typeaheadSearchTerm = '';
        this.typeaheadItems$ = new BehaviorSubject([...this.items]);
        this.accountSelectors = [
            {
                labelId: this.domAttributesService.generateId(),
                heading: 'Single select',
                placeholder: 'Select Account Single (doesn`t close on select)',
                dataRole: 'account-selector-single-select',
                multiple: false,
                items: [...this.items],
                selectedItems: undefined,
                showCurrencySymbol: true,
                eventTriggered: undefined,
                eventState: undefined,
                position: 'auto',
                closeOnSelect: false,
                productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                change: (self, item) => {
                    self.selectedItem = item;
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: (self, searchQ) => {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: (self, event) => {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                },
                scrollToEnd: (self, event) => {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
            },
            {
                labelId: this.domAttributesService.generateId(),
                heading: 'Single select with notFoundText',
                placeholder: 'Select Account Single',
                dataRole: 'account-selector-single-select-no-text-found',
                multiple: false,
                items: [...this.items],
                selectedItems: undefined,
                eventTriggered: undefined,
                eventState: undefined,
                showCurrencySymbol: true,
                position: 'bottom',
                productNumberFormat: DefaultPaymentCardNumberFormat,
                notFoundText: 'Nothing found custom text',
                markFirst: true,
                invalid: true,
                closeOnSelect: true,
                change: (self, item) => {
                    self.selectedItem = item;
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: (self, searchQ) => {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: (self, event) => {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                },
                scrollToEnd: (self, event) => {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
            },
            {
                labelId: this.domAttributesService.generateId(),
                heading: 'Single select with disabled attr',
                placeholder: 'Select Account Single',
                dataRole: 'account-selector-single-select-disabled',
                multiple: false,
                items: [...this.items],
                selectedItems: undefined,
                showCurrencySymbol: true,
                eventTriggered: undefined,
                eventState: undefined,
                position: 'auto',
                productNumberFormat: { length: 18, maskRange: [0, 0], segments: 4 },
                disabled: true,
                change: (self, item) => {
                    self.selectedItem = item;
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: (self, searchQ) => {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: (self, event) => {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                },
                scrollToEnd: (self, event) => {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
            },
            {
                labelId: this.domAttributesService.generateId(),
                heading: 'Multiple select',
                placeholder: 'Select Multiple Accounts',
                dataRole: 'account-selector-multi-select',
                multiple: true,
                items: [...this.items],
                selectedItems: undefined,
                eventTriggered: undefined,
                eventState: undefined,
                showCurrencySymbol: true,
                position: 'auto',
                closeOnSelect: false,
                productNumberFormat: { length: 18, maskRange: [0, 0], segments: 4 },
                change: (self, item) => {
                    self.selectedItem = item;
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: (self, searchQ) => {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: (self, event) => {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                },
                scrollToEnd: (self, event) => {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
            },
            {
                labelId: this.domAttributesService.generateId(),
                heading: 'Dropdown position top select',
                placeholder: 'Select Account Single Dropdown Position',
                dataRole: 'account-selector-single-select-position-top',
                multiple: false,
                items: [...this.items],
                selectedItems: undefined,
                eventTriggered: undefined,
                eventState: undefined,
                showCurrencySymbol: true,
                position: 'top',
                closeOnSelect: true,
                productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                change: (self, item) => {
                    self.selectedItem = item;
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: (self, searchQ) => {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: (self, event) => {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                },
                scrollToEnd: (self, event) => {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
            },
            {
                labelId: this.domAttributesService.generateId(),
                heading: 'Single select with Currency Code',
                placeholder: 'Select Account Single (doesn`t close on select)',
                dataRole: 'account-selector-single-select',
                multiple: false,
                items: [...this.items],
                selectedItems: undefined,
                showCurrencySymbol: false,
                eventTriggered: undefined,
                eventState: undefined,
                position: 'auto',
                closeOnSelect: true,
                productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                change: (self, item) => {
                    self.selectedItem = item;
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: (self, searchQ) => {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: (self, event) => {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                },
                scrollToEnd: (self, event) => {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
            },
            {
                labelId: this.domAttributesService.generateId(),
                heading: 'Single select with Bank Branch Code display',
                placeholder: 'Select Account',
                dataRole: 'account-selector-single-select',
                multiple: false,
                items: [...this.items],
                selectedItems: undefined,
                showCurrencySymbol: false,
                eventTriggered: undefined,
                showBankBranchCode: true,
                eventState: undefined,
                position: 'auto',
                closeOnSelect: true,
                productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                change: (self, item) => {
                    self.selectedItem = item;
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: (self, searchQ) => {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: (self, event) => {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                },
                scrollToEnd: (self, event) => {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
            },
        ];
        this.accountSelectorValidation = {
            labelId: this.domAttributesService.generateId(),
            heading: 'Single select with required validation',
            placeholder: 'Select Account Single (doesn`t close on select)',
            dataRole: 'account-selector-required-validation',
            multiple: false,
            items: [...this.items],
            selectedItems: new FormControl(undefined, Validators.required),
            eventTriggered: undefined,
            eventState: undefined,
            position: 'auto',
            closeOnSelect: false,
            invalid: false,
            required: true,
            showError: false,
            productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
            change: (self, item) => {
                self.selectedItems.setValue(Object.assign({}, item));
                self.eventTriggered = '$change';
                self.eventState = item;
            },
            search: (self, searchQ) => {
                self.eventTriggered = '$search';
                self.eventState = searchQ;
            },
            clearSearch: (self, event) => {
                self.eventTriggered = '$clearSearch';
                self.eventState = event;
            },
            scrollToEnd: (self, event) => {
                self.eventTriggered = '$scrollToEnd';
                self.eventState = event;
            },
            submit: (self) => {
                if (!self.selectedItems.value || self.selectedItems.value.length === 0) {
                    self.showError = true;
                    return;
                }
                self.showError = false;
            },
            reset: (self) => {
                self.selectedItems.reset();
                self.showError = false;
                this.accountSelectorWithValidation.resetAccountSelectorModel();
            },
            onBlur: (self) => {
                self.selectedItems.markAsTouched();
            },
        };
        this.accountSelectorTypeAhead = {
            labelId: this.domAttributesService.generateId(),
            heading: 'Single select with typeahead',
            placeholder: 'Select Account',
            dataRole: 'account-selector-single-select',
            multiple: false,
            selectedItems: undefined,
            showCurrencySymbol: false,
            eventTriggered: undefined,
            showBankBranchCode: true,
            eventState: undefined,
            position: 'bottom',
            editableSearchTerm: true,
            clearSearchOnAdd: false,
            closeOnSelect: true,
            typeahead: this.typeahead,
            typeToSearchText: 'This search uses typeahead',
            minTermLength: 0,
            productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
            change: (self, item) => {
                self.selectedItem = item;
                self.eventTriggered = '$change';
                self.eventState = item;
            },
            search: (self, searchQ) => {
                self.eventTriggered = '$search';
                self.eventState = searchQ;
            },
            clearSearch: (self, event) => {
                self.eventTriggered = '$clearSearch';
                self.eventState = event;
                this.typeahead.next('');
            },
            scrollToEnd: (self, event) => {
                self.eventTriggered = '$scrollToEnd';
                self.eventState = event;
            },
        };
        this.typeahead.subscribe((term) => {
            this.typeaheadSearchTerm = term || '';
            const filteredItems = this.items.filter((item) => item.name.toLowerCase().includes(this.typeaheadSearchTerm.toLowerCase()));
            this.typeaheadItems$.next(filteredItems);
        });
    }
    groupByItems(item) {
        return item.favorite;
    }
    searchFunc(term, item) {
        const SEARCHED_FIELDS = ['number', 'balance'];
        return SEARCHED_FIELDS.some((field) => item[field].toString().includes(term));
    }
};
AccountSelectorShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountSelectorShowcaseComponent, deps: [{ token: i1.DomAttributesService }], target: i0.ɵɵFactoryTarget.Component });
AccountSelectorShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountSelectorShowcaseComponent, selector: "bb-account-selector-ui-showcase", viewQueries: [{ propertyName: "accountSelectorWithValidation", first: true, predicate: ["accountSelectorWithValidation"], descendants: true }], ngImport: i0, template: "<ng-container *ngFor=\"let accountSelector of accountSelectors\">\n  <div class=\"bb-block bb-block--xl\">\n    <h4 [id]=\"accountSelector.labelId\">{{ accountSelector.heading }}</h4>\n    <bb-account-selector-ui\n      [disableScrollEnd]=\"false\"\n      [items]=\"accountSelector.items\"\n      [multiple]=\"accountSelector.multiple\"\n      (change)=\"accountSelector.change(accountSelector, $event)\"\n      (clearSearch)=\"accountSelector.clearSearch(accountSelector, $event)\"\n      [selectedItems]=\"accountSelector.selectedItems\"\n      (scrollToEnd)=\"accountSelector.scrollToEnd(accountSelector, $event)\"\n      (search)=\"accountSelector.search(accountSelector, $event)\"\n      [closeOnSelect]=\"accountSelector.closeOnSelect\"\n      [showCurrencySymbol]=\"accountSelector.showCurrencySymbol\"\n      [dropdownPosition]=\"accountSelector.position\"\n      [groupByFn]=\"groupByItems\"\n      [placeholder]=\"accountSelector.placeholder\"\n      [disabled]=\"accountSelector.disabled\"\n      [notFoundText]=\"accountSelector.notFoundText\"\n      [productNumberFormat]=\"accountSelector.productNumberFormat\"\n      [highlight]=\"false\"\n      [aria-labelledby]=\"accountSelector.labelId\"\n      [aria-describedby]=\"accountSelector.errorMessageId\"\n      [aria-invalid]=\"accountSelector.invalid\"\n      [attr.data-role]=\"accountSelector.dataRole\"\n      [showBankBranchCode]=\"accountSelector.showBankBranchCode\"\n      [typeahead]=\"accountSelector.typeahead\"\n      [minTermLength]=\"accountSelector.minTermLength\"\n      [typeToSearchText]=\"accountSelector.typeToSearchText\"\n    >\n    </bb-account-selector-ui>\n    <p [id]=\"accountSelector.errorMessageId\">{{ accountSelector.errorMessage }}</p>\n  </div>\n</ng-container>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Showcase with custom search through 'number' and 'balance' fields (small size)</h4>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <bb-account-selector-ui\n        [searchFunc]=\"searchFunc\"\n        [disableScrollEnd]=\"false\"\n        [items]=\"accountSelectors[0].items\"\n        [multiple]=\"accountSelectors[0].multiple\"\n        (change)=\"accountSelectors[0].change(accountSelectors[0], $event)\"\n        (clearSearch)=\"accountSelectors[0].clearSearch(accountSelectors[0], $event)\"\n        [selectedItems]=\"accountSelectors[0].selectedItems\"\n        (scrollToEnd)=\"accountSelectors[0].scrollToEnd(accountSelectors[0], $event)\"\n        (search)=\"accountSelectors[0].search(accountSelectors[0], $event)\"\n        [closeOnSelect]=\"!accountSelectors[0].multiple\"\n        [dropdownPosition]=\"accountSelectors[0].position\"\n        [groupByFn]=\"groupByItems\"\n        [placeholder]=\"accountSelectors[0].placeholder\"\n        [productNumberFormat]=\"accountSelectors[0].productNumberFormat\"\n        [highlight]=\"false\"\n        [aria-labelledby]=\"accountSelectors[0].labelId\"\n        size=\"sm\"\n      >\n      </bb-account-selector-ui>\n    </div>\n    <div class=\"col-md-6\">\n      <bb-account-selector-ui\n        [searchFunc]=\"searchFunc\"\n        [disableScrollEnd]=\"false\"\n        [items]=\"accountSelectors[0].items\"\n        [multiple]=\"accountSelectors[0].multiple\"\n        (change)=\"accountSelectors[0].change(accountSelectors[0], $event)\"\n        (clearSearch)=\"accountSelectors[0].clearSearch(accountSelectors[0], $event)\"\n        [selectedItems]=\"accountSelectors[0].selectedItems\"\n        (scrollToEnd)=\"accountSelectors[0].scrollToEnd(accountSelectors[0], $event)\"\n        (search)=\"accountSelectors[0].search(accountSelectors[0], $event)\"\n        [closeOnSelect]=\"!accountSelectors[0].multiple\"\n        [dropdownPosition]=\"accountSelectors[0].position\"\n        [groupByFn]=\"groupByItems\"\n        [placeholder]=\"accountSelectors[0].placeholder\"\n        [productNumberFormat]=\"accountSelectors[0].productNumberFormat\"\n        [highlight]=\"false\"\n        [aria-labelledby]=\"accountSelectors[0].labelId\"\n        size=\"sm\"\n      >\n      </bb-account-selector-ui>\n    </div>\n  </div>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Account selector without groupBy function</h4>\n  <bb-account-selector-ui\n    [disableScrollEnd]=\"false\"\n    [items]=\"accountSelectors[0].items\"\n    [multiple]=\"accountSelectors[0].multiple\"\n    (change)=\"accountSelectors[0].change(accountSelectors[0], $event)\"\n    (clearSearch)=\"accountSelectors[0].clearSearch(accountSelectors[0], $event)\"\n    [selectedItems]=\"accountSelectors[0].selectedItems\"\n    (scrollToEnd)=\"accountSelectors[0].scrollToEnd(accountSelectors[0], $event)\"\n    (search)=\"accountSelectors[0].search(accountSelectors[0], $event)\"\n    [closeOnSelect]=\"accountSelectors[0].closeOnSelect\"\n    [dropdownPosition]=\"accountSelectors[0].position\"\n    [placeholder]=\"accountSelectors[0].placeholder\"\n    [disabled]=\"false\"\n    [productNumberFormat]=\"accountSelectors[0].productNumberFormat\"\n    [highlight]=\"false\"\n    data-role=\"account-selector-without-groupBy\"\n    [aria-labelledby]=\"accountSelectorValidation.labelId\"\n    [aria-describedby]=\"'accountSelectorValidationerrorMessageId'\"\n    [aria-invalid]=\"accountSelectorValidation.invalid\"\n  >\n  </bb-account-selector-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4 [id]=\"accountSelectorValidation.labelId\">{{ accountSelectorValidation.heading }}</h4>\n  <form action=\"\" (ngSubmit)=\"accountSelectorValidation.submit(accountSelectorValidation)\">\n    <bb-account-selector-ui\n      #accountSelectorWithValidation\n      [disableScrollEnd]=\"false\"\n      [items]=\"accountSelectorValidation.items\"\n      [multiple]=\"accountSelectorValidation.multiple\"\n      (change)=\"accountSelectorValidation.change(accountSelectorValidation, $event)\"\n      (clearSearch)=\"accountSelectorValidation.clearSearch(accountSelectorValidation, $event)\"\n      [selectedItems]=\"accountSelectorValidation.selectedItems.value\"\n      (scrollToEnd)=\"accountSelectorValidation.scrollToEnd(accountSelectorValidation, $event)\"\n      (search)=\"accountSelectorValidation.search(accountSelectorValidation, $event)\"\n      [closeOnSelect]=\"accountSelectorValidation.closeOnSelect\"\n      [dropdownPosition]=\"accountSelectorValidation.position\"\n      [groupByFn]=\"groupByItems\"\n      [placeholder]=\"accountSelectorValidation.placeholder\"\n      [disabled]=\"false\"\n      [productNumberFormat]=\"accountSelectorValidation.productNumberFormat\"\n      [highlight]=\"false\"\n      (blur)=\"accountSelectorValidation.onBlur(accountSelectorValidation)\"\n      [required]=\"accountSelectorValidation.required\"\n      [showError]=\"accountSelectorValidation.showError\"\n      [attr.data-role]=\"accountSelectorValidation.dataRole\"\n      [aria-labelledby]=\"accountSelectorValidation.labelId\"\n      [aria-describedby]=\"'accountSelectorValidationerrorMessageId'\"\n      [aria-invalid]=\"accountSelectorValidation.invalid\"\n    >\n    </bb-account-selector-ui>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"accountSelectorValidation.showError || accountSelectorValidation.selectedItems?.touched\"\n    >\n      <span\n        *ngIf=\"accountSelectorValidation.selectedItems?.errors?.required\"\n        data-role=\"account-selector-required-validation-message\"\n      >\n        Account is required.\n      </span>\n    </bb-input-validation-message-ui>\n    <div class=\"text-right\">\n      <button\n        type=\"submit\"\n        data-role=\"account-selector-required-validation-submit\"\n        bbButton\n        class=\"m-2 btn-primary btn-sm btn\"\n        color=\"primary\"\n      >\n        Submit\n      </button>\n      <button\n        (click)=\"accountSelectorValidation.reset(accountSelectorValidation)\"\n        data-role=\"account-selector-required-validation-reset\"\n        bbButton\n        class=\"m-2 btn-secondary btn-sm btn\"\n        color=\"primary\"\n      >\n        Reset\n      </button>\n    </div>\n  </form>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4 [id]=\"accountSelectorValidation.labelId\">\n    {{ accountSelectorTypeAhead.heading }} - TypeaheadSearchTerm: {{ typeaheadSearchTerm }}\n  </h4>\n  <bb-account-selector-ui\n    #accountSelectorWithValidation\n    [disableScrollEnd]=\"false\"\n    [items]=\"typeaheadItems$ | async\"\n    [multiple]=\"accountSelectorTypeAhead.multiple\"\n    (change)=\"accountSelectorTypeAhead.change(accountSelectorTypeAhead, $event)\"\n    (clearSearch)=\"accountSelectorTypeAhead.clearSearch(accountSelectorTypeAhead, $event)\"\n    (scrollToEnd)=\"accountSelectorTypeAhead.scrollToEnd(accountSelectorTypeAhead, $event)\"\n    (search)=\"accountSelectorTypeAhead.search(accountSelectorTypeAhead, $event)\"\n    [closeOnSelect]=\"accountSelectorTypeAhead.closeOnSelect\"\n    [dropdownPosition]=\"accountSelectorTypeAhead.position\"\n    [groupByFn]=\"groupByItems\"\n    [placeholder]=\"accountSelectorTypeAhead.placeholder\"\n    [disabled]=\"false\"\n    [productNumberFormat]=\"accountSelectorTypeAhead.productNumberFormat\"\n    [highlight]=\"false\"\n    [attr.data-role]=\"accountSelectorTypeAhead.dataRole\"\n    [aria-labelledby]=\"accountSelectorTypeAhead.labelId\"\n    [aria-describedby]=\"'accountSelectorTypeAheaderrorMessageId'\"\n    [typeahead]=\"accountSelectorTypeAhead.typeahead\"\n    [minTermLength]=\"accountSelectorTypeAhead.minTermLength\"\n    [typeToSearchText]=\"accountSelectorTypeAhead.typeToSearchText\"\n  >\n  </bb-account-selector-ui>\n</div>\n", components: [{ type: i2.AccountSelectorComponent, selector: "bb-account-selector-ui", inputs: ["items", "disabled", "notFoundText", "showError", "productNumberFormat", "selectedItems", "multiple", "closeOnSelect", "searchable", "clearable", "placeholder", "loading", "dropdownPosition", "disableScrollEnd", "highlight", "filterItems", "markFirst", "internalFiltering", "virtualScroll", "required", "typeahead", "minTermLength", "typeToSearchText", "aria-describedby", "aria-labelledby", "aria-invalid", "searchFunc", "showCurrencySymbol", "showBankBranchCode", "groupByFn", "groupValueFn", "size", "compareItemsWith"], outputs: ["search", "clearSearch", "scroll", "scrollToEnd", "remove", "change", "filterChange", "focus", "blur"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i4.AsyncPipe } });
AccountSelectorShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], AccountSelectorShowcaseComponent);
export { AccountSelectorShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountSelectorShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-selector-ui-showcase',
                    templateUrl: './account-selector-showcase.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.DomAttributesService }]; }, propDecorators: { accountSelectorWithValidation: [{
                type: ViewChild,
                args: ['accountSelectorWithValidation']
            }] } });
//# sourceMappingURL=data:application/json;base64,