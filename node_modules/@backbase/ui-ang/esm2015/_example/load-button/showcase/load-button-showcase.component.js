import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/load-button";
import * as i2 from "@backbase/ui-ang/icon";
let LoadButtonShowcaseComponent = class LoadButtonShowcaseComponent {
    constructor() {
        this.showLoadingIndicator = false;
        this.isButtonLoading = false;
        this.isLoadMore = [false, false, false];
        this.loadMoreParams = [{ from: 0 }, { from: 0 }, { from: 0 }];
        this.localDisabled = false;
    }
    onLoadButtonPress() {
        if (this.isButtonLoading) {
            return;
        }
        this.isButtonLoading = true;
        setTimeout(() => {
            this.isButtonLoading = false;
        }, 1500);
    }
    setLoadingParams(params) {
        this.isLoadMore[0] = true;
        this.loadMoreParams[0] = params;
        window.setTimeout(() => {
            this.isLoadMore[0] = false;
        }, 1500);
    }
    setLoadingParamsWithIcon(params) {
        this.isLoadMore[1] = true;
        this.loadMoreParams[1] = params;
        window.setTimeout(() => {
            this.isLoadMore[1] = false;
        }, 1500);
    }
    setLoadingParamsOnlyIcon(params) {
        this.isLoadMore[2] = true;
        this.loadMoreParams[2] = params;
        window.setTimeout(() => {
            this.isLoadMore[2] = false;
        }, 1500);
    }
};
LoadButtonShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoadButtonShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
LoadButtonShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoadButtonShowcaseComponent, selector: "bb-load-button-ui-showcase", ngImport: i0, template: "<div class=\"bb-toolbar\">\n  <div class=\"text-center\">\n    <bb-load-button-ui\n      color=\"primary\"\n      [isLoading]=\"isLoadMore[0]\"\n      [size]=\"8\"\n      [from]=\"loadMoreParams[0]?.from\"\n      [totalCount]=\"48\"\n      (paramChange)=\"setLoadingParams($event)\"\n      class=\"m-3\"\n      [disabled]=\"localDisabled\"\n    >\n      Load more\n    </bb-load-button-ui>\n    <p class=\"mt-3\">Counter (max 5): {{ loadMoreParams[0]?.from }}</p>\n    <button (click)=\"localDisabled = !localDisabled\">disable load button</button>\n  </div>\n  <div class=\"text-center\">\n    <bb-load-button-ui\n      class=\"m-3\"\n      color=\"primary\"\n      [isLoading]=\"isLoadMore[1]\"\n      [size]=\"8\"\n      [from]=\"loadMoreParams[1]?.from\"\n      [totalCount]=\"48\"\n      (paramChange)=\"setLoadingParamsWithIcon($event)\"\n    >\n      <span>Download file</span>\n      <bb-icon-ui name=\"download\" size=\"lg\" cropped></bb-icon-ui>\n    </bb-load-button-ui>\n    <p class=\"mt-3\">Counter (max 5): {{ loadMoreParams[1]?.from }}</p>\n  </div>\n  <div class=\"text-center\">\n    <bb-load-button-ui\n      class=\"m-3\"\n      color=\"primary\"\n      [isLoading]=\"isLoadMore[2]\"\n      [size]=\"8\"\n      [from]=\"loadMoreParams[2]?.from\"\n      [totalCount]=\"48\"\n      (paramChange)=\"setLoadingParamsOnlyIcon($event)\"\n      [circle]=\"true\"\n    >\n      <bb-icon-ui name=\"search\" size=\"lg\"></bb-icon-ui>\n    </bb-load-button-ui>\n    <p class=\"mt-3\">Counter (max 5): {{ loadMoreParams[2]?.from }}</p>\n  </div>\n</div>\n", components: [{ type: i1.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i2.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }] });
LoadButtonShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], LoadButtonShowcaseComponent);
export { LoadButtonShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: LoadButtonShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-load-button-ui-showcase',
                    templateUrl: './load-button-showcase.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZC1idXR0b24tc2hvd2Nhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvbG9hZC1idXR0b24vc2hvd2Nhc2UvbG9hZC1idXR0b24tc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvbG9hZC1idXR0b24vc2hvd2Nhc2UvbG9hZC1idXR0b24tc2hvd2Nhc2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7O0lBU3hDLDJCQUEyQixTQUEzQiwyQkFBMkI7O1FBQ3RDLHlCQUFvQixHQUFHLEtBQUssQ0FBQztRQUM3QixvQkFBZSxHQUFHLEtBQUssQ0FBQztRQUN4QixlQUFVLEdBQUcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ25DLG1CQUFjLEdBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzlELGtCQUFhLEdBQUcsS0FBSyxDQUFDO0tBb0N2QjtJQWxDQyxpQkFBaUI7UUFDZixJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDeEIsT0FBTztTQUNSO1FBRUQsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7UUFDNUIsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO1FBQy9CLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxNQUFXO1FBQzFCLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ2hDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQzdCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRCx3QkFBd0IsQ0FBQyxNQUFXO1FBQ2xDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ2hDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQzdCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNYLENBQUM7SUFFRCx3QkFBd0IsQ0FBQyxNQUFXO1FBQ2xDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQzFCLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1FBQ2hDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBQzdCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNYLENBQUM7Q0FDRixDQUFBO3lIQXpDWSwyQkFBMkI7NkdBQTNCLDJCQUEyQixrRUNWeEMsNmhEQWdEQTtBRHRDYSwyQkFBMkI7SUFIdkMsWUFBWSxDQUFDO1FBQ1osY0FBYyxFQUFFLElBQUk7S0FDckIsQ0FBQztHQUNXLDJCQUEyQixDQXlDdkM7U0F6Q1ksMkJBQTJCOzRGQUEzQiwyQkFBMkI7a0JBUHZDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsV0FBVyxFQUFFLHVDQUF1QztpQkFDckQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhY2tiYXNlRG9jcyB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvdXRpbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWxvYWQtYnV0dG9uLXVpLXNob3djYXNlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2xvYWQtYnV0dG9uLXNob3djYXNlLmNvbXBvbmVudC5odG1sJyxcbn0pXG5AQmFja2Jhc2VEb2NzKHtcbiAgaXNUaGVtZTJTdGFibGU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIExvYWRCdXR0b25TaG93Y2FzZUNvbXBvbmVudCB7XG4gIHNob3dMb2FkaW5nSW5kaWNhdG9yID0gZmFsc2U7XG4gIGlzQnV0dG9uTG9hZGluZyA9IGZhbHNlO1xuICBpc0xvYWRNb3JlID0gW2ZhbHNlLCBmYWxzZSwgZmFsc2VdO1xuICBsb2FkTW9yZVBhcmFtczogYW55ID0gW3sgZnJvbTogMCB9LCB7IGZyb206IDAgfSwgeyBmcm9tOiAwIH1dO1xuICBsb2NhbERpc2FibGVkID0gZmFsc2U7XG5cbiAgb25Mb2FkQnV0dG9uUHJlc3MoKSB7XG4gICAgaWYgKHRoaXMuaXNCdXR0b25Mb2FkaW5nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5pc0J1dHRvbkxvYWRpbmcgPSB0cnVlO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5pc0J1dHRvbkxvYWRpbmcgPSBmYWxzZTtcbiAgICB9LCAxNTAwKTtcbiAgfVxuXG4gIHNldExvYWRpbmdQYXJhbXMocGFyYW1zOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLmlzTG9hZE1vcmVbMF0gPSB0cnVlO1xuICAgIHRoaXMubG9hZE1vcmVQYXJhbXNbMF0gPSBwYXJhbXM7XG4gICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5pc0xvYWRNb3JlWzBdID0gZmFsc2U7XG4gICAgfSwgMTUwMCk7XG4gIH1cblxuICBzZXRMb2FkaW5nUGFyYW1zV2l0aEljb24ocGFyYW1zOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLmlzTG9hZE1vcmVbMV0gPSB0cnVlO1xuICAgIHRoaXMubG9hZE1vcmVQYXJhbXNbMV0gPSBwYXJhbXM7XG4gICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5pc0xvYWRNb3JlWzFdID0gZmFsc2U7XG4gICAgfSwgMTUwMCk7XG4gIH1cblxuICBzZXRMb2FkaW5nUGFyYW1zT25seUljb24ocGFyYW1zOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLmlzTG9hZE1vcmVbMl0gPSB0cnVlO1xuICAgIHRoaXMubG9hZE1vcmVQYXJhbXNbMl0gPSBwYXJhbXM7XG4gICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5pc0xvYWRNb3JlWzJdID0gZmFsc2U7XG4gICAgfSwgMTUwMCk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi10b29sYmFyXCI+XG4gIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlclwiPlxuICAgIDxiYi1sb2FkLWJ1dHRvbi11aVxuICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgIFtpc0xvYWRpbmddPVwiaXNMb2FkTW9yZVswXVwiXG4gICAgICBbc2l6ZV09XCI4XCJcbiAgICAgIFtmcm9tXT1cImxvYWRNb3JlUGFyYW1zWzBdPy5mcm9tXCJcbiAgICAgIFt0b3RhbENvdW50XT1cIjQ4XCJcbiAgICAgIChwYXJhbUNoYW5nZSk9XCJzZXRMb2FkaW5nUGFyYW1zKCRldmVudClcIlxuICAgICAgY2xhc3M9XCJtLTNcIlxuICAgICAgW2Rpc2FibGVkXT1cImxvY2FsRGlzYWJsZWRcIlxuICAgID5cbiAgICAgIExvYWQgbW9yZVxuICAgIDwvYmItbG9hZC1idXR0b24tdWk+XG4gICAgPHAgY2xhc3M9XCJtdC0zXCI+Q291bnRlciAobWF4IDUpOiB7eyBsb2FkTW9yZVBhcmFtc1swXT8uZnJvbSB9fTwvcD5cbiAgICA8YnV0dG9uIChjbGljayk9XCJsb2NhbERpc2FibGVkID0gIWxvY2FsRGlzYWJsZWRcIj5kaXNhYmxlIGxvYWQgYnV0dG9uPC9idXR0b24+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXJcIj5cbiAgICA8YmItbG9hZC1idXR0b24tdWlcbiAgICAgIGNsYXNzPVwibS0zXCJcbiAgICAgIGNvbG9yPVwicHJpbWFyeVwiXG4gICAgICBbaXNMb2FkaW5nXT1cImlzTG9hZE1vcmVbMV1cIlxuICAgICAgW3NpemVdPVwiOFwiXG4gICAgICBbZnJvbV09XCJsb2FkTW9yZVBhcmFtc1sxXT8uZnJvbVwiXG4gICAgICBbdG90YWxDb3VudF09XCI0OFwiXG4gICAgICAocGFyYW1DaGFuZ2UpPVwic2V0TG9hZGluZ1BhcmFtc1dpdGhJY29uKCRldmVudClcIlxuICAgID5cbiAgICAgIDxzcGFuPkRvd25sb2FkIGZpbGU8L3NwYW4+XG4gICAgICA8YmItaWNvbi11aSBuYW1lPVwiZG93bmxvYWRcIiBzaXplPVwibGdcIiBjcm9wcGVkPjwvYmItaWNvbi11aT5cbiAgICA8L2JiLWxvYWQtYnV0dG9uLXVpPlxuICAgIDxwIGNsYXNzPVwibXQtM1wiPkNvdW50ZXIgKG1heCA1KToge3sgbG9hZE1vcmVQYXJhbXNbMV0/LmZyb20gfX08L3A+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXJcIj5cbiAgICA8YmItbG9hZC1idXR0b24tdWlcbiAgICAgIGNsYXNzPVwibS0zXCJcbiAgICAgIGNvbG9yPVwicHJpbWFyeVwiXG4gICAgICBbaXNMb2FkaW5nXT1cImlzTG9hZE1vcmVbMl1cIlxuICAgICAgW3NpemVdPVwiOFwiXG4gICAgICBbZnJvbV09XCJsb2FkTW9yZVBhcmFtc1syXT8uZnJvbVwiXG4gICAgICBbdG90YWxDb3VudF09XCI0OFwiXG4gICAgICAocGFyYW1DaGFuZ2UpPVwic2V0TG9hZGluZ1BhcmFtc09ubHlJY29uKCRldmVudClcIlxuICAgICAgW2NpcmNsZV09XCJ0cnVlXCJcbiAgICA+XG4gICAgICA8YmItaWNvbi11aSBuYW1lPVwic2VhcmNoXCIgc2l6ZT1cImxnXCI+PC9iYi1pY29uLXVpPlxuICAgIDwvYmItbG9hZC1idXR0b24tdWk+XG4gICAgPHAgY2xhc3M9XCJtdC0zXCI+Q291bnRlciAobWF4IDUpOiB7eyBsb2FkTW9yZVBhcmFtc1syXT8uZnJvbSB9fTwvcD5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==