import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/amount-input";
let AmountInputShowcaseComponent = class AmountInputShowcaseComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.test = 'egy';
        this.vForm = this.formBuilder.group({
            amount: [''],
            amount2: [''],
            amount3: [''],
        });
    }
    isFieldValid(fieldName) {
        var _a;
        const control = (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.get(fieldName);
        return control && (control.valid || control.untouched);
    }
};
AmountInputShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AmountInputShowcaseComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
AmountInputShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AmountInputShowcaseComponent, selector: "bb-amount-input-ui-showcase", ngImport: i0, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"vForm\">\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            formControlName=\"amount\"\n            label=\"Amount\"\n            [id]=\"'bb-amount-input'\"\n            [currency]=\"'USD'\"\n            wrapperClasses=\"bb-amount-input__field--large\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount with auto decimals\"\n            formControlName=\"amount2\"\n            [id]=\"'bb-amount-input2'\"\n            [currency]=\"'EUR'\"\n            wrapperClasses=\"bb-amount-input__field--large\"\n            [autoDecimal]=\"true\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount with regular size\"\n            formControlName=\"amount3\"\n            [id]=\"'bb-amount-input3'\"\n            [currency]=\"'EUR'\"\n            [autoDecimal]=\"true\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount without mapping currency\"\n            formControlName=\"amount3\"\n            [id]=\"'bb-amount-input4'\"\n            [mapCurrency]=\"false\"\n            [currency]=\"'EUR'\"\n            [autoDecimal]=\"true\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount with ARIA described-by\"\n            formControlName=\"amount3\"\n            [id]=\"'bb-amount-input5'\"\n            [mapCurrency]=\"false\"\n            [currency]=\"'EUR'\"\n            [autoDecimal]=\"true\"\n            aria-describedby=\"describe-me-please\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n          <span class=\"sr-only\" id=\"describe-me-please\">Describing the field</span>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount with ARIA described-by and without currency\"\n            formControlName=\"amount3\"\n            [id]=\"'bb-amount-input6'\"\n            [mapCurrency]=\"false\"\n            [autoDecimal]=\"true\"\n            aria-describedby=\"describe-me-too\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n          <span class=\"sr-only\" id=\"describe-me-too\">I am the field description</span>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n", components: [{ type: i2.AmountInputComponent, selector: "bb-amount-input-ui", inputs: ["placeholder", "maxLength", "wrapperClasses", "mapCurrency", "currency", "autoDecimal"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
AmountInputShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], AmountInputShowcaseComponent);
export { AmountInputShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AmountInputShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-amount-input-ui-showcase',
                    templateUrl: './amount-input-showcase.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1vdW50LWlucHV0LXNob3djYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL2Ftb3VudC1pbnB1dC9zaG93Y2FzZS9hbW91bnQtaW5wdXQtc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvYW1vdW50LWlucHV0L3Nob3djYXNlL2Ftb3VudC1pbnB1dC1zaG93Y2FzZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7SUFTeEMsNEJBQTRCLFNBQTVCLDRCQUE0QjtJQUd2QyxZQUE2QixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUZyRCxTQUFJLEdBQUcsS0FBSyxDQUFDO1FBR1gsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztZQUNsQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDWixPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDYixPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7U0FDZCxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsWUFBWSxDQUFDLFNBQWlCOztRQUM1QixNQUFNLE9BQU8sR0FBRyxNQUFBLElBQUksQ0FBQyxLQUFLLDBDQUFFLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUUzQyxPQUFPLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FDRixDQUFBOzBIQWhCWSw0QkFBNEI7OEdBQTVCLDRCQUE0QixtRUNYekMsOHFHQTZGQTtBRGxGYSw0QkFBNEI7SUFIeEMsWUFBWSxDQUFDO1FBQ1osY0FBYyxFQUFFLElBQUk7S0FDckIsQ0FBQztHQUNXLDRCQUE0QixDQWdCeEM7U0FoQlksNEJBQTRCOzRGQUE1Qiw0QkFBNEI7a0JBUHhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDZCQUE2QjtvQkFDdkMsV0FBVyxFQUFFLHdDQUF3QztpQkFDdEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBCYWNrYmFzZURvY3MgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL3V0aWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1hbW91bnQtaW5wdXQtdWktc2hvd2Nhc2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vYW1vdW50LWlucHV0LXNob3djYXNlLmNvbXBvbmVudC5odG1sJyxcbn0pXG5AQmFja2Jhc2VEb2NzKHtcbiAgaXNUaGVtZTJTdGFibGU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIEFtb3VudElucHV0U2hvd2Nhc2VDb21wb25lbnQge1xuICB0ZXN0ID0gJ2VneSc7XG4gIHZGb3JtOiBGb3JtR3JvdXAgfCB1bmRlZmluZWQ7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZm9ybUJ1aWxkZXI6IEZvcm1CdWlsZGVyKSB7XG4gICAgdGhpcy52Rm9ybSA9IHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAoe1xuICAgICAgYW1vdW50OiBbJyddLFxuICAgICAgYW1vdW50MjogWycnXSxcbiAgICAgIGFtb3VudDM6IFsnJ10sXG4gICAgfSk7XG4gIH1cblxuICBpc0ZpZWxkVmFsaWQoZmllbGROYW1lOiBzdHJpbmcpIHtcbiAgICBjb25zdCBjb250cm9sID0gdGhpcy52Rm9ybT8uZ2V0KGZpZWxkTmFtZSk7XG5cbiAgICByZXR1cm4gY29udHJvbCAmJiAoY29udHJvbC52YWxpZCB8fCBjb250cm9sLnVudG91Y2hlZCk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgPGRpdiBjbGFzcz1cImNvbC1tZC02XCI+XG4gICAgPGZvcm0gW2Zvcm1Hcm91cF09XCJ2Rm9ybVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1tZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1tZFwiPlxuICAgICAgICAgIDxiYi1hbW91bnQtaW5wdXQtdWlcbiAgICAgICAgICAgIGZvcm1Db250cm9sTmFtZT1cImFtb3VudFwiXG4gICAgICAgICAgICBsYWJlbD1cIkFtb3VudFwiXG4gICAgICAgICAgICBbaWRdPVwiJ2JiLWFtb3VudC1pbnB1dCdcIlxuICAgICAgICAgICAgW2N1cnJlbmN5XT1cIidVU0QnXCJcbiAgICAgICAgICAgIHdyYXBwZXJDbGFzc2VzPVwiYmItYW1vdW50LWlucHV0X19maWVsZC0tbGFyZ2VcIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCIwLjAwXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgPC9iYi1hbW91bnQtaW5wdXQtdWk+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLW1kXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJiYi1mb3JtLWZpZWxkIGJiLWZvcm0tZmllbGQtLW1kXCI+XG4gICAgICAgICAgPGJiLWFtb3VudC1pbnB1dC11aVxuICAgICAgICAgICAgbGFiZWw9XCJBbW91bnQgd2l0aCBhdXRvIGRlY2ltYWxzXCJcbiAgICAgICAgICAgIGZvcm1Db250cm9sTmFtZT1cImFtb3VudDJcIlxuICAgICAgICAgICAgW2lkXT1cIidiYi1hbW91bnQtaW5wdXQyJ1wiXG4gICAgICAgICAgICBbY3VycmVuY3ldPVwiJ0VVUidcIlxuICAgICAgICAgICAgd3JhcHBlckNsYXNzZXM9XCJiYi1hbW91bnQtaW5wdXRfX2ZpZWxkLS1sYXJnZVwiXG4gICAgICAgICAgICBbYXV0b0RlY2ltYWxdPVwidHJ1ZVwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIjAuMDBcIlxuICAgICAgICAgID5cbiAgICAgICAgICA8L2JiLWFtb3VudC1pbnB1dC11aT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbWRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJiLWZvcm0tZmllbGQgYmItZm9ybS1maWVsZC0tbWRcIj5cbiAgICAgICAgICA8YmItYW1vdW50LWlucHV0LXVpXG4gICAgICAgICAgICBsYWJlbD1cIkFtb3VudCB3aXRoIHJlZ3VsYXIgc2l6ZVwiXG4gICAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJhbW91bnQzXCJcbiAgICAgICAgICAgIFtpZF09XCInYmItYW1vdW50LWlucHV0MydcIlxuICAgICAgICAgICAgW2N1cnJlbmN5XT1cIidFVVInXCJcbiAgICAgICAgICAgIFthdXRvRGVjaW1hbF09XCJ0cnVlXCJcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiMC4wMFwiXG4gICAgICAgICAgPlxuICAgICAgICAgIDwvYmItYW1vdW50LWlucHV0LXVpPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1tZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1tZFwiPlxuICAgICAgICAgIDxiYi1hbW91bnQtaW5wdXQtdWlcbiAgICAgICAgICAgIGxhYmVsPVwiQW1vdW50IHdpdGhvdXQgbWFwcGluZyBjdXJyZW5jeVwiXG4gICAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJhbW91bnQzXCJcbiAgICAgICAgICAgIFtpZF09XCInYmItYW1vdW50LWlucHV0NCdcIlxuICAgICAgICAgICAgW21hcEN1cnJlbmN5XT1cImZhbHNlXCJcbiAgICAgICAgICAgIFtjdXJyZW5jeV09XCInRVVSJ1wiXG4gICAgICAgICAgICBbYXV0b0RlY2ltYWxdPVwidHJ1ZVwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIjAuMDBcIlxuICAgICAgICAgID5cbiAgICAgICAgICA8L2JiLWFtb3VudC1pbnB1dC11aT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1tZFwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1tZFwiPlxuICAgICAgICAgIDxiYi1hbW91bnQtaW5wdXQtdWlcbiAgICAgICAgICAgIGxhYmVsPVwiQW1vdW50IHdpdGggQVJJQSBkZXNjcmliZWQtYnlcIlxuICAgICAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwiYW1vdW50M1wiXG4gICAgICAgICAgICBbaWRdPVwiJ2JiLWFtb3VudC1pbnB1dDUnXCJcbiAgICAgICAgICAgIFttYXBDdXJyZW5jeV09XCJmYWxzZVwiXG4gICAgICAgICAgICBbY3VycmVuY3ldPVwiJ0VVUidcIlxuICAgICAgICAgICAgW2F1dG9EZWNpbWFsXT1cInRydWVcIlxuICAgICAgICAgICAgYXJpYS1kZXNjcmliZWRieT1cImRlc2NyaWJlLW1lLXBsZWFzZVwiXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIjAuMDBcIlxuICAgICAgICAgID5cbiAgICAgICAgICA8L2JiLWFtb3VudC1pbnB1dC11aT5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cInNyLW9ubHlcIiBpZD1cImRlc2NyaWJlLW1lLXBsZWFzZVwiPkRlc2NyaWJpbmcgdGhlIGZpZWxkPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLW1kXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJiYi1mb3JtLWZpZWxkIGJiLWZvcm0tZmllbGQtLW1kXCI+XG4gICAgICAgICAgPGJiLWFtb3VudC1pbnB1dC11aVxuICAgICAgICAgICAgbGFiZWw9XCJBbW91bnQgd2l0aCBBUklBIGRlc2NyaWJlZC1ieSBhbmQgd2l0aG91dCBjdXJyZW5jeVwiXG4gICAgICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJhbW91bnQzXCJcbiAgICAgICAgICAgIFtpZF09XCInYmItYW1vdW50LWlucHV0NidcIlxuICAgICAgICAgICAgW21hcEN1cnJlbmN5XT1cImZhbHNlXCJcbiAgICAgICAgICAgIFthdXRvRGVjaW1hbF09XCJ0cnVlXCJcbiAgICAgICAgICAgIGFyaWEtZGVzY3JpYmVkYnk9XCJkZXNjcmliZS1tZS10b29cIlxuICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCIwLjAwXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgPC9iYi1hbW91bnQtaW5wdXQtdWk+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJzci1vbmx5XCIgaWQ9XCJkZXNjcmliZS1tZS10b29cIj5JIGFtIHRoZSBmaWVsZCBkZXNjcmlwdGlvbjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Zvcm0+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=