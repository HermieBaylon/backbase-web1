import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/badge";
import * as i2 from "@angular/common";
let BadgeShowcaseComponent = class BadgeShowcaseComponent {
    constructor() {
        this.badgeShowCaseSetup = [
            {
                type: 'warning',
                text: {
                    single: 'A',
                    double: 'AA',
                },
            },
            {
                type: 'danger',
                text: {
                    single: 'A',
                    double: 'AA',
                },
            },
            {
                type: 'info',
                text: {
                    single: 'A',
                    double: 'AA',
                },
            },
            {
                type: 'success',
                text: {
                    single: 'A',
                    double: 'AA',
                },
            },
            {
                type: 'secondary',
                text: {
                    single: 'A',
                    double: 'AA',
                },
            },
        ];
    }
};
BadgeShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BadgeShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BadgeShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeShowcaseComponent, selector: "bb-badge-ui-showcase", ngImport: i0, template: "<div class=\"mb-4\">\n  <h4>Single character</h4>\n  <div *ngFor=\"let badgeType of badgeShowCaseSetup\" class=\"d-inline-block mb-4 mr-3\">\n    <bb-badge-ui\n      color=\"{{ badgeType.type }}\"\n      text=\"{{ badgeType.text.single }}\"\n      [attr.data-role]=\"'badge-' + badgeType.type + '-single'\"\n    >\n    </bb-badge-ui>\n  </div>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Double character</h4>\n  <div *ngFor=\"let badgeType of badgeShowCaseSetup\" class=\"d-inline-block mb-4 mr-3\">\n    <bb-badge-ui\n      color=\"{{ badgeType.type }}\"\n      text=\"{{ badgeType.text.double }}\"\n      [attr.data-role]=\"'badge-' + badgeType.type + '-double'\"\n    >\n    </bb-badge-ui>\n  </div>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Text</h4>\n  <div *ngFor=\"let badgeType of badgeShowCaseSetup\" class=\"d-inline-block mb-4 mr-3\">\n    <bb-badge-ui\n      color=\"{{ badgeType.type }}\"\n      text=\"{{ badgeType.type | titlecase }}\"\n      [attr.data-role]=\"'badge-' + badgeType.type + '-text'\"\n    >\n    </bb-badge-ui>\n  </div>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Abbreviation</h4>\n  <div *ngFor=\"let badgeType of badgeShowCaseSetup\" class=\"d-inline-block mb-4 mr-3\">\n    <bb-badge-ui\n      color=\"{{ badgeType.type }}\"\n      text=\"{{ badgeType.type | titlecase }}\"\n      ariaLabel=\"{{ badgeType.type }}\"\n      [abbr]=\"true\"\n      [attr.data-role]=\"'badge-' + badgeType.type + '-abbr'\"\n    >\n    </bb-badge-ui>\n  </div>\n</div>\n", components: [{ type: i1.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "titlecase": i2.TitleCasePipe } });
BadgeShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], BadgeShowcaseComponent);
export { BadgeShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BadgeShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-badge-ui-showcase',
                    templateUrl: './badge-showcase.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2Utc2hvd2Nhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvYmFkZ2Uvc2hvd2Nhc2UvYmFkZ2Utc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvYmFkZ2Uvc2hvd2Nhc2UvYmFkZ2Utc2hvd2Nhc2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7O0lBU3hDLHNCQUFzQixTQUF0QixzQkFBc0I7O1FBQzFCLHVCQUFrQixHQUFHO1lBQzFCO2dCQUNFLElBQUksRUFBRSxTQUFTO2dCQUNmLElBQUksRUFBRTtvQkFDSixNQUFNLEVBQUUsR0FBRztvQkFDWCxNQUFNLEVBQUUsSUFBSTtpQkFDYjthQUNGO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFO29CQUNKLE1BQU0sRUFBRSxHQUFHO29CQUNYLE1BQU0sRUFBRSxJQUFJO2lCQUNiO2FBQ0Y7WUFDRDtnQkFDRSxJQUFJLEVBQUUsTUFBTTtnQkFDWixJQUFJLEVBQUU7b0JBQ0osTUFBTSxFQUFFLEdBQUc7b0JBQ1gsTUFBTSxFQUFFLElBQUk7aUJBQ2I7YUFDRjtZQUNEO2dCQUNFLElBQUksRUFBRSxTQUFTO2dCQUNmLElBQUksRUFBRTtvQkFDSixNQUFNLEVBQUUsR0FBRztvQkFDWCxNQUFNLEVBQUUsSUFBSTtpQkFDYjthQUNGO1lBQ0Q7Z0JBQ0UsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLElBQUksRUFBRTtvQkFDSixNQUFNLEVBQUUsR0FBRztvQkFDWCxNQUFNLEVBQUUsSUFBSTtpQkFDYjthQUNGO1NBQ0YsQ0FBQztLQUNIO0NBQUEsQ0FBQTtvSEF0Q1ksc0JBQXNCO3dHQUF0QixzQkFBc0IsNERDVm5DLG04Q0FpREE7QUR2Q2Esc0JBQXNCO0lBSGxDLFlBQVksQ0FBQztRQUNaLGNBQWMsRUFBRSxJQUFJO0tBQ3JCLENBQUM7R0FDVyxzQkFBc0IsQ0FzQ2xDO1NBdENZLHNCQUFzQjs0RkFBdEIsc0JBQXNCO2tCQVBsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFdBQVcsRUFBRSxpQ0FBaUM7aUJBQy9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYWNrYmFzZURvY3MgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL3V0aWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1iYWRnZS11aS1zaG93Y2FzZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9iYWRnZS1zaG93Y2FzZS5jb21wb25lbnQuaHRtbCcsXG59KVxuQEJhY2tiYXNlRG9jcyh7XG4gIGlzVGhlbWUyU3RhYmxlOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBCYWRnZVNob3djYXNlQ29tcG9uZW50IHtcbiAgcHVibGljIGJhZGdlU2hvd0Nhc2VTZXR1cCA9IFtcbiAgICB7XG4gICAgICB0eXBlOiAnd2FybmluZycsXG4gICAgICB0ZXh0OiB7XG4gICAgICAgIHNpbmdsZTogJ0EnLFxuICAgICAgICBkb3VibGU6ICdBQScsXG4gICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ2RhbmdlcicsXG4gICAgICB0ZXh0OiB7XG4gICAgICAgIHNpbmdsZTogJ0EnLFxuICAgICAgICBkb3VibGU6ICdBQScsXG4gICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgdHlwZTogJ2luZm8nLFxuICAgICAgdGV4dDoge1xuICAgICAgICBzaW5nbGU6ICdBJyxcbiAgICAgICAgZG91YmxlOiAnQUEnLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHR5cGU6ICdzdWNjZXNzJyxcbiAgICAgIHRleHQ6IHtcbiAgICAgICAgc2luZ2xlOiAnQScsXG4gICAgICAgIGRvdWJsZTogJ0FBJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICB7XG4gICAgICB0eXBlOiAnc2Vjb25kYXJ5JyxcbiAgICAgIHRleHQ6IHtcbiAgICAgICAgc2luZ2xlOiAnQScsXG4gICAgICAgIGRvdWJsZTogJ0FBJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgXTtcbn1cbiIsIjxkaXYgY2xhc3M9XCJtYi00XCI+XG4gIDxoND5TaW5nbGUgY2hhcmFjdGVyPC9oND5cbiAgPGRpdiAqbmdGb3I9XCJsZXQgYmFkZ2VUeXBlIG9mIGJhZGdlU2hvd0Nhc2VTZXR1cFwiIGNsYXNzPVwiZC1pbmxpbmUtYmxvY2sgbWItNCBtci0zXCI+XG4gICAgPGJiLWJhZGdlLXVpXG4gICAgICBjb2xvcj1cInt7IGJhZGdlVHlwZS50eXBlIH19XCJcbiAgICAgIHRleHQ9XCJ7eyBiYWRnZVR5cGUudGV4dC5zaW5nbGUgfX1cIlxuICAgICAgW2F0dHIuZGF0YS1yb2xlXT1cIidiYWRnZS0nICsgYmFkZ2VUeXBlLnR5cGUgKyAnLXNpbmdsZSdcIlxuICAgID5cbiAgICA8L2JiLWJhZGdlLXVpPlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwibWItNFwiPlxuICA8aDQ+RG91YmxlIGNoYXJhY3RlcjwvaDQ+XG4gIDxkaXYgKm5nRm9yPVwibGV0IGJhZGdlVHlwZSBvZiBiYWRnZVNob3dDYXNlU2V0dXBcIiBjbGFzcz1cImQtaW5saW5lLWJsb2NrIG1iLTQgbXItM1wiPlxuICAgIDxiYi1iYWRnZS11aVxuICAgICAgY29sb3I9XCJ7eyBiYWRnZVR5cGUudHlwZSB9fVwiXG4gICAgICB0ZXh0PVwie3sgYmFkZ2VUeXBlLnRleHQuZG91YmxlIH19XCJcbiAgICAgIFthdHRyLmRhdGEtcm9sZV09XCInYmFkZ2UtJyArIGJhZGdlVHlwZS50eXBlICsgJy1kb3VibGUnXCJcbiAgICA+XG4gICAgPC9iYi1iYWRnZS11aT5cbiAgPC9kaXY+XG48L2Rpdj5cblxuPGRpdiBjbGFzcz1cIm1iLTRcIj5cbiAgPGg0PlRleHQ8L2g0PlxuICA8ZGl2ICpuZ0Zvcj1cImxldCBiYWRnZVR5cGUgb2YgYmFkZ2VTaG93Q2FzZVNldHVwXCIgY2xhc3M9XCJkLWlubGluZS1ibG9jayBtYi00IG1yLTNcIj5cbiAgICA8YmItYmFkZ2UtdWlcbiAgICAgIGNvbG9yPVwie3sgYmFkZ2VUeXBlLnR5cGUgfX1cIlxuICAgICAgdGV4dD1cInt7IGJhZGdlVHlwZS50eXBlIHwgdGl0bGVjYXNlIH19XCJcbiAgICAgIFthdHRyLmRhdGEtcm9sZV09XCInYmFkZ2UtJyArIGJhZGdlVHlwZS50eXBlICsgJy10ZXh0J1wiXG4gICAgPlxuICAgIDwvYmItYmFkZ2UtdWk+XG4gIDwvZGl2PlxuPC9kaXY+XG5cbjxkaXYgY2xhc3M9XCJtYi00XCI+XG4gIDxoND5BYmJyZXZpYXRpb248L2g0PlxuICA8ZGl2ICpuZ0Zvcj1cImxldCBiYWRnZVR5cGUgb2YgYmFkZ2VTaG93Q2FzZVNldHVwXCIgY2xhc3M9XCJkLWlubGluZS1ibG9jayBtYi00IG1yLTNcIj5cbiAgICA8YmItYmFkZ2UtdWlcbiAgICAgIGNvbG9yPVwie3sgYmFkZ2VUeXBlLnR5cGUgfX1cIlxuICAgICAgdGV4dD1cInt7IGJhZGdlVHlwZS50eXBlIHwgdGl0bGVjYXNlIH19XCJcbiAgICAgIGFyaWFMYWJlbD1cInt7IGJhZGdlVHlwZS50eXBlIH19XCJcbiAgICAgIFthYmJyXT1cInRydWVcIlxuICAgICAgW2F0dHIuZGF0YS1yb2xlXT1cIidiYWRnZS0nICsgYmFkZ2VUeXBlLnR5cGUgKyAnLWFiYnInXCJcbiAgICA+XG4gICAgPC9iYi1iYWRnZS11aT5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==