import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/alert";
import * as i2 from "@backbase/ui-ang/button";
import * as i3 from "@angular/common";
let AlertShowcaseComponent = class AlertShowcaseComponent {
    constructor() {
        this.colorVariants = [
            {
                title: 'Information! Use this alert to introduce information only',
                modifier: 'info',
            },
            {
                title: 'Warning! Use this alert to show warn only',
                modifier: 'warning',
            },
            {
                title: 'Success! Use this alert to show success only',
                modifier: 'success',
            },
            {
                title: 'Error! Use this alert to show error only',
                modifier: 'error',
            },
        ];
        this.dismissibleAlerts = [
            {
                dismissed: false,
            },
            {
                dismissed: false,
            },
        ];
    }
};
AlertShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AlertShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AlertShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AlertShowcaseComponent, selector: "bb-alert-ui-showcase", ngImport: i0, template: "<div class=\"mb-4\">\n  <h4>Default</h4>\n  <bb-alert-ui title=\"Default\" data-role=\"alert-default\"></bb-alert-ui>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Color variants</h4>\n  <bb-alert-ui\n    *ngFor=\"let alert of colorVariants\"\n    [title]=\"alert.title\"\n    [modifier]=\"alert.modifier\"\n    [attr.data-role]=\"'alert-' + alert.modifier\"\n  ></bb-alert-ui>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Multiple lines</h4>\n  <bb-alert-ui\n    title=\"Default\"\n    modifier=\"info\"\n    message=\"Body of a sticky alert.  This alert type is placed above the site header.\"\n    data-role=\"alert-multiple-lines\"\n  ></bb-alert-ui>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Dismissible</h4>\n  <bb-alert-ui\n    *ngIf=\"!dismissibleAlerts[0].dismissed\"\n    title=\"Dismissible alert\"\n    modifier=\"info\"\n    [dismissible]=\"true\"\n    (close)=\"dismissibleAlerts[0].dismissed = true\"\n    data-role=\"alert-dismissible-single-line\"\n  ></bb-alert-ui>\n  <bb-button-ui\n    *ngIf=\"dismissibleAlerts[0].dismissed\"\n    color=\"secondary\"\n    (click)=\"dismissibleAlerts[0].dismissed = false\"\n    data-role=\"alert-dismissible-single-line-restore\"\n    >Restore the alert</bb-button-ui\n  >\n\n  <bb-alert-ui\n    *ngIf=\"!dismissibleAlerts[1].dismissed\"\n    title=\"Dismissible alert\"\n    modifier=\"info\"\n    message=\"With text\"\n    [dismissible]=\"true\"\n    (close)=\"dismissibleAlerts[1].dismissed = true\"\n    data-role=\"alert-dismissible-multi-line\"\n  ></bb-alert-ui>\n  <bb-button-ui\n    *ngIf=\"dismissibleAlerts[1].dismissed\"\n    color=\"secondary\"\n    (click)=\"dismissibleAlerts[1].dismissed = false\"\n    data-role=\"alert-dismissible-multi-line-restore\"\n    >Restore the alert</bb-button-ui\n  >\n</div>\n\n<div class=\"mb-4\">\n  <h4>Custom message content template</h4>\n  <bb-alert-ui\n    *ngFor=\"let alert of colorVariants\"\n    [title]=\"alert.title\"\n    [modifier]=\"alert.modifier\"\n    [attr.data-role]=\"'alert-' + alert.modifier\"\n  >\n    Lorem ipsum dolor sit amet consectetur <a href=\"javascript:void(0);\" class=\"alert-link\">click here</a> adipisicing\n    elit. Dicta, corporis.\n  </bb-alert-ui>\n</div>\n", components: [{ type: i1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i2.ButtonComponent, selector: "bb-button-ui", inputs: ["autofocus", "type", "disabled", "buttonSize", "color", "block"] }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
AlertShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], AlertShowcaseComponent);
export { AlertShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AlertShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-alert-ui-showcase',
                    templateUrl: 'alert-showcase.component.html',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQtc2hvd2Nhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvYWxlcnQvc2hvd2Nhc2UvYWxlcnQtc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvYWxlcnQvc2hvd2Nhc2UvYWxlcnQtc2hvd2Nhc2UuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7OztJQVN4QyxzQkFBc0IsU0FBdEIsc0JBQXNCOztRQUNqQyxrQkFBYSxHQUFHO1lBQ2Q7Z0JBQ0UsS0FBSyxFQUFFLDJEQUEyRDtnQkFDbEUsUUFBUSxFQUFFLE1BQU07YUFDakI7WUFDRDtnQkFDRSxLQUFLLEVBQUUsMkNBQTJDO2dCQUNsRCxRQUFRLEVBQUUsU0FBUzthQUNwQjtZQUNEO2dCQUNFLEtBQUssRUFBRSw4Q0FBOEM7Z0JBQ3JELFFBQVEsRUFBRSxTQUFTO2FBQ3BCO1lBQ0Q7Z0JBQ0UsS0FBSyxFQUFFLDBDQUEwQztnQkFDakQsUUFBUSxFQUFFLE9BQU87YUFDbEI7U0FDRixDQUFDO1FBRUYsc0JBQWlCLEdBQUc7WUFDbEI7Z0JBQ0UsU0FBUyxFQUFFLEtBQUs7YUFDakI7WUFDRDtnQkFDRSxTQUFTLEVBQUUsS0FBSzthQUNqQjtTQUNGLENBQUM7S0FDSDtDQUFBLENBQUE7b0hBNUJZLHNCQUFzQjt3R0FBdEIsc0JBQXNCLDREQ1ZuQyw4b0VBeUVBO0FEL0RhLHNCQUFzQjtJQUhsQyxZQUFZLENBQUM7UUFDWixjQUFjLEVBQUUsSUFBSTtLQUNyQixDQUFDO0dBQ1csc0JBQXNCLENBNEJsQztTQTVCWSxzQkFBc0I7NEZBQXRCLHNCQUFzQjtrQkFQbEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxXQUFXLEVBQUUsK0JBQStCO2lCQUM3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFja2Jhc2VEb2NzIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy91dGlsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItYWxlcnQtdWktc2hvd2Nhc2UnLFxuICB0ZW1wbGF0ZVVybDogJ2FsZXJ0LXNob3djYXNlLmNvbXBvbmVudC5odG1sJyxcbn0pXG5AQmFja2Jhc2VEb2NzKHtcbiAgaXNUaGVtZTJTdGFibGU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIEFsZXJ0U2hvd2Nhc2VDb21wb25lbnQge1xuICBjb2xvclZhcmlhbnRzID0gW1xuICAgIHtcbiAgICAgIHRpdGxlOiAnSW5mb3JtYXRpb24hIFVzZSB0aGlzIGFsZXJ0IHRvIGludHJvZHVjZSBpbmZvcm1hdGlvbiBvbmx5JyxcbiAgICAgIG1vZGlmaWVyOiAnaW5mbycsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ1dhcm5pbmchIFVzZSB0aGlzIGFsZXJ0IHRvIHNob3cgd2FybiBvbmx5JyxcbiAgICAgIG1vZGlmaWVyOiAnd2FybmluZycsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ1N1Y2Nlc3MhIFVzZSB0aGlzIGFsZXJ0IHRvIHNob3cgc3VjY2VzcyBvbmx5JyxcbiAgICAgIG1vZGlmaWVyOiAnc3VjY2VzcycsXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ0Vycm9yISBVc2UgdGhpcyBhbGVydCB0byBzaG93IGVycm9yIG9ubHknLFxuICAgICAgbW9kaWZpZXI6ICdlcnJvcicsXG4gICAgfSxcbiAgXTtcblxuICBkaXNtaXNzaWJsZUFsZXJ0cyA9IFtcbiAgICB7XG4gICAgICBkaXNtaXNzZWQ6IGZhbHNlLFxuICAgIH0sXG4gICAge1xuICAgICAgZGlzbWlzc2VkOiBmYWxzZSxcbiAgICB9LFxuICBdO1xufVxuIiwiPGRpdiBjbGFzcz1cIm1iLTRcIj5cbiAgPGg0PkRlZmF1bHQ8L2g0PlxuICA8YmItYWxlcnQtdWkgdGl0bGU9XCJEZWZhdWx0XCIgZGF0YS1yb2xlPVwiYWxlcnQtZGVmYXVsdFwiPjwvYmItYWxlcnQtdWk+XG48L2Rpdj5cblxuPGRpdiBjbGFzcz1cIm1iLTRcIj5cbiAgPGg0PkNvbG9yIHZhcmlhbnRzPC9oND5cbiAgPGJiLWFsZXJ0LXVpXG4gICAgKm5nRm9yPVwibGV0IGFsZXJ0IG9mIGNvbG9yVmFyaWFudHNcIlxuICAgIFt0aXRsZV09XCJhbGVydC50aXRsZVwiXG4gICAgW21vZGlmaWVyXT1cImFsZXJ0Lm1vZGlmaWVyXCJcbiAgICBbYXR0ci5kYXRhLXJvbGVdPVwiJ2FsZXJ0LScgKyBhbGVydC5tb2RpZmllclwiXG4gID48L2JiLWFsZXJ0LXVpPlxuPC9kaXY+XG5cbjxkaXYgY2xhc3M9XCJtYi00XCI+XG4gIDxoND5NdWx0aXBsZSBsaW5lczwvaDQ+XG4gIDxiYi1hbGVydC11aVxuICAgIHRpdGxlPVwiRGVmYXVsdFwiXG4gICAgbW9kaWZpZXI9XCJpbmZvXCJcbiAgICBtZXNzYWdlPVwiQm9keSBvZiBhIHN0aWNreSBhbGVydC4gIFRoaXMgYWxlcnQgdHlwZSBpcyBwbGFjZWQgYWJvdmUgdGhlIHNpdGUgaGVhZGVyLlwiXG4gICAgZGF0YS1yb2xlPVwiYWxlcnQtbXVsdGlwbGUtbGluZXNcIlxuICA+PC9iYi1hbGVydC11aT5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwibWItNFwiPlxuICA8aDQ+RGlzbWlzc2libGU8L2g0PlxuICA8YmItYWxlcnQtdWlcbiAgICAqbmdJZj1cIiFkaXNtaXNzaWJsZUFsZXJ0c1swXS5kaXNtaXNzZWRcIlxuICAgIHRpdGxlPVwiRGlzbWlzc2libGUgYWxlcnRcIlxuICAgIG1vZGlmaWVyPVwiaW5mb1wiXG4gICAgW2Rpc21pc3NpYmxlXT1cInRydWVcIlxuICAgIChjbG9zZSk9XCJkaXNtaXNzaWJsZUFsZXJ0c1swXS5kaXNtaXNzZWQgPSB0cnVlXCJcbiAgICBkYXRhLXJvbGU9XCJhbGVydC1kaXNtaXNzaWJsZS1zaW5nbGUtbGluZVwiXG4gID48L2JiLWFsZXJ0LXVpPlxuICA8YmItYnV0dG9uLXVpXG4gICAgKm5nSWY9XCJkaXNtaXNzaWJsZUFsZXJ0c1swXS5kaXNtaXNzZWRcIlxuICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAoY2xpY2spPVwiZGlzbWlzc2libGVBbGVydHNbMF0uZGlzbWlzc2VkID0gZmFsc2VcIlxuICAgIGRhdGEtcm9sZT1cImFsZXJ0LWRpc21pc3NpYmxlLXNpbmdsZS1saW5lLXJlc3RvcmVcIlxuICAgID5SZXN0b3JlIHRoZSBhbGVydDwvYmItYnV0dG9uLXVpXG4gID5cblxuICA8YmItYWxlcnQtdWlcbiAgICAqbmdJZj1cIiFkaXNtaXNzaWJsZUFsZXJ0c1sxXS5kaXNtaXNzZWRcIlxuICAgIHRpdGxlPVwiRGlzbWlzc2libGUgYWxlcnRcIlxuICAgIG1vZGlmaWVyPVwiaW5mb1wiXG4gICAgbWVzc2FnZT1cIldpdGggdGV4dFwiXG4gICAgW2Rpc21pc3NpYmxlXT1cInRydWVcIlxuICAgIChjbG9zZSk9XCJkaXNtaXNzaWJsZUFsZXJ0c1sxXS5kaXNtaXNzZWQgPSB0cnVlXCJcbiAgICBkYXRhLXJvbGU9XCJhbGVydC1kaXNtaXNzaWJsZS1tdWx0aS1saW5lXCJcbiAgPjwvYmItYWxlcnQtdWk+XG4gIDxiYi1idXR0b24tdWlcbiAgICAqbmdJZj1cImRpc21pc3NpYmxlQWxlcnRzWzFdLmRpc21pc3NlZFwiXG4gICAgY29sb3I9XCJzZWNvbmRhcnlcIlxuICAgIChjbGljayk9XCJkaXNtaXNzaWJsZUFsZXJ0c1sxXS5kaXNtaXNzZWQgPSBmYWxzZVwiXG4gICAgZGF0YS1yb2xlPVwiYWxlcnQtZGlzbWlzc2libGUtbXVsdGktbGluZS1yZXN0b3JlXCJcbiAgICA+UmVzdG9yZSB0aGUgYWxlcnQ8L2JiLWJ1dHRvbi11aVxuICA+XG48L2Rpdj5cblxuPGRpdiBjbGFzcz1cIm1iLTRcIj5cbiAgPGg0PkN1c3RvbSBtZXNzYWdlIGNvbnRlbnQgdGVtcGxhdGU8L2g0PlxuICA8YmItYWxlcnQtdWlcbiAgICAqbmdGb3I9XCJsZXQgYWxlcnQgb2YgY29sb3JWYXJpYW50c1wiXG4gICAgW3RpdGxlXT1cImFsZXJ0LnRpdGxlXCJcbiAgICBbbW9kaWZpZXJdPVwiYWxlcnQubW9kaWZpZXJcIlxuICAgIFthdHRyLmRhdGEtcm9sZV09XCInYWxlcnQtJyArIGFsZXJ0Lm1vZGlmaWVyXCJcbiAgPlxuICAgIExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0IGNvbnNlY3RldHVyIDxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMCk7XCIgY2xhc3M9XCJhbGVydC1saW5rXCI+Y2xpY2sgaGVyZTwvYT4gYWRpcGlzaWNpbmdcbiAgICBlbGl0LiBEaWN0YSwgY29ycG9yaXMuXG4gIDwvYmItYWxlcnQtdWk+XG48L2Rpdj5cbiJdfQ==