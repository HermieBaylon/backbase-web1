import { __decorate } from "tslib";
import { Component, Inject } from '@angular/core';
import { BackbaseDocs } from '@backbase/ui-ang/util';
import { ACCOUNTS_DISPLAYING_FORMAT, } from '@backbase/ui-ang/account-number-pipe';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@backbase/ui-ang/account-number-pipe";
let AccountNumberPipeShowcaseComponent = class AccountNumberPipeShowcaseComponent {
    constructor(configuration) {
        this.configuration = configuration;
        this.customConfiguration = { segments: [1, 2, 3, 1, 2, 3, 1, 2, 3] };
        this.accounts = [
            {
                description: 'iban',
                typeOrFormat: 'iban',
                number: 'IBAN1234567891234567',
            },
            {
                description: 'bban',
                typeOrFormat: 'bban',
                number: 'BBAN1234567891234567',
            },
            {
                description: 'cardNumber',
                typeOrFormat: 'cardNumber',
                number: 'num1234567891234567',
            },
            {
                description: 'cardNumber (visa provider)',
                typeOrFormat: 'cardNumber',
                number: 'num1234567891234567',
                cardProviderName: 'Visa',
            },
            {
                description: `Custom format [${this.customConfiguration.segments}]`,
                typeOrFormat: this.customConfiguration,
                number: 'num1234567891234567',
            },
        ];
    }
};
AccountNumberPipeShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountNumberPipeShowcaseComponent, deps: [{ token: ACCOUNTS_DISPLAYING_FORMAT }], target: i0.ɵɵFactoryTarget.Component });
AccountNumberPipeShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountNumberPipeShowcaseComponent, selector: "bb-account-number-pipe-ui-showcase", ngImport: i0, template: "<div class=\"bb-block bb-block--lg\">\n  <h2>App configuration</h2>\n  <div>\n    <code>iban: {{ configuration.iban | json }}</code>\n  </div>\n  <div>\n    <code>bban: {{ configuration.bban | json }}</code>\n  </div>\n  <div>\n    <code>cardNumber: {{ configuration.cardNumber | json }}</code>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <ng-container *ngFor=\"let account of accounts\">\n    <h4>{{ account.description }}</h4>\n    <p>{{ account.number | bbAccountNumber: account.typeOrFormat:account.cardProviderName }}</p>\n  </ng-container>\n</div>\n", directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "json": i1.JsonPipe, "bbAccountNumber": i2.AccountNumberPipe } });
AccountNumberPipeShowcaseComponent = __decorate([
    BackbaseDocs({
        isTheme2Stable: true,
    })
], AccountNumberPipeShowcaseComponent);
export { AccountNumberPipeShowcaseComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountNumberPipeShowcaseComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-number-pipe-ui-showcase',
                    templateUrl: './account-number-pipe-showcase.component.html',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [ACCOUNTS_DISPLAYING_FORMAT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC1udW1iZXItcGlwZS1zaG93Y2FzZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9fZXhhbXBsZS9hY2NvdW50LW51bWJlci1waXBlL3Nob3djYXNlL2FjY291bnQtbnVtYmVyLXBpcGUtc2hvd2Nhc2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvYWNjb3VudC1udW1iZXItcGlwZS9zaG93Y2FzZS9hY2NvdW50LW51bWJlci1waXBlLXNob3djYXNlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDckQsT0FBTyxFQUVMLDBCQUEwQixHQUczQixNQUFNLHNDQUFzQyxDQUFDOzs7O0lBU2pDLGtDQUFrQyxTQUFsQyxrQ0FBa0M7SUFxQzdDLFlBQXlELGFBQW9EO1FBQXBELGtCQUFhLEdBQWIsYUFBYSxDQUF1QztRQXBDNUYsd0JBQW1CLEdBQTZCLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDO1FBRTNHLGFBQVEsR0FLRjtZQUNKO2dCQUNFLFdBQVcsRUFBRSxNQUFNO2dCQUNuQixZQUFZLEVBQUUsTUFBTTtnQkFDcEIsTUFBTSxFQUFFLHNCQUFzQjthQUMvQjtZQUNEO2dCQUNFLFdBQVcsRUFBRSxNQUFNO2dCQUNuQixZQUFZLEVBQUUsTUFBTTtnQkFDcEIsTUFBTSxFQUFFLHNCQUFzQjthQUMvQjtZQUNEO2dCQUNFLFdBQVcsRUFBRSxZQUFZO2dCQUN6QixZQUFZLEVBQUUsWUFBWTtnQkFDMUIsTUFBTSxFQUFFLHFCQUFxQjthQUM5QjtZQUNEO2dCQUNFLFdBQVcsRUFBRSw0QkFBNEI7Z0JBQ3pDLFlBQVksRUFBRSxZQUFZO2dCQUMxQixNQUFNLEVBQUUscUJBQXFCO2dCQUM3QixnQkFBZ0IsRUFBRSxNQUFNO2FBQ3pCO1lBQ0Q7Z0JBQ0UsV0FBVyxFQUFFLGtCQUFrQixJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxHQUFHO2dCQUNuRSxZQUFZLEVBQUUsSUFBSSxDQUFDLG1CQUFtQjtnQkFDdEMsTUFBTSxFQUFFLHFCQUFxQjthQUM5QjtTQUNGLENBQUM7SUFFOEcsQ0FBQztDQUNsSCxDQUFBO2dJQXRDWSxrQ0FBa0Msa0JBcUN6QiwwQkFBMEI7b0hBckNuQyxrQ0FBa0MsMEVDaEIvQywrakJBbUJBO0FESGEsa0NBQWtDO0lBSDlDLFlBQVksQ0FBQztRQUNaLGNBQWMsRUFBRSxJQUFJO0tBQ3JCLENBQUM7R0FDVyxrQ0FBa0MsQ0FzQzlDO1NBdENZLGtDQUFrQzs0RkFBbEMsa0NBQWtDO2tCQVA5QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxvQ0FBb0M7b0JBQzlDLFdBQVcsRUFBRSwrQ0FBK0M7aUJBQzdEOzswQkF5Q2MsTUFBTTsyQkFBQywwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFja2Jhc2VEb2NzIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy91dGlsJztcbmltcG9ydCB7XG4gIEFjY291bnROdW1iZXJUeXBlLFxuICBBQ0NPVU5UU19ESVNQTEFZSU5HX0ZPUk1BVCxcbiAgQWNjb3VudHNEaXNwbGF5aW5nRm9ybWF0LFxuICBBY2NvdW50c0Rpc3BsYXlpbmdGb3JtYXRDb25maWd1cmF0aW9uLFxufSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2FjY291bnQtbnVtYmVyLXBpcGUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1hY2NvdW50LW51bWJlci1waXBlLXVpLXNob3djYXNlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FjY291bnQtbnVtYmVyLXBpcGUtc2hvd2Nhc2UuY29tcG9uZW50Lmh0bWwnLFxufSlcbkBCYWNrYmFzZURvY3Moe1xuICBpc1RoZW1lMlN0YWJsZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgQWNjb3VudE51bWJlclBpcGVTaG93Y2FzZUNvbXBvbmVudCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgY3VzdG9tQ29uZmlndXJhdGlvbjogQWNjb3VudHNEaXNwbGF5aW5nRm9ybWF0ID0geyBzZWdtZW50czogWzEsIDIsIDMsIDEsIDIsIDMsIDEsIDIsIDNdIH07XG5cbiAgYWNjb3VudHM6IHtcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgIHR5cGVPckZvcm1hdD86IEFjY291bnROdW1iZXJUeXBlIHwgQWNjb3VudHNEaXNwbGF5aW5nRm9ybWF0O1xuICAgIG51bWJlcjogc3RyaW5nO1xuICAgIGNhcmRQcm92aWRlck5hbWU/OiBzdHJpbmc7XG4gIH1bXSA9IFtcbiAgICB7XG4gICAgICBkZXNjcmlwdGlvbjogJ2liYW4nLFxuICAgICAgdHlwZU9yRm9ybWF0OiAnaWJhbicsXG4gICAgICBudW1iZXI6ICdJQkFOMTIzNDU2Nzg5MTIzNDU2NycsXG4gICAgfSxcbiAgICB7XG4gICAgICBkZXNjcmlwdGlvbjogJ2JiYW4nLFxuICAgICAgdHlwZU9yRm9ybWF0OiAnYmJhbicsXG4gICAgICBudW1iZXI6ICdCQkFOMTIzNDU2Nzg5MTIzNDU2NycsXG4gICAgfSxcbiAgICB7XG4gICAgICBkZXNjcmlwdGlvbjogJ2NhcmROdW1iZXInLFxuICAgICAgdHlwZU9yRm9ybWF0OiAnY2FyZE51bWJlcicsXG4gICAgICBudW1iZXI6ICdudW0xMjM0NTY3ODkxMjM0NTY3JyxcbiAgICB9LFxuICAgIHtcbiAgICAgIGRlc2NyaXB0aW9uOiAnY2FyZE51bWJlciAodmlzYSBwcm92aWRlciknLFxuICAgICAgdHlwZU9yRm9ybWF0OiAnY2FyZE51bWJlcicsXG4gICAgICBudW1iZXI6ICdudW0xMjM0NTY3ODkxMjM0NTY3JyxcbiAgICAgIGNhcmRQcm92aWRlck5hbWU6ICdWaXNhJyxcbiAgICB9LFxuICAgIHtcbiAgICAgIGRlc2NyaXB0aW9uOiBgQ3VzdG9tIGZvcm1hdCBbJHt0aGlzLmN1c3RvbUNvbmZpZ3VyYXRpb24uc2VnbWVudHN9XWAsXG4gICAgICB0eXBlT3JGb3JtYXQ6IHRoaXMuY3VzdG9tQ29uZmlndXJhdGlvbixcbiAgICAgIG51bWJlcjogJ251bTEyMzQ1Njc4OTEyMzQ1NjcnLFxuICAgIH0sXG4gIF07XG5cbiAgY29uc3RydWN0b3IoQEluamVjdChBQ0NPVU5UU19ESVNQTEFZSU5HX0ZPUk1BVCkgcmVhZG9ubHkgY29uZmlndXJhdGlvbjogQWNjb3VudHNEaXNwbGF5aW5nRm9ybWF0Q29uZmlndXJhdGlvbikge31cbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbGdcIj5cbiAgPGgyPkFwcCBjb25maWd1cmF0aW9uPC9oMj5cbiAgPGRpdj5cbiAgICA8Y29kZT5pYmFuOiB7eyBjb25maWd1cmF0aW9uLmliYW4gfCBqc29uIH19PC9jb2RlPlxuICA8L2Rpdj5cbiAgPGRpdj5cbiAgICA8Y29kZT5iYmFuOiB7eyBjb25maWd1cmF0aW9uLmJiYW4gfCBqc29uIH19PC9jb2RlPlxuICA8L2Rpdj5cbiAgPGRpdj5cbiAgICA8Y29kZT5jYXJkTnVtYmVyOiB7eyBjb25maWd1cmF0aW9uLmNhcmROdW1iZXIgfCBqc29uIH19PC9jb2RlPlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLWxnXCI+XG4gIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGFjY291bnQgb2YgYWNjb3VudHNcIj5cbiAgICA8aDQ+e3sgYWNjb3VudC5kZXNjcmlwdGlvbiB9fTwvaDQ+XG4gICAgPHA+e3sgYWNjb3VudC5udW1iZXIgfCBiYkFjY291bnROdW1iZXI6IGFjY291bnQudHlwZU9yRm9ybWF0OmFjY291bnQuY2FyZFByb3ZpZGVyTmFtZSB9fTwvcD5cbiAgPC9uZy1jb250YWluZXI+XG48L2Rpdj5cbiJdfQ==