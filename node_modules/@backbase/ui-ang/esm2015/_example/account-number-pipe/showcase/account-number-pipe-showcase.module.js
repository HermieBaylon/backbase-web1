import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { AccountNumberPipeModule } from '@backbase/ui-ang/account-number-pipe';
import { AccountNumberPipeShowcaseComponent } from './account-number-pipe-showcase.component';
import { ACCOUNTS_DISPLAYING_FORMAT, } from '@backbase/ui-ang/account-number-pipe';
import * as i0 from "@angular/core";
export const accountsDisplayingFormatConfiguration = {
    iban: { segments: 4 },
    bban: { segments: 4 },
    cardNumber: {
        segments: [6, 8, 6],
        cardProviders: {
            visa: { segments: [3, 9, 9] },
        },
    },
};
export class AccountNumberPipeShowcaseModule {
}
AccountNumberPipeShowcaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountNumberPipeShowcaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AccountNumberPipeShowcaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountNumberPipeShowcaseModule, declarations: [AccountNumberPipeShowcaseComponent], imports: [CommonModule, FormsModule, AccountNumberPipeModule] });
AccountNumberPipeShowcaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountNumberPipeShowcaseModule, providers: [{ provide: ACCOUNTS_DISPLAYING_FORMAT, useValue: accountsDisplayingFormatConfiguration }], imports: [[CommonModule, FormsModule, AccountNumberPipeModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AccountNumberPipeShowcaseModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, FormsModule, AccountNumberPipeModule],
                    declarations: [AccountNumberPipeShowcaseComponent],
                    entryComponents: [AccountNumberPipeShowcaseComponent],
                    providers: [{ provide: ACCOUNTS_DISPLAYING_FORMAT, useValue: accountsDisplayingFormatConfiguration }],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC1udW1iZXItcGlwZS1zaG93Y2FzZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VpLWFuZy9fZXhhbXBsZS9hY2NvdW50LW51bWJlci1waXBlL3Nob3djYXNlL2FjY291bnQtbnVtYmVyLXBpcGUtc2hvd2Nhc2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUM5RixPQUFPLEVBQ0wsMEJBQTBCLEdBRTNCLE1BQU0sc0NBQXNDLENBQUM7O0FBRTlDLE1BQU0sQ0FBQyxNQUFNLHFDQUFxQyxHQUEwQztJQUMxRixJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFO0lBQ3JCLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUU7SUFDckIsVUFBVSxFQUFFO1FBQ1YsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbkIsYUFBYSxFQUFFO1lBQ2IsSUFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRTtTQUM5QjtLQUNGO0NBQ0YsQ0FBQztBQVFGLE1BQU0sT0FBTywrQkFBK0I7OzZIQUEvQiwrQkFBK0I7OEhBQS9CLCtCQUErQixpQkFKM0Isa0NBQWtDLGFBRHZDLFlBQVksRUFBRSxXQUFXLEVBQUUsdUJBQXVCOzhIQUtqRCwrQkFBK0IsYUFGL0IsQ0FBQyxFQUFFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxRQUFRLEVBQUUscUNBQXFDLEVBQUUsQ0FBQyxZQUg1RixDQUFDLFlBQVksRUFBRSxXQUFXLEVBQUUsdUJBQXVCLENBQUM7NEZBS2xELCtCQUErQjtrQkFOM0MsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLHVCQUF1QixDQUFDO29CQUM3RCxZQUFZLEVBQUUsQ0FBQyxrQ0FBa0MsQ0FBQztvQkFDbEQsZUFBZSxFQUFFLENBQUMsa0NBQWtDLENBQUM7b0JBQ3JELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLFFBQVEsRUFBRSxxQ0FBcUMsRUFBRSxDQUFDO2lCQUN0RyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IEFjY291bnROdW1iZXJQaXBlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9hY2NvdW50LW51bWJlci1waXBlJztcbmltcG9ydCB7IEFjY291bnROdW1iZXJQaXBlU2hvd2Nhc2VDb21wb25lbnQgfSBmcm9tICcuL2FjY291bnQtbnVtYmVyLXBpcGUtc2hvd2Nhc2UuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIEFDQ09VTlRTX0RJU1BMQVlJTkdfRk9STUFULFxuICBBY2NvdW50c0Rpc3BsYXlpbmdGb3JtYXRDb25maWd1cmF0aW9uLFxufSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2FjY291bnQtbnVtYmVyLXBpcGUnO1xuXG5leHBvcnQgY29uc3QgYWNjb3VudHNEaXNwbGF5aW5nRm9ybWF0Q29uZmlndXJhdGlvbjogQWNjb3VudHNEaXNwbGF5aW5nRm9ybWF0Q29uZmlndXJhdGlvbiA9IHtcbiAgaWJhbjogeyBzZWdtZW50czogNCB9LFxuICBiYmFuOiB7IHNlZ21lbnRzOiA0IH0sXG4gIGNhcmROdW1iZXI6IHtcbiAgICBzZWdtZW50czogWzYsIDgsIDZdLFxuICAgIGNhcmRQcm92aWRlcnM6IHtcbiAgICAgIHZpc2E6IHsgc2VnbWVudHM6IFszLCA5LCA5XSB9LFxuICAgIH0sXG4gIH0sXG59O1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3Jtc01vZHVsZSwgQWNjb3VudE51bWJlclBpcGVNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtBY2NvdW50TnVtYmVyUGlwZVNob3djYXNlQ29tcG9uZW50XSxcbiAgZW50cnlDb21wb25lbnRzOiBbQWNjb3VudE51bWJlclBpcGVTaG93Y2FzZUNvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogQUNDT1VOVFNfRElTUExBWUlOR19GT1JNQVQsIHVzZVZhbHVlOiBhY2NvdW50c0Rpc3BsYXlpbmdGb3JtYXRDb25maWd1cmF0aW9uIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBBY2NvdW50TnVtYmVyUGlwZVNob3djYXNlTW9kdWxlIHt9XG4iXX0=