import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/char-counter";
export class CharCounterExampleComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.vForm = this.formBuilder.group({
            textarea: ['', Validators.maxLength(160)],
        });
    }
}
CharCounterExampleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CharCounterExampleComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
CharCounterExampleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CharCounterExampleComponent, selector: "bb-char-counter-example-ui", ngImport: i0, template: "<form [formGroup]=\"vForm\">\n  <p>\n    <textarea\n      placeholder=\"Enter text...\"\n      formControlName=\"textarea\"\n      maxLength=\"160\"\n      rows=\"4\"\n      #remarksInput\n    >\n    </textarea>\n  </p>\n  <p>\n    <bb-char-counter-ui\n      [element]=\"remarksInput\"\n      [maxLength]=\"remarksInput.maxLength\"\n      [blockTyping]=\"true\"\n    ></bb-char-counter-ui>\n  </p>\n</form>\n", components: [{ type: i2.CharCounterComponent, selector: "bb-char-counter-ui", inputs: ["inputValue", "element", "maxLength", "blockTyping"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CharCounterExampleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-char-counter-example-ui',
                    templateUrl: './char-counter.example.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhci1jb3VudGVyLmV4YW1wbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvX2V4YW1wbGUvY2hhci1jb3VudGVyL2V4YW1wbGVzL2NoYXItY291bnRlci5leGFtcGxlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL19leGFtcGxlL2NoYXItY291bnRlci9leGFtcGxlcy9jaGFyLWNvdW50ZXIuZXhhbXBsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBMEIsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFNcEUsTUFBTSxPQUFPLDJCQUEyQjtJQUt0QyxZQUE2QixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUpyRCxVQUFLLEdBQWMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7WUFDeEMsUUFBUSxFQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDMUMsQ0FBQyxDQUFDO0lBRXFELENBQUM7O3lIQUw5QywyQkFBMkI7NkdBQTNCLDJCQUEyQixrRUNQeEMsMFpBbUJBOzRGRFphLDJCQUEyQjtrQkFKdkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsNEJBQTRCO29CQUN0QyxXQUFXLEVBQUUsdUNBQXVDO2lCQUNyRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItY2hhci1jb3VudGVyLWV4YW1wbGUtdWknLFxuICB0ZW1wbGF0ZVVybDogJy4vY2hhci1jb3VudGVyLmV4YW1wbGUuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBDaGFyQ291bnRlckV4YW1wbGVDb21wb25lbnQge1xuICB2Rm9ybTogRm9ybUdyb3VwID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7XG4gICAgdGV4dGFyZWE6IFsnJywgVmFsaWRhdG9ycy5tYXhMZW5ndGgoMTYwKV0sXG4gIH0pO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZm9ybUJ1aWxkZXI6IEZvcm1CdWlsZGVyKSB7fVxufVxuIiwiPGZvcm0gW2Zvcm1Hcm91cF09XCJ2Rm9ybVwiPlxuICA8cD5cbiAgICA8dGV4dGFyZWFcbiAgICAgIHBsYWNlaG9sZGVyPVwiRW50ZXIgdGV4dC4uLlwiXG4gICAgICBmb3JtQ29udHJvbE5hbWU9XCJ0ZXh0YXJlYVwiXG4gICAgICBtYXhMZW5ndGg9XCIxNjBcIlxuICAgICAgcm93cz1cIjRcIlxuICAgICAgI3JlbWFya3NJbnB1dFxuICAgID5cbiAgICA8L3RleHRhcmVhPlxuICA8L3A+XG4gIDxwPlxuICAgIDxiYi1jaGFyLWNvdW50ZXItdWlcbiAgICAgIFtlbGVtZW50XT1cInJlbWFya3NJbnB1dFwiXG4gICAgICBbbWF4TGVuZ3RoXT1cInJlbWFya3NJbnB1dC5tYXhMZW5ndGhcIlxuICAgICAgW2Jsb2NrVHlwaW5nXT1cInRydWVcIlxuICAgID48L2JiLWNoYXItY291bnRlci11aT5cbiAgPC9wPlxuPC9mb3JtPlxuIl19