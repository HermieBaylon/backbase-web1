import { Inject, Injectable, InjectionToken } from '@angular/core';
import * as i0 from "@angular/core";
export function navigatorFactory() {
    return navigator;
}
export const NAVIGATOR_TOKEN = new InjectionToken('Navigator object');
export class BrowserService {
    // 'any' due to issue https://github.com/angular/angular/issues/15640
    constructor(navigator) {
        this.navigator = navigator;
    }
    browserIsMSIE() {
        return this.navigator.userAgent.indexOf('MSIE') > -1 || this.navigator.userAgent.indexOf('Trident/') > -1;
    }
}
BrowserService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BrowserService, deps: [{ token: NAVIGATOR_TOKEN }], target: i0.ɵɵFactoryTarget.Injectable });
BrowserService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BrowserService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BrowserService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [NAVIGATOR_TOKEN]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvc2VydmljZXMvYnJvd3Nlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFbkUsTUFBTSxVQUFVLGdCQUFnQjtJQUM5QixPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLElBQUksY0FBYyxDQUFZLGtCQUFrQixDQUFDLENBQUM7QUFLakYsTUFBTSxPQUFPLGNBQWM7SUFDekIscUVBQXFFO0lBQ3JFLFlBQXNELFNBQWM7UUFBZCxjQUFTLEdBQVQsU0FBUyxDQUFLO0lBQUcsQ0FBQztJQUV4RSxhQUFhO1FBQ1gsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzVHLENBQUM7OzRHQU5VLGNBQWMsa0JBRUwsZUFBZTtnSEFGeEIsY0FBYyxjQUZiLE1BQU07NEZBRVAsY0FBYztrQkFIMUIsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7OzBCQUdjLE1BQU07MkJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGZ1bmN0aW9uIG5hdmlnYXRvckZhY3RvcnkoKTogTmF2aWdhdG9yIHtcbiAgcmV0dXJuIG5hdmlnYXRvcjtcbn1cblxuZXhwb3J0IGNvbnN0IE5BVklHQVRPUl9UT0tFTiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOYXZpZ2F0b3I+KCdOYXZpZ2F0b3Igb2JqZWN0Jyk7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBCcm93c2VyU2VydmljZSB7XG4gIC8vICdhbnknIGR1ZSB0byBpc3N1ZSBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8xNTY0MFxuICBjb25zdHJ1Y3RvcihASW5qZWN0KE5BVklHQVRPUl9UT0tFTikgcHJpdmF0ZSByZWFkb25seSBuYXZpZ2F0b3I6IGFueSkge31cblxuICBicm93c2VySXNNU0lFKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignTVNJRScpID4gLTEgfHwgdGhpcy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQvJykgPiAtMTtcbiAgfVxufVxuIl19