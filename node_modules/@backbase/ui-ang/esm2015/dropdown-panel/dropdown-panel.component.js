import { ChangeDetectionStrategy, Component, ContentChild, Directive, Output, TemplateRef, ViewChild, } from '@angular/core';
import { NgbDropdown, NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@ng-bootstrap/ng-bootstrap";
import * as i2 from "@angular/common";
export class DropdownMenuDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
DropdownMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownMenuDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
DropdownMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: DropdownMenuDirective, selector: "ng-template[bbDropdownMenu]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownMenuDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbDropdownMenu]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
export class DropdownToggleDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
DropdownToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownToggleDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
DropdownToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: DropdownToggleDirective, selector: "ng-template[bbDropdownToggle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownToggleDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbDropdownToggle]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
/**
 * @name DropdownPanelComponent
 *
 * @description
 * Component incapsulating logic for showing/hiding dropdown.
 */
export class DropdownPanelComponent {
    constructor(config) {
        this.isOpen = new Subject();
        /**
         * Event emitted when dropdown open/close.
         */
        this.open = this.isOpen.asObservable();
        config.autoClose = 'outside';
    }
    changeState(state) {
        this.isOpen.next(state);
    }
    ngAfterContentInit() {
        if (!this.customDropdownToggle) {
            throw new Error('BB Dropdown ui. Toggle content is required.');
        }
        if (!this.customDropdownContent) {
            throw new Error('BB Dropdown ui. Dropdown content is required.');
        }
    }
    closeMenu() {
        if (this.dropdown) {
            this.dropdown.close();
        }
    }
}
DropdownPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownPanelComponent, deps: [{ token: i1.NgbDropdownConfig }], target: i0.ɵɵFactoryTarget.Component });
DropdownPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownPanelComponent, selector: "bb-dropdown-panel-ui", outputs: { open: "open" }, providers: [NgbDropdownConfig], queries: [{ propertyName: "customDropdownContent", first: true, predicate: DropdownMenuDirective, descendants: true, read: TemplateRef, static: true }, { propertyName: "customDropdownToggle", first: true, predicate: DropdownToggleDirective, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: "dropdown", first: true, predicate: NgbDropdown, descendants: true, static: true }], ngImport: i0, template: "<div\n  [attr.data-role]=\"'dropdown-panel'\"\n  class=\"bb-dropdown-panel\"\n  [placement]=\"'bottom'\"\n  (openChange)=\"changeState($event)\"\n  ngbDropdown\n>\n  <div ngbDropdownToggle [attr.data-role]=\"'dropdown-toggle'\" class=\"bb-dropdown-panel__dropdown-toggle\">\n    <ng-container *ngTemplateOutlet=\"customDropdownToggle; context: { isOpen: isOpen | async }\"></ng-container>\n  </div>\n  <div class=\"bb-dropdown-panel__dropdown\" ngbDropdownMenu position=\"top\" [attr.data-role]=\"'dropdown-panel-menu'\">\n    <ng-container *ngTemplateOutlet=\"customDropdownContent\"></ng-container>\n  </div>\n</div>\n", directives: [{ type: i1.NgbDropdown, selector: "[ngbDropdown]", inputs: ["open", "placement", "container", "autoClose", "display", "dropdownClass"], outputs: ["openChange"], exportAs: ["ngbDropdown"] }, { type: i1.NgbDropdownToggle, selector: "[ngbDropdownToggle]" }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i1.NgbDropdownMenu, selector: "[ngbDropdownMenu]" }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownPanelComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-dropdown-panel-ui',
                    templateUrl: './dropdown-panel.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [NgbDropdownConfig],
                }]
        }], ctorParameters: function () { return [{ type: i1.NgbDropdownConfig }]; }, propDecorators: { open: [{
                type: Output
            }], customDropdownContent: [{
                type: ContentChild,
                args: [DropdownMenuDirective, { read: TemplateRef, static: true }]
            }], customDropdownToggle: [{
                type: ContentChild,
                args: [DropdownToggleDirective, { read: TemplateRef, static: true }]
            }], dropdown: [{
                type: ViewChild,
                args: [NgbDropdown, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tcGFuZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvZHJvcGRvd24tcGFuZWwvZHJvcGRvd24tcGFuZWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvZHJvcGRvd24tcGFuZWwvZHJvcGRvd24tcGFuZWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFNBQVMsRUFDVCxNQUFNLEVBQ04sV0FBVyxFQUNYLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDNUUsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQzs7OztBQUczQyxNQUFNLE9BQU8scUJBQXFCO0lBQ2hDLFlBQW1CLFdBQTZCO1FBQTdCLGdCQUFXLEdBQVgsV0FBVyxDQUFrQjtJQUFHLENBQUM7O21IQUR6QyxxQkFBcUI7dUdBQXJCLHFCQUFxQjs0RkFBckIscUJBQXFCO2tCQURqQyxTQUFTO21CQUFDLEVBQUUsUUFBUSxFQUFFLDZCQUE2QixFQUFFOztBQU10RCxNQUFNLE9BQU8sdUJBQXVCO0lBQ2xDLFlBQW1CLFdBQTZCO1FBQTdCLGdCQUFXLEdBQVgsV0FBVyxDQUFrQjtJQUFHLENBQUM7O3FIQUR6Qyx1QkFBdUI7eUdBQXZCLHVCQUF1Qjs0RkFBdkIsdUJBQXVCO2tCQURuQyxTQUFTO21CQUFDLEVBQUUsUUFBUSxFQUFFLCtCQUErQixFQUFFOztBQUt4RDs7Ozs7R0FLRztBQU9ILE1BQU0sT0FBTyxzQkFBc0I7SUFxQmpDLFlBQVksTUFBeUI7UUFwQjVCLFdBQU0sR0FBRyxJQUFJLE9BQU8sRUFBVyxDQUFDO1FBQ3pDOztXQUVHO1FBQ2dCLFNBQUksR0FBd0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQWlCeEUsTUFBTSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7SUFDL0IsQ0FBQztJQUVELFdBQVcsQ0FBQyxLQUFjO1FBQ3hCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRCxrQkFBa0I7UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRTtZQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLDZDQUE2QyxDQUFDLENBQUM7U0FDaEU7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFO1lBQy9CLE1BQU0sSUFBSSxLQUFLLENBQUMsK0NBQStDLENBQUMsQ0FBQztTQUNsRTtJQUNILENBQUM7SUFFRCxTQUFTO1FBQ1AsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDdkI7SUFDSCxDQUFDOztvSEEzQ1Usc0JBQXNCO3dHQUF0QixzQkFBc0IsMEVBRnRCLENBQUMsaUJBQWlCLENBQUMsNkVBV2hCLHFCQUFxQiwyQkFBVSxXQUFXLGtGQU0xQyx1QkFBdUIsMkJBQVUsV0FBVyxxRkFHL0MsV0FBVyw4RENyRHhCLDhtQkFjQTs0RkRxQmEsc0JBQXNCO2tCQU5sQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFdBQVcsRUFBRSxpQ0FBaUM7b0JBQzlDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxTQUFTLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztpQkFDL0I7d0dBTW9CLElBQUk7c0JBQXRCLE1BQU07Z0JBS1AscUJBQXFCO3NCQURwQixZQUFZO3VCQUFDLHFCQUFxQixFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO2dCQU94RSxvQkFBb0I7c0JBRG5CLFlBQVk7dUJBQUMsdUJBQXVCLEVBQUUsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Z0JBSXpELFFBQVE7c0JBRHhCLFNBQVM7dUJBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyQ29udGVudEluaXQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIENvbnRlbnRDaGlsZCxcbiAgRGlyZWN0aXZlLFxuICBPdXRwdXQsXG4gIFRlbXBsYXRlUmVmLFxuICBWaWV3Q2hpbGQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiRHJvcGRvd24sIE5nYkRyb3Bkb3duQ29uZmlnIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICduZy10ZW1wbGF0ZVtiYkRyb3Bkb3duTWVudV0nIH0pXG5leHBvcnQgY2xhc3MgRHJvcGRvd25NZW51RGlyZWN0aXZlIHtcbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+KSB7fVxufVxuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICduZy10ZW1wbGF0ZVtiYkRyb3Bkb3duVG9nZ2xlXScgfSlcbmV4cG9ydCBjbGFzcyBEcm9wZG93blRvZ2dsZURpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pikge31cbn1cblxuLyoqXG4gKiBAbmFtZSBEcm9wZG93blBhbmVsQ29tcG9uZW50XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBDb21wb25lbnQgaW5jYXBzdWxhdGluZyBsb2dpYyBmb3Igc2hvd2luZy9oaWRpbmcgZHJvcGRvd24uXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWRyb3Bkb3duLXBhbmVsLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Ryb3Bkb3duLXBhbmVsLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByb3ZpZGVyczogW05nYkRyb3Bkb3duQ29uZmlnXSxcbn0pXG5leHBvcnQgY2xhc3MgRHJvcGRvd25QYW5lbENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICByZWFkb25seSBpc09wZW4gPSBuZXcgU3ViamVjdDxib29sZWFuPigpO1xuICAvKipcbiAgICogRXZlbnQgZW1pdHRlZCB3aGVuIGRyb3Bkb3duIG9wZW4vY2xvc2UuXG4gICAqL1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgb3BlbjogT2JzZXJ2YWJsZTxib29sZWFuPiA9IHRoaXMuaXNPcGVuLmFzT2JzZXJ2YWJsZSgpO1xuICAvKipcbiAgICogUmVwcmVzZW50cyBkcm9wZG93biBwYW5lbCBtZW51IHRlbXBsYXRlXG4gICAqL1xuICBAQ29udGVudENoaWxkKERyb3Bkb3duTWVudURpcmVjdGl2ZSwgeyByZWFkOiBUZW1wbGF0ZVJlZiwgc3RhdGljOiB0cnVlIH0pXG4gIGN1c3RvbURyb3Bkb3duQ29udGVudDogVGVtcGxhdGVSZWY8YW55PiB8IHVuZGVmaW5lZDtcblxuICAvKipcbiAgICogUmVwcmVzZW50cyBkcm9wZG93biBwYW5lbCB0b2dnbGUgdGVtcGxhdGVcbiAgICovXG4gIEBDb250ZW50Q2hpbGQoRHJvcGRvd25Ub2dnbGVEaXJlY3RpdmUsIHsgcmVhZDogVGVtcGxhdGVSZWYsIHN0YXRpYzogdHJ1ZSB9KVxuICBjdXN0b21Ecm9wZG93blRvZ2dsZTogVGVtcGxhdGVSZWY8YW55PiB8IHVuZGVmaW5lZDtcblxuICBAVmlld0NoaWxkKE5nYkRyb3Bkb3duLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICBwcml2YXRlIHJlYWRvbmx5IGRyb3Bkb3duOiBOZ2JEcm9wZG93biB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3Rvcihjb25maWc6IE5nYkRyb3Bkb3duQ29uZmlnKSB7XG4gICAgY29uZmlnLmF1dG9DbG9zZSA9ICdvdXRzaWRlJztcbiAgfVxuXG4gIGNoYW5nZVN0YXRlKHN0YXRlOiBib29sZWFuKSB7XG4gICAgdGhpcy5pc09wZW4ubmV4dChzdGF0ZSk7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmN1c3RvbURyb3Bkb3duVG9nZ2xlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0JCIERyb3Bkb3duIHVpLiBUb2dnbGUgY29udGVudCBpcyByZXF1aXJlZC4nKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuY3VzdG9tRHJvcGRvd25Db250ZW50KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0JCIERyb3Bkb3duIHVpLiBEcm9wZG93biBjb250ZW50IGlzIHJlcXVpcmVkLicpO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlTWVudSgpIHtcbiAgICBpZiAodGhpcy5kcm9wZG93bikge1xuICAgICAgdGhpcy5kcm9wZG93bi5jbG9zZSgpO1xuICAgIH1cbiAgfVxufVxuIiwiPGRpdlxuICBbYXR0ci5kYXRhLXJvbGVdPVwiJ2Ryb3Bkb3duLXBhbmVsJ1wiXG4gIGNsYXNzPVwiYmItZHJvcGRvd24tcGFuZWxcIlxuICBbcGxhY2VtZW50XT1cIidib3R0b20nXCJcbiAgKG9wZW5DaGFuZ2UpPVwiY2hhbmdlU3RhdGUoJGV2ZW50KVwiXG4gIG5nYkRyb3Bkb3duXG4+XG4gIDxkaXYgbmdiRHJvcGRvd25Ub2dnbGUgW2F0dHIuZGF0YS1yb2xlXT1cIidkcm9wZG93bi10b2dnbGUnXCIgY2xhc3M9XCJiYi1kcm9wZG93bi1wYW5lbF9fZHJvcGRvd24tdG9nZ2xlXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImN1c3RvbURyb3Bkb3duVG9nZ2xlOyBjb250ZXh0OiB7IGlzT3BlbjogaXNPcGVuIHwgYXN5bmMgfVwiPjwvbmctY29udGFpbmVyPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImJiLWRyb3Bkb3duLXBhbmVsX19kcm9wZG93blwiIG5nYkRyb3Bkb3duTWVudSBwb3NpdGlvbj1cInRvcFwiIFthdHRyLmRhdGEtcm9sZV09XCInZHJvcGRvd24tcGFuZWwtbWVudSdcIj5cbiAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiY3VzdG9tRHJvcGRvd25Db250ZW50XCI+PC9uZy1jb250YWluZXI+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=