import { Directive, HostBinding, HostListener, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./table.directive";
export class TableRowDirective {
    constructor(parentTable) {
        this.parentTable = parentTable;
    }
    get selected() {
        return this.parentTable.isSelected(this.bbRow);
    }
    onRowClick() {
        this.parentTable.onRowClick(this.bbRow);
    }
}
TableRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TableRowDirective, deps: [{ token: i1.TableDirective }], target: i0.ɵɵFactoryTarget.Directive });
TableRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: TableRowDirective, selector: "tr[bbRow]", inputs: { bbRow: "bbRow" }, host: { listeners: { "click": "onRowClick()" }, properties: { "class.selected": "this.selected" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TableRowDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tr[bbRow]',
                }]
        }], ctorParameters: function () { return [{ type: i1.TableDirective }]; }, propDecorators: { bbRow: [{
                type: Input
            }], selected: [{
                type: HostBinding,
                args: ['class.selected']
            }], onRowClick: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtcm93LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL3RhYmxlL2RpcmVjdGl2ZXMvdGFibGUtcm93LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFNNUUsTUFBTSxPQUFPLGlCQUFpQjtJQVc1QixZQUE2QixXQUEyQjtRQUEzQixnQkFBVyxHQUFYLFdBQVcsQ0FBZ0I7SUFBRyxDQUFDO0lBTDVELElBQ0ksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFLRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzFDLENBQUM7OytHQWhCVSxpQkFBaUI7bUdBQWpCLGlCQUFpQjs0RkFBakIsaUJBQWlCO2tCQUg3QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO2lCQUN0QjtxR0FLVSxLQUFLO3NCQUFiLEtBQUs7Z0JBR0YsUUFBUTtzQkFEWCxXQUFXO3VCQUFDLGdCQUFnQjtnQkFRN0IsVUFBVTtzQkFEVCxZQUFZO3VCQUFDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYWJsZURpcmVjdGl2ZSB9IGZyb20gJy4vdGFibGUuZGlyZWN0aXZlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAndHJbYmJSb3ddJyxcbn0pXG5leHBvcnQgY2xhc3MgVGFibGVSb3dEaXJlY3RpdmUge1xuICAvKipcbiAgICogVGhlIGRhdGEgb2YgdGhlIHJvdyBlbGVtZW50XG4gICAqL1xuICBASW5wdXQoKSBiYlJvdzogYW55O1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3Muc2VsZWN0ZWQnKVxuICBnZXQgc2VsZWN0ZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMucGFyZW50VGFibGUuaXNTZWxlY3RlZCh0aGlzLmJiUm93KTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgcGFyZW50VGFibGU6IFRhYmxlRGlyZWN0aXZlKSB7fVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgb25Sb3dDbGljaygpIHtcbiAgICB0aGlzLnBhcmVudFRhYmxlLm9uUm93Q2xpY2sodGhpcy5iYlJvdyk7XG4gIH1cbn1cbiJdfQ==