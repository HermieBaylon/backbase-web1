/**
 * Default payment card number format.
 */
export const DefaultPaymentCardNumberFormat = {
    length: 16,
    maskRange: [0, 12],
    segments: 4,
};
/**
 * Lookup object containing payment card number formats for common payment card
 * vendors.
 */
export const PaymentCardNumberVendors = {
    mastercard: {
        length: 16,
        maskRange: [0, 12],
        segments: 4,
    },
    visa: {
        length: 16,
        maskRange: [0, 12],
        segments: 4,
    },
    'visa-debit': {
        length: 16,
        maskRange: [0, 12],
        segments: 4,
    },
    'diners-club': {
        length: 16,
        maskRange: [0, 12],
        segments: 4,
    },
    'american-express': {
        length: 15,
        maskRange: [0, 11],
        segments: [4, 6, 5],
    },
};
/**
 * A feature flag that enables numbers masking synchronization with backend
 * If set FE should not apply any masking and rely on the backend masking behavior
 *
 * @internal
 */
export const SYNCHRONIZE_NUMBERS_MASKING = {
    name: 'SYNCHRONIZE_NUMBERS_MASKING',
    description: 'Enables accounts masking synchronization with backend',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvcGF5bWVudC1jYXJkLW51bWJlci1waXBlL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3QkE7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBNEI7SUFDckUsTUFBTSxFQUFFLEVBQUU7SUFDVixTQUFTLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDO0lBQ2xCLFFBQVEsRUFBRSxDQUFDO0NBQ1osQ0FBQztBQUVGOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFrRDtJQUNyRixVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsRUFBRTtRQUNWLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDbEIsUUFBUSxFQUFFLENBQUM7S0FDWjtJQUNELElBQUksRUFBRTtRQUNKLE1BQU0sRUFBRSxFQUFFO1FBQ1YsU0FBUyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNsQixRQUFRLEVBQUUsQ0FBQztLQUNaO0lBQ0QsWUFBWSxFQUFFO1FBQ1osTUFBTSxFQUFFLEVBQUU7UUFDVixTQUFTLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQ2xCLFFBQVEsRUFBRSxDQUFDO0tBQ1o7SUFDRCxhQUFhLEVBQUU7UUFDYixNQUFNLEVBQUUsRUFBRTtRQUNWLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDbEIsUUFBUSxFQUFFLENBQUM7S0FDWjtJQUNELGtCQUFrQixFQUFFO1FBQ2xCLE1BQU0sRUFBRSxFQUFFO1FBQ1YsU0FBUyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNsQixRQUFRLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUNwQjtDQUNGLENBQUM7QUFFRjs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFxQjtJQUMzRCxJQUFJLEVBQUUsNkJBQTZCO0lBQ25DLFdBQVcsRUFBRSx1REFBdUQ7Q0FDckUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF2YWlsYWJsZUZlYXR1cmUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvZnV0dXJlJztcblxuLyoqXG4gKiBUaGUgY29uZmlndXJhdGlvbiB0aGF0IGRldGVybWluZXMgaG93IGEgcGF5bWVudCBjYXJkIG51bWJlciBzaG91bGQgYmVcbiAqIGZvcm1hdHRlZC5cbiAqXG4gKiBAZGVwcmVjYXRlZCBmcm9tIDYuMC4wXG4gKiB1c2UgQWNjb3VudHNEaXNwbGF5aW5nRm9ybWF0IGluc3RlYWRcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQYXltZW50Q2FyZE51bWJlckZvcm1hdCB7XG4gIC8qKlxuICAgKiBUb3RhbCBsZW5ndGggb2YgdGhlIHBheW1lbnQgY2FyZCBudW1iZXIuXG4gICAqL1xuICBsZW5ndGg6IG51bWJlcjtcbiAgLyoqXG4gICAqIEluZGV4IHJhbmdlIG9mIGNoYXJhY3RlcnMgdGhhdCBzaG91bGQgYmUgbWFza2VkLlxuICAgKi9cbiAgbWFza1JhbmdlOiBbbnVtYmVyLCBudW1iZXJdO1xuICAvKipcbiAgICogVGhlIHNpemUgKG9yIGFycmF5IG9mIHNpemVzKSB0aGUgc2VnbWVudHMgc2hvdWxkIGhhdmUuXG4gICAqL1xuICBzZWdtZW50czogbnVtYmVyIHwgQXJyYXk8bnVtYmVyPjtcbn1cblxuLyoqXG4gKiBEZWZhdWx0IHBheW1lbnQgY2FyZCBudW1iZXIgZm9ybWF0LlxuICovXG5leHBvcnQgY29uc3QgRGVmYXVsdFBheW1lbnRDYXJkTnVtYmVyRm9ybWF0OiBQYXltZW50Q2FyZE51bWJlckZvcm1hdCA9IHtcbiAgbGVuZ3RoOiAxNixcbiAgbWFza1JhbmdlOiBbMCwgMTJdLFxuICBzZWdtZW50czogNCxcbn07XG5cbi8qKlxuICogTG9va3VwIG9iamVjdCBjb250YWluaW5nIHBheW1lbnQgY2FyZCBudW1iZXIgZm9ybWF0cyBmb3IgY29tbW9uIHBheW1lbnQgY2FyZFxuICogdmVuZG9ycy5cbiAqL1xuZXhwb3J0IGNvbnN0IFBheW1lbnRDYXJkTnVtYmVyVmVuZG9yczogeyBbdmVuZG9yOiBzdHJpbmddOiBQYXltZW50Q2FyZE51bWJlckZvcm1hdCB9ID0ge1xuICBtYXN0ZXJjYXJkOiB7XG4gICAgbGVuZ3RoOiAxNixcbiAgICBtYXNrUmFuZ2U6IFswLCAxMl0sXG4gICAgc2VnbWVudHM6IDQsXG4gIH0sXG4gIHZpc2E6IHtcbiAgICBsZW5ndGg6IDE2LFxuICAgIG1hc2tSYW5nZTogWzAsIDEyXSxcbiAgICBzZWdtZW50czogNCxcbiAgfSxcbiAgJ3Zpc2EtZGViaXQnOiB7XG4gICAgbGVuZ3RoOiAxNixcbiAgICBtYXNrUmFuZ2U6IFswLCAxMl0sXG4gICAgc2VnbWVudHM6IDQsXG4gIH0sXG4gICdkaW5lcnMtY2x1Yic6IHtcbiAgICBsZW5ndGg6IDE2LFxuICAgIG1hc2tSYW5nZTogWzAsIDEyXSxcbiAgICBzZWdtZW50czogNCxcbiAgfSxcbiAgJ2FtZXJpY2FuLWV4cHJlc3MnOiB7XG4gICAgbGVuZ3RoOiAxNSxcbiAgICBtYXNrUmFuZ2U6IFswLCAxMV0sXG4gICAgc2VnbWVudHM6IFs0LCA2LCA1XSxcbiAgfSxcbn07XG5cbi8qKlxuICogQSBmZWF0dXJlIGZsYWcgdGhhdCBlbmFibGVzIG51bWJlcnMgbWFza2luZyBzeW5jaHJvbml6YXRpb24gd2l0aCBiYWNrZW5kXG4gKiBJZiBzZXQgRkUgc2hvdWxkIG5vdCBhcHBseSBhbnkgbWFza2luZyBhbmQgcmVseSBvbiB0aGUgYmFja2VuZCBtYXNraW5nIGJlaGF2aW9yXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBTWU5DSFJPTklaRV9OVU1CRVJTX01BU0tJTkc6IEF2YWlsYWJsZUZlYXR1cmUgPSB7XG4gIG5hbWU6ICdTWU5DSFJPTklaRV9OVU1CRVJTX01BU0tJTkcnLFxuICBkZXNjcmlwdGlvbjogJ0VuYWJsZXMgYWNjb3VudHMgbWFza2luZyBzeW5jaHJvbml6YXRpb24gd2l0aCBiYWNrZW5kJyxcbn07XG4iXX0=