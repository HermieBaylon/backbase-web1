import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "@angular/common";
/**
 * @name EmptyStateComponent
 *
 * @description
 * Component that displays an empty state.
 */
export class EmptyStateComponent {
    constructor() {
        /**
         * Whether the icon should be shown. Defaults to true
         */
        this.showIcon = true;
        /**
         * The modifier for the icon used in the component. Defaults to 'list'
         */
        this.iconModifier = 'list';
        /**
         * The size for the icon used in the component. Defaults to 'xl'
         */
        this.iconSize = 'xl';
    }
    ngOnInit() {
        if (typeof this.title === 'undefined') {
            throw new Error(`"title" input is required in "${this.constructor.name}"`);
        }
    }
}
EmptyStateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EmptyStateComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
EmptyStateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: EmptyStateComponent, selector: "bb-empty-state-ui", inputs: { title: "title", subtitle: "subtitle", showIcon: "showIcon", iconClasses: "iconClasses", iconModifier: "iconModifier", iconSize: "iconSize", iconColor: "iconColor" }, ngImport: i0, template: "<div class=\"bb-empty-state\">\n  <bb-icon-ui\n    class=\"bb-empty-state__icon\"\n    *ngIf=\"showIcon\"\n    [ngClass]=\"iconClasses\"\n    [name]=\"iconModifier\"\n    [size]=\"iconSize\"\n    [color]=\"iconColor\"\n    [attr.data-role]=\"'icon'\"\n  ></bb-icon-ui>\n  <p class=\"bb-empty-state__title\" data-role=\"empty-state-title\">\n    {{ title }}\n  </p>\n  <p *ngIf=\"subtitle\" class=\"bb-empty-state__message\" data-role=\"empty-state-message\" [innerHTML]=\"subtitle\"></p>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EmptyStateComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-empty-state-ui',
                    templateUrl: './empty-state.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { title: [{
                type: Input
            }], subtitle: [{
                type: Input
            }], showIcon: [{
                type: Input
            }], iconClasses: [{
                type: Input
            }], iconModifier: [{
                type: Input
            }], iconSize: [{
                type: Input
            }], iconColor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wdHktc3RhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvZW1wdHktc3RhdGUvZW1wdHktc3RhdGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvZW1wdHktc3RhdGUvZW1wdHktc3RhdGUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFFbEY7Ozs7O0dBS0c7QUFNSCxNQUFNLE9BQU8sbUJBQW1CO0lBTGhDO1FBZUU7O1dBRUc7UUFDTSxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBS3pCOztXQUVHO1FBQ00saUJBQVksR0FBRyxNQUFNLENBQUM7UUFDL0I7O1dBRUc7UUFDTSxhQUFRLEdBQUcsSUFBSSxDQUFDO0tBVzFCO0lBTEMsUUFBUTtRQUNOLElBQUksT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLFdBQVcsRUFBRTtZQUNyQyxNQUFNLElBQUksS0FBSyxDQUFDLGlDQUFpQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7U0FDNUU7SUFDSCxDQUFDOztpSEFuQ1UsbUJBQW1CO3FHQUFuQixtQkFBbUIseU9DYmhDLG1mQWVBOzRGREZhLG1CQUFtQjtrQkFML0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixXQUFXLEVBQUUsOEJBQThCO29CQUMzQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OEJBTVUsS0FBSztzQkFBYixLQUFLO2dCQUlHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBSUcsUUFBUTtzQkFBaEIsS0FBSztnQkFJRyxXQUFXO3NCQUFuQixLQUFLO2dCQUlHLFlBQVk7c0JBQXBCLEtBQUs7Z0JBSUcsUUFBUTtzQkFBaEIsS0FBSztnQkFJRyxTQUFTO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIEVtcHR5U3RhdGVDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbXBvbmVudCB0aGF0IGRpc3BsYXlzIGFuIGVtcHR5IHN0YXRlLlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1lbXB0eS1zdGF0ZS11aScsXG4gIHRlbXBsYXRlVXJsOiAnLi9lbXB0eS1zdGF0ZS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBFbXB0eVN0YXRlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIFRoZSB0aXRsZSBvZiB0aGUgZW1wdHkgc3RhdGUuXG4gICAqIFdpbGwgdGhyb3cgYW4gZXJyb3IgaWYgdW5zZXQuXG4gICAqL1xuICBASW5wdXQoKSB0aXRsZSE6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFRoZSBzdWItdGl0bGUgb2YgdGhlIGVtcHR5IHN0YXRlLiBEZWZhdWx0cyB0byBhbiBlbXB0eSBzdHJpbmdcbiAgICovXG4gIEBJbnB1dCgpIHN1YnRpdGxlOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBpY29uIHNob3VsZCBiZSBzaG93bi4gRGVmYXVsdHMgdG8gdHJ1ZVxuICAgKi9cbiAgQElucHV0KCkgc2hvd0ljb24gPSB0cnVlO1xuICAvKipcbiAgICogVGhlIGljb24gY2xhc3NlcyBmb3IgdGhlIGVtcHR5IHN0YXRlLiBEZWZhdWx0cyB0byBhbiBlbXB0eSBzdHJpbmdcbiAgICovXG4gIEBJbnB1dCgpIGljb25DbGFzc2VzOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBUaGUgbW9kaWZpZXIgZm9yIHRoZSBpY29uIHVzZWQgaW4gdGhlIGNvbXBvbmVudC4gRGVmYXVsdHMgdG8gJ2xpc3QnXG4gICAqL1xuICBASW5wdXQoKSBpY29uTW9kaWZpZXIgPSAnbGlzdCc7XG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBmb3IgdGhlIGljb24gdXNlZCBpbiB0aGUgY29tcG9uZW50LiBEZWZhdWx0cyB0byAneGwnXG4gICAqL1xuICBASW5wdXQoKSBpY29uU2l6ZSA9ICd4bCc7XG4gIC8qKlxuICAgKiBUaGUgY29sb3IgZm9yIHRoZSBpY29uIHVzZWQgaW4gdGhlIGNvbXBvbmVudC4gRGVmYXVsdHMgdG8gYW4gZW1wdHkgc3RyaW5nXG4gICAqL1xuICBASW5wdXQoKSBpY29uQ29sb3I6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMudGl0bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFwidGl0bGVcIiBpbnB1dCBpcyByZXF1aXJlZCBpbiBcIiR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfVwiYCk7XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiYmItZW1wdHktc3RhdGVcIj5cbiAgPGJiLWljb24tdWlcbiAgICBjbGFzcz1cImJiLWVtcHR5LXN0YXRlX19pY29uXCJcbiAgICAqbmdJZj1cInNob3dJY29uXCJcbiAgICBbbmdDbGFzc109XCJpY29uQ2xhc3Nlc1wiXG4gICAgW25hbWVdPVwiaWNvbk1vZGlmaWVyXCJcbiAgICBbc2l6ZV09XCJpY29uU2l6ZVwiXG4gICAgW2NvbG9yXT1cImljb25Db2xvclwiXG4gICAgW2F0dHIuZGF0YS1yb2xlXT1cIidpY29uJ1wiXG4gID48L2JiLWljb24tdWk+XG4gIDxwIGNsYXNzPVwiYmItZW1wdHktc3RhdGVfX3RpdGxlXCIgZGF0YS1yb2xlPVwiZW1wdHktc3RhdGUtdGl0bGVcIj5cbiAgICB7eyB0aXRsZSB9fVxuICA8L3A+XG4gIDxwICpuZ0lmPVwic3VidGl0bGVcIiBjbGFzcz1cImJiLWVtcHR5LXN0YXRlX19tZXNzYWdlXCIgZGF0YS1yb2xlPVwiZW1wdHktc3RhdGUtbWVzc2FnZVwiIFtpbm5lckhUTUxdPVwic3VidGl0bGVcIj48L3A+XG48L2Rpdj5cbiJdfQ==