import { Component, Input, TemplateRef, ViewChild } from '@angular/core';
import { HttpErrorResponse } from '@angular/common/http';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/empty-state";
import * as i2 from "@angular/common";
/**
 * @name ErrorCommonStateComponent
 *
 * @description
 * Component that displays error state based on error value that was provided.
 */
export class ErrorCommonStateComponent {
    constructor() {
        /**
         * Error that should be displayed. Could be HttpErrorResponse, Error, Template reference or string.
         * Default value empty string.
         */
        this.error = '';
    }
    getErrorTemplate() {
        if (this.error instanceof HttpErrorResponse) {
            switch (this.error.status) {
                case 400:
                    return this.errorBadRequest;
                case 401:
                    return this.errorUnauthorized;
                case 403:
                    return this.errorForbidden;
                case 404:
                    return this.errorNotFound;
                case 0:
                    return this.errorConnectivityTemplate;
                default:
                    return this.errorUnexpectedTemplate;
            }
        }
        else if (this.error instanceof Error) {
            return this.errorMessageTemplate;
        }
        else if (typeof this.error === 'string') {
            return this.errorTextTemplate;
        }
        else if (this.error instanceof TemplateRef) {
            return this.errorCustomTemplate;
        }
        return undefined;
    }
    getMessage() {
        return this.error instanceof Error ? this.error.message : this.error;
    }
}
ErrorCommonStateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ErrorCommonStateComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ErrorCommonStateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ErrorCommonStateComponent, selector: "bb-common-error-state-ui", inputs: { error: "error" }, viewQueries: [{ propertyName: "errorBadRequest", first: true, predicate: ["errorBadRequest"], descendants: true, static: true }, { propertyName: "errorUnauthorized", first: true, predicate: ["errorUnauthorized"], descendants: true, static: true }, { propertyName: "errorForbidden", first: true, predicate: ["errorForbidden"], descendants: true, static: true }, { propertyName: "errorNotFound", first: true, predicate: ["errorNotFound"], descendants: true, static: true }, { propertyName: "errorConnectivityTemplate", first: true, predicate: ["errorConnectivityTemplate"], descendants: true, static: true }, { propertyName: "errorUnexpectedTemplate", first: true, predicate: ["errorUnexpectedTemplate"], descendants: true, static: true }, { propertyName: "errorMessageTemplate", first: true, predicate: ["errorMessageTemplate"], descendants: true, static: true }, { propertyName: "errorTextTemplate", first: true, predicate: ["errorTextTemplate"], descendants: true, static: true }, { propertyName: "errorCustomTemplate", first: true, predicate: ["errorCustomTemplate"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"bb-common-error-state\">\n  <ng-container *ngTemplateOutlet=\"getErrorTemplate()\"></ng-container>\n</div>\n\n<ng-template #errorBadRequest>\n  <bb-empty-state-ui\n    iconModifier=\"user\"\n    i18n-title=\"User action error title@@errorCommonState.error.badRequest.title\"\n    title=\"Bad request error\"\n    i18n-subtitle=\"User action error message@@errorCommonState.error.badRequest.message\"\n    subtitle=\"There is a problem with the action you are trying to perform.\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorUnauthorized>\n  <bb-empty-state-ui\n    iconModifier=\"user\"\n    i18n-title=\"Unauthorized error title@@errorCommonState.error.unauthorized.title\"\n    title=\"Unauthorized error\"\n    i18n-subtitle=\"Unauthorized error message@@errorCommonState.error.unauthorized.message\"\n    subtitle=\"You must authenticate yourself to get the requested response.\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorForbidden>\n  <bb-empty-state-ui\n    iconModifier=\"user\"\n    i18n-title=\"Forbidden error title@@errorCommonState.error.forbidden.title\"\n    title=\"Forbidden error\"\n    i18n-subtitle=\"Forbidden error message@@errorCommonState.error.forbidden.message\"\n    subtitle=\"You do not have access rights to the content.\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorNotFound>\n  <bb-empty-state-ui\n    iconModifier=\"error\"\n    i18n-title=\"Not found error title@@errorCommonState.error.notFound.title\"\n    title=\"Not found error\"\n    i18n-subtitle=\"Not found error message@@errorCommonState.error.notFound.message\"\n    subtitle=\"No data was found.\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorConnectivityTemplate>\n  <bb-empty-state-ui\n    iconModifier=\"error\"\n    i18n-title=\"Internet connection error title@@errorCommonState.error.connectivity.title\"\n    title=\"Internet connection error\"\n    i18n-subtitle=\"Internet connection error message@@errorCommonState.error.connectivity.message\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorUnexpectedTemplate>\n  <bb-empty-state-ui\n    iconModifier=\"unexpected\"\n    i18n-title=\"Unexpected error title@@errorCommonState.error.unexpected.title\"\n    title=\"Unexpected error\"\n    i18n-subtitle=\"Unexpected error message@@errorCommonState.error.unexpected.message\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorMessageTemplate>\n  <bb-empty-state-ui\n    iconModifier=\"error\"\n    i18n-title=\"Unknown error title@@errorCommonState.error.unknown.title\"\n    title=\"Unknown error\"\n    [subtitle]=\"getMessage()\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorTextTemplate>\n  <bb-empty-state-ui [title]=\"getMessage()\" iconModifier=\"error\"></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorCustomTemplate>\n  <ng-container *ngTemplateOutlet=\"error\"></ng-container>\n</ng-template>\n", components: [{ type: i1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ErrorCommonStateComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-common-error-state-ui',
                    templateUrl: 'common-error-state.component.html',
                }]
        }], propDecorators: { error: [{
                type: Input
            }], errorBadRequest: [{
                type: ViewChild,
                args: ['errorBadRequest', { static: true }]
            }], errorUnauthorized: [{
                type: ViewChild,
                args: ['errorUnauthorized', { static: true }]
            }], errorForbidden: [{
                type: ViewChild,
                args: ['errorForbidden', { static: true }]
            }], errorNotFound: [{
                type: ViewChild,
                args: ['errorNotFound', { static: true }]
            }], errorConnectivityTemplate: [{
                type: ViewChild,
                args: ['errorConnectivityTemplate', { static: true }]
            }], errorUnexpectedTemplate: [{
                type: ViewChild,
                args: ['errorUnexpectedTemplate', { static: true }]
            }], errorMessageTemplate: [{
                type: ViewChild,
                args: ['errorMessageTemplate', { static: true }]
            }], errorTextTemplate: [{
                type: ViewChild,
                args: ['errorTextTemplate', { static: true }]
            }], errorCustomTemplate: [{
                type: ViewChild,
                args: ['errorCustomTemplate', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,