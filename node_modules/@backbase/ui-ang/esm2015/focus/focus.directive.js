import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./focus.service";
export class FocusDirective {
    constructor(service, el) {
        this.service = service;
        this.el = el;
        this.autofocus = true;
    }
    set bbFocus(value) {
        this.autofocus = value === '' || !!value;
    }
    ngAfterViewInit() {
        if (this.autofocus) {
            this.focus();
        }
    }
    focus() {
        this.service.focus(this.el);
    }
}
FocusDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FocusDirective, deps: [{ token: i1.FocusService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
FocusDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: FocusDirective, selector: "[bbFocus]", inputs: { bbFocus: "bbFocus" }, exportAs: ["bbFocus"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: FocusDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbFocus]',
                    exportAs: 'bbFocus',
                }]
        }], ctorParameters: function () { return [{ type: i1.FocusService }, { type: i0.ElementRef }]; }, propDecorators: { bbFocus: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvZm9jdXMvZm9jdXMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFjLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBTzVFLE1BQU0sT0FBTyxjQUFjO0lBUXpCLFlBQTZCLE9BQXFCLEVBQW1CLEVBQWM7UUFBdEQsWUFBTyxHQUFQLE9BQU8sQ0FBYztRQUFtQixPQUFFLEdBQUYsRUFBRSxDQUFZO1FBRjNFLGNBQVMsR0FBRyxJQUFJLENBQUM7SUFFNkQsQ0FBQztJQVB2RixJQUNJLE9BQU8sQ0FBQyxLQUFtQjtRQUM3QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUMzQyxDQUFDO0lBTUQsZUFBZTtRQUNiLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDZDtJQUNILENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzlCLENBQUM7OzRHQWxCVSxjQUFjO2dHQUFkLGNBQWM7NEZBQWQsY0FBYztrQkFKMUIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsV0FBVztvQkFDckIsUUFBUSxFQUFFLFNBQVM7aUJBQ3BCOzRIQUdLLE9BQU87c0JBRFYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvY3VzU2VydmljZSB9IGZyb20gJy4vZm9jdXMuc2VydmljZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYkZvY3VzXScsXG4gIGV4cG9ydEFzOiAnYmJGb2N1cycsXG59KVxuZXhwb3J0IGNsYXNzIEZvY3VzRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dCgpXG4gIHNldCBiYkZvY3VzKHZhbHVlOiBib29sZWFuIHwgJycpIHtcbiAgICB0aGlzLmF1dG9mb2N1cyA9IHZhbHVlID09PSAnJyB8fCAhIXZhbHVlO1xuICB9XG5cbiAgcHJpdmF0ZSBhdXRvZm9jdXMgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgc2VydmljZTogRm9jdXNTZXJ2aWNlLCBwcml2YXRlIHJlYWRvbmx5IGVsOiBFbGVtZW50UmVmKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5hdXRvZm9jdXMpIHtcbiAgICAgIHRoaXMuZm9jdXMoKTtcbiAgICB9XG4gIH1cblxuICBmb2N1cygpIHtcbiAgICB0aGlzLnNlcnZpY2UuZm9jdXModGhpcy5lbCk7XG4gIH1cbn1cbiJdfQ==