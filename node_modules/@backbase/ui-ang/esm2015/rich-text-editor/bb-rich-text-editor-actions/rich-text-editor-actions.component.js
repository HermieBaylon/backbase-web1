import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./rich-text-editor-actions.service";
export class RichTextEditorActionsComponent {
    constructor(ma) {
        this.ma = ma;
        /**
         * This Boolean attribute indicates that the user cannot interact with the button.  Defaults to
         * false.
         */
        this.disabled = false;
        /**
         * Placement of the action tooltip relative to the action button: auto | top | bottom | left | right.
         */
        this.actionsTooltipPlacement = 'auto';
    }
    result(command, value) {
        this.ma.exec(command, value);
    }
}
RichTextEditorActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RichTextEditorActionsComponent, deps: [{ token: i1.RichTextEditorActionsService }], target: i0.ɵɵFactoryTarget.Component });
RichTextEditorActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorActionsComponent, selector: "ng-component", inputs: { disabled: "disabled", actionsTooltipPlacement: "actionsTooltipPlacement" }, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: RichTextEditorActionsComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                }]
        }], ctorParameters: function () { return [{ type: i1.RichTextEditorActionsService }]; }, propDecorators: { disabled: [{
                type: Input
            }], actionsTooltipPlacement: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmljaC10ZXh0LWVkaXRvci1hY3Rpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdWktYW5nL3JpY2gtdGV4dC1lZGl0b3IvYmItcmljaC10ZXh0LWVkaXRvci1hY3Rpb25zL3JpY2gtdGV4dC1lZGl0b3ItYWN0aW9ucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQWtCakQsTUFBTSxPQUFPLDhCQUE4QjtJQVV6QyxZQUE2QixFQUFnQztRQUFoQyxPQUFFLEdBQUYsRUFBRSxDQUE4QjtRQVQ3RDs7O1dBR0c7UUFDTSxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzFCOztXQUVHO1FBQ00sNEJBQXVCLEdBQUcsTUFBTSxDQUFDO0lBQ3NCLENBQUM7SUFFakUsTUFBTSxDQUFDLE9BQW9CLEVBQUUsS0FBMEI7UUFDckQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQy9CLENBQUM7OzRIQWRVLDhCQUE4QjtnSEFBOUIsOEJBQThCLDBJQUYvQixFQUFFOzRGQUVELDhCQUE4QjtrQkFIMUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsRUFBRTtpQkFDYjttSEFNVSxRQUFRO3NCQUFoQixLQUFLO2dCQUlHLHVCQUF1QjtzQkFBL0IsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJpY2hUZXh0RWRpdG9yQWN0aW9uc1NlcnZpY2UgfSBmcm9tICcuL3JpY2gtdGV4dC1lZGl0b3ItYWN0aW9ucy5zZXJ2aWNlJztcblxuZXhwb3J0IHR5cGUgQ29tbWFuZFR5cGUgPVxuICB8ICdib2xkJ1xuICB8ICdmb3JtYXRCbG9jaydcbiAgfCAnaW5zZXJ0SW1hZ2UnXG4gIHwgJ2luc2VydEhUTUwnXG4gIHwgJ2l0YWxpYydcbiAgfCAnY3JlYXRlTGluaydcbiAgfCAnaW5zZXJ0T3JkZXJlZExpc3QnXG4gIHwgJ3N0cmlrZVRocm91Z2gnXG4gIHwgJ2luc2VydFVub3JkZXJlZExpc3QnXG4gIHwgJ3VuZGVybGluZSc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogJycsXG59KVxuZXhwb3J0IGNsYXNzIFJpY2hUZXh0RWRpdG9yQWN0aW9uc0NvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBUaGlzIEJvb2xlYW4gYXR0cmlidXRlIGluZGljYXRlcyB0aGF0IHRoZSB1c2VyIGNhbm5vdCBpbnRlcmFjdCB3aXRoIHRoZSBidXR0b24uICBEZWZhdWx0cyB0b1xuICAgKiBmYWxzZS5cbiAgICovXG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG4gIC8qKlxuICAgKiBQbGFjZW1lbnQgb2YgdGhlIGFjdGlvbiB0b29sdGlwIHJlbGF0aXZlIHRvIHRoZSBhY3Rpb24gYnV0dG9uOiBhdXRvIHwgdG9wIHwgYm90dG9tIHwgbGVmdCB8IHJpZ2h0LlxuICAgKi9cbiAgQElucHV0KCkgYWN0aW9uc1Rvb2x0aXBQbGFjZW1lbnQgPSAnYXV0byc7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbWE6IFJpY2hUZXh0RWRpdG9yQWN0aW9uc1NlcnZpY2UpIHt9XG5cbiAgcmVzdWx0KGNvbW1hbmQ6IENvbW1hbmRUeXBlLCB2YWx1ZT86IHN0cmluZyB8IHVuZGVmaW5lZCkge1xuICAgIHRoaXMubWEuZXhlYyhjb21tYW5kLCB2YWx1ZSk7XG4gIH1cbn1cbiJdfQ==