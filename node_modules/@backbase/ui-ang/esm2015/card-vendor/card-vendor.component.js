import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
/**
 * The prefix for the vendor class name.
 */
const classNamePrefix = 'bb-card-vendor-';
const vendorToClassName = (vendor) => {
    if (typeof vendor !== 'string') {
        return '';
    }
    const classNamePostfix = vendor.trim().toLowerCase().replace(/\W/g, '-').replace(/-{2,}/g, '-');
    return `${classNamePrefix}${classNamePostfix}`;
};
const vendorToTitle = (vendor) => (vendor ? vendor.trim().toLowerCase().replace(/-/g, ' ') : '');
/**
 * @name CardVendorComponent
 *
 * @description
 * Component that displays the logo of a card vendor.
 */
export class CardVendorComponent {
    constructor() {
        this.className = '';
        this.title = '';
    }
    ngOnInit() {
        if (typeof this.vendor !== 'string') {
            throw new Error(`"vendor" input is required in "${this.constructor.name}"`);
        }
    }
    ngOnChanges(changes) {
        this.className = vendorToClassName(this.vendor);
        this.title = vendorToTitle(this.vendor);
    }
}
CardVendorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardVendorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardVendorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardVendorComponent, selector: "bb-card-vendor-ui", inputs: { vendor: "vendor" }, usesOnChanges: true, ngImport: i0, template: "<div role=\"img\" [attr.aria-label]=\"title\" [title]=\"title\" class=\"bb-card-vendor\" [ngClass]=\"className\"></div>\n", directives: [{ type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CardVendorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-card-vendor-ui',
                    templateUrl: './card-vendor.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { vendor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC12ZW5kb3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvY2FyZC12ZW5kb3IvY2FyZC12ZW5kb3IuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvY2FyZC12ZW5kb3IvY2FyZC12ZW5kb3IuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBcUIsS0FBSyxFQUFpQix1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBRTVHOztHQUVHO0FBQ0gsTUFBTSxlQUFlLEdBQUcsaUJBQWlCLENBQUM7QUFFMUMsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLE1BQTBCLEVBQVUsRUFBRTtJQUMvRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtRQUM5QixPQUFPLEVBQUUsQ0FBQztLQUNYO0lBRUQsTUFBTSxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBRWhHLE9BQU8sR0FBRyxlQUFlLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztBQUNqRCxDQUFDLENBQUM7QUFFRixNQUFNLGFBQWEsR0FBRyxDQUFDLE1BQTBCLEVBQUUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7QUFFckg7Ozs7O0dBS0c7QUFNSCxNQUFNLE9BQU8sbUJBQW1CO0lBTGhDO1FBV0UsY0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNmLFVBQUssR0FBRyxFQUFFLENBQUM7S0FZWjtJQVZDLFFBQVE7UUFDTixJQUFJLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQUU7WUFDbkMsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQ0FBa0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO1NBQzdFO0lBQ0gsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLENBQUMsU0FBUyxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsS0FBSyxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7aUhBbEJVLG1CQUFtQjtxR0FBbkIsbUJBQW1CLDRHQzlCaEMsMkhBQ0E7NEZENkJhLG1CQUFtQjtrQkFML0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixXQUFXLEVBQUUsOEJBQThCO29CQUMzQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7OEJBS1UsTUFBTTtzQkFBZCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkNoYW5nZXMsIE9uSW5pdCwgSW5wdXQsIFNpbXBsZUNoYW5nZXMsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogVGhlIHByZWZpeCBmb3IgdGhlIHZlbmRvciBjbGFzcyBuYW1lLlxuICovXG5jb25zdCBjbGFzc05hbWVQcmVmaXggPSAnYmItY2FyZC12ZW5kb3ItJztcblxuY29uc3QgdmVuZG9yVG9DbGFzc05hbWUgPSAodmVuZG9yOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgPT4ge1xuICBpZiAodHlwZW9mIHZlbmRvciAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBjb25zdCBjbGFzc05hbWVQb3N0Zml4ID0gdmVuZG9yLnRyaW0oKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xcVy9nLCAnLScpLnJlcGxhY2UoLy17Mix9L2csICctJyk7XG5cbiAgcmV0dXJuIGAke2NsYXNzTmFtZVByZWZpeH0ke2NsYXNzTmFtZVBvc3RmaXh9YDtcbn07XG5cbmNvbnN0IHZlbmRvclRvVGl0bGUgPSAodmVuZG9yOiBzdHJpbmcgfCB1bmRlZmluZWQpID0+ICh2ZW5kb3IgPyB2ZW5kb3IudHJpbSgpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvLS9nLCAnICcpIDogJycpO1xuXG4vKipcbiAqIEBuYW1lIENhcmRWZW5kb3JDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbXBvbmVudCB0aGF0IGRpc3BsYXlzIHRoZSBsb2dvIG9mIGEgY2FyZCB2ZW5kb3IuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWNhcmQtdmVuZG9yLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NhcmQtdmVuZG9yLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIENhcmRWZW5kb3JDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBUaGUgdmVuZG9yIHRoYXQgdGhpcyBjb21wb25lbnQgZGlzcGxheXMgdGhlIGxvZ28gb2YuICBNYW5kYXRvcnkuXG4gICAqL1xuICBASW5wdXQoKSB2ZW5kb3I6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICBjbGFzc05hbWUgPSAnJztcbiAgdGl0bGUgPSAnJztcblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMudmVuZG9yICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcInZlbmRvclwiIGlucHV0IGlzIHJlcXVpcmVkIGluIFwiJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9XCJgKTtcbiAgICB9XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgdGhpcy5jbGFzc05hbWUgPSB2ZW5kb3JUb0NsYXNzTmFtZSh0aGlzLnZlbmRvcik7XG4gICAgdGhpcy50aXRsZSA9IHZlbmRvclRvVGl0bGUodGhpcy52ZW5kb3IpO1xuICB9XG59XG4iLCI8ZGl2IHJvbGU9XCJpbWdcIiBbYXR0ci5hcmlhLWxhYmVsXT1cInRpdGxlXCIgW3RpdGxlXT1cInRpdGxlXCIgY2xhc3M9XCJiYi1jYXJkLXZlbmRvclwiIFtuZ0NsYXNzXT1cImNsYXNzTmFtZVwiPjwvZGl2PlxuIl19