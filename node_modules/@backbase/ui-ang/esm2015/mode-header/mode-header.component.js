import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "@angular/common";
import * as i4 from "@backbase/ui-ang/button";
/**
 * @name ModeHeaderComponent
 *
 * @description
 * Component that displays a mode header.
 */
export class ModeHeaderComponent {
    constructor() {
        /**
         * Whether or not to show the close button. Defaults to true.
         */
        this.showCloseButton = true;
        /**
         * Whether or not the order of title elements is reversed.
         */
        this.reverseTitleOrder = true;
        /**
         * Event fired when the close button is clicked.
         */
        this.close = new EventEmitter();
    }
}
ModeHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ModeHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModeHeaderComponent, selector: "bb-mode-header-ui", inputs: { title: "title", secondaryTitle: "secondaryTitle", showCloseButton: "showCloseButton", closeButtonAriaLabel: "closeButtonAriaLabel", reverseTitleOrder: "reverseTitleOrder" }, outputs: { close: "close" }, ngImport: i0, template: "<div class=\"bb-mode-header\">\n  <div class=\"bb-stack bb-stack--density-md\">\n    <div *ngIf=\"showCloseButton\" class=\"bb-stack__item\">\n      <button\n        bbButton\n        buttonSize=\"md\"\n        circle=\"true\"\n        color=\"primary\"\n        [attr.aria-label]=\"closeButtonAriaLabel\"\n        (click)=\"close.emit()\"\n        data-role=\"mode-header-close-button\"\n      >\n        <bb-icon-ui name=\"clear\"></bb-icon-ui>\n      </button>\n    </div>\n    <div class=\"bb-stack__item\" data-role=\"mode-header-icon\">\n      <ng-content select=\"[mode-header-icon]\"></ng-content>\n    </div>\n    <div\n      class=\"bb-stack__item bb-mode-header__title-area\"\n      [class.bb-mode-header__title-area--reversed]=\"reverseTitleOrder\"\n    >\n      <div class=\"bb-stack\">\n        <bb-header-ui\n          headingType=\"h2\"\n          headingClasses=\"bb-text--mode-header\"\n          [heading]=\"title\"\n          data-role=\"mode-header-primary-header\"\n          class=\"bb-stack__item\"\n        ></bb-header-ui>\n        <div class=\"bb-stack__item\" data-role=\"mode-header-status\">\n          <ng-content select=\"[mode-header-status]\"></ng-content>\n        </div>\n      </div>\n      <span *ngIf=\"secondaryTitle\" class=\"bb-subtitle\" data-role=\"mode-header-secondary-header\">{{\n        secondaryTitle\n      }}</span>\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--push-right\" data-role=\"mode-header-utility-area\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <ng-content select=\"[mode-header-utility-area]\"></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-mode-header-ui',
                    templateUrl: './mode-header.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { title: [{
                type: Input
            }], secondaryTitle: [{
                type: Input
            }], showCloseButton: [{
                type: Input
            }], closeButtonAriaLabel: [{
                type: Input
            }], reverseTitleOrder: [{
                type: Input
            }], close: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZS1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvbW9kZS1oZWFkZXIvbW9kZS1oZWFkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vbGlicy91aS1hbmcvbW9kZS1oZWFkZXIvbW9kZS1oZWFkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBRWhHOzs7OztHQUtHO0FBTUgsTUFBTSxPQUFPLG1CQUFtQjtJQUxoQztRQWdCRTs7V0FFRztRQUNNLG9CQUFlLEdBQUcsSUFBSSxDQUFDO1FBT2hDOztXQUVHO1FBQ00sc0JBQWlCLEdBQUcsSUFBSSxDQUFDO1FBRWxDOztXQUVHO1FBQ08sVUFBSyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7S0FDNUM7O2lIQTlCWSxtQkFBbUI7cUdBQW5CLG1CQUFtQiw4UUNiaEMsOG5EQTZDQTs0RkRoQ2EsbUJBQW1CO2tCQUwvQixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFdBQVcsRUFBRSw4QkFBOEI7b0JBQzNDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs4QkFLVSxLQUFLO3NCQUFiLEtBQUs7Z0JBS0csY0FBYztzQkFBdEIsS0FBSztnQkFLRyxlQUFlO3NCQUF2QixLQUFLO2dCQUtHLG9CQUFvQjtzQkFBNUIsS0FBSztnQkFLRyxpQkFBaUI7c0JBQXpCLEtBQUs7Z0JBS0ksS0FBSztzQkFBZCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgTW9kZUhlYWRlckNvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ29tcG9uZW50IHRoYXQgZGlzcGxheXMgYSBtb2RlIGhlYWRlci5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItbW9kZS1oZWFkZXItdWknLFxuICB0ZW1wbGF0ZVVybDogJy4vbW9kZS1oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTW9kZUhlYWRlckNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBUaGUgbWFpbiB0aXRsZSB0byBkaXNwbGF5LlxuICAgKi9cbiAgQElucHV0KCkgdGl0bGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBzbWFsbGVyLCBzZWNvbmRhcnkgdGl0bGUgdG8gZGlzcGxheS5cbiAgICovXG4gIEBJbnB1dCgpIHNlY29uZGFyeVRpdGxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0byBzaG93IHRoZSBjbG9zZSBidXR0b24uIERlZmF1bHRzIHRvIHRydWUuXG4gICAqL1xuICBASW5wdXQoKSBzaG93Q2xvc2VCdXR0b24gPSB0cnVlO1xuXG4gIC8qKlxuICAgKiBUaGUgYXJpYSBsYWJlbCB0byBkZXNjcmliZSB0aGUgY2xvc2UgYnV0dG9uIHRvIHNjcmVlbiByZWFkZXIgdXNlcnMuXG4gICAqL1xuICBASW5wdXQoKSBjbG9zZUJ1dHRvbkFyaWFMYWJlbD86IHN0cmluZztcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdGhlIG9yZGVyIG9mIHRpdGxlIGVsZW1lbnRzIGlzIHJldmVyc2VkLlxuICAgKi9cbiAgQElucHV0KCkgcmV2ZXJzZVRpdGxlT3JkZXIgPSB0cnVlO1xuXG4gIC8qKlxuICAgKiBFdmVudCBmaXJlZCB3aGVuIHRoZSBjbG9zZSBidXR0b24gaXMgY2xpY2tlZC5cbiAgICovXG4gIEBPdXRwdXQoKSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi1tb2RlLWhlYWRlclwiPlxuICA8ZGl2IGNsYXNzPVwiYmItc3RhY2sgYmItc3RhY2stLWRlbnNpdHktbWRcIj5cbiAgICA8ZGl2ICpuZ0lmPVwic2hvd0Nsb3NlQnV0dG9uXCIgY2xhc3M9XCJiYi1zdGFja19faXRlbVwiPlxuICAgICAgPGJ1dHRvblxuICAgICAgICBiYkJ1dHRvblxuICAgICAgICBidXR0b25TaXplPVwibWRcIlxuICAgICAgICBjaXJjbGU9XCJ0cnVlXCJcbiAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJjbG9zZUJ1dHRvbkFyaWFMYWJlbFwiXG4gICAgICAgIChjbGljayk9XCJjbG9zZS5lbWl0KClcIlxuICAgICAgICBkYXRhLXJvbGU9XCJtb2RlLWhlYWRlci1jbG9zZS1idXR0b25cIlxuICAgICAgPlxuICAgICAgICA8YmItaWNvbi11aSBuYW1lPVwiY2xlYXJcIj48L2JiLWljb24tdWk+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItc3RhY2tfX2l0ZW1cIiBkYXRhLXJvbGU9XCJtb2RlLWhlYWRlci1pY29uXCI+XG4gICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbbW9kZS1oZWFkZXItaWNvbl1cIj48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gICAgPGRpdlxuICAgICAgY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1tb2RlLWhlYWRlcl9fdGl0bGUtYXJlYVwiXG4gICAgICBbY2xhc3MuYmItbW9kZS1oZWFkZXJfX3RpdGxlLWFyZWEtLXJldmVyc2VkXT1cInJldmVyc2VUaXRsZU9yZGVyXCJcbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzPVwiYmItc3RhY2tcIj5cbiAgICAgICAgPGJiLWhlYWRlci11aVxuICAgICAgICAgIGhlYWRpbmdUeXBlPVwiaDJcIlxuICAgICAgICAgIGhlYWRpbmdDbGFzc2VzPVwiYmItdGV4dC0tbW9kZS1oZWFkZXJcIlxuICAgICAgICAgIFtoZWFkaW5nXT1cInRpdGxlXCJcbiAgICAgICAgICBkYXRhLXJvbGU9XCJtb2RlLWhlYWRlci1wcmltYXJ5LWhlYWRlclwiXG4gICAgICAgICAgY2xhc3M9XCJiYi1zdGFja19faXRlbVwiXG4gICAgICAgID48L2JiLWhlYWRlci11aT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCIgZGF0YS1yb2xlPVwibW9kZS1oZWFkZXItc3RhdHVzXCI+XG4gICAgICAgICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW21vZGUtaGVhZGVyLXN0YXR1c11cIj48L25nLWNvbnRlbnQ+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8c3BhbiAqbmdJZj1cInNlY29uZGFyeVRpdGxlXCIgY2xhc3M9XCJiYi1zdWJ0aXRsZVwiIGRhdGEtcm9sZT1cIm1vZGUtaGVhZGVyLXNlY29uZGFyeS1oZWFkZXJcIj57e1xuICAgICAgICBzZWNvbmRhcnlUaXRsZVxuICAgICAgfX08L3NwYW4+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImJiLXN0YWNrX19pdGVtIGJiLXN0YWNrX19pdGVtLS1wdXNoLXJpZ2h0XCIgZGF0YS1yb2xlPVwibW9kZS1oZWFkZXItdXRpbGl0eS1hcmVhXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiYmItYnV0dG9uLWJhciBiYi1idXR0b24tYmFyLS1yZXZlcnNlXCI+XG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIlttb2RlLWhlYWRlci11dGlsaXR5LWFyZWFdXCI+PC9uZy1jb250ZW50PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=