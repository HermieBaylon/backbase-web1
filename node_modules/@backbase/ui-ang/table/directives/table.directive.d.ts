import { EventEmitter } from '@angular/core';
import { SortEvent, TableSortableDirective } from './table-sortable.directive';
import * as i0 from "@angular/core";
/**
 * @name TableDirective
 *
 * @description
 * Directive that displays a table.
 *
 * @a11y
 * The table directive doesn't provide any specific properties for accessibility.
 * But aria-sort tag can be set on the sortable header cells with ascending and descending values.
 *
 */
export declare class TableDirective {
    /**
     * The data source for the table.
     */
    dataSource?: Array<Object>;
    /**
     * An event emitter for on select row action.
     */
    selectRow: EventEmitter<any>;
    /**
     * An event emitter for on row click action.
     */
    rowClick: EventEmitter<any>;
    /**
     * An event emitter for on column sort action.
     */
    sort: EventEmitter<any>;
    selectedRows: Set<Object>;
    headers: Set<TableSortableDirective>;
    registerHeader(header: TableSortableDirective): void;
    unRegisterHeader(header: TableSortableDirective): void;
    onRowClick(rowItem: any): void;
    isSelected(row: any): boolean;
    toggleItem(row: any, isChecked: boolean): void;
    toggleAllItems(): void;
    isSelectedAll(): boolean;
    isSelectedPart(): boolean;
    onSort(sortEvent: SortEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TableDirective, "table[bbTable]", never, { "dataSource": "bbTable"; }, { "selectRow": "selectRow"; "rowClick": "rowClick"; "sort": "sort"; }, never>;
}
