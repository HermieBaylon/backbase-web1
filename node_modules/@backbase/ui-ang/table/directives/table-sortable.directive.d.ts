import { AfterViewInit, EventEmitter, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { Observable } from 'rxjs';
import { DropdownMenuToken, DropdownMenuOptionToken } from '@backbase/ui-ang/dropdown-menu';
import { TableDirective } from './table.directive';
import * as i0 from "@angular/core";
export declare type SortDirection = 'asc' | 'desc' | '';
export interface SortEvent {
    column: string;
    direction: SortDirection;
}
export declare class TableSortableDirective implements AfterViewInit, OnDestroy {
    private readonly parentTable;
    private readonly renderer;
    /**
     * The name of the column to be sorted
     */
    bbSortable?: string;
    /**
     * The current sort direction. Accepts one of the values of 'asc', 'desc' or ''
     */
    direction: SortDirection;
    /**
     * An event emitter for on sort actions.
     */
    sort: EventEmitter<SortEvent>;
    dropdown: DropdownMenuToken | undefined;
    bbMenuOptions: QueryList<DropdownMenuOptionToken>;
    constructor(parentTable: TableDirective, renderer: Renderer2);
    sortable: boolean;
    get asc(): boolean;
    get desc(): boolean;
    rotate(): void;
    ngAfterViewInit(): void;
    onMenuOptionSelect(menuOption: DropdownMenuOptionToken): void;
    /** Notify table with new sorting params */
    emitSortEvent(): void;
    /** Combined stream of all of the bbTableMenuitem selectionChange events. */
    getMenuOptionSelectionChanges(menuOptions: QueryList<DropdownMenuOptionToken>): Observable<DropdownMenuOptionToken>;
    /** mark the new menuitem as active only if sorting order is asc/desc */
    markMenuOptionAsActive(menuOption: DropdownMenuOptionToken): void;
    markAllMenuOptionAsInactive(): void;
    updateAriaSortAttribute(): void;
    private getAriaSortAttribute;
    /** Preset bb-dropdown button to add role for a11y and set full height and width of table column */
    private presetDropdown;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TableSortableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TableSortableDirective, "th[bbSortable]", never, { "bbSortable": "bbSortable"; "direction": "direction"; }, { "sort": "sort"; }, ["dropdown", "bbMenuOptions"]>;
}
