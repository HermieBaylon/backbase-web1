import { TemplateRef } from '@angular/core';
import { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';
import * as i0 from "@angular/core";
export declare class CustomProductItemInvestmentAccountTitleDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemInvestmentAccountTitleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemInvestmentAccountTitleDirective, "ng-template[bbCustomProductItemInvestmentAccountTitle]", never, {}, {}, never>;
}
export declare class CustomProductItemInvestmentAccountDetailsFormatterDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemInvestmentAccountDetailsFormatterDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemInvestmentAccountDetailsFormatterDirective, "ng-template[bbCustomProductItemInvestmentAccountDetailsFormatter]", never, {}, {}, never>;
}
export declare class ProductItemInvestmentAccountComponent {
    customProductItemInvestmentAccountTitle: CustomProductItemInvestmentAccountTitleDirective | undefined;
    customProductItemInvestmentAccountDetailsFormatter: CustomProductItemInvestmentAccountDetailsFormatterDirective | undefined;
    readonly hostRef: ProductItemInvestmentAccountComponent;
    /**
     * The card Title value. Default is empty string
     */
    title: string | undefined;
    /**
     * The product Number. Default is empty string
     */
    productNumber: string | undefined;
    /**
     * Configuration of how the product number should be formatted.
     */
    productNumberFormat: PaymentCardNumberFormat;
    /**
     * The card currency value. Default is empty string
     */
    currency?: string | undefined;
    /**
     * The card Amount value
     */
    amount?: number | undefined;
    /**
     * The card highlight the amount and currency value
     */
    highlight?: boolean;
    /**
     * The product details info values
     */
    productDetailsInfo?: {
        [key: string]: any;
    };
    /**
     * The active state of card (it adds active class for blue line)
     */
    active: boolean;
    /**
     * The favorite state of card (add favorite icon next to title)
     */
    favorite: boolean;
    /**
     * The favorite icon color (define star icon color)
     */
    favoriteIconColor: string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductItemInvestmentAccountComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProductItemInvestmentAccountComponent, "bb-product-item-investment-account-ui", never, { "title": "title"; "productNumber": "productNumber"; "productNumberFormat": "productNumberFormat"; "currency": "currency"; "amount": "amount"; "highlight": "highlight"; "productDetailsInfo": "productDetailsInfo"; "active": "active"; "favorite": "favorite"; "favoriteIconColor": "favoriteIconColor"; }, {}, ["customProductItemInvestmentAccountTitle", "customProductItemInvestmentAccountDetailsFormatter"], never>;
}
