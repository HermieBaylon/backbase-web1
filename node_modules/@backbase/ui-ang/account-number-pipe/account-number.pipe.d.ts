import { PipeTransform } from '@angular/core';
import { AccountNumberType, AccountsDisplayingFormat } from './constants';
import { AccountsDisplayingFormatService } from './accounts-displaying-format.service';
import * as i0 from "@angular/core";
/**
 * Formats account numbers, applies different format configurations per number type
 */
export declare class AccountNumberPipe implements PipeTransform {
    private readonly accountsDisplayingFormatService;
    /**
     * @name AccountNumberPipe#constructor
     * @param accountsDisplayingFormatService - AccountsDisplayingFormatService
     *
     * @internal
     */
    constructor(accountsDisplayingFormatService: AccountsDisplayingFormatService);
    /**
     * @name AccountNumberPipe#transform
     * @param value - the string to transform
     * @param configuration - type of the value (iban, bban or number) or a custom numbers format
     * @param cardProviderName - card provider name
     *
     * @description
     * Formats account numbers
     *
     * to use with a global accountsFormat configuration
     * - '12345678' | bbAccountNumber:'iban'
     * to apply a custom configuration
     * - '12345678' | bbAccountNumber:{ segments: [2, 4, 2] }
     * to apply a 'visa' card number configuration
     * - '12345678' | bbAccountNumber:'cardNumber':'visa'
     */
    transform(value: string | number, configuration: AccountNumberType | AccountsDisplayingFormat, cardProviderName?: string): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountNumberPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<AccountNumberPipe, "bbAccountNumber">;
}
