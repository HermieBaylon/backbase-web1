import { AfterViewInit, ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';
import { InputBaseComponent } from '@backbase/ui-ang/base-classes';
import { AbstractControl, ValidationErrors, Validator } from '@angular/forms';
import { DomAttributesService } from '@backbase/ui-ang/services';
import { DeprecationsService } from '@backbase/foundation-ang/future';
import * as i0 from "@angular/core";
/**
 * @name InputEmailComponent
 *
 * @a11y Current component provide option to pass needed accessibility
 * attributes. You need to take care of properties that are required in your case :
 *  - role
 *  - aria-activedescendant
 *  - aria-describedby
 *  - aria-expanded
 *  - aria-invalid
 *  - aria-label
 *  - aria-labelledby
 *  - aria-owns
 *
 * @description
 * Component that displays a email input.
 */
export declare class InputEmailComponent extends InputBaseComponent implements Validator, AfterViewInit {
    private readonly domAttrService;
    private readonly elem;
    private readonly renderer2;
    protected readonly cd: ChangeDetectorRef;
    protected readonly deprecationsService: DeprecationsService;
    /**
     * The placeholder for the email input. Defaults to an empty string;
     */
    placeholder: string;
    /**
     * The maxLength for the email input.
     */
    maxLength: number | undefined;
    /**
     * The minLength for the email input.
     */
    minLength: number | undefined;
    /**
     * Whether the email input is readonly.
     */
    readonly: boolean;
    /**
     * The autocomplete value of enclosed input control.
     */
    autocomplete: 'email' | 'off' | 'on' | undefined;
    inputEl: ElementRef | undefined;
    constructor(domAttrService: DomAttributesService, elem: ElementRef, renderer2: Renderer2, cd: ChangeDetectorRef, deprecationsService: DeprecationsService);
    validate(control: AbstractControl): ValidationErrors | null;
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<InputEmailComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<InputEmailComponent, "bb-input-email-ui", never, { "placeholder": "placeholder"; "maxLength": "maxLength"; "minLength": "minLength"; "readonly": "readonly"; "autocomplete": "autocomplete"; }, {}, never, never>;
}
