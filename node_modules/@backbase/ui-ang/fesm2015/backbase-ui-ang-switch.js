import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i4 from '@angular/forms';
import { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';
import * as i0 from '@angular/core';
import { forwardRef, Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';
import { InputBaseComponent } from '@backbase/ui-ang/base-classes';
import * as i1 from '@backbase/foundation-ang/future';
import * as i2 from '@backbase/ui-ang/input-checkbox';
import { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';

/* eslint-disable */
var position;
(function (position) {
    position["left"] = "left";
    position["right"] = "right";
})(position || (position = {}));
/**
 * @name SwitchComponent
 *
 * @description
 * Component that provides you a switch input.
 */
class SwitchComponent extends InputBaseComponent {
    constructor(cd, el, deprecationsService) {
        super(cd, deprecationsService);
        this.cd = cd;
        this.el = el;
        this.deprecationsService = deprecationsService;
        /**
         * The label position whether it is left or right.
         */
        this.labelPosition = position.left;
        this.keyboardFocus = false;
        this.focused = false;
    }
    ngOnInit() {
        super.ngOnInit();
        this.role = this.role || 'switch';
    }
    toggleSwitch($event) {
        var _a;
        if (((_a = $event.target) === null || _a === void 0 ? void 0 : _a.tagName) === 'LABEL') {
            return;
        }
        const isIE11 = !!window.MSInputMethodContext && !!document.documentMode;
        if (!isIE11) {
            this.onValueChange(!this.value);
            this.el.nativeElement.dispatchEvent(new Event('change', { bubbles: true }));
        }
        else {
            if ($event.target.type === 'checkbox') {
                this.onValueChange();
            }
            else {
                this.onValueChange(!this.value);
            }
            const event = document.createEvent('Event');
            event.initEvent('change', true, false);
            this.el.nativeElement.dispatchEvent(event);
        }
    }
    onBlur($event) {
        this.focused = false;
        super.onBlur($event);
    }
    isLabelLeft() {
        return this.labelPosition === position.left;
    }
    isLabelRight() {
        return this.labelPosition === position.right;
    }
}
SwitchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SwitchComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.DeprecationsService }], target: i0.ɵɵFactoryTarget.Component });
SwitchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SwitchComponent, selector: "bb-switch-ui", inputs: { labelPosition: "labelPosition" }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            multi: true,
            useExisting: forwardRef(() => SwitchComponent),
        },
    ], usesInheritance: true, ngImport: i0, template: "<div\n  class=\"bb-switch\"\n  (click)=\"!disabled && toggleSwitch($event)\"\n  [ngClass]=\"{\n    'bb-switch--align-end': isLabelRight()\n  }\"\n>\n  <label [attr.for]=\"id\" *ngIf=\"label\" class=\"bb-switch__label\">\n    {{ label }}\n  </label>\n\n  <bb-input-checkbox-ui\n    [id]=\"id\"\n    class=\"bb-switch__checkbox sr-only sr-only-focusable\"\n    [(ngModel)]=\"value\"\n    [disabled]=\"disabled\"\n    (change)=\"$event.stopPropagation() && !disabled && toggleSwitch($event)\"\n    [aria-label]=\"ariaLabel\"\n    [required]=\"required\"\n    [aria-describedby]=\"ariaDescribedby\"\n    [aria-labelledby]=\"ariaLabelledby\"\n    [aria-expanded]=\"ariaExpanded\"\n    [role]=\"role\"\n    [aria-invalid]=\"ariaInvalid\"\n    [aria-owns]=\"ariaOwns\"\n    [aria-activedescendant]=\"ariaActivedescendant\"\n    (focus)=\"focused = true\"\n    (blur)=\"onBlur($event)\"\n  >\n  </bb-input-checkbox-ui>\n\n  <span\n    class=\"bb-switch__element\"\n    [ngClass]=\"{\n      'bb-switch__element--checked': value,\n      'bb-switch__element--disabled': disabled,\n      'bb-switch__element--focused': focused\n    }\"\n    (focus)=\"keyboardFocus = true\"\n    (blur)=\"keyboardFocus = false\"\n  >\n    <span class=\"bb-switch__slider slider\"></span>\n  </span>\n</div>\n", components: [{ type: i2.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }], directives: [{ type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SwitchComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-switch-ui',
                    templateUrl: './switch.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => SwitchComponent),
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.DeprecationsService }]; }, propDecorators: { labelPosition: [{
                type: Input
            }] } });

class SwitchModule {
}
SwitchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SwitchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SwitchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SwitchModule, declarations: [SwitchComponent], imports: [CommonModule, FormsModule, InputCheckboxModule], exports: [SwitchComponent] });
SwitchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SwitchModule, imports: [[CommonModule, FormsModule, InputCheckboxModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SwitchModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, FormsModule, InputCheckboxModule],
                    declarations: [SwitchComponent],
                    exports: [SwitchComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { SwitchComponent, SwitchModule };
//# sourceMappingURL=backbase-ui-ang-switch.js.map
