{"version":3,"file":"backbase-ui-ang-value-diff.js","sources":["../../../../libs/ui-ang/value-diff/bb-value-diff.model.ts","../../../../libs/ui-ang/value-diff/bb-value-diff.directive.ts","../../../../libs/ui-ang/value-diff/bb-value-diff.module.ts","../../../../libs/ui-ang/value-diff/backbase-ui-ang-value-diff.ts"],"sourcesContent":["import '@angular/localize/init';\n\nexport enum ValueDiffPosition {\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport interface ValueDiffChangedModel {\n  newData: string;\n}\n\nexport const highlightValueClass = 'bb-value-diff--highlighted';\nexport const crossOutValueClass = 'bb-value-diff--crossed';\n\nexport const valueDiffArrowLeftClass = 'bb-value-diff--arrow-left';\nexport const valueDiffArrowRightClass = 'bb-value-diff--arrow-right';\n\nexport const srTextForNewVal = $localize`:@@value-diff-current-value-label:Current value:`;\nexport const srTextForOldVal = $localize`:@@value-diff-previous-value-label:Previous value:`;\n","import { AfterContentInit, ChangeDetectorRef, Directive, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\nimport {\n  crossOutValueClass,\n  ValueDiffChangedModel,\n  ValueDiffPosition,\n  highlightValueClass,\n  srTextForNewVal,\n  srTextForOldVal,\n  valueDiffArrowRightClass,\n  valueDiffArrowLeftClass,\n} from './bb-value-diff.model';\n\n@Directive({\n  selector: '[bbValueDiff]',\n})\nexport class ValueDiffDirective implements AfterContentInit, OnDestroy {\n  private readonly destroyed$ = new Subject<void>();\n  private readonly valueChanged$ = new Subject<ValueDiffChangedModel>();\n\n  private readonly SROnlyOldEl = this.createA11ySpan(srTextForOldVal);\n  private readonly SROnlyNewEl = this.createA11ySpan(srTextForNewVal);\n\n  private _newValue = '';\n  private _position = ValueDiffPosition.BEFORE;\n  private arrow: HTMLElement | undefined;\n\n  /**\n   * New data with which we will compare content.\n   */\n  @Input('bbValueDiff')\n  set newValue(value: string) {\n    this._newValue = value;\n    this.onValueChanged(value);\n  }\n\n  get newValue(): string {\n    return this._newValue;\n  }\n\n  /**\n   * A position where differences will be added.\n   * Default value: 'before'\n   */\n  @Input()\n  set position(val: ValueDiffPosition) {\n    this._position = val;\n    this.onValueChanged(this._newValue);\n  }\n\n  get position(): ValueDiffPosition {\n    return this._position;\n  }\n\n  /**\n   * Text for screen reader to describe old value\n   * Default value: 'Previous value:'\n   */\n  @Input('sr-only-old')\n  set SROnlyOld(val: string) {\n    this.renderer.setProperty(this.SROnlyOldEl, 'textContent', val);\n  }\n\n  /**\n   * Text for screen reader to describe new value\n   * Default value: 'Current value:'\n   */\n  @Input('sr-only-new')\n  set SROnlyNew(val: string) {\n    this.renderer.setProperty(this.SROnlyNewEl, 'textContent', val);\n  }\n\n  /**\n   * Show arrow between old and new value\n   * Default value: false\n   */\n  @Input() showArrow = false;\n\n  private static isEqual(newData: string, initialEl: HTMLElement): boolean {\n    return initialEl.innerText.trim() === newData;\n  }\n\n  private get isPositionBefore(): boolean {\n    return this._position === ValueDiffPosition.BEFORE;\n  }\n\n  private get parentEl(): HTMLElement {\n    return this.elRef.nativeElement.parentElement;\n  }\n\n  constructor(\n    private readonly elRef: ElementRef,\n    private readonly renderer: Renderer2,\n    private readonly cdRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterContentInit() {\n    const changedEl = this.elRef.nativeElement.cloneNode(true);\n\n    this.valueChanged$\n      .pipe(\n        startWith({ newData: this._newValue, elRef: this.elRef }),\n        filter(({ newData }: ValueDiffChangedModel) => !ValueDiffDirective.isEqual(newData, this.elRef.nativeElement)),\n        takeUntil(this.destroyed$),\n      )\n      .subscribe(({ newData }: ValueDiffChangedModel) => {\n        this.cdRef.detectChanges();\n        this.renderer.setProperty(changedEl, 'textContent', newData);\n        this.setupContainer(changedEl);\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n  }\n\n  private setupContainer(changedEl: HTMLElement) {\n    const { nativeElement } = this.elRef;\n\n    if (ValueDiffDirective.isEqual(changedEl.innerText, nativeElement)) {\n      this.cleanUpContent(changedEl);\n    } else {\n      this.renderer.addClass(changedEl, highlightValueClass);\n      this.renderer.addClass(nativeElement, crossOutValueClass);\n\n      this.renderer.insertBefore(this.parentEl, changedEl, this.getSiblingEl());\n      this.renderer.insertBefore(this.parentEl, this.SROnlyNewEl, changedEl);\n\n      if (this.showArrow) {\n        this.addElWithArrow();\n      }\n\n      this.renderer.insertBefore(this.parentEl, this.SROnlyOldEl, nativeElement);\n    }\n  }\n\n  private cleanUpContent(changedEl: HTMLElement) {\n    this.renderer.removeClass(changedEl, highlightValueClass);\n    this.renderer.removeClass(this.elRef.nativeElement, crossOutValueClass);\n    this.renderer.removeChild(this.parentEl, changedEl);\n    this.renderer.removeChild(this.parentEl, this.SROnlyOldEl);\n    this.renderer.removeChild(this.parentEl, this.SROnlyNewEl);\n\n    if (this.arrow) {\n      this.renderer.removeChild(this.parentEl, this.arrow);\n    }\n  }\n\n  private createA11ySpan(content: string): HTMLElement {\n    const SROnlySpan = this.renderer.createElement('span');\n    this.renderer.addClass(SROnlySpan, 'sr-only');\n    this.renderer.setProperty(SROnlySpan, 'textContent', content);\n\n    return SROnlySpan;\n  }\n\n  private addElWithArrow() {\n    if (!this.arrow) {\n      const iconClass = this.isPositionBefore ? valueDiffArrowLeftClass : valueDiffArrowRightClass;\n\n      this.arrow = this.renderer.createElement('i');\n      this.renderer.addClass(this.arrow, iconClass);\n    }\n\n    this.renderer.insertBefore(this.parentEl, this.arrow, this.getSiblingEl());\n  }\n\n  private getSiblingEl(): HTMLElement {\n    return this.isPositionBefore ? this.elRef.nativeElement : this.elRef.nativeElement.nextElementSibling;\n  }\n\n  private onValueChanged(newData: string) {\n    this.valueChanged$.next({ newData });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ValueDiffDirective } from './bb-value-diff.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ValueDiffDirective],\n  exports: [ValueDiffDirective],\n})\nexport class ValueDiffDirectiveModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;IAEY,kBAGX;AAHD,CAAA,UAAY,iBAAiB,EAAA;AAC3B,IAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,iBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACjB,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,GAG5B,EAAA,CAAA,CAAA,CAAA;AAMM,MAAM,mBAAmB,GAAG,4BAA4B,CAAC;AACzD,MAAM,kBAAkB,GAAG,wBAAwB,CAAC;AAEpD,MAAM,uBAAuB,GAAG,2BAA2B,CAAC;AAC5D,MAAM,wBAAwB,GAAG,4BAA4B,CAAC;AAE9D,MAAM,eAAe,GAAG,SAAS,CAAA,kDAAkD,CAAC;AACpF,MAAM,eAAe,GAAG,SAAS,CAAA,oDAAoD;;MCD/E,kBAAkB,CAAA;AA0E7B,IAAA,WAAA,CACmB,KAAiB,EACjB,QAAmB,EACnB,KAAwB,EAAA;QAFxB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAY;QACjB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QACnB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAmB;AA5E1B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACjC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,OAAO,EAAyB,CAAC;AAErD,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;AACnD,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAE5D,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;AACf,QAAA,IAAA,CAAA,SAAS,GAAG,iBAAiB,CAAC,MAAM,CAAC;AAgD7C;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;KAkBvB;AAnEJ;;AAEG;IACH,IACI,QAAQ,CAAC,KAAa,EAAA;AACxB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAC5B;AAED,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;AAED;;;AAGG;IACH,IACI,QAAQ,CAAC,GAAsB,EAAA;AACjC,QAAA,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AACrB,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACrC;AAED,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;AAED;;;AAGG;IACH,IACI,SAAS,CAAC,GAAW,EAAA;AACvB,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;KACjE;AAED;;;AAGG;IACH,IACI,SAAS,CAAC,GAAW,EAAA;AACvB,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,GAAG,CAAC,CAAC;KACjE;AAQO,IAAA,OAAO,OAAO,CAAC,OAAe,EAAE,SAAsB,EAAA;QAC5D,OAAO,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,OAAO,CAAC;KAC/C;AAED,IAAA,IAAY,gBAAgB,GAAA;AAC1B,QAAA,OAAO,IAAI,CAAC,SAAS,KAAK,iBAAiB,CAAC,MAAM,CAAC;KACpD;AAED,IAAA,IAAY,QAAQ,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC;KAC/C;IAQD,kBAAkB,GAAA;AAChB,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAE3D,QAAA,IAAI,CAAC,aAAa;aACf,IAAI,CACH,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EACzD,MAAM,CAAC,CAAC,EAAE,OAAO,EAAyB,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,EAC9G,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;AACA,aAAA,SAAS,CAAC,CAAC,EAAE,OAAO,EAAyB,KAAI;AAChD,YAAA,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;AAC7D,YAAA,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACjC,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;AAEO,IAAA,cAAc,CAAC,SAAsB,EAAA;AAC3C,QAAA,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAErC,IAAI,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE;AAClE,YAAA,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAChC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;AAE1D,YAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;AAC1E,YAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YAEvE,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,cAAc,EAAE,CAAC;AACvB,aAAA;AAED,YAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AAC5E,SAAA;KACF;AAEO,IAAA,cAAc,CAAC,SAAsB,EAAA;QAC3C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;AAC1D,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACpD,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3D,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACtD,SAAA;KACF;AAEO,IAAA,cAAc,CAAC,OAAe,EAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;AAE9D,QAAA,OAAO,UAAU,CAAC;KACnB;IAEO,cAAc,GAAA;AACpB,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACf,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,uBAAuB,GAAG,wBAAwB,CAAC;YAE7F,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC/C,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KAC5E;IAEO,YAAY,GAAA;QAClB,OAAO,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,kBAAkB,CAAC;KACvG;AAEO,IAAA,cAAc,CAAC,OAAe,EAAA;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;KACtC;;gHA7JU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oGAAlB,kBAAkB,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,aAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,CAAA,aAAA,EAAA,WAAA,CAAA,EAAA,SAAA,EAAA,CAAA,aAAA,EAAA,WAAA,CAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;AAC1B,iBAAA,CAAA;yJAgBK,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,aAAa,CAAA;gBAehB,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAeF,SAAS,EAAA,CAAA;sBADZ,KAAK;uBAAC,aAAa,CAAA;gBAUhB,SAAS,EAAA,CAAA;sBADZ,KAAK;uBAAC,aAAa,CAAA;gBASX,SAAS,EAAA,CAAA;sBAAjB,KAAK;;;MCpEK,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAHpB,YAAA,EAAA,CAAA,kBAAkB,CADvB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,kBAAkB,CAAA,EAAA,CAAA,CAAA;uHAEjB,wBAAwB,EAAA,OAAA,EAAA,CAJ1B,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;4FAIZ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;AAC9B,iBAAA,CAAA;;;ACRD;;AAEG;;;;"}