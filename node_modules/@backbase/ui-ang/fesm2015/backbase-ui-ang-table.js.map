{"version":3,"file":"backbase-ui-ang-table.js","sources":["../../../../libs/ui-ang/table/directives/table.directive.ts","../../../../libs/ui-ang/table/directives/table-row.directive.ts","../../../../libs/ui-ang/table/directives/table-sortable.directive.ts","../../../../libs/ui-ang/table/directives/table-focus.directive.ts","../../../../libs/ui-ang/table/table.module.ts","../../../../libs/ui-ang/table/backbase-ui-ang-table.ts"],"sourcesContent":["import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { SortEvent, TableSortableDirective } from './table-sortable.directive';\n\n/**\n * @name TableDirective\n *\n * @description\n * Directive that displays a table.\n *\n * @a11y\n * The table directive doesn't provide any specific properties for accessibility.\n * But aria-sort tag can be set on the sortable header cells with ascending and descending values.\n *\n */\n@Directive({\n  selector: 'table[bbTable]',\n})\nexport class TableDirective {\n  /**\n   * The data source for the table.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('bbTable') dataSource?: Array<Object>;\n  /**\n   * An event emitter for on select row action.\n   */\n  @Output() selectRow = new EventEmitter();\n  /**\n   * An event emitter for on row click action.\n   */\n  @Output() rowClick = new EventEmitter();\n  /**\n   * An event emitter for on column sort action.\n   */\n  @Output() sort = new EventEmitter();\n\n  selectedRows: Set<Object> = new Set();\n  headers: Set<TableSortableDirective> = new Set();\n\n  registerHeader(header: TableSortableDirective) {\n    this.headers.add(header);\n  }\n\n  unRegisterHeader(header: TableSortableDirective) {\n    this.headers.delete(header);\n  }\n\n  onRowClick(rowItem: any) {\n    this.rowClick.emit(rowItem);\n  }\n\n  isSelected(row: any): boolean {\n    return this.selectedRows.has(row);\n  }\n\n  toggleItem(row: any, isChecked: boolean) {\n    if (isChecked) {\n      this.selectedRows.add(row);\n    } else {\n      this.selectedRows.delete(row);\n    }\n    this.selectRow.emit(this.selectedRows);\n  }\n\n  toggleAllItems() {\n    if (this.isSelectedAll()) {\n      this.selectedRows = new Set();\n    } else {\n      this.selectedRows = new Set(this.dataSource);\n    }\n    this.selectRow.emit(this.selectedRows);\n  }\n\n  isSelectedAll(): boolean {\n    if (this.dataSource) {\n      const matches = this.dataSource.filter((item) => this.selectedRows.has(item));\n\n      return matches.length === this.dataSource.length;\n    }\n\n    return false;\n  }\n\n  isSelectedPart(): boolean {\n    if (this.dataSource) {\n      return this.selectedRows.size > 0 && this.selectedRows.size < this.dataSource.length;\n    }\n\n    return false;\n  }\n\n  onSort(sortEvent: SortEvent) {\n    this.headers.forEach((header) => {\n      if (header.bbSortable !== sortEvent.column) {\n        header.direction = '';\n        header.markAllMenuOptionAsInactive();\n      }\n    });\n    this.sort.emit(sortEvent);\n  }\n}\n","import { Directive, HostBinding, HostListener, Input } from '@angular/core';\nimport { TableDirective } from './table.directive';\n\n@Directive({\n  selector: 'tr[bbRow]',\n})\nexport class TableRowDirective {\n  /**\n   * The data of the row element\n   */\n  @Input() bbRow: any;\n\n  @HostBinding('class.selected')\n  get selected() {\n    return this.parentTable.isSelected(this.bbRow);\n  }\n\n  constructor(private readonly parentTable: TableDirective) {}\n\n  @HostListener('click')\n  onRowClick() {\n    this.parentTable.onRowClick(this.bbRow);\n  }\n}\n","import {\n  AfterViewInit,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\nimport { merge, Observable } from 'rxjs';\nimport { DropdownMenuToken, DropdownMenuOptionToken } from '@backbase/ui-ang/dropdown-menu';\nimport { TableDirective } from './table.directive';\n\nexport type SortDirection = 'asc' | 'desc' | '';\nconst rotate: { [key: string]: SortDirection } = { asc: 'desc', desc: '', '': 'asc' };\n\nexport interface SortEvent {\n  column: string;\n  direction: SortDirection;\n}\n\n@Directive({\n  selector: 'th[bbSortable]',\n})\nexport class TableSortableDirective implements AfterViewInit, OnDestroy {\n  /**\n   * The name of the column to be sorted\n   */\n  @Input() bbSortable?: string;\n  /**\n   * The current sort direction. Accepts one of the values of 'asc', 'desc' or ''\n   */\n  @Input() direction: SortDirection = '';\n  /**\n   * An event emitter for on sort actions.\n   */\n  @Output() sort = new EventEmitter<SortEvent>();\n\n  @ContentChild(DropdownMenuToken) dropdown: DropdownMenuToken | undefined;\n  @ContentChildren(DropdownMenuOptionToken, { descendants: true })\n  bbMenuOptions!: QueryList<DropdownMenuOptionToken>;\n\n  constructor(private readonly parentTable: TableDirective, private readonly renderer: Renderer2) {\n    this.parentTable.registerHeader(this);\n  }\n\n  @HostBinding('class.sortable') sortable = true;\n\n  @HostBinding('class.asc')\n  get asc(): boolean {\n    return this.direction === 'asc';\n  }\n\n  @HostBinding('class.desc')\n  get desc(): boolean {\n    return this.direction === 'desc';\n  }\n\n  @HostListener('click')\n  @HostListener('keyup.enter')\n  @HostListener('keyup.space')\n  rotate() {\n    if (this.dropdown) {\n      return;\n    }\n    this.emitSortEvent();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.dropdown) {\n      this.presetDropdown(this.dropdown);\n    }\n    this.getMenuOptionSelectionChanges(this.bbMenuOptions).subscribe((menuOption) =>\n      this.onMenuOptionSelect(menuOption),\n    );\n  }\n\n  onMenuOptionSelect(menuOption: DropdownMenuOptionToken): void {\n    const columnValue = menuOption.bbDropdownMenuOption;\n    const activeMenuOption = this.bbMenuOptions?.find((option) => option.active);\n    // Reset currently active item\n    if (activeMenuOption) {\n      activeMenuOption.active = false;\n    }\n    // If same menu item is not clicked, then reset the direction for new menuitem\n    if (activeMenuOption && columnValue !== activeMenuOption.bbDropdownMenuOption) {\n      this.direction = '';\n    }\n    this.bbSortable = menuOption.bbDropdownMenuOption;\n    this.emitSortEvent();\n    this.markMenuOptionAsActive(menuOption);\n    this.updateAriaSortAttribute();\n  }\n\n  /** Notify table with new sorting params */\n  emitSortEvent(): void {\n    if (this.bbSortable) {\n      this.direction = rotate[this.direction];\n      this.parentTable.onSort({ column: this.bbSortable, direction: this.direction });\n    }\n  }\n\n  /** Combined stream of all of the bbTableMenuitem selectionChange events. */\n  getMenuOptionSelectionChanges(menuOptions: QueryList<DropdownMenuOptionToken>) {\n    return menuOptions.changes.pipe(\n      switchMap((_) => merge(...menuOptions.map((menuOption) => menuOption.selectionChange))),\n    ) as Observable<DropdownMenuOptionToken>;\n  }\n\n  /** mark the new menuitem as active only if sorting order is asc/desc */\n  markMenuOptionAsActive(menuOption: DropdownMenuOptionToken): void {\n    if (this.direction !== '') {\n      menuOption.active = true;\n    }\n  }\n\n  markAllMenuOptionAsInactive(): void {\n    if (this.bbMenuOptions.length) {\n      this.bbMenuOptions.forEach((menuOption) => (menuOption.active = false));\n    }\n  }\n\n  updateAriaSortAttribute(): void {\n    if (this.dropdown) {\n      const buttonEl = this.dropdown.buttonEl?.nativeElement;\n      if (!this.direction) {\n        this.renderer.removeAttribute(buttonEl, 'aria-sort');\n      } else {\n        this.renderer.setAttribute(buttonEl, 'aria-sort', this.getAriaSortAttribute(this.direction));\n      }\n    }\n  }\n\n  private getAriaSortAttribute(direction: SortDirection): string {\n    return direction === 'asc' ? 'ascending' : 'descending';\n  }\n\n  /** Preset bb-dropdown button to add role for a11y and set full height and width of table column */\n  private presetDropdown(dropdown: DropdownMenuToken): void {\n    const buttonEl = dropdown.buttonEl?.nativeElement;\n    this.renderer.setAttribute(buttonEl, 'role', 'columnheader');\n    this.renderer.setStyle(buttonEl, 'height', '100%');\n    this.renderer.setStyle(buttonEl, 'width', '100%');\n  }\n\n  ngOnDestroy(): void {\n    this.parentTable.unRegisterHeader(this);\n  }\n}\n","import {\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\n\nimport { TableRowDirective } from './table-row.directive';\nimport { getKeyCode, KEY_CODES } from '@backbase/ui-ang/util';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: '[bbTableFocus]',\n})\nexport class TableFocusDirective implements AfterViewInit, OnDestroy {\n  private focusedItemIndex = -1;\n  @ContentChildren(TableRowDirective, { read: ElementRef, descendants: true, emitDistinctChangesOnly: false })\n  listItems!: QueryList<ElementRef>;\n\n  @Input() focusFirstRowOnChanges = false;\n\n  private destroy$ = new Subject();\n\n  constructor(private readonly renderer: Renderer2) {}\n\n  @HostListener('keydown', ['$event'])\n  onKeyEvent(event: KeyboardEvent) {\n    switch (getKeyCode(event)) {\n      case KEY_CODES.DOWN:\n        this.focusedItemIndex = Math.min(this.focusedItemIndex + 1, this.listItems.length - 1);\n        this.focusItem();\n        event.preventDefault();\n        break;\n      case KEY_CODES.UP:\n        this.focusedItemIndex = Math.max(this.focusedItemIndex - 1, 0);\n        this.focusItem();\n        event.preventDefault();\n        break;\n      case KEY_CODES.ENTER:\n        const currentActiveItem = this.listItems.find((item, index) => index === this.focusedItemIndex);\n        if (currentActiveItem) {\n          currentActiveItem.nativeElement.click();\n          event.preventDefault();\n        }\n        break;\n    }\n  }\n\n  private focusItem(focusNativeElement = true) {\n    this.listItems.forEach((el, index) => {\n      if (index === this.focusedItemIndex) {\n        this.renderer.addClass(el.nativeElement, 'active');\n        this.renderer.setAttribute(el.nativeElement, 'tabIndex', '0');\n        if (focusNativeElement) {\n          el.nativeElement.focus();\n        }\n      } else {\n        this.renderer.removeClass(el.nativeElement, 'active');\n        this.renderer.setAttribute(el.nativeElement, 'tabIndex', '-1');\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  ngAfterViewInit(): void {\n    // make first row in a table focusable\n    this.listItems.changes.pipe(takeUntil(this.destroy$)).subscribe((items) => {\n      if (items.first?.nativeElement) {\n        this.focusedItemIndex = 0;\n        this.focusItem(this.focusFirstRowOnChanges);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TableDirective } from './directives/table.directive';\nimport { TableRowDirective } from './directives/table-row.directive';\nimport { TableSortableDirective } from './directives/table-sortable.directive';\nimport { TableFocusDirective } from './directives/table-focus.directive';\n\nconst directives = [TableRowDirective, TableDirective, TableSortableDirective, TableFocusDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...directives],\n  exports: [...directives],\n})\nexport class TableModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.TableDirective"],"mappings":"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"}