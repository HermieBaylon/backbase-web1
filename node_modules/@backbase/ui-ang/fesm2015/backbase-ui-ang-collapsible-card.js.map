{"version":3,"file":"backbase-ui-ang-collapsible-card.js","sources":["../../../../libs/ui-ang/collapsible-card/collapsible-card.component.ts","../../../../libs/ui-ang/collapsible-card/collapsible-card.component.html","../../../../libs/ui-ang/collapsible-card/collapsible-card.module.ts","../../../../libs/ui-ang/collapsible-card/backbase-ui-ang-collapsible-card.ts"],"sourcesContent":["import { Component, EventEmitter, Host, Input, OnDestroy, Optional, Output } from '@angular/core';\nimport { CollapsibleAccordionComponent, ICollapsible } from '@backbase/ui-ang/collapsible-accordion';\n\nexport type CollapsibleCardSize = 'sm' | 'md' | 'lg';\n\n/**\n * @name CollapsibleCardComponent\n *\n * @description\n * Provides an expandable details-summary/body-header view.\n * Uses bb-collapsible-ui for a predefined template\n *\n * @a11y ariaLabelForIcon is discernible text for chevron icon\n */\n@Component({\n  selector: 'bb-collapsible-card-ui',\n  templateUrl: 'collapsible-card.component.html',\n})\nexport class CollapsibleCardComponent implements ICollapsible, OnDestroy {\n  private open = false;\n\n  /**\n   * Toggles the content.\n   */\n  @Input()\n  set isOpen(v: boolean) {\n    this.open = v;\n    this.isOpenChange.emit(v);\n  }\n\n  get isOpen() {\n    return this.open;\n  }\n\n  /**\n   * Accessible label for chevron icon.\n   */\n  @Input() ariaLabelForIcon = 'Chevron icon';\n  /**\n   * Accessible label for collapsible card\n   */\n  @Input('aria-label') ariaLabel: string | null = 'toggle';\n  /**\n   * Whether chevron should be displayed.\n   *\n   * @default true\n   */\n  @Input() hasChevron = true;\n  /**\n   * Whether card should be highlighted.\n   *\n   * @default false\n   */\n  @Input() highlight = false;\n  /**\n   * Whether card should has shadow effect.\n   *\n   * @default true\n   */\n  @Input() shadow = true;\n  /**\n   * Card size\n   *\n   * @default 'md'\n   */\n  @Input() size: CollapsibleCardSize = 'md';\n\n  @Output() isOpenChange = new EventEmitter<boolean>();\n\n  constructor(\n    @Optional()\n    @Host()\n    private readonly bbCollapsibleAccordion: CollapsibleAccordionComponent,\n  ) {\n    if (this.bbCollapsibleAccordion) {\n      this.bbCollapsibleAccordion.registerNestedPanel(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.bbCollapsibleAccordion) {\n      this.bbCollapsibleAccordion.unregisterNestedPanel(this);\n    }\n  }\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n}\n","<bb-collapsible-ui\n  [(isOpen)]=\"isOpen\"\n  class=\"bb-card bb-card--collapsible bb-card--{{ size }}\"\n  [ngClass]=\"{\n    'bb-card--highlight': highlight,\n    'bb-card--shadowless': !shadow\n  }\"\n>\n  <ng-template bbCollapsibleHeader let-toggle=\"toggle\">\n    <div\n      data-role=\"bb-collapsible-card-header\"\n      class=\"bb-card__header bb-card__header--only-child\"\n      role=\"button\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-expanded]=\"isOpen\"\n      tabindex=\"0\"\n      (bbKeyboardClick)=\"toggle()\"\n    >\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"><ng-content select=\"[bbCollapsibleTitle]\"></ng-content></div>\n        <bb-icon-ui\n          [aria-label]=\"ariaLabelForIcon\"\n          *ngIf=\"hasChevron\"\n          class=\"bb-stack__item\"\n          name=\"{{ isOpen ? 'expand-less' : 'expand-more' }}\"\n          data-role=\"bb-collapsible-card-header__icon\"\n        ></bb-icon-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template bbCollapsibleBody>\n    <div class=\"bb-card__body\" data-role=\"bb-collapsible-card-body\">\n      <ng-content select=\"[bbCollapsibleBody]\"></ng-content>\n    </div>\n  </ng-template>\n</bb-collapsible-ui>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CollapsibleCardComponent } from './collapsible-card.component';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n\n@NgModule({\n  imports: [CollapsibleModule, CommonModule, IconModule, KeyboardClickModule],\n  declarations: [CollapsibleCardComponent],\n  exports: [CollapsibleCardComponent],\n})\nexport class CollapsibleCardModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}