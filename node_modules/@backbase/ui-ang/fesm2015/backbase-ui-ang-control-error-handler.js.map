{"version":3,"file":"backbase-ui-ang-control-error-handler.js","sources":["../../../../libs/ui-ang/control-error-handler/directives/form-submit.directive.ts","../../../../libs/ui-ang/control-error-handler/components/validation-message/validation-message.component.ts","../../../../libs/ui-ang/control-error-handler/components/validation-message/validation-message.component.html","../../../../libs/ui-ang/control-error-handler/directives/control-error-container.directive.ts","../../../../libs/ui-ang/control-error-handler/control-error-handler.const.ts","../../../../libs/ui-ang/control-error-handler/directives/validation-errors.directive.ts","../../../../libs/ui-ang/control-error-handler/control-error-handler.module.ts","../../../../libs/ui-ang/control-error-handler/backbase-ui-ang-control-error-handler.ts"],"sourcesContent":["import { Directive, ElementRef } from '@angular/core';\nimport { fromEvent, Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n@Directive({\n  selector: 'form[bbFormSubmit]',\n})\nexport class FormSubmitDirective {\n  private readonly element = this.elementRef.nativeElement;\n  readonly submit: Observable<Event> = fromEvent<Event>(this.element, 'submit').pipe(\n    shareReplay({ bufferSize: 1, refCount: true }),\n  );\n\n  constructor(private readonly elementRef: ElementRef<HTMLFormElement>) {}\n}\n","import { Component } from '@angular/core';\nimport { ValidationErrorComponentModel } from '../../control-error-handler.const';\nimport { errorMessageAnimation } from '@backbase/ui-ang/util';\n\nlet _uniqueId = 0;\n\n/**\n * @name ValidationMessageComponent\n *\n * @description\n * Dynamic component that displays a control validation message dependence on validation.\n */\n@Component({\n  selector: 'bb-validation-message-ui',\n  templateUrl: 'validation-message.component.html',\n  animations: [errorMessageAnimation],\n})\nexport class ValidationMessageComponent implements ValidationErrorComponentModel {\n  readonly errorId = `bb-error-message-${_uniqueId++}`;\n\n  text: string | undefined;\n}\n","<small @errorMessageAnimation *ngIf=\"text\" [id]=\"errorId\" role=\"alert\" class=\"bb-input-validation-message\">\n  {{ text }}\n</small>\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[bbControlErrorContainer]',\n})\nexport class ControlErrorContainerDirective {\n  constructor(public readonly vcr: ViewContainerRef) {}\n}\n","import { InjectionToken, Type } from '@angular/core';\nimport { ValidationMessageComponent } from './components/validation-message/validation-message.component';\nimport '@angular/localize/init';\nimport { NgControl } from '@angular/forms';\n\nexport interface PlainObject<T> {\n  [key: string]: (params: any) => T;\n}\n\nexport interface ValidationErrorComponentModel {\n  errorId: string;\n  text: string | undefined;\n  control?: NgControl;\n  errorList?: PlainObject<string>;\n  label?: string;\n}\n\nexport const BB_VALIDATION_ERRORS = new InjectionToken('BB_VALIDATION_ERRORS', {\n  providedIn: 'root',\n  factory: () => defaultFromErrors,\n});\n\nexport const BB_DYNAMIC_VALIDATION_ERROR_TMPL = new InjectionToken<Type<ValidationErrorComponentModel>>(\n  'BB_DYNAMIC_VALIDATION_ERROR_TMPL',\n  {\n    providedIn: 'root',\n    factory: () => ValidationMessageComponent,\n  },\n);\n\nexport const defaultFromErrors: PlainObject<string> = {\n  invalid: () => $localize`:@@validation-form-invalid-error:Field is invalid`,\n  required: () => $localize`:@@validation-form-required-error:Field is required`,\n  minlength: ({ requiredLength }) => {\n    const singleStr = $localize`:@@validation-form-minlength-error-single:\n    Must be shorter then ${requiredLength} character`;\n    const multipleStr = $localize`:@@validation-form-minlength-error-multiple:\n    Must be shorter then ${requiredLength} characters`;\n\n    return requiredLength === 1 ? singleStr : multipleStr;\n  },\n  maxlength: ({ requiredLength }) => {\n    const singleStr = $localize`:@@validation-form-minlength-error-single:\n    Must be at least ${requiredLength} character long`;\n    const multipleStr = $localize`:@@validation-form-minlength-error-multiple:\n    Must be at least ${requiredLength} characters long`;\n\n    return requiredLength === 1 ? singleStr : multipleStr;\n  },\n  min: ({ min }) => $localize`:@@validation-form-min-error:Expect value to be bigger than ${min}`,\n  max: ({ max }) => $localize`:@@validation-form-max-error:Expect value to be less than ${max}`,\n  email: () => $localize`:@@validation-form-email-error:Not a valid email`,\n};\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Host,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  Self,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { EMPTY, merge, Observable, Subject } from 'rxjs';\nimport { debounceTime, first, takeUntil } from 'rxjs/operators';\nimport {\n  BB_DYNAMIC_VALIDATION_ERROR_TMPL,\n  BB_VALIDATION_ERRORS,\n  ValidationErrorComponentModel,\n  PlainObject,\n} from '../control-error-handler.const';\nimport { FormSubmitDirective } from './form-submit.directive';\nimport { idListAttr } from '@backbase/ui-ang/util';\nimport { ControlErrorContainerDirective } from './control-error-container.directive';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[bbFormControl]',\n})\nexport class ValidationErrorsDirective implements OnInit, OnDestroy {\n  private readonly onBlur = new Subject<void>();\n  private readonly destroy = new Subject<void>();\n  private readonly submit: Observable<Event>;\n  private readonly ariaAttributeName = 'aria-describedby';\n\n  private ref: ComponentRef<any> | undefined;\n\n  /**\n   * Custom error labels object.\n   *\n   * Use only if you need to set custom error labels for specific control.\n   * To specify custom error labels for entire form use BB_VALIDATION_ERRORS InjectionToken.\n   *\n   * @default `BB_VALIDATION_ERRORS`.\n   */\n  @Input() errorLabels: PlainObject<string> = {};\n\n  /**\n   * Custom function to specify when errors should be shown.\n   * By default will be shown when control is invalid.\n   */\n  @Input() showError = this.showErrorDefault;\n\n  /**\n   * Selector to indicate the control in which `aria-describedby` should be set.\n   */\n  @Input() inputSelector = '.form-control';\n\n  /**\n   * Input label\n   */\n  @Input() label: string | null = null;\n\n  /**\n   * Custom component for error message.\n   *\n   * Use only if you need to set custom component for specific control.\n   * To specify custom component for all form errors use BB_DYNAMIC_ERROR_TMPL InjectionToken.\n   *\n   * @default `BB_DYNAMIC_ERROR_TMPL`.\n   */\n  @Input() errorComponent = this.errorTmpl;\n\n  @HostListener('blur') onElBlur() {\n    this.onBlur.next();\n  }\n\n  constructor(\n    @Optional() @Host() private readonly form: FormSubmitDirective,\n    @Optional() private readonly controlErrorContainer: ControlErrorContainerDirective,\n    @Self() private readonly control: NgControl,\n    @Inject(BB_VALIDATION_ERRORS) private readonly errors: PlainObject<string>,\n    @Inject(BB_DYNAMIC_VALIDATION_ERROR_TMPL) private readonly errorTmpl: Type<ValidationErrorComponentModel>,\n    private readonly resolver: ComponentFactoryResolver,\n    private readonly vcr: ViewContainerRef,\n    private readonly hostElem: ElementRef<HTMLElement>,\n    private readonly renderer: Renderer2,\n  ) {\n    this.submit = this.form ? this.form.submit : EMPTY;\n\n    if (!this.control) {\n      throw Error('bbFormControl must contain a NgControl.');\n    }\n  }\n\n  ngOnInit() {\n    const controlChanges = this.control.valueChanges ? this.control.valueChanges : EMPTY;\n\n    merge(\n      controlChanges,\n      this.submit,\n      this.onBlur.pipe(first()), // to detect first invalid state if no control changes happened.\n    )\n      .pipe(debounceTime(100), takeUntil(this.destroy))\n      .subscribe(() => this.manageErrors());\n  }\n\n  ngOnDestroy() {\n    this.destroy.next();\n    this.destroy.complete();\n  }\n\n  private manageErrors() {\n    const controlErrors = this.control.errors;\n\n    if (controlErrors && this.showError()) {\n      const errorList = { ...this.errors, ...this.errorLabels };\n      const firstKey = Object.keys(controlErrors)[0];\n      const getError = errorList[firstKey] || errorList.invalid;\n      const text = getError(controlErrors[firstKey]);\n\n      // TODO: add aria-invalid?\n      if (this.ref?.instance.text !== text) {\n        this.setError(text);\n        this.setDescribedById(this.ref?.instance.errorId);\n      }\n    } else if (this.ref) {\n      this.setError('');\n      this.removeErrorId(this.ref?.instance.errorId);\n    }\n  }\n\n  private setDescribedById(id: string | undefined) {\n    const targetEl = this.hostElem.nativeElement.querySelector(this.inputSelector);\n\n    if (targetEl) {\n      const existingIds = targetEl.getAttribute(this.ariaAttributeName);\n      const attributeVal = idListAttr(id, existingIds);\n\n      if (attributeVal) {\n        this.renderer.setAttribute(targetEl, this.ariaAttributeName, attributeVal);\n      }\n    }\n  }\n\n  private removeErrorId(id: string | undefined) {\n    const targetEl = this.hostElem.nativeElement.querySelector(this.inputSelector);\n\n    if (targetEl) {\n      const existingIds = targetEl.getAttribute(this.ariaAttributeName) || '';\n      const cleanIds = (id ? existingIds.replace(id, '') : existingIds).trim();\n\n      if (cleanIds) {\n        this.renderer.setAttribute(targetEl, this.ariaAttributeName, cleanIds);\n      } else {\n        this.renderer.removeAttribute(targetEl, this.ariaAttributeName);\n      }\n    }\n  }\n\n  private showErrorDefault(): boolean {\n    return Boolean(this.control.invalid);\n  }\n\n  private setError(text: string) {\n    if (!this.ref) {\n      const container = this.controlErrorContainer?.vcr || this.vcr;\n      const factory = this.resolver.resolveComponentFactory<ValidationErrorComponentModel>(this.errorComponent);\n\n      this.ref = container.createComponent(factory);\n    }\n\n    this.ref.instance.text = text;\n\n    // Setup this properties in case of custom validation error component to give possibility to customise behavior.\n    this.ref.instance.control = this.control;\n    this.ref.instance.errorList = { ...this.errors, ...this.errorLabels };\n    this.ref.instance.label = this.label;\n\n    this.ref.changeDetectorRef.detectChanges();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ValidationMessageComponent } from './components/validation-message/validation-message.component';\nimport { ControlErrorContainerDirective } from './directives/control-error-container.directive';\nimport { FormSubmitDirective } from './directives/form-submit.directive';\nimport { ValidationErrorsDirective } from './directives/validation-errors.directive';\n\nconst directives = [ValidationErrorsDirective, FormSubmitDirective, ControlErrorContainerDirective];\nconst components = [ValidationMessageComponent];\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...directives, ...components],\n  exports: [...directives, ...components],\n})\nexport class ControlErrorHandlerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.FormSubmitDirective","i2.ControlErrorContainerDirective"],"mappings":"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"}