import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';
import * as i4 from '@backbase/ui-ang/button';
import { ButtonModule } from '@backbase/ui-ang/button';
import * as i2 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';
import * as i1 from '@backbase/ui-ang/icon';
import { IconModule } from '@backbase/ui-ang/icon';

/**
 * @name ModeHeaderComponent
 *
 * @description
 * Component that displays a mode header.
 */
class ModeHeaderComponent {
    constructor() {
        /**
         * Whether or not to show the close button. Defaults to true.
         */
        this.showCloseButton = true;
        /**
         * Whether or not the order of title elements is reversed.
         */
        this.reverseTitleOrder = true;
        /**
         * Event fired when the close button is clicked.
         */
        this.close = new EventEmitter();
    }
}
ModeHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ModeHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModeHeaderComponent, selector: "bb-mode-header-ui", inputs: { title: "title", secondaryTitle: "secondaryTitle", showCloseButton: "showCloseButton", closeButtonAriaLabel: "closeButtonAriaLabel", reverseTitleOrder: "reverseTitleOrder" }, outputs: { close: "close" }, ngImport: i0, template: "<div class=\"bb-mode-header\">\n  <div class=\"bb-stack bb-stack--density-md\">\n    <div *ngIf=\"showCloseButton\" class=\"bb-stack__item\">\n      <button\n        bbButton\n        buttonSize=\"md\"\n        circle=\"true\"\n        color=\"primary\"\n        [attr.aria-label]=\"closeButtonAriaLabel\"\n        (click)=\"close.emit()\"\n        data-role=\"mode-header-close-button\"\n      >\n        <bb-icon-ui name=\"clear\"></bb-icon-ui>\n      </button>\n    </div>\n    <div class=\"bb-stack__item\" data-role=\"mode-header-icon\">\n      <ng-content select=\"[mode-header-icon]\"></ng-content>\n    </div>\n    <div\n      class=\"bb-stack__item bb-mode-header__title-area\"\n      [class.bb-mode-header__title-area--reversed]=\"reverseTitleOrder\"\n    >\n      <div class=\"bb-stack\">\n        <bb-header-ui\n          headingType=\"h2\"\n          headingClasses=\"bb-text--mode-header\"\n          [heading]=\"title\"\n          data-role=\"mode-header-primary-header\"\n          class=\"bb-stack__item\"\n        ></bb-header-ui>\n        <div class=\"bb-stack__item\" data-role=\"mode-header-status\">\n          <ng-content select=\"[mode-header-status]\"></ng-content>\n        </div>\n      </div>\n      <span *ngIf=\"secondaryTitle\" class=\"bb-subtitle\" data-role=\"mode-header-secondary-header\">{{\n        secondaryTitle\n      }}</span>\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--push-right\" data-role=\"mode-header-utility-area\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <ng-content select=\"[mode-header-utility-area]\"></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-mode-header-ui',
                    templateUrl: './mode-header.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { title: [{
                type: Input
            }], secondaryTitle: [{
                type: Input
            }], showCloseButton: [{
                type: Input
            }], closeButtonAriaLabel: [{
                type: Input
            }], reverseTitleOrder: [{
                type: Input
            }], close: [{
                type: Output
            }] } });

class ModeHeaderModule {
}
ModeHeaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ModeHeaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderModule, declarations: [ModeHeaderComponent], imports: [CommonModule, ButtonModule, IconModule, HeaderModule], exports: [ModeHeaderComponent] });
ModeHeaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderModule, imports: [[CommonModule, ButtonModule, IconModule, HeaderModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ModeHeaderModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ButtonModule, IconModule, HeaderModule],
                    declarations: [ModeHeaderComponent],
                    exports: [ModeHeaderComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { ModeHeaderComponent, ModeHeaderModule };
//# sourceMappingURL=backbase-ui-ang-mode-header.js.map
