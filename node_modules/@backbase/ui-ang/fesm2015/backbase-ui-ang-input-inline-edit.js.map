{"version":3,"file":"backbase-ui-ang-input-inline-edit.js","sources":["../../../../libs/ui-ang/input-inline-edit/input-inline-edit.model.ts","../../../../libs/ui-ang/input-inline-edit/input-inline-edit.component.ts","../../../../libs/ui-ang/input-inline-edit/input-inline-edit.component.html","../../../../libs/ui-ang/input-inline-edit/input-inline-edit.module.ts","../../../../libs/ui-ang/input-inline-edit/backbase-ui-ang-input-inline-edit.ts"],"sourcesContent":["import '@angular/localize/init';\n\nexport const defaultAriaLabels = {\n  accept: $localize`:Aria label for accept button@@input-inline-edit-ui.button.aria-label.accept:Accept`,\n  edit: $localize`:Aria label for edit button@@input-inline-edit-ui.button.aria-label.edit:Edit`,\n  cancel: $localize`:Aria label for cancel button@@input-inline-edit-ui.button.aria-label.cancel:Cancel`,\n};\n\nexport const defaultTooltips = { ...defaultAriaLabels };\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Input,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { FormControl, FormGroup, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\n\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\n\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { DomAttributesService } from '@backbase/ui-ang/services';\nimport { defaultAriaLabels, defaultTooltips } from './input-inline-edit.model';\nimport { idListAttr } from '@backbase/ui-ang/util';\n\nexport enum InputInlineEditState {\n  IDLE,\n  LOADING,\n  EDITING,\n}\n\n/**\n * @name InputInlineEditComponent\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n * @description\n * Component that enables inline input editing.\n */\n@Component({\n  selector: 'bb-input-inline-edit-ui',\n  templateUrl: './input-inline-edit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputInlineEditComponent),\n      multi: true,\n    },\n  ],\n})\nexport class InputInlineEditComponent extends InputBaseComponent implements AfterContentInit {\n  private _state = InputInlineEditState.IDLE;\n  private _inputText: string | undefined;\n\n  /**\n   * State for inline edit\n   */\n  @Input() set state(value: InputInlineEditState) {\n    this._state = value;\n\n    if (this.vForm && value === InputInlineEditState.IDLE) {\n      this.vForm.controls.inputInline.setValue(this._inputText);\n    }\n  }\n  /**\n   * Emit on edit state changes\n   */\n  @Output() stateChange = new EventEmitter<InputInlineEditState>();\n  /**\n   * Flag represents visibility of edit button\n   *\n   * @default: true\n   */\n  @Input() canEdit = true;\n  /**\n   * Applies additional loading state for edit flow\n   *\n   * @default: false\n   */\n  @Input() hasLoadingState = false;\n  /**\n   * Template for custom and styling text\n   */\n  @Input() inputInlineTemplate: TemplateRef<InputInlineEditComponent> | undefined;\n  /**\n   * string for editing\n   */\n  @Input() set inputText(value: string | undefined) {\n    this._inputText = value;\n\n    this.vForm?.controls.inputInline.setValue(this._inputText);\n  }\n  get inputText(): string | undefined {\n    return this._inputText;\n  }\n  /**\n   * The maxLength for the text input.\n   */\n  @Input() maxLength = Infinity;\n\n  /**\n   * The minLength for the text input.\n   */\n  @Input() minLength = 0;\n\n  /**\n   *  The max number value of the text input\n   */\n  @Input() maxValue: number | undefined;\n\n  /**\n   *  The min number value of the text input\n   */\n  @Input() minValue: number | undefined;\n\n  /**\n   * Whether the text input should be auto-focused when shown.\n   */\n  @Input() autofocus = false;\n\n  /**\n   * The event that's fired after on Cancel.\n   */\n  @Output() cancel = new EventEmitter<void>();\n  /**\n   * The event that's fired after on Accept.\n   */\n  @Output() accept = new EventEmitter<string>();\n\n  /**\n   * string for aria label on Accept button\n   */\n  @Input() ariaLabelAccept = defaultAriaLabels.accept;\n\n  /**\n   * string for aria label on Cancel button\n   */\n  @Input() ariaLabelCancel = defaultAriaLabels.cancel;\n\n  /**\n   * string for aria label on Edit button\n   */\n  @Input() ariaLabelEdit = defaultAriaLabels.edit;\n\n  /**\n   * string for tooltip on Accept button\n   */\n  @Input() tooltipAccept = defaultTooltips.accept;\n\n  /**\n   * string for tooltip on Cancel button\n   */\n  @Input() tooltipCancel = defaultTooltips.cancel;\n\n  /**\n   * string for tooltip on Edit button\n   */\n  @Input() tooltipEdit = defaultTooltips.edit;\n\n  /**\n   * The autocomplete value of the enclosed input control.\n   */\n  @Input() autocomplete: string | undefined;\n\n  /**\n   * Whether the text input should follow a pattern.\n   */\n  @Input() pattern: RegExp | string | undefined;\n\n  /**\n   * Hint to be displayed in edit mode\n   */\n  @Input() hint: string | undefined;\n\n  vForm: FormGroup | undefined;\n\n  readonly validationMessagesId: string;\n\n  /**\n   * Utility function for use in template\n   */\n  public idListAttr = idListAttr;\n\n  constructor(\n    cd: ChangeDetectorRef,\n    deprecationsService: DeprecationsService,\n    private readonly domAttributesService: DomAttributesService,\n  ) {\n    super(cd, deprecationsService);\n    this.validationMessagesId = this.domAttributesService.generateId();\n  }\n\n  ngAfterContentInit() {\n    const validators = [Validators.maxLength(this.maxLength), Validators.minLength(this.minLength)];\n    if (this.required) {\n      validators.push(Validators.required);\n    }\n\n    if (this.pattern) {\n      validators.push(Validators.pattern(this.pattern));\n    }\n\n    if (this.minValue) {\n      validators.push(Validators.min(this.minValue));\n    }\n\n    if (this.maxValue) {\n      validators.push(Validators.max(this.maxValue));\n    }\n\n    this.vForm = new FormGroup({\n      inputInline: new FormControl(this._inputText, Validators.compose(validators)),\n    });\n  }\n\n  writeValue(inputValue: Object | string | null): void {\n    if (typeof inputValue === 'string') {\n      this._inputText = inputValue;\n    }\n    super.writeValue(inputValue);\n  }\n\n  onEdit(event: MouseEvent): void {\n    event.stopPropagation();\n\n    this.updateState(InputInlineEditState.EDITING);\n  }\n\n  onCancel(event?: MouseEvent): void {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.vForm?.controls.inputInline.setValue(this._inputText);\n    this.updateState(InputInlineEditState.IDLE);\n    this.cancel.emit();\n  }\n\n  get isLoading(): boolean {\n    return this._state === InputInlineEditState.LOADING;\n  }\n\n  get editMode(): boolean {\n    return this._state === InputInlineEditState.EDITING;\n  }\n\n  get isIdleMode(): boolean {\n    return this._state === InputInlineEditState.IDLE;\n  }\n\n  /**\n   * Emits the updated value from input\n   *\n   * If the {@link InputInlineEditComponent.hasLoadingState } set to true -> the state is not changed,\n   * as component state should be updated from outside, otherwise the value will be updated with the\n   * new one and state will be switched to `IDLE`\n   *\n   */\n  onAccept(): void {\n    const newString = this.vForm ? this.vForm.controls.inputInline.value : '';\n\n    if (!this.hasLoadingState) {\n      this.updateState(InputInlineEditState.IDLE);\n      this._inputText = newString;\n      this.onValueChange(newString);\n    }\n\n    this.accept.emit(newString);\n  }\n\n  hasError(type?: string): boolean | undefined {\n    const fieldControl = this.vForm ? this.vForm.controls.inputInline : null;\n    if (!fieldControl || !fieldControl.errors) {\n      return undefined;\n    }\n\n    return type ? fieldControl.errors[type] : fieldControl.errors;\n  }\n\n  @HostListener('document:keydown.escape', ['$event']) onKeydownHandler(evt: KeyboardEvent): void {\n    if (this.editMode) {\n      this.onCancel();\n    }\n  }\n\n  private updateState(value: InputInlineEditState): void {\n    this._state = value;\n    this.stateChange.emit(value);\n  }\n}\n","<div class=\"bb-input-inline-edit-ui\">\n  <ng-container *ngIf=\"isIdleMode; else editingState\">\n    <div class=\"bb-stack bb-input-inline-edit-ui__idle-wrapper\">\n      <ng-container\n        *ngTemplateOutlet=\"inputInlineTemplate ? inputInlineTemplate : defaultInlineTemplate; context: this\"\n      >\n      </ng-container>\n      <ng-template #defaultInlineTemplate>\n        <span class=\"bb-stack__item bb-stack__item--spacing-none\" data-role=\"inline-edit-text\">\n          {{ inputText }}\n        </span>\n      </ng-template>\n\n      <button\n        *ngIf=\"canEdit\"\n        bbButton\n        class=\"bb-stack__item bb-stack__item--no-shrink\"\n        (click)=\"onEdit($event)\"\n        [attr.aria-describedby]=\"ariaDescribedby\"\n        [attr.aria-label]=\"ariaLabelEdit\"\n        [attr.aria-labelledby]=\"ariaLabelledby\"\n        color=\"link-dark\"\n        [attr.data-role]=\"'inline-edit-btn'\"\n        [circle]=\"true\"\n        type=\"button\"\n        buttonSize=\"sm\"\n        [bbTooltip]=\"tooltipEdit\"\n        container=\"body\"\n        triggers=\"hover focus\"\n        placement=\"auto\"\n      >\n        <bb-icon-ui class=\"bb-text-support\" name=\"edit\"></bb-icon-ui>\n      </button>\n    </div>\n  </ng-container>\n  <ng-template #editingState>\n    <div class=\"form-group\">\n      <form [formGroup]=\"vForm\" (ngSubmit)=\"!hasError() && onAccept()\">\n        <bb-input-text-ui\n          [attr.data-role]=\"'inline-edit-input'\"\n          label=\"{{ label }}\"\n          formControlName=\"inputInline\"\n          [attr.aria-autocomplete]=\"ariaAutocomplete\"\n          [attr.aria-controls]=\"ariaControls\"\n          [attr.aria-labelledby]=\"ariaLabelledby\"\n          [attr.aria-describedby]=\"idListAttr(ariaDescribedby, validationMessagesId)\"\n          [attr.aria-expanded]=\"ariaExpanded\"\n          [attr.aria-activedescendant]=\"ariaActivedescendant\"\n          [attr.role]=\"role\"\n          [attr.aria-invalid]=\"ariaInvalid\"\n          [attr.aria-owns]=\"ariaOwns\"\n          [required]=\"required\"\n          [readonly]=\"readonly\"\n          [maxLength]=\"maxLength\"\n          [minLength]=\"minLength\"\n          [autofocus]=\"true\"\n          [ngClass]=\"inputClassName\"\n          [attr.size]=\"size\"\n          (click)=\"$event.stopPropagation()\"\n          (blur)=\"onBlur($event)\"\n          id=\"{{ id }}\"\n          [autocomplete]=\"autocomplete\"\n        >\n        </bb-input-text-ui>\n        <div class=\"bb-stack bb-stack--align-top bb-stack--density-md\">\n          <div class=\"bb-stack__item bb-stack__item--fill\">\n            <div class=\"bb-subtitle bb-text-support\" data-role=\"inline-edit-hint\" *ngIf=\"hint && !hasError()\">\n              {{ hint }}\n            </div>\n            <bb-input-validation-message-ui [showErrors]=\"hasError()\" [id]=\"validationMessagesId\">\n              <div\n                *ngIf=\"hasError('maxlength')\"\n                i18n=\"Max Length Error|String is more than 'maxLength' characters @@input-inline-edit-ui.maxLengthError\"\n              >\n                Insert max {{ maxLength }} characters\n              </div>\n              <div\n                *ngIf=\"hasError('minlength')\"\n                i18n=\"Min Length Error|String is less than 'minLength' characters @@input-inline-edit-ui.minLengthError\"\n              >\n                Insert min {{ minLength }} characters\n              </div>\n              <div\n                *ngIf=\"hasError('min')\"\n                i18n=\"Min value Error|Number is less than 'minValue' @@input-inline-edit-ui.minValueError\"\n              >\n                Insert min {{ minValue }}\n              </div>\n              <div\n                *ngIf=\"hasError('max')\"\n                i18n=\"Max value Error|Number is more than 'maxValue' @@input-inline-edit-ui.maxValueError\"\n              >\n                Insert max {{ maxValue }}\n              </div>\n              <div\n                *ngIf=\"hasError('pattern')\"\n                i18n=\"Format value error|Format value is invalid @@input-inline-edit-ui.formatValueError\"\n              >\n                Input value provided is invalid\n              </div>\n              <div\n                *ngIf=\"hasError('required')\"\n                i18n=\"Required error|String is required @@input-inline-edit-ui.requiredError\"\n              >\n                Field is required\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n          <div class=\"bb-stack__item bb-stack__item--push-right flex-shrink-0\">\n            <button\n              bbButton\n              type=\"reset\"\n              (click)=\"onCancel($event)\"\n              class=\"bb-stack__item bb-stack__item--push-right\"\n              color=\"danger\"\n              [attr.data-role]=\"'inline-edit-cancel'\"\n              [circle]=\"true\"\n              [attr.aria-label]=\"ariaLabelCancel\"\n              buttonSize=\"sm\"\n              [bbTooltip]=\"tooltipCancel\"\n              container=\"body\"\n              triggers=\"hover focus\"\n              placement=\"auto\"\n            >\n              <bb-icon-ui name=\"times\"></bb-icon-ui>\n            </button>\n            <button\n              bbButton\n              (click)=\"$event.stopPropagation()\"\n              color=\"success\"\n              [attr.data-role]=\"'inline-edit-accept'\"\n              type=\"submit\"\n              [circle]=\"true\"\n              [attr.aria-label]=\"ariaLabelAccept\"\n              buttonSize=\"sm\"\n              class=\"bb-load-button\"\n              [bbTooltip]=\"tooltipAccept\"\n              container=\"body\"\n              triggers=\"hover focus\"\n              placement=\"auto\"\n            >\n              <bb-loading-indicator-ui\n                *ngIf=\"isLoading; else checkIcon\"\n                class=\"bb-load-button__loading-indicator\"\n                loaderSize=\"sm\"\n              ></bb-loading-indicator-ui>\n              <ng-template #checkIcon>\n                <bb-icon-ui name=\"check\"></bb-icon-ui>\n              </ng-template>\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </ng-template>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputInlineEditComponent } from './input-inline-edit.component';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IconModule,\n    ReactiveFormsModule,\n    BaseClassesModule,\n    ButtonModule,\n    InputTextModule,\n    InputValidationMessageModule,\n    LoadingIndicatorModule,\n    TooltipModule,\n  ],\n  declarations: [InputInlineEditComponent],\n  exports: [InputInlineEditComponent],\n})\nexport class InputInlineEditModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}