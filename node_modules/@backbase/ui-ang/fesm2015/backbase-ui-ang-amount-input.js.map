{"version":3,"file":"backbase-ui-ang-amount-input.js","sources":["../../../../libs/ui-ang/amount-input/amount-input.component.ts","../../../../libs/ui-ang/amount-input/amount-input.component.html","../../../../libs/ui-ang/amount-input/amount-input.module.ts","../../../../libs/ui-ang/amount-input/backbase-ui-ang-amount-input.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  LOCALE_ID,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\nimport BigNumber from 'bignumber.js';\nimport { getCurrencySymbol, getLocaleNumberSymbol, getNumberOfCurrencyDigits, NumberSymbol } from '@angular/common';\nimport { idListAttr } from '@backbase/ui-ang/util';\n\n/**\n * @name AmountInputComponent\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - set aria-describedby with ID of another element in the DOM with descriptive text about the amount input,\n *    by default it is set to div defining the type of currency\n *  - set aria-invalid with boolean value when the entered input value is not valid\n *  - set aria-labelledby with ID of another element in the DOM as input's label\n *\n * @description\n * Component that displays a text input.\n */\n@Component({\n  selector: 'bb-amount-input-ui',\n  templateUrl: './amount-input.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AmountInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AmountInputComponent extends InputBaseComponent {\n  @HostBinding('class') inputClass = 'bb-amount-input';\n\n  /**\n   * Unique ID used for the accessibility property. New value is created when component is initialized.\n   *\n   * @internal\n   */\n  readonly componentUniqueId = `${this.id}-currency`;\n  /**\n   * Utility function for use in template\n   */\n  public idListAttr = idListAttr;\n\n  private readonly groupSeparator: string;\n  private readonly decimalSeparator: string;\n  private readonly nonNumbersAndDecimalSeparatorRegex: RegExp;\n  private readonly endWithDecimal: RegExp;\n\n  /**\n   * The format used for bignumber;\n   */\n  private readonly format: BigNumber.Format;\n\n  /**\n   * The placeholder for the text input. Defaults to an empty string;\n   */\n  @Input() placeholder = '';\n  /**\n   * The maxLength for the text input.\n   */\n  @Input() maxLength: number | undefined;\n  /**\n   * classnames for the wrapper div\n   */\n  @Input() wrapperClasses = '';\n  /**\n   * Whether currency local should be transformed to symbol.\n   * Default value true.\n   */\n  @Input() mapCurrency = true;\n  /**\n   * Determines currency type.\n   * If nothing provided, wouldn't be displayed.\n   */\n  private _currency = '';\n  private _decimals = 2;\n  @Input() set currency(value: string | undefined) {\n    if (value) {\n      this._currency = this.mapCurrency ? getCurrencySymbol(value, 'wide', this.locale) : value;\n      this._decimals = getNumberOfCurrencyDigits(value);\n    }\n  }\n  get currency(): string | undefined {\n    return this._currency;\n  }\n  /**\n   * The flag to wether auto add decimal part or not defaults to false\n   */\n  @Input() autoDecimal = false;\n\n  /**\n   * ElementRef for amount input\n   */\n  @ViewChild('amountInput', { static: true }) private amountEl!: ElementRef<HTMLInputElement>;\n\n  constructor(\n    cd: ChangeDetectorRef,\n    deprecationsService: DeprecationsService,\n    @Inject(LOCALE_ID) private readonly locale: string,\n    private readonly renderer: Renderer2,\n  ) {\n    super(cd, deprecationsService);\n    this.groupSeparator = getLocaleNumberSymbol(this.locale, NumberSymbol.CurrencyGroup);\n    this.decimalSeparator = getLocaleNumberSymbol(this.locale, NumberSymbol.CurrencyDecimal);\n    this.nonNumbersAndDecimalSeparatorRegex = new RegExp(`[^${this.decimalSeparator}\\\\d]`, 'g');\n    this.endWithDecimal = new RegExp(`[${this.decimalSeparator}]$`, 'g');\n    this.format = {\n      groupSeparator: this.groupSeparator,\n      decimalSeparator: this.decimalSeparator,\n      groupSize: 3,\n    };\n  }\n\n  writeValue(model: any): void {\n    const sanitizedInput = model ?? '';\n    if (typeof sanitizedInput === 'string') {\n      const numeric =\n        sanitizedInput.replace(this.nonNumbersAndDecimalSeparatorRegex, '').slice(0, this.maxLength) || '';\n      this.renderer.setProperty(this.amountEl.nativeElement, 'value', this.formatAmount(numeric));\n    }\n  }\n\n  private formatAmount(numeric: string): string {\n    if (numeric) {\n      if (numeric.includes(this.decimalSeparator)) {\n        const [int, dec] = numeric.split(this.decimalSeparator);\n\n        return new BigNumber(int || 0).toFormat(this.format) + this.decimalSeparator + dec.slice(0, this._decimals);\n      } else {\n        return new BigNumber(numeric).toFormat(this.format);\n      }\n    } else {\n      return numeric;\n    }\n  }\n\n  private updateAmountInput() {\n    const amountEl = this.amountEl.nativeElement;\n    const numeric = amountEl.value?.replace(this.nonNumbersAndDecimalSeparatorRegex, '').slice(0, this.maxLength) || '';\n\n    this.renderer.setProperty(amountEl, 'value', this.formatAmount(numeric));\n  }\n\n  private setSelection(start: number, end: number): void {\n    const amountEl = this.amountEl.nativeElement;\n    this.renderer.setProperty(amountEl, 'selectionStart', start);\n    this.renderer.setProperty(amountEl, 'selectionEnd', end);\n  }\n\n  correctInputValue() {\n    this.onBlur();\n    const amountEl = this.amountEl?.nativeElement;\n    if (amountEl.value) {\n      const numeric = amountEl.value.replace(this.endWithDecimal, '');\n      this.renderer.setProperty(amountEl, 'value', numeric);\n      this.updateOutputValue(numeric.replace(this.nonNumbersAndDecimalSeparatorRegex, ''));\n    }\n  }\n  /**\n   * Event handler for backspace key press, and check if correct number is deleted\n   */\n  onBackspace(el: HTMLInputElement) {\n    if (this.autoDecimal && el.selectionStart && el.value[el.selectionStart - 1] === this.groupSeparator) {\n      this.setSelection(el.selectionStart - 1, el.selectionStart - 1);\n    }\n  }\n\n  onPress($event: KeyboardEvent) {\n    const key = $event.key;\n    const elm = this.amountEl.nativeElement;\n    const value = elm.value;\n    if (value) {\n      const isDotExist = value.includes(this.decimalSeparator) && key === this.decimalSeparator;\n      const regexString = `^[\\\\d${this.groupSeparator}]*[${this.decimalSeparator}]?\\\\d{0,${this._decimals}}$`;\n      const formattedCurrencyRegex = new RegExp(regexString, 'g');\n      const decimalStructure = formattedCurrencyRegex.test(value);\n      if (isDotExist || !decimalStructure) {\n        const pos = elm.selectionStart;\n        if (value.indexOf(this.decimalSeparator) === pos) {\n          this.setSelection(pos + 1, pos + 1);\n        }\n        $event.preventDefault();\n      }\n    }\n  }\n\n  onInput() {\n    const elm = this.amountEl.nativeElement;\n    const value = elm.value.trim();\n    const cursorPos = elm.selectionStart || 0;\n    const oldPos = value.length - cursorPos;\n    this.updateAmountInput();\n    const formatted = elm.value.replace(this.nonNumbersAndDecimalSeparatorRegex, '').replace(this.endWithDecimal, '');\n    if (formatted) {\n      if (value.length === 1 && value !== this.decimalSeparator) {\n        const newValue = this.autoDecimal ? value + this.decimalSeparator + '0'.repeat(this._decimals) : value;\n        this.renderer.setProperty(elm, 'value', newValue);\n        this.setSelection(1, 1);\n      } else {\n        let newpos = elm.value.length - oldPos;\n        if (value.includes(this.decimalSeparator) && cursorPos > value.indexOf(this.decimalSeparator)) {\n          newpos++;\n        }\n        this.setSelection(newpos, newpos);\n      }\n    }\n    this.updateOutputValue(formatted);\n  }\n  private updateOutputValue(value: string): void {\n    this.onValueChange(value.replace(this.decimalSeparator, '.'));\n  }\n}\n","<label *ngIf=\"label\" for=\"{{ id }}\"> {{ label }} </label>\n<div class=\"bb-amount-input__field\" [ngClass]=\"wrapperClasses\">\n  <input\n    id=\"{{ id }}\"\n    type=\"text\"\n    class=\"form-control bb-text-align-right\"\n    autocomplete=\"off\"\n    autocorrect=\"off\"\n    autocapitalize=\"off\"\n    spellcheck=\"false\"\n    data-role=\"bb-amount-input-ui\"\n    #amountInput\n    [attr.maxlength]=\"maxLength\"\n    [readOnly]=\"readonly\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [placeholder]=\"placeholder\"\n    [attr.aria-describedby]=\"idListAttr(ariaDescribedby, componentUniqueId)\"\n    [attr.aria-invalid]=\"ariaInvalid\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    (keydown)=\"onPress($event)\"\n    (keydown.backspace)=\"onBackspace(amountInput)\"\n    (blur)=\"correctInputValue()\"\n    (input)=\"onInput()\"\n  />\n  <span *ngIf=\"currency\" data-role=\"bb-amount-input-currency\" class=\"bb-amount-input__symbol\" [id]=\"componentUniqueId\">\n    <span\n      class=\"sr-only\"\n      i18n=\"\n        Currency|Text to explain that currency will be read by screen reader@@bb-amount-input-ui.currency-description\"\n      >Currency</span\n    >\n    {{ currency }}\n  </span>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BaseClassesModule } from '@backbase/ui-ang/base-classes';\n\nimport { AmountInputComponent } from './amount-input.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, BaseClassesModule],\n  declarations: [AmountInputComponent],\n  exports: [AmountInputComponent],\n})\nexport class AmountInputModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}