import * as i0 from '@angular/core';
import { Directive, Component, ChangeDetectionStrategy, ContentChild, Input, NgModule } from '@angular/core';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i1 from '@backbase/ui-ang/icon';
import { IconModule } from '@backbase/ui-ang/icon';

class ItemLogRecordDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
ItemLogRecordDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogRecordDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
ItemLogRecordDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ItemLogRecordDirective, selector: "ng-template[bbItemLogRecord]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogRecordDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbItemLogRecord]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
class ItemLogComponent {
    constructor() {
        /**
         * Flag that denotes if item log status is pending. Defaults to false
         */
        this.isPending = false;
    }
}
ItemLogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ItemLogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ItemLogComponent, selector: "bb-item-log-ui", inputs: { isPending: "isPending", records: "records" }, queries: [{ propertyName: "customItemLog", first: true, predicate: ItemLogRecordDirective, descendants: true, static: true }], ngImport: i0, template: "<div class=\"bb-item-log\">\n  <div *ngIf=\"isPending\" class=\"bb-item-log__pending-record\" data-role=\"item-log-details-pending-row\">\n    <bb-icon-ui class=\"bb-text-support bb-item-log-record__icon\" name=\"watch-later\" size=\"md\"></bb-icon-ui>\n    <div class=\"bb-item-log__pending-record--details bb-text-bold\" i18n=\"@@item-log-waiting-for-approvals.label\">\n      Waiting for further approval(s)\n    </div>\n  </div>\n  <div *ngFor=\"let itemLogRecord of records\" class=\"bb-item-log__record\" data-role=\"item-log-details-record\">\n    <ng-container *ngIf=\"customItemLog; else default\">\n      <ng-container *ngTemplateOutlet=\"customItemLog?.templateRef; context: { $implicit: itemLogRecord }\">\n      </ng-container>\n    </ng-container>\n\n    <ng-template #default>\n      <div class=\"bb-stack bb-stack--align-top\">\n        <bb-icon-ui\n          class=\"bb-item-log-record__icon\"\n          size=\"md\"\n          [name]=\"itemLogRecord?.status === 'REJECTED' ? 'cancel' : 'success'\"\n          [color]=\"itemLogRecord?.status === 'REJECTED' ? 'danger' : 'success'\"\n        ></bb-icon-ui>\n        <div class=\"bb-item-log-record__details\">\n          <span class=\"bb-text-bold\" i18n=\"@@item-log-waiting-for-approvals.status\">\n            { itemLogRecord?.status, select, REJECTED {Rejected} APPROVED {Approved} other {} }\n          </span>\n\n          <span>\n            <ng-container i18n=\"@@item-log-approved-by.label\"> by {{ itemLogRecord.userFullName }}</ng-container>\n            <ng-container *ngIf=\"itemLogRecord?.externalUserId\"> ({{ itemLogRecord.externalUserId }})</ng-container>\n          </span>\n\n          <div class=\"bb-item-log-record__time\">\n            <time> {{ itemLogRecord?.createdAt | date }}</time>\n            <ng-container i18n=\"@@item.log.details.created.at\"> at</ng-container>\n            <time> {{ itemLogRecord?.createdAt | date: 'shortTime' }}</time>\n          </div>\n        </div>\n\n        <div class=\"bb-item-log-record__comment bb-stack bb-stack--density-sm\" *ngIf=\"itemLogRecord?.comment\">\n          <div class=\"bb-stack__item bb-stack__item--align-top\">\n            <bb-icon-ui color=\"secondary\" name=\"forum\" size=\"sm\"></bb-icon-ui>\n          </div>\n\n          <div class=\"bb-stack__item\">\n            {{ itemLogRecord?.comment }}\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </div>\n</div>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "date": i2.DatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-item-log-ui',
                    templateUrl: './item-log.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { customItemLog: [{
                type: ContentChild,
                args: [ItemLogRecordDirective, { static: true }]
            }], isPending: [{
                type: Input
            }], records: [{
                type: Input
            }] } });

class ItemLogModule {
}
ItemLogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ItemLogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogModule, declarations: [ItemLogComponent, ItemLogRecordDirective], imports: [CommonModule, IconModule], exports: [ItemLogComponent, ItemLogRecordDirective] });
ItemLogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogModule, imports: [[CommonModule, IconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ItemLogModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, IconModule],
                    declarations: [ItemLogComponent, ItemLogRecordDirective],
                    exports: [ItemLogComponent, ItemLogRecordDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { ItemLogComponent, ItemLogModule, ItemLogRecordDirective };
//# sourceMappingURL=backbase-ui-ang-item-log.js.map
