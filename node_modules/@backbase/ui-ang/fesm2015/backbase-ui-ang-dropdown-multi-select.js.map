{"version":3,"file":"backbase-ui-ang-dropdown-multi-select.js","sources":["../../../../libs/ui-ang/dropdown-multi-select/dropdown-multi-select-option.component.ts","../../../../libs/ui-ang/dropdown-multi-select/dropdown-multi-select.component.ts","../../../../libs/ui-ang/dropdown-multi-select/dropdown-multi-select.component.html","../../../../libs/ui-ang/dropdown-multi-select/dropdown-multi-select.module.ts","../../../../libs/ui-ang/dropdown-multi-select/backbase-ui-ang-dropdown-multi-select.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { DomAttributesService } from '@backbase/ui-ang/services';\n\nexport const BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN: InjectionToken<ChangeDetectorRef> = new InjectionToken(\n  'BB_MULTI_SELECT_SINGLE_SELECT',\n);\n\n/**\n * @name MultiSelectSingleSelectOption\n *\n * @description\n * Component that represents a single option that is part of the multi select component.\n */\n@Component({\n  selector: 'bb-dropdown-multi-select-option-ui',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '',\n})\nexport class DropdownMultiSelectOptionComponent implements OnChanges {\n  private _id: string;\n\n  /**\n   * The id for the input. Defaults to unique string.\n   */\n  @Input()\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * The value of the native option element\n   */\n  @Input() value = '';\n  /**\n   * The label of the option item\n   */\n  @Input() label = '';\n\n  @Input() state: boolean | undefined = false;\n  constructor(\n    @Inject(BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN) private readonly dropdownCDRef: ChangeDetectorRef,\n    private readonly domAttributesService: DomAttributesService,\n  ) {\n    this._id = this.domAttributesService.generateId();\n  }\n\n  // NOTES: trigger of detectChanges is needed\n  // because DropdownSingleSelectComponent has changeDetection\n  // strategy onPush, hence it reacts only to changes\n  // of its own @Inputs, but not @Inputs() of options component\n  ngOnChanges({ value = {} as SimpleChange, label = {} as SimpleChange }: SimpleChanges) {\n    const { firstChange: firstChangeValue } = value;\n    const { firstChange: firstChangeLabel } = label;\n\n    if (firstChangeLabel && firstChangeValue) {\n      return;\n    }\n\n    this.dropdownCDRef.detectChanges();\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  forwardRef,\n  Input,\n  OnDestroy,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, takeUntil, withLatestFrom } from 'rxjs/operators';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { DropdownSingleSelectOptionComponent } from '@backbase/ui-ang/dropdown-single-select';\nimport { DomAttributesService } from '@backbase/ui-ang/services';\nimport { idListAttr } from '@backbase/ui-ang/util';\nimport { KEY_CODES } from '@backbase/ui-ang/util';\nimport {\n  BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN,\n  DropdownMultiSelectOptionComponent,\n} from './dropdown-multi-select-option.component';\n\n/**\n * @name DropdownMultiSelectComponent\n *\n * @description\n * Component that use for DropDown Multi Select.\n */\n@Component({\n  selector: 'bb-dropdown-multi-select-ui',\n  templateUrl: './dropdown-multi-select.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DropdownMultiSelectComponent),\n      multi: true,\n    },\n    {\n      provide: BB_MULTI_SELECT_CHANGE_DETECTION_REF_TOKEN,\n      useExisting: ChangeDetectorRef,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DropdownMultiSelectComponent\n  extends InputBaseComponent\n  implements AfterContentInit, ControlValueAccessor, OnDestroy\n{\n  private readonly unsubscribe$ = new Subject<void>();\n  /**\n   * The dropdown header text\n   */\n  @Input() dropdownHeaderText: string | undefined;\n\n  /**\n   * The placeholder for the multi select.\n   */\n  @Input() placeholder = 'No items selected';\n\n  /**\n   * The label for the Dropdown multi select. Defaults to an empty string.\n   */\n  @Input() label = '';\n\n  /**\n   * Enable filtering; Defaults to false.\n   */\n  @Input() filtering = false;\n\n  /**\n   * Whether the Dropdown multi select is read only. Defaults to false.\n   */\n  @Input() readonly = false;\n\n  /**\n   * The child option components of type DropDownMultiSelectSingleOption\n   */\n  isIE = navigator.userAgent.indexOf('MSIE ') > -1 || navigator.userAgent.indexOf('Trident/') > -1;\n\n  @ContentChildren(DropdownMultiSelectOptionComponent)\n  contentOptions: QueryList<DropdownMultiSelectOptionComponent> | undefined;\n\n  /**\n   * The list of options.\n   */\n  @ViewChildren('option') options!: QueryList<ElementRef>;\n\n  @ViewChild('clearOptions') clearAllButton!: ElementRef;\n  @ViewChild('dropDownMenu') dropDownMenu!: ElementRef;\n\n  /**\n   * The toggle button of the dropdown\n   */\n  @ViewChild('toggleButton') toggleButton!: ElementRef;\n\n  @ViewChild('listbox') listbox!: ElementRef;\n\n  activeOptionIndex = -1;\n  isOptionsFocused = false;\n\n  readonly formGroup = new FormGroup({});\n\n  readonly formValue$: Observable<string[]> = this.formGroup.valueChanges.pipe(\n    map((formValue: { [key: string]: boolean }) => this.getSelectedValues(formValue)),\n    takeUntil(this.unsubscribe$),\n  );\n\n  readonly labelsMap: {\n    [key: string]: string;\n  } = {};\n\n  readonly buttonLabelId = this.domAttributesService.generateId();\n\n  readonly clearOptions$ = new Subject<void>();\n\n  private selectedValuesSubject$ = new BehaviorSubject<string[]>([]);\n  readonly selectedValues$ = this.selectedValuesSubject$.asObservable();\n\n  private searchKey = '';\n  private cachedValue: { [key: string]: boolean } = {};\n  private isOpen = false;\n\n  constructor(\n    protected readonly cd: ChangeDetectorRef,\n    private readonly domAttributesService: DomAttributesService,\n    protected readonly deprecationsService: DeprecationsService,\n  ) {\n    super(cd, deprecationsService);\n    this.buttonLabelId = this.domAttributesService.generateId();\n    this.formValue$.subscribe(this.selectedValuesSubject$);\n\n    this.formValue$.subscribe((value) => {\n      if (value && value.length === 0) {\n        this.onChange(undefined);\n      } else {\n        this.onValueChange(value);\n      }\n    });\n\n    this.clearOptions$\n      .pipe(withLatestFrom(this.selectedValues$), takeUntil(this.unsubscribe$))\n      .subscribe(([, items]) => {\n        items.forEach((item: string) => {\n          this.formGroup.patchValue({ [item]: false }, { emitEvent: false });\n        });\n        this.formGroup.updateValueAndValidity();\n      });\n  }\n\n  ngAfterContentInit(): void {\n    if (this.contentOptions) {\n      this.contentOptions.forEach(({ value, label }) => {\n        this.formGroup.registerControl(value, new FormControl(this.cachedValue[value] || false));\n        Object.assign(this.labelsMap, { [value]: label });\n      });\n      if (Object.keys(this.cachedValue).length) {\n        this.formGroup.updateValueAndValidity();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  /**\n   * Unselect all selected options from the listbox\n   *\n   * @param $event\n   */\n  clearAll($event: Event) {\n    $event.preventDefault();\n    this.clearOptions$.next();\n  }\n\n  /**\n   *\n   * @param index\n   * @param item\n   */\n  trackByValueFn(index: number, item: DropdownSingleSelectOptionComponent) {\n    return item.value;\n  }\n\n  /**\n   *\n   * @param value\n   */\n  writeValue(value: string[] | null): void {\n    const valuesMap = (value || []).reduce(\n      (acc, item) => Object.assign(acc, { [item]: true }),\n      {} as {\n        [key: string]: boolean;\n      },\n    );\n\n    this.cachedValue = valuesMap;\n\n    Object.keys(this.formGroup.controls).forEach((key) => {\n      this.formGroup.controls[key].setValue(valuesMap[key] || false, { emitEvent: false });\n    });\n\n    this.formGroup.updateValueAndValidity({ emitEvent: false });\n\n    const selectedValues = this.getSelectedValues(this.formGroup.value);\n    this.selectedValuesSubject$.next(selectedValues);\n  }\n\n  /**\n   * Updating labels while searching\n   *\n   * @param label\n   */\n  getLabel(label: string): string {\n    return this.searchKey.toLocaleLowerCase() === label[0].toLocaleLowerCase() && this.filtering\n      ? `<b>${label[0]}</b>${label.substring(1)}`\n      : label;\n  }\n\n  onListboxFocus() {\n    this.activeOptionIndex = 0;\n    this.isOptionsFocused = true;\n  }\n\n  /* eslint-disable complexity */\n  onListboxKeyDown(event: KeyboardEvent) {\n    if (!this.disabled && this.isOpen && this.isOptionsFocused) {\n      const keyCode = this.isIE ? event.keyCode : event.key;\n\n      switch (keyCode) {\n        case 40:\n        case KEY_CODES.DOWN:\n          this.activeOptionIndex = Math.min(this.activeOptionIndex + 1, this.options.length - 1);\n\n          break;\n\n        case 38:\n        case KEY_CODES.UP:\n          this.activeOptionIndex = Math.max(this.activeOptionIndex - 1, 0);\n\n          break;\n\n        case 13:\n        case 32:\n        case KEY_CODES.ENTER:\n        case KEY_CODES.SPACE:\n          this.selectActiveOption();\n          break;\n\n        default:\n          if (this.filtering) {\n            this.searchKey = event.key;\n            this.setActiveOptionBaseOnSearchKey(event.key);\n          }\n      }\n\n      // let Tab key to jump out and close the dropdown menu\n      if (keyCode !== 9 && keyCode !== KEY_CODES.TAB) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /* eslint-enable complexity */\n\n  /**\n   *\n   */\n  onListboxBlur() {\n    this.activeOptionIndex = -1;\n    this.isOptionsFocused = false;\n  }\n\n  /**\n   *\n   * @param isOpen\n   */\n  onDropdownToggle(isOpen: boolean) {\n    this.activeOptionIndex = -1;\n    this.isOptionsFocused = false;\n    this.isOpen = isOpen;\n  }\n\n  getLabeledByIds(...tokens: Array<string | undefined>): string | undefined {\n    return idListAttr(...tokens);\n  }\n\n  // only taking consideration the focusable elements of the control\n  onFocusOut(event: FocusEvent) {\n    const nextFocusedElement = event.relatedTarget;\n    const focusOutElement = event.target;\n\n    if (\n      (focusOutElement === this.toggleButton.nativeElement &&\n        nextFocusedElement !== this.clearAllButton.nativeElement &&\n        nextFocusedElement !== this.listbox.nativeElement) ||\n      (focusOutElement === this.clearAllButton.nativeElement &&\n        nextFocusedElement !== this.toggleButton.nativeElement &&\n        nextFocusedElement !== this.listbox.nativeElement) ||\n      (focusOutElement === this.listbox.nativeElement &&\n        nextFocusedElement !== this.toggleButton.nativeElement &&\n        nextFocusedElement !== this.clearAllButton.nativeElement)\n    ) {\n      super.onBlur();\n    }\n  }\n\n  private getSelectedValues(formValue: { [key: string]: boolean }) {\n    return Object.keys(formValue).reduce((acc: string[], key) => {\n      if (formValue[key]) {\n        acc.push(key);\n      }\n\n      return acc;\n    }, []);\n  }\n\n  private selectActiveOption() {\n    const el = this.options.toArray()[this.activeOptionIndex];\n\n    el?.nativeElement.click();\n  }\n\n  private setActiveOptionBaseOnSearchKey(key: string) {\n    this.activeOptionIndex = this.options\n      .toArray()\n      .findIndex((item) => key.toLocaleLowerCase() === item.nativeElement.innerText[0].toLocaleLowerCase());\n  }\n}\n","<label *ngIf=\"label\" for=\"{{ id }}_dropdown-option_input\" [id]=\"'bb-dropdown-multi-select-label' + id\">\n  {{ label }}\n</label>\n<div #dropDownMenu>\n  <bb-dropdown-panel-ui\n    (open)=\"onDropdownToggle($event)\"\n    [ngClass]=\"{ 'bb-dropdown-multi-select--disabled': disabled || readonly }\"\n    class=\"bb-dropdown-multi-select\"\n  >\n    <ng-template bbDropdownToggle let-isOpen=\"isOpen\">\n      <button\n        [attr.data-role]=\"'expand-button'\"\n        #toggleButton\n        [attr.required]=\"required ? true : undefined\"\n        [attr.aria-expanded]=\"isOpen\"\n        [attr.aria-labelledby]=\"getLabeledByIds('bb-dropdown-multi-select-label' + id, ariaLabelledby, buttonLabelId)\"\n        [attr.aria-describedby]=\"ariaDescribedby\"\n        [attr.aria-activedescendant]=\"ariaActivedescendant\"\n        [attr.aria-invalid]=\"ariaInvalid\"\n        [attr.aria-owns]=\"ariaOwns\"\n        [attr.aria-label]=\"ariaLabel\"\n        [disabled]=\"disabled\"\n        aria-haspopup=\"listbox\"\n        (focus)=\"onFocus()\"\n        (focusout)=\"onFocusOut($event)\"\n        class=\"\n          bb-stack--wrap\n          bb-dropdown-multi-select__toggle\n          bb-stack bb-text-align-left\n          bb-stack--align-top\n          form-control\n        \"\n        type=\"button\"\n        id=\"{{ id }}\"\n      >\n        <span class=\"bb-dropdown-multi-select__result\" [id]=\"buttonLabelId\" [attr.data-role]=\"'dropdown-result'\">\n          <span *ngIf=\"(selectedValues$ | async)?.length; else placeholderTemplate\">\n            <ng-container *ngFor=\"let item of selectedValues$ | async; last as last\">\n              {{ labelsMap[item] + (last ? '' : ', ') }}\n            </ng-container>\n          </span>\n          <ng-template #placeholderTemplate>\n            <span class=\"bb-text-support\">{{ placeholder }}</span>\n          </ng-template>\n        </span>\n        <span class=\"bb-stack__item--push-right\">\n          <bb-icon-ui [cropped]=\"true\" [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"></bb-icon-ui>\n        </span>\n      </button>\n    </ng-template>\n    <ng-template bbDropdownMenu>\n      <div>\n        <button\n          [attr.data-role]=\"'clear-btn'\"\n          #clearOptions\n          bbButton\n          color=\"unstyled\"\n          class=\"bb-dropdown-multi-select__clear-button\"\n          (click)=\"clearAll($event)\"\n          i18n=\"Clear selection button text@@dropdown-multiple-select.clear-selection.button\"\n          (focusout)=\"onFocusOut($event)\"\n        >\n          Clear selection\n        </button>\n      </div>\n      <div class=\"dropdown-divider\"></div>\n      <div *ngIf=\"dropdownHeaderText\" [id]=\"'bb-dropdown-multi-select-header_' + id\" class=\"dropdown-header\">\n        {{ dropdownHeaderText }}\n      </div>\n      <div\n        #listbox\n        role=\"listbox\"\n        aria-multiselectable=\"true\"\n        tabindex=\"0\"\n        [attr.aria-labelledby]=\"dropdownHeaderText ? getLabeledByIds('bb-dropdown-multi-select-header_' + id) : null\"\n        class=\"bb-dropdown-multi-select__options-list\"\n        [attr.aria-activedescendant]=\"\n          activeOptionIndex >= 0 ? 'bb-dropdown-multi-select-option-' + (id + activeOptionIndex) : undefined\n        \"\n        *ngIf=\"contentOptions?.length && formGroup.controls[contentOptions?.first.value]\"\n        (keydown)=\"onListboxKeyDown($event)\"\n        (focus)=\"onListboxFocus()\"\n        (blur)=\"onListboxBlur()\"\n        (focusout)=\"onFocusOut($event)\"\n      >\n        <label\n          *ngFor=\"let contentOption of contentOptions; index as i; trackBy: trackByValueFn\"\n          #option\n          (click)=\"activeOptionIndex = i\"\n          role=\"option\"\n          class=\"dropdown-item dropdown-option\"\n          [ngClass]=\"{\n            'active dropdown-option--active': activeOptionIndex === i,\n            'dropdown-option--selected': !!formGroup.controls[contentOption.value].value\n          }\"\n          [attr.data-role]=\"'option-' + i\"\n          [attr.aria-selected]=\"formGroup.controls[contentOption.value].value\"\n          [id]=\"'bb-dropdown-multi-select-option-' + id + i\"\n        >\n          <input\n            class=\"dropdown-option__input\"\n            type=\"checkbox\"\n            id=\"{{ id }}_dropdown-option_input\"\n            [attr.data-role]=\"'option-' + (id + i + 1)\"\n            [formControl]=\"formGroup.controls[contentOption.value]\"\n          />\n          <span [innerHTML]=\"getLabel(contentOption.label)\"></span>\n        </label>\n      </div>\n    </ng-template>\n  </bb-dropdown-panel-ui>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DropdownMultiSelectComponent } from './dropdown-multi-select.component';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { DropdownPanelModule } from '@backbase/ui-ang/dropdown-panel';\nimport { DropdownMultiSelectOptionComponent } from './dropdown-multi-select-option.component';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\n@NgModule({\n  imports: [CommonModule, IconModule, InputCheckboxModule, DropdownPanelModule, ReactiveFormsModule, ButtonModule],\n  declarations: [DropdownMultiSelectComponent, DropdownMultiSelectOptionComponent],\n  exports: [DropdownMultiSelectComponent, DropdownMultiSelectOptionComponent],\n})\nexport class DropdownMultiSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAaO,MAAM,0CAA0C,GAAsC,IAAI,cAAc,CAC7G,+BAA+B,CAChC,CAAC;AAEF;;;;;AAKG;MAMU,kCAAkC,CAAA;IAyB7C,WACuE,CAAA,aAAgC,EACpF,oBAA0C,EAAA;QADU,IAAa,CAAA,aAAA,GAAb,aAAa,CAAmB;QACpF,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;AAZ7D;;AAEG;QACM,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;AACpB;;AAEG;QACM,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;QAEX,IAAK,CAAA,KAAA,GAAwB,KAAK,CAAC;QAK1C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;KACnD;AA3BD;;AAEG;IACH,IACI,EAAE,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;KAClB;AAED,IAAA,IAAI,EAAE,GAAA;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;;;;IAuBD,WAAW,CAAC,EAAE,KAAK,GAAG,EAAkB,EAAE,KAAK,GAAG,EAAkB,EAAiB,EAAA;AACnF,QAAA,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,GAAG,KAAK,CAAC;AAChD,QAAA,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,GAAG,KAAK,CAAC;QAEhD,IAAI,gBAAgB,IAAI,gBAAgB,EAAE;YACxC,OAAO;AACR,SAAA;AAED,QAAA,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;KACpC;;AA7CU,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kCAAkC,kBA0BnC,0CAA0C,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA1BzC,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kCAAkC,qKAFnC,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FAED,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAL9C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oCAAoC;oBAC9C,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAC/C,oBAAA,QAAQ,EAAE,EAAE;AACb,iBAAA,CAAA;;0BA2BI,MAAM;2BAAC,0CAA0C,CAAA;+EAnBhD,EAAE,EAAA,CAAA;sBADL,KAAK;gBAYG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAIG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAEG,KAAK,EAAA,CAAA;sBAAb,KAAK;;;ACxBR;;;;;AAKG;AAiBG,MAAO,4BACX,SAAQ,kBAAkB,CAAA;AA6E1B,IAAA,WAAA,CACqB,EAAqB,EACvB,oBAA0C,EACxC,mBAAwC,EAAA;AAE3D,QAAA,KAAK,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;QAJZ,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;QACvB,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QACxC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;AA7E5C,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,OAAO,EAAQ,CAAC;AAMpD;;AAEG;QACM,IAAW,CAAA,WAAA,GAAG,mBAAmB,CAAC;AAE3C;;AAEG;QACM,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;AAEpB;;AAEG;QACM,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAE3B;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAE1B;;AAEG;QACH,IAAI,CAAA,IAAA,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;QAoBjG,IAAiB,CAAA,iBAAA,GAAG,CAAC,CAAC,CAAC;QACvB,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;AAEhB,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;AAE9B,QAAA,IAAA,CAAA,UAAU,GAAyB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAC1E,GAAG,CAAC,CAAC,SAAqC,KAAK,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,EACjF,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B,CAAC;QAEO,IAAS,CAAA,SAAA,GAEd,EAAE,CAAC;AAEE,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;AAEvD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,OAAO,EAAQ,CAAC;AAErC,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,eAAe,CAAW,EAAE,CAAC,CAAC;AAC1D,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC;QAE9D,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;QACf,IAAW,CAAA,WAAA,GAA+B,EAAE,CAAC;QAC7C,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;QAQrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC;QAC5D,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAEvD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AAClC,YAAA,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/B,gBAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC1B,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC3B,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,aAAa;AACf,aAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACxE,aAAA,SAAS,CAAC,CAAC,GAAG,KAAK,CAAC,KAAI;AACvB,YAAA,KAAK,CAAC,OAAO,CAAC,CAAC,IAAY,KAAI;AAC7B,gBAAA,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,GAAG,KAAK,EAAE,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACrE,aAAC,CAAC,CAAC;AACH,YAAA,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC;AAC1C,SAAC,CAAC,CAAC;KACN;IAED,kBAAkB,GAAA;QAChB,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAI;gBAC/C,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AACzF,gBAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC;AACpD,aAAC,CAAC,CAAC;YACH,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE;AACxC,gBAAA,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC;AACzC,aAAA;AACF,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;AAED;;;;AAIG;AACH,IAAA,QAAQ,CAAC,MAAa,EAAA;QACpB,MAAM,CAAC,cAAc,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC3B;AAED;;;;AAIG;IACH,cAAc,CAAC,KAAa,EAAE,IAAyC,EAAA;QACrE,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AAED;;;AAGG;AACH,IAAA,UAAU,CAAC,KAAsB,EAAA;AAC/B,QAAA,MAAM,SAAS,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,MAAM,CACpC,CAAC,GAAG,EAAE,IAAI,KAAK,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,EACnD,EAEC,CACF,CAAC;AAEF,QAAA,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;AAE7B,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;YACnD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACvF,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAE5D,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACpE,QAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAClD;AAED;;;;AAIG;AACH,IAAA,QAAQ,CAAC,KAAa,EAAA;AACpB,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,IAAI,IAAI,CAAC,SAAS;AAC1F,cAAE,CAAA,GAAA,EAAM,KAAK,CAAC,CAAC,CAAC,CAAO,IAAA,EAAA,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAE,CAAA;cACzC,KAAK,CAAC;KACX;IAED,cAAc,GAAA;AACZ,QAAA,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;;AAGD,IAAA,gBAAgB,CAAC,KAAoB,EAAA;AACnC,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAC1D,YAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC;AAEtD,YAAA,QAAQ,OAAO;AACb,gBAAA,KAAK,EAAE,CAAC;gBACR,KAAK,SAAS,CAAC,IAAI;oBACjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAEvF,MAAM;AAER,gBAAA,KAAK,EAAE,CAAC;gBACR,KAAK,SAAS,CAAC,EAAE;AACf,oBAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;oBAEjE,MAAM;AAER,gBAAA,KAAK,EAAE,CAAC;AACR,gBAAA,KAAK,EAAE,CAAC;gBACR,KAAK,SAAS,CAAC,KAAK,CAAC;gBACrB,KAAK,SAAS,CAAC,KAAK;oBAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,MAAM;AAER,gBAAA;oBACE,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,wBAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC;AAC3B,wBAAA,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChD,qBAAA;AACJ,aAAA;;YAGD,IAAI,OAAO,KAAK,CAAC,IAAI,OAAO,KAAK,SAAS,CAAC,GAAG,EAAE;gBAC9C,KAAK,CAAC,cAAc,EAAE,CAAC;AACxB,aAAA;AACF,SAAA;KACF;;AAID;;AAEG;IACH,aAAa,GAAA;AACX,QAAA,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;KAC/B;AAED;;;AAGG;AACH,IAAA,gBAAgB,CAAC,MAAe,EAAA;AAC9B,QAAA,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAC9B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;IAED,eAAe,CAAC,GAAG,MAAiC,EAAA;AAClD,QAAA,OAAO,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;KAC9B;;AAGD,IAAA,UAAU,CAAC,KAAiB,EAAA;AAC1B,QAAA,MAAM,kBAAkB,GAAG,KAAK,CAAC,aAAa,CAAC;AAC/C,QAAA,MAAM,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC;AAErC,QAAA,IACE,CAAC,eAAe,KAAK,IAAI,CAAC,YAAY,CAAC,aAAa;AAClD,YAAA,kBAAkB,KAAK,IAAI,CAAC,cAAc,CAAC,aAAa;AACxD,YAAA,kBAAkB,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa;AACnD,aAAC,eAAe,KAAK,IAAI,CAAC,cAAc,CAAC,aAAa;AACpD,gBAAA,kBAAkB,KAAK,IAAI,CAAC,YAAY,CAAC,aAAa;AACtD,gBAAA,kBAAkB,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;AACpD,aAAC,eAAe,KAAK,IAAI,CAAC,OAAO,CAAC,aAAa;AAC7C,gBAAA,kBAAkB,KAAK,IAAI,CAAC,YAAY,CAAC,aAAa;AACtD,gBAAA,kBAAkB,KAAK,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAC3D;YACA,KAAK,CAAC,MAAM,EAAE,CAAC;AAChB,SAAA;KACF;AAEO,IAAA,iBAAiB,CAAC,SAAqC,EAAA;AAC7D,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,GAAa,EAAE,GAAG,KAAI;AAC1D,YAAA,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;AAClB,gBAAA,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACf,aAAA;AAED,YAAA,OAAO,GAAG,CAAC;SACZ,EAAE,EAAE,CAAC,CAAC;KACR;IAEO,kBAAkB,GAAA;AACxB,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE1D,EAAE,KAAA,IAAA,IAAF,EAAE,KAAF,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAE,CAAE,aAAa,CAAC,KAAK,EAAE,CAAC;KAC3B;AAEO,IAAA,8BAA8B,CAAC,GAAW,EAAA;AAChD,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO;AAClC,aAAA,OAAO,EAAE;aACT,SAAS,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,iBAAiB,EAAE,KAAK,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC;KACzG;;0HA5RU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,4BAA4B,EAb5B,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,aAAA,EAAA,KAAA,EAAA,OAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,4BAA4B,CAAC;AAC3D,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,0CAA0C;AACnD,YAAA,WAAW,EAAE,iBAAiB;AAC/B,SAAA;KACF,EAsCgB,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,kCAAkC,8fCrFrD,yjJAgHA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,OAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,+BAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,uGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FD9Da,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAhBxC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACvC,oBAAA,WAAW,EAAE,wCAAwC;AACrD,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAE,UAAU,CAAC,kCAAkC,CAAC;AAC3D,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,0CAA0C;AACnD,4BAAA,WAAW,EAAE,iBAAiB;AAC/B,yBAAA;AACF,qBAAA;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA,CAAA;6KASU,kBAAkB,EAAA,CAAA;sBAA1B,KAAK;gBAKG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAKG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAKG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAKG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAQN,cAAc,EAAA,CAAA;sBADb,eAAe;uBAAC,kCAAkC,CAAA;gBAM3B,OAAO,EAAA,CAAA;sBAA9B,YAAY;uBAAC,QAAQ,CAAA;gBAEK,cAAc,EAAA,CAAA;sBAAxC,SAAS;uBAAC,cAAc,CAAA;gBACE,YAAY,EAAA,CAAA;sBAAtC,SAAS;uBAAC,cAAc,CAAA;gBAKE,YAAY,EAAA,CAAA;sBAAtC,SAAS;uBAAC,cAAc,CAAA;gBAEH,OAAO,EAAA,CAAA;sBAA5B,SAAS;uBAAC,SAAS,CAAA;;;MEtFT,yBAAyB,CAAA;;uHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,iBAHrB,4BAA4B,EAAE,kCAAkC,CADrE,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,UAAU,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,YAAY,CAErG,EAAA,OAAA,EAAA,CAAA,4BAA4B,EAAE,kCAAkC,CAAA,EAAA,CAAA,CAAA;AAE/D,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EAJ3B,OAAA,EAAA,CAAA,CAAC,YAAY,EAAE,UAAU,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;4FAIrG,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBALrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,YAAY,CAAC;AAChH,oBAAA,YAAY,EAAE,CAAC,4BAA4B,EAAE,kCAAkC,CAAC;AAChF,oBAAA,OAAO,EAAE,CAAC,4BAA4B,EAAE,kCAAkC,CAAC;AAC5E,iBAAA,CAAA;;;ACdD;;AAEG;;;;"}