{"version":3,"file":"backbase-ui-ang-char-counter.js","sources":["../../../../libs/ui-ang/char-counter/char-counter.component.ts","../../../../libs/ui-ang/char-counter/char-counter.component.html","../../../../libs/ui-ang/char-counter/char-counter.module.ts","../../../../libs/ui-ang/char-counter/backbase-ui-ang-char-counter.ts"],"sourcesContent":["import { Component, Input, OnInit, Renderer2, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\n\n/**\n * @name CharCounterComponent\n *\n * @description\n * Component for counting characters typed inside a form element\n */\n@Component({\n  selector: 'bb-char-counter-ui',\n  templateUrl: './char-counter.component.html',\n})\nexport class CharCounterComponent implements OnInit, OnChanges {\n  /**\n   * Passed value from parent input, it gives option to count\n   * char event if value was programmatically changed\n   */\n  @Input() inputValue: string | undefined;\n  /**\n   * The element reference which the characters are typed in.\n   */\n  @Input() element: HTMLInputElement | HTMLTextAreaElement | undefined;\n  /**\n   * Indicator for maximum character count.\n   */\n  @Input() maxLength = 150;\n  /**\n   * Whether the element should be blocked when maximum character count is reached.\n   */\n  @Input() set blockTyping(val: boolean) {\n    this._blockTyping = val;\n    if (this.blockTyping && this.element) {\n      this.renderer.setAttribute(this.element, 'maxlength', this.maxLength.toString());\n    } else {\n      this.renderer.removeAttribute(this.element, 'maxlength');\n    }\n  }\n\n  get blockTyping() {\n    return this._blockTyping;\n  }\n  private _blockTyping = false;\n  counter = 0;\n  valid = true;\n\n  constructor(private readonly renderer: Renderer2, private readonly cd: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (this.blockTyping && this.element) {\n      this.renderer.setAttribute(this.element, 'maxlength', this.maxLength.toString());\n    }\n\n    // Cover by setTimeout for handling value change in input/textarea\n    // This change cannot be checked by lifecycle hooks.\n    setTimeout(() => {\n      this.calculateElementValue();\n    }, 0);\n\n    this.renderer.listen(this.element, 'input', () => this.calculateElementValue());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { inputValue } = changes;\n    if (inputValue && inputValue.previousValue !== inputValue.currentValue) {\n      this.counter = inputValue.currentValue.length;\n      this.valid = this.counter <= this.maxLength;\n    }\n  }\n  // It should be deprecated, because it doesn't allow to count\n  // value that was updated programmatically, for instance by patchValue\n  calculateElementValue(): void {\n    this.counter = this.element ? this.element.value.length : 0;\n    this.valid = this.counter <= this.maxLength;\n    this.cd.detectChanges();\n  }\n}\n","<div class=\"bb-char-counter\" [class.bb-char-counter--invalid]=\"!valid\">\n  <div [ngSwitch]=\"true\" aria-live=\"assertive\" class=\"sr-only\" aria-atomic=\"true\" role=\"log\">\n    <div\n      *ngSwitchCase=\"counter > maxLength - 4 && counter !== maxLength\"\n      i18n=\"\n        Above to reach Max Length Error|String is almost has 'maxLength' characters.\n        @@bb-char-counter-ui.pre-max-length-warning\"\n    >\n      You can type only {{ maxLength - counter }} more characters in this field.\n    </div>\n    <div\n      *ngSwitchCase=\"counter === maxLength\"\n      [attr.data-role]=\"'char-counter-error-message'\"\n      i18n=\"Max Length Error|String is more than 'maxLength' characters. @@bb-char-counter-ui.max-length-warning\"\n    >\n      Limit reached. You can only use {{ maxLength }} characters in this field.\n    </div>\n  </div>\n\n  <div *ngIf=\"element\" [attr.data-role]=\"'char-counter-current-max'\">{{ counter }}/{{ maxLength }}</div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CharCounterComponent } from './char-counter.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CharCounterComponent],\n  exports: [CharCounterComponent],\n})\nexport class CharCounterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}