{"version":3,"file":"backbase-ui-ang-badge.js","sources":["../../../../libs/ui-ang/badge/badge.component.ts","../../../../libs/ui-ang/badge/badge.component.html","../../../../libs/ui-ang/badge/badge.module.ts","../../../../libs/ui-ang/badge/backbase-ui-ang-badge.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\nexport type BadgeColor = 'primary' | 'info' | 'success' | 'warning' | 'danger' | 'secondary';\n\n/**\n * @name BadgeComponent\n *\n * @description\n * Component that displays a badge.\n */\n@Component({\n  selector: 'bb-badge-ui',\n  templateUrl: './badge.component.html',\n})\nexport class BadgeComponent implements OnInit {\n  /**\n   * The (background) color of the badge.  Defaults to 'primary'.\n   */\n  @Input() color: BadgeColor | string = 'primary';\n  /**\n   * The text to display in the badge.\n   */\n  @Input() text: string | undefined;\n  /**\n   * The abbreviation to show when using circle styling.\n   */\n  @Input() abbr: string | boolean = false;\n  /**\n   * Whether circle styling should be applied.\n   */\n  @Input() circle = false;\n  /**\n   * Whether text wrap styling should be applied.\n   */\n  @Input() wrap = false;\n  /**\n   * Aria label for the badge\n   */\n  @Input() ariaLabel: string | undefined;\n\n  ngOnInit() {\n    if (typeof this.text === 'undefined') {\n      throw new Error(`\"text\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n","<span\n  class=\"badge break-word\"\n  [ngClass]=\"[color ? 'badge-' + color : '', circle ? 'badge-pill' : '', wrap ? 'text-wrap' : '']\"\n>\n  <ng-container *ngIf=\"!abbr\">\n    {{ text }}\n  </ng-container>\n  <abbr [attr.aria-label]=\"ariaLabel\" title=\"{{ text }}\" *ngIf=\"abbr\">\n    {{ abbr === true && text ? text[0] : abbr }}\n  </abbr>\n</span>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BadgeComponent } from './badge.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BadgeComponent],\n  exports: [BadgeComponent],\n})\nexport class BadgeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;AAIA;;;;;AAKG;MAKU,cAAc,CAAA;AAJ3B,IAAA,WAAA,GAAA;AAKE;;AAEG;QACM,IAAK,CAAA,KAAA,GAAwB,SAAS,CAAC;AAKhD;;AAEG;QACM,IAAI,CAAA,IAAA,GAAqB,KAAK,CAAC;AACxC;;AAEG;QACM,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;AACxB;;AAEG;QACM,IAAI,CAAA,IAAA,GAAG,KAAK,CAAC;AAWvB,KAAA;IALC,QAAQ,GAAA;AACN,QAAA,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,CAAgC,6BAAA,EAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAG,CAAA,CAAA,CAAC,CAAC;AAC3E,SAAA;KACF;;4GA9BU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,cAAc,mKCd3B,yWAWA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDGa,cAAc,EAAA,UAAA,EAAA,CAAA;kBAJ1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,WAAW,EAAE,wBAAwB;AACtC,iBAAA,CAAA;8BAKU,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAIG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAIG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAIG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAIG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAIG,SAAS,EAAA,CAAA;sBAAjB,KAAK;;;ME5BK,WAAW,CAAA;;yGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAX,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EAHP,YAAA,EAAA,CAAA,cAAc,CADnB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,cAAc,CAAA,EAAA,CAAA,CAAA;0GAEb,WAAW,EAAA,OAAA,EAAA,CAJb,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;4FAIZ,WAAW,EAAA,UAAA,EAAA,CAAA;kBALvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,cAAc,CAAC;oBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;AAC1B,iBAAA,CAAA;;;ACTD;;AAEG;;;;"}