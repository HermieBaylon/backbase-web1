{"version":3,"file":"backbase-ui-ang-dropdown-single-select.js","sources":["../../../../libs/ui-ang/dropdown-single-select/dropdown-single-select-option.component.ts","../../../../libs/ui-ang/dropdown-single-select/dropdown-single-select.component.ts","../../../../libs/ui-ang/dropdown-single-select/dropdown-single-select.component.html","../../../../libs/ui-ang/dropdown-single-select/dropdown-single-select.module.ts","../../../../libs/ui-ang/dropdown-single-select/backbase-ui-ang-dropdown-single-select.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\n\nexport const BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN: InjectionToken<ChangeDetectorRef> = new InjectionToken(\n  'BB_DROPDOWN_SINGLE_SELECT',\n);\n\n/**\n * @name DropdownSingleSelectOption\n *\n * @description\n * Component that represents a single option that is part of the dropdown single select component.\n */\n@Component({\n  selector: 'bb-dropdown-single-select-option-ui',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: '',\n})\nexport class DropdownSingleSelectOptionComponent implements OnChanges {\n  /**\n   * The value of the native option element\n   */\n  @Input() value: string | undefined;\n  /**\n   * The label of the option item\n   */\n  @Input() label: string | undefined;\n\n  constructor(@Inject(BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN) private readonly dropdownCDRef: ChangeDetectorRef) {}\n\n  // NOTES: trigger of detectChanges is needed\n  // because DropdownSingleSelectComponent has changeDetection\n  // strategy onPush, hence it reacts only to changes\n  // of its own @Inputs, but not @Inputs() of options component\n  ngOnChanges({ value = {} as SimpleChange, label = {} as SimpleChange }: SimpleChanges) {\n    const { firstChange: firstChangeValue } = value;\n    const { firstChange: firstChangeLabel } = label;\n\n    if (firstChangeLabel && firstChangeValue) {\n      return;\n    }\n\n    this.dropdownCDRef.detectChanges();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  forwardRef,\n  Input,\n  QueryList,\n} from '@angular/core';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN,\n  DropdownSingleSelectOptionComponent,\n} from './dropdown-single-select-option.component';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\n\ninterface Option {\n  [key: string]: any;\n}\n\n/**\n * @name DropdownSingleSelectComponent\n *\n * @description\n * Component that displays a dropdown with a single select option.\n *\n * @a11y Current component provides option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - aria-label will be linked to the single select dropdown with label\n *  - set aria-labelledby with ID of another element in the DOM as dropdown's label.\n *  - set aria-describedby with ID of another element in the DOM with descriptive text about the dropdown\n *  - set aria-expanded with a boolean value based on the listbox display.\n *  - set aria-invalid to true when a selected option is not valid ans vice versa\n *  - aria-owns handles contextual relationship between a parent and its child elements,\n *    in this case between dropdown menu and dropdown items, use the id from the input binding.\n *\n */\n@Component({\n  selector: 'bb-dropdown-single-select-ui',\n  templateUrl: './dropdown-single-select.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DropdownSingleSelectComponent),\n      multi: true,\n    },\n    {\n      provide: BB_DROPDOWN_CHANGE_DETECTION_REF_TOKEN,\n      useExisting: ChangeDetectorRef,\n    },\n  ],\n})\nexport class DropdownSingleSelectComponent extends InputBaseComponent {\n  /**\n   * The placeholder for the select. Defaults to an empty string;\n   */\n  @Input() placeholder = '';\n  /**\n   * This Boolean attribute determine if default option as placeholder is displayed. Defaults to false.\n   */\n  @Input() defaultOptionAsPlaceholder = false;\n\n  /**\n   * The value for the input field. It can be a list of strings or list of objects.\n   * If the value is a list of objects, you have to provide the `displayAttributePath` property.\n   */\n  @Input() options: Array<Object | string> = [];\n\n  /**\n   * The child option components of type DropdownSingleSelectOptionComponent\n   */\n  @ContentChildren(DropdownSingleSelectOptionComponent)\n  contentOptions: QueryList<DropdownSingleSelectOptionComponent> | undefined;\n\n  /**\n   * In case the list of options is a list of objects,\n   * this property will set the path to the object property which value will be used to display the option.\n   * Undefined will assume the options are strings.\n   * Child Nodes should be seperated by '.'\n   */\n  @Input() displayAttributePath: string | undefined;\n\n  // TODO: after backbase-theme-v2 released. Change default value to 'corner-down'.\n  /**\n   * Right corner icon name.\n   * Default name 'toggle-down'\n   */\n  @Input() iconName = 'toggle-down';\n\n  /**\n   * Allowing override the option comparison algorithm for tracking identities when\n   * checking for change\n   */\n  @Input() compareWithFn: (a: any, b: any) => boolean = (a, b) => a === b;\n\n  constructor(protected readonly cd: ChangeDetectorRef, protected readonly deprecationsService: DeprecationsService) {\n    super(cd, deprecationsService);\n  }\n\n  getOptionDisplayText(option: Object | string) {\n    return this.displayAttributePath && typeof option === 'object' && option !== null\n      ? this.resolvePath(this.displayAttributePath, option as Option)\n      : option;\n  }\n\n  private resolvePath(path: string, object: Option): string {\n    if (!object && !path) {\n      return '';\n    }\n    let paths;\n    let propName: string;\n    if (path.match(/^\\[\\d\\]/) !== null) {\n      paths = path.replace(/^[\\[\\]]/g, '').split(/\\./);\n      propName = paths[0].replace(/\\]/, '')[0];\n    } else {\n      paths = path.split(/[\\.\\[]/);\n      propName = paths[0];\n    }\n\n    const remainingPath = paths\n      .slice(1)\n      .reduce((result: string[], item: string) => {\n        if (item) {\n          if (item.match(/^\\d\\]/)) {\n            item = '[' + item;\n          }\n          result.push(item);\n        }\n\n        return result;\n      }, [])\n      .join('.');\n\n    if (!remainingPath) {\n      const propValue = object[propName];\n\n      return typeof propValue === 'string' ? propValue : propValue ? String(propValue) : '';\n    } else if (object.hasOwnProperty(propName)) {\n      return this.resolvePath(remainingPath, object[propName]);\n    } else {\n      return '';\n    }\n  }\n\n  trackByFn(index: number, item: DropdownSingleSelectOptionComponent) {\n    return item.value;\n  }\n}\n","<label *ngIf=\"label\" class=\"bb-dropdown-single-select__label\" for=\"{{ id }}\" [attr.data-role]=\"'label'\">{{\n  label\n}}</label>\n<!-- Note: in HTML readonly is not supported for <select> like it is for <input> elements -->\n<select\n  [(ngModel)]=\"value\"\n  class=\"form-control bb-dropdown__select\"\n  (blur)=\"onBlur()\"\n  (change)=\"onValueChange()\"\n  (focus)=\"onFocus()\"\n  [compareWith]=\"compareWithFn\"\n  [attr.aria-label]=\"ariaLabel\"\n  [attr.aria-labelledby]=\"ariaLabelledby\"\n  [attr.aria-describedby]=\"ariaDescribedby\"\n  [attr.aria-expanded]=\"ariaExpanded\"\n  [attr.role]=\"role\"\n  [attr.aria-invalid]=\"ariaInvalid\"\n  [attr.aria-owns]=\"ariaOwns\"\n  [disabled]=\"disabled\"\n  [required]=\"required\"\n  id=\"{{ id }}\"\n  [bbFocus]=\"autofocus\"\n  [attr.data-role]=\"'dropdown'\"\n>\n  <option *ngIf=\"defaultOptionAsPlaceholder && placeholder\" value=\"\">\n    {{ placeholder }}\n  </option>\n  <option\n    class=\"bb-dropdown-single-select__option-hidden\"\n    *ngIf=\"!defaultOptionAsPlaceholder && placeholder\"\n    value=\"\"\n    disabled\n    hidden\n  >\n    {{ placeholder }}\n  </option>\n  <option *ngFor=\"let option of options\" [ngValue]=\"option\">\n    {{ getOptionDisplayText(option) }}\n  </option>\n  <option *ngFor=\"let option of contentOptions; trackBy: trackByFn\" [ngValue]=\"option.value\">\n    {{ option.label }}\n  </option>\n</select>\n<div class=\"bb-dropdown__icon\">\n  <bb-icon-ui color=\"muted\" [name]=\"iconName\" size=\"md\"></bb-icon-ui>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { FormsModule } from '@angular/forms';\nimport { BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport { FocusModule } from '@backbase/ui-ang/focus';\n\nimport { DropdownSingleSelectComponent } from './dropdown-single-select.component';\nimport { DropdownSingleSelectOptionComponent } from './dropdown-single-select-option.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, FormsModule, BaseClassesModule, FocusModule],\n  declarations: [DropdownSingleSelectComponent, DropdownSingleSelectOptionComponent],\n  exports: [DropdownSingleSelectComponent, DropdownSingleSelectOptionComponent],\n})\nexport class DropdownSingleSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}