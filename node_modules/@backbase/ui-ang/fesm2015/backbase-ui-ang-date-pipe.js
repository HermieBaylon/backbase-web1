import { getLocaleDateTimeFormat, FormatWidth, formatDate, CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { LOCALE_ID, Pipe, Inject, NgModule } from '@angular/core';

/**
 * @name bbDate
 *
 * @description
 * Pipe for formatting dates
 */
class BbDatePipe {
    constructor(locale) {
        this.locale = locale;
    }
    /**
     * @name BbDatePipe#transform
     * @param value - the date that should be formatted
     * @param format - the format type for the date to be formatted
     * @param timezone - used for formatting the time
     * @param locale - locale to use for formatting
     *
     *
     * @description
     * Depending on format type, formats a date
     * Custom format is called with bbShort,
     * and formats to 'MMMM d, y at HH:mm',
     * otherwise uses the predifined angular formats
     *
     */
    transform(value, format = 'mediumDate', timezone, locale) {
        if (format === 'bbShort') {
            const localeFormat = getLocaleDateTimeFormat(this.locale, FormatWidth.Long);
            const dateFormatted = formatDate(value, 'MMMM d, y', this.locale, timezone);
            const timeFormatted = formatDate(value, 'HH:mm', this.locale, timezone);
            return localeFormat.replace(/'/g, '').replace('{1}', dateFormatted).replace('{0}', timeFormatted);
        }
        if (value == null || value === '' || value !== value)
            return null;
        try {
            return formatDate(value, format, locale || this.locale, timezone);
        }
        catch (error) {
            throw Error(`InvalidPipeArgument: '${error.message}' for pipe BbDatePipe`);
        }
    }
}
BbDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BbDatePipe, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });
BbDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BbDatePipe, name: "bbDate" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BbDatePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'bbDate',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [LOCALE_ID]
                }] }]; } });

class BbDatePipeModule {
}
BbDatePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BbDatePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
BbDatePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BbDatePipeModule, declarations: [BbDatePipe], imports: [CommonModule], exports: [BbDatePipe] });
BbDatePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BbDatePipeModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BbDatePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [BbDatePipe],
                    exports: [BbDatePipe],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { BbDatePipe, BbDatePipeModule };
//# sourceMappingURL=backbase-ui-ang-date-pipe.js.map
