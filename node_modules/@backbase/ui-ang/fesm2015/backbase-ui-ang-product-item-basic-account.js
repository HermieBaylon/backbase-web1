import * as i4 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Directive, Component, ContentChild, Input, NgModule } from '@angular/core';
import * as i6 from '@backbase/ui-ang/payment-card-number-pipe';
import { DefaultPaymentCardNumberFormat, PaymentCardNumberModule } from '@backbase/ui-ang/payment-card-number-pipe';
import * as i1 from '@backbase/ui-ang/icon';
import { IconModule } from '@backbase/ui-ang/icon';
import * as i2 from '@backbase/ui-ang/ellipsis';
import { EllipsisModule } from '@backbase/ui-ang/ellipsis';
import * as i3 from '@backbase/ui-ang/amount';
import { AmountModule } from '@backbase/ui-ang/amount';
import * as i5 from '@backbase/ui-ang/highlight';
import { HighlightModule } from '@backbase/ui-ang/highlight';

class CustomProductItemBasicAccountTypeDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
CustomProductItemBasicAccountTypeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomProductItemBasicAccountTypeDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
CustomProductItemBasicAccountTypeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomProductItemBasicAccountTypeDirective, selector: "ng-template[bbCustomProductItemBasicAccountType]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomProductItemBasicAccountTypeDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbCustomProductItemBasicAccountType]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
class CustomProductItemBasicAccountTitleDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
CustomProductItemBasicAccountTitleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomProductItemBasicAccountTitleDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
CustomProductItemBasicAccountTitleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomProductItemBasicAccountTitleDirective, selector: "ng-template[bbCustomProductItemBasicAccountTitle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomProductItemBasicAccountTitleDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbCustomProductItemBasicAccountTitle]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
class CustomProductItemBasicAccountDetailsFormatterDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
CustomProductItemBasicAccountDetailsFormatterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomProductItemBasicAccountDetailsFormatterDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
CustomProductItemBasicAccountDetailsFormatterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomProductItemBasicAccountDetailsFormatterDirective, selector: "ng-template[bbCustomProductItemBasicAccountDetailsFormatter]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomProductItemBasicAccountDetailsFormatterDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbCustomProductItemBasicAccountDetailsFormatter]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
class ProductItemBasicAccountComponent {
    constructor() {
        this.hostRef = this;
        /**
         * Configuration of how the product number should be formatted.
         */
        this.productNumberFormat = DefaultPaymentCardNumberFormat;
        /**
         * Will show currency Symbol in amount. Default value true
         */
        this.showCurrencySymbol = true;
        /**
         * The active state of card (it adds active class for blue line)
         */
        this.active = true;
        /**
         * The favorite state of card (add favorite icon next to title)
         */
        this.favorite = false;
        /**
         * The favorite icon color (define star icon color)
         */
        this.favoriteIconColor = 'primary';
        /**
         * The selected state of card (it removes check mark)
         */
        this.selected = false;
    }
}
ProductItemBasicAccountComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductItemBasicAccountComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ProductItemBasicAccountComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemBasicAccountComponent, selector: "bb-product-item-basic-account-ui", inputs: { title: "title", productNumber: "productNumber", productNumberFormat: "productNumberFormat", currency: "currency", showCurrencySymbol: "showCurrencySymbol", amount: "amount", highlight: "highlight", productDetailsInfo: "productDetailsInfo", active: "active", favorite: "favorite", favoriteIconColor: "favoriteIconColor", selected: "selected", type: "type", status: "status", balanceLabel: "balanceLabel", bankBranchCode: "bankBranchCode" }, queries: [{ propertyName: "customProductItemBasicAccountType", first: true, predicate: CustomProductItemBasicAccountTypeDirective, descendants: true, static: true }, { propertyName: "customProductItemBasicAccountTitle", first: true, predicate: CustomProductItemBasicAccountTitleDirective, descendants: true, static: true }, { propertyName: "customProductItemBasicAccountDetailsFormatter", first: true, predicate: CustomProductItemBasicAccountDetailsFormatterDirective, descendants: true, static: true }], ngImport: i0, template: "<div [class.active]=\"active\" class=\"bb-product-item bb-product-item-basic-account-ui product-item\">\n  <div class=\"bb-stack bb-stack--wrap product-item-content\">\n    <div class=\"bb-stack__item bb-product-item__title\">\n      <div class=\"bb-stack\">\n        <ng-container *ngIf=\"customProductItemBasicAccountType; else defaultProductItemBasicAccountType\">\n          <ng-container\n            *ngTemplateOutlet=\"customProductItemBasicAccountType?.templateRef; context: hostRef\"\n          ></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"customProductItemBasicAccountTitle; else defaultProductItemBasicAccountTitle\">\n          <ng-container\n            *ngTemplateOutlet=\"customProductItemBasicAccountTitle?.templateRef; context: hostRef\"\n          ></ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"bb-stack__break bb-stack__break--xs\"></div>\n    <div class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--spacing-none bb-product-item__details\">\n      <ng-container\n        *ngIf=\"customProductItemBasicAccountDetailsFormatter; else defaultProductItemBasicAccountDetailsFormatter\"\n      >\n        <ng-container\n          *ngTemplateOutlet=\"customProductItemBasicAccountDetailsFormatter?.templateRef; context: hostRef\"\n        ></ng-container>\n      </ng-container>\n    </div>\n    <ng-container *ngIf=\"productDetailsInfo?.owners\">\n      <div class=\"bb-stack__break--xs bb-stack__break--sm-up\"></div>\n      <div class=\"bb-stack__item bb-product-item__owners\">\n        <span data-role=\"productDetailsInfo-owners\" class=\"bb-text-default\">\n          {{ productDetailsInfo?.owners }}\n        </span>\n      </div>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #defaultProductItemBasicAccountType>\n  <div class=\"bb-stack__item bb-product-item__active\" *ngIf=\"active && !selected\">\n    <bb-icon-ui name=\"success\" size=\"md\" color=\"primary\" cropped></bb-icon-ui>\n  </div>\n  <div class=\"bb-stack__item bb-product-item__type\" *ngIf=\"type && selected\">\n    <bb-icon-ui color=\"secondary\" size=\"md\" [name]=\"type\" cropped></bb-icon-ui>\n  </div>\n</ng-template>\n\n<ng-template #defaultProductItemBasicAccountTitle>\n  <div class=\"bb-account-info\">\n    <div\n      (mousedown)=\"$event.stopPropagation()\"\n      data-role=\"card-title\"\n      class=\"bb-account-info__title\"\n      [ngClass]=\"{ 'bb-text-support': status === 'inactive' || status === 'closed' }\"\n    >\n      <bb-ellipsis-ui [text]=\"title\"></bb-ellipsis-ui>\n      <bb-icon-ui\n        *ngIf=\"favorite\"\n        class=\"bb-account-info__icon\"\n        size=\"sm\"\n        [color]=\"favoriteIconColor\"\n        data-role=\"favorite-icon\"\n        name=\"star\"\n      ></bb-icon-ui>\n      <span class=\"bb-account-info__status bb-account-status\" [ngSwitch]=\"status\">\n        <ng-container *ngSwitchCase=\"'closed'\">\n          <bb-icon-ui class=\"bb-account-status__icon\" size=\"sm\" name=\"cancel\" color=\"danger\"></bb-icon-ui>\n          <span class=\"bb-account-status__state\" i18n=\"Account closed status@@product-item-base-account.status.closed\">\n            Closed\n          </span>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'inactive'\">\n          <bb-icon-ui class=\"bb-account-status__icon\" size=\"sm\" name=\"remove-circle-outline\"></bb-icon-ui>\n          <span\n            class=\"bb-account-status__state\"\n            i18n=\"Account closed status@@product-item-base-account.status.inactive\"\n          >\n            Inactive\n          </span>\n        </ng-container>\n      </span>\n    </div>\n    <div *ngIf=\"productNumber\" data-role=\"card-sub-title\" class=\"bb-stack bb-account-info__product-number\">\n      <ng-container *ngIf=\"bankBranchCode\">\n        <span\n          class=\"sr-only\"\n          i18n=\"Bank branch code screen reader label@@product-item-base-account.bankBranchCode.label\"\n        >\n          ; Bank branch code:\n        </span>\n        <span data-role=\"branch-code-text\">{{ bankBranchCode }}&nbsp;/&nbsp;</span>\n      </ng-container>\n      <span class=\"sr-only\" i18n=\"Account number screen reader label@@product-item-base-account.accountNumber.label\">\n        ; Account number:\n      </span>\n      <bb-ellipsis-ui [text]=\"productNumber | paymentCardNumber: productNumberFormat\"></bb-ellipsis-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #defaultProductItemBasicAccountDetailsFormatter>\n  <div class=\"bb-text-align-right\">\n    <div *ngIf=\"balanceLabel\">\n      <span class=\"bb-text-support bb-subheader bb-subheader--regular\" data-role=\"balance-type-label\">\n        {{ balanceLabel }}\n      </span>\n    </div>\n    <span\n      *ngIf=\"!balanceLabel\"\n      class=\"sr-only\"\n      i18n=\"Balance screen reader label@@product-item-base-account.balance.label\"\n      >; Balance:</span\n    >\n    <bb-amount-ui\n      class=\"bb-highlight bb-product-item__amount\"\n      [amount]=\"amount\"\n      [currency]=\"currency\"\n      [mapCurrency]=\"showCurrencySymbol\"\n      [bbHighlight]=\"highlight\"\n    ></bb-amount-ui>\n  </div>\n</ng-template>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.EllipsisComponent, selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }, { type: i3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i4.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i4.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5.HighlightDirective, selector: "[bbHighlight]", inputs: ["amount", "bbHighlight", "negativeClass", "positiveClass"] }], pipes: { "paymentCardNumber": i6.PaymentCardNumberPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductItemBasicAccountComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-product-item-basic-account-ui',
                    templateUrl: './product-item-basic-account.component.html',
                }]
        }], propDecorators: { customProductItemBasicAccountType: [{
                type: ContentChild,
                args: [CustomProductItemBasicAccountTypeDirective, { static: true }]
            }], customProductItemBasicAccountTitle: [{
                type: ContentChild,
                args: [CustomProductItemBasicAccountTitleDirective, { static: true }]
            }], customProductItemBasicAccountDetailsFormatter: [{
                type: ContentChild,
                args: [CustomProductItemBasicAccountDetailsFormatterDirective, { static: true }]
            }], title: [{
                type: Input
            }], productNumber: [{
                type: Input
            }], productNumberFormat: [{
                type: Input
            }], currency: [{
                type: Input
            }], showCurrencySymbol: [{
                type: Input
            }], amount: [{
                type: Input
            }], highlight: [{
                type: Input
            }], productDetailsInfo: [{
                type: Input
            }], active: [{
                type: Input
            }], favorite: [{
                type: Input
            }], favoriteIconColor: [{
                type: Input
            }], selected: [{
                type: Input
            }], type: [{
                type: Input
            }], status: [{
                type: Input
            }], balanceLabel: [{
                type: Input
            }], bankBranchCode: [{
                type: Input
            }] } });

class ProductItemBasicAccountModule {
}
ProductItemBasicAccountModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductItemBasicAccountModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ProductItemBasicAccountModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductItemBasicAccountModule, declarations: [ProductItemBasicAccountComponent,
        CustomProductItemBasicAccountTypeDirective,
        CustomProductItemBasicAccountTitleDirective,
        CustomProductItemBasicAccountDetailsFormatterDirective], imports: [CommonModule, AmountModule, PaymentCardNumberModule, HighlightModule, IconModule, EllipsisModule], exports: [ProductItemBasicAccountComponent,
        CustomProductItemBasicAccountTypeDirective,
        CustomProductItemBasicAccountTitleDirective,
        CustomProductItemBasicAccountDetailsFormatterDirective] });
ProductItemBasicAccountModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductItemBasicAccountModule, imports: [[CommonModule, AmountModule, PaymentCardNumberModule, HighlightModule, IconModule, EllipsisModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductItemBasicAccountModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, AmountModule, PaymentCardNumberModule, HighlightModule, IconModule, EllipsisModule],
                    declarations: [
                        ProductItemBasicAccountComponent,
                        CustomProductItemBasicAccountTypeDirective,
                        CustomProductItemBasicAccountTitleDirective,
                        CustomProductItemBasicAccountDetailsFormatterDirective,
                    ],
                    exports: [
                        ProductItemBasicAccountComponent,
                        CustomProductItemBasicAccountTypeDirective,
                        CustomProductItemBasicAccountTitleDirective,
                        CustomProductItemBasicAccountDetailsFormatterDirective,
                    ],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { CustomProductItemBasicAccountDetailsFormatterDirective, CustomProductItemBasicAccountTitleDirective, CustomProductItemBasicAccountTypeDirective, ProductItemBasicAccountComponent, ProductItemBasicAccountModule };
//# sourceMappingURL=backbase-ui-ang-product-item-basic-account.js.map
