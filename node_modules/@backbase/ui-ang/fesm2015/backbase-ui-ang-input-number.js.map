{"version":3,"file":"backbase-ui-ang-input-number.js","sources":["../../../../libs/ui-ang/input-number/digit-only.directive.ts","../../../../libs/ui-ang/input-number/input-number.component.ts","../../../../libs/ui-ang/input-number/input-number.component.html","../../../../libs/ui-ang/input-number/input-number.module.ts","../../../../libs/ui-ang/input-number/backbase-ui-ang-input-number.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[bbDigitOnly]',\n})\nexport class DigitOnlyDirective {\n  private navigationKeys = [\n    'Backspace',\n    'Delete',\n    'Tab',\n    'Escape',\n    'Enter',\n    'Home',\n    'End',\n    'ArrowLeft',\n    'ArrowRight',\n    'Clear',\n    'Copy',\n    'Paste',\n  ];\n  inputElement: HTMLInputElement;\n\n  @Input('bbDigitOnly')\n  isEnabled = true;\n\n  @Input()\n  allowNegativeSign = false;\n\n  previousKey: string | undefined;\n\n  constructor(public el: ElementRef) {\n    this.inputElement = el.nativeElement;\n  }\n\n  /* eslint-disable complexity */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(e: KeyboardEvent) {\n    const array = ['KeyA', 'KeyC', 'KeyV', 'KeyX'];\n\n    const matchPattern = this.allowNegativeSign ? /^-|\\d$/ : /^\\d$/;\n\n    if (\n      !this.isEnabled ||\n      this.navigationKeys.indexOf(e.key) > -1 ||\n      (array.includes(e.code) && (e.ctrlKey || e.metaKey))\n    ) {\n      this.previousKey = e.key;\n\n      return;\n    }\n\n    const preventEventDefault =\n      // it is other than pattern\n      !matchPattern.test(e.key) ||\n      // try to add negative when there is already a value\n      (e.key === '-' && this.inputElement.value.indexOf('-') > -1) ||\n      // try to add negative sign when you hit negative sign just before\n      (e.key === '-' && this.previousKey === '-');\n\n    if (!this.inputElement.value && this.previousKey !== '-') {\n      this.inputElement.value = '';\n    }\n\n    this.previousKey = e.key;\n\n    if (preventEventDefault) {\n      e.preventDefault();\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  Optional,\n  Renderer2,\n  Self,\n  ViewChild,\n} from '@angular/core';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { NgControl } from '@angular/forms';\nimport { DomAttributesService } from '@backbase/ui-ang/services';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\n\n/**\n * @name InputNumberComponent\n *\n * @description\n * Component that displays a text input.\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n */\n@Component({\n  selector: 'bb-input-number-ui',\n  templateUrl: './input-number.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputNumberComponent extends InputBaseComponent implements AfterViewInit {\n  /**\n   * The placeholder for the number input. Defaults to an empty string;\n   */\n  @Input() placeholder = '';\n  /**\n   * The maximum value to accept\n   */\n  @Input() max: number | undefined;\n  /**\n   * The minimum value to accept for this input\n   */\n  @Input() min: number | undefined;\n  /**\n   * A stepping interval to use when using up and down arrows to adjust the value\n   */\n  @Input() step: number | undefined;\n  /**\n   * Whether the number input is readonly.\n   */\n  @Input() readonly = false;\n\n  /**\n   * The autocomplete value of the enclosed input control.\n   */\n  @Input() autocomplete: string | undefined;\n\n  /**\n   * Aria label for the number input\n   */\n  @Input()\n  ariaLabel = 'Number Input';\n  @ViewChild('inputNumber') inputEl: ElementRef | undefined;\n\n  /**\n   * If `true` then the under-laying input control will behave as a default number input\n   */\n  @Input() allowNonDigits = false;\n\n  /**\n   * If `true` then the under-laying input control will allow negative sign as well.\n   * Known issue is that it is possible to insert the negative sign anywhere in the field, not only at the beginning.\n   * Inserting the negative sign after a digit will render the value empty.\n   */\n  @Input() allowNegativeSign = false;\n\n  constructor(\n    private readonly domAttrService: DomAttributesService,\n    private readonly elem: ElementRef,\n    private readonly renderer2: Renderer2,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly deprecationsService: DeprecationsService,\n    @Self() @Optional() public parentFormControl: NgControl,\n  ) {\n    super(cd, deprecationsService);\n\n    if (this.parentFormControl) {\n      this.parentFormControl.valueAccessor = this;\n    }\n  }\n\n  /* eslint-disable-next-line no-null/no-null */\n  private oldInputValue: string | null = null;\n\n  onInput(inputNumber: HTMLInputElement) {\n    if (!inputNumber.value && this.oldInputValue !== null) {\n      inputNumber.value = this.oldInputValue;\n      this.onValueChange(inputNumber.value);\n    }\n    /* eslint-disable-next-line no-null/no-null */\n    this.oldInputValue = null;\n  }\n\n  onPaste(inputNumber: HTMLInputElement) {\n    this.oldInputValue = inputNumber.value;\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.ariaLabel) {\n      this.domAttrService.moveAriaAttributes(\n        this.elem.nativeElement,\n        this.inputEl && this.inputEl.nativeElement,\n        this.renderer2,\n      );\n    }\n  }\n}\n","<label *ngIf=\"label\" for=\"{{ id }}\">{{ label }}</label>\n<input\n  #inputNumber\n  [bbDigitOnly]=\"!allowNonDigits || allowNegativeSign\"\n  [allowNegativeSign]=\"allowNegativeSign\"\n  id=\"{{ id }}\"\n  [attr.aria-autocomplete]=\"ariaAutocomplete\"\n  [attr.aria-controls]=\"ariaControls\"\n  [attr.aria-labelledby]=\"ariaLabelledby\"\n  [attr.aria-describedby]=\"ariaDescribedby\"\n  [attr.aria-expanded]=\"ariaExpanded\"\n  [attr.role]=\"role\"\n  [attr.aria-invalid]=\"ariaInvalid\"\n  [attr.aria-owns]=\"ariaOwns\"\n  [attr.aria-label]=\"(!label && ariaLabel) || null\"\n  [ngModel]=\"value\"\n  (ngModelChange)=\"onValueChange($event)\"\n  (blur)=\"onBlur()\"\n  type=\"number\"\n  class=\"form-control\"\n  (focus)=\"onFocus()\"\n  (input)=\"onInput(inputNumber)\"\n  (paste)=\"onPaste(inputNumber)\"\n  [disabled]=\"disabled\"\n  [readOnly]=\"readonly\"\n  [placeholder]=\"placeholder\"\n  [required]=\"required\"\n  [attr.min]=\"min\"\n  [attr.max]=\"max\"\n  [attr.size]=\"size\"\n  [attr.step]=\"step\"\n  [bbFocus]=\"autofocus\"\n  [attr.autocomplete]=\"autocomplete\"\n/>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BaseClassesModule } from '@backbase/ui-ang/base-classes';\n\nimport { InputNumberComponent } from './input-number.component';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { DigitOnlyDirective } from './digit-only.directive';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, BaseClassesModule, FocusModule],\n  declarations: [InputNumberComponent, DigitOnlyDirective],\n  exports: [InputNumberComponent],\n})\nexport class InputNumberModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i5.DigitOnlyDirective"],"mappings":"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"}