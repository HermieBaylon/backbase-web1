{"version":3,"file":"backbase-ui-ang-input-timepicker.js","sources":["../../../../libs/ui-ang/input-timepicker/input-timepicker.service.ts","../../../../libs/ui-ang/input-timepicker/input-timepicker.component.ts","../../../../libs/ui-ang/input-timepicker/input-timepicker.component.html","../../../../libs/ui-ang/input-timepicker/input-timepicker.module.ts","../../../../libs/ui-ang/input-timepicker/backbase-ui-ang-input-timepicker.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgbTimeAdapter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class TimepickerStringAdapter extends NgbTimeAdapter<string | null> {\n  fromModel(value: string): NgbTimeStruct {\n    if (value) {\n      const [hour, minute, second] = value.split(':').map((str) => parseInt(str, 10));\n\n      return { hour, minute, second };\n    }\n\n    return null as unknown as NgbTimeStruct;\n  }\n\n  toModel(time: NgbTimeStruct): string | null {\n    if (!time) {\n      // eslint-disable-next-line\n      return null;\n    }\n\n    return `${String(time.hour).padStart(2, '0')}:${String(time.minute).padStart(2, '0')}:${String(\n      time.second,\n    ).padStart(2, '0')}`;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  Input,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\nimport { NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { defaultSize, InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { TimepickerStringAdapter } from './input-timepicker.service';\nimport { DomAttributesService } from '@backbase/ui-ang/services';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\n\nconst SIZE_MEDIUM = defaultSize;\nconst SIZE_SMALL = SIZE_MEDIUM / 2;\nconst SIZE_LARGE = SIZE_MEDIUM * 2;\n\nconst KEYWORD_SMALL = 'small';\nconst KEYWORD_MEDIUM = 'medium';\nconst KEYWORD_LARGE = 'large';\n\n/**\n * @name InputTimepickerComponent\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n * @description\n * Component that displays a timepicker.\n */\n@Component({\n  selector: 'bb-input-timepicker-ui',\n  templateUrl: './input-timepicker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputTimepickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => InputTimepickerComponent),\n      multi: true,\n    },\n    { provide: NgbTimeAdapter, useClass: TimepickerStringAdapter },\n  ],\n})\nexport class InputTimepickerComponent extends InputBaseComponent implements Validator, AfterViewInit {\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input() hourStep = 1;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() clock: '12h' | '24h' = '24h';\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input() minuteStep = 1;\n\n  /**\n   * If true, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonly = false;\n\n  /**\n   * If true, it is possible to select seconds.\n   */\n  @Input() seconds = false;\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input() secondStep = 1;\n\n  /**\n   * If set, validate according to min time\n   */\n  @Input() min: string | undefined;\n\n  /**\n   * If set , validate according to max time\n   */\n  @Input() max: string | undefined;\n\n  /**\n   * The autocomplete value of enclosed input control.\n   */\n  @Input() autocomplete: 'string' | undefined;\n\n  @HostBinding('attr.class') cssClass = 'bb-input-timepicker';\n\n  @ViewChild('timepicker') inputEl: ElementRef | undefined;\n\n  get meridian() {\n    return this.clock === '12h';\n  }\n\n  getKeywordBySize(size: number | string): string {\n    if (size <= SIZE_SMALL) {\n      return KEYWORD_SMALL;\n    } else if (size >= SIZE_LARGE) {\n      return KEYWORD_LARGE;\n    } else {\n      return KEYWORD_MEDIUM;\n    }\n  }\n\n  getSizeByKeyword(keyword: any): number | undefined {\n    const sizeKeywords: { [index: string]: number } = {\n      [KEYWORD_SMALL]: SIZE_SMALL,\n      [KEYWORD_MEDIUM]: SIZE_MEDIUM,\n      [KEYWORD_LARGE]: SIZE_LARGE,\n    };\n\n    return typeof keyword === 'string' && sizeKeywords.hasOwnProperty(keyword) ? sizeKeywords[keyword] : undefined;\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n\n    if (!value) {\n      /* eslint-disable-next-line  no-null/no-null */\n      return null;\n    }\n\n    if (this.min && this.max) {\n      const valid = this.min <= value && value <= this.max;\n\n      return valid ? null : { minMaxTime: true };\n    } else if (this.min) {\n      return this.min <= value ? null : { minTime: true };\n    } else if (this.max) {\n      return value <= this.max ? null : { maxTime: true };\n    }\n\n    return null;\n  }\n\n  /**\n   * @deprecated since version 4\n   */\n  constructor(\n    protected readonly cd: ChangeDetectorRef,\n    private readonly domAttrService: DomAttributesService,\n    private readonly elem: ElementRef,\n    private readonly renderer2: Renderer2,\n    protected readonly deprecationsService: DeprecationsService,\n  ) {\n    super(cd, deprecationsService);\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.ariaLabel && this.inputEl) {\n      this.domAttrService.moveAriaAttributes(this.elem.nativeElement, this.inputEl.nativeElement, this.renderer2);\n    }\n  }\n}\n","<ngb-timepicker\n  #timepicker\n  id=\"{{ id }}\"\n  class=\"bb-input-timepicker\"\n  [attr.aria-labelledby]=\"ariaLabelledby\"\n  [attr.aria-describedby]=\"ariaDescribedby\"\n  [attr.aria-expanded]=\"ariaExpanded\"\n  [attr.role]=\"role\"\n  [attr.aria-invalid]=\"ariaInvalid\"\n  [attr.aria-owns]=\"ariaOwns\"\n  [readonlyInputs]=\"readonly\"\n  [disabled]=\"disabled\"\n  [spinners]=\"false\"\n  [hourStep]=\"hourStep\"\n  [meridian]=\"meridian\"\n  [minuteStep]=\"minuteStep\"\n  [seconds]=\"seconds\"\n  [secondStep]=\"secondStep\"\n  [size]=\"getKeywordBySize(size)\"\n  [attr.aria-label]=\"(!label && ariaLabel) || null\"\n  [ngModel]=\"value\"\n  (ngModelChange)=\"onValueChange($event)\"\n  data-role=\"timepicker\"\n  [attr.autcomplete]=\"autocomplete\"\n>\n</ngb-timepicker>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbTimepickerModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport { TimepickerStringAdapter } from './input-timepicker.service';\nimport { InputTimepickerComponent } from './input-timepicker.component';\n\n@NgModule({\n  imports: [CommonModule, NgbTimepickerModule, FormsModule, ReactiveFormsModule, BaseClassesModule],\n  declarations: [InputTimepickerComponent],\n  exports: [InputTimepickerComponent],\n  providers: [TimepickerStringAdapter],\n})\nexport class InputTimepickerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}