{"version":3,"file":"backbase-ui-ang-css-variables-lib.js","sources":["../../../../libs/ui-ang/css-variables-lib/css-variables.lib.ts","../../../../libs/ui-ang/css-variables-lib/css-variables.service.ts","../../../../libs/ui-ang/css-variables-lib/css-variables.module.ts","../../../../libs/ui-ang/css-variables-lib/backbase-ui-ang-css-variables-lib.ts"],"sourcesContent":["// Requires Promise and Array polyfills for older browsers\nlet savedVariables: { [key: string]: string } | null = null;\n\nfunction findStyleBlocks(): NodeListOf<Element> {\n  return document.querySelectorAll('style:not(.inserted),link[rel=\"stylesheet\"]');\n}\n\nasync function getStyleBlocksTexts(styleBlocks: NodeListOf<Element>) {\n  return Promise.all(Array.from(styleBlocks).map((block) => getStyleBlockText(block).catch(ignoreErrorForBlock)));\n}\n\n// the error for specific block should be ignored, to enable search in other blocks\nfunction ignoreErrorForBlock(err: Error): '' {\n  console.error(err);\n\n  return '';\n}\n\nasync function getStyleBlockText(styleBlock: Element): Promise<string> {\n  switch (styleBlock.nodeName) {\n    case 'STYLE':\n      return getTextForStyleNode(styleBlock);\n    case 'LINK':\n      return getTextForLinkNode(styleBlock);\n    default:\n      return '';\n  }\n}\n\nfunction getTextForStyleNode(styleBlock: Element): string {\n  return styleBlock.innerHTML;\n}\n\nasync function getTextForLinkNode(styleBlock: Element): Promise<string> {\n  const url: string | null = styleBlock.getAttribute('href');\n  if (!url) {\n    return Promise.resolve('');\n  }\n\n  return new Promise<string>((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.overrideMimeType('text/css;');\n    request.onload = function () {\n      if (request.status >= 200 && request.status < 400) {\n        resolve(request.responseText);\n      } else {\n        reject(`Error returned from: ${url}`);\n      }\n    };\n\n    request.onerror = function () {\n      reject(`Got nothing from: ${url}`);\n    };\n\n    request.send();\n  });\n}\n\nfunction extractVariablesListFromCssText(css: string): RegExpMatchArray | null {\n  return css.match(/(-{2}\\w[\\w-]*)(?:\\s*:\\s*)([^;]*)(;|})/g);\n}\n\nfunction reduceVariablesList(variablesList: RegExpMatchArray) {\n  return variablesList.reduce((variables, variable) => {\n    const variablesWithValues = variable.split(/;\\s*/);\n\n    return {\n      ...variables,\n      ...variablesWithValues.reduce((variableSet, variableWithValue) => {\n        const splitVariable = variableWithValue.split(/:\\s*/);\n        // Note: For minified css files, the semicolon from last declaration statement is removed by angular cli\n        // for optimization purposes. For example below will be sample code in minified css file,\n        // :root{--chart-color-6:#c22327;--chart-color-2:#00a1e0}.chart-positive-color{color:#2e7d32}\n        // variableWithValue will gives us something like below for '--chart-color-2':-\n        // \"--chart-color-2: #00a1e0}.chart-positive-color{color:#2e7d32\"\n        // console.log(splitVariable); // [\"--chart-color-2\", \"#00a1e0}.chart-positive-color{color:#2e7d32\"]\n        // splitVariable has wrong value for --chart-color-2 variable.\n        // we need to split the splitVariable further with \"}\" so that we can get the right value.\n        const variableValue = splitVariable[1] ? splitVariable[1].split('}')[0] : splitVariable[1];\n\n        return {\n          ...variableSet,\n          [splitVariable[0]]: variableValue,\n        };\n      }, {} as { [key: string]: string }),\n    };\n  }, {} as { [key: string]: string });\n}\n\nasync function getCssVariableForOldBrowsers(name: string): Promise<string | undefined> {\n  if (savedVariables) {\n    return savedVariables[name];\n  }\n\n  const styleBlocks = findStyleBlocks();\n  if (!styleBlocks || !styleBlocks.length) {\n    return Promise.resolve(undefined);\n  }\n\n  const styleBlocksTexts = await getStyleBlocksTexts(styleBlocks);\n  const variablesList = extractVariablesListFromCssText(styleBlocksTexts.join(''));\n  if (!variablesList || !variablesList.length) {\n    return Promise.resolve(undefined);\n  }\n\n  const cssVariables = reduceVariablesList(variablesList);\n  savedVariables = cssVariables;\n\n  return cssVariables[name];\n}\n\nfunction getCssVariableForModernBrowsers(name: string, elementName: string = ':root'): string {\n  const element = document.querySelector(elementName);\n  if (!element) {\n    return '';\n  }\n  const computedStyle = getComputedStyle(element);\n\n  return computedStyle.getPropertyValue(name);\n}\n\nexport async function getCssVariable(\n  name: string,\n  elementName: string = ':root',\n  searchEverywhere = false,\n): Promise<string | undefined> {\n  if (!searchEverywhere && modernCSSIsSupported()) {\n    return getCssVariableForModernBrowsers(name, elementName);\n  }\n\n  return getCssVariableForOldBrowsers(name);\n}\n\nexport function modernCSSIsSupported() {\n  const CSS = (window as any).CSS;\n\n  return !!(CSS && CSS.supports);\n}\n","import { Injectable } from '@angular/core';\nimport { getCssVariable } from './css-variables.lib';\n\n@Injectable()\nexport class CssVariablesService {\n  getCssVariable(name: string, elementName: string = ':root', searchEverywhere = false): Promise<string | undefined> {\n    return getCssVariable(name, elementName, searchEverywhere);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CssVariablesService } from './css-variables.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [CssVariablesService],\n})\nexport class CssVariablesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}