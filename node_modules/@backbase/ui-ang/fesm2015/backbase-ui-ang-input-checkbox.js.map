{"version":3,"file":"backbase-ui-ang-input-checkbox.js","sources":["../../../../libs/ui-ang/input-checkbox/input-checkbox.component.ts","../../../../libs/ui-ang/input-checkbox/input-checkbox.component.html","../../../../libs/ui-ang/input-checkbox/input-checkbox.module.ts","../../../../libs/ui-ang/input-checkbox/backbase-ui-ang-input-checkbox.ts"],"sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  ElementRef,\n  Input,\n  EventEmitter,\n  Output,\n  Self,\n  Optional,\n} from '@angular/core';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { NgControl } from '@angular/forms';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\n\n/**\n * @name InputCheckboxComponent\n *\n * @description\n * Component that displays a checkbox input.\n */\n@Component({\n  selector: 'bb-input-checkbox-ui',\n  templateUrl: './input-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputCheckboxComponent extends InputBaseComponent {\n  /**\n   * The native `<input type=\"checkbox\">` element\n   */\n  @ViewChild('input', { static: true }) inputElement?: ElementRef<HTMLInputElement>;\n  /**\n   * Event emitted when the checkbox's `indeterminate` value changes.\n   */\n  @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  /**\n   * The value that represents indeterminate state of checkbox\n   */\n  @Input()\n  get indeterminate(): boolean {\n    return this.indeterminateValue;\n  }\n  set indeterminate(value: boolean) {\n    if (this.indeterminateValue !== value) {\n      this.indeterminateValue = value;\n      this.indeterminateChange.emit(this.indeterminate);\n    }\n  }\n  private indeterminateValue = false;\n\n  constructor(\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly el: ElementRef,\n    protected readonly deprecationsService: DeprecationsService,\n    @Self() @Optional() public parentFormControl: NgControl,\n  ) {\n    super(cd, deprecationsService);\n\n    if (this.parentFormControl) {\n      this.parentFormControl.valueAccessor = this;\n    }\n  }\n\n  onValueChange() {\n    if (this.indeterminate && this.inputElement) {\n      this.indeterminate = false;\n      this.inputElement.nativeElement.checked = false;\n      this.inputElement.nativeElement.dispatchEvent(new Event('change'));\n    }\n    super.onValueChange();\n  }\n\n  setFocus() {\n    if (this.inputElement) {\n      this.inputElement.nativeElement.focus();\n    }\n  }\n}\n","<label\n  [attr.for]=\"id\"\n  class=\"bb-input-checkbox\"\n  [ngClass]=\"{ 'ng-invalid': parentFormControl?.invalid, 'ng-touched': parentFormControl?.touched }\"\n>\n  <input\n    #input\n    type=\"checkbox\"\n    class=\"bb-input-checkbox__input\"\n    [attr.id]=\"id\"\n    [attr.aria-describedby]=\"ariaDescribedby\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.aria-expanded]=\"ariaExpanded\"\n    [attr.role]=\"role\"\n    [attr.aria-invalid]=\"ariaInvalid\"\n    [attr.aria-owns]=\"ariaOwns\"\n    [attr.aria-activedescendant]=\"ariaActivedescendant\"\n    [attr.aria-checked]=\"value\"\n    [disabled]=\"disabled\"\n    [required]=\"required\"\n    [readOnly]=\"readonly\"\n    [indeterminate]=\"indeterminate\"\n    [attr.aria-label]=\"(!label && ariaLabel) || null\"\n    [(ngModel)]=\"value\"\n    (change)=\"onValueChange()\"\n    (focus)=\"onFocus($event)\"\n    (blur)=\"onBlur($event)\"\n    [attr.data-role]=\"'checkbox-input'\"\n  />\n  <span class=\"bb-input-checkbox__content\" [attr.data-role]=\"'checkbox-label'\">\n    <ng-container *ngIf=\"label; else content\">\n      {{ label }}\n    </ng-container>\n    <ng-template #content>\n      <ng-content></ng-content>\n    </ng-template>\n  </span>\n</label>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { FormsModule } from '@angular/forms';\nimport { BaseClassesModule } from '@backbase/ui-ang/base-classes';\n\nimport { InputCheckboxComponent } from './input-checkbox.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, FormsModule, BaseClassesModule],\n  declarations: [InputCheckboxComponent],\n  exports: [InputCheckboxComponent],\n})\nexport class InputCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}