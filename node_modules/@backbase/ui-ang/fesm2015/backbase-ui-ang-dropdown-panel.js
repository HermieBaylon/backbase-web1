import * as i0 from '@angular/core';
import { Directive, TemplateRef, Component, ChangeDetectionStrategy, Output, ContentChild, ViewChild, NgModule } from '@angular/core';
import * as i1 from '@ng-bootstrap/ng-bootstrap';
import { NgbDropdownConfig, NgbDropdown, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';
import { Subject } from 'rxjs';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';

class DropdownMenuDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
DropdownMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownMenuDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
DropdownMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: DropdownMenuDirective, selector: "ng-template[bbDropdownMenu]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownMenuDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbDropdownMenu]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
class DropdownToggleDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
DropdownToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownToggleDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
DropdownToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: DropdownToggleDirective, selector: "ng-template[bbDropdownToggle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownToggleDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbDropdownToggle]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
/**
 * @name DropdownPanelComponent
 *
 * @description
 * Component incapsulating logic for showing/hiding dropdown.
 */
class DropdownPanelComponent {
    constructor(config) {
        this.isOpen = new Subject();
        /**
         * Event emitted when dropdown open/close.
         */
        this.open = this.isOpen.asObservable();
        config.autoClose = 'outside';
    }
    changeState(state) {
        this.isOpen.next(state);
    }
    ngAfterContentInit() {
        if (!this.customDropdownToggle) {
            throw new Error('BB Dropdown ui. Toggle content is required.');
        }
        if (!this.customDropdownContent) {
            throw new Error('BB Dropdown ui. Dropdown content is required.');
        }
    }
    closeMenu() {
        if (this.dropdown) {
            this.dropdown.close();
        }
    }
}
DropdownPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownPanelComponent, deps: [{ token: i1.NgbDropdownConfig }], target: i0.ɵɵFactoryTarget.Component });
DropdownPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownPanelComponent, selector: "bb-dropdown-panel-ui", outputs: { open: "open" }, providers: [NgbDropdownConfig], queries: [{ propertyName: "customDropdownContent", first: true, predicate: DropdownMenuDirective, descendants: true, read: TemplateRef, static: true }, { propertyName: "customDropdownToggle", first: true, predicate: DropdownToggleDirective, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: "dropdown", first: true, predicate: NgbDropdown, descendants: true, static: true }], ngImport: i0, template: "<div\n  [attr.data-role]=\"'dropdown-panel'\"\n  class=\"bb-dropdown-panel\"\n  [placement]=\"'bottom'\"\n  (openChange)=\"changeState($event)\"\n  ngbDropdown\n>\n  <div ngbDropdownToggle [attr.data-role]=\"'dropdown-toggle'\" class=\"bb-dropdown-panel__dropdown-toggle\">\n    <ng-container *ngTemplateOutlet=\"customDropdownToggle; context: { isOpen: isOpen | async }\"></ng-container>\n  </div>\n  <div class=\"bb-dropdown-panel__dropdown\" ngbDropdownMenu position=\"top\" [attr.data-role]=\"'dropdown-panel-menu'\">\n    <ng-container *ngTemplateOutlet=\"customDropdownContent\"></ng-container>\n  </div>\n</div>\n", directives: [{ type: i1.NgbDropdown, selector: "[ngbDropdown]", inputs: ["open", "placement", "container", "autoClose", "display", "dropdownClass"], outputs: ["openChange"], exportAs: ["ngbDropdown"] }, { type: i1.NgbDropdownToggle, selector: "[ngbDropdownToggle]" }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i1.NgbDropdownMenu, selector: "[ngbDropdownMenu]" }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownPanelComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-dropdown-panel-ui',
                    templateUrl: './dropdown-panel.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [NgbDropdownConfig],
                }]
        }], ctorParameters: function () { return [{ type: i1.NgbDropdownConfig }]; }, propDecorators: { open: [{
                type: Output
            }], customDropdownContent: [{
                type: ContentChild,
                args: [DropdownMenuDirective, { read: TemplateRef, static: true }]
            }], customDropdownToggle: [{
                type: ContentChild,
                args: [DropdownToggleDirective, { read: TemplateRef, static: true }]
            }], dropdown: [{
                type: ViewChild,
                args: [NgbDropdown, { static: true }]
            }] } });

class DropdownPanelModule {
}
DropdownPanelModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownPanelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DropdownPanelModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownPanelModule, declarations: [DropdownPanelComponent, DropdownMenuDirective, DropdownToggleDirective], imports: [CommonModule, NgbDropdownModule], exports: [DropdownPanelComponent, DropdownToggleDirective, DropdownMenuDirective] });
DropdownPanelModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownPanelModule, imports: [[CommonModule, NgbDropdownModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: DropdownPanelModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, NgbDropdownModule],
                    declarations: [DropdownPanelComponent, DropdownMenuDirective, DropdownToggleDirective],
                    exports: [DropdownPanelComponent, DropdownToggleDirective, DropdownMenuDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { DropdownMenuDirective, DropdownPanelComponent, DropdownPanelModule, DropdownToggleDirective };
//# sourceMappingURL=backbase-ui-ang-dropdown-panel.js.map
