{"version":3,"file":"backbase-ui-ang-phone-number-format-pipe.js","sources":["../../../../libs/ui-ang/phone-number-format-pipe/phone-number-format.pipe.ts","../../../../libs/ui-ang/phone-number-format-pipe/phone-number-format.module.ts","../../../../libs/ui-ang/phone-number-format-pipe/backbase-ui-ang-phone-number-format-pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { AsYouType, CountryCode, parsePhoneNumber } from '@backbase/phone-number-lib';\n\nexport { CountryCode } from '@backbase/phone-number-lib';\n\n/**\n * @name PhoneNumberFormatPipe\n *\n * @description\n * Pipe for formatting phone numbers to various international formats\n */\n@Pipe({\n  name: 'phoneNumber',\n})\nexport class PhoneNumberPipe implements PipeTransform {\n  /**\n   * @name PhoneNumberFormatPipe#transform\n   * @param value - the phone number string to transform\n   * @param countryCode - the two letter CDLR code for the country to format to\n   * @param isInputElement - whether the value was entered in an input element\n   *\n   * @description\n   * Formats a phone number to any entered country code international format\n   */\n  transform(value: string | number, countryCode: CountryCode, isInputElement?: boolean): string {\n    try {\n      if (isInputElement) {\n        value = new AsYouType(countryCode).input(value.toString());\n      }\n\n      return parsePhoneNumber(value.toString(), countryCode).formatInternational();\n    } catch (e) {\n      return value.toString();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PhoneNumberPipe } from './phone-number-format.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PhoneNumberPipe],\n  exports: [PhoneNumberPipe],\n})\nexport class PhoneNumberModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;AAKA;;;;;AAKG;MAIU,eAAe,CAAA;AAC1B;;;;;;;;AAQG;AACH,IAAA,SAAS,CAAC,KAAsB,EAAE,WAAwB,EAAE,cAAwB,EAAA;QAClF,IAAI;AACF,YAAA,IAAI,cAAc,EAAE;AAClB,gBAAA,KAAK,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5D,aAAA;AAED,YAAA,OAAO,gBAAgB,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC,mBAAmB,EAAE,CAAC;AAC9E,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;AACV,YAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;AACzB,SAAA;KACF;;6GApBU,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2GAAf,eAAe,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,CAAA;4FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAH3B,IAAI;AAAC,YAAA,IAAA,EAAA,CAAA;AACJ,oBAAA,IAAI,EAAE,aAAa;AACpB,iBAAA,CAAA;;;MCHY,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAHb,YAAA,EAAA,CAAA,eAAe,CADpB,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,eAAe,CAAA,EAAA,CAAA,CAAA;gHAEd,iBAAiB,EAAA,OAAA,EAAA,CAJnB,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;4FAIZ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,eAAe,CAAC;oBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;AAC3B,iBAAA,CAAA;;;ACTD;;AAEG;;;;"}