{"version":3,"file":"backbase-ui-ang-input-datepicker.js","sources":["../../../../libs/ui-ang/input-datepicker/input-datepicker-i18n.ts","../../../../libs/ui-ang/input-datepicker/input-datepicker-adapter.ts","../../../../libs/ui-ang/input-datepicker/input-datepicker-formatter.ts","../../../../libs/ui-ang/input-datepicker/input-datepicker-day-template-single.component.ts","../../../../libs/ui-ang/input-datepicker/input-datepicker-day-template-single.component.html","../../../../libs/ui-ang/input-datepicker/input-datepicker-day-template-range.component.ts","../../../../libs/ui-ang/input-datepicker/input-datepicker-day-template-range.component.html","../../../../libs/ui-ang/input-datepicker/input-datepicker.component.ts","../../../../libs/ui-ang/input-datepicker/input-datepicker.component.html","../../../../libs/ui-ang/input-datepicker/validation/min-date-validator/min-date-validator.directive.ts","../../../../libs/ui-ang/input-datepicker/validation/max-date-validator/max-date-validator.directive.ts","../../../../libs/ui-ang/input-datepicker/input-datepicker.module.ts","../../../../libs/ui-ang/input-datepicker/backbase-ui-ang-input-datepicker.ts"],"sourcesContent":["import { Injectable, Inject, LOCALE_ID, InjectionToken, Optional } from '@angular/core';\nimport { FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth } from '@angular/common';\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nexport const DATEPICKER_I18 = new InjectionToken<NgbDatepickerI18n>('datepickerI18');\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private readonly weekdaysShort: Array<string>;\n  private readonly monthsShort: ReadonlyArray<string>;\n  private readonly monthsFull: ReadonlyArray<string>;\n\n  constructor(\n    @Inject(LOCALE_ID) locale: string,\n    @Optional() @Inject(DATEPICKER_I18) private datepickerI18: NgbDatepickerI18n,\n  ) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(locale, FormStyle.Standalone, TranslationWidth.Short);\n    this.weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n    this.monthsShort = getLocaleMonthNames(locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this.monthsFull = getLocaleMonthNames(locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayLabel(weekday: number): string {\n    return this.datepickerI18 ? this.datepickerI18.getWeekdayLabel(weekday) : this.weekdaysShort[weekday - 1];\n  }\n\n  getMonthShortName(month: number): string {\n    return this.datepickerI18 ? this.datepickerI18.getMonthShortName(month) : this.monthsShort[month - 1];\n  }\n\n  getMonthFullName(month: number): string {\n    return this.datepickerI18 ? this.datepickerI18.getMonthFullName(month) : this.monthsFull[month - 1];\n  }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    // @todo: use i18n date pipes?\n    return this.datepickerI18 ? this.datepickerI18.getDayAriaLabel(date) : `${date.day}-${date.month}-${date.year}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { NgDateStructNullable } from './input-datepicker.model';\n\nconst isValidNgbDateStructProp = (struct: any, propName: string): boolean =>\n  struct ? Object.prototype.hasOwnProperty.call(struct, propName) && typeof struct[propName] === 'number' : false;\n\nexport const isNgbDateStruct = (value: any): value is NgbDateStruct =>\n  isValidNgbDateStructProp(value, 'day') &&\n  isValidNgbDateStructProp(value, 'month') &&\n  isValidNgbDateStructProp(value, 'year');\n\n@Injectable()\nexport class NgbDateStringAdapter extends NgbDateAdapter<string> {\n  fromModel(dateString: string): NgDateStructNullable {\n    if (dateString) {\n      const d = new Date(dateString);\n      const year = d.getFullYear();\n\n      if (year) {\n        return {\n          year: year,\n          month: d.getMonth() + 1,\n          day: d.getDate(),\n        };\n      }\n    }\n\n    return null;\n  }\n\n  toModel(date: NgbDateStruct | string | undefined | null): string {\n    if (!date) {\n      return '';\n    } else if (typeof date === 'string') {\n      return date;\n    } else if (isNgbDateStruct(date)) {\n      return new Date(date.year, date.month - 1, date.day).toISOString();\n    }\n\n    return Object.prototype.toString.call(date);\n  }\n}\n","import { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { DatePipe, FormatWidth, getLocaleDateFormat } from '@angular/common';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { isNgbDateStruct } from './input-datepicker-adapter';\n\n// TODO: get rid of non null assertions. They are added due to problem with NgbDateParserFormatter.\n// It specifies result of parse function as NgbDateStruct, but allows to return null if value can not be parsed.\n// They should have defined parse method with NgbDateStruct | null return, since now compilation\n// fails due to strict null checks.\n@Injectable()\nexport class NgbDateLocaleParserFormatter extends NgbDateParserFormatter {\n  constructor(@Inject(LOCALE_ID) private readonly locale: string, private readonly datePipe: DatePipe) {\n    super();\n  }\n\n  private _dateFormat: string | undefined;\n\n  get localeDateFormat() {\n    return this._dateFormat || getLocaleDateFormat(this.locale, FormatWidth.Short);\n  }\n\n  set dateFormat(format: string | undefined) {\n    this._dateFormat = format;\n  }\n\n  static getAdaptedYear(year: number, month: number, day: number, yearValue: string): number {\n    const date = new Date(year, month - 1, day);\n    year = date.getFullYear();\n\n    if (yearValue && yearValue.length < 3 && year < 1950) {\n      year += 100;\n    }\n\n    return year;\n  }\n\n  static getIndexFromFormat(regex: RegExp, formatArray: string[]) {\n    const index = formatArray.findIndex((item: string) => !Boolean(item.replace(regex, '')));\n\n    return index;\n  }\n\n  interpretDate(value: string): Date | undefined {\n    const date = new Date(value);\n    if (isNaN(date.getTime())) return;\n\n    const year = date.getFullYear();\n    const yearLength = this.getYearLength(value);\n\n    if (\n      yearLength < 3 && // prevent transformation of 1902 to 2002\n      year < 1950 &&\n      !value.includes(String(year)) &&\n      new Date('01/01/00').getFullYear() === 1900\n    ) {\n      date.setFullYear(year + 100);\n    }\n\n    return date;\n  }\n\n  parse(value: string | undefined): NgbDateStruct {\n    if (!value) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return null!;\n    }\n\n    const dateElementsRegex = /[^GyMLwWdE]/;\n    const dateFormatDelimiterMatches = this.localeDateFormat.match(dateElementsRegex);\n    const dateFormatDelimiter = dateFormatDelimiterMatches && dateFormatDelimiterMatches[0];\n    const dateValueRegex = new RegExp('[\\\\d' + dateFormatDelimiter + ']+');\n\n    // Try to parse manually the value in case if contains only numbers and the delimiter.\n    // If no delimiter found or the value has other than number characters,\n    // the the parsing will fallback to the angular date pipe\n    if (dateFormatDelimiter && !Boolean(value.replace(dateValueRegex, ''))) {\n      const formatParsedDate = this.getFormatParsedDate(value, this.localeDateFormat, dateFormatDelimiter);\n\n      if (formatParsedDate) {\n        // the formatter has all three date elements\n\n        return formatParsedDate;\n      }\n    }\n\n    return this.getAngularPipeFormatParseDate(value);\n  }\n\n  /**\n   *\n   * Parse date value with angular date pipe\n   *\n   * @param value The string date value\n   *\n   */\n  getAngularPipeFormatParseDate(value: string) {\n    let parsedValue = '';\n    try {\n      parsedValue = this.datePipe.transform(value, this.localeDateFormat, undefined, this.locale) || '';\n    } catch (e) {\n      // there is no error handling, because transform fails only with temporary and invalid values like '22/'\n      //  during manual input to datepicker\n    }\n    const parsedDate = this.interpretDate(value);\n\n    if (!parsedValue || !parsedDate) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return null!;\n    }\n\n    return {\n      year: parsedDate.getFullYear(),\n      month: parsedDate.getMonth() + 1,\n      day: parsedDate.getDate(),\n    };\n  }\n\n  /**\n   *\n   * @description\n   * Proprietary parse to be able to use date override in the input field.\n   *\n   * Parse the string date value if the date format only contains y, M, d with one single format delimiter.\n   *\n   * @param value The string date value\n   * @param format The date format\n   * @param delimiter The delimiter character between date elements (e.g. - or /)\n   *\n   */\n  getFormatParsedDate(value: string, format: string, delimiter: string): NgbDateStruct {\n    const dateValueArr = value.split(delimiter); // split date string value by the delimiter\n    const dateFormatArr = format.split(delimiter);\n\n    if (dateFormatArr.length === 3) {\n      const dayFormatIndex = NgbDateLocaleParserFormatter.getIndexFromFormat(/d{1,2}/, dateFormatArr);\n      const monthFormatIndex = NgbDateLocaleParserFormatter.getIndexFromFormat(/M{1,5}/, dateFormatArr);\n      const yearFormatIndex = NgbDateLocaleParserFormatter.getIndexFromFormat(/y{1,4}/, dateFormatArr);\n\n      if (dayFormatIndex > -1 && monthFormatIndex > -1 && yearFormatIndex > -1) {\n        const today = new Date();\n\n        const year = dateValueArr[yearFormatIndex] ? Number(dateValueArr[yearFormatIndex]) : today.getFullYear();\n        const month = dateValueArr[monthFormatIndex] ? Number(dateValueArr[monthFormatIndex]) : today.getMonth() + 1;\n        const day = dateValueArr[dayFormatIndex] ? Number(dateValueArr[dayFormatIndex]) : today.getDate();\n\n        return {\n          day,\n          month,\n          year: NgbDateLocaleParserFormatter.getAdaptedYear(year, month, day, dateValueArr[yearFormatIndex]),\n        };\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return null!;\n  }\n\n  getYearLength(value: string): number {\n    const separator = String(this.localeDateFormat.match(/[^\\w\\*]/));\n    const dateArray = value.split(separator);\n    const yearPosition = this.localeDateFormat.toLocaleLowerCase().split(separator);\n    const yearIndex = yearPosition.findIndex((val: string) => val.includes('y'));\n\n    return yearIndex >= 0 && yearIndex < dateArray.length ? dateArray[yearIndex].length : 0;\n  }\n\n  format(date: NgbDateStruct | undefined | null, format = this.localeDateFormat): string {\n    let formattedDate = '';\n    if (date && isNgbDateStruct(date)) {\n      formattedDate =\n        this.datePipe.transform(new Date(date.year, date.month - 1, date.day), format, undefined, this.locale) || '';\n    }\n\n    return formattedDate;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  HostListener,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { NgbDate, NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateLocaleParserFormatter } from './input-datepicker-formatter';\nimport { DatePipe } from '@angular/common';\nimport { NgDateStructNullable } from './input-datepicker.model';\nimport { KEY_CODES } from '@backbase/ui-ang/util';\nimport { BrowserService, NAVIGATOR_TOKEN, navigatorFactory } from '@backbase/ui-ang/services';\nimport { DateSelectionModel } from './input-datepicker.model';\n\n/* eslint-disable */\nexport enum Key {\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40,\n}\n\n@Component({\n  selector: 'bb-input-datepicker-single-day-template-ui',\n  templateUrl: './input-datepicker-day-template-single.component.html',\n  providers: [\n    DatePipe,\n    NgbDateLocaleParserFormatter,\n    {\n      provide: NgbDateParserFormatter,\n      useExisting: NgbDateLocaleParserFormatter,\n    },\n    BrowserService,\n    { provide: NAVIGATOR_TOKEN, useFactory: navigatorFactory },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputDatepickerDayTemplateSingleComponent implements OnChanges {\n  constructor(\n    private readonly formatterHelper: NgbDateLocaleParserFormatter,\n    private readonly browserService: BrowserService,\n  ) {\n    this.isIE = this.browserService.browserIsMSIE();\n  }\n\n  private static readonly hangledKeyCodes: string[] = [KEY_CODES.LEFT, KEY_CODES.UP, KEY_CODES.RIGHT, KEY_CODES.DOWN];\n\n  /**\n   * Date to render\n   */\n  @Input() date!: NgbDate;\n\n  /**\n   * Indicates whether the date is selected\n   */\n  @Input() selected = false;\n\n  /**\n   * When true the date is rendered as disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * CurrentMonth on the datepicker window\n   */\n  @Input() currentMonth!: string;\n\n  /**\n   * Hovered date by a user\n   */\n  @Input() hoveredDate: NgDateStructNullable = null;\n\n  /**\n   * Event to trigger on date hover\n   */\n  @Output() hovered = new EventEmitter<DateSelectionModel>();\n\n  /**\n   * Indicates if the date displayed as greyed out\n   */\n  isTextMuted = false;\n\n  /**\n   * Indicates if the date is hovered the range\n   */\n  isHovered = false;\n\n  /**\n   * Indicates if the browser is IE\n   */\n  isIE: boolean;\n\n  format = (date: NgbDateStruct | undefined | null) => this.formatterHelper.format(date);\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes?.selected || changes?.disabled || changes?.date || changes?.currentMonth) {\n      this.isTextMuted = !this.selected && (this.disabled || this.date?.month !== +this.currentMonth);\n    }\n    this.isHovered = this.date?.equals(this.hoveredDate);\n  }\n\n  /**\n   *\n   * @description\n   * Handle mouseover. Emit the hovered date with null.\n   *\n   */\n  @HostListener('mouseout')\n  onMouseOut() {\n    this.hovered.emit({ date: null, isSelecting: false });\n  }\n\n  /**\n   *\n   * @description\n   * Handle mouseover. Emit the hovered date with date.\n   *\n   */\n  @HostListener('mouseover')\n  onMouseOver() {\n    this.hovered.emit({ date: this.date, isSelecting: true });\n  }\n\n  /**\n   * @description\n   * Keypress handler\n   *\n   * @param evt\n   * @param curMonth\n   * @param curDay\n   * @param date\n   */\n  @HostListener('document:keyup', ['$event'])\n  onKeyUp(event: KeyboardEvent) {\n    const day = (event.target as HTMLElement).textContent;\n    const matchKey = this.isIE\n      ? Object.values(Key).includes(event?.keyCode)\n      : InputDatepickerDayTemplateSingleComponent.hangledKeyCodes.includes(event?.key);\n\n    if (Number(day) === this.date.day && Number(this.currentMonth) === this.date.month && matchKey) {\n      this.hovered.emit({ date: this.date, isSelecting: true });\n    }\n  }\n}\n","<time\n  class=\"custom-day text-center bb-input-datepicker__single-day\"\n  [ngClass]=\"{\n    'is-selected': selected,\n    'text-muted': isTextMuted\n  }\"\n  [attr.data-role]=\"'calendar-date-item'\"\n  [dateTime]=\"format(date)\"\n>\n  {{ date?.day }}\n</time>\n","import {\n  ChangeDetectionStrategy,\n  OnChanges,\n  SimpleChanges,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { NgbDate, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDateLocaleParserFormatter } from './input-datepicker-formatter';\nimport { DatePipe } from '@angular/common';\nimport { KEY_CODES } from '@backbase/ui-ang/util';\nimport { BrowserService, NAVIGATOR_TOKEN, navigatorFactory } from '@backbase/ui-ang/services';\nimport { NgDateStructNullable } from './input-datepicker.model';\nimport { DateRangeSelectionModel, RangeSelectModel } from './input-datepicker.model';\n\n/* eslint-disable */\nexport enum Key {\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40,\n}\n\n@Component({\n  selector: 'bb-input-datepicker-range-day-template-ui',\n  templateUrl: './input-datepicker-day-template-range.component.html',\n  providers: [\n    DatePipe,\n    NgbDateLocaleParserFormatter,\n    {\n      provide: NgbDateParserFormatter,\n      useExisting: NgbDateLocaleParserFormatter,\n    },\n    BrowserService,\n    { provide: NAVIGATOR_TOKEN, useFactory: navigatorFactory },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputDatepickerDayTemplateRangeComponent implements OnChanges {\n  private static readonly hangledKeyCodes: string[] = [KEY_CODES.LEFT, KEY_CODES.UP, KEY_CODES.RIGHT, KEY_CODES.DOWN];\n\n  /**\n   * Date to render\n   */\n  @Input() date!: NgbDate;\n\n  /**\n   * When true the date is rendered as disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * CurrentMonth on the datepicker window\n   */\n  @Input() currentMonth!: string;\n\n  /**\n   * Selected \"from\" date\n   */\n  @Input() fromDate: NgDateStructNullable = null;\n\n  /**\n   * Selected \"to\" date\n   */\n  @Input() toDate: NgDateStructNullable = null;\n\n  /**\n   * If \"true\" the datepicker is displayed with two input fields for \"from\" and \"to\" dates\n   */\n  @Input() splitRange = false;\n\n  /**\n   * \"true\" when \"splitRange\" is \"true\" and the parent datepicker belongs to\n   * second datepicker input (the one for \"to\" date)\n   */\n  @Input() toDateDatepicker = false;\n\n  /**\n   * Hovered date by a user\n   */\n  @Input() hoveredDate: NgDateStructNullable = null;\n\n  /**\n   * Date range\n   */\n  @Output() rangeSelect = new EventEmitter<RangeSelectModel>();\n\n  /**\n   * Event to trigger on date hover\n   */\n  @Output() hovered = new EventEmitter<DateRangeSelectionModel>();\n\n  /**\n   * Prevent keypress to be called on toggle button enter\n   */\n  firstKey = true;\n\n  /**\n   * Indicates if the date is between the from-date and the hovered date\n   */\n  isWithinRangeHover = false;\n\n  /**\n   * Indicates if the date is between the from-date and the to-date date\n   */\n  isWithinSelectedRange = false;\n\n  /**\n   * Indicates if the date displayed as greyed out\n   */\n  isTextMuted = false;\n\n  /**\n   * Indicates if the date is hovered the range\n   */\n  isHovered = false;\n\n  /**\n   * Indicates if the date is the from-date of the range\n   */\n  isFrom = false;\n\n  /**\n   * Indicates if the the date is the to-date of the range\n   */\n  isTo = false;\n\n  /**\n   * Formatted date\n   */\n  formattedDate = '';\n\n  /**\n   * Indicates if the browser is IE\n   */\n  isIE: boolean;\n\n  private get withinHoverRangeSingle() {\n    return (\n      !this.toDate &&\n      (this.date.after(this.fromDate) || this.date.equals(this.fromDate)) &&\n      (this.date.before(this.hoveredDate) || this.date.equals(this.hoveredDate))\n    );\n  }\n\n  private get withinHoverRangeSplitTo() {\n    return (\n      (this.date.before(this.hoveredDate) || this.date.equals(this.hoveredDate)) &&\n      (this.date.after(this.toDate) ||\n        this.date.equals(this.toDate) ||\n        (this.date.before(this.toDate) && this.date.after(this.fromDate))) &&\n      this.toDateDatepicker\n    );\n  }\n\n  private get withinHoverRangeSplitFrom() {\n    return (\n      (this.date.after(this.hoveredDate) || this.date.equals(this.hoveredDate)) &&\n      this.date.before(this.toDate) &&\n      !this.toDateDatepicker &&\n      this.toDate\n    );\n  }\n\n  constructor(\n    private readonly formatterHelper: NgbDateLocaleParserFormatter,\n    private readonly browserService: BrowserService,\n  ) {\n    this.isIE = this.browserService.browserIsMSIE();\n  }\n\n  /* eslint-disable complexity */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes?.hoveredDate) {\n      this.isWithinRangeHover = !!(\n        this.isValidRange() &&\n        this.date &&\n        this.hoveredDate &&\n        (((this.withinHoverRangeSplitTo || this.withinHoverRangeSplitFrom) && this.splitRange) ||\n          (this.withinHoverRangeSingle && this.toDateDatepicker && this.splitRange) ||\n          (this.withinHoverRangeSingle && !this.splitRange))\n      );\n\n      this.isHovered = this.date?.equals(this.hoveredDate);\n    }\n\n    if (changes?.fromDate || changes?.toDate || changes?.date) {\n      this.isWithinSelectedRange = this.date && this.date.before(this.toDate) && this.date.after(this.fromDate);\n      this.isTo = this.date?.equals(this.toDate);\n      this.formattedDate = this.formatterHelper.format(this.date);\n      this.isFrom = this.date?.equals(this.fromDate);\n    }\n\n    this.isTextMuted =\n      !this.isWithinRangeHover &&\n      !this.isWithinSelectedRange &&\n      !this.isFrom &&\n      !this.isTo &&\n      (this.disabled || this.date?.month !== +this.currentMonth);\n  }\n\n  /**\n   *\n   * @description\n   * Handle mouseover. Emit the hovered date with null.\n   *\n   */\n  @HostListener('mouseout')\n  onMouseOut() {\n    this.hovered.emit({ date: null, isTo: this.toDateDatepicker, isSelecting: false });\n  }\n\n  /**\n   *\n   * @description\n   * Handle mouseover. Emit the hovered date with date.\n   *\n   */\n  @HostListener('mouseover')\n  onMouseOver() {\n    this.hovered.emit({ date: this.date, isTo: this.toDateDatepicker, isSelecting: true });\n  }\n\n  /**\n   * @description\n   * Keypress handler\n   *\n   * @param evt\n   * @param curMonth\n   * @param curDay\n   * @param date\n   */\n  @HostListener('document:keyup', ['$event'])\n  onKeyUp(event: KeyboardEvent) {\n    const day = (event.target as HTMLElement).textContent;\n    const matchKey = this.isIE\n      ? Object.values(Key).includes(event?.keyCode)\n      : InputDatepickerDayTemplateRangeComponent.hangledKeyCodes.includes(event?.key);\n\n    if (Number(day) === this.date.day && Number(this.currentMonth) === this.date.month && matchKey) {\n      this.hovered.emit({ date: this.date, isTo: this.toDateDatepicker, isSelecting: true });\n    }\n  }\n\n  private isValidRange(): boolean {\n    return (\n      !this.fromDate ||\n      !this.toDate ||\n      new NgbDate(this.fromDate.year, this.fromDate.month, this.fromDate.day).before(this.toDate)\n    );\n  }\n}\n","<time\n  class=\"custom-day text-center bb-input-datepicker__custom-day\"\n  [ngClass]=\"{\n    'is-range-selected': isWithinSelectedRange,\n    'is-faded': isWithinRangeHover,\n    'is-faded-from-date': isWithinRangeHover && !toDateDatepicker && splitRange,\n    'is-hovered': isHovered,\n    'text-muted': isTextMuted,\n    'from-date': isFrom,\n    'to-date': isTo\n  }\"\n  [attr.data-role]=\"'calendar-date-item'\"\n  [dateTime]=\"formattedDate\"\n>\n  {{ date?.day }}\n</time>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport {\n  AbstractControl,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n} from '@angular/forms';\nimport {\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateParserFormatter,\n  NgbDatepickerI18n,\n  NgbDateStruct,\n  NgbInputDatepicker,\n} from '@ng-bootstrap/ng-bootstrap';\n\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { NgbDatepickerI18nDefault } from './input-datepicker-i18n';\nimport { NgbDateStringAdapter } from './input-datepicker-adapter';\nimport { NgbDateLocaleParserFormatter } from './input-datepicker-formatter';\nimport { BehaviorSubject } from 'rxjs';\nimport { DomAttributesService } from '@backbase/ui-ang/services';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\nimport { DateRangeModel, DateSelectionModel, NgDateStructNullable } from './input-datepicker.model';\n\n// Oleksii depricate\n/* eslint-disable */\nexport enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40,\n}\n\nexport const isDateRangeModelType = (value: any): value is DateRangeModel =>\n  Object.prototype.hasOwnProperty.call(value || {}, 'from') && Object.prototype.hasOwnProperty.call(value || {}, 'to');\n\n/**\n * @name InputDatepickerComponent\n *\n * @description\n * Component that displays a datepicker\n *\n * ### Custom internalization\n * It is possible to provide a custom internalisation. To do this, a `DATEPICKER_I18` token from `@backbase/ui-ang/input-datepicker` should be provided on the module level.\n * The token should implement the [NgbDatepickerI18n](https://ng-bootstrap.github.io/#/components/datepicker/api#NgbDatepickerI18n) interface. \n * \n * ### Setting and reading the  date\n * *Note* Datepicker uses the date *with the timezone* inside its model. And hence to make it work properly in all cases there are some recommendations for setting and reading the date to and from the datepicker.\n * #### Setting the date\n * When setting the date to the datepicker the date must be provided in the format that assumes zero hours and zero minutes in the local timezone. Here are some examples of what the date setting should looks like:\n * ```\n   this.minDate = new Date(2021,11,15, 0, 0).toISOString();\n   ```\n *\n * or\n * ```\n   this.minDate = new Date('2021-12-15T00:00').toISOString();\n   ```\n *\n * Note that\n * ```\n   new Date('2021-12-15').toISOString();\n   ```\n *\n * generates a date in GMT0 format and that is not correct for the datepicker input date.\n * #### Reading the date\n * When a date is selected via UI (the datepicker's popup window or browser's input field) its display date is transformed to the ISO string date with the assumption that it’s zero hours and zero minutes in the current time zone. Which leads to the different ISO string values for different time zones for the same date. F.e. \"Dec 15 2021\" is going to be transformed to \"2021-12-14T23:00:00.000Z\" for the \"GMT+0100 (Central European Standard Time)\" time zone and to \"2021-12-15T03:00:00.000Z\" for \"GMT-0300 (West Greenland Standard Time)\" time zone. As you can see the _day_ value is different in ISO string based on the timezone. It’s going to be either 14 or 15 in the example above.\n * \n * The recommendation here is to convert the ISO string, that the datepicker returns, into the Date object and read it's day value. Here is an example:\n * ```\n  private formatDate(stringDate: string): string {\n    const date = new Date(stringDate);\n    if (stringDate && !isNaN(date.valueOf())) {\n      return `${date.getFullYear()}-${this.appendLeadingZeroes(date.getMonth() + 1)}-${this.appendLeadingZeroes(date.getDate())}`;\n    }\n    return '';\n  }\n\n  private appendLeadingZeroes(value: number) {\n    return value > 9 ? value : `0${value}`;\n  }\n   ```\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n * `ariaLabel` is discernible text for datepicker\n */\n@Component({\n  selector: 'bb-input-datepicker-ui',\n  templateUrl: './input-datepicker.component.html',\n  providers: [\n    DatePipe,\n    NgbDateLocaleParserFormatter,\n    {\n      provide: NgbDateAdapter,\n      useClass: NgbDateStringAdapter,\n    },\n    {\n      provide: NgbDatepickerI18n,\n      useClass: NgbDatepickerI18nDefault,\n    },\n    {\n      provide: NgbDateParserFormatter,\n      useExisting: NgbDateLocaleParserFormatter,\n    },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputDatepickerComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => InputDatepickerComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputDatepickerComponent extends InputBaseComponent implements OnChanges, Validator, AfterViewInit {\n  /**\n   * Event to trigger on date hover\n   */\n  @Output() focusedDate = new EventEmitter<DateSelectionModel>();\n\n  /**\n   * Indicates if the datepicker should select a date range with single input (from - to).\n   * Defaults to false\n   */\n  @Input() rangeSelection = false;\n\n  /**\n   * Indicates if the datepicker should a date range with split input. One for the from date and one for the to date.\n   * Defaults to false\n   */\n  @Input() rangeSelectionSplit = false;\n\n  /**\n   * Indicates if the datepicker is opened when clicking input.\n   * Defaults to false\n   */\n  @Input() clickOpen = false;\n\n  /**\n   * Indicates if the datepicker is opened when focusing input.\n   * Defaults to false\n   */\n  @Input() focusOpen = false;\n\n  _placement: string | undefined = 'bottom-left';\n\n  get placement() {\n    return document.documentElement.clientWidth > 320 ? this._placement : 'bottom';\n  }\n\n  /**\n   * Placement of a popup window\n   */\n  @Input()\n  set placement(value: string | undefined) {\n    if (value) {\n      this._placement = value;\n    }\n  }\n\n  /**\n   * Accessible description for datepicker date selection popup.\n   */\n  @Input() datepickerDescribedby = 'defaultDatepickerDescribedbyLabel';\n\n  /**\n   * Accessible label for Datepicker button.\n   */\n  @Input() ariaLabelForButton = 'Toggle Date popup';\n\n  /**\n   * Min date for the navigation. If not provided, 'year' select box will display 10 years\n   * before current month\n   */\n  @Input()\n  set minDate(date: NgbDateStruct | string | undefined) {\n    this._minDate = typeof date === 'string' ? this.adapter.fromModel(date) : date;\n  }\n\n  _minDate: NgDateStructNullable | undefined;\n\n  /**\n   * Max date for the navigation. If not provided, 'year' select box will display 10 years\n   * after current month\n   */\n  @Input()\n  set maxDate(date: NgbDateStruct | string | undefined) {\n    this._maxDate = typeof date === 'string' ? this.adapter.fromModel(date) : date;\n  }\n\n  _maxDate: NgbDateStruct | undefined | null;\n  /**\n   * Callback to mark a given date as disabled\n   */\n  @Input() markDisabled: Function | undefined;\n\n  /**\n   * Icon that is dispayed in the button.\n   * Defaults to calendar\n   */\n  @Input() icon = 'calendar-today';\n\n  /**\n   * The size of the icon to be displayed.\n   * Defaults to md\n   */\n  @Input() iconSize = 'md';\n\n  /**\n   * The color of the icon to be displayed\n   */\n  @Input() iconColor: string | undefined;\n\n  /**\n   * Color of the button.\n   * Defaults to link\n   */\n  @Input() btnColor = 'link';\n\n  /**\n   * Aria label for the datepicker\n   */\n  @Input()\n  ariaLabel = 'Datepicker';\n\n  /**\n   * Navigation pattern through dates.\n   * Default to arrows\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none' = 'arrows';\n\n  /**\n   * The autocomplete value of enclosed input control.\n   */\n  @Input() autocomplete: 'string' | undefined;\n\n  /**\n   * The first day of the week\n   *\n   * By default the calendar uses ISO 8601 and the weekdays are is 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number | undefined;\n\n  /**\n   * Indicates how many month will be shown in the picker\n   */\n  @Input() displayMonths = 1;\n\n  _placeholder: string | undefined;\n\n  get placeholder(): string | undefined {\n    if (typeof this._placeholder === 'undefined') {\n      const pattern = this.dateFormat.toUpperCase();\n\n      return this.rangeSelection ? `${pattern} ${this.inputDateRangeSeparator} ${pattern}` : pattern;\n    }\n\n    return this._placeholder;\n  }\n\n  /**\n   * The placeholder for the datepicker input. Default is Locale Date Format;\n   */\n  @Input('placeholder')\n  set placeholder(value: string | undefined) {\n    this._placeholder = typeof value !== 'undefined' ? String(value) : undefined;\n  }\n\n  /**\n   * Override date format (optional). Supported formats are `yyyy/MM/dd`, `MM/dd/yyyy`, `MMMM dd, yyyy`.\n   * Note, other formats might work inconsistent in different browsers.\n   */\n  @Input('overrideDateFormat')\n  set overrideDateFormat(value: string | undefined) {\n    this._overrideDateFormat = value;\n    this.formatterHelper.dateFormat = value;\n  }\n\n  get overrideDateFormat(): string | undefined {\n    return this._overrideDateFormat;\n  }\n\n  _overrideDateFormat: string | undefined;\n\n  /**\n   * The custom or locale date format that is used to display dates and placeholders\n   */\n  get dateFormat(): string {\n    return this.formatterHelper.localeDateFormat;\n  }\n\n  @ViewChild('datePicker') datePicker: NgbInputDatepicker | undefined;\n  @ViewChild('datePickerTo') datePickerTo: NgbInputDatepicker | undefined;\n  @ViewChild('datePickerInput') datePickerInput: ElementRef | undefined;\n  @ViewChild('datePickerRangeInput') datePickerRangeInput: ElementRef | undefined;\n  @ViewChild('datePickerInputTo') datePickerInputTo: ElementRef | undefined;\n  @ViewChild('datePickerButton') datePickerButton: ElementRef | undefined;\n  @ViewChild('datePickerButtonTo') datePickerButtonTo: ElementRef | undefined;\n\n  dateInput: FormControl;\n  dateInputTo: FormControl;\n\n  parentFormControl: AbstractControl | undefined;\n\n  hoveredDate$ = new BehaviorSubject<DateSelectionModel>({ date: null });\n  pickerHoveredDayDateTo: NgDateStructNullable = null;\n\n  fromDate$ = new BehaviorSubject<NgDateStructNullable>(null);\n  toDate$ = new BehaviorSubject<NgDateStructNullable>(null);\n\n  readonly inputDateRangeSeparator = '-';\n\n  @HostBinding('attr.class') cssClass = 'bb-input-datepicker-ui';\n\n  /**\n   *  An unlisten function for disposing document click listener\n   */\n  unListenDocumentClick: (() => void) | undefined;\n  /**\n   * An unlisten function for disposing escape key listener\n   */\n  unListenDocumentEsc: (() => void) | undefined;\n\n  constructor(\n    private readonly formatterHelper: NgbDateLocaleParserFormatter,\n    private readonly el: ElementRef,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly deprecationsService: DeprecationsService,\n    private readonly adapter: NgbDateAdapter<string>,\n    private readonly renderer2: Renderer2,\n    private readonly domAttrService: DomAttributesService,\n  ) {\n    super(cd, deprecationsService);\n    this.dateInput = new FormControl(null);\n    this.dateInputTo = new FormControl(null);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const { disabled } = changes;\n\n    if (disabled && disabled.currentValue !== disabled.previousValue) {\n      if (this.disabled) {\n        this.dateInput.disable();\n      } else {\n        this.dateInput.enable();\n      }\n    }\n  }\n\n  // todo: do we need this?\n  ngAfterViewInit(): void {\n    const datepickerInput = this.rangeSelection ? this.datePickerRangeInput : this.datePickerInput;\n    this.domAttrService.moveAriaAttributes(this.el.nativeElement, datepickerInput?.nativeElement, this.renderer2);\n    setTimeout(() => {\n      // internal validators are not used\n      this.dateInput.setValidators([]);\n      this.dateInput.updateValueAndValidity();\n      this.cd.markForCheck();\n    });\n  }\n\n  /**\n   * @description\n   * Passing template date to the range template to identify when it is used in the \"to\" date\n   * (the second HTML date input of the split datepicker).\n   * Check https://ng-bootstrap.github.io/#/components/datepicker/api \"dayTemplateData\" for details\n   */\n  rangeTemplateData = () => ({\n    isTo: true,\n  });\n\n  private dateEqual(xDate: NgbDateStruct, yDate: NgbDateStruct) {\n    const a = new Date(xDate.year, xDate.month - 1, xDate.day).getTime();\n    const b = new Date(yDate.year, yDate.month - 1, yDate.day).getTime();\n\n    return a === b ? 0 : a > b ? 1 : -1;\n  }\n\n  /****************************************\n   *\n   *        EVENT HANDLERS\n   *\n   ***************************************/\n\n  /**\n   * @description\n   * Input change handler for single date\n   *\n   * @param element\n   */\n  onInputChange(element: HTMLInputElement) {\n    // Checking for \"browser bug\", for example,\n    // In IE `new Date()` for short date format YY gives 19YY, for modern browser in looks like 20YY\n    // for this reason we're adding 100 years to browser understand that it is 21st century\n    const dateInputToUpdate = element.name === 'date' ? this.dateInput : this.dateInputTo;\n\n    const { value } = element;\n\n    const browserDate = new Date(value);\n\n    const parsedDate = this.formatterHelper.interpretDate(value);\n\n    if (parsedDate && parsedDate.getTime() !== browserDate.getTime()) {\n      dateInputToUpdate.setValue(parsedDate);\n    }\n  }\n\n  /**\n   * Update datepicker value on input value change for same input date range selection\n   *\n   * @param value\n   */\n  onInputChangeRange(element: HTMLInputElement) {\n    const { value } = element;\n\n    const [dateFrom, dateTo] = value.split(this.inputDateRangeSeparator).slice(0, 2);\n\n    this.fromDate$.next(this.formatterHelper.parse(dateFrom?.trim()));\n    this.toDate$.next(this.formatterHelper.parse(dateTo?.trim()));\n\n    if (this.fromDate$.getValue() || this.toDate$.getValue()) {\n      this.updateRangeModel(this.fromDate$.getValue(), this.toDate$.getValue());\n    } else {\n      this.onChange(value);\n    }\n  }\n\n  /**\n   * Update datepicker value on input value change for split input date range selection, from date\n   *\n   * @param value\n   */\n  onInputChangeSplitRange(element: HTMLInputElement) {\n    const { value } = element;\n\n    this.fromDate$.next(this.formatterHelper.parse(value && value.trim()));\n\n    this.updateRangeModel(this.fromDate$.getValue(), this.toDate$.getValue());\n  }\n\n  /**\n   * Update datepicker value on input value change for split input date range selection, to date\n   *\n   * @param value\n   */\n  onInputChangeSplitRangeTo(element: HTMLInputElement) {\n    const { value } = element;\n\n    this.toDate$.next(this.formatterHelper.parse(value && value.trim()));\n\n    this.updateRangeModel(this.fromDate$.getValue(), this.toDate$.getValue());\n  }\n\n  /**\n   * Event handler for the native input\n   */\n  onInputFocus(open: boolean) {\n    super.onFocus();\n\n    if (open && this.datePicker) {\n      this.bindDocumentEvents();\n      this.datePicker.open();\n\n      if (this.rangeSelection || this.rangeSelectionSplit) {\n        this.datePicker.startDate = this.toDate$.getValue() as NgbDateStruct;\n      }\n    }\n  }\n\n  /**\n   * Event handler for the native input\n   */\n  onInputFocusTo(open: boolean) {\n    super.onFocus();\n\n    if (open && this.datePickerTo) {\n      this.datePickerTo.open();\n    }\n  }\n\n  /**\n   * Event handler for the picker toggle button to\n   */\n  onPickerTogglerClick(event: Event) {\n    if (!this.disabled && this.datePicker) {\n      this.bindDocumentEvents();\n      this.setStartDateOnPicker(this.datePicker);\n\n      this.datePicker.toggle();\n    }\n  }\n\n  /**\n   * Event handler for the picker toggle button to (split range selection)\n   */\n  onPickerTogglerClickTo(event: Event) {\n    if (!this.disabled && this.datePickerTo) {\n      this.bindDocumentEvents();\n      this.setStartDateOnPicker(this.datePickerTo);\n\n      this.datePickerTo.toggle();\n    }\n  }\n\n  /**\n   *\n   * Set disable state for the host control\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.dateInput.disable();\n    } else {\n      this.dateInput.enable();\n    }\n    super.setDisabledState(isDisabled);\n  }\n\n  /**\n   * Event handler blur on internal inputs and buttons\n   *\n   * @param $event\n   */\n  onControlBlur($event: FocusEvent) {\n    if (!$event.relatedTarget || !this.el.nativeElement.contains($event.relatedTarget)) {\n      this.onBlur($event);\n    }\n\n    if (this.rangeSelection) {\n      if (!this.toDate$.getValue() || !this.fromDate$.getValue()) {\n        this.setDatesTheSame();\n      } else {\n        this.setRangeInput();\n      }\n    }\n  }\n\n  /**\n   * Event handler for blur on the host control\n   *\n   * @param $event\n   */\n  onBlur($event?: FocusEvent) {\n    this.blur.emit($event);\n    this.onTouched();\n  }\n\n  /**\n   * @description\n   *\n   * Event handler for closing `from` or single date picker\n   *\n   */\n  onClosed() {\n    const hoveredDateClosedValue = this.hoveredDate$.getValue();\n    const hoveredDate = hoveredDateClosedValue?.date;\n    if (hoveredDate) {\n      this.setSelectedDate({ date: hoveredDate, isSelecting: false });\n    }\n    if (this.rangeSelection && this.datePickerButton) {\n      this.datePickerButton.nativeElement.focus();\n    } else if (this.rangeSelectionSplit && this.datePickerTo && this.datePickerInputTo) {\n      this.datePickerInputTo.nativeElement.focus();\n    }\n  }\n\n  /**\n   * Event handler for closing picker for `to` date\n   */\n  onClosedTo() {\n    if (this.datePickerButtonTo !== undefined && this.datePicker && !this.datePicker.isOpen()) {\n      this.datePickerButtonTo.nativeElement.focus();\n    }\n  }\n\n  /**\n   * Event handler for date setting from picker for `to` date when split input range selection\n   *\n   * @param date\n   */\n  onRangeDateSelectSplitTo(date: NgbDate) {\n    this.toDate$.next(this.copyDateElement(date));\n\n    this.updateRangeModel(this.fromDate$.getValue(), this.toDate$.getValue());\n\n    this.onTouched();\n  }\n\n  /**\n   * Event handler for date setting from picker for `from` date when split input range selection\n   *\n   * @param date\n   */\n  onRangeDateSelectSplit(date: NgbDate) {\n    this.fromDate$.next(this.copyDateElement(date));\n\n    this.updateRangeModel(this.fromDate$.getValue(), this.toDate$.getValue());\n\n    this.onTouched();\n  }\n\n  /**\n   *  Event handler for date setting from picker when single input range selection\n   *\n   * @param date\n   */\n  onRangeDateSelect(date: NgbDate) {\n    if (!this.fromDate$.getValue() && !this.toDate$.getValue()) {\n      this.fromDate$.next(this.copyDateElement(date));\n    } else if (\n      this.fromDate$.getValue() &&\n      !this.toDate$.getValue() &&\n      date &&\n      (date.after(this.fromDate$.getValue()) || date.equals(this.fromDate$.getValue()))\n    ) {\n      this.toDate$.next(this.copyDateElement(date));\n      setTimeout(() => this.closeDatePicker(), 0);\n    } else {\n      /* eslint-disable-next-line no-null/no-null */\n      this.toDate$.next(null);\n      this.fromDate$.next(this.copyDateElement(date));\n    }\n\n    this.updateRangeModel(this.fromDate$.getValue(), this.toDate$.getValue());\n\n    this.setRangeInput();\n  }\n\n  /**\n   *\n   * Handling day-hover from day-template on range selection.\n   *\n   * @param event\n   */\n  onDayHover(event: { date: NgDateStructNullable; isTo: boolean; isSelecting: boolean }) {\n    if (event.isTo) {\n      this.pickerHoveredDayDateTo = event.date;\n    } else {\n      this.setSelectedDate({ date: event.date, isSelecting: event.isSelecting });\n    }\n  }\n\n  /***************************************8\n   *\n   *  CONTROLVALUEACCESSOR OVERRIDES\n   *\n   **************************************/\n\n  /**\n   * Implements custom validation for the control\n   *\n   * @param control\n   */\n  validate = (control: AbstractControl): ValidationErrors | null => {\n    const value = control.value;\n\n    if (!this.parentFormControl) {\n      this.parentFormControl = control;\n    }\n\n    if (!value) {\n      /* eslint-disable-next-line  no-null/no-null */\n      return null;\n    }\n\n    if (this.rangeSelection || this.rangeSelectionSplit) {\n      return this.validateDateRange(value as DateRangeModel);\n    }\n\n    return this.validateSingleDate(value as string | Date);\n  };\n\n  /**\n   *\n   * Implements the value update for the control\n   *\n   * @param model\n   */\n\n  /* eslint-disable-next-line complexity */\n  writeValue(model: DateRangeModel | string | null): void {\n    if (!this.rangeSelection && !this.rangeSelectionSplit) {\n      this.dateInput.setValue(typeof model === 'string' ? model : null);\n    } else {\n      if (isDateRangeModelType(model)) {\n        if (model.from && this.validateSingleDate(model.from) === null) {\n          this.fromDate$.next(this.adapter.fromModel(model.from));\n        } else {\n          this.fromDate$.next(model.from as any);\n        }\n\n        if (model.to && this.validateSingleDate(model.to) === null) {\n          this.toDate$.next(this.adapter.fromModel(model.to));\n        } else {\n          this.toDate$.next(model.to as any);\n        }\n      } else {\n        this.fromDate$.next(null);\n        this.toDate$.next(null);\n      }\n\n      if (this.rangeSelection) {\n        this.setRangeInput();\n      } else if (this.rangeSelectionSplit) {\n        this.dateInput.setValue(this.fromDate$.getValue() ? this.adapter.toModel(this.fromDate$.getValue()) : null);\n        this.dateInputTo.setValue(this.toDate$.getValue() ? this.adapter.toModel(this.toDate$.getValue()) : null);\n      }\n    }\n  }\n\n  /*********************************\n   *\n   *        PRIVATE UTILS\n   *\n   **********************************/\n\n  private setSelectedDate(date: DateSelectionModel): void {\n    this.hoveredDate$.next(date);\n    this.focusedDate.emit(date);\n  }\n\n  private setDatesTheSame() {\n    const fromDate = this.fromDate$.getValue();\n    if (fromDate) {\n      this.toDate$.next(fromDate);\n      this.updateRangeModel(this.fromDate$.getValue(), this.toDate$.getValue());\n      this.setRangeInput();\n    }\n  }\n\n  private closeDatePicker() {\n    if (this.datePicker) {\n      this.datePicker.close();\n      if (this.rangeSelection) {\n        this.parentFormControl?.updateValueAndValidity();\n      }\n      this.onBlur();\n    }\n\n    if (this.datePickerTo) {\n      this.datePickerTo.close();\n      this.onBlur();\n    }\n\n    // Unbind the global document events once the date picker is closed\n    if (this.unListenDocumentClick) {\n      this.unListenDocumentClick();\n    }\n    if (this.unListenDocumentEsc) {\n      this.unListenDocumentEsc();\n    }\n  }\n\n  private isValidRange(from: string, to: string): ValidationErrors | null {\n    if (new Date(from).getTime() > new Date(to).getTime()) {\n      return { invalidDateFormat: true };\n    }\n\n    return null;\n  }\n\n  private validateSingleDate(value: string | Date): ValidationErrors | null {\n    const date = typeof value === 'string' ? value : value.toISOString();\n    // check if value is in ISO format\n    // this means that it has passed parsing and that it is in date format for current locale\n    // This check is for IE11\n    const ISODateRegExp = /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)$/g;\n\n    return ISODateRegExp.test(date) ? null : { invalidDateFormat: true };\n  }\n\n  /**\n   * Document Event handler\n   */\n  handleDocumentEvent(event: KeyboardEvent | MouseEvent): void {\n    if (event.target && (!this.el.nativeElement.contains(event.target) || event.type === 'keyup')) {\n      this.closeDatePicker();\n    }\n  }\n\n  /**\n   * Binds event on the global document when the datepicker is not opened\n   */\n  bindDocumentEvents() {\n    if (this.datePicker && !this.datePicker.isOpen()) {\n      this.unListenDocumentClick = this.renderer2.listen('document', 'click', this.handleDocumentEvent.bind(this));\n      this.unListenDocumentEsc = this.renderer2.listen('document', 'keyup.escape', this.handleDocumentEvent.bind(this));\n    }\n  }\n\n  /* eslint-disable-next-line complexity */\n  private validateDateRange(value: DateRangeModel) {\n    let validateTo = null;\n    let validateFrom = null;\n    let validateRange = null;\n\n    if (!isDateRangeModelType(value)) {\n      return { invalidDateFormat: true };\n    }\n    if (!value.from && !value.to && !this.isRequired()) {\n      return null;\n    }\n    if ((!value.to && value.from) || (value.to && !value.from) || (!value.from && !value.to && this.isRequired())) {\n      return { required: true };\n    }\n\n    if (value.from) {\n      validateFrom = this.validateSingleDate(value.from);\n    }\n    if (value.to) {\n      validateTo = this.validateSingleDate(value.to);\n    }\n    if (!validateFrom && !validateTo && value.from && value.to) {\n      validateRange = this.isValidRange(value.from, value.to);\n    }\n\n    return validateTo || validateFrom || validateRange;\n  }\n\n  private setRangeInput() {\n    if (this.fromDate$.getValue() || this.toDate$.getValue()) {\n      const formattedFrom = this.formatterHelper.format(this.fromDate$.getValue());\n      const formattedTo = this.formatterHelper.format(this.toDate$.getValue());\n\n      this.dateInput.setValue(\n        `${formattedFrom === null ? this.fromDate$.getValue() : formattedFrom} ${this.inputDateRangeSeparator} ${\n          formattedTo === null ? this.toDate$.getValue() : formattedTo\n        }`,\n      );\n    } else {\n      /* eslint-disable-next-line no-null/no-null */\n      this.dateInput.setValue(null);\n    }\n\n    if (this.parentFormControl?.touched) {\n      this.onTouched();\n    }\n  }\n\n  private copyDateElement(sourceDate: NgbDate | NgbDateStruct): NgbDateStruct {\n    return { year: sourceDate.year, month: sourceDate.month, day: sourceDate.day } as NgbDateStruct;\n  }\n\n  private updateRangeModel(from: NgDateStructNullable, to: NgDateStructNullable) {\n    this.onChange({\n      from: from ? this.adapter.toModel(from) : null,\n      to: to ? this.adapter.toModel(to) : null,\n    });\n  }\n\n  private isRequired() {\n    if (this.parentFormControl?.validator) {\n      const validator = this.parentFormControl?.validator({} as AbstractControl);\n\n      if (validator && validator.required) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private setStartDateOnPicker(picker: NgbInputDatepicker) {\n    let startDate: NgDateStructNullable = null;\n\n    if (this.rangeSelection) {\n      startDate = this.fromDate$.getValue() as NgbDateStruct;\n    } else if (this.rangeSelectionSplit && this.fromDate$.getValue()?.year) {\n      startDate = this.fromDate$.getValue() as NgbDateStruct;\n    } else if (this.rangeSelectionSplit && this.toDate$.getValue()?.year) {\n      startDate = this.toDate$.getValue() as NgbDateStruct;\n    }\n\n    if (!!startDate) {\n      picker.startDate = startDate;\n    }\n  }\n}\n","<div\n  class=\"bb-input-datepicker__wrapper\"\n  [ngClass]=\"{\n    'ng-invalid': parentFormControl?.invalid,\n    'ng-touched': parentFormControl?.touched,\n    'bb-input-datepicker__range-split-wrapper': rangeSelectionSplit\n  }\"\n>\n  <label *ngIf=\"label\" class=\"bb-input-datepicker__label\" for=\"{{ id }}\">{{ label }}</label>\n  <div class=\"input-group bb-input-datepicker\" #positionTarget>\n    <ng-container *ngIf=\"!rangeSelection; else dateRangeInput\">\n      <input\n        type=\"text\"\n        id=\"{{ id }}\"\n        name=\"date\"\n        class=\"form-control bb-input-datepicker__input\"\n        [attr.placeholder]=\"placeholder\"\n        [attr.aria-labelledby]=\"ariaLabelledby\"\n        [attr.aria-describedby]=\"datepickerDescribedby\"\n        [attr.aria-expanded]=\"ariaExpanded\"\n        [attr.role]=\"role\"\n        [attr.aria-invalid]=\"ariaInvalid\"\n        [attr.aria-owns]=\"ariaOwns\"\n        [attr.aria-activedescendant]=\"ariaActivedescendant\"\n        [attr.aria-label]=\"(!label && ariaLabel) || null\"\n        ngbDatepicker\n        [minDate]=\"_minDate\"\n        [maxDate]=\"_maxDate\"\n        [markDisabled]=\"markDisabled\"\n        [readOnly]=\"readonly\"\n        [required]=\"required\"\n        [navigation]=\"navigation\"\n        [dayTemplate]=\"rangeSelectionSplit ? rangeDay : singleDay\"\n        [displayMonths]=\"displayMonths\"\n        [formControl]=\"dateInput\"\n        [placement]=\"placement\"\n        [positionTarget]=\"positionTarget\"\n        [restoreFocus]=\"!rangeSelectionSplit\"\n        (ngModelChange)=\"!rangeSelectionSplit ? onChange($event) : null\"\n        (click)=\"onInputFocus(clickOpen)\"\n        (focus)=\"onInputFocus(focusOpen)\"\n        (blur)=\"onControlBlur($event)\"\n        (input)=\"rangeSelectionSplit ? onInputChangeSplitRange(datePickerInput) : onInputChange(datePickerInput)\"\n        (closed)=\"onClosed()\"\n        #datePicker=\"ngbDatepicker\"\n        #datePickerInput\n        [attr.data-role]=\"'input-date-single'\"\n        [attr.autocomplete]=\"autocomplete\"\n        [firstDayOfWeek]=\"firstDayOfWeek\"\n        (dateSelect)=\"rangeSelectionSplit ? onRangeDateSelectSplit($event) : null\"\n        [autoClose]=\"!rangeSelectionSplit\"\n      />\n    </ng-container>\n\n    <div\n      *ngIf=\"datepickerDescribedby === 'defaultDatepickerDescribedbyLabel'\"\n      class=\"sr-only\"\n      aria-live=\"polite\"\n      id=\"defaultDatepickerDescribedbyLabel\"\n    >\n      <ng-container *ngIf=\"hoveredDate$ | async as hoveredDate\">\n        <span\n          *ngIf=\"hoveredDate.isSelecting; else selectedDate\"\n          i18n=\"Default selecting date state i18n message@@defaultSelectingState.with.i18n.support\"\n          >Selecting date:\n          {{\n            hoveredDate.date.year + '-' + hoveredDate.date.month + '-' + hoveredDate.date.day | date: 'longDate'\n          }}</span\n        >\n        <ng-template #selectedDate>\n          <ng-container\n            i18n=\"Default selected date state i18n message@@defaultSelectedState.with.i18n.support\"\n            *ngIf=\"hoveredDate.date\"\n            >Selected date is{{\n              hoveredDate.date.year + '-' + hoveredDate.date.month + '-' + hoveredDate.date.day | date: 'longDate'\n            }}.</ng-container\n          >\n        </ng-template>\n      </ng-container>\n    </div>\n\n    <div class=\"input-group-append\">\n      <button\n        #datePickerButton\n        bbButton\n        class=\"bb-input-datepicker__calendar-opener-button\"\n        [color]=\"btnColor\"\n        [disabled]=\"disabled || readonly\"\n        (blur)=\"onControlBlur($event)\"\n        [attr.aria-label]=\"ariaLabelForButton\"\n        (click)=\"onPickerTogglerClick($event)\"\n        [attr.data-role]=\"'toggle-calendar-button'\"\n      >\n        <bb-icon-ui [color]=\"iconColor\" [name]=\"icon\" [size]=\"iconSize\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"input-group bb-input-datepicker\" *ngIf=\"rangeSelectionSplit\">\n    <input\n      type=\"text\"\n      id=\"to_{{ id }}\"\n      name=\"dateTo\"\n      class=\"form-control bb-input-datepicker__input\"\n      [attr.placeholder]=\"placeholder\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      [attr.aria-describedby]=\"datepickerDescribedby\"\n      [attr.aria-expanded]=\"ariaExpanded\"\n      [attr.role]=\"role\"\n      [attr.aria-invalid]=\"ariaInvalid\"\n      [attr.aria-owns]=\"ariaOwns\"\n      [attr.aria-activedescendant]=\"ariaActivedescendant\"\n      [attr.aria-label]=\"(!label && ariaLabel) || null\"\n      ngbDatepicker\n      [minDate]=\"_minDate\"\n      [maxDate]=\"_maxDate\"\n      [markDisabled]=\"markDisabled\"\n      [readOnly]=\"readonly\"\n      [required]=\"required\"\n      [displayMonths]=\"displayMonths\"\n      [navigation]=\"navigation\"\n      [restoreFocus]=\"false\"\n      [dayTemplate]=\"rangeDay\"\n      [dayTemplateData]=\"rangeTemplateData\"\n      [formControl]=\"dateInputTo\"\n      [placement]=\"placement\"\n      (click)=\"onInputFocusTo(clickOpen)\"\n      (focus)=\"onInputFocusTo(focusOpen)\"\n      (blur)=\"onControlBlur($event)\"\n      (input)=\"rangeSelectionSplit ? onInputChangeSplitRangeTo(datePickerInputTo) : onInputChange(datePickerInputTo)\"\n      (closed)=\"onClosedTo()\"\n      #datePickerTo=\"ngbDatepicker\"\n      #datePickerInputTo\n      [attr.data-role]=\"'input-date-single'\"\n      [attr.autocomplete]=\"autocomplete\"\n      [firstDayOfWeek]=\"firstDayOfWeek\"\n      (dateSelect)=\"rangeSelectionSplit ? onRangeDateSelectSplitTo($event) : null\"\n      [autoClose]=\"!rangeSelectionSplit\"\n    />\n    <div class=\"input-group-append\">\n      <button\n        #datePickerButtonTo\n        bbButton\n        class=\"bb-input-datepicker__calendar-opener-button\"\n        [color]=\"btnColor\"\n        [disabled]=\"disabled || readonly\"\n        [attr.aria-label]=\"ariaLabelForButton\"\n        (blur)=\"onControlBlur($event)\"\n        (click)=\"onPickerTogglerClickTo($event)\"\n        [attr.data-role]=\"'toggle-calendar-button'\"\n      >\n        <bb-icon-ui [color]=\"iconColor\" [name]=\"icon\" [size]=\"iconSize\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n</div>\n\n<!-- Single input date range template -->\n\n<ng-template #dateRangeInput>\n  <input\n    type=\"text\"\n    name=\"date\"\n    id=\"{{ id }}\"\n    class=\"form-control bb-input-datepicker__range\"\n    [formControl]=\"dateInput\"\n    [readOnly]=\"readonly\"\n    [required]=\"required\"\n    #datePickerRangeInput\n    [attr.placeholder]=\"placeholder\"\n    [attr.aria-label]=\"(!label && ariaLabel) || null\"\n    [attr.aria-describedby]=\"datepickerDescribedby\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.aria-expanded]=\"ariaExpanded\"\n    [attr.role]=\"role\"\n    [attr.aria-invalid]=\"ariaInvalid\"\n    [attr.aria-owns]=\"ariaOwns\"\n    [attr.aria-activedescendant]=\"ariaActivedescendant\"\n    (click)=\"onInputFocus(clickOpen)\"\n    (focus)=\"onInputFocus(focusOpen)\"\n    (blur)=\"onControlBlur($event)\"\n    (input)=\"onInputChangeRange(datePickerRangeInput)\"\n    [attr.data-role]=\"'input-date-range'\"\n  />\n\n  <input\n    type=\"text\"\n    class=\"datepicker-input-hidden bb-input-datepicker__range-input-hidden\"\n    ngbDatepicker\n    (closed)=\"onClosed()\"\n    [minDate]=\"_minDate\"\n    [maxDate]=\"_maxDate\"\n    [markDisabled]=\"markDisabled\"\n    [autoClose]=\"false\"\n    [attr.aria-label]=\"label || ariaLabel || null\"\n    [attr.aria-describedby]=\"datepickerDescribedby\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.aria-expanded]=\"ariaExpanded\"\n    [attr.role]=\"role\"\n    [attr.aria-invalid]=\"ariaInvalid\"\n    [attr.aria-owns]=\"ariaOwns\"\n    [attr.aria-activedescendant]=\"ariaActivedescendant\"\n    [readOnly]=\"readonly\"\n    [required]=\"required\"\n    [firstDayOfWeek]=\"firstDayOfWeek\"\n    [positionTarget]=\"positionTarget\"\n    [placement]=\"placement\"\n    #datePicker=\"ngbDatepicker\"\n    [dayTemplate]=\"rangeDay\"\n    navigation=\"arrows\"\n    [attr.data-role]=\"'input-datepicker'\"\n    (dateSelect)=\"onRangeDateSelect($event)\"\n  />\n</ng-template>\n\n<!-- template end -->\n\n<!-- Single Date day template -->\n<ng-template\n  #singleDay\n  let-date=\"date\"\n  let-disabled=\"disabled\"\n  let-selected=\"selected\"\n  let-currentMonth=\"currentMonth\"\n  let-data=\"data\"\n>\n  <bb-input-datepicker-single-day-template-ui\n    [disabled]=\"disabled\"\n    [selected]=\"selected\"\n    [currentMonth]=\"currentMonth\"\n    [date]=\"date\"\n    (hovered)=\"onDayHover($event)\"\n    [hoveredDate]=\"data?.isTo ? pickerHoveredDayDateTo : hoveredDate$.getValue().date\"\n  >\n  </bb-input-datepicker-single-day-template-ui>\n</ng-template>\n\n<!-- template end -->\n\n<!-- Date range day template -->\n<ng-template\n  #rangeDay\n  let-date=\"date\"\n  let-disabled=\"disabled\"\n  let-selected=\"selected\"\n  let-currentMonth=\"currentMonth\"\n  let-data=\"data\"\n>\n  <bb-input-datepicker-range-day-template-ui\n    [date]=\"date\"\n    [fromDate]=\"fromDate$.getValue()\"\n    [toDate]=\"toDate$.getValue()\"\n    [splitRange]=\"rangeSelectionSplit\"\n    [toDateDatepicker]=\"data?.isTo\"\n    [disabled]=\"disabled\"\n    [currentMonth]=\"currentMonth\"\n    (hovered)=\"onDayHover($event)\"\n    [hoveredDate]=\"data?.isTo ? pickerHoveredDayDateTo : hoveredDate$.getValue().date\"\n  >\n  </bb-input-datepicker-range-day-template-ui>\n</ng-template>\n","import { Directive, forwardRef, Input, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'bb-input-datepicker-ui[minDate]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: forwardRef(() => MinDateValidatorDirective),\n    },\n  ],\n})\nexport class MinDateValidatorDirective implements Validator, OnDestroy {\n  private _minDate: number = -Number.MAX_VALUE;\n\n  onValidatorChange: () => void = () => {};\n\n  constructor() {}\n\n  @Input()\n  set minDate(date: string | NgbDateStruct | undefined) {\n    if (!date) {\n      this._minDate = -Number.MAX_VALUE;\n    } else {\n      const minDate = typeof date === 'string' ? new Date(date) : new Date(date.year, date.month - 1, date.day);\n      this._minDate = minDate.getTime();\n    }\n\n    this.onValidatorChange();\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onValidatorChange = fn;\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    const value = control.value && control.value.from ? control.value.from : control.value;\n    if (!value) {\n      return null;\n    }\n\n    return new Date(value).getTime() >= this._minDate\n      ? // eslint-disable-next-line no-null/no-null\n        null\n      : { dateLessThanMinDate: true };\n  }\n\n  ngOnDestroy(): void {\n    this.minDate = undefined;\n  }\n}\n","import { Directive, forwardRef, Input, OnDestroy } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'bb-input-datepicker-ui[maxDate]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: forwardRef(() => MaxDateValidatorDirective),\n    },\n  ],\n})\nexport class MaxDateValidatorDirective implements Validator, OnDestroy {\n  private _maxDate: number = Number.MAX_VALUE;\n\n  onValidatorChange: () => void = () => {};\n\n  constructor() {}\n\n  @Input()\n  set maxDate(date: string | NgbDateStruct | undefined) {\n    if (!date) {\n      this._maxDate = Number.MAX_VALUE;\n    } else {\n      const maxDate = typeof date === 'string' ? new Date(date) : new Date(date.year, date.month - 1, date.day);\n      this._maxDate = maxDate.getTime();\n    }\n\n    this.onValidatorChange();\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onValidatorChange = fn;\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    const value = control.value && control.value.to ? control.value.to : control.value;\n    if (!value) {\n      return null;\n    }\n\n    return new Date(value).getTime() <= this._maxDate\n      ? // eslint-disable-next-line no-null/no-null\n        null\n      : { dateGreaterThanMaxDate: true };\n  }\n\n  ngOnDestroy(): void {\n    this.maxDate = undefined;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputDatepickerComponent } from './input-datepicker.component';\nimport { MinDateValidatorDirective } from './validation/min-date-validator/min-date-validator.directive';\nimport { MaxDateValidatorDirective } from './validation/max-date-validator/max-date-validator.directive';\nimport { InputDatepickerDayTemplateSingleComponent } from './input-datepicker-day-template-single.component';\nimport { InputDatepickerDayTemplateRangeComponent } from './input-datepicker-day-template-range.component';\n\nexport { MinDateValidatorDirective } from './validation/min-date-validator/min-date-validator.directive';\nexport { MaxDateValidatorDirective } from './validation/max-date-validator/max-date-validator.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbDatepickerModule,\n    ButtonModule,\n    IconModule,\n    BaseClassesModule,\n  ],\n  declarations: [\n    InputDatepickerComponent,\n    MinDateValidatorDirective,\n    MaxDateValidatorDirective,\n    InputDatepickerDayTemplateSingleComponent,\n    InputDatepickerDayTemplateRangeComponent,\n  ],\n  exports: [\n    InputDatepickerComponent,\n    MinDateValidatorDirective,\n    MaxDateValidatorDirective,\n\n    /**\n     * @deprecated\n     * Exporting `FormsModule` is deprecated\n     **/\n    FormsModule,\n  ],\n})\nexport class InputDatepickerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","Key","i1.NgbDateLocaleParserFormatter","i3","i2","i4","i6.InputDatepickerDayTemplateSingleComponent","i7.InputDatepickerDayTemplateRangeComponent"],"mappings":";;;;;;;;;;;;;;;;;;;MAIa,cAAc,GAAG,IAAI,cAAc,CAAoB,eAAe,EAAE;AAG/E,MAAO,wBAAyB,SAAQ,iBAAiB,CAAA;IAK7D,WACqB,CAAA,MAAc,EACW,aAAgC,EAAA;AAE5E,QAAA,KAAK,EAAE,CAAC;QAFoC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAmB;AAI5E,QAAA,MAAM,wBAAwB,GAAG,iBAAiB,CAAC,MAAM,EAAE,SAAS,CAAC,UAAU,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACzG,IAAI,CAAC,aAAa,GAAG,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,KAAK,wBAAwB,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7G,QAAA,IAAI,CAAC,WAAW,GAAG,mBAAmB,CAAC,MAAM,EAAE,SAAS,CAAC,UAAU,EAAE,gBAAgB,CAAC,WAAW,CAAC,CAAC;AACnG,QAAA,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,MAAM,EAAE,SAAS,CAAC,UAAU,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC;KAC5F;AAED,IAAA,eAAe,CAAC,OAAe,EAAA;QAC7B,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;KAC3G;AAED,IAAA,iBAAiB,CAAC,KAAa,EAAA;QAC7B,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;KACvG;AAED,IAAA,gBAAgB,CAAC,KAAa,EAAA;QAC5B,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;KACrG;AAED,IAAA,eAAe,CAAC,IAAmB,EAAA;;AAEjC,QAAA,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAG,EAAA,IAAI,CAAC,GAAG,CAAI,CAAA,EAAA,IAAI,CAAC,KAAK,CAAI,CAAA,EAAA,IAAI,CAAC,IAAI,EAAE,CAAC;KACjH;;sHAhCU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAMzB,SAAS,EAAA,EAAA,EAAA,KAAA,EACG,cAAc,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;0HAPzB,wBAAwB,EAAA,CAAA,CAAA;4FAAxB,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBADpC,UAAU;;0BAON,MAAM;2BAAC,SAAS,CAAA;;0BAChB,QAAQ;;0BAAI,MAAM;2BAAC,cAAc,CAAA;;;ACVtC,MAAM,wBAAwB,GAAG,CAAC,MAAW,EAAE,QAAgB,KAC7D,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,QAAQ,GAAG,KAAK,CAAC;AAE3G,MAAM,eAAe,GAAG,CAAC,KAAU,KACxC,wBAAwB,CAAC,KAAK,EAAE,KAAK,CAAC;AACtC,IAAA,wBAAwB,CAAC,KAAK,EAAE,OAAO,CAAC;AACxC,IAAA,wBAAwB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAGpC,MAAO,oBAAqB,SAAQ,cAAsB,CAAA;AAC9D,IAAA,SAAS,CAAC,UAAkB,EAAA;AAC1B,QAAA,IAAI,UAAU,EAAE;AACd,YAAA,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/B,YAAA,MAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;AAE7B,YAAA,IAAI,IAAI,EAAE;gBACR,OAAO;AACL,oBAAA,IAAI,EAAE,IAAI;AACV,oBAAA,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC;AACvB,oBAAA,GAAG,EAAE,CAAC,CAAC,OAAO,EAAE;iBACjB,CAAC;AACH,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,OAAO,CAAC,IAA+C,EAAA;QACrD,IAAI,CAAC,IAAI,EAAE;AACT,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;AAAM,aAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACnC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAAM,aAAA,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;AACpE,SAAA;QAED,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7C;;kHA5BU,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;sHAApB,oBAAoB,EAAA,CAAA,CAAA;4FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;;;ACPX;AACA;AACA;AACA;AAEM,MAAO,4BAA6B,SAAQ,sBAAsB,CAAA;IACtE,WAAgD,CAAA,MAAc,EAAmB,QAAkB,EAAA;AACjG,QAAA,KAAK,EAAE,CAAC;QADsC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAAmB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAElG;AAID,IAAA,IAAI,gBAAgB,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;KAChF;IAED,IAAI,UAAU,CAAC,MAA0B,EAAA;AACvC,QAAA,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;KAC3B;IAED,OAAO,cAAc,CAAC,IAAY,EAAE,KAAa,EAAE,GAAW,EAAE,SAAiB,EAAA;AAC/E,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5C,QAAA,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAE1B,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,EAAE;YACpD,IAAI,IAAI,GAAG,CAAC;AACb,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,OAAO,kBAAkB,CAAC,KAAa,EAAE,WAAqB,EAAA;QAC5D,MAAM,KAAK,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,IAAY,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAEzF,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,aAAa,CAAC,KAAa,EAAA;AACzB,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAA,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAAE,OAAO;AAElC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAE7C,QAAA,IACE,UAAU,GAAG,CAAC;AACd,YAAA,IAAI,GAAG,IAAI;YACX,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,KAAK,IAAI,EAC3C;AACA,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;AAC9B,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,KAAK,CAAC,KAAyB,EAAA;QAC7B,IAAI,CAAC,KAAK,EAAE;;AAEV,YAAA,OAAO,IAAK,CAAC;AACd,SAAA;QAED,MAAM,iBAAiB,GAAG,aAAa,CAAC;QACxC,MAAM,0BAA0B,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAClF,MAAM,mBAAmB,GAAG,0BAA0B,IAAI,0BAA0B,CAAC,CAAC,CAAC,CAAC;QACxF,MAAM,cAAc,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,mBAAmB,GAAG,IAAI,CAAC,CAAC;;;;AAKvE,QAAA,IAAI,mBAAmB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,EAAE;AACtE,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CAAC;AAErG,YAAA,IAAI,gBAAgB,EAAE;;AAGpB,gBAAA,OAAO,gBAAgB,CAAC;AACzB,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;KAClD;AAED;;;;;;AAMG;AACH,IAAA,6BAA6B,CAAC,KAAa,EAAA;QACzC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI;YACF,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnG,SAAA;AAAC,QAAA,OAAO,CAAC,EAAE;;;AAGX,SAAA;QACD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAE7C,QAAA,IAAI,CAAC,WAAW,IAAI,CAAC,UAAU,EAAE;;AAE/B,YAAA,OAAO,IAAK,CAAC;AACd,SAAA;QAED,OAAO;AACL,YAAA,IAAI,EAAE,UAAU,CAAC,WAAW,EAAE;AAC9B,YAAA,KAAK,EAAE,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC;AAChC,YAAA,GAAG,EAAE,UAAU,CAAC,OAAO,EAAE;SAC1B,CAAC;KACH;AAED;;;;;;;;;;;AAWG;AACH,IAAA,mBAAmB,CAAC,KAAa,EAAE,MAAc,EAAE,SAAiB,EAAA;QAClE,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAE9C,QAAA,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,MAAM,cAAc,GAAG,4BAA4B,CAAC,kBAAkB,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;YAChG,MAAM,gBAAgB,GAAG,4BAA4B,CAAC,kBAAkB,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;YAClG,MAAM,eAAe,GAAG,4BAA4B,CAAC,kBAAkB,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;AAEjG,YAAA,IAAI,cAAc,GAAG,CAAC,CAAC,IAAI,gBAAgB,GAAG,CAAC,CAAC,IAAI,eAAe,GAAG,CAAC,CAAC,EAAE;AACxE,gBAAA,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;gBAEzB,MAAM,IAAI,GAAG,YAAY,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;gBACzG,MAAM,KAAK,GAAG,YAAY,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBAC7G,MAAM,GAAG,GAAG,YAAY,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;gBAElG,OAAO;oBACL,GAAG;oBACH,KAAK;AACL,oBAAA,IAAI,EAAE,4BAA4B,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,YAAY,CAAC,eAAe,CAAC,CAAC;iBACnG,CAAC;AACH,aAAA;AACF,SAAA;;AAGD,QAAA,OAAO,IAAK,CAAC;KACd;AAED,IAAA,aAAa,CAAC,KAAa,EAAA;AACzB,QAAA,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QACjE,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACzC,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAChF,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,GAAW,KAAK,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAE7E,OAAO,SAAS,IAAI,CAAC,IAAI,SAAS,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KACzF;AAED,IAAA,MAAM,CAAC,IAAsC,EAAE,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAA;QAC3E,IAAI,aAAa,GAAG,EAAE,CAAC;AACvB,QAAA,IAAI,IAAI,IAAI,eAAe,CAAC,IAAI,CAAC,EAAE;YACjC,aAAa;AACX,gBAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAChH,SAAA;AAED,QAAA,OAAO,aAAa,CAAC;KACtB;;AApKU,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,kBACnB,SAAS,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;8HADlB,4BAA4B,EAAA,CAAA,CAAA;4FAA5B,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBADxC,UAAU;;0BAEI,MAAM;2BAAC,SAAS,CAAA;;;ACO/B;AACA,IAAYC,KAKX,CAAA;AALD,CAAA,UAAY,GAAG,EAAA;AACb,IAAA,GAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAc,CAAA;AACd,IAAA,GAAA,CAAA,GAAA,CAAA,SAAA,CAAA,GAAA,EAAA,CAAA,GAAA,SAAY,CAAA;AACZ,IAAA,GAAA,CAAA,GAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAe,CAAA;AACf,IAAA,GAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAc,CAAA;AAChB,CAAC,EALWA,KAAG,KAAHA,KAAG,GAKd,EAAA,CAAA,CAAA,CAAA;MAiBY,yCAAyC,CAAA;IACpD,WACmB,CAAA,eAA6C,EAC7C,cAA8B,EAAA;QAD9B,IAAe,CAAA,eAAA,GAAf,eAAe,CAA8B;QAC7C,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAYjD;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAE1B;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAO1B;;AAEG;QACM,IAAW,CAAA,WAAA,GAAyB,IAAI,CAAC;AAElD;;AAEG;AACO,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,YAAY,EAAsB,CAAC;AAE3D;;AAEG;QACH,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;AAEpB;;AAEG;QACH,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAOlB,QAAA,IAAA,CAAA,MAAM,GAAG,CAAC,IAAsC,KAAK,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAlDrF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACjD;AAmDD,IAAA,WAAW,CAAC,OAAsB,EAAA;;AAChC,QAAA,IAAI,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,QAAQ,MAAI,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,QAAQ,CAAA,KAAI,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,IAAI,CAAA,KAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,YAAY,CAAA,EAAE;YACpF,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,MAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjG,SAAA;AACD,QAAA,IAAI,CAAC,SAAS,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACtD;AAED;;;;;AAKG;IAEH,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;KACvD;AAED;;;;;AAKG;IAEH,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;KAC3D;AAED;;;;;;;;AAQG;AAEH,IAAA,OAAO,CAAC,KAAoB,EAAA;AAC1B,QAAA,MAAM,GAAG,GAAI,KAAK,CAAC,MAAsB,CAAC,WAAW,CAAC;AACtD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI;AACxB,cAAE,MAAM,CAAC,MAAM,CAACA,KAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC;AAC7C,cAAE,yCAAyC,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,GAAG,CAAC,CAAC;QAEnF,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,QAAQ,EAAE;AAC9F,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AAC3D,SAAA;KACF;;AAjGuB,yCAAA,CAAA,eAAe,GAAa,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;uIARzG,yCAAyC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzC,yCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,yCAAyC,EAZzC,QAAA,EAAA,4CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,SAAA,EAAA;QACT,QAAQ;QACR,4BAA4B;AAC5B,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,4BAA4B;AAC1C,SAAA;QACD,cAAc;AACd,QAAA,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,gBAAgB,EAAE;AAC3D,KAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECtCH,6QAWA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FD8Ba,yCAAyC,EAAA,UAAA,EAAA,CAAA;kBAfrD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,4CAA4C;AACtD,oBAAA,WAAW,EAAE,uDAAuD;AACpE,oBAAA,SAAS,EAAE;wBACT,QAAQ;wBACR,4BAA4B;AAC5B,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,4BAA4B;AAC1C,yBAAA;wBACD,cAAc;AACd,wBAAA,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,gBAAgB,EAAE;AAC3D,qBAAA;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA,CAAA;6IAcU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAKG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAKG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAKG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAKI,OAAO,EAAA,CAAA;sBAAhB,MAAM;gBAiCP,UAAU,EAAA,CAAA;sBADT,YAAY;uBAAC,UAAU,CAAA;gBAYxB,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,WAAW,CAAA;gBAezB,OAAO,EAAA,CAAA;sBADN,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AEtH5C;AACA,IAAYF,KAKX,CAAA;AALD,CAAA,UAAY,GAAG,EAAA;AACb,IAAA,GAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAc,CAAA;AACd,IAAA,GAAA,CAAA,GAAA,CAAA,SAAA,CAAA,GAAA,EAAA,CAAA,GAAA,SAAY,CAAA;AACZ,IAAA,GAAA,CAAA,GAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAe,CAAA;AACf,IAAA,GAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAc,CAAA;AAChB,CAAC,EALWA,KAAG,KAAHA,KAAG,GAKd,EAAA,CAAA,CAAA,CAAA;MAiBY,wCAAwC,CAAA;IA8HnD,WACmB,CAAA,eAA6C,EAC7C,cAA8B,EAAA;QAD9B,IAAe,CAAA,eAAA,GAAf,eAAe,CAA8B;QAC7C,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAxHjD;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAO1B;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAyB,IAAI,CAAC;AAE/C;;AAEG;QACM,IAAM,CAAA,MAAA,GAAyB,IAAI,CAAC;AAE7C;;AAEG;QACM,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AAE5B;;;AAGG;QACM,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;AAElC;;AAEG;QACM,IAAW,CAAA,WAAA,GAAyB,IAAI,CAAC;AAElD;;AAEG;AACO,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAoB,CAAC;AAE7D;;AAEG;AACO,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,YAAY,EAA2B,CAAC;AAEhE;;AAEG;QACH,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;AAEhB;;AAEG;QACH,IAAkB,CAAA,kBAAA,GAAG,KAAK,CAAC;AAE3B;;AAEG;QACH,IAAqB,CAAA,qBAAA,GAAG,KAAK,CAAC;AAE9B;;AAEG;QACH,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;AAEpB;;AAEG;QACH,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAElB;;AAEG;QACH,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;AAEf;;AAEG;QACH,IAAI,CAAA,IAAA,GAAG,KAAK,CAAC;AAEb;;AAEG;QACH,IAAa,CAAA,aAAA,GAAG,EAAE,CAAC;QAsCjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACjD;AAhCD,IAAA,IAAY,sBAAsB,GAAA;AAChC,QAAA,QACE,CAAC,IAAI,CAAC,MAAM;aACX,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAC1E;KACH;AAED,IAAA,IAAY,uBAAuB,GAAA;QACjC,QACE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;aACxE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;iBAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,gBAAgB,EACrB;KACH;AAED,IAAA,IAAY,yBAAyB,GAAA;QACnC,QACE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;YACxE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YAC7B,CAAC,IAAI,CAAC,gBAAgB;YACtB,IAAI,CAAC,MAAM,EACX;KACH;;AAUD,IAAA,WAAW,CAAC,OAAsB,EAAA;;AAChC,QAAA,IAAI,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,WAAW,EAAE;YACxB,IAAI,CAAC,kBAAkB,GAAG,CAAC,EACzB,IAAI,CAAC,YAAY,EAAE;AACnB,gBAAA,IAAI,CAAC,IAAI;AACT,gBAAA,IAAI,CAAC,WAAW;AAChB,iBAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,IAAI,IAAI,CAAC,yBAAyB,KAAK,IAAI,CAAC,UAAU;qBAClF,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC;qBACxE,IAAI,CAAC,sBAAsB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CACrD,CAAC;AAEF,YAAA,IAAI,CAAC,SAAS,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtD,SAAA;QAED,IAAI,CAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,QAAQ,MAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,MAAM,CAAA,KAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,IAAI,CAAA,EAAE;AACzD,YAAA,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1G,YAAA,IAAI,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3C,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5D,YAAA,IAAI,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChD,SAAA;AAED,QAAA,IAAI,CAAC,WAAW;YACd,CAAC,IAAI,CAAC,kBAAkB;gBACxB,CAAC,IAAI,CAAC,qBAAqB;gBAC3B,CAAC,IAAI,CAAC,MAAM;gBACZ,CAAC,IAAI,CAAC,IAAI;AACV,iBAAC,IAAI,CAAC,QAAQ,IAAI,CAAA,MAAA,IAAI,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,MAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC9D;AAED;;;;;AAKG;IAEH,UAAU,GAAA;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;KACpF;AAED;;;;;AAKG;IAEH,WAAW,GAAA;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;KACxF;AAED;;;;;;;;AAQG;AAEH,IAAA,OAAO,CAAC,KAAoB,EAAA;AAC1B,QAAA,MAAM,GAAG,GAAI,KAAK,CAAC,MAAsB,CAAC,WAAW,CAAC;AACtD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI;AACxB,cAAE,MAAM,CAAC,MAAM,CAACA,KAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC;AAC7C,cAAE,wCAAwC,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,GAAG,CAAC,CAAC;QAElF,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,QAAQ,EAAE;YAC9F,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AACxF,SAAA;KACF;IAEO,YAAY,GAAA;AAClB,QAAA,QACE,CAAC,IAAI,CAAC,QAAQ;YACd,CAAC,IAAI,CAAC,MAAM;AACZ,YAAA,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAC3F;KACH;;AAnNuB,wCAAA,CAAA,eAAe,GAAa,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;sIADzG,wCAAwC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxC,wCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wCAAwC,EAZxC,QAAA,EAAA,2CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,SAAA,EAAA;QACT,QAAQ;QACR,4BAA4B;AAC5B,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,4BAA4B;AAC1C,SAAA;QACD,cAAc;AACd,QAAA,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,gBAAgB,EAAE;AAC3D,KAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECtCH,seAgBA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FDyBa,wCAAwC,EAAA,UAAA,EAAA,CAAA;kBAfpD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,2CAA2C;AACrD,oBAAA,WAAW,EAAE,sDAAsD;AACnE,oBAAA,SAAS,EAAE;wBACT,QAAQ;wBACR,4BAA4B;AAC5B,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,4BAA4B;AAC1C,yBAAA;wBACD,cAAc;AACd,wBAAA,EAAE,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,gBAAgB,EAAE;AAC3D,qBAAA;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA,CAAA;6IAOU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAKG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAKG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAKG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAKG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAMG,gBAAgB,EAAA,CAAA;sBAAxB,KAAK;gBAKG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAKI,WAAW,EAAA,CAAA;sBAApB,MAAM;gBAKG,OAAO,EAAA,CAAA;sBAAhB,MAAM;gBAsHP,UAAU,EAAA,CAAA;sBADT,YAAY;uBAAC,UAAU,CAAA;gBAYxB,WAAW,EAAA,CAAA;sBADV,YAAY;uBAAC,WAAW,CAAA;gBAezB,OAAO,EAAA,CAAA;sBADN,YAAY;uBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AEhM5C;AACA;AACA,IAAY,GAaX,CAAA;AAbD,CAAA,UAAY,GAAG,EAAA;AACb,IAAA,GAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAO,CAAA;AACP,IAAA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAU,CAAA;AACV,IAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAW,CAAA;AACX,IAAA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAU,CAAA;AACV,IAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAW,CAAA;AACX,IAAA,GAAA,CAAA,GAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAa,CAAA;AACb,IAAA,GAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,KAAQ,CAAA;AACR,IAAA,GAAA,CAAA,GAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAS,CAAA;AACT,IAAA,GAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAc,CAAA;AACd,IAAA,GAAA,CAAA,GAAA,CAAA,SAAA,CAAA,GAAA,EAAA,CAAA,GAAA,SAAY,CAAA;AACZ,IAAA,GAAA,CAAA,GAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAe,CAAA;AACf,IAAA,GAAA,CAAA,GAAA,CAAA,WAAA,CAAA,GAAA,EAAA,CAAA,GAAA,WAAc,CAAA;AAChB,CAAC,EAbW,GAAG,KAAH,GAAG,GAad,EAAA,CAAA,CAAA,CAAA;AAEM,MAAM,oBAAoB,GAAG,CAAC,KAAU,KAC7C,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;AAEvH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DG;AAgCG,MAAO,wBAAyB,SAAQ,kBAAkB,CAAA;AAiN9D,IAAA,WAAA,CACmB,eAA6C,EAC7C,EAAc,EACZ,EAAqB,EACrB,mBAAwC,EAC1C,OAA+B,EAC/B,SAAoB,EACpB,cAAoC,EAAA;AAErD,QAAA,KAAK,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;QARd,IAAe,CAAA,eAAA,GAAf,eAAe,CAA8B;QAC7C,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;QACZ,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;QACrB,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QAC1C,IAAO,CAAA,OAAA,GAAP,OAAO,CAAwB;QAC/B,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;QACpB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAsB;AAvNvD;;AAEG;AACO,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAsB,CAAC;AAE/D;;;AAGG;QACM,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;AAEhC;;;AAGG;QACM,IAAmB,CAAA,mBAAA,GAAG,KAAK,CAAC;AAErC;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAE3B;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAE3B,IAAU,CAAA,UAAA,GAAuB,aAAa,CAAC;AAgB/C;;AAEG;QACM,IAAqB,CAAA,qBAAA,GAAG,mCAAmC,CAAC;AAErE;;AAEG;QACM,IAAkB,CAAA,kBAAA,GAAG,mBAAmB,CAAC;AA4BlD;;;AAGG;QACM,IAAI,CAAA,IAAA,GAAG,gBAAgB,CAAC;AAEjC;;;AAGG;QACM,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;AAOzB;;;AAGG;QACM,IAAQ,CAAA,QAAA,GAAG,MAAM,CAAC;AAE3B;;AAEG;QAEH,IAAS,CAAA,SAAA,GAAG,YAAY,CAAC;AAEzB;;;AAGG;QACM,IAAU,CAAA,UAAA,GAAiC,QAAQ,CAAC;AAc7D;;AAEG;QACM,IAAa,CAAA,aAAA,GAAG,CAAC,CAAC;QA0D3B,IAAY,CAAA,YAAA,GAAG,IAAI,eAAe,CAAqB,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACvE,IAAsB,CAAA,sBAAA,GAAyB,IAAI,CAAC;AAEpD,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,eAAe,CAAuB,IAAI,CAAC,CAAC;AAC5D,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,eAAe,CAAuB,IAAI,CAAC,CAAC;QAEjD,IAAuB,CAAA,uBAAA,GAAG,GAAG,CAAC;QAEZ,IAAQ,CAAA,QAAA,GAAG,wBAAwB,CAAC;AAiD/D;;;;;AAKG;AACH,QAAA,IAAA,CAAA,iBAAiB,GAAG,OAAO;AACzB,YAAA,IAAI,EAAE,IAAI;AACX,SAAA,CAAC,CAAC;AAkRH;;;;AAIwC;AAExC;;;;AAIG;AACH,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,OAAwB,KAA6B;AAC/D,YAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAE5B,YAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;AAC3B,gBAAA,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;AAClC,aAAA;YAED,IAAI,CAAC,KAAK,EAAE;;AAEV,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,mBAAmB,EAAE;AACnD,gBAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAuB,CAAC,CAAC;AACxD,aAAA;AAED,YAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAsB,CAAC,CAAC;AACzD,SAAC,CAAC;QAlVA,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;KAC1C;AA7LD,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,OAAO,QAAQ,CAAC,eAAe,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;KAChF;AAED;;AAEG;IACH,IACI,SAAS,CAAC,KAAyB,EAAA;AACrC,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACzB,SAAA;KACF;AAYD;;;AAGG;IACH,IACI,OAAO,CAAC,IAAwC,EAAA;QAClD,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KAChF;AAID;;;AAGG;IACH,IACI,OAAO,CAAC,IAAwC,EAAA;QAClD,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KAChF;AA8DD,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;YAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;AAE9C,YAAA,OAAO,IAAI,CAAC,cAAc,GAAG,GAAG,OAAO,CAAA,CAAA,EAAI,IAAI,CAAC,uBAAuB,IAAI,OAAO,CAAA,CAAE,GAAG,OAAO,CAAC;AAChG,SAAA;QAED,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;AAED;;AAEG;IACH,IACI,WAAW,CAAC,KAAyB,EAAA;AACvC,QAAA,IAAI,CAAC,YAAY,GAAG,OAAO,KAAK,KAAK,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;KAC9E;AAED;;;AAGG;IACH,IACI,kBAAkB,CAAC,KAAyB,EAAA;AAC9C,QAAA,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;AACjC,QAAA,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,KAAK,CAAC;KACzC;AAED,IAAA,IAAI,kBAAkB,GAAA;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;AAID;;AAEG;AACH,IAAA,IAAI,UAAU,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;KAC9C;AAgDD,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChC,QAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;QAE7B,IAAI,QAAQ,IAAI,QAAQ,CAAC,YAAY,KAAK,QAAQ,CAAC,aAAa,EAAE;YAChE,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,gBAAA,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;AAC1B,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;AACzB,aAAA;AACF,SAAA;KACF;;IAGD,eAAe,GAAA;AACb,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/F,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,eAAe,KAAf,IAAA,IAAA,eAAe,KAAf,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,eAAe,CAAE,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9G,UAAU,CAAC,MAAK;;AAEd,YAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AACjC,YAAA,IAAI,CAAC,SAAS,CAAC,sBAAsB,EAAE,CAAC;AACxC,YAAA,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;KACJ;IAYO,SAAS,CAAC,KAAoB,EAAE,KAAoB,EAAA;QAC1D,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QACrE,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QAErE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KACrC;AAED;;;;AAIyC;AAEzC;;;;;AAKG;AACH,IAAA,aAAa,CAAC,OAAyB,EAAA;;;;AAIrC,QAAA,MAAM,iBAAiB,GAAG,OAAO,CAAC,IAAI,KAAK,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;AAEtF,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;AAE1B,QAAA,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QAEpC,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE7D,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,EAAE,KAAK,WAAW,CAAC,OAAO,EAAE,EAAE;AAChE,YAAA,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACxC,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,kBAAkB,CAAC,OAAyB,EAAA;AAC1C,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;QAE1B,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEjF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAE9D,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;AACxD,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3E,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtB,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,uBAAuB,CAAC,OAAyB,EAAA;AAC/C,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;AAE1B,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAEvE,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC3E;AAED;;;;AAIG;AACH,IAAA,yBAAyB,CAAC,OAAyB,EAAA;AACjD,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;AAE1B,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAErE,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC3E;AAED;;AAEG;AACH,IAAA,YAAY,CAAC,IAAa,EAAA;QACxB,KAAK,CAAC,OAAO,EAAE,CAAC;AAEhB,QAAA,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAEvB,YAAA,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBACnD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAmB,CAAC;AACtE,aAAA;AACF,SAAA;KACF;AAED;;AAEG;AACH,IAAA,cAAc,CAAC,IAAa,EAAA;QAC1B,KAAK,CAAC,OAAO,EAAE,CAAC;AAEhB,QAAA,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;AAC7B,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AAC1B,SAAA;KACF;AAED;;AAEG;AACH,IAAA,oBAAoB,CAAC,KAAY,EAAA;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE;YACrC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAE3C,YAAA,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;AAC1B,SAAA;KACF;AAED;;AAEG;AACH,IAAA,sBAAsB,CAAC,KAAY,EAAA;QACjC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;YACvC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAE7C,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;AAC5B,SAAA;KACF;AAED;;;;;AAKG;AACH,IAAA,gBAAgB,CAAC,UAAmB,EAAA;AAClC,QAAA,IAAI,UAAU,EAAE;AACd,YAAA,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;AAC1B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;AACzB,SAAA;AACD,QAAA,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;KACpC;AAED;;;;AAIG;AACH,IAAA,aAAa,CAAC,MAAkB,EAAA;AAC9B,QAAA,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;AAClF,YAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrB,SAAA;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE;gBAC1D,IAAI,CAAC,eAAe,EAAE,CAAC;AACxB,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,aAAa,EAAE,CAAC;AACtB,aAAA;AACF,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,MAAM,CAAC,MAAmB,EAAA;AACxB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;AAED;;;;;AAKG;IACH,QAAQ,GAAA;QACN,MAAM,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC5D,MAAM,WAAW,GAAG,sBAAsB,KAAA,IAAA,IAAtB,sBAAsB,KAAtB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAsB,CAAE,IAAI,CAAC;AACjD,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;AACjE,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAChD,YAAA,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC7C,SAAA;aAAM,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAClF,YAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC9C,SAAA;KACF;AAED;;AAEG;IACH,UAAU,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE;AACzF,YAAA,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC/C,SAAA;KACF;AAED;;;;AAIG;AACH,IAAA,wBAAwB,CAAC,IAAa,EAAA;AACpC,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AAE9C,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE1E,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;AAED;;;;AAIG;AACH,IAAA,sBAAsB,CAAC,IAAa,EAAA;AAClC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AAEhD,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE1E,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;AAED;;;;AAIG;AACH,IAAA,iBAAiB,CAAC,IAAa,EAAA;AAC7B,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;AAC1D,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,SAAA;AAAM,aAAA,IACL,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;AACzB,YAAA,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACxB,IAAI;aACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,EACjF;AACA,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9C,UAAU,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,CAAC;AAC7C,SAAA;AAAM,aAAA;;AAEL,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxB,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,SAAA;AAED,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE1E,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AAED;;;;;AAKG;AACH,IAAA,UAAU,CAAC,KAA0E,EAAA;QACnF,IAAI,KAAK,CAAC,IAAI,EAAE;AACd,YAAA,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC,IAAI,CAAC;AAC1C,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AAC5E,SAAA;KACF;AAgCD;;;;;AAKG;;AAGH,IAAA,UAAU,CAAC,KAAqC,EAAA;QAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;AACrD,YAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;AACnE,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,oBAAoB,CAAC,KAAK,CAAC,EAAE;AAC/B,gBAAA,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;AAC9D,oBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACzD,iBAAA;AAAM,qBAAA;oBACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAW,CAAC,CAAC;AACxC,iBAAA;AAED,gBAAA,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE;AAC1D,oBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AACrD,iBAAA;AAAM,qBAAA;oBACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAS,CAAC,CAAC;AACpC,iBAAA;AACF,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,aAAA;YAED,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,IAAI,CAAC,aAAa,EAAE,CAAC;AACtB,aAAA;iBAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE;AACnC,gBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;AAC5G,gBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3G,aAAA;AACF,SAAA;KACF;AAED;;;;AAIoC;AAE5B,IAAA,eAAe,CAAC,IAAwB,EAAA;AAC9C,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7B;IAEO,eAAe,GAAA;QACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC3C,QAAA,IAAI,QAAQ,EAAE;AACZ,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1E,IAAI,CAAC,aAAa,EAAE,CAAC;AACtB,SAAA;KACF;IAEO,eAAe,GAAA;;QACrB,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,sBAAsB,EAAE,CAAC;AAClD,aAAA;YACD,IAAI,CAAC,MAAM,EAAE,CAAC;AACf,SAAA;QAED,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,YAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;AACf,SAAA;;QAGD,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC9B,SAAA;QACD,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC5B,SAAA;KACF;IAEO,YAAY,CAAC,IAAY,EAAE,EAAU,EAAA;AAC3C,QAAA,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;AACrD,YAAA,OAAO,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;AACpC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;AAEO,IAAA,kBAAkB,CAAC,KAAoB,EAAA;AAC7C,QAAA,MAAM,IAAI,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;;;;QAIrE,MAAM,aAAa,GAAG,6EAA6E,CAAC;AAEpG,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;KACtE;AAED;;AAEG;AACH,IAAA,mBAAmB,CAAC,KAAiC,EAAA;QACnD,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC,EAAE;YAC7F,IAAI,CAAC,eAAe,EAAE,CAAC;AACxB,SAAA;KACF;AAED;;AAEG;IACH,kBAAkB,GAAA;QAChB,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE;YAChD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7G,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACnH,SAAA;KACF;;AAGO,IAAA,iBAAiB,CAAC,KAAqB,EAAA;QAC7C,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI,YAAY,GAAG,IAAI,CAAC;QACxB,IAAI,aAAa,GAAG,IAAI,CAAC;AAEzB,QAAA,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;AAChC,YAAA,OAAO,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;AACpC,SAAA;AACD,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;AAClD,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;AAC7G,YAAA,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAC3B,SAAA;QAED,IAAI,KAAK,CAAC,IAAI,EAAE;YACd,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACpD,SAAA;QACD,IAAI,KAAK,CAAC,EAAE,EAAE;YACZ,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAChD,SAAA;AACD,QAAA,IAAI,CAAC,YAAY,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE;AAC1D,YAAA,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AACzD,SAAA;AAED,QAAA,OAAO,UAAU,IAAI,YAAY,IAAI,aAAa,CAAC;KACpD;IAEO,aAAa,GAAA;;AACnB,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE;AACxD,YAAA,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7E,YAAA,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;YAEzE,IAAI,CAAC,SAAS,CAAC,QAAQ,CACrB,CAAG,EAAA,aAAa,KAAK,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,aAAa,IAAI,IAAI,CAAC,uBAAuB,CACnG,CAAA,EAAA,WAAW,KAAK,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,WACnD,CAAE,CAAA,CACH,CAAC;AACH,SAAA;AAAM,aAAA;;AAEL,YAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,MAAA,IAAI,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,EAAE;YACnC,IAAI,CAAC,SAAS,EAAE,CAAC;AAClB,SAAA;KACF;AAEO,IAAA,eAAe,CAAC,UAAmC,EAAA;AACzD,QAAA,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,EAAmB,CAAC;KACjG;IAEO,gBAAgB,CAAC,IAA0B,EAAE,EAAwB,EAAA;QAC3E,IAAI,CAAC,QAAQ,CAAC;AACZ,YAAA,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI;AAC9C,YAAA,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI;AACzC,SAAA,CAAC,CAAC;KACJ;IAEO,UAAU,GAAA;;AAChB,QAAA,IAAI,MAAA,IAAI,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,EAAE;YACrC,MAAM,SAAS,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,CAAC,EAAqB,CAAC,CAAC;AAE3E,YAAA,IAAI,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE;AACnC,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;AACF,SAAA;AAED,QAAA,OAAO,KAAK,CAAC;KACd;AAEO,IAAA,oBAAoB,CAAC,MAA0B,EAAA;;QACrD,IAAI,SAAS,GAAyB,IAAI,CAAC;QAE3C,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAmB,CAAC;AACxD,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,mBAAmB,KAAI,MAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAA,EAAE;AACtE,YAAA,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAmB,CAAC;AACxD,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,mBAAmB,KAAI,MAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAA,EAAE;AACpE,YAAA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAmB,CAAC;AACtD,SAAA;QAED,IAAI,CAAC,CAAC,SAAS,EAAE;AACf,YAAA,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,SAAA;KACF;;sHA3vBU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAD,4BAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAE,IAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,EA5BxB,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,cAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,WAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,YAAA,EAAA,eAAA,EAAA,EAAA,EAAA,SAAA,EAAA;QACT,QAAQ;QACR,4BAA4B;AAC5B,QAAA;AACE,YAAA,OAAO,EAAE,cAAc;AACvB,YAAA,QAAQ,EAAE,oBAAoB;AAC/B,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,QAAQ,EAAE,wBAAwB;AACnC,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,sBAAsB;AAC/B,YAAA,WAAW,EAAE,4BAA4B;AAC1C,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,wBAAwB,CAAC;AACvD,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,aAAa;AACtB,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,wBAAwB,CAAC;AACvD,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,YAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,YAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,cAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,sBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,sBAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECvJH,i0SAqQA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,yCAAA,EAAA,QAAA,EAAA,4CAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,wCAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,EAAA,UAAA,EAAA,QAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,SAAA,EAAA,SAAA,EAAA,YAAA,EAAA,aAAA,EAAA,WAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,UAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FD3Ga,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBA/BpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,wBAAwB;AAClC,oBAAA,WAAW,EAAE,mCAAmC;AAChD,oBAAA,SAAS,EAAE;wBACT,QAAQ;wBACR,4BAA4B;AAC5B,wBAAA;AACE,4BAAA,OAAO,EAAE,cAAc;AACvB,4BAAA,QAAQ,EAAE,oBAAoB;AAC/B,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,QAAQ,EAAE,wBAAwB;AACnC,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,sBAAsB;AAC/B,4BAAA,WAAW,EAAE,4BAA4B;AAC1C,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAE,UAAU,CAAC,8BAA8B,CAAC;AACvD,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,aAAa;AACtB,4BAAA,WAAW,EAAE,UAAU,CAAC,8BAA8B,CAAC;AACvD,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA,CAAA;qSAKW,WAAW,EAAA,CAAA;sBAApB,MAAM;gBAME,cAAc,EAAA,CAAA;sBAAtB,KAAK;gBAMG,mBAAmB,EAAA,CAAA;sBAA3B,KAAK;gBAMG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAMG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAYF,SAAS,EAAA,CAAA;sBADZ,KAAK;gBAUG,qBAAqB,EAAA,CAAA;sBAA7B,KAAK;gBAKG,kBAAkB,EAAA,CAAA;sBAA1B,KAAK;gBAOF,OAAO,EAAA,CAAA;sBADV,KAAK;gBAYF,OAAO,EAAA,CAAA;sBADV,KAAK;gBASG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAMG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAMG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAKG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAMG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAMN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAOG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAKG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAOG,cAAc,EAAA,CAAA;sBAAtB,KAAK;gBAKG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAkBF,WAAW,EAAA,CAAA;sBADd,KAAK;uBAAC,aAAa,CAAA;gBAUhB,kBAAkB,EAAA,CAAA;sBADrB,KAAK;uBAAC,oBAAoB,CAAA;gBAmBF,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;gBACI,YAAY,EAAA,CAAA;sBAAtC,SAAS;uBAAC,cAAc,CAAA;gBACK,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACO,oBAAoB,EAAA,CAAA;sBAAtD,SAAS;uBAAC,sBAAsB,CAAA;gBACD,iBAAiB,EAAA,CAAA;sBAAhD,SAAS;uBAAC,mBAAmB,CAAA;gBACC,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;gBACI,kBAAkB,EAAA,CAAA;sBAAlD,SAAS;uBAAC,oBAAoB,CAAA;gBAeJ,QAAQ,EAAA,CAAA;sBAAlC,WAAW;uBAAC,YAAY,CAAA;;;MEjVd,yBAAyB,CAAA;AAKpC,IAAA,WAAA,GAAA;AAJQ,QAAA,IAAA,CAAA,QAAQ,GAAW,CAAC,MAAM,CAAC,SAAS,CAAC;AAE7C,QAAA,IAAA,CAAA,iBAAiB,GAAe,MAAK,GAAG,CAAC;KAEzB;IAEhB,IACI,OAAO,CAAC,IAAwC,EAAA;QAClD,IAAI,CAAC,IAAI,EAAE;AACT,YAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;AACnC,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,OAAO,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1G,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;AACnC,SAAA;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;AAED,IAAA,yBAAyB,CAAC,EAAc,EAAA;AACtC,QAAA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC7B;AAED,IAAA,QAAQ,CAAC,OAAwB,EAAA;QAC/B,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;QACvF,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QAED,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,QAAQ;AAC/C;gBACE,IAAI;AACN,cAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC;KACnC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;KAC1B;;uHArCU,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,yBAAyB,EARzB,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,aAAa;AACtB,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,yBAAyB,CAAC;AACzD,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAEU,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAXrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;;AAET,oBAAA,QAAQ,EAAE,iCAAiC;AAC3C,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,aAAa;AACtB,4BAAA,KAAK,EAAE,IAAI;AACX,4BAAA,WAAW,EAAE,UAAU,CAAC,+BAA+B,CAAC;AACzD,yBAAA;AACF,qBAAA;AACF,iBAAA,CAAA;0EASK,OAAO,EAAA,CAAA;sBADV,KAAK;;;MCPK,yBAAyB,CAAA;AAKpC,IAAA,WAAA,GAAA;AAJQ,QAAA,IAAA,CAAA,QAAQ,GAAW,MAAM,CAAC,SAAS,CAAC;AAE5C,QAAA,IAAA,CAAA,iBAAiB,GAAe,MAAK,GAAG,CAAC;KAEzB;IAEhB,IACI,OAAO,CAAC,IAAwC,EAAA;QAClD,IAAI,CAAC,IAAI,EAAE;AACT,YAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;AAClC,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,OAAO,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1G,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;AACnC,SAAA;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;AAED,IAAA,yBAAyB,CAAC,EAAc,EAAA;AACtC,QAAA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC7B;AAED,IAAA,QAAQ,CAAC,OAAwB,EAAA;QAC/B,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC;QACnF,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;QAED,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,QAAQ;AAC/C;gBACE,IAAI;AACN,cAAE,EAAE,sBAAsB,EAAE,IAAI,EAAE,CAAC;KACtC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;KAC1B;;uHArCU,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,yBAAyB,EARzB,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,aAAa;AACtB,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,yBAAyB,CAAC;AACzD,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;4FAEU,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAXrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;;AAET,oBAAA,QAAQ,EAAE,iCAAiC;AAC3C,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,aAAa;AACtB,4BAAA,KAAK,EAAE,IAAI;AACX,4BAAA,WAAW,EAAE,UAAU,CAAC,+BAA+B,CAAC;AACzD,yBAAA;AACF,qBAAA;AACF,iBAAA,CAAA;0EASK,OAAO,EAAA,CAAA;sBADV,KAAK;;;MCyBK,qBAAqB,CAAA;;mHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,iBAlB9B,wBAAwB;QACxB,yBAAyB;QACzB,yBAAyB;QACzB,yCAAyC;AACzC,QAAA,wCAAwC,aAbxC,YAAY;QACZ,mBAAmB;QACnB,WAAW;QACX,mBAAmB;QACnB,YAAY;QACZ,UAAU;AACV,QAAA,iBAAiB,aAUjB,wBAAwB;QACxB,yBAAyB;QACzB,yBAAyB;AAEzB;;;AAGI;QACJ,WAAW,CAAA,EAAA,CAAA,CAAA;AAGF,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EA5BvB,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,mBAAmB;YACnB,WAAW;YACX,mBAAmB;YACnB,YAAY;YACZ,UAAU;YACV,iBAAiB;AAClB,SAAA;AAaC;;;AAGI;QACJ,WAAW,CAAA,EAAA,CAAA,CAAA;4FAGF,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBA7BjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,mBAAmB;wBACnB,WAAW;wBACX,mBAAmB;wBACnB,YAAY;wBACZ,UAAU;wBACV,iBAAiB;AAClB,qBAAA;AACD,oBAAA,YAAY,EAAE;wBACZ,wBAAwB;wBACxB,yBAAyB;wBACzB,yBAAyB;wBACzB,yCAAyC;wBACzC,wCAAwC;AACzC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,wBAAwB;wBACxB,yBAAyB;wBACzB,yBAAyB;AAEzB;;;AAGI;wBACJ,WAAW;AACZ,qBAAA;AACF,iBAAA,CAAA;;;AC9CD;;AAEG;;;;"}