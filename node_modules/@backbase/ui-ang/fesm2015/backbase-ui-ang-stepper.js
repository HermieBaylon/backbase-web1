import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Component, ContentChildren, Input, Directive, EventEmitter, TemplateRef, ContentChild, Output, NgModule } from '@angular/core';
import * as i1 from '@backbase/ui-ang/icon';
import { IconModule } from '@backbase/ui-ang/icon';

/**
 * @name StepperStepComponent
 *
 * @description
 * Component that represents a single step that is a part of the stepper component.
 */
class StepperStepComponent {
    constructor() {
        /**
         * Marks step as current
         */
        this.isCurrent = false;
        /**
         * Marks step as checked
         */
        this.isChecked = false;
        /**
         * Marks step as active
         */
        this.isActive = false;
    }
    ngAfterContentChecked() {
        var _a;
        // TODO: workaround for angular bug https://github.com/angular/angular/issues/10098#issuecomment-235157642
        // an infinite loop takes place in banking schematics
        // it requires more investigation to see the root cause
        this.steps = (_a = this._steps) === null || _a === void 0 ? void 0 : _a.filter((item) => item !== this);
    }
}
StepperStepComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StepperStepComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
StepperStepComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StepperStepComponent, selector: "bb-stepper-step-ui", inputs: { label: "label", stateLabel: "stateLabel", data: "data", ariaLabel: "ariaLabel", isCurrent: "isCurrent", isChecked: "isChecked", isActive: "isActive" }, queries: [{ propertyName: "_steps", predicate: StepperStepComponent }], ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StepperStepComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-stepper-step-ui',
                    template: '',
                }]
        }], propDecorators: { _steps: [{
                type: ContentChildren,
                args: [StepperStepComponent]
            }], label: [{
                type: Input
            }], stateLabel: [{
                type: Input
            }], data: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], isCurrent: [{
                type: Input
            }], isChecked: [{
                type: Input
            }], isActive: [{
                type: Input
            }] } });

class CustomStepperStepDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
}
CustomStepperStepDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomStepperStepDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
CustomStepperStepDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: CustomStepperStepDirective, selector: "ng-template[bbCustomStepperStep]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CustomStepperStepDirective, decorators: [{
            type: Directive,
            args: [{ selector: 'ng-template[bbCustomStepperStep]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });
/**
 * @name StepperComponent
 *
 * @description
 * Component that represents a navigation stepper.
 */
class StepperComponent {
    constructor() {
        /**
         * Output of clicked link
         */
        this.select = new EventEmitter();
    }
    /**
     * Returns the current selected step
     */
    get currentStep() {
        return this.steps && this.steps.find((step) => step.isCurrent);
    }
    /**
     * Returns the current selected sub-step
     */
    hasCurrentChildStep({ steps }) {
        return steps === null || steps === void 0 ? void 0 : steps.find(({ isCurrent }) => isCurrent);
    }
    onClickHandler(data) {
        this.select.emit(data);
    }
}
StepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StepperComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
StepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StepperComponent, selector: "bb-stepper-ui", outputs: { select: "select" }, queries: [{ propertyName: "stepperStepTemplate", first: true, predicate: CustomStepperStepDirective, descendants: true, read: TemplateRef, static: true }, { propertyName: "steps", predicate: StepperStepComponent }], ngImport: i0, template: "<div [class.bb-stepper__label]=\"currentStep?.label\" class=\"bb-stepper\">\n  <ng-container *ngFor=\"let step of steps; last as isLast; index as i\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        stepperStepTemplate || defaultStepperStepTemplate;\n        context: {\n          $implicit: step,\n          number: i + 1,\n          isLast: isLast,\n          isChild: false\n        }\n      \"\n    >\n    </ng-container>\n\n    <div *ngIf=\"!isLast\" aria-hidden=\"true\" class=\"bb-stepper__separator\"></div>\n  </ng-container>\n</div>\n\n<ng-template #defaultStepperStepTemplate let-step let-number=\"number\" let-isLast=\"isLast\" let-isChild=\"isChild\">\n  <div\n    [class.bb-step--active]=\"step.isActive\"\n    [class.bb-step--current]=\"step.isCurrent && (isChild || !hasCurrentChildStep(step))\"\n    [class.bb-step--child]=\"isChild\"\n    [class.bb-step--last]=\"isLast\"\n    [class.bb-step--container]=\"step.steps?.length\"\n    [attr.aria-label]=\"step.ariaLabel\"\n    [attr.aria-current]=\"step.isActive ? 'step' : null\"\n    class=\"bb-step\"\n  >\n    <div class=\"bb-step__icon\">\n      <ng-container *ngIf=\"step.isCurrent || !step.isChecked; else checkIcon\">\n        {{ number }}\n      </ng-container>\n    </div>\n    <div *ngIf=\"step.label\" [title]=\"step.label\" [class.text-support]=\"!step.isActive\" class=\"bb-step__label\">\n      <a *ngIf=\"step.data && !step.isCurrent\" (click)=\"onClickHandler(step.data)\" href=\"javascript:void(0)\">\n        <ng-container *ngTemplateOutlet=\"simpleStep; context: { $implicit: step }\"></ng-container>\n      </a>\n      <ng-container *ngIf=\"!step.data || step.isCurrent\">\n        <ng-container *ngTemplateOutlet=\"simpleStep; context: { $implicit: step }\"></ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <ng-container *ngFor=\"let subStep of step.steps; last as isLastSubStep\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        defaultStepperStepTemplate;\n        context: {\n          $implicit: subStep,\n          isChild: true,\n          isLast: !isLast && isLastSubStep\n        }\n      \"\n    >\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template #checkIcon>\n  <bb-icon-ui name=\"check\" size=\"sm\"></bb-icon-ui>\n</ng-template>\n\n<ng-template #simpleStep let-step>\n  {{ step.label }}\n  <span *ngIf=\"!step.steps?.length\" [title]=\"step.stateLabel\" class=\"bb-step__state-label\">{{ step.stateLabel }}</span>\n</ng-template>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StepperComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-stepper-ui',
                    templateUrl: './stepper.component.html',
                }]
        }], propDecorators: { steps: [{
                type: ContentChildren,
                args: [StepperStepComponent]
            }], stepperStepTemplate: [{
                type: ContentChild,
                args: [CustomStepperStepDirective, { read: TemplateRef, static: true }]
            }], select: [{
                type: Output
            }] } });

class StepperModule {
}
StepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StepperModule, declarations: [StepperComponent, StepperStepComponent, CustomStepperStepDirective], imports: [CommonModule, IconModule], exports: [StepperComponent, StepperStepComponent, CustomStepperStepDirective] });
StepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StepperModule, imports: [[CommonModule, IconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: StepperModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, IconModule],
                    declarations: [StepperComponent, StepperStepComponent, CustomStepperStepDirective],
                    exports: [StepperComponent, StepperStepComponent, CustomStepperStepDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { CustomStepperStepDirective, StepperComponent, StepperModule, StepperStepComponent };
//# sourceMappingURL=backbase-ui-ang-stepper.js.map
