import * as i0 from '@angular/core';
import { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';
import * as i4 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@ng-bootstrap/ng-bootstrap';
import { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';
import * as i3 from '@backbase/ui-ang/icon';
import { IconModule } from '@backbase/ui-ang/icon';
import * as i1 from '@backbase/ui-ang/services';

/**
 * @name AlertComponent
 *
 * @description
 * Component that displays an alert.
 *
 * @a11y For Alert component it's not required to pass any options for accessibility.
 * It internally handles accessibility for title and message:
 *  - title is linked with aria-labelledby.
 *  - message is linked with aria-describedby.
 */
class AlertComponent {
    constructor(domAttrService, changeDetector) {
        this.domAttrService = domAttrService;
        this.changeDetector = changeDetector;
        /**
         * The type modifier for the alert. Defaults to 'error'.
         */
        this.modifier = 'error';
        /**
         * Whether the alert can be dismissed. Defaults to false.
         */
        this.dismissible = false;
        /**
         * The callback fired upon closing the alert.
         */
        this.close = new EventEmitter();
        this.bootstrapTypes = {
            warning: 'warning',
            error: 'danger',
            success: 'success',
            info: 'info',
        };
        this.alertTitleId = this.domAttrService.generateId();
        this.alertDescriptionId = this.domAttrService.generateId();
        this.isOpen = true;
        this.isContentProvided = true;
    }
    ngOnInit() {
        if (typeof this.title === 'undefined') {
            throw new Error(`"title" input is required in "${this.constructor.name}"`);
        }
    }
    ngAfterViewInit() {
        var _a;
        if (!this.message) {
            this.isContentProvided = Boolean((_a = this.contentWrapper) === null || _a === void 0 ? void 0 : _a.nativeElement.innerText);
            if (!this.isContentProvided) {
                this.alertDescriptionId = null;
                this.changeDetector.detectChanges();
            }
        }
        else {
            this.isContentProvided = false;
        }
    }
    getAlertType() {
        return this.bootstrapTypes[this.modifier];
    }
    closeAlert() {
        this.close.emit();
    }
}
AlertComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AlertComponent, deps: [{ token: i1.DomAttributesService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
AlertComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AlertComponent, selector: "bb-alert-ui", inputs: { modifier: "modifier", dismissible: "dismissible", title: "title", message: "message" }, outputs: { close: "close" }, viewQueries: [{ propertyName: "content", first: true, predicate: ["content"], descendants: true, static: true }, { propertyName: "contentWrapper", first: true, predicate: ["contentWrapper"], descendants: true }], ngImport: i0, template: "<ngb-alert\n  [attr.aria-describedby]=\"alertDescriptionId\"\n  [attr.aria-labelledby]=\"alertTitleId\"\n  [attr.role]=\"dismissible ? 'alertdialog' : 'alert'\"\n  [attr.aria-live]=\"'assertive'\"\n  [dismissible]=\"dismissible\"\n  [type]=\"getAlertType()\"\n  (close)=\"isOpen = false\"\n  *ngIf=\"isOpen\"\n  (closed)=\"closeAlert()\"\n>\n  <div class=\"alert-body\">\n    <bb-icon-ui\n      class=\"alert-icon\"\n      [name]=\"modifier\"\n      [color]=\"getAlertType()\"\n      [attr.data-role]=\"'alert-icon'\"\n    ></bb-icon-ui>\n    <div class=\"alert-content\">\n      <strong\n        [class.alert-heading]=\"title\"\n        [id]=\"alertTitleId\"\n        role=\"heading\"\n        aria-level=\"2\"\n        [attr.data-role]=\"'alert-title'\"\n        >{{ title }}</strong\n      >\n      <div\n        *ngIf=\"message; else content\"\n        class=\"alert-description\"\n        [id]=\"alertDescriptionId\"\n        [attr.data-role]=\"'alert-message'\"\n      >\n        {{ message }}\n      </div>\n    </div>\n  </div>\n</ngb-alert>\n\n<ng-template #content>\n  <div *ngIf=\"isContentProvided\" #contentWrapper [attr.data-role]=\"'alert-content'\" [id]=\"alertDescriptionId\">\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n", components: [{ type: i2.NgbAlert, selector: "ngb-alert", inputs: ["dismissible", "type", "animation"], outputs: ["closed"], exportAs: ["ngbAlert"] }, { type: i3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AlertComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-alert-ui',
                    templateUrl: './alert.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.DomAttributesService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { modifier: [{
                type: Input
            }], dismissible: [{
                type: Input
            }], title: [{
                type: Input
            }], message: [{
                type: Input
            }], close: [{
                type: Output
            }], content: [{
                type: ViewChild,
                args: ['content', { static: true }]
            }], contentWrapper: [{
                type: ViewChild,
                args: ['contentWrapper']
            }] } });

class AlertModule {
}
AlertModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AlertModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AlertModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AlertModule, declarations: [AlertComponent], imports: [CommonModule, NgbAlertModule, IconModule], exports: [AlertComponent] });
AlertModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AlertModule, imports: [[CommonModule, NgbAlertModule, IconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: AlertModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, NgbAlertModule, IconModule],
                    declarations: [AlertComponent],
                    exports: [AlertComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { AlertComponent, AlertModule };
//# sourceMappingURL=backbase-ui-ang-alert.js.map
