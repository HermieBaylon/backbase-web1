{"version":3,"file":"backbase-ui-ang-load-button.js","sources":["../../../../libs/ui-ang/load-button/load-button.component.ts","../../../../libs/ui-ang/load-button/load-button.component.html","../../../../libs/ui-ang/load-button/load-button.module.ts","../../../../libs/ui-ang/load-button/backbase-ui-ang-load-button.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';\n\nimport { ButtonComponent } from '@backbase/ui-ang/button';\n\nexport interface LoadMoreParams {\n  from: number;\n}\n\n/**\n * @name LoadButtonComponent\n *\n * @description\n * Component that displays a button with integrated loading indicator.\n * The component counts the next page(from) param. Set enable/disable and loading's delay states\n * of component depend on incoming parametrs.\n */\n@Component({\n  selector: 'bb-load-button-ui',\n  templateUrl: './load-button.component.html',\n})\nexport class LoadButtonComponent extends ButtonComponent implements AfterViewInit {\n  /**\n   * This Boolean attribute indicates if loading indicator should be shown instead of button content\n   */\n  @Input() isLoading = false;\n  /**\n   * The page to list from\n   */\n  @Input() from = 0;\n  /**\n   * The number of results per page\n   */\n  @Input() size = 0;\n  /**\n   * The type of the button\n   */\n  @Input() circle = false;\n  /**\n   * The total item count\n   */\n  @Input() totalCount = 0;\n  /**\n   * This emits new load more params to parent component\n   */\n  @Output() paramChange: EventEmitter<LoadMoreParams> = new EventEmitter();\n\n  @ViewChild('button', { static: true }) buttonComponent: ElementRef | undefined;\n\n  constructor(private readonly elementRef: ElementRef, renderer: Renderer2) {\n    super(elementRef, renderer);\n  }\n\n  ngAfterViewInit() {\n    this.moveAriaAttributes(this.elementRef.nativeElement, this.buttonComponent && this.buttonComponent.nativeElement);\n  }\n\n  isLoadMore() {\n    return this.size + this.totalCount + this.from > 0;\n  }\n\n  hasMore(): boolean {\n    return this.from * this.size + this.size < this.totalCount;\n  }\n\n  onLoadMore(): void {\n    if (this.hasMore() && !this.isLoading) {\n      this.paramChange.emit({\n        from: this.from + 1,\n      });\n    }\n  }\n}\n","<button\n  class=\"bb-load-button\"\n  #button\n  bbButton\n  [color]=\"color\"\n  [buttonSize]=\"buttonSize\"\n  [autofocus]=\"autofocus\"\n  [type]=\"type\"\n  [block]=\"block\"\n  [disabled]=\"disabled || (isLoadMore() && !isLoading ? !hasMore() : false)\"\n  (click)=\"isLoadMore() ? onLoadMore() : null\"\n  [circle]=\"circle\"\n>\n  <span [ngClass]=\"{ invisible: isLoading }\" class=\"bb-load-button__content\">\n    <ng-content></ng-content>\n  </span>\n  <bb-loading-indicator-ui\n    *ngIf=\"isLoading\"\n    class=\"bb-load-button__loading-indicator\"\n    loaderSize=\"sm\"\n  ></bb-loading-indicator-ui>\n</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\n\nimport { LoadButtonComponent } from './load-button.component';\n\n@NgModule({\n  imports: [CommonModule, ButtonModule, LoadingIndicatorModule],\n  declarations: [LoadButtonComponent],\n  exports: [LoadButtonComponent],\n})\nexport class LoadButtonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}