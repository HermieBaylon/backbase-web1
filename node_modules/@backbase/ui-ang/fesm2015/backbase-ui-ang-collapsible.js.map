{"version":3,"file":"backbase-ui-ang-collapsible.js","sources":["../../../../libs/ui-ang/collapsible/collapsible.component.ts","../../../../libs/ui-ang/collapsible/collapsible.component.html","../../../../libs/ui-ang/collapsible/collapsible.module.ts","../../../../libs/ui-ang/collapsible/backbase-ui-ang-collapsible.ts"],"sourcesContent":["import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n} from '@angular/core';\nimport { CollapsibleAccordionComponent, ICollapsible } from '@backbase/ui-ang/collapsible-accordion';\n\n@Directive({ selector: 'ng-template[bbCollapsibleHeader]' })\nexport class CollapsibleHeaderDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({ selector: 'ng-template[bbCollapsibleBody]' })\nexport class CollapsibleBodyDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * @name CollapsibleComponent\n *\n * @description\n * Provides an expandable details-summary/body-header view.\n */\n@Component({\n  selector: 'bb-collapsible-ui',\n  templateUrl: './collapsible.component.html',\n})\nexport class CollapsibleComponent implements ICollapsible, OnDestroy {\n  @ContentChild(CollapsibleHeaderDirective, { read: TemplateRef, static: true })\n  collapsibleHeader: CollapsibleHeaderDirective | undefined;\n  @ContentChild(CollapsibleBodyDirective, { read: TemplateRef, static: true })\n  collapsibleBody: CollapsibleBodyDirective | undefined;\n\n  /**\n   * If true, it will use the ngIf approach to create the content\n   * which is less performant but removes the extra div.\n   * In case of styling issues, set this to true.\n   */\n  @Input() recreateBodyContent = false;\n  /**\n   * Whether chevron should be displayed. Defaults to true.\n   */\n  @Input() hasChevron = true;\n\n  private open = false;\n\n  /**\n   * Toggles the content.\n   */\n  @Input()\n  set isOpen(v: boolean) {\n    this.open = v;\n    this.isOpenChange.emit(v);\n    this.headerContext.isOpen = v;\n  }\n  get isOpen() {\n    return this.open;\n  }\n\n  /**\n   * Emits the toggle content event.\n   */\n  @Output() isOpenChange = new EventEmitter<boolean>();\n\n  headerContext: {\n    toggle: () => void;\n    isOpen: boolean;\n  };\n\n  toggle = () => {\n    this.isOpen = !this.isOpen;\n  };\n\n  //TODO: review approach with such dependency on Accordion\n  constructor(\n    @Optional()\n    @Host()\n    private readonly bbCollapsibleAccordion: CollapsibleAccordionComponent,\n  ) {\n    if (this.bbCollapsibleAccordion) {\n      this.bbCollapsibleAccordion.registerNestedPanel(this);\n    }\n\n    this.headerContext = {\n      toggle: this.toggle,\n      isOpen: this.isOpen,\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.bbCollapsibleAccordion) {\n      this.bbCollapsibleAccordion.unregisterNestedPanel(this);\n    }\n  }\n}\n","<ng-container *ngIf=\"collapsibleHeader\">\n  <ng-container *ngTemplateOutlet=\"collapsibleHeader; context: headerContext\"> </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"collapsibleBody && !recreateBodyContent\">\n  <div [ngbCollapse]=\"!isOpen\">\n    <ng-container *ngTemplateOutlet=\"collapsibleBody; context: headerContext\"> </ng-container>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"collapsibleBody && recreateBodyContent\">\n  <ng-container *ngIf=\"!isOpen\">\n    <ng-container *ngTemplateOutlet=\"collapsibleBody; context: headerContext\"> </ng-container>\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CollapsibleBodyDirective, CollapsibleComponent, CollapsibleHeaderDirective } from './collapsible.component';\n\n@NgModule({\n  imports: [CommonModule, NgbCollapseModule],\n  declarations: [CollapsibleComponent, CollapsibleHeaderDirective, CollapsibleBodyDirective],\n  exports: [CollapsibleComponent, CollapsibleHeaderDirective, CollapsibleBodyDirective],\n})\nexport class CollapsibleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}