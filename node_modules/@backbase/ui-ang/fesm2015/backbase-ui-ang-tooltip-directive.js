import * as i0 from '@angular/core';
import { Directive, Inject, Input, NgModule } from '@angular/core';
import * as i1 from '@ng-bootstrap/ng-bootstrap';
import { NgbTooltip, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';
import { DOCUMENT, CommonModule } from '@angular/common';

/**
 * @name TooltipDirective
 *
 * @description
 * Directive that displays a tooltip.
 */
class TooltipDirective extends NgbTooltip {
    // FIXME: this interface used to come from ng-bootstrap/utils
    // However this is internal api, so we can't rely on it.
    // There should be a proper solution for that issue, better then redeclaring the class,
    // so in fact this component is broken at the moment
    // @see https://github.com/ng-bootstrap/ng-bootstrap/issues/1043
    constructor(el, renderer2, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, ref, appref) {
        super(el, renderer2, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, ref, appref);
        this.el = el;
        /**
         * Specifies the events that should trigger the tooltip (space separated strings). Defaults to 'click'.
         *
         * This component extends `NgbTooltip`.
         * All available properties of `NgbTooltip` can be used with this component as well.
         * More information about it and more examples can be found in
         * [NgBootstrap documentation](https://ng-bootstrap.github.io/#/components/tooltip/api).
         */
        this.triggers = 'click';
    }
    /**
     * Content to be displayed as tooltip. If falsy, the tooltip won't open.
     */
    set bbTooltip(value) {
        this.ngbTooltip = value;
    }
    /**
     * Event handler to set aria-expanded on opening the tooltip
     */
    open(context) {
        super.open(context);
        this.el.nativeElement.parentElement.setAttribute('aria-expanded', true);
    }
    /**
     * Event handler to set aria-expanded on closing the tooltip
     */
    close() {
        super.close();
        this.el.nativeElement.parentElement.setAttribute('aria-expanded', false);
    }
}
TooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: i1.NgbTooltipConfig }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Directive });
TooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: TooltipDirective, selector: "[bbTooltip]", inputs: { bbTooltip: "bbTooltip", triggers: "triggers" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbTooltip]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: i1.NgbTooltipConfig }, { type: i0.NgZone }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }]; }, propDecorators: { bbTooltip: [{
                type: Input
            }], triggers: [{
                type: Input
            }] } });

class TooltipModule {
}
TooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipModule, declarations: [TooltipDirective], imports: [CommonModule, NgbTooltipModule], exports: [TooltipDirective] });
TooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipModule, imports: [[CommonModule, NgbTooltipModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TooltipModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, NgbTooltipModule],
                    declarations: [TooltipDirective],
                    exports: [TooltipDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TooltipDirective, TooltipModule };
//# sourceMappingURL=backbase-ui-ang-tooltip-directive.js.map
