{"version":3,"file":"backbase-ui-ang-badge-counter.js","sources":["../../../../libs/ui-ang/badge-counter/badge-counter.component.ts","../../../../libs/ui-ang/badge-counter/badge-counter.component.html","../../../../libs/ui-ang/badge-counter/badge-counter.module.ts","../../../../libs/ui-ang/badge-counter/backbase-ui-ang-badge-counter.ts"],"sourcesContent":["import { Component, Input, OnChanges } from '@angular/core';\nimport { BadgeColor } from '@backbase/ui-ang/badge';\n\n/**\n * @name BadgeCounterComponent\n *\n * @description\n * Component that displays a counter badge.\n */\n@Component({\n  selector: 'bb-badge-counter-ui',\n  templateUrl: './badge-counter.component.html',\n})\nexport class BadgeCounterComponent implements OnChanges {\n  /**\n   * The (background) color of the badge. Defaults to 'primary'.\n   */\n  @Input() color: BadgeColor = 'primary';\n  /**\n   * The count to show in the badge. Defaults to 0 and badge will be hidden if count equals 0.\n   */\n  @Input() count = 0;\n  /**\n   * The max count value to limit text inside badge. Defaults to 999.\n   */\n  @Input() maxCount = 999;\n\n  countValue: string | undefined;\n\n  ngOnChanges() {\n    const value =\n      this.maxCount && this.maxCount > 0 && this.count && this.maxCount < this.count ? `${this.maxCount}+` : this.count;\n\n    this.countValue = value ? value.toString() : undefined;\n  }\n}\n","<div class=\"bb-badge-counter\">\n  <span class=\"badge badge-counter\" *ngIf=\"countValue\" [ngClass]=\"[color ? 'badge-counter-' + color : '']\">\n    {{ countValue }}\n  </span>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BadgeCounterComponent } from './badge-counter.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BadgeCounterComponent],\n  exports: [BadgeCounterComponent],\n})\nexport class BadgeCounterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAKG;MAKU,qBAAqB,CAAA;AAJlC,IAAA,WAAA,GAAA;AAKE;;AAEG;QACM,IAAK,CAAA,KAAA,GAAe,SAAS,CAAC;AACvC;;AAEG;QACM,IAAK,CAAA,KAAA,GAAG,CAAC,CAAC;AACnB;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAG,GAAG,CAAC;AAUzB,KAAA;IANC,WAAW,GAAA;AACT,QAAA,MAAM,KAAK,GACT,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,CAAG,EAAA,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;AAEpH,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC;KACxD;;mHArBU,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,kJCblC,gMAKA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDQa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAJjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,WAAW,EAAE,gCAAgC;AAC9C,iBAAA,CAAA;8BAKU,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAIG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAIG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;;MEhBK,kBAAkB,CAAA;;gHAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAHd,YAAA,EAAA,CAAA,qBAAqB,CAD1B,EAAA,OAAA,EAAA,CAAA,YAAY,aAEZ,qBAAqB,CAAA,EAAA,CAAA,CAAA;iHAEpB,kBAAkB,EAAA,OAAA,EAAA,CAJpB,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;4FAIZ,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;AACjC,iBAAA,CAAA;;;ACRD;;AAEG;;;;"}