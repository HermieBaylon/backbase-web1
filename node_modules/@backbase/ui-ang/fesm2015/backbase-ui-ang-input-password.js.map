{"version":3,"file":"backbase-ui-ang-input-password.js","sources":["../../../../libs/ui-ang/input-password/input-password.component.ts","../../../../libs/ui-ang/input-password/input-password.component.html","../../../../libs/ui-ang/input-password/input-password.module.ts","../../../../libs/ui-ang/input-password/backbase-ui-ang-input-password.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  Renderer2,\n  ViewChild,\n  Self,\n  Optional,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { InputBaseComponent } from '@backbase/ui-ang/base-classes';\nimport { DomAttributesService } from '@backbase/ui-ang/services';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\n\n/**\n * @name InputPasswordComponent\n *\n * @description\n * Component that displays a password input\n *\n * @a11y Current component provide option to pass needed accessibility\n * attributes. You need to take care of properties that are required in your case :\n *  - role\n *  - aria-activedescendant\n *  - aria-describedby\n *  - aria-expanded\n *  - aria-invalid\n *  - aria-label\n *  - aria-labelledby\n *  - aria-owns\n *\n * visibilityControlLabel is discernible text for show/hide password button.\n * ariaLabel is discernible text for password input\n */\n@Component({\n  selector: 'bb-input-password-ui',\n  templateUrl: './input-password.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputPasswordComponent extends InputBaseComponent implements AfterViewInit {\n  /**\n   * The placeholder for the password input. Defaults to an empty string;\n   */\n  @Input() placeholder = '';\n  /**\n   * The maxLength for the password input.\n   */\n  @Input() maxLength: number | undefined;\n  /**\n   * The minLength for the password input.\n   */\n  @Input() minLength: number | undefined;\n  /**\n   * Whether the password input is readonly.\n   */\n  @Input() readonly = false;\n\n  /**\n   * The autocomplete type for text input.\n   */\n\n  @Input() autocomplete: 'new-password' | 'current-password' | 'on' | 'off' | 'one-time-code' | undefined;\n\n  /**\n   * Whether to show the visibility button icon after the text.\n   */\n  @Input() showVisibilityControl = false;\n  /**\n   * Whether to show password in plain text.\n   */\n  @Input() showPassword = false;\n  /**\n   * The aria label used when the visibility button is in focus.\n   */\n  @Input() visibilityControlLabel = 'Show/Hide password button';\n  /**\n   * Aria label for the password input\n   */\n  @Input()\n  ariaLabel = 'Password Input';\n  /**\n   * The event emitter called when the visibility button is clicked.\n   */\n  @Output() toggleVisibility = new EventEmitter<boolean>();\n\n  @ViewChild('inputPassword') inputEl: ElementRef | undefined;\n\n  constructor(\n    private readonly domAttrService: DomAttributesService,\n    private readonly elem: ElementRef,\n    private readonly renderer2: Renderer2,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly deprecationsService: DeprecationsService,\n    @Self() @Optional() public parentFormControl: NgControl,\n  ) {\n    super(cd, deprecationsService);\n\n    if (this.parentFormControl) {\n      this.parentFormControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.ariaLabel) {\n      this.domAttrService.moveAriaAttributes(\n        this.elem.nativeElement,\n        this.inputEl && this.inputEl.nativeElement,\n        this.renderer2,\n      );\n    }\n  }\n\n  onVisibilityChange() {\n    this.showPassword = !this.showPassword;\n    this.toggleVisibility.emit(this.showPassword);\n  }\n}\n","<div\n  class=\"bb-input-password\"\n  [ngClass]=\"{ 'ng-invalid': parentFormControl?.invalid, 'ng-touched': parentFormControl?.touched }\"\n>\n  <label *ngIf=\"label\" for=\"{{ id }}\">{{ label }}</label>\n  <div class=\"input-group\">\n    <input\n      id=\"{{ id }}\"\n      #inputPassword\n      [attr.aria-autocomplete]=\"ariaAutocomplete\"\n      [attr.aria-controls]=\"ariaControls\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      [attr.aria-describedby]=\"ariaDescribedby\"\n      [attr.aria-expanded]=\"ariaExpanded\"\n      [attr.aria-activedescendant]=\"ariaActivedescendant\"\n      [attr.role]=\"role\"\n      [attr.aria-invalid]=\"ariaInvalid\"\n      [attr.aria-owns]=\"ariaOwns\"\n      [attr.aria-label]=\"(!label && ariaLabel) || null\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"onValueChange($event)\"\n      (blur)=\"onBlur()\"\n      [type]=\"showPassword ? 'text' : 'password'\"\n      class=\"form-control bb-input-password__input\"\n      (focus)=\"onFocus()\"\n      [disabled]=\"disabled\"\n      [readonly]=\"readonly\"\n      [placeholder]=\"placeholder\"\n      [required]=\"required\"\n      [bbFocus]=\"autofocus\"\n      [attr.autocomplete]=\"autocomplete\"\n      [attr.maxlength]=\"maxLength\"\n      [attr.minlength]=\"minLength\"\n    />\n    <div *ngIf=\"showVisibilityControl\" class=\"input-group-append\">\n      <button\n        bbButton\n        (click)=\"onVisibilityChange()\"\n        color=\"link\"\n        [attr.aria-label]=\"visibilityControlLabel\"\n        class=\"bb-input-password__visibility-toggle-button\"\n        data-role=\"bb-input-password-visibility-toggle-button\"\n      >\n        <bb-icon-ui [name]=\"showPassword ? 'visibility-off' : 'visibility'\" size=\"md\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { InputPasswordComponent } from './input-password.component';\nimport { BaseClassesModule } from '@backbase/ui-ang/base-classes';\nimport { FocusModule } from '@backbase/ui-ang/focus';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, BaseClassesModule, FocusModule, IconModule, ButtonModule],\n  declarations: [InputPasswordComponent],\n  exports: [InputPasswordComponent],\n})\nexport class InputPasswordModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}