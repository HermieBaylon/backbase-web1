import { AfterViewInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { NgControl } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class InputRangeMinDirective implements OnChanges {
    readonly control: NgControl;
    /**
     * Minimum possible value (optional);
     */
    bbInputRangeMin?: number;
    constructor(control: NgControl);
    ngOnChanges({ bbInputRangeMin }: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<InputRangeMinDirective, [{ self: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<InputRangeMinDirective, "bb-input-number-ui[bbInputRangeMin]", never, { "bbInputRangeMin": "bbInputRangeMin"; }, {}, never>;
}
export declare class InputRangeMaxDirective implements OnChanges {
    readonly control: NgControl;
    /**
     * Maximum possible value (optional);
     */
    bbInputRangeMax?: number;
    constructor(control: NgControl);
    ngOnChanges({ bbInputRangeMax }: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<InputRangeMaxDirective, [{ self: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<InputRangeMaxDirective, "bb-input-number-ui[bbInputRangeMax]", never, { "bbInputRangeMax": "bbInputRangeMax"; }, {}, never>;
}
export declare class InputRangeDirective implements AfterViewInit, OnDestroy {
    min: InputRangeMinDirective | undefined;
    max: InputRangeMaxDirective | undefined;
    private readonly destroy$$;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<InputRangeDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<InputRangeDirective, "[bbInputRange]", never, {}, {}, ["min", "max"]>;
}
