import { DatePipe } from '@angular/common';
import { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
import * as i0 from "@angular/core";
export declare class NgbDateLocaleParserFormatter extends NgbDateParserFormatter {
    private readonly locale;
    private readonly datePipe;
    constructor(locale: string, datePipe: DatePipe);
    private _dateFormat;
    get localeDateFormat(): string;
    set dateFormat(format: string | undefined);
    static getAdaptedYear(year: number, month: number, day: number, yearValue: string): number;
    static getIndexFromFormat(regex: RegExp, formatArray: string[]): number;
    interpretDate(value: string): Date | undefined;
    parse(value: string | undefined): NgbDateStruct;
    /**
     *
     * Parse date value with angular date pipe
     *
     * @param value The string date value
     *
     */
    getAngularPipeFormatParseDate(value: string): {
        year: number;
        month: number;
        day: number;
    };
    /**
     *
     * @description
     * Proprietary parse to be able to use date override in the input field.
     *
     * Parse the string date value if the date format only contains y, M, d with one single format delimiter.
     *
     * @param value The string date value
     * @param format The date format
     * @param delimiter The delimiter character between date elements (e.g. - or /)
     *
     */
    getFormatParsedDate(value: string, format: string, delimiter: string): NgbDateStruct;
    getYearLength(value: string): number;
    format(date: NgbDateStruct | undefined | null, format?: string): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgbDateLocaleParserFormatter, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NgbDateLocaleParserFormatter>;
}
