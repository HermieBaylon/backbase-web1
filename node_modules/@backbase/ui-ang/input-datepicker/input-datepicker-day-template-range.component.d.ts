import { OnChanges, SimpleChanges, EventEmitter } from '@angular/core';
import { NgbDate } from '@ng-bootstrap/ng-bootstrap';
import { NgbDateLocaleParserFormatter } from './input-datepicker-formatter';
import { BrowserService } from '@backbase/ui-ang/services';
import { NgDateStructNullable } from './input-datepicker.model';
import { DateRangeSelectionModel, RangeSelectModel } from './input-datepicker.model';
import * as i0 from "@angular/core";
export declare enum Key {
    ArrowLeft = 37,
    ArrowUp = 38,
    ArrowRight = 39,
    ArrowDown = 40
}
export declare class InputDatepickerDayTemplateRangeComponent implements OnChanges {
    private readonly formatterHelper;
    private readonly browserService;
    private static readonly hangledKeyCodes;
    /**
     * Date to render
     */
    date: NgbDate;
    /**
     * When true the date is rendered as disabled
     */
    disabled: boolean;
    /**
     * CurrentMonth on the datepicker window
     */
    currentMonth: string;
    /**
     * Selected "from" date
     */
    fromDate: NgDateStructNullable;
    /**
     * Selected "to" date
     */
    toDate: NgDateStructNullable;
    /**
     * If "true" the datepicker is displayed with two input fields for "from" and "to" dates
     */
    splitRange: boolean;
    /**
     * "true" when "splitRange" is "true" and the parent datepicker belongs to
     * second datepicker input (the one for "to" date)
     */
    toDateDatepicker: boolean;
    /**
     * Hovered date by a user
     */
    hoveredDate: NgDateStructNullable;
    /**
     * Date range
     */
    rangeSelect: EventEmitter<RangeSelectModel>;
    /**
     * Event to trigger on date hover
     */
    hovered: EventEmitter<DateRangeSelectionModel>;
    /**
     * Prevent keypress to be called on toggle button enter
     */
    firstKey: boolean;
    /**
     * Indicates if the date is between the from-date and the hovered date
     */
    isWithinRangeHover: boolean;
    /**
     * Indicates if the date is between the from-date and the to-date date
     */
    isWithinSelectedRange: boolean;
    /**
     * Indicates if the date displayed as greyed out
     */
    isTextMuted: boolean;
    /**
     * Indicates if the date is hovered the range
     */
    isHovered: boolean;
    /**
     * Indicates if the date is the from-date of the range
     */
    isFrom: boolean;
    /**
     * Indicates if the the date is the to-date of the range
     */
    isTo: boolean;
    /**
     * Formatted date
     */
    formattedDate: string;
    /**
     * Indicates if the browser is IE
     */
    isIE: boolean;
    private get withinHoverRangeSingle();
    private get withinHoverRangeSplitTo();
    private get withinHoverRangeSplitFrom();
    constructor(formatterHelper: NgbDateLocaleParserFormatter, browserService: BrowserService);
    ngOnChanges(changes: SimpleChanges): void;
    /**
     *
     * @description
     * Handle mouseover. Emit the hovered date with null.
     *
     */
    onMouseOut(): void;
    /**
     *
     * @description
     * Handle mouseover. Emit the hovered date with date.
     *
     */
    onMouseOver(): void;
    /**
     * @description
     * Keypress handler
     *
     * @param evt
     * @param curMonth
     * @param curDay
     * @param date
     */
    onKeyUp(event: KeyboardEvent): void;
    private isValidRange;
    static ɵfac: i0.ɵɵFactoryDeclaration<InputDatepickerDayTemplateRangeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<InputDatepickerDayTemplateRangeComponent, "bb-input-datepicker-range-day-template-ui", never, { "date": "date"; "disabled": "disabled"; "currentMonth": "currentMonth"; "fromDate": "fromDate"; "toDate": "toDate"; "splitRange": "splitRange"; "toDateDatepicker": "toDateDatepicker"; "hoveredDate": "hoveredDate"; }, { "rangeSelect": "rangeSelect"; "hovered": "hovered"; }, never, never>;
}
