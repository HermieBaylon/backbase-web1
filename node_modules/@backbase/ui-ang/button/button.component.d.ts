import { ElementRef, Renderer2, AfterViewInit } from '@angular/core';
import { ButtonColor } from './button.directive';
import * as i0 from "@angular/core";
export declare type ButtonType = 'button' | 'submit' | 'reset';
/**
 * @name ButtonComponent
 *
 * @description
 * Component that displays a button.
 */
export declare class ButtonComponent implements AfterViewInit {
    private readonly elRef;
    private readonly renderer2;
    /**
     * This Boolean attribute lets you specify that the button should have input focus when the page
     * loads, unless the user overrides it, for example by typing in a different control.  Only one
     * form-associated element in a document can have this attribute specified.
     */
    autofocus: boolean;
    /**
     * The HTML5 button type.  Defaults to 'button'.
     */
    type: ButtonType;
    /**
     * This Boolean attribute indicates that the user cannot interact with the button.  Defaults to
     * false.
     */
    disabled: boolean;
    /**
     * Size of the button.
     */
    buttonSize: 'sm' | 'md';
    /**
     * The color for the button.  Defaults to 'primary'.
     */
    color: ButtonColor | string;
    /**
     * The flag to indicate whether the button should fill the container that it is in. Defaults to 'false'.
     */
    block: boolean;
    buttonEl: ElementRef | undefined;
    constructor(elRef: ElementRef, renderer2: Renderer2);
    protected moveAriaAttributes(hostEl: HTMLElement, childEl: HTMLElement): void;
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ButtonComponent, "bb-button-ui", never, { "autofocus": "autofocus"; "type": "type"; "disabled": "disabled"; "buttonSize": "buttonSize"; "color": "color"; "block": "block"; }, {}, never, ["*"]>;
}
