import { EventEmitter, OnInit } from '@angular/core';
import { DatePipe } from '@angular/common';
import * as i0 from "@angular/core";
export declare type FormatFn = (date: Date) => string;
export declare type PeriodSize = 'month';
export interface Period {
    start: Date;
    end: Date;
}
export interface PeriodFormatters {
    title?: FormatFn;
    start?: FormatFn;
    end?: FormatFn;
}
/**
 * @name PeriodSelectorComponent
 *
 * @description
 * Component that selects a period.
 */
export declare class PeriodSelectorComponent implements OnInit {
    private readonly datePipe;
    private combinedFormatters;
    /**
     * Start date of the period.
     */
    periodStart: Date | undefined;
    /**
     * End date of the period.
     */
    periodEnd: Date | undefined;
    /**
     * Custom date period formatter.
     */
    set periodFormatters(formatters: PeriodFormatters);
    /**
     * Period step
     */
    period: PeriodSize;
    /**
     * EventEmitter for triggering a periodChange event.
     */
    periodChange: EventEmitter<Period>;
    constructor(datePipe: DatePipe);
    formattedTitle: string | undefined;
    formattedStart: string | undefined;
    formattedEnd: string | undefined;
    get isLastPeriod(): boolean;
    ngOnInit(): void;
    private setFormattedValues;
    changePeriod(next: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PeriodSelectorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PeriodSelectorComponent, "bb-period-selector-ui", never, { "periodStart": "periodStart"; "periodEnd": "periodEnd"; "periodFormatters": "periodFormatters"; "period": "period"; }, { "periodChange": "periodChange"; }, never, never>;
}
