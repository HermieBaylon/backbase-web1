import { TemplateRef } from '@angular/core';
import { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';
import * as i0 from "@angular/core";
export declare class CustomProductItemCurrentAccountTitleDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemCurrentAccountTitleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemCurrentAccountTitleDirective, "ng-template[bbCustomProductItemCurrentAccountTitle]", never, {}, {}, never>;
}
export declare class CustomProductItemCurrentAccountDetailsFormatterDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemCurrentAccountDetailsFormatterDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemCurrentAccountDetailsFormatterDirective, "ng-template[bbCustomProductItemCurrentAccountDetailsFormatter]", never, {}, {}, never>;
}
export declare class CustomProductItemCurrentAccountMainSectionDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemCurrentAccountMainSectionDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemCurrentAccountMainSectionDirective, "ng-template[bbCustomProductItemCurrentAccountMainSection]", never, {}, {}, never>;
}
export declare class CustomProductItemCurrentAccountSecondarySectionDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemCurrentAccountSecondarySectionDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemCurrentAccountSecondarySectionDirective, "ng-template[bbCustomProductItemCurrentAccountSecondarySection]", never, {}, {}, never>;
}
export declare class ProductItemCurrentAccountComponent {
    customProductItemCurrentAccountTitleDirective: CustomProductItemCurrentAccountTitleDirective | undefined;
    customProductItemCurrentAccountDetailsFormatter: CustomProductItemCurrentAccountDetailsFormatterDirective | undefined;
    customProductItemCurrentAccountMainSection: CustomProductItemCurrentAccountMainSectionDirective | undefined;
    customProductItemCurrentAccountSecondarySection: CustomProductItemCurrentAccountSecondarySectionDirective | undefined;
    readonly hostRef: ProductItemCurrentAccountComponent;
    /**
     * The card Title value. Default is empty string
     */
    title: string | undefined;
    /**
     * The product Number. Default is empty string
     */
    productNumber: string | undefined;
    /**
     * Configuration of how the product number should be formatted.
     */
    productNumberFormat: PaymentCardNumberFormat;
    /**
     * The card currency value. Default is empty string
     */
    currency?: string | undefined;
    /**
     * The card Amount value
     */
    amount?: number | undefined;
    /**
     * The card additional main Section currency value
     */
    mainSectionCurrency?: string | undefined;
    /**
     * The card additional main Section Amount value
     */
    mainSectionAmount?: number | undefined;
    /**
     * The card additional main Section Amount value
     */
    mainSectionTitle?: string | undefined;
    /**
     * The card additional Secondary Section currency value
     */
    secondarySectionCurrency?: string | undefined;
    /**
     * The card additional Secondary Section Amount value
     */
    secondarySectionAmount?: number | undefined;
    /**
     * The card additional Secondary Section Amount value
     */
    secondarySectionTitle?: string | undefined;
    /**
     * The card highlight the amount and currency value
     */
    highlight?: boolean;
    /**
     * The product details info values
     */
    productDetailsInfo?: {
        [key: string]: any;
    };
    /**
     * The active state of card (it adds active class for blue line)
     */
    active: boolean;
    /**
     * The favorite state of card (add favorite icon next to title)
     */
    favorite: boolean;
    /**
     * The favorite icon color (define star icon color)
     */
    favoriteIconColor: string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductItemCurrentAccountComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProductItemCurrentAccountComponent, "bb-product-item-current-account-ui", never, { "title": "title"; "productNumber": "productNumber"; "productNumberFormat": "productNumberFormat"; "currency": "currency"; "amount": "amount"; "mainSectionCurrency": "mainSectionCurrency"; "mainSectionAmount": "mainSectionAmount"; "mainSectionTitle": "mainSectionTitle"; "secondarySectionCurrency": "secondarySectionCurrency"; "secondarySectionAmount": "secondarySectionAmount"; "secondarySectionTitle": "secondarySectionTitle"; "highlight": "highlight"; "productDetailsInfo": "productDetailsInfo"; "active": "active"; "favorite": "favorite"; "favoriteIconColor": "favoriteIconColor"; }, {}, ["customProductItemCurrentAccountTitleDirective", "customProductItemCurrentAccountDetailsFormatter", "customProductItemCurrentAccountMainSection", "customProductItemCurrentAccountSecondarySection"], never>;
}
