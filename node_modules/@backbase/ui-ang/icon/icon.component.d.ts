import { OnInit } from '@angular/core';
import { DeprecationsService } from '@backbase/foundation-ang/future';
import * as i0 from "@angular/core";
/**
 * @name IconComponent
 *
 * @description
 * Component that displays an icon.
 */
export declare class IconComponent implements OnInit {
    private readonly deprecationsService;
    private _cropped;
    /**
     * The name of the icon
     */
    name: string | undefined;
    /**
     * Whether to use white background and inverse icon colors
     */
    inverse: boolean;
    /**
     * The size of the icon represented as a size name contained in backbase-theme.  This is ignored
     * when the circle option is used. Defaults to `md`.
     */
    size: string;
    /**
     * The color of the icon represented as a color name contained in backbase-theme.
     */
    color: string | undefined;
    /**
     * Whether the icon should be animated. Defaults to `false`.
     */
    animate: boolean;
    /**
     * Input that can be used to specify the `aria-label` attribute.
     */
    ariaLabel: string | undefined;
    /**
     * Whether the icon should be cropped horizontally.
     */
    get cropped(): boolean | string;
    set cropped(value: boolean | string);
    /**
     * Wether the icon has a background. If not set it will display just the icon without background.
     * Possible values are `circle` and `square`.
     */
    backgroundType: 'circle' | 'square' | undefined;
    get classNames(): string[];
    constructor(deprecationsService: DeprecationsService);
    ngOnInit(): void;
    private getBackgroundTypeClass;
    static ɵfac: i0.ɵɵFactoryDeclaration<IconComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IconComponent, "bb-icon-ui", never, { "name": "name"; "inverse": "inverse"; "size": "size"; "color": "color"; "animate": "animate"; "ariaLabel": "aria-label"; "cropped": "cropped"; "backgroundType": "backgroundType"; }, {}, never, never>;
}
