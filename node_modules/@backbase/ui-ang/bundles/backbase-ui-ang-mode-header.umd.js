(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/header'), require('@backbase/ui-ang/icon')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/mode-header', ['exports', '@angular/common', '@angular/core', '@backbase/ui-ang/button', '@backbase/ui-ang/header', '@backbase/ui-ang/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"]["mode-header"] = {}), global.ng.common, global.ng.core, global.backbase["ui-ang"].button, global.backbase["ui-ang"].header, global.backbase["ui-ang"].icon));
})(this, (function (exports, i3, i0, i4, i2, i1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /**
     * @name ModeHeaderComponent
     *
     * @description
     * Component that displays a mode header.
     */
    var ModeHeaderComponent = /** @class */ (function () {
        function ModeHeaderComponent() {
            /**
             * Whether or not to show the close button. Defaults to true.
             */
            this.showCloseButton = true;
            /**
             * Whether or not the order of title elements is reversed.
             */
            this.reverseTitleOrder = true;
            /**
             * Event fired when the close button is clicked.
             */
            this.close = new i0.EventEmitter();
        }
        return ModeHeaderComponent;
    }());
    ModeHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ModeHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModeHeaderComponent, selector: "bb-mode-header-ui", inputs: { title: "title", secondaryTitle: "secondaryTitle", showCloseButton: "showCloseButton", closeButtonAriaLabel: "closeButtonAriaLabel", reverseTitleOrder: "reverseTitleOrder" }, outputs: { close: "close" }, ngImport: i0__namespace, template: "<div class=\"bb-mode-header\">\n  <div class=\"bb-stack bb-stack--density-md\">\n    <div *ngIf=\"showCloseButton\" class=\"bb-stack__item\">\n      <button\n        bbButton\n        buttonSize=\"md\"\n        circle=\"true\"\n        color=\"primary\"\n        [attr.aria-label]=\"closeButtonAriaLabel\"\n        (click)=\"close.emit()\"\n        data-role=\"mode-header-close-button\"\n      >\n        <bb-icon-ui name=\"clear\"></bb-icon-ui>\n      </button>\n    </div>\n    <div class=\"bb-stack__item\" data-role=\"mode-header-icon\">\n      <ng-content select=\"[mode-header-icon]\"></ng-content>\n    </div>\n    <div\n      class=\"bb-stack__item bb-mode-header__title-area\"\n      [class.bb-mode-header__title-area--reversed]=\"reverseTitleOrder\"\n    >\n      <div class=\"bb-stack\">\n        <bb-header-ui\n          headingType=\"h2\"\n          headingClasses=\"bb-text--mode-header\"\n          [heading]=\"title\"\n          data-role=\"mode-header-primary-header\"\n          class=\"bb-stack__item\"\n        ></bb-header-ui>\n        <div class=\"bb-stack__item\" data-role=\"mode-header-status\">\n          <ng-content select=\"[mode-header-status]\"></ng-content>\n        </div>\n      </div>\n      <span *ngIf=\"secondaryTitle\" class=\"bb-subtitle\" data-role=\"mode-header-secondary-header\">{{\n        secondaryTitle\n      }}</span>\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--push-right\" data-role=\"mode-header-utility-area\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <ng-content select=\"[mode-header-utility-area]\"></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-mode-header-ui',
                        templateUrl: './mode-header.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { title: [{
                    type: i0.Input
                }], secondaryTitle: [{
                    type: i0.Input
                }], showCloseButton: [{
                    type: i0.Input
                }], closeButtonAriaLabel: [{
                    type: i0.Input
                }], reverseTitleOrder: [{
                    type: i0.Input
                }], close: [{
                    type: i0.Output
                }] } });

    var ModeHeaderModule = /** @class */ (function () {
        function ModeHeaderModule() {
        }
        return ModeHeaderModule;
    }());
    ModeHeaderModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ModeHeaderModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderModule, declarations: [ModeHeaderComponent], imports: [i3.CommonModule, i4.ButtonModule, i1.IconModule, i2.HeaderModule], exports: [ModeHeaderComponent] });
    ModeHeaderModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderModule, imports: [[i3.CommonModule, i4.ButtonModule, i1.IconModule, i2.HeaderModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i4.ButtonModule, i1.IconModule, i2.HeaderModule],
                        declarations: [ModeHeaderComponent],
                        exports: [ModeHeaderComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ModeHeaderComponent = ModeHeaderComponent;
    exports.ModeHeaderModule = ModeHeaderModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-mode-header.umd.js.map
