(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/badge', ['exports', '@angular/common', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"].badge = {}), global.ng.common, global.ng.core));
})(this, (function (exports, i1, i0) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    /**
     * @name BadgeComponent
     *
     * @description
     * Component that displays a badge.
     */
    var BadgeComponent = /** @class */ (function () {
        function BadgeComponent() {
            /**
             * The (background) color of the badge.  Defaults to 'primary'.
             */
            this.color = 'primary';
            /**
             * The abbreviation to show when using circle styling.
             */
            this.abbr = false;
            /**
             * Whether circle styling should be applied.
             */
            this.circle = false;
            /**
             * Whether text wrap styling should be applied.
             */
            this.wrap = false;
        }
        BadgeComponent.prototype.ngOnInit = function () {
            if (typeof this.text === 'undefined') {
                throw new Error("\"text\" input is required in \"" + this.constructor.name + "\"");
            }
        };
        return BadgeComponent;
    }());
    BadgeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BadgeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeComponent, selector: "bb-badge-ui", inputs: { color: "color", text: "text", abbr: "abbr", circle: "circle", wrap: "wrap", ariaLabel: "ariaLabel" }, ngImport: i0__namespace, template: "<span\n  class=\"badge break-word\"\n  [ngClass]=\"[color ? 'badge-' + color : '', circle ? 'badge-pill' : '', wrap ? 'text-wrap' : '']\"\n>\n  <ng-container *ngIf=\"!abbr\">\n    {{ text }}\n  </ng-container>\n  <abbr [attr.aria-label]=\"ariaLabel\" title=\"{{ text }}\" *ngIf=\"abbr\">\n    {{ abbr === true && text ? text[0] : abbr }}\n  </abbr>\n</span>\n", directives: [{ type: i1__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-badge-ui',
                        templateUrl: './badge.component.html',
                    }]
            }], propDecorators: { color: [{
                    type: i0.Input
                }], text: [{
                    type: i0.Input
                }], abbr: [{
                    type: i0.Input
                }], circle: [{
                    type: i0.Input
                }], wrap: [{
                    type: i0.Input
                }], ariaLabel: [{
                    type: i0.Input
                }] } });

    var BadgeModule = /** @class */ (function () {
        function BadgeModule() {
        }
        return BadgeModule;
    }());
    BadgeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    BadgeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeModule, declarations: [BadgeComponent], imports: [i1.CommonModule], exports: [BadgeComponent] });
    BadgeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeModule, imports: [[i1.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i1.CommonModule],
                        declarations: [BadgeComponent],
                        exports: [BadgeComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BadgeComponent = BadgeComponent;
    exports.BadgeModule = BadgeModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-badge.umd.js.map
