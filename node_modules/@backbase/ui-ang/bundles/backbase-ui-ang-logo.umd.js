(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/logo', ['exports', '@angular/common', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"].logo = {}), global.ng.common, global.ng.core));
})(this, (function (exports, i1, i0) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    /**
     * @name LogoComponent
     *
     * @description
     * Component that displays the company logo.
     */
    var LogoComponent = /** @class */ (function () {
        function LogoComponent() {
            /**
             * The type of the logo.  Defaults to 'full'.
             */
            this.type = 'full';
            /**
             * Flag to indicate whether to use the inverse colors or not.  Defaults to false.
             */
            this.isInverse = false;
        }
        Object.defineProperty(LogoComponent.prototype, "isEmblem", {
            /**
             * @name LogoComponent#isEmblem
             * @returns Whether this component should show the emblem only or the full logo.
             *
             * @description
             * Returns whether this component should show the emblem only or the full logo.
             */
            get: function () {
                return this.type === 'emblem';
            },
            enumerable: false,
            configurable: true
        });
        LogoComponent.prototype.ngOnInit = function () { };
        return LogoComponent;
    }());
    LogoComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LogoComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LogoComponent, selector: "bb-logo-ui", inputs: { type: "type", isInverse: "isInverse" }, ngImport: i0__namespace, template: "<div\n  class=\"bb-logo\"\n  [ngClass]=\"{\n    'bb-logo--emblem': isEmblem,\n    'bb-logo--inverse': isInverse\n  }\"\n></div>\n", directives: [{ type: i1__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-logo-ui',
                        templateUrl: './logo.component.html',
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { type: [{
                    type: i0.Input
                }], isInverse: [{
                    type: i0.Input
                }] } });

    var LogoModule = /** @class */ (function () {
        function LogoModule() {
        }
        return LogoModule;
    }());
    LogoModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    LogoModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoModule, declarations: [LogoComponent], imports: [i1.CommonModule], exports: [LogoComponent] });
    LogoModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoModule, imports: [[i1.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i1.CommonModule],
                        declarations: [LogoComponent],
                        exports: [LogoComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.LogoComponent = LogoComponent;
    exports.LogoModule = LogoModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-logo.umd.js.map
