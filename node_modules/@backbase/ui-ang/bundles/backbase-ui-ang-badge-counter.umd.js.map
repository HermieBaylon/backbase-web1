{"version":3,"file":"backbase-ui-ang-badge-counter.umd.js","sources":["../../../../libs/ui-ang/badge-counter/badge-counter.component.ts","../../../../libs/ui-ang/badge-counter/badge-counter.component.html","../../../../libs/ui-ang/badge-counter/badge-counter.module.ts","../../../../libs/ui-ang/badge-counter/backbase-ui-ang-badge-counter.ts"],"sourcesContent":["import { Component, Input, OnChanges } from '@angular/core';\nimport { BadgeColor } from '@backbase/ui-ang/badge';\n\n/**\n * @name BadgeCounterComponent\n *\n * @description\n * Component that displays a counter badge.\n */\n@Component({\n  selector: 'bb-badge-counter-ui',\n  templateUrl: './badge-counter.component.html',\n})\nexport class BadgeCounterComponent implements OnChanges {\n  /**\n   * The (background) color of the badge. Defaults to 'primary'.\n   */\n  @Input() color: BadgeColor = 'primary';\n  /**\n   * The count to show in the badge. Defaults to 0 and badge will be hidden if count equals 0.\n   */\n  @Input() count = 0;\n  /**\n   * The max count value to limit text inside badge. Defaults to 999.\n   */\n  @Input() maxCount = 999;\n\n  countValue: string | undefined;\n\n  ngOnChanges() {\n    const value =\n      this.maxCount && this.maxCount > 0 && this.count && this.maxCount < this.count ? `${this.maxCount}+` : this.count;\n\n    this.countValue = value ? value.toString() : undefined;\n  }\n}\n","<div class=\"bb-badge-counter\">\n  <span class=\"badge badge-counter\" *ngIf=\"countValue\" [ngClass]=\"[color ? 'badge-counter-' + color : '']\">\n    {{ countValue }}\n  </span>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BadgeCounterComponent } from './badge-counter.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BadgeCounterComponent],\n  exports: [BadgeCounterComponent],\n})\nexport class BadgeCounterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0","i1","Component","Input","CommonModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAGA;;;;;IAKG;AAKH,QAAA,qBAAA,kBAAA,YAAA;IAJA,IAAA,SAAA,qBAAA,GAAA;IAKE;;IAEG;IACM,QAAA,IAAK,CAAA,KAAA,GAAe,SAAS,CAAC;IACvC;;IAEG;IACM,QAAA,IAAK,CAAA,KAAA,GAAG,CAAC,CAAC;IACnB;;IAEG;IACM,QAAA,IAAQ,CAAA,QAAA,GAAG,GAAG,CAAC;SAUzB;IANC,IAAA,qBAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,QAAA,IAAM,KAAK,GACT,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAM,IAAI,CAAC,QAAQ,GAAA,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IAEpH,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC;SACxD,CAAA;;;6IArBU,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAArB,qBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,6JCblC,gMAKA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;sHDQa,qBAAqB,EAAA,UAAA,EAAA,CAAA;sBAJjCC,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,qBAAqB;IAC/B,oBAAA,WAAW,EAAE,gCAAgC;qBAC9C,CAAA;kCAKU,KAAK,EAAA,CAAA;0BAAbC,QAAK;oBAIG,KAAK,EAAA,CAAA;0BAAbA,QAAK;oBAIG,QAAQ,EAAA,CAAA;0BAAhBA,QAAK;;;AEhBR,QAAA,kBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,kBAAA,GAAA;;;;0IAAa,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAH,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;IAAlB,kBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,kBAAkB,EAHd,YAAA,EAAA,CAAA,qBAAqB,CAD1B,EAAA,OAAA,EAAA,CAAAI,eAAY,aAEZ,qBAAqB,CAAA,EAAA,CAAA,CAAA;2IAEpB,kBAAkB,EAAA,OAAA,EAAA,CAJpB,CAACA,eAAY,CAAC,CAAA,EAAA,CAAA,CAAA;sHAIZ,kBAAkB,EAAA,UAAA,EAAA,CAAA;sBAL9BC,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACR,OAAO,EAAE,CAACD,eAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,qBAAqB,CAAC;wBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;qBACjC,CAAA;;;ICRD;;IAEG;;;;;;;;;;;"}