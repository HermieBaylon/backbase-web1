(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/icon')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/action-status', ['exports', '@angular/core', '@angular/common', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"]["action-status"] = {}), global.ng.core, global.ng.common, global.backbase["ui-ang"]["loading-indicator"], global.backbase["ui-ang"].icon));
})(this, (function (exports, i0, i3, i1, i2) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    /**
     * @name ActionStatusComponent
     *
     * @description
     * Component that displays a loading indicator or icon to indicate an action response.
     */
    var ActionStatusComponent = /** @class */ (function () {
        function ActionStatusComponent() {
        }
        ActionStatusComponent.prototype.isLoading = function () {
            return this.state === 'loading';
        };
        ActionStatusComponent.prototype.getColor = function () {
            switch (this.state) {
                case 'message':
                    return 'info';
                case 'error':
                    return 'danger';
                default:
                    return this.state;
            }
        };
        return ActionStatusComponent;
    }());
    ActionStatusComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ActionStatusComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ActionStatusComponent, selector: "bb-action-status-ui", inputs: { state: "state" }, ngImport: i0__namespace, template: "<div class=\"bb-action-status\">\n  <bb-loading-indicator-ui *ngIf=\"isLoading()\" loaderSize=\"sm\"></bb-loading-indicator-ui>\n  <bb-icon-ui *ngIf=\"!isLoading() && state\" size=\"md\" [name]=\"state\" [color]=\"getColor()\"></bb-icon-ui>\n</div>\n", components: [{ type: i1__namespace.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-action-status-ui',
                        templateUrl: './action-status.component.html',
                    }]
            }], propDecorators: { state: [{
                    type: i0.Input
                }] } });

    var ActionStatusModule = /** @class */ (function () {
        function ActionStatusModule() {
        }
        return ActionStatusModule;
    }());
    ActionStatusModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ActionStatusModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusModule, declarations: [ActionStatusComponent], imports: [i3.CommonModule, i1.LoadingIndicatorModule, i2.IconModule], exports: [ActionStatusComponent] });
    ActionStatusModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusModule, imports: [[i3.CommonModule, i1.LoadingIndicatorModule, i2.IconModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i1.LoadingIndicatorModule, i2.IconModule],
                        declarations: [ActionStatusComponent],
                        exports: [ActionStatusComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ActionStatusComponent = ActionStatusComponent;
    exports.ActionStatusModule = ActionStatusModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-action-status.umd.js.map
