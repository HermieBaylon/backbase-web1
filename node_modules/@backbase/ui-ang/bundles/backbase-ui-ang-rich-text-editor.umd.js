(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@backbase/ui-ang/base-classes'), require('@backbase/ui-ang/util'), require('@angular/common'), require('@backbase/ui-ang/services'), require('@backbase/foundation-ang/future'), require('@angular/platform-browser'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/tooltip-directive'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/modal')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/rich-text-editor', ['exports', '@angular/core', '@angular/forms', '@backbase/ui-ang/base-classes', '@backbase/ui-ang/util', '@angular/common', '@backbase/ui-ang/services', '@backbase/foundation-ang/future', '@angular/platform-browser', '@backbase/ui-ang/icon', '@backbase/ui-ang/tooltip-directive', '@backbase/ui-ang/button', '@backbase/ui-ang/modal'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"]["rich-text-editor"] = {}), global.ng.core, global.ng.forms, global.backbase["ui-ang"]["base-classes"], global.backbase["ui-ang"].util, global.ng.common, global.backbase["ui-ang"].services, global.i2$1, global.ng.platformBrowser, global.backbase["ui-ang"].icon, global.backbase["ui-ang"]["tooltip-directive"], global.backbase["ui-ang"].button, global.backbase["ui-ang"].modal));
})(this, (function (exports, i0, i6, baseClasses, util, i13, i1, i2$1, i3$2, i2, i3, i4, i3$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i13__namespace = /*#__PURE__*/_interopNamespace(i13);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var RichTextEditorActionsService = /** @class */ (function () {
        function RichTextEditorActionsService() {
            this.exec = function (command, value) {
                if (value === void 0) { value = undefined; }
                document.execCommand(command, false, value);
            };
        }
        return RichTextEditorActionsService;
    }());
    RichTextEditorActionsService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorActionsService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    RichTextEditorActionsService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorActionsService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorActionsService, decorators: [{
                type: i0.Injectable
            }] });

    var RichTextEditorActionsComponent = /** @class */ (function () {
        function RichTextEditorActionsComponent(ma) {
            this.ma = ma;
            /**
             * This Boolean attribute indicates that the user cannot interact with the button.  Defaults to
             * false.
             */
            this.disabled = false;
            /**
             * Placement of the action tooltip relative to the action button: auto | top | bottom | left | right.
             */
            this.actionsTooltipPlacement = 'auto';
        }
        RichTextEditorActionsComponent.prototype.result = function (command, value) {
            this.ma.exec(command, value);
        };
        return RichTextEditorActionsComponent;
    }());
    RichTextEditorActionsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorActionsComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorActionsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorActionsComponent, selector: "ng-component", inputs: { disabled: "disabled", actionsTooltipPlacement: "actionsTooltipPlacement" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorActionsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; }, propDecorators: { disabled: [{
                    type: i0.Input
                }], actionsTooltipPlacement: [{
                    type: i0.Input
                }] } });

    var RichTextEditorBoldActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorBoldActionComponent, _super);
        function RichTextEditorBoldActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        return RichTextEditorBoldActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorBoldActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorBoldActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorBoldActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorBoldActionComponent, selector: "bb-rich-text-editor-bold-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Bold\"\n  i18n-bbTooltip=\"Bold|Bold action @@bb-rich-text-editor-ui.rich-text-editor-actions.bold\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Bold\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.bold\"\n    [disabled]=\"disabled\"\n    (click)=\"result('bold')\"\n  >\n    <bb-icon-ui name=\"format-bold\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorBoldActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-bold-action',
                        templateUrl: './rich-text-editor-bold-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    var RichTextEditorItalicActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorItalicActionComponent, _super);
        function RichTextEditorItalicActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        return RichTextEditorItalicActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorItalicActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorItalicActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorItalicActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorItalicActionComponent, selector: "bb-rich-text-editor-italic-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Italic\"\n  i18n-bbTooltip=\"Italic|Italic action @@bb-rich-text-editor-ui.rich-text-editor-actions.italic\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Italic\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.italic\"\n    [disabled]=\"disabled\"\n    (click)=\"result('italic')\"\n  >\n    <bb-icon-ui name=\"format-italic\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorItalicActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-italic-action',
                        templateUrl: './rich-text-editor-italic-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    var RichTextEditorUnderlineActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorUnderlineActionComponent, _super);
        function RichTextEditorUnderlineActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        return RichTextEditorUnderlineActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorUnderlineActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorUnderlineActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorUnderlineActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorUnderlineActionComponent, selector: "bb-rich-text-editor-underline-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Underline\"\n  i18n-bbTooltip=\"Underline|Underline action @@bb-rich-text-editor-ui.rich-text-editor-actions.underline\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Underline\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.underline\"\n    [disabled]=\"disabled\"\n    (click)=\"result('underline')\"\n  >\n    <bb-icon-ui name=\"format-underlined\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorUnderlineActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-underline-action',
                        templateUrl: './rich-text-editor-underline-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    var RichTextEditorStrikethroughActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorStrikethroughActionComponent, _super);
        function RichTextEditorStrikethroughActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        return RichTextEditorStrikethroughActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorStrikethroughActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorStrikethroughActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorStrikethroughActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorStrikethroughActionComponent, selector: "bb-rich-text-editor-strikethrough-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Strikethrough\"\n  i18n-bbTooltip=\"Strikethrough|Strikethrough action @@bb-rich-text-editor-ui.rich-text-editor-actions.strikethrough\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Strikethrough\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.strikethrough\"\n    [disabled]=\"disabled\"\n    (click)=\"result('strikeThrough')\"\n  >\n    <bb-icon-ui name=\"format-strikethrough\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorStrikethroughActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-strikethrough-action',
                        templateUrl: './rich-text-editor-strikethrough-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    var RichTextEditorOlistActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorOlistActionComponent, _super);
        function RichTextEditorOlistActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        return RichTextEditorOlistActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorOlistActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorOlistActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorOlistActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorOlistActionComponent, selector: "bb-rich-text-editor-olist-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Ordered List\"\n  i18n-bbTooltip=\"Ordered List|Ordered List action @@bb-rich-text-editor-ui.rich-text-editor-actions.olist\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Ordered List\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.olist\"\n    [disabled]=\"disabled\"\n    (click)=\"result('insertOrderedList')\"\n  >\n    <bb-icon-ui name=\"format-list-numbered\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorOlistActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-olist-action',
                        templateUrl: './rich-text-editor-olist-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    var RichTextEditorUlistActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorUlistActionComponent, _super);
        function RichTextEditorUlistActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        return RichTextEditorUlistActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorUlistActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorUlistActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorUlistActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorUlistActionComponent, selector: "bb-rich-text-editor-ulist-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Unordered List\"\n  i18n-bbTooltip=\"Unordered List|Unordered List action @@bb-rich-text-editor-ui.rich-text-editor-actions.ulist\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Unordered List\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.ulist\"\n    [disabled]=\"disabled\"\n    (click)=\"result('insertUnorderedList')\"\n  >\n    <bb-icon-ui name=\"format-list-bulleted\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorUlistActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-ulist-action',
                        templateUrl: './rich-text-editor-ulist-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    var RichTextEditorParagraphActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorParagraphActionComponent, _super);
        function RichTextEditorParagraphActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        return RichTextEditorParagraphActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorParagraphActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorParagraphActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorParagraphActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorParagraphActionComponent, selector: "bb-rich-text-editor-paragraph-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Paragraph\"\n  i18n-bbTooltip=\"Paragraph|Paragraph action @@bb-rich-text-editor-ui.rich-text-editor-actions.paragraph\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Paragraph\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.paragraph\"\n    [disabled]=\"disabled\"\n    (click)=\"result('formatBlock', '<P>')\"\n  >\n    <bb-icon-ui name=\"subject\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorParagraphActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-paragraph-action',
                        templateUrl: './rich-text-editor-paragraph-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    var RichTextEditorCodeActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorCodeActionComponent, _super);
        function RichTextEditorCodeActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        return RichTextEditorCodeActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorCodeActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorCodeActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorCodeActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorCodeActionComponent, selector: "bb-rich-text-editor-code-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Code\"\n  i18n-bbTooltip=\"Code|Code action @@bb-rich-text-editor-ui.rich-text-editor-actions.code\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Code\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.code\"\n    [disabled]=\"disabled\"\n    (click)=\"result('formatBlock', '<PRE>')\"\n  >\n    <bb-icon-ui name=\"code\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorCodeActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-code-action',
                        templateUrl: './rich-text-editor-code-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    /**
     * @name RichTextEditorLinkActionComponent
     *
     * @dynamic (to suppress error with resolving statics declarations during compilation)
     */
    var RichTextEditorLinkActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorLinkActionComponent, _super);
        function RichTextEditorLinkActionComponent(ma, document) {
            var _this = _super.call(this, ma) || this;
            _this.document = document;
            /**
             * Event emitted after link was added
             */
            _this.linkAdded = new i0.EventEmitter();
            /**
             * Flag to determine whether the add link modal is open
             */
            _this.modalOpened = false;
            /**
             * Selection link url
             */
            _this.selectionUrl = '';
            return _this;
        }
        /**
         * Open add link modal
         */
        RichTextEditorLinkActionComponent.prototype.openModal = function () {
            var _a, _b, _c, _d;
            this.modalOpened = true;
            this.setSelectionData();
            if (((_a = this.selection) === null || _a === void 0 ? void 0 : _a.rangeCount) && ((_b = this.selection) === null || _b === void 0 ? void 0 : _b.rangeCount) > 0) {
                this.selectionUrl =
                    ((_c = this.linkedSelection) === null || _c === void 0 ? void 0 : _c.nodeName) === 'A' && ((_d = this.linkedSelection) === null || _d === void 0 ? void 0 : _d.href) !== ''
                        ? this.linkedSelection.href
                        : 'http://';
            }
        };
        /**
         * On add link modal confirmation
         */
        RichTextEditorLinkActionComponent.prototype.onResult = function () {
            this.restoreSelection();
            this.selectionUrl = this.selectionUrl.replace(/\s/g, '');
            if (this.selectionUrl.length === 0) {
                this.document.execCommand('unlink', false);
            }
            else {
                this.insertLink();
            }
            this.closeModal();
        };
        /**
         * Close add link modal
         */
        RichTextEditorLinkActionComponent.prototype.closeModal = function () {
            this.modalOpened = false;
            this.linkAdded.emit();
        };
        RichTextEditorLinkActionComponent.prototype.setSelectionData = function () {
            var _a;
            this.selection = this.document.getSelection();
            this.range = (_a = this.selection) === null || _a === void 0 ? void 0 : _a.getRangeAt(0);
            this.selectionUrl = '';
        };
        RichTextEditorLinkActionComponent.prototype.restoreSelection = function () {
            var _a, _b;
            if (this.range) {
                (_a = this.selection) === null || _a === void 0 ? void 0 : _a.removeAllRanges();
                (_b = this.selection) === null || _b === void 0 ? void 0 : _b.addRange(this.range);
            }
        };
        RichTextEditorLinkActionComponent.prototype.insertLink = function () {
            var _a;
            if (!/^(http:\/\/|https:\/\/)/.test(this.selectionUrl)) {
                this.selectionUrl = 'http://' + this.selectionUrl;
            }
            if (((_a = this.range) === null || _a === void 0 ? void 0 : _a.toString()) !== '') {
                this.document.execCommand('createLink', false, this.selectionUrl);
            }
            else {
                this.document.execCommand('insertHTML', false, this.linkElement);
            }
        };
        Object.defineProperty(RichTextEditorLinkActionComponent.prototype, "linkElement", {
            get: function () {
                var _a;
                var innerText = ((_a = this.selection) === null || _a === void 0 ? void 0 : _a.toString()) || this.selectionUrl;
                var element = this.document.createElement('a');
                element.setAttribute('href', this.selectionUrl);
                element.setAttribute('target', '_blank');
                element.innerHTML = innerText;
                return element.outerHTML;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RichTextEditorLinkActionComponent.prototype, "linkedSelection", {
            get: function () {
                var _a, _b, _c, _d, _e, _f, _g;
                return (((_c = (_b = (_a = this.range) === null || _a === void 0 ? void 0 : _a.commonAncestorContainer) === null || _b === void 0 ? void 0 : _b.parentElement) === null || _c === void 0 ? void 0 : _c.closest('a')) ||
                    ((_g = (_f = (_e = (_d = this.range) === null || _d === void 0 ? void 0 : _d.commonAncestorContainer) === null || _e === void 0 ? void 0 : _e.children) === null || _f === void 0 ? void 0 : _f[0]) === null || _g === void 0 ? void 0 : _g.closest('a')));
            },
            enumerable: false,
            configurable: true
        });
        return RichTextEditorLinkActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorLinkActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorLinkActionComponent, deps: [{ token: RichTextEditorActionsService }, { token: i13.DOCUMENT }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorLinkActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorLinkActionComponent, selector: "bb-rich-text-editor-link-action", inputs: { contentClassNames: "contentClassNames" }, outputs: { linkAdded: "linkAdded" }, usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Link\"\n  i18n-bbTooltip=\"Link|Link action @@bb-rich-text-editor-ui.rich-text-editor-actions.link\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Link\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.link\"\n    [disabled]=\"disabled\"\n    (click)=\"openModal()\"\n    data-role=\"link-action\"\n  >\n    <bb-icon-ui name=\"link\"></bb-icon-ui>\n  </button>\n</span>\n\n<bb-modal-ui [isOpen]=\"modalOpened\" (cancel)=\"closeModal()\" (confirm)=\"onResult()\">\n  <form data-role=\"add-link-form\">\n    <bb-modal-header-ui\n      title=\"Add link\"\n      i18n-title=\"Add link|Add link title@@bb-rich-text-editor-ui.rich-text-editor-link-modal.title\"\n    ></bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <label\n          class=\"bb-label\"\n          for=\"link-input\"\n          i18n=\"Enter the link|Enter the link title@@bb-rich-text-editor-ui.rich-text-editor-link-modal.input-label\"\n        >\n          Enter the URL Link\n        </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          [(ngModel)]=\"selectionUrl\"\n          name=\"url\"\n          id=\"link-input\"\n          data-role=\"link-input\"\n        />\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui #footerRef data-role=\"link-modal-footer\">\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            (click)=\"onResult()\"\n            type=\"submit\"\n            data-role=\"save-link\"\n            i18n=\"Save a link|Save a link button@@bb-rich-text-editor-ui.rich-text-editor-link-modal.save-button\"\n          >\n            Save Link\n          </button>\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            (click)=\"closeModal()\"\n            color=\"secondary\"\n            data-role=\"cancel-link-saving\"\n            i18n=\"Cancel|Cancel button@@bb-rich-text-editor-ui.rich-text-editor-link-modal.cancel-button\"\n          >\n            Cancel\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </form>\n</bb-modal-ui>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3__namespace$1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i3__namespace$1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i3__namespace$1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i3__namespace$1.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i6__namespace.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i6__namespace.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i6__namespace.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i3__namespace$1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i6__namespace.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i6__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6__namespace.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i3__namespace$1.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorLinkActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-link-action',
                        templateUrl: './rich-text-editor-link-action.component.html',
                    }]
            }], ctorParameters: function () {
            return [{ type: RichTextEditorActionsService }, { type: Document, decorators: [{
                            type: i0.Inject,
                            args: [i13.DOCUMENT]
                        }] }];
        }, propDecorators: { linkAdded: [{
                    type: i0.Output
                }], contentClassNames: [{
                    type: i0.Input
                }] } });

    var RichTextEditorActionsDirective = /** @class */ (function () {
        function RichTextEditorActionsDirective(templateRef) {
            this.templateRef = templateRef;
        }
        return RichTextEditorActionsDirective;
    }());
    RichTextEditorActionsDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorActionsDirective, deps: [{ token: i0__namespace.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    RichTextEditorActionsDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorActionsDirective, selector: "ng-template[bbRichTextEditorActions]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorActionsDirective, decorators: [{
                type: i0.Directive,
                args: [{ selector: 'ng-template[bbRichTextEditorActions]' }]
            }], ctorParameters: function () { return [{ type: i0__namespace.TemplateRef }]; } });
    /**
     * @name RichTextEditorComponent
     *
     * @description
     * Component that provides you input text with editing.
     *
     * @dynamic (to suppress error with resolving Document type during compilation)
     */
    var RichTextEditorComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorComponent, _super);
        function RichTextEditorComponent(cd, domAttributesService, deprecationsService, sanitizer, renderer, document) {
            var _this = _super.call(this, cd, deprecationsService) || this;
            _this.cd = cd;
            _this.domAttributesService = domAttributesService;
            _this.deprecationsService = deprecationsService;
            _this.sanitizer = sanitizer;
            _this.renderer = renderer;
            _this.document = document;
            /**
             * The maxLength for the rich-text-editor component.
             */
            _this.maxLength = Infinity;
            /**
             * The minLength for the rich-text-editor component.
             */
            _this.minLength = 0;
            /**
             * The placeholder for the rich-text-editor component. Defaults to an empty string;
             */
            _this.placeholder = '';
            /**
             * Show/hide message length. Defaults to true;
             */
            _this.counter = true;
            /**
             * Whether the rich-text-editor component is readonly.
             */
            _this.readonly = false;
            /**
             * Placement of the action tooltip relative to the action button: auto | top | bottom | left | right.
             */
            _this.actionsTooltipPlacement = 'auto';
            _this.focused = false;
            _this.hostRef = _this;
            _this.contentClassName = 'bb-rich-text-editor__content';
            _this.mainAreaClassName = 'bb-rich-text-editor__mainarea';
            _this.value = '';
            _this.replaceSpaces = function (value) { return value.replace(/&nbsp;|&#160;/g, ' '); };
            _this.labelId = _this.domAttributesService.generateId();
            return _this;
        }
        RichTextEditorComponent.prototype.onKeyEvent = function ($event) {
            if (this.contentEditable && util.browserIsMsie()) {
                var action = util.getKeyCode($event);
                if (($event.ctrlKey || $event.metaKey) && action === util.KEY_CODES.X) {
                    this.callOnChange();
                }
                if (action === util.KEY_CODES.BACKSPACE || action === util.KEY_CODES.DELETE) {
                    this.callOnChange();
                }
            }
        };
        RichTextEditorComponent.prototype.onPaste = function () {
            if (this.contentEditable && util.browserIsMsie()) {
                this.callOnChange();
            }
        };
        RichTextEditorComponent.prototype.onClickEvent = function ($event) {
            var _a, _b, _c, _d;
            if ((_a = this.document.getSelection()) === null || _a === void 0 ? void 0 : _a.rangeCount) {
                this.range = (_b = this.document.getSelection()) === null || _b === void 0 ? void 0 : _b.getRangeAt(0);
            }
            if (($event === null || $event === void 0 ? void 0 : $event.target).closest('button') && ((_c = this.range) === null || _c === void 0 ? void 0 : _c.endOffset) === ((_d = this.range) === null || _d === void 0 ? void 0 : _d.startOffset)) {
                this.restoreCaretPosition(this.contentEditableElement);
                this.callOnChange();
            }
        };
        RichTextEditorComponent.prototype.writeValue = function (inputValue) {
            if (this.contentEditable) {
                var finalValue = this.parseValue(inputValue || '');
                this.renderer.setProperty(this.contentEditable.nativeElement, 'innerHTML', finalValue);
                _super.prototype.onValueChange.call(this, finalValue);
            }
            this.cd.markForCheck();
        };
        RichTextEditorComponent.prototype.callOnChange = function () {
            var finalValue = (this.contentEditable && this.parseValue(this.contentEditable.nativeElement.innerHTML)) || '';
            _super.prototype.onValueChange.call(this, finalValue);
        };
        RichTextEditorComponent.prototype.validate = function (control) {
            if (control) {
                console.warn('[bb-rich-text-editor-ui]: "control" argument in "validate" method is deprecated and will be removed ' +
                    'in the next major release');
            }
            var value = this.getMessageText() || null;
            var validators = [i6.Validators.maxLength(this.maxLength), i6.Validators.minLength(this.minLength)];
            if (this.required) {
                validators.push(this.customRequiredValidation.bind(this));
            }
            var compose = i6.Validators.compose(validators);
            return compose && compose({ value: value });
        };
        RichTextEditorComponent.prototype.labelClick = function () {
            if (this.contentEditable) {
                this.contentEditable.nativeElement.focus();
            }
        };
        RichTextEditorComponent.prototype.callOnFocus = function () {
            _super.prototype.onFocus.call(this);
            this.focused = true;
        };
        RichTextEditorComponent.prototype.callOnBlur = function () {
            var _this = this;
            setTimeout(function () {
                _super.prototype.onBlur.call(_this);
                _this.focused = false;
                _this.cd.markForCheck();
            });
        };
        RichTextEditorComponent.prototype.getMessageText = function (content) {
            if (content) {
                console.warn('[bb-rich-text-editor-ui]: "content" argument in "getMessageText" method is deprecated and will ' +
                    'be removed in the next major release');
            }
            return this.contentEditableElement.textContent || '';
        };
        RichTextEditorComponent.prototype.showCounter = function () {
            return this.counter && !!this.maxLength && Number.isFinite(this.maxLength);
        };
        RichTextEditorComponent.prototype.linkAdded = function () {
            this.callOnChange();
            this.restoreCaretPosition(this.contentEditableElement);
        };
        Object.defineProperty(RichTextEditorComponent.prototype, "contentEditableElement", {
            get: function () {
                var _a;
                return (_a = this.contentEditable) === null || _a === void 0 ? void 0 : _a.nativeElement;
            },
            enumerable: false,
            configurable: true
        });
        RichTextEditorComponent.prototype.parseValue = function (value) {
            var isHtml = /<\/?[a-z][\s\S]*>/i.test(value);
            return this.replaceSpaces(isHtml ? this.sanitizer.sanitize(i0.SecurityContext.HTML, value) || '' : value);
        };
        RichTextEditorComponent.prototype.customRequiredValidation = function () {
            var value = this.getMessageText();
            if (!value || (typeof value === 'string' && !value.trim())) {
                return {
                    required: true,
                };
            }
            return null;
        };
        RichTextEditorComponent.prototype.restoreCaretPosition = function (el) {
            var _a, _b;
            var emptyRange = document.createRange();
            var selection = window.getSelection();
            var isEditorSelection = !!((_b = (_a = this.range) === null || _a === void 0 ? void 0 : _a.endContainer.parentElement) === null || _b === void 0 ? void 0 : _b.closest("." + this.contentClassName));
            emptyRange.selectNodeContents(el);
            emptyRange.collapse(false);
            selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();
            if (isEditorSelection) {
                selection === null || selection === void 0 ? void 0 : selection.addRange(this.range);
            }
            else {
                selection === null || selection === void 0 ? void 0 : selection.addRange(emptyRange);
            }
        };
        return RichTextEditorComponent;
    }(baseClasses.InputBaseComponent));
    RichTextEditorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorComponent, deps: [{ token: i0__namespace.ChangeDetectorRef }, { token: i1__namespace.DomAttributesService }, { token: i2__namespace$1.DeprecationsService }, { token: i3__namespace$2.DomSanitizer }, { token: i0__namespace.Renderer2 }, { token: i13.DOCUMENT }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorComponent, selector: "bb-rich-text-editor-ui", inputs: { maxLength: "maxLength", minLength: "minLength", placeholder: "placeholder", counter: "counter", readonly: "readonly", actionsTooltipPlacement: "actionsTooltipPlacement" }, host: { listeners: { "keydown": "onKeyEvent($event)", "keyup": "onKeyEvent($event)", "paste": "onPaste()", "mouseup": "onClickEvent($event)" }, properties: { "class.is-focused": "this.focused" } }, providers: [
            {
                provide: i6.NG_VALUE_ACCESSOR,
                useExisting: i0.forwardRef(function () { return RichTextEditorComponent; }),
                multi: true,
            },
            {
                provide: i6.NG_VALIDATORS,
                useExisting: i0.forwardRef(function () { return RichTextEditorComponent; }),
                multi: true,
            },
        ], queries: [{ propertyName: "actions", first: true, predicate: RichTextEditorActionsDirective, descendants: true, static: true }], viewQueries: [{ propertyName: "contentEditable", first: true, predicate: ["contenteditable"], descendants: true, static: true }], usesInheritance: true, ngImport: i0__namespace, template: "<div class=\"bb-rich-text-editor\">\n  <label class=\"bb-rich-text-editor__label\" [attr.id]=\"labelId\" for=\"{{ id }}\" *ngIf=\"label\" (click)=\"labelClick()\">{{\n    label\n  }}</label>\n  <div\n    tabindex=\"0\"\n    role=\"textbox\"\n    aria-label=\"bb-rich-text-editor-textbox\"\n    aria-labelledby=\"bb-rich-text-editor-textbox\"\n    class=\"form-control bb-rich-text-editor__actionbar\"\n    [ngClass]=\"{ 'bb-rich-text-editor--disabled': readonly || disabled }\"\n  >\n    <div [ngClass]=\"mainAreaClassName\">\n      <div\n        #contenteditable\n        [ngClass]=\"contentClassName\"\n        [attr.contenteditable]=\"!readonly && !disabled\"\n        [attr.placeholder]=\"placeholder\"\n        [attr.readonly]=\"readonly\"\n        [attr.aria-label]=\"ariaLabel || label\"\n        [attr.aria-labelledby]=\"ariaLabelledby ? ariaLabelledby : label ? labelId : null\"\n        [attr.aria-describedby]=\"ariaDescribedby ? ariaDescribedby : null\"\n        (input)=\"callOnChange()\"\n        (blur)=\"callOnBlur()\"\n        (focus)=\"callOnFocus()\"\n      ></div>\n      <div aria-live=\"assertive\" class=\"sr-only\">\n        <span\n          aria-atomic=\"true\"\n          role=\"log\"\n          [attr.aria-hidden]=\"getMessageText().length <= maxLength - 5\"\n          i18n=\"\n            Char counter Length Warning|String above to reached 'maxLength' characters.\n            @@bb-rich-text-editor-ui.length-warning\"\n          >You typed {{ getMessageText().length }} of {{ maxLength }} allowed characters in this field.</span\n        >\n      </div>\n\n      <ng-container *ngIf=\"actions; else defaultActions\">\n        <div class=\"bb-rich-text-editor-buttons\">\n          <ng-container *ngTemplateOutlet=\"actions.templateRef; context: hostRef\"></ng-container>\n        </div>\n      </ng-container>\n\n      <textarea id=\"{{ id }}\" class=\"bb-rich-text-editor__textarea bb-rich-text-editor__textarea--hidden\"></textarea>\n    </div>\n  </div>\n  <p\n    *ngIf=\"showCounter()\"\n    class=\"bb-rich-text-editor__char-counter\"\n    data-role=\"char-counter\"\n    [ngClass]=\"{ 'text-danger': getMessageText().length > maxLength }\"\n  >\n    <span>{{ getMessageText().length }} / {{ maxLength }}</span>\n    <span\n      *ngIf=\"getMessageText().length > maxLength\"\n      i18n=\"Limit exceeded text error@@bb-rich-text-editor-ui.limitExceeded\"\n      >, limit exceeded</span\n    >\n  </p>\n</div>\n\n<ng-template #defaultActions bbRichTextEditorActions>\n  <bb-rich-text-editor-bold-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [disabled]=\"disabled || readonly\"\n  ></bb-rich-text-editor-bold-action>\n  <bb-rich-text-editor-italic-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [disabled]=\"disabled || readonly\"\n  ></bb-rich-text-editor-italic-action>\n  <bb-rich-text-editor-underline-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [disabled]=\"disabled || readonly\"\n  ></bb-rich-text-editor-underline-action>\n  <bb-rich-text-editor-strikethrough-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [disabled]=\"disabled || readonly\"\n  >\n  </bb-rich-text-editor-strikethrough-action>\n  <span role=\"separator\" class=\"bb-rich-text-editor__toolbar-separator\"></span>\n  <bb-rich-text-editor-olist-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [disabled]=\"disabled || readonly\"\n  ></bb-rich-text-editor-olist-action>\n  <bb-rich-text-editor-ulist-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [disabled]=\"disabled || readonly\"\n  >\n  </bb-rich-text-editor-ulist-action>\n  <span role=\"separator\" class=\"bb-rich-text-editor__toolbar-separator\"></span>\n  <bb-rich-text-editor-paragraph-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [disabled]=\"disabled || readonly\"\n  ></bb-rich-text-editor-paragraph-action>\n  <bb-rich-text-editor-code-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [disabled]=\"disabled || readonly\"\n  ></bb-rich-text-editor-code-action>\n  <bb-rich-text-editor-link-action\n    [actionsTooltipPlacement]=\"actionsTooltipPlacement\"\n    [contentClassNames]=\"[contentClassName, mainAreaClassName]\"\n    [disabled]=\"disabled || readonly\"\n    (linkAdded)=\"linkAdded()\"\n  ></bb-rich-text-editor-link-action>\n</ng-template>\n", components: [{ type: RichTextEditorBoldActionComponent, selector: "bb-rich-text-editor-bold-action" }, { type: RichTextEditorItalicActionComponent, selector: "bb-rich-text-editor-italic-action" }, { type: RichTextEditorUnderlineActionComponent, selector: "bb-rich-text-editor-underline-action" }, { type: RichTextEditorStrikethroughActionComponent, selector: "bb-rich-text-editor-strikethrough-action" }, { type: RichTextEditorOlistActionComponent, selector: "bb-rich-text-editor-olist-action" }, { type: RichTextEditorUlistActionComponent, selector: "bb-rich-text-editor-ulist-action" }, { type: RichTextEditorParagraphActionComponent, selector: "bb-rich-text-editor-paragraph-action" }, { type: RichTextEditorCodeActionComponent, selector: "bb-rich-text-editor-code-action" }, { type: RichTextEditorLinkActionComponent, selector: "bb-rich-text-editor-link-action", inputs: ["contentClassNames"], outputs: ["linkAdded"] }], directives: [{ type: i13__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i13__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i13__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: RichTextEditorActionsDirective, selector: "ng-template[bbRichTextEditorActions]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-ui',
                        templateUrl: './rich-text-editor.component.html',
                        providers: [
                            {
                                provide: i6.NG_VALUE_ACCESSOR,
                                useExisting: i0.forwardRef(function () { return RichTextEditorComponent; }),
                                multi: true,
                            },
                            {
                                provide: i6.NG_VALIDATORS,
                                useExisting: i0.forwardRef(function () { return RichTextEditorComponent; }),
                                multi: true,
                            },
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ChangeDetectorRef }, { type: i1__namespace.DomAttributesService }, { type: i2__namespace$1.DeprecationsService }, { type: i3__namespace$2.DomSanitizer }, { type: i0__namespace.Renderer2 }, { type: Document, decorators: [{
                            type: i0.Inject,
                            args: [i13.DOCUMENT]
                        }] }];
        }, propDecorators: { maxLength: [{
                    type: i0.Input
                }], minLength: [{
                    type: i0.Input
                }], placeholder: [{
                    type: i0.Input
                }], counter: [{
                    type: i0.Input
                }], readonly: [{
                    type: i0.Input
                }], actionsTooltipPlacement: [{
                    type: i0.Input
                }], actions: [{
                    type: i0.ContentChild,
                    args: [RichTextEditorActionsDirective, { static: true }]
                }], contentEditable: [{
                    type: i0.ViewChild,
                    args: ['contenteditable', { static: true }]
                }], focused: [{
                    type: i0.HostBinding,
                    args: ['class.is-focused']
                }], onKeyEvent: [{
                    type: i0.HostListener,
                    args: ['keydown', ['$event']]
                }, {
                    type: i0.HostListener,
                    args: ['keyup', ['$event']]
                }], onPaste: [{
                    type: i0.HostListener,
                    args: ['paste']
                }], onClickEvent: [{
                    type: i0.HostListener,
                    args: ['mouseup', ['$event']]
                }] } });

    var RichTextEditorImageActionComponent = /** @class */ (function (_super) {
        __extends(RichTextEditorImageActionComponent, _super);
        function RichTextEditorImageActionComponent(ma) {
            return _super.call(this, ma) || this;
        }
        RichTextEditorImageActionComponent.prototype.onResult = function () {
            var url = window.prompt('Enter the image URL');
            if (url)
                _super.prototype.result.call(this, 'insertImage', url);
        };
        return RichTextEditorImageActionComponent;
    }(RichTextEditorActionsComponent));
    RichTextEditorImageActionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorImageActionComponent, deps: [{ token: RichTextEditorActionsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorImageActionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorImageActionComponent, selector: "bb-rich-text-editor-image-action", usesInheritance: true, ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Image\"\n  i18n-bbTooltip=\"Image|Image action @@bb-rich-text-editor-ui.rich-text-editor-actions.image\"\n  container=\"body\"\n  triggers=\"hover focus\"\n  [placement]=\"actionsTooltipPlacement\"\n>\n  <button\n    bbButton\n    [circle]=\"true\"\n    color=\"link-dark\"\n    aria-label=\"Image\"\n    i18n-aria-label=\"@@bb-rich-text-editor-ui.rich-text-editor-actions.image\"\n    [disabled]=\"disabled\"\n    (click)=\"onResult()\"\n  >\n    <bb-icon-ui name=\"image\"></bb-icon-ui>\n  </button>\n</span>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorImageActionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-image-action',
                        templateUrl: './rich-text-editor-image-action.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: RichTextEditorActionsService }]; } });

    var RichTextEditorModule = /** @class */ (function () {
        function RichTextEditorModule() {
        }
        return RichTextEditorModule;
    }());
    RichTextEditorModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    RichTextEditorModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorModule, declarations: [RichTextEditorComponent,
            RichTextEditorActionsDirective,
            RichTextEditorActionsComponent,
            RichTextEditorBoldActionComponent,
            RichTextEditorCodeActionComponent,
            RichTextEditorImageActionComponent,
            RichTextEditorItalicActionComponent,
            RichTextEditorLinkActionComponent,
            RichTextEditorOlistActionComponent,
            RichTextEditorParagraphActionComponent,
            RichTextEditorStrikethroughActionComponent,
            RichTextEditorUlistActionComponent,
            RichTextEditorUnderlineActionComponent], imports: [i13.CommonModule, i4.ButtonModule, i2.IconModule, i3$1.ModalModule, i6.FormsModule, i3.TooltipModule], exports: [RichTextEditorComponent,
            RichTextEditorActionsDirective,
            RichTextEditorActionsComponent,
            RichTextEditorBoldActionComponent,
            RichTextEditorCodeActionComponent,
            RichTextEditorImageActionComponent,
            RichTextEditorItalicActionComponent,
            RichTextEditorLinkActionComponent,
            RichTextEditorOlistActionComponent,
            RichTextEditorParagraphActionComponent,
            RichTextEditorStrikethroughActionComponent,
            RichTextEditorUlistActionComponent,
            RichTextEditorUnderlineActionComponent] });
    RichTextEditorModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorModule, providers: [RichTextEditorActionsService], imports: [[i13.CommonModule, i4.ButtonModule, i2.IconModule, i3$1.ModalModule, i6.FormsModule, i3.TooltipModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i13.CommonModule, i4.ButtonModule, i2.IconModule, i3$1.ModalModule, i6.FormsModule, i3.TooltipModule],
                        declarations: [
                            RichTextEditorComponent,
                            RichTextEditorActionsDirective,
                            RichTextEditorActionsComponent,
                            RichTextEditorBoldActionComponent,
                            RichTextEditorCodeActionComponent,
                            RichTextEditorImageActionComponent,
                            RichTextEditorItalicActionComponent,
                            RichTextEditorLinkActionComponent,
                            RichTextEditorOlistActionComponent,
                            RichTextEditorParagraphActionComponent,
                            RichTextEditorStrikethroughActionComponent,
                            RichTextEditorUlistActionComponent,
                            RichTextEditorUnderlineActionComponent,
                        ],
                        exports: [
                            RichTextEditorComponent,
                            RichTextEditorActionsDirective,
                            RichTextEditorActionsComponent,
                            RichTextEditorBoldActionComponent,
                            RichTextEditorCodeActionComponent,
                            RichTextEditorImageActionComponent,
                            RichTextEditorItalicActionComponent,
                            RichTextEditorLinkActionComponent,
                            RichTextEditorOlistActionComponent,
                            RichTextEditorParagraphActionComponent,
                            RichTextEditorStrikethroughActionComponent,
                            RichTextEditorUlistActionComponent,
                            RichTextEditorUnderlineActionComponent,
                        ],
                        providers: [RichTextEditorActionsService],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.RichTextEditorActionsComponent = RichTextEditorActionsComponent;
    exports.RichTextEditorActionsDirective = RichTextEditorActionsDirective;
    exports.RichTextEditorBoldActionComponent = RichTextEditorBoldActionComponent;
    exports.RichTextEditorCodeActionComponent = RichTextEditorCodeActionComponent;
    exports.RichTextEditorComponent = RichTextEditorComponent;
    exports.RichTextEditorImageActionComponent = RichTextEditorImageActionComponent;
    exports.RichTextEditorItalicActionComponent = RichTextEditorItalicActionComponent;
    exports.RichTextEditorLinkActionComponent = RichTextEditorLinkActionComponent;
    exports.RichTextEditorModule = RichTextEditorModule;
    exports.RichTextEditorOlistActionComponent = RichTextEditorOlistActionComponent;
    exports.RichTextEditorParagraphActionComponent = RichTextEditorParagraphActionComponent;
    exports.RichTextEditorStrikethroughActionComponent = RichTextEditorStrikethroughActionComponent;
    exports.RichTextEditorUlistActionComponent = RichTextEditorUlistActionComponent;
    exports.RichTextEditorUnderlineActionComponent = RichTextEditorUnderlineActionComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-rich-text-editor.umd.js.map
