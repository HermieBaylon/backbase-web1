{"version":3,"file":"backbase-ui-ang-phone-number-format-pipe.umd.js","sources":["../../../../libs/ui-ang/phone-number-format-pipe/phone-number-format.pipe.ts","../../../../libs/ui-ang/phone-number-format-pipe/phone-number-format.module.ts","../../../../libs/ui-ang/phone-number-format-pipe/backbase-ui-ang-phone-number-format-pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { AsYouType, CountryCode, parsePhoneNumber } from '@backbase/phone-number-lib';\n\nexport { CountryCode } from '@backbase/phone-number-lib';\n\n/**\n * @name PhoneNumberFormatPipe\n *\n * @description\n * Pipe for formatting phone numbers to various international formats\n */\n@Pipe({\n  name: 'phoneNumber',\n})\nexport class PhoneNumberPipe implements PipeTransform {\n  /**\n   * @name PhoneNumberFormatPipe#transform\n   * @param value - the phone number string to transform\n   * @param countryCode - the two letter CDLR code for the country to format to\n   * @param isInputElement - whether the value was entered in an input element\n   *\n   * @description\n   * Formats a phone number to any entered country code international format\n   */\n  transform(value: string | number, countryCode: CountryCode, isInputElement?: boolean): string {\n    try {\n      if (isInputElement) {\n        value = new AsYouType(countryCode).input(value.toString());\n      }\n\n      return parsePhoneNumber(value.toString(), countryCode).formatInternational();\n    } catch (e) {\n      return value.toString();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PhoneNumberPipe } from './phone-number-format.pipe';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PhoneNumberPipe],\n  exports: [PhoneNumberPipe],\n})\nexport class PhoneNumberModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["AsYouType","parsePhoneNumber","i0","Pipe","CommonModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAKA;;;;;IAKG;AAIH,QAAA,eAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,eAAA,GAAA;;IACE;;;;;;;;IAQG;IACH,IAAA,eAAA,CAAA,SAAA,CAAA,SAAS,GAAT,UAAU,KAAsB,EAAE,WAAwB,EAAE,cAAwB,EAAA;YAClF,IAAI;IACF,YAAA,IAAI,cAAc,EAAE;IAClB,gBAAA,KAAK,GAAG,IAAIA,wBAAS,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC5D,aAAA;IAED,YAAA,OAAOC,+BAAgB,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC,mBAAmB,EAAE,CAAC;IAC9E,SAAA;IAAC,QAAA,OAAO,CAAC,EAAE;IACV,YAAA,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;IACzB,SAAA;SACF,CAAA;;;uIApBU,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAC,aAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;qIAAf,eAAe,EAAA,IAAA,EAAA,aAAA,EAAA,CAAA,CAAA;sHAAf,eAAe,EAAA,UAAA,EAAA,CAAA;sBAH3BC,OAAI;IAAC,YAAA,IAAA,EAAA,CAAA;IACJ,oBAAA,IAAI,EAAE,aAAa;qBACpB,CAAA;;;ACHD,QAAA,iBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,iBAAA,GAAA;;;;yIAAa,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAD,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;IAAjB,iBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,iBAAiB,EAHb,YAAA,EAAA,CAAA,eAAe,CADpB,EAAA,OAAA,EAAA,CAAAE,mBAAY,aAEZ,eAAe,CAAA,EAAA,CAAA,CAAA;0IAEd,iBAAiB,EAAA,OAAA,EAAA,CAJnB,CAACA,mBAAY,CAAC,CAAA,EAAA,CAAA,CAAA;sHAIZ,iBAAiB,EAAA,UAAA,EAAA,CAAA;sBAL7BC,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACR,OAAO,EAAE,CAACD,mBAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,eAAe,CAAC;wBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;qBAC3B,CAAA;;;ICTD;;IAEG;;;;;;;;;;;"}