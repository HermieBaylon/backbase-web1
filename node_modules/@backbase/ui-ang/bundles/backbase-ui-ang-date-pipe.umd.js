(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/date-pipe', ['exports', '@angular/common', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"]["date-pipe"] = {}), global.ng.common, global.ng.core));
})(this, (function (exports, common, i0) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    /**
     * @name bbDate
     *
     * @description
     * Pipe for formatting dates
     */
    var BbDatePipe = /** @class */ (function () {
        function BbDatePipe(locale) {
            this.locale = locale;
        }
        /**
         * @name BbDatePipe#transform
         * @param value - the date that should be formatted
         * @param format - the format type for the date to be formatted
         * @param timezone - used for formatting the time
         * @param locale - locale to use for formatting
         *
         *
         * @description
         * Depending on format type, formats a date
         * Custom format is called with bbShort,
         * and formats to 'MMMM d, y at HH:mm',
         * otherwise uses the predifined angular formats
         *
         */
        BbDatePipe.prototype.transform = function (value, format, timezone, locale) {
            if (format === void 0) { format = 'mediumDate'; }
            if (format === 'bbShort') {
                var localeFormat = common.getLocaleDateTimeFormat(this.locale, common.FormatWidth.Long);
                var dateFormatted = common.formatDate(value, 'MMMM d, y', this.locale, timezone);
                var timeFormatted = common.formatDate(value, 'HH:mm', this.locale, timezone);
                return localeFormat.replace(/'/g, '').replace('{1}', dateFormatted).replace('{0}', timeFormatted);
            }
            if (value == null || value === '' || value !== value)
                return null;
            try {
                return common.formatDate(value, format, locale || this.locale, timezone);
            }
            catch (error) {
                throw Error("InvalidPipeArgument: '" + error.message + "' for pipe BbDatePipe");
            }
        };
        return BbDatePipe;
    }());
    BbDatePipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BbDatePipe, deps: [{ token: i0.LOCALE_ID }], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    BbDatePipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BbDatePipe, name: "bbDate" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BbDatePipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'bbDate',
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.LOCALE_ID]
                        }] }];
        } });

    var BbDatePipeModule = /** @class */ (function () {
        function BbDatePipeModule() {
        }
        return BbDatePipeModule;
    }());
    BbDatePipeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BbDatePipeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    BbDatePipeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BbDatePipeModule, declarations: [BbDatePipe], imports: [common.CommonModule], exports: [BbDatePipe] });
    BbDatePipeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BbDatePipeModule, imports: [[common.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BbDatePipeModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule],
                        declarations: [BbDatePipe],
                        exports: [BbDatePipe],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BbDatePipe = BbDatePipe;
    exports.BbDatePipeModule = BbDatePipeModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-date-pipe.umd.js.map
