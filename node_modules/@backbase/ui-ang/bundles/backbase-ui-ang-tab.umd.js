(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/tab', ['exports', '@angular/core', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"].tab = {}), global.ng.core, global.ng.common));
})(this, (function (exports, i0, i1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /**
     * TabComponent represents Tab item
     * that should be used inside tab group component
     */
    var TabComponent = /** @class */ (function () {
        function TabComponent() {
        }
        Object.defineProperty(TabComponent.prototype, "template", {
            /**
             * Getter for the template attached to this component
             */
            get: function () {
                return this.defaultTemplate;
            },
            enumerable: false,
            configurable: true
        });
        return TabComponent;
    }());
    TabComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TabComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TabComponent, selector: "bb-tab-ui", viewQueries: [{ propertyName: "defaultTemplate", first: true, predicate: ["tabItemTemplate"], descendants: true, static: true }], ngImport: i0__namespace, template: "<ng-template #tabItemTemplate>\n  <ng-content></ng-content>\n</ng-template>\n" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-tab-ui',
                        templateUrl: './tab.component.html',
                    }]
            }], propDecorators: { defaultTemplate: [{
                    type: i0.ViewChild,
                    args: ['tabItemTemplate', { static: true }]
                }] } });

    /**
     * TabGroupComponent represents component that is used
     * as a wrapper for tab item components. It tracks user interaction and
     * notifies parent upon selection change
     */
    var TabGroupComponent = /** @class */ (function () {
        function TabGroupComponent() {
            /**
             * Event (Output) that emits new value once tab item selection has changed.
             * As a parameter it provides index of newly selected item
             */
            this.select = new i0.EventEmitter();
            /**
             * Keeps track of currently active tab item index
             */
            this.activeIndexValue = 0;
        }
        Object.defineProperty(TabGroupComponent.prototype, "initialSelection", {
            /**
             * Setter (Input) for initial tab item selection
             *
             * @param initialSelection Index of initially selected tab item
             */
            set: function (initSelection) {
                this.activeIndexValue = initSelection || 0;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TabGroupComponent.prototype, "activeIndex", {
            /**
             * Getter for index of currently active tab item
             */
            get: function () {
                return this.activeIndexValue;
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Internal handler for clicks on tab items
         *
         * @param index Index of element that has been clicked
         */
        TabGroupComponent.prototype.onClick = function (event, index) {
            event.preventDefault();
            if (this.activeIndex === index) {
                return;
            }
            this.activeIndexValue = index;
            this.select.emit(index);
        };
        return TabGroupComponent;
    }());
    TabGroupComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabGroupComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TabGroupComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TabGroupComponent, selector: "bb-tab-group-ui", inputs: { initialSelection: "initialSelection" }, outputs: { select: "select" }, queries: [{ propertyName: "items", predicate: TabComponent }], ngImport: i0__namespace, template: "<div class=\"nav nav-tabs\" role=\"tablist\">\n  <div *ngFor=\"let item of items; let i = index\" class=\"nav-item\">\n    <a href=\"#\" class=\"nav-link\" role=\"tab\" [ngClass]=\"{ active: i === activeIndex }\" (click)=\"onClick($event, i)\">\n      <ng-container *ngTemplateOutlet=\"item.template\"></ng-container>\n    </a>\n  </div>\n</div>\n", directives: [{ type: i1__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabGroupComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-tab-group-ui',
                        templateUrl: './tab-group.component.html',
                    }]
            }], propDecorators: { initialSelection: [{
                    type: i0.Input
                }], select: [{
                    type: i0.Output
                }], items: [{
                    type: i0.ContentChildren,
                    args: [TabComponent]
                }] } });

    var TabModule = /** @class */ (function () {
        function TabModule() {
        }
        return TabModule;
    }());
    TabModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TabModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabModule, declarations: [TabGroupComponent, TabComponent], imports: [i1.CommonModule], exports: [TabGroupComponent, TabComponent] });
    TabModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabModule, imports: [[i1.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i1.CommonModule],
                        declarations: [TabGroupComponent, TabComponent],
                        exports: [TabGroupComponent, TabComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TabComponent = TabComponent;
    exports.TabGroupComponent = TabGroupComponent;
    exports.TabModule = TabModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-tab.umd.js.map
