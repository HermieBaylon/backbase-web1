{"version":3,"file":"backbase-ui-ang-collapsible-accordion.umd.js","sources":["../../../../libs/ui-ang/collapsible-accordion/collapsible-accordion.component.ts","../../../../libs/ui-ang/collapsible-accordion/collapsible-accordion.component.html","../../../../libs/ui-ang/collapsible-accordion/collapsible-accordion.module.ts","../../../../libs/ui-ang/collapsible-accordion/backbase-ui-ang-collapsible-accordion.ts"],"sourcesContent":["import { AfterContentInit, Component, EventEmitter, Input, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nexport interface ICollapsible extends OnDestroy {\n  toggle: () => void;\n  isOpen: boolean;\n  isOpenChange: EventEmitter<boolean>;\n}\n\n/**\n * @name CollapsibleAccordionComponent\n *\n * @description\n * Component that groups Collapsible components to show them in an accordion fashion.\n * It can assure that only one Collapsible panel can be opened at a time\n */\n@Component({\n  selector: 'bb-collapsible-accordion-ui',\n  templateUrl: 'collapsible-accordion.component.html',\n})\nexport class CollapsibleAccordionComponent implements AfterContentInit, OnDestroy {\n  /**\n   * Assures that only one Collapsible panel can be opened at a time.\n   */\n  @Input() closeOthers = false;\n  /**\n   * When true displays the first panel on load.\n   */\n  @Input() openFirst = false;\n  /**\n   * When true the Accordion will inherit the parent Accordion behaviour.\n   */\n  @Input()\n  set obeyParentAccordion(obey: boolean) {\n    if (!this.parentAccordion) {\n      return;\n    }\n\n    if (obey) {\n      this.parentAccordion.registerNestedAccordion(this);\n    } else {\n      this.parentAccordion.unregisterNestedAccordion(this);\n    }\n  }\n\n  private readonly collapsiblePanels = new Map<ICollapsible, Subscription>();\n  private readonly nestedAccordions = new Set<CollapsibleAccordionComponent>();\n\n  constructor(\n    @Optional()\n    @SkipSelf()\n    private readonly parentAccordion: CollapsibleAccordionComponent,\n  ) {}\n\n  ngOnDestroy() {\n    this.obeyParentAccordion = false;\n  }\n\n  registerNestedAccordion(childAccordion: CollapsibleAccordionComponent) {\n    this.nestedAccordions.add(childAccordion);\n  }\n\n  unregisterNestedAccordion(childAccordion: CollapsibleAccordionComponent) {\n    this.nestedAccordions.delete(childAccordion);\n  }\n\n  registerNestedPanel(panel: ICollapsible) {\n    const subscription = panel.isOpenChange.subscribe(this.closeOtherPanels(panel));\n    this.collapsiblePanels.set(panel, subscription);\n  }\n\n  unregisterNestedPanel(panel: ICollapsible) {\n    const subscription = this.collapsiblePanels.get(panel);\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n    this.collapsiblePanels.delete(panel);\n  }\n\n  expandAll() {\n    if (this.closeOthers) {\n      return;\n    }\n    this.setPanelsState(true);\n    this.setNestedAccordionsState(true);\n  }\n\n  collapseAll() {\n    this.setPanelsState(false);\n    this.setNestedAccordionsState(false);\n  }\n\n  ngAfterContentInit() {\n    if (this.openFirst) {\n      this.collapsiblePanels.keys().next().value.isOpen = true;\n    }\n  }\n\n  private readonly closeOtherPanels = (panel: ICollapsible) => (value: boolean) => {\n    if (!value) {\n      return;\n    }\n\n    if (!this.closeOthers) {\n      return;\n    }\n\n    this.collapsiblePanels.forEach((_, item) => {\n      if (panel !== item) {\n        item.isOpen = false;\n      }\n    });\n  };\n\n  private setPanelsState(isOpen: boolean) {\n    this.collapsiblePanels.forEach((_, panel) => (panel.isOpen = isOpen));\n  }\n\n  private setNestedAccordionsState(isOpen: boolean) {\n    this.nestedAccordions.forEach((accordion) => {\n      if (isOpen) {\n        accordion.expandAll();\n      } else {\n        accordion.collapseAll();\n      }\n    });\n  }\n}\n","<ng-content></ng-content>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CollapsibleAccordionComponent } from './collapsible-accordion.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CollapsibleAccordionComponent],\n  exports: [CollapsibleAccordionComponent],\n})\nexport class CollapsibleAccordionModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0","Component","Optional","SkipSelf","Input","CommonModule","NgModule"],"mappings":"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"}