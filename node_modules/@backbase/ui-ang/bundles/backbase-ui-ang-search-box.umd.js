(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@ng-bootstrap/ng-bootstrap'), require('@backbase/ui-ang/base-classes'), require('@backbase/foundation-ang/future'), require('@backbase/ui-ang/services'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/focus')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/search-box', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@ng-bootstrap/ng-bootstrap', '@backbase/ui-ang/base-classes', '@backbase/foundation-ang/future', '@backbase/ui-ang/services', '@backbase/ui-ang/icon', '@backbase/ui-ang/button', '@backbase/ui-ang/focus'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"]["search-box"] = {}), global.ng.common, global.ng.core, global.ng.forms, global.i7, global.backbase["ui-ang"]["base-classes"], global.i1, global.backbase["ui-ang"].services, global.backbase["ui-ang"].icon, global.backbase["ui-ang"].button, global.backbase["ui-ang"].focus));
})(this, (function (exports, i4, i0, i6, i7, baseClasses, i1, i2, i3, i5, i8) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var SIZE_MEDIUM = baseClasses.defaultSize;
    var SIZE_SMALL = SIZE_MEDIUM / 2;
    var KEYWORD_SMALL = 'sm';
    var KEYWORD_MEDIUM = 'md';
    /**
     * @name SearchBoxComponent
     *
     * @description
     * Component that provides you a search input field.
     *
     * @a11y Current component provide option to pass needed accessibility
     * attributes. You need to take care of properties that are required in your case :
     *  - Set aria-describedby  with an element id that contains a detailed decription about the Search box.
     *  - aria-label or  aria-labelledby can be used to display the label for search box.
     *
     * If  showSearch = true , searchLabel is discernible text for search button.
     * If  showClear = true , clearLabel is discernible text for clear button.
     *
     */
    var SearchBoxComponent = /** @class */ (function (_super) {
        __extends(SearchBoxComponent, _super);
        function SearchBoxComponent(cd, deprecationsService, renderer, domAttrService, elem) {
            var _this = _super.call(this, cd, deprecationsService) || this;
            _this.cd = cd;
            _this.deprecationsService = deprecationsService;
            _this.renderer = renderer;
            _this.domAttrService = domAttrService;
            _this.elem = elem;
            /**
             * The placeholder text to display in the input.
             */
            _this.placeholder = '';
            /**
             * The maximum length of the search text.
             */
            _this.maxLength = '140';
            /**
             * The square border for search box.
             */
            _this.squareBorder = false;
            /**
             * Whether to show the search button icon before the text.
             */
            _this.showSearch = false;
            /**
             * Whether to show the clear button icon after the text.
             */
            _this.showClear = false;
            /**
             * The aria label used when the search button is in focus.
             */
            _this.searchLabel = 'Search button';
            /**
             * The aria label used when the clear button is in focus.
             */
            _this.clearLabel = 'Clear button';
            /**
             * The autocomplete attribute value.
             */
            _this.autocomplete = '';
            /**
             * The event emitter called when a search is submitted.
             */
            _this.submit = new i0.EventEmitter();
            /**
             * The event emitter called when the clear button is clicked.
             */
            _this.clear = new i0.EventEmitter();
            _this.valueChange = _this._valueChange;
            _this.labelId = "bb_searchbox_label_" + _this.id;
            _this.hasAppendContent = true;
            return _this;
        }
        SearchBoxComponent.prototype.onSubmit = function () {
            this.submit.emit(this.value);
        };
        SearchBoxComponent.prototype.ngAfterViewInit = function () {
            var _a;
            this.domAttrService.moveAriaAttributes(this.elem.nativeElement, (_a = this.inputField) === null || _a === void 0 ? void 0 : _a.nativeElement, this.renderer);
            if (this.inputField !== undefined) {
                this.inputField.nativeElement.removeAttribute('aria-multiline');
            }
            if (this.content === undefined) {
                return;
            }
            this.hasAppendContent = this.content.nativeElement && this.content.nativeElement.children.length > 0;
            this.cd.detectChanges();
        };
        SearchBoxComponent.prototype.ngDoCheck = function () {
            var _a;
            if (this.searchBox) {
                var listBoxElem = (_a = this.searchBox.nativeElement) === null || _a === void 0 ? void 0 : _a.querySelector('[role="listbox"]:not([aria-labelledby])');
                if (listBoxElem) {
                    this.renderer.setAttribute(listBoxElem, 'aria-labelledby', this.labelId);
                }
            }
        };
        SearchBoxComponent.prototype.onClear = function () {
            this.value = '';
            if (this.inputField !== undefined) {
                this.inputField.nativeElement.focus();
            }
            this.clear.emit();
        };
        SearchBoxComponent.prototype.onFocus = function () {
            if (this.searchBox === undefined) {
                return;
            }
            this.searchBox.nativeElement.classList.add('bb-focus');
            _super.prototype.onFocus.call(this);
        };
        SearchBoxComponent.prototype.onBlur = function () {
            if (this.searchBox === undefined) {
                return;
            }
            this.searchBox.nativeElement.classList.remove('bb-focus');
            _super.prototype.onBlur.call(this);
        };
        SearchBoxComponent.prototype.isClearVisible = function () {
            return this.showClear && this.value;
        };
        SearchBoxComponent.prototype.focusEditableElement = function () {
            if (this.searchBox) {
                this.searchBox.nativeElement.focus();
            }
        };
        SearchBoxComponent.prototype.getKeywordBySize = function (size) {
            if (size <= SIZE_SMALL) {
                return KEYWORD_SMALL;
            }
            else {
                return KEYWORD_MEDIUM;
            }
        };
        SearchBoxComponent.prototype.getSizeByKeyword = function (keyword) {
            var _c;
            var sizeKeywords = (_c = {},
                _c[KEYWORD_SMALL] = SIZE_SMALL,
                _c[KEYWORD_MEDIUM] = SIZE_MEDIUM,
                _c);
            return typeof keyword === 'string' && sizeKeywords.hasOwnProperty(keyword) ? sizeKeywords[keyword] : undefined;
        };
        SearchBoxComponent.prototype.onSelect = function (event) {
            var _a, _b;
            return (_b = (_a = this.typeaheadOptions) === null || _a === void 0 ? void 0 : _a.selectItem) === null || _b === void 0 ? void 0 : _b.call(_a, event);
        };
        return SearchBoxComponent;
    }(baseClasses.InputBaseComponent));
    SearchBoxComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxComponent, deps: [{ token: i0__namespace.ChangeDetectorRef }, { token: i1__namespace.DeprecationsService }, { token: i0__namespace.Renderer2 }, { token: i2__namespace.DomAttributesService }, { token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    SearchBoxComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SearchBoxComponent, selector: "bb-search-box-ui", inputs: { placeholder: "placeholder", maxLength: "maxLength", squareBorder: "squareBorder", typeaheadOptions: "typeaheadOptions", showSearch: "showSearch", showClear: "showClear", searchLabel: "searchLabel", clearLabel: "clearLabel", autocomplete: "autocomplete" }, outputs: { submit: "submit", clear: "clear", valueChange: "valueChange" }, providers: [
            {
                provide: i6.NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: i0.forwardRef(function () { return SearchBoxComponent; }),
            },
        ], viewQueries: [{ propertyName: "content", first: true, predicate: ["content"], descendants: true }, { propertyName: "searchBox", first: true, predicate: ["searchBox"], descendants: true, static: true }, { propertyName: "inputField", first: true, predicate: ["inputField"], descendants: true }], usesInheritance: true, ngImport: i0__namespace, template: "<label *ngIf=\"label\" for=\"{{ id }}\" [attr.id]=\"labelId\" (click)=\"onFocus()\">{{ label }}</label>\n<div\n  #searchBox\n  role=\"search\"\n  class=\"bb-search-box input-group\"\n  [ngClass]=\"[\n    squareBorder ? 'rounded' : '',\n    showSearch ? 'bb-search-box--has-search bb-search-box-search' : '',\n    showSearch || showClear ? 'bb-search-box-visible' : '',\n    isClearVisible() ? 'bb-search-box--has-clear' : '',\n    typeaheadOptions && typeaheadOptions.groupCssClasses ? typeaheadOptions.groupCssClasses : '',\n    getKeywordBySize(size) ? 'bb-search-box--' + getKeywordBySize(size) : ''\n  ]\"\n>\n  <div class=\"bb-search-box__search-button input-group-prepend\" *ngIf=\"showSearch\">\n    <button\n      bbButton\n      [attr.data-role]=\"'bb-search-button'\"\n      (click)=\"onSubmit()\"\n      color=\"link\"\n      [buttonSize]=\"getKeywordBySize(size)\"\n      [attr.aria-label]=\"searchLabel\"\n      [disabled]=\"disabled\"\n    >\n      <bb-icon-ui name=\"search\" [size]=\"size\"></bb-icon-ui>\n    </button>\n  </div>\n  <ng-container *ngIf=\"typeaheadOptions; else simpleSearch\">\n    <input\n      #inputField\n      type=\"search\"\n      id=\"{{ id }}\"\n      class=\"bb-search-box__input form-control\"\n      [ngClass]=\"[size ? 'form-control-' + getKeywordBySize(size) : '']\"\n      [placeholder]=\"placeholder\"\n      [readOnly]=\"readonly\"\n      [disabled]=\"disabled\"\n      [attr.aria-autocomplete]=\"ariaAutocomplete\"\n      [attr.aria-controls]=\"ariaControls\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-describedby]=\"ariaDescribedby\"\n      [attr.aria-labelledby]=\"ariaLabelledby\"\n      [attr.aria-expanded]=\"ariaExpanded\"\n      [attr.role]=\"role\"\n      [attr.aria-invalid]=\"ariaInvalid\"\n      [attr.aria-owns]=\"ariaOwns\"\n      [attr.aria-activedescendant]=\"ariaActivedescendant\"\n      [attr.maxlength]=\"maxLength\"\n      [ngModel]=\"value\"\n      (ngModelChange)=\"onValueChange($event)\"\n      [ngbTypeahead]=\"typeaheadOptions?.ngbTypeahead\"\n      [editable]=\"typeaheadOptions?.editable !== false\"\n      [focusFirst]=\"typeaheadOptions?.focusFirst !== false\"\n      [showHint]=\"typeaheadOptions?.showHint === true\"\n      [placement]=\"typeaheadOptions?.placement || 'bottom-left'\"\n      [inputFormatter]=\"typeaheadOptions?.inputFormatter\"\n      [resultFormatter]=\"typeaheadOptions?.resultFormatter\"\n      [resultTemplate]=\"typeaheadOptions?.resultTemplate\"\n      [required]=\"required\"\n      [bbFocus]=\"autofocus\"\n      (selectItem)=\"onSelect($event)\"\n      (focus)=\"onFocus()\"\n      (blur)=\"onBlur()\"\n      (keyup.enter)=\"onSubmit()\"\n      [attr.data-role]=\"'search-input'\"\n      [autocomplete]=\"autocomplete\"\n    />\n  </ng-container>\n\n  <div class=\"bb-search-box__clear-button input-group-append\" *ngIf=\"isClearVisible()\">\n    <button\n      bbButton\n      [attr.data-role]=\"'bb-clear-button'\"\n      (click)=\"onClear()\"\n      color=\"link\"\n      [attr.aria-label]=\"clearLabel\"\n      [buttonSize]=\"getKeywordBySize(size)\"\n      [disabled]=\"disabled\"\n    >\n      <bb-icon-ui name=\"cancel\" size=\"sm\"></bb-icon-ui>\n    </button>\n  </div>\n  <div *ngIf=\"hasAppendContent\" class=\"bb-search-box__append-content input-group-append\" #content>\n    <ng-content></ng-content>\n  </div>\n</div>\n\n<ng-template #simpleSearch>\n  <input\n    #inputField\n    type=\"search\"\n    [attr.id]=\"id\"\n    [attr.aria-autocomplete]=\"ariaAutocomplete\"\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-describedby]=\"ariaDescribedby\"\n    [attr.aria-labelledby]=\"ariaLabelledby\"\n    [attr.aria-expanded]=\"ariaExpanded\"\n    [attr.role]=\"role\"\n    [attr.aria-invalid]=\"ariaInvalid\"\n    [attr.aria-owns]=\"ariaOwns\"\n    [attr.aria-activedescendant]=\"ariaActivedescendant\"\n    class=\"bb-search-box__simple-input form-control\"\n    [placeholder]=\"placeholder\"\n    [attr.maxlength]=\"maxLength\"\n    [ngModel]=\"value\"\n    [readOnly]=\"readonly\"\n    [required]=\"required\"\n    [disabled]=\"disabled\"\n    [bbFocus]=\"autofocus\"\n    (ngModelChange)=\"onValueChange($event)\"\n    (keyup.enter)=\"onSubmit()\"\n    (focus)=\"onFocus()\"\n    (blur)=\"onBlur()\"\n    [attr.data-role]=\"'search-input'\"\n    [ngClass]=\"[size ? 'form-control-' + getKeywordBySize(size) : '']\"\n    [autocomplete]=\"autocomplete\"\n  />\n</ng-template>\n", components: [{ type: i3__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i6__namespace.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i7__namespace.NgbTypeahead, selector: "input[ngbTypeahead]", inputs: ["autocomplete", "placement", "container", "editable", "focusFirst", "showHint", "inputFormatter", "ngbTypeahead", "resultFormatter", "resultTemplate", "popupClass"], outputs: ["selectItem"], exportAs: ["ngbTypeahead"] }, { type: i6__namespace.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i6__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6__namespace.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i6__namespace.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i8__namespace.FocusDirective, selector: "[bbFocus]", inputs: ["bbFocus"], exportAs: ["bbFocus"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-search-box-ui',
                        templateUrl: './search-box.component.html',
                        providers: [
                            {
                                provide: i6.NG_VALUE_ACCESSOR,
                                multi: true,
                                useExisting: i0.forwardRef(function () { return SearchBoxComponent; }),
                            },
                        ],
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.ChangeDetectorRef }, { type: i1__namespace.DeprecationsService }, { type: i0__namespace.Renderer2 }, { type: i2__namespace.DomAttributesService }, { type: i0__namespace.ElementRef }]; }, propDecorators: { placeholder: [{
                    type: i0.Input
                }], maxLength: [{
                    type: i0.Input
                }], squareBorder: [{
                    type: i0.Input
                }], typeaheadOptions: [{
                    type: i0.Input
                }], showSearch: [{
                    type: i0.Input
                }], showClear: [{
                    type: i0.Input
                }], searchLabel: [{
                    type: i0.Input
                }], clearLabel: [{
                    type: i0.Input
                }], autocomplete: [{
                    type: i0.Input
                }], submit: [{
                    type: i0.Output
                }], clear: [{
                    type: i0.Output
                }], valueChange: [{
                    type: i0.Output
                }], content: [{
                    type: i0.ViewChild,
                    args: ['content']
                }], searchBox: [{
                    type: i0.ViewChild,
                    args: ['searchBox', { static: true }]
                }], inputField: [{
                    type: i0.ViewChild,
                    args: ['inputField']
                }] } });

    var SearchBoxModule = /** @class */ (function () {
        function SearchBoxModule() {
        }
        return SearchBoxModule;
    }());
    SearchBoxModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    SearchBoxModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxModule, declarations: [SearchBoxComponent], imports: [i4.CommonModule, i7.NgbTypeaheadModule, i5.ButtonModule, i3.IconModule, i6.FormsModule, baseClasses.BaseClassesModule, i8.FocusModule], exports: [SearchBoxComponent] });
    SearchBoxModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxModule, imports: [[i4.CommonModule, i7.NgbTypeaheadModule, i5.ButtonModule, i3.IconModule, i6.FormsModule, baseClasses.BaseClassesModule, i8.FocusModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4.CommonModule, i7.NgbTypeaheadModule, i5.ButtonModule, i3.IconModule, i6.FormsModule, baseClasses.BaseClassesModule, i8.FocusModule],
                        declarations: [SearchBoxComponent],
                        exports: [SearchBoxComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.SearchBoxComponent = SearchBoxComponent;
    exports.SearchBoxModule = SearchBoxModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-search-box.umd.js.map
