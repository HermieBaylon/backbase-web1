{"version":3,"file":"backbase-ui-ang-collapsible-card.umd.js","sources":["../../../../libs/ui-ang/collapsible-card/collapsible-card.component.ts","../../../../libs/ui-ang/collapsible-card/collapsible-card.component.html","../../../../libs/ui-ang/collapsible-card/collapsible-card.module.ts","../../../../libs/ui-ang/collapsible-card/backbase-ui-ang-collapsible-card.ts"],"sourcesContent":["import { Component, EventEmitter, Host, Input, OnDestroy, Optional, Output } from '@angular/core';\nimport { CollapsibleAccordionComponent, ICollapsible } from '@backbase/ui-ang/collapsible-accordion';\n\nexport type CollapsibleCardSize = 'sm' | 'md' | 'lg';\n\n/**\n * @name CollapsibleCardComponent\n *\n * @description\n * Provides an expandable details-summary/body-header view.\n * Uses bb-collapsible-ui for a predefined template\n *\n * @a11y ariaLabelForIcon is discernible text for chevron icon\n */\n@Component({\n  selector: 'bb-collapsible-card-ui',\n  templateUrl: 'collapsible-card.component.html',\n})\nexport class CollapsibleCardComponent implements ICollapsible, OnDestroy {\n  private open = false;\n\n  /**\n   * Toggles the content.\n   */\n  @Input()\n  set isOpen(v: boolean) {\n    this.open = v;\n    this.isOpenChange.emit(v);\n  }\n\n  get isOpen() {\n    return this.open;\n  }\n\n  /**\n   * Accessible label for chevron icon.\n   */\n  @Input() ariaLabelForIcon = 'Chevron icon';\n  /**\n   * Accessible label for collapsible card\n   */\n  @Input('aria-label') ariaLabel: string | null = 'toggle';\n  /**\n   * Whether chevron should be displayed.\n   *\n   * @default true\n   */\n  @Input() hasChevron = true;\n  /**\n   * Whether card should be highlighted.\n   *\n   * @default false\n   */\n  @Input() highlight = false;\n  /**\n   * Whether card should has shadow effect.\n   *\n   * @default true\n   */\n  @Input() shadow = true;\n  /**\n   * Card size\n   *\n   * @default 'md'\n   */\n  @Input() size: CollapsibleCardSize = 'md';\n\n  @Output() isOpenChange = new EventEmitter<boolean>();\n\n  constructor(\n    @Optional()\n    @Host()\n    private readonly bbCollapsibleAccordion: CollapsibleAccordionComponent,\n  ) {\n    if (this.bbCollapsibleAccordion) {\n      this.bbCollapsibleAccordion.registerNestedPanel(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.bbCollapsibleAccordion) {\n      this.bbCollapsibleAccordion.unregisterNestedPanel(this);\n    }\n  }\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n}\n","<bb-collapsible-ui\n  [(isOpen)]=\"isOpen\"\n  class=\"bb-card bb-card--collapsible bb-card--{{ size }}\"\n  [ngClass]=\"{\n    'bb-card--highlight': highlight,\n    'bb-card--shadowless': !shadow\n  }\"\n>\n  <ng-template bbCollapsibleHeader let-toggle=\"toggle\">\n    <div\n      data-role=\"bb-collapsible-card-header\"\n      class=\"bb-card__header bb-card__header--only-child\"\n      role=\"button\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-expanded]=\"isOpen\"\n      tabindex=\"0\"\n      (bbKeyboardClick)=\"toggle()\"\n    >\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--fill\"><ng-content select=\"[bbCollapsibleTitle]\"></ng-content></div>\n        <bb-icon-ui\n          [aria-label]=\"ariaLabelForIcon\"\n          *ngIf=\"hasChevron\"\n          class=\"bb-stack__item\"\n          name=\"{{ isOpen ? 'expand-less' : 'expand-more' }}\"\n          data-role=\"bb-collapsible-card-header__icon\"\n        ></bb-icon-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template bbCollapsibleBody>\n    <div class=\"bb-card__body\" data-role=\"bb-collapsible-card-body\">\n      <ng-content select=\"[bbCollapsibleBody]\"></ng-content>\n    </div>\n  </ng-template>\n</bb-collapsible-ui>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CollapsibleCardComponent } from './collapsible-card.component';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n\n@NgModule({\n  imports: [CollapsibleModule, CommonModule, IconModule, KeyboardClickModule],\n  declarations: [CollapsibleCardComponent],\n  exports: [CollapsibleCardComponent],\n})\nexport class CollapsibleCardModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","i1","i0","i2","i3","i4","i5","Component","Optional","Host","Input","Output","CollapsibleModule","CommonModule","IconModule","KeyboardClickModule","NgModule"],"mappings":"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"}