{"version":3,"file":"backbase-ui-ang-mode-header.umd.js","sources":["../../../../libs/ui-ang/mode-header/mode-header.component.ts","../../../../libs/ui-ang/mode-header/mode-header.component.html","../../../../libs/ui-ang/mode-header/mode-header.module.ts","../../../../libs/ui-ang/mode-header/backbase-ui-ang-mode-header.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * @name ModeHeaderComponent\n *\n * @description\n * Component that displays a mode header.\n */\n@Component({\n  selector: 'bb-mode-header-ui',\n  templateUrl: './mode-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ModeHeaderComponent {\n  /**\n   * The main title to display.\n   */\n  @Input() title?: string;\n\n  /**\n   * The smaller, secondary title to display.\n   */\n  @Input() secondaryTitle?: string;\n\n  /**\n   * Whether or not to show the close button. Defaults to true.\n   */\n  @Input() showCloseButton = true;\n\n  /**\n   * The aria label to describe the close button to screen reader users.\n   */\n  @Input() closeButtonAriaLabel?: string;\n\n  /**\n   * Whether or not the order of title elements is reversed.\n   */\n  @Input() reverseTitleOrder = true;\n\n  /**\n   * Event fired when the close button is clicked.\n   */\n  @Output() close = new EventEmitter<void>();\n}\n","<div class=\"bb-mode-header\">\n  <div class=\"bb-stack bb-stack--density-md\">\n    <div *ngIf=\"showCloseButton\" class=\"bb-stack__item\">\n      <button\n        bbButton\n        buttonSize=\"md\"\n        circle=\"true\"\n        color=\"primary\"\n        [attr.aria-label]=\"closeButtonAriaLabel\"\n        (click)=\"close.emit()\"\n        data-role=\"mode-header-close-button\"\n      >\n        <bb-icon-ui name=\"clear\"></bb-icon-ui>\n      </button>\n    </div>\n    <div class=\"bb-stack__item\" data-role=\"mode-header-icon\">\n      <ng-content select=\"[mode-header-icon]\"></ng-content>\n    </div>\n    <div\n      class=\"bb-stack__item bb-mode-header__title-area\"\n      [class.bb-mode-header__title-area--reversed]=\"reverseTitleOrder\"\n    >\n      <div class=\"bb-stack\">\n        <bb-header-ui\n          headingType=\"h2\"\n          headingClasses=\"bb-text--mode-header\"\n          [heading]=\"title\"\n          data-role=\"mode-header-primary-header\"\n          class=\"bb-stack__item\"\n        ></bb-header-ui>\n        <div class=\"bb-stack__item\" data-role=\"mode-header-status\">\n          <ng-content select=\"[mode-header-status]\"></ng-content>\n        </div>\n      </div>\n      <span *ngIf=\"secondaryTitle\" class=\"bb-subtitle\" data-role=\"mode-header-secondary-header\">{{\n        secondaryTitle\n      }}</span>\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--push-right\" data-role=\"mode-header-utility-area\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <ng-content select=\"[mode-header-utility-area]\"></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ModeHeaderComponent } from './mode-header.component';\n\n@NgModule({\n  imports: [CommonModule, ButtonModule, IconModule, HeaderModule],\n  declarations: [ModeHeaderComponent],\n  exports: [ModeHeaderComponent],\n})\nexport class ModeHeaderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","i0","i1","i2","i3","i4","Component","ChangeDetectionStrategy","Input","Output","CommonModule","ButtonModule","IconModule","HeaderModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEA;;;;;IAKG;AAMH,QAAA,mBAAA,kBAAA,YAAA;IALA,IAAA,SAAA,mBAAA,GAAA;IAgBE;;IAEG;IACM,QAAA,IAAe,CAAA,eAAA,GAAG,IAAI,CAAC;IAOhC;;IAEG;IACM,QAAA,IAAiB,CAAA,iBAAA,GAAG,IAAI,CAAC;IAElC;;IAEG;IACO,QAAA,IAAA,CAAA,KAAK,GAAG,IAAIA,eAAY,EAAQ,CAAC;SAC5C;;;2IA9BY,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAC,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAnB,mBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,yRCbhC,8nDA6CA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAAJ,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDhCa,mBAAmB,EAAA,UAAA,EAAA,CAAA;sBAL/BK,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,mBAAmB;IAC7B,oBAAA,WAAW,EAAE,8BAA8B;wBAC3C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD,CAAA;kCAKU,KAAK,EAAA,CAAA;0BAAbC,QAAK;oBAKG,cAAc,EAAA,CAAA;0BAAtBA,QAAK;oBAKG,eAAe,EAAA,CAAA;0BAAvBA,QAAK;oBAKG,oBAAoB,EAAA,CAAA;0BAA5BA,QAAK;oBAKG,iBAAiB,EAAA,CAAA;0BAAzBA,QAAK;oBAKI,KAAK,EAAA,CAAA;0BAAdC,SAAM;;;AE9BT,QAAA,gBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,gBAAA,GAAA;;;;wIAAa,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAR,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yIAAhB,gBAAgB,EAAA,YAAA,EAAA,CAHZ,mBAAmB,CAAA,EAAA,OAAA,EAAA,CADxBS,eAAY,EAAEC,eAAY,EAAEC,aAAU,EAAEC,eAAY,CAAA,EAAA,OAAA,EAAA,CAEpD,mBAAmB,CAAA,EAAA,CAAA,CAAA;yIAElB,gBAAgB,EAAA,OAAA,EAAA,CAJlB,CAACH,eAAY,EAAEC,eAAY,EAAEC,aAAU,EAAEC,eAAY,CAAC,CAAA,EAAA,CAAA,CAAA;sHAIpD,gBAAgB,EAAA,UAAA,EAAA,CAAA;sBAL5BC,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACR,OAAO,EAAE,CAACJ,eAAY,EAAEC,eAAY,EAAEC,aAAU,EAAEC,eAAY,CAAC;wBAC/D,YAAY,EAAE,CAAC,mBAAmB,CAAC;wBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;qBAC/B,CAAA;;;ICXD;;IAEG;;;;;;;;;;;"}