(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@ng-bootstrap/ng-bootstrap'), require('@ng-select/ng-select'), require('@backbase/ui-ang/search-box'), require('@backbase/ui-ang/avatar'), require('@backbase/ui-ang/badge'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/load-button'), require('@backbase/ui-ang/card-vendor'), require('@backbase/ui-ang/amount'), require('@backbase/ui-ang/logo'), require('@backbase/ui-ang/common-error-state'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/input-datepicker'), require('@backbase/ui-ang/char-counter'), require('@backbase/ui-ang/currency-input'), require('@backbase/ui-ang/collapsible'), require('@backbase/ui-ang/collapsible-card'), require('@backbase/ui-ang/modal'), require('@backbase/ui-ang/pagination'), require('@backbase/ui-ang/payment-card-number-pipe'), require('@backbase/ui-ang/payment-card'), require('@backbase/ui-ang/account-number-pipe'), require('@backbase/ui-ang/period-selector'), require('@backbase/ui-ang/switch'), require('@backbase/ui-ang/tab'), require('@backbase/ui-ang/file-attachment'), require('@backbase/ui-ang/focus'), require('@backbase/ui-ang/collapsible-accordion'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/iban-directive'), require('@backbase/ui-ang/header'), require('@backbase/ui-ang/alert'), require('@backbase/ui-ang/input-validation-message'), require('@backbase/ui-ang/notification'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/input-text'), require('@backbase/ui-ang/input-checkbox'), require('@backbase/ui-ang/input-phone'), require('@backbase/ui-ang/input-email'), require('@backbase/ui-ang/dropdown-single-select'), require('@backbase/ui-ang/dropdown-menu'), require('@backbase/ui-ang/phone-number-format-pipe'), require('@backbase/ui-ang/product-item-savings-account'), require('@backbase/ui-ang/product-item-credit-card'), require('@backbase/ui-ang/product-item-basic-account'), require('@backbase/ui-ang/product-item-current-account'), require('@backbase/ui-ang/product-item-investment-account'), require('@backbase/ui-ang/product-item-debit-card'), require('@backbase/ui-ang/product-item-term-deposit'), require('@backbase/ui-ang/product-item-loan'), require('@backbase/ui-ang/fieldset'), require('@backbase/ui-ang/textarea'), require('@backbase/ui-ang/product-selector'), require('@backbase/ui-ang/tooltip-directive'), require('@backbase/ui-ang/input-number'), require('@backbase/ui-ang/rich-text-editor'), require('@backbase/ui-ang/input-radio-group'), require('@backbase/ui-ang/input-file'), require('@backbase/ui-ang/date-pipe'), require('@backbase/ui-ang/list-multiple-select'), require('@backbase/ui-ang/checkbox-group'), require('@backbase/ui-ang/ellipsis'), require('@backbase/ui-ang/highlight'), require('@backbase/ui-ang/progressbar'), require('@backbase/ui-ang/table'), require('@backbase/ui-ang/input-password'), require('@backbase/ui-ang/input-inline-edit'), require('@backbase/ui-ang/stepper'), require('@backbase/ui-ang/iban-pipe'), require('@backbase/ui-ang/action-status'), require('@backbase/ui-ang/badge-counter'), require('@backbase/ui-ang/infinite-scroll'), require('@backbase/ui-ang/account-selector'), require('@backbase/ui-ang/item-log'), require('@backbase/ui-ang/input-timepicker'), require('@backbase/ui-ang/keyboard-click-directive'), require('@backbase/ui-ang/select-list'), require('@backbase/ui-ang/amount-input'), require('@backbase/ui-ang/mode-header'), require('@backbase/ui-ang/control-error-handler'), require('@backbase/ui-ang/input-range'), require('@backbase/ui-ang/value-diff'), require('@angular/cdk/a11y'), require('@backbase/foundation-ang/future'), require('@backbase/ui-ang/base-classes'), require('@backbase/ui-ang/css-variables-lib'), require('@backbase/ui-ang/dropdown-multi-select'), require('@backbase/ui-ang/dropdown-panel'), require('@backbase/ui-ang/iban-lib'), require('@backbase/ui-ang/layout'), require('@backbase/ui-ang/media-query-lib'), require('@backbase/ui-ang/services'), require('@backbase/ui-ang/util'), require('rxjs'), require('@angular/forms'), require('@angular/common/http'), require('rxjs/operators'), require('@angular/animations')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang', ['exports', '@angular/core', '@angular/common', '@ng-bootstrap/ng-bootstrap', '@ng-select/ng-select', '@backbase/ui-ang/search-box', '@backbase/ui-ang/avatar', '@backbase/ui-ang/badge', '@backbase/ui-ang/button', '@backbase/ui-ang/load-button', '@backbase/ui-ang/card-vendor', '@backbase/ui-ang/amount', '@backbase/ui-ang/logo', '@backbase/ui-ang/common-error-state', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/input-datepicker', '@backbase/ui-ang/char-counter', '@backbase/ui-ang/currency-input', '@backbase/ui-ang/collapsible', '@backbase/ui-ang/collapsible-card', '@backbase/ui-ang/modal', '@backbase/ui-ang/pagination', '@backbase/ui-ang/payment-card-number-pipe', '@backbase/ui-ang/payment-card', '@backbase/ui-ang/account-number-pipe', '@backbase/ui-ang/period-selector', '@backbase/ui-ang/switch', '@backbase/ui-ang/tab', '@backbase/ui-ang/file-attachment', '@backbase/ui-ang/focus', '@backbase/ui-ang/collapsible-accordion', '@backbase/ui-ang/icon', '@backbase/ui-ang/iban-directive', '@backbase/ui-ang/header', '@backbase/ui-ang/alert', '@backbase/ui-ang/input-validation-message', '@backbase/ui-ang/notification', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/input-text', '@backbase/ui-ang/input-checkbox', '@backbase/ui-ang/input-phone', '@backbase/ui-ang/input-email', '@backbase/ui-ang/dropdown-single-select', '@backbase/ui-ang/dropdown-menu', '@backbase/ui-ang/phone-number-format-pipe', '@backbase/ui-ang/product-item-savings-account', '@backbase/ui-ang/product-item-credit-card', '@backbase/ui-ang/product-item-basic-account', '@backbase/ui-ang/product-item-current-account', '@backbase/ui-ang/product-item-investment-account', '@backbase/ui-ang/product-item-debit-card', '@backbase/ui-ang/product-item-term-deposit', '@backbase/ui-ang/product-item-loan', '@backbase/ui-ang/fieldset', '@backbase/ui-ang/textarea', '@backbase/ui-ang/product-selector', '@backbase/ui-ang/tooltip-directive', '@backbase/ui-ang/input-number', '@backbase/ui-ang/rich-text-editor', '@backbase/ui-ang/input-radio-group', '@backbase/ui-ang/input-file', '@backbase/ui-ang/date-pipe', '@backbase/ui-ang/list-multiple-select', '@backbase/ui-ang/checkbox-group', '@backbase/ui-ang/ellipsis', '@backbase/ui-ang/highlight', '@backbase/ui-ang/progressbar', '@backbase/ui-ang/table', '@backbase/ui-ang/input-password', '@backbase/ui-ang/input-inline-edit', '@backbase/ui-ang/stepper', '@backbase/ui-ang/iban-pipe', '@backbase/ui-ang/action-status', '@backbase/ui-ang/badge-counter', '@backbase/ui-ang/infinite-scroll', '@backbase/ui-ang/account-selector', '@backbase/ui-ang/item-log', '@backbase/ui-ang/input-timepicker', '@backbase/ui-ang/keyboard-click-directive', '@backbase/ui-ang/select-list', '@backbase/ui-ang/amount-input', '@backbase/ui-ang/mode-header', '@backbase/ui-ang/control-error-handler', '@backbase/ui-ang/input-range', '@backbase/ui-ang/value-diff', '@angular/cdk/a11y', '@backbase/foundation-ang/future', '@backbase/ui-ang/base-classes', '@backbase/ui-ang/css-variables-lib', '@backbase/ui-ang/dropdown-multi-select', '@backbase/ui-ang/dropdown-panel', '@backbase/ui-ang/iban-lib', '@backbase/ui-ang/layout', '@backbase/ui-ang/media-query-lib', '@backbase/ui-ang/services', '@backbase/ui-ang/util', 'rxjs', '@angular/forms', '@angular/common/http', 'rxjs/operators', '@angular/animations'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = {}), global.ng.core, global.ng.common, global["@ng-bootstrap/ng-bootstrap"], global.ngSelect, global.backbase["ui-ang"]["search-box"], global.backbase["ui-ang"].avatar, global.backbase["ui-ang"].badge, global.backbase["ui-ang"].button, global.backbase["ui-ang"]["load-button"], global.backbase["ui-ang"]["card-vendor"], global.backbase["ui-ang"].amount, global.backbase["ui-ang"].logo, global.backbase["ui-ang"]["common-error-state"], global.backbase["ui-ang"]["empty-state"], global.backbase["ui-ang"]["input-datepicker"], global.backbase["ui-ang"]["char-counter"], global.backbase["ui-ang"]["currency-input"], global.backbase["ui-ang"].collapsible, global.backbase["ui-ang"]["collapsible-card"], global.backbase["ui-ang"].modal, global.backbase["ui-ang"].pagination, global.backbase["ui-ang"]["payment-card-number-pipe"], global.backbase["ui-ang"]["payment-card"], global.backbase["ui-ang"]["account-number-pipe"], global.backbase["ui-ang"]["period-selector"], global.backbase["ui-ang"]["switch"], global.backbase["ui-ang"].tab, global.backbase["ui-ang"]["file-attachment"], global.backbase["ui-ang"].focus, global.backbase["ui-ang"]["collapsible-accordion"], global.backbase["ui-ang"].icon, global.backbase["ui-ang"]["iban-directive"], global.backbase["ui-ang"].header, global.backbase["ui-ang"].alert, global.backbase["ui-ang"]["input-validation-message"], global.backbase["ui-ang"].notification, global.backbase["ui-ang"]["loading-indicator"], global.backbase["ui-ang"]["input-text"], global.backbase["ui-ang"]["input-checkbox"], global.backbase["ui-ang"]["input-phone"], global.backbase["ui-ang"]["input-email"], global.backbase["ui-ang"]["dropdown-single-select"], global.backbase["ui-ang"]["dropdown-menu"], global.backbase["ui-ang"]["phone-number-format-pipe"], global.backbase["ui-ang"]["product-item-savings-account"], global.backbase["ui-ang"]["product-item-credit-card"], global.backbase["ui-ang"]["product-item-basic-account"], global.backbase["ui-ang"]["product-item-current-account"], global.backbase["ui-ang"]["product-item-investment-account"], global.backbase["ui-ang"]["product-item-debit-card"], global.backbase["ui-ang"]["product-item-term-deposit"], global.backbase["ui-ang"]["product-item-loan"], global.backbase["ui-ang"].fieldset, global.backbase["ui-ang"].textarea, global.backbase["ui-ang"]["product-selector"], global.backbase["ui-ang"]["tooltip-directive"], global.backbase["ui-ang"]["input-number"], global.backbase["ui-ang"]["rich-text-editor"], global.backbase["ui-ang"]["input-radio-group"], global.backbase["ui-ang"]["input-file"], global.backbase["ui-ang"]["date-pipe"], global.backbase["ui-ang"]["list-multiple-select"], global.backbase["ui-ang"]["checkbox-group"], global.backbase["ui-ang"].ellipsis, global.backbase["ui-ang"].highlight, global.backbase["ui-ang"].progressbar, global.backbase["ui-ang"].table, global.backbase["ui-ang"]["input-password"], global.backbase["ui-ang"]["input-inline-edit"], global.backbase["ui-ang"].stepper, global.backbase["ui-ang"]["iban-pipe"], global.backbase["ui-ang"]["action-status"], global.backbase["ui-ang"]["badge-counter"], global.backbase["ui-ang"]["infinite-scroll"], global.backbase["ui-ang"]["account-selector"], global.backbase["ui-ang"]["item-log"], global.backbase["ui-ang"]["input-timepicker"], global.backbase["ui-ang"]["keyboard-click-directive"], global.backbase["ui-ang"]["select-list"], global.backbase["ui-ang"]["amount-input"], global.backbase["ui-ang"]["mode-header"], global.backbase["ui-ang"]["control-error-handler"], global.backbase["ui-ang"]["input-range"], global.backbase["ui-ang"]["value-diff"], global.ng.cdk.a11y, global.i1$M, global.backbase["ui-ang"]["base-classes"], global.backbase["ui-ang"]["css-variables-lib"], global.backbase["ui-ang"]["dropdown-multi-select"], global.backbase["ui-ang"]["dropdown-panel"], global.backbase["ui-ang"]["iban-lib"], global.backbase["ui-ang"].layout, global.backbase["ui-ang"]["media-query-lib"], global.backbase["ui-ang"].services, global.backbase["ui-ang"].util, global.rxjs, global.ng.forms, global.ng.common.http, global.rxjs.operators, global.ng.animations));
})(this, (function (exports, i0, i4$1, ngBootstrap, ngSelect, i1$G, i1$4, i3, i2$2, i1$m, i1$6, i1$3, i1$o, i1$a, i1$g, i2$b, i2$3, i1$b, i1$9, i2$4, i1$p, i1$s, i1$t, i1$u, i1, i1$v, i2$o, i2$p, i1$h, i2$7, i1$8, i2$9, ibanDirective, i1$i, i2, i3$2, i1$r, i1$n, i2$j, i2$a, i2$h, i2$c, i2$6, i1$d, i1$w, i1$C, i1$x, i2$m, i1$y, i1$A, i1$z, i1$D, i1$B, i3$1, i2$q, i1$E, i2$r, i2$f, i2$n, i2$i, i2$d, i1$c, i2$l, i1$7, i1$f, i2$8, i1$F, i1$J, i2$g, i2$e, i1$I, i1$j, i1$2, i1$5, i1$k, i1$1, i1$l, i2$k, i3$3, i1$H, i2$1, i1$q, i9, i4, i1$K, a11y, i1$M, baseClasses, cssVariablesLib, i2$5, i1$e, ibanLib, layout, mediaQueryLib, i1$L, util, rxjs, i1$N, http, operators, animations) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4$1);
    var i1__namespace$z = /*#__PURE__*/_interopNamespace(i1$G);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1$4);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i2__namespace$5 = /*#__PURE__*/_interopNamespace(i2$2);
    var i1__namespace$i = /*#__PURE__*/_interopNamespace(i1$m);
    var i1__namespace$6 = /*#__PURE__*/_interopNamespace(i1$6);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i1__namespace$k = /*#__PURE__*/_interopNamespace(i1$o);
    var i1__namespace$a = /*#__PURE__*/_interopNamespace(i1$a);
    var i1__namespace$f = /*#__PURE__*/_interopNamespace(i1$g);
    var i2__namespace$a = /*#__PURE__*/_interopNamespace(i2$b);
    var i2__namespace$6 = /*#__PURE__*/_interopNamespace(i2$3);
    var i1__namespace$b = /*#__PURE__*/_interopNamespace(i1$b);
    var i1__namespace$9 = /*#__PURE__*/_interopNamespace(i1$9);
    var i2__namespace$7 = /*#__PURE__*/_interopNamespace(i2$4);
    var i1__namespace$l = /*#__PURE__*/_interopNamespace(i1$p);
    var i1__namespace$o = /*#__PURE__*/_interopNamespace(i1$s);
    var i1__namespace$G = /*#__PURE__*/_interopNamespace(i1$t);
    var i1__namespace$p = /*#__PURE__*/_interopNamespace(i1$u);
    var i1__namespace$H = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace$q = /*#__PURE__*/_interopNamespace(i1$v);
    var i2__namespace$h = /*#__PURE__*/_interopNamespace(i2$o);
    var i2__namespace$j = /*#__PURE__*/_interopNamespace(i2$p);
    var i1__namespace$g = /*#__PURE__*/_interopNamespace(i1$h);
    var i2__namespace$r = /*#__PURE__*/_interopNamespace(i2$7);
    var i1__namespace$8 = /*#__PURE__*/_interopNamespace(i1$8);
    var i2__namespace$8 = /*#__PURE__*/_interopNamespace(i2$9);
    var i1__namespace$h = /*#__PURE__*/_interopNamespace(i1$i);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);
    var i1__namespace$n = /*#__PURE__*/_interopNamespace(i1$r);
    var i1__namespace$j = /*#__PURE__*/_interopNamespace(i1$n);
    var i2__namespace$9 = /*#__PURE__*/_interopNamespace(i2$j);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2$a);
    var i2__namespace$d = /*#__PURE__*/_interopNamespace(i2$h);
    var i2__namespace$b = /*#__PURE__*/_interopNamespace(i2$c);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$6);
    var i1__namespace$d = /*#__PURE__*/_interopNamespace(i1$d);
    var i1__namespace$I = /*#__PURE__*/_interopNamespace(i1$w);
    var i1__namespace$w = /*#__PURE__*/_interopNamespace(i1$C);
    var i1__namespace$r = /*#__PURE__*/_interopNamespace(i1$x);
    var i2__namespace$f = /*#__PURE__*/_interopNamespace(i2$m);
    var i1__namespace$s = /*#__PURE__*/_interopNamespace(i1$y);
    var i1__namespace$u = /*#__PURE__*/_interopNamespace(i1$A);
    var i1__namespace$t = /*#__PURE__*/_interopNamespace(i1$z);
    var i1__namespace$x = /*#__PURE__*/_interopNamespace(i1$D);
    var i1__namespace$v = /*#__PURE__*/_interopNamespace(i1$B);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i2__namespace$i = /*#__PURE__*/_interopNamespace(i2$q);
    var i1__namespace$y = /*#__PURE__*/_interopNamespace(i1$E);
    var i2__namespace$k = /*#__PURE__*/_interopNamespace(i2$r);
    var i2__namespace$c = /*#__PURE__*/_interopNamespace(i2$f);
    var i2__namespace$g = /*#__PURE__*/_interopNamespace(i2$n);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$i);
    var i2__namespace$q = /*#__PURE__*/_interopNamespace(i2$d);
    var i1__namespace$c = /*#__PURE__*/_interopNamespace(i1$c);
    var i2__namespace$e = /*#__PURE__*/_interopNamespace(i2$l);
    var i1__namespace$7 = /*#__PURE__*/_interopNamespace(i1$7);
    var i1__namespace$e = /*#__PURE__*/_interopNamespace(i1$f);
    var i2__namespace$n = /*#__PURE__*/_interopNamespace(i2$8);
    var i1__namespace$A = /*#__PURE__*/_interopNamespace(i1$F);
    var i1__namespace$B = /*#__PURE__*/_interopNamespace(i1$J);
    var i2__namespace$l = /*#__PURE__*/_interopNamespace(i2$g);
    var i2__namespace$m = /*#__PURE__*/_interopNamespace(i2$e);
    var i1__namespace$C = /*#__PURE__*/_interopNamespace(i1$I);
    var i1__namespace$D = /*#__PURE__*/_interopNamespace(i1$j);
    var i1__namespace$E = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace$5 = /*#__PURE__*/_interopNamespace(i1$5);
    var i1__namespace$F = /*#__PURE__*/_interopNamespace(i1$k);
    var i1__namespace$J = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace$L = /*#__PURE__*/_interopNamespace(i1$l);
    var i2__namespace$p = /*#__PURE__*/_interopNamespace(i2$k);
    var i3__namespace$3 = /*#__PURE__*/_interopNamespace(i3$3);
    var i1__namespace$M = /*#__PURE__*/_interopNamespace(i1$H);
    var i2__namespace$4 = /*#__PURE__*/_interopNamespace(i2$1);
    var i1__namespace$m = /*#__PURE__*/_interopNamespace(i1$q);
    var i9__namespace = /*#__PURE__*/_interopNamespace(i9);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$N = /*#__PURE__*/_interopNamespace(i1$K);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$M);
    var i2__namespace$o = /*#__PURE__*/_interopNamespace(i2$5);
    var i1__namespace$K = /*#__PURE__*/_interopNamespace(i1$e);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1$L);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$N);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var ngbModules = [
        ngBootstrap.NgbAlertModule,
        ngBootstrap.NgbCollapseModule,
        ngBootstrap.NgbDatepickerModule,
        ngBootstrap.NgbDropdownModule,
        ngBootstrap.NgbModalModule,
        ngBootstrap.NgbPaginationModule,
        ngBootstrap.NgbTypeaheadModule,
        ngBootstrap.NgbTooltipModule,
        ngBootstrap.NgbProgressbarModule,
        ngBootstrap.NgbTimepickerModule,
    ];
    var uiCompModules = [
        i1.AccountNumberPipeModule,
        i1$1.AccountSelectorModule,
        i1$2.ActionStatusModule,
        i2.AlertModule,
        i2$1.AmountInputModule,
        i1$3.AmountModule,
        i1$4.AvatarModule,
        i1$5.BadgeCounterModule,
        i3.BadgeModule,
        i1$c.BbDatePipeModule,
        i1$j.BbIbanPipeModule,
        i2$2.ButtonModule,
        i1$6.CardVendorModule,
        i2$3.CharCounterModule,
        i1$7.CheckboxGroupModule,
        i1$8.CollapsibleAccordionModule,
        i2$4.CollapsibleCardModule,
        i1$9.CollapsibleModule,
        i1$a.ErrorCommonStateModule,
        i1$b.CurrencyInputModule,
        i1$d.DropdownMenuModule,
        i2$6.DropdownSingleSelectModule,
        i1$f.EllipsisModule,
        i1$g.EmptyStateModule,
        i3$1.FieldsetModule,
        i1$h.FileAttachmentModule,
        i2$7.FocusModule,
        i1$i.HeaderModule,
        i2$8.HighlightModule,
        i2$9.IconModule,
        i1$k.InfiniteScrollModule,
        i2$a.InputCheckboxModule,
        i2$b.InputDatepickerModule,
        i2$c.InputEmailModule,
        i2$d.InputFileModule,
        i2$e.InputInlineEditModule,
        i2$f.InputNumberModule,
        i2$g.InputPasswordModule,
        i2$h.InputPhoneModule,
        i2$i.InputRadioGroupModule,
        i4.InputRangeModule,
        i2$j.InputTextModule,
        i2$k.InputTimepickerModule,
        i3$2.InputValidationMessageModule,
        i1$l.ItemLogModule,
        i3$3.KeyboardClickModule,
        i2$l.ListMultipleSelectModule,
        i1$m.LoadButtonModule,
        i1$n.LoadingIndicatorModule,
        i1$o.LogoModule,
        i1$p.ModalModule,
        i1$q.ModeHeaderModule,
        i1$r.NotificationModule,
        i1$s.PaginationModule,
        i1$u.PaymentCardModule,
        i1$t.PaymentCardNumberModule,
        i1$v.PeriodSelectorModule,
        i1$w.PhoneNumberModule,
        i2$m.ProductItemBasicAccountModule,
        i1$x.ProductItemCreditCardModule,
        i1$y.ProductItemCurrentAccountModule,
        i1$z.ProductItemDebitCardModule,
        i1$A.ProductItemInvestmentAccountModule,
        i1$B.ProductItemLoanModule,
        i1$C.ProductItemSavingsAccountModule,
        i1$D.ProductItemTermDepositModule,
        i1$E.ProductSelectorModule,
        i1$F.ProgressbarModule,
        i2$n.RichTextEditorModule,
        i1$G.SearchBoxModule,
        i1$H.SelectListModule,
        i1$I.StepperModule,
        i2$o.SwitchModule,
        i2$p.TabModule,
        i1$J.TableModule,
        i2$q.TextareaModule,
        i2$r.TooltipModule,
        i9.ControlErrorHandlerModule,
        i1$K.ValueDiffDirectiveModule,
        ibanDirective.IbanModule,
    ];
    var BackbaseUiModule = /** @class */ (function () {
        function BackbaseUiModule(deprecationService) {
            this.deprecationService = deprecationService;
            this.deprecationService.logDeprecatedFeature("[ui-ang]: The main entry point '@backbase/ui-ang' will be deprecated in ui-ang v8.0. Use\n      the secondary entry points instead. I.e. 'import { ... } from '@backbase/ui-ang/button';'");
            this.deprecationService.logDeprecatedFeature("[ui-ang]:Packages '@backbase/ui-ang'from v7.0 and '@backbase/backbase-theme' from v2.318.0 will be deprecated.\n      From now on, use '@backbase/web-ui' package;'");
        }
        return BackbaseUiModule;
    }());
    BackbaseUiModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiModule, deps: [{ token: i1__namespace$1.DeprecationsService }], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    BackbaseUiModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiModule, imports: [i4$1.CommonModule, ngBootstrap.NgbAlertModule,
            ngBootstrap.NgbCollapseModule,
            ngBootstrap.NgbDatepickerModule,
            ngBootstrap.NgbDropdownModule,
            ngBootstrap.NgbModalModule,
            ngBootstrap.NgbPaginationModule,
            ngBootstrap.NgbTypeaheadModule,
            ngBootstrap.NgbTooltipModule,
            ngBootstrap.NgbProgressbarModule,
            ngBootstrap.NgbTimepickerModule, i1.AccountNumberPipeModule,
            i1$1.AccountSelectorModule,
            i1$2.ActionStatusModule,
            i2.AlertModule,
            i2$1.AmountInputModule,
            i1$3.AmountModule,
            i1$4.AvatarModule,
            i1$5.BadgeCounterModule,
            i3.BadgeModule,
            i1$c.BbDatePipeModule,
            i1$j.BbIbanPipeModule,
            i2$2.ButtonModule,
            i1$6.CardVendorModule,
            i2$3.CharCounterModule,
            i1$7.CheckboxGroupModule,
            i1$8.CollapsibleAccordionModule,
            i2$4.CollapsibleCardModule,
            i1$9.CollapsibleModule,
            i1$a.ErrorCommonStateModule,
            i1$b.CurrencyInputModule,
            i1$d.DropdownMenuModule,
            i2$6.DropdownSingleSelectModule,
            i1$f.EllipsisModule,
            i1$g.EmptyStateModule,
            i3$1.FieldsetModule,
            i1$h.FileAttachmentModule,
            i2$7.FocusModule,
            i1$i.HeaderModule,
            i2$8.HighlightModule,
            i2$9.IconModule,
            i1$k.InfiniteScrollModule,
            i2$a.InputCheckboxModule,
            i2$b.InputDatepickerModule,
            i2$c.InputEmailModule,
            i2$d.InputFileModule,
            i2$e.InputInlineEditModule,
            i2$f.InputNumberModule,
            i2$g.InputPasswordModule,
            i2$h.InputPhoneModule,
            i2$i.InputRadioGroupModule,
            i4.InputRangeModule,
            i2$j.InputTextModule,
            i2$k.InputTimepickerModule,
            i3$2.InputValidationMessageModule,
            i1$l.ItemLogModule,
            i3$3.KeyboardClickModule,
            i2$l.ListMultipleSelectModule,
            i1$m.LoadButtonModule,
            i1$n.LoadingIndicatorModule,
            i1$o.LogoModule,
            i1$p.ModalModule,
            i1$q.ModeHeaderModule,
            i1$r.NotificationModule,
            i1$s.PaginationModule,
            i1$u.PaymentCardModule,
            i1$t.PaymentCardNumberModule,
            i1$v.PeriodSelectorModule,
            i1$w.PhoneNumberModule,
            i2$m.ProductItemBasicAccountModule,
            i1$x.ProductItemCreditCardModule,
            i1$y.ProductItemCurrentAccountModule,
            i1$z.ProductItemDebitCardModule,
            i1$A.ProductItemInvestmentAccountModule,
            i1$B.ProductItemLoanModule,
            i1$C.ProductItemSavingsAccountModule,
            i1$D.ProductItemTermDepositModule,
            i1$E.ProductSelectorModule,
            i1$F.ProgressbarModule,
            i2$n.RichTextEditorModule,
            i1$G.SearchBoxModule,
            i1$H.SelectListModule,
            i1$I.StepperModule,
            i2$o.SwitchModule,
            i2$p.TabModule,
            i1$J.TableModule,
            i2$q.TextareaModule,
            i2$r.TooltipModule,
            i9.ControlErrorHandlerModule,
            i1$K.ValueDiffDirectiveModule,
            ibanDirective.IbanModule, ngSelect.NgSelectModule, a11y.A11yModule], exports: [i1.AccountNumberPipeModule,
            i1$1.AccountSelectorModule,
            i1$2.ActionStatusModule,
            i2.AlertModule,
            i2$1.AmountInputModule,
            i1$3.AmountModule,
            i1$4.AvatarModule,
            i1$5.BadgeCounterModule,
            i3.BadgeModule,
            i1$c.BbDatePipeModule,
            i1$j.BbIbanPipeModule,
            i2$2.ButtonModule,
            i1$6.CardVendorModule,
            i2$3.CharCounterModule,
            i1$7.CheckboxGroupModule,
            i1$8.CollapsibleAccordionModule,
            i2$4.CollapsibleCardModule,
            i1$9.CollapsibleModule,
            i1$a.ErrorCommonStateModule,
            i1$b.CurrencyInputModule,
            i1$d.DropdownMenuModule,
            i2$6.DropdownSingleSelectModule,
            i1$f.EllipsisModule,
            i1$g.EmptyStateModule,
            i3$1.FieldsetModule,
            i1$h.FileAttachmentModule,
            i2$7.FocusModule,
            i1$i.HeaderModule,
            i2$8.HighlightModule,
            i2$9.IconModule,
            i1$k.InfiniteScrollModule,
            i2$a.InputCheckboxModule,
            i2$b.InputDatepickerModule,
            i2$c.InputEmailModule,
            i2$d.InputFileModule,
            i2$e.InputInlineEditModule,
            i2$f.InputNumberModule,
            i2$g.InputPasswordModule,
            i2$h.InputPhoneModule,
            i2$i.InputRadioGroupModule,
            i4.InputRangeModule,
            i2$j.InputTextModule,
            i2$k.InputTimepickerModule,
            i3$2.InputValidationMessageModule,
            i1$l.ItemLogModule,
            i3$3.KeyboardClickModule,
            i2$l.ListMultipleSelectModule,
            i1$m.LoadButtonModule,
            i1$n.LoadingIndicatorModule,
            i1$o.LogoModule,
            i1$p.ModalModule,
            i1$q.ModeHeaderModule,
            i1$r.NotificationModule,
            i1$s.PaginationModule,
            i1$u.PaymentCardModule,
            i1$t.PaymentCardNumberModule,
            i1$v.PeriodSelectorModule,
            i1$w.PhoneNumberModule,
            i2$m.ProductItemBasicAccountModule,
            i1$x.ProductItemCreditCardModule,
            i1$y.ProductItemCurrentAccountModule,
            i1$z.ProductItemDebitCardModule,
            i1$A.ProductItemInvestmentAccountModule,
            i1$B.ProductItemLoanModule,
            i1$C.ProductItemSavingsAccountModule,
            i1$D.ProductItemTermDepositModule,
            i1$E.ProductSelectorModule,
            i1$F.ProgressbarModule,
            i2$n.RichTextEditorModule,
            i1$G.SearchBoxModule,
            i1$H.SelectListModule,
            i1$I.StepperModule,
            i2$o.SwitchModule,
            i2$p.TabModule,
            i1$J.TableModule,
            i2$q.TextareaModule,
            i2$r.TooltipModule,
            i9.ControlErrorHandlerModule,
            i1$K.ValueDiffDirectiveModule,
            ibanDirective.IbanModule] });
    BackbaseUiModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiModule, imports: [__spreadArray(__spreadArray(__spreadArray([i4$1.CommonModule], __read(ngbModules)), __read(uiCompModules)), [ngSelect.NgSelectModule, a11y.A11yModule]), i1.AccountNumberPipeModule,
            i1$1.AccountSelectorModule,
            i1$2.ActionStatusModule,
            i2.AlertModule,
            i2$1.AmountInputModule,
            i1$3.AmountModule,
            i1$4.AvatarModule,
            i1$5.BadgeCounterModule,
            i3.BadgeModule,
            i1$c.BbDatePipeModule,
            i1$j.BbIbanPipeModule,
            i2$2.ButtonModule,
            i1$6.CardVendorModule,
            i2$3.CharCounterModule,
            i1$7.CheckboxGroupModule,
            i1$8.CollapsibleAccordionModule,
            i2$4.CollapsibleCardModule,
            i1$9.CollapsibleModule,
            i1$a.ErrorCommonStateModule,
            i1$b.CurrencyInputModule,
            i1$d.DropdownMenuModule,
            i2$6.DropdownSingleSelectModule,
            i1$f.EllipsisModule,
            i1$g.EmptyStateModule,
            i3$1.FieldsetModule,
            i1$h.FileAttachmentModule,
            i2$7.FocusModule,
            i1$i.HeaderModule,
            i2$8.HighlightModule,
            i2$9.IconModule,
            i1$k.InfiniteScrollModule,
            i2$a.InputCheckboxModule,
            i2$b.InputDatepickerModule,
            i2$c.InputEmailModule,
            i2$d.InputFileModule,
            i2$e.InputInlineEditModule,
            i2$f.InputNumberModule,
            i2$g.InputPasswordModule,
            i2$h.InputPhoneModule,
            i2$i.InputRadioGroupModule,
            i4.InputRangeModule,
            i2$j.InputTextModule,
            i2$k.InputTimepickerModule,
            i3$2.InputValidationMessageModule,
            i1$l.ItemLogModule,
            i3$3.KeyboardClickModule,
            i2$l.ListMultipleSelectModule,
            i1$m.LoadButtonModule,
            i1$n.LoadingIndicatorModule,
            i1$o.LogoModule,
            i1$p.ModalModule,
            i1$q.ModeHeaderModule,
            i1$r.NotificationModule,
            i1$s.PaginationModule,
            i1$u.PaymentCardModule,
            i1$t.PaymentCardNumberModule,
            i1$v.PeriodSelectorModule,
            i1$w.PhoneNumberModule,
            i2$m.ProductItemBasicAccountModule,
            i1$x.ProductItemCreditCardModule,
            i1$y.ProductItemCurrentAccountModule,
            i1$z.ProductItemDebitCardModule,
            i1$A.ProductItemInvestmentAccountModule,
            i1$B.ProductItemLoanModule,
            i1$C.ProductItemSavingsAccountModule,
            i1$D.ProductItemTermDepositModule,
            i1$E.ProductSelectorModule,
            i1$F.ProgressbarModule,
            i2$n.RichTextEditorModule,
            i1$G.SearchBoxModule,
            i1$H.SelectListModule,
            i1$I.StepperModule,
            i2$o.SwitchModule,
            i2$p.TabModule,
            i1$J.TableModule,
            i2$q.TextareaModule,
            i2$r.TooltipModule,
            i9.ControlErrorHandlerModule,
            i1$K.ValueDiffDirectiveModule,
            ibanDirective.IbanModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray(__spreadArray(__spreadArray([i4$1.CommonModule], __read(ngbModules)), __read(uiCompModules)), [ngSelect.NgSelectModule, a11y.A11yModule]),
                        exports: __spreadArray([], __read(uiCompModules)),
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.DeprecationsService }]; } });

    var ConfigurationInputService = /** @class */ (function () {
        function ConfigurationInputService() {
            this.sharedField = new rxjs.Subject();
        }
        return ConfigurationInputService;
    }());
    ConfigurationInputService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ConfigurationInputService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ConfigurationInputService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ConfigurationInputService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ConfigurationInputService, decorators: [{
                type: i0.Injectable
            }] });

    var ConfigurationInputComponent = /** @class */ (function () {
        function ConfigurationInputComponent(formBuilder, configurationInputService) {
            this.formBuilder = formBuilder;
            this.configurationInputService = configurationInputService;
            this.checkboxList = [];
            this.radioList = [];
            this.dropdownList = [];
            this.vform = this.formBuilder.group({
                checkbox: new i1$N.FormGroup({}),
                radio: new i1$N.FormGroup({}),
                dropdown: new i1$N.FormGroup({}),
            });
        }
        ConfigurationInputComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.dropdownList) {
                this.dropdownList.forEach(function (dropdownItem) {
                    _this.dropdown.addControl(dropdownItem.formControlName, new i1$N.FormControl(dropdownItem.dropdownItemList[0]));
                });
            }
            if (this.radioList) {
                this.radioList.forEach(function (radioItem) {
                    _this.radio.addControl(radioItem.formControlName, new i1$N.FormControl(radioItem.radioItems[0].value));
                });
            }
            if (this.checkboxList) {
                this.checkboxList.forEach(function (checkboxItem) {
                    _this.checkbox.addControl(checkboxItem.formControlName, new i1$N.FormControl(checkboxItem.value));
                });
            }
            this.configurationInputService.sharedField.next(this.vform.value);
            this.vform.valueChanges.subscribe(function (val) {
                _this.configurationInputService.sharedField.next(val);
            });
        };
        Object.defineProperty(ConfigurationInputComponent.prototype, "dropdown", {
            get: function () {
                return this.vform.get('dropdown');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ConfigurationInputComponent.prototype, "radio", {
            get: function () {
                return this.vform.get('radio');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ConfigurationInputComponent.prototype, "checkbox", {
            get: function () {
                return this.vform.get('checkbox');
            },
            enumerable: false,
            configurable: true
        });
        return ConfigurationInputComponent;
    }());
    ConfigurationInputComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ConfigurationInputComponent, deps: [{ token: i1__namespace$2.FormBuilder }, { token: ConfigurationInputService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ConfigurationInputComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ConfigurationInputComponent, selector: "bb-configuration-input-ui", inputs: { checkboxList: "checkboxList", radioList: "radioList", dropdownList: "dropdownList" }, ngImport: i0__namespace, template: "<div style=\"height: 15%; padding: 10px; border-bottom: 1px solid #eee\">\n  <span>Configuration</span>\n</div>\n<div style=\"padding: 10px\">\n  <form [formGroup]=\"vform\">\n    <div formGroupName=\"checkbox\" class=\"mb-4\">\n      <div *ngFor=\"let item of checkbox.controls | keyvalue; let i = index\" class=\"mb-3\">\n        <bb-input-checkbox-ui\n          label=\"{{ this.checkboxList[i].label }}\"\n          formControlName=\"{{ item.key }}\"\n        ></bb-input-checkbox-ui>\n      </div>\n    </div>\n\n    <div formGroupName=\"radio\">\n      <div *ngFor=\"let item of radio.controls | keyvalue; let i = index\">\n        <label>{{ radioList[i].label }}</label>\n        <bb-input-radio-group-ui\n          formControlName=\"{{ item.key }}\"\n          [horizontal]=\"true\"\n          [preselect]=\"true\"\n          [required]=\"true\"\n        >\n          <bb-input-radio-ui\n            *ngFor=\"let radioData of radioList[i].radioItems\"\n            [label]=\"radioData.label\"\n            [value]=\"radioData.value\"\n          ></bb-input-radio-ui>\n        </bb-input-radio-group-ui>\n      </div>\n    </div>\n\n    <div formGroupName=\"dropdown\">\n      <div *ngFor=\"let item of dropdown.controls | keyvalue; let i = index\">\n        <bb-dropdown-single-select-ui\n          [label]=\"dropdownList[i].label\"\n          [formControlName]=\"dropdownList[i].formControlName\"\n        >\n          <bb-dropdown-single-select-option-ui\n            *ngFor=\"let dropdownData of dropdownList[i].dropdownItemList\"\n            class=\"text-capitalize\"\n            [value]=\"dropdownData\"\n            [label]=\"dropdownData\"\n          ></bb-dropdown-single-select-option-ui>\n        </bb-dropdown-single-select-ui>\n      </div>\n    </div>\n  </form>\n</div>\n", components: [{ type: i2__namespace.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }, { type: i2__namespace$1.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i2__namespace$1.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }, { type: i2__namespace$2.DropdownSingleSelectComponent, selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i2__namespace$2.DropdownSingleSelectOptionComponent, selector: "bb-dropdown-single-select-option-ui", inputs: ["value", "label"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }], pipes: { "keyvalue": i4__namespace.KeyValuePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ConfigurationInputComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-configuration-input-ui',
                        templateUrl: './configuration-input.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }, { type: ConfigurationInputService }]; }, propDecorators: { checkboxList: [{
                    type: i0.Input
                }], radioList: [{
                    type: i0.Input
                }], dropdownList: [{
                    type: i0.Input
                }] } });

    var MILLISECONDS_PER_SECOND = 1000;
    var AlertExampleComponent = /** @class */ (function () {
        function AlertExampleComponent(configurationService) {
            var _this = this;
            this.configurationService = configurationService;
            this.restoreDelay = 5;
            this.showAlert = true;
            this.alertCheckoxList = [
                {
                    label: 'Dismissible',
                    value: true,
                    formControlName: 'dismissible',
                },
            ];
            this.alertDropdownList = [
                {
                    label: 'Modifier',
                    formControlName: 'modifier',
                    dropdownItemList: ['info', 'warning', 'success', 'error'],
                },
            ];
            this.alertValues = {
                checkbox: {
                    dismissible: true,
                },
                dropdown: {
                    modifier: 'primary',
                },
                radio: {
                    buttonSize: 'sm',
                },
            };
            this.configurationService.sharedField.subscribe(function (val) {
                _this.alertValues.checkbox.dismissible = val.checkbox.dismissible;
                _this.alertValues.dropdown.modifier = val.dropdown.modifier;
            });
        }
        AlertExampleComponent.prototype.hideAlert = function () {
            var _this = this;
            this.showAlert = false;
            // Restore alert after 5 seconds for demo purposes
            setTimeout(function () { return _this.displayAlert(); }, this.restoreDelay * MILLISECONDS_PER_SECOND);
        };
        AlertExampleComponent.prototype.displayAlert = function () {
            this.showAlert = true;
        };
        return AlertExampleComponent;
    }());
    AlertExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AlertExampleComponent, deps: [{ token: ConfigurationInputService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AlertExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AlertExampleComponent, selector: "bb-alert-example-ui", ngImport: i0__namespace, template: "<div class=\"row col-12\">\n  <div class=\"col-md-8 example-component-col\">\n    <bb-alert-ui\n      *ngIf=\"showAlert\"\n      title=\"Example information alert\"\n      [modifier]=\"alertValues.dropdown.modifier\"\n      [dismissible]=\"alertValues.checkbox.dismissible\"\n      (close)=\"hideAlert()\"\n    >\n      <p>\n        This example will be restored after {{ restoreDelay }} seconds.\n      </p>\n    </bb-alert-ui>\n  </div>\n  <div class=\"col-md-4 example-configuration-col\">\n    <bb-configuration-input-ui\n      [checkboxList]=\"alertCheckoxList\"\n      [dropdownList]=\"alertDropdownList\"\n    ></bb-configuration-input-ui>\n  </div>\n</div>\n", components: [{ type: i2__namespace$3.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: ConfigurationInputComponent, selector: "bb-configuration-input-ui", inputs: ["checkboxList", "radioList", "dropdownList"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AlertExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-alert-example-ui',
                        templateUrl: './alert.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ConfigurationInputService }]; } });

    var AmountExampleComponent = /** @class */ (function () {
        function AmountExampleComponent() {
        }
        return AmountExampleComponent;
    }());
    AmountExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AmountExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AmountExampleComponent, selector: "bb-amount-example-ui", ngImport: i0__namespace, template: "<bb-amount-ui\n  [currency]=\"'USD'\"\n  [amount]=\"2718281828\"\n  [mapCurrency]=\"true\"\n  [showPlusSign]=\"false\"\n  [abbreviate]=\"false\"\n></bb-amount-ui>\n", components: [{ type: i1__namespace$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-amount-example-ui',
                        templateUrl: './amount.example.component.html',
                    }]
            }] });

    var AmountInputExampleComponent = /** @class */ (function () {
        function AmountInputExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                name: ['', i1$N.Validators.required],
            });
        }
        return AmountInputExampleComponent;
    }());
    AmountInputExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountInputExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AmountInputExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AmountInputExampleComponent, selector: "bb-amount-input-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <h2 id=\"ariaLabelledbyId\">Amount with regular size</h2>\n  <bb-amount-input-ui\n    formControlName=\"name\"\n    [id]=\"'billpay-amount-input'\"\n    currency=\"USD\"\n    placeholder=\"0.00\"\n    [aria-labelledby]=\"'ariaLabelledbyId'\"\n  >\n  </bb-amount-input-ui>\n</form>\n", components: [{ type: i2__namespace$4.AmountInputComponent, selector: "bb-amount-input-ui", inputs: ["placeholder", "maxLength", "wrapperClasses", "mapCurrency", "currency", "autoDecimal"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountInputExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-amount-input-example-ui',
                        templateUrl: './amount-input.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var AvatarExampleComponent = /** @class */ (function () {
        function AvatarExampleComponent() {
        }
        return AvatarExampleComponent;
    }());
    AvatarExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AvatarExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvatarExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AvatarExampleComponent, selector: "bb-avatar-example-ui", ngImport: i0__namespace, template: "<bb-avatar-ui name=\"Jane Doe\" size=\"lg\"></bb-avatar-ui>\n", components: [{ type: i1__namespace$4.AvatarComponent, selector: "bb-avatar-ui", inputs: ["image", "name", "imgAlt", "size"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AvatarExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-avatar-example-ui',
                        templateUrl: './avatar.example.component.html',
                    }]
            }] });

    var BadgeExampleComponent = /** @class */ (function () {
        function BadgeExampleComponent() {
        }
        return BadgeExampleComponent;
    }());
    BadgeExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BadgeExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeExampleComponent, selector: "bb-badge-example-ui", ngImport: i0__namespace, template: "<bb-badge-ui\n  text=\"paid in full\"\n  color=\"success\"\n  [abbr]=\"false\"\n  [circle]=\"false\"\n></bb-badge-ui>\n", components: [{ type: i3__namespace.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-badge-example-ui',
                        templateUrl: './badge.example.component.html',
                    }]
            }] });

    var BadgeCounterExampleComponent = /** @class */ (function () {
        function BadgeCounterExampleComponent() {
        }
        return BadgeCounterExampleComponent;
    }());
    BadgeCounterExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeCounterExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BadgeCounterExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeCounterExampleComponent, selector: "bb-badge-counter-example-ui", ngImport: i0__namespace, template: "<bb-badge-counter-ui\n  [count]=\"136\"\n  [maxCount]=\"99\"\n  color=\"danger\"\n></bb-badge-counter-ui>\n", components: [{ type: i1__namespace$5.BadgeCounterComponent, selector: "bb-badge-counter-ui", inputs: ["color", "count", "maxCount"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeCounterExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-badge-counter-example-ui',
                        templateUrl: './badge-counter.example.component.html',
                    }]
            }] });

    var ButtonExampleService = /** @class */ (function () {
        function ButtonExampleService(configurationService) {
            var _this = this;
            this.configurationService = configurationService;
            this.btnCheckboxList = [
                {
                    label: 'Block',
                    value: false,
                    formControlName: 'block',
                },
                {
                    label: 'Disabled',
                    value: false,
                    formControlName: 'disabled',
                },
            ];
            this.btnRadioList = [
                {
                    label: 'Button Size',
                    formControlName: 'buttonSize',
                    radioItems: [
                        {
                            label: 'Small',
                            value: 'sm',
                        },
                        {
                            label: 'Medium',
                            value: 'md',
                        },
                    ],
                },
            ];
            this.btnDropdownList = [
                {
                    label: 'Color',
                    formControlName: 'color',
                    dropdownItemList: ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'link', 'link-text'],
                },
            ];
            this.btnValues = {
                checkbox: {
                    block: false,
                    disabled: false,
                },
                radio: {
                    buttonSize: 'sm',
                },
                dropdown: {
                    color: 'primary',
                },
            };
            this.configurationService.sharedField.subscribe(function (val) {
                _this.btnValues.checkbox.block = val.checkbox.block;
                _this.btnValues.checkbox.disabled = val.checkbox.disabled;
                _this.btnValues.radio.buttonSize = val.radio.buttonSize;
                _this.btnValues.dropdown.color = val.dropdown.color;
            });
        }
        return ButtonExampleService;
    }());
    ButtonExampleService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonExampleService, deps: [{ token: ConfigurationInputService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ButtonExampleService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonExampleService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonExampleService, decorators: [{
                type: i0.Injectable,
                args: [{ providedIn: 'root' }]
            }], ctorParameters: function () { return [{ type: ConfigurationInputService }]; } });

    var ButtonExampleComponent = /** @class */ (function () {
        //Don't include buttonService while developing this component.
        function ButtonExampleComponent(buttonService) {
            this.buttonService = buttonService;
        }
        return ButtonExampleComponent;
    }());
    ButtonExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonExampleComponent, deps: [{ token: ButtonExampleService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ButtonExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ButtonExampleComponent, selector: "bb-button-example-ui", ngImport: i0__namespace, template: "<div class=\"row col-12\">\n  <div class=\"col-md-8 example-component-col\">\n    <button\n      bbButton\n      [color]=\"buttonService.btnValues.dropdown.color\"\n      [buttonSize]=\"buttonService.btnValues.radio.buttonSize\"\n      [disabled]=\"buttonService.btnValues.checkbox.disabled\"\n      [block]=\"buttonService.btnValues.checkbox.block\"\n      class=\"m-2\"\n    >\n      {{ buttonService.btnValues.dropdown.color | titlecase }}\n    </button>\n  </div>\n  <div class=\"col-md-4 example-configuration-col\">\n    <bb-configuration-input-ui\n      [checkboxList]=\"buttonService.btnCheckboxList\"\n      [radioList]=\"buttonService.btnRadioList\"\n      [dropdownList]=\"buttonService.btnDropdownList\"\n    ></bb-configuration-input-ui>\n  </div>\n</div>\n", components: [{ type: ConfigurationInputComponent, selector: "bb-configuration-input-ui", inputs: ["checkboxList", "radioList", "dropdownList"] }], directives: [{ type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "titlecase": i4__namespace.TitleCasePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-button-example-ui',
                        templateUrl: './button.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ButtonExampleService }]; } });

    var CardVendorExampleComponent = /** @class */ (function () {
        function CardVendorExampleComponent() {
        }
        return CardVendorExampleComponent;
    }());
    CardVendorExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardVendorExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CardVendorExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardVendorExampleComponent, selector: "bb-card-vendor-example-ui", ngImport: i0__namespace, template: "<div style=\"max-width: 48px; max-height: 48px\">\n  <bb-card-vendor-ui vendor=\"mastercard\"></bb-card-vendor-ui>\n</div>\n", components: [{ type: i1__namespace$6.CardVendorComponent, selector: "bb-card-vendor-ui", inputs: ["vendor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardVendorExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-card-vendor-example-ui',
                        templateUrl: './card-vendor.example.component.html',
                    }]
            }] });

    var CharCounterExampleComponent = /** @class */ (function () {
        function CharCounterExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                textarea: ['', i1$N.Validators.maxLength(160)],
            });
        }
        return CharCounterExampleComponent;
    }());
    CharCounterExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CharCounterExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    CharCounterExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CharCounterExampleComponent, selector: "bb-char-counter-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <p>\n    <textarea\n      placeholder=\"Enter text...\"\n      formControlName=\"textarea\"\n      maxLength=\"160\"\n      rows=\"4\"\n      #remarksInput\n    >\n    </textarea>\n  </p>\n  <p>\n    <bb-char-counter-ui\n      [element]=\"remarksInput\"\n      [maxLength]=\"remarksInput.maxLength\"\n      [blockTyping]=\"true\"\n    ></bb-char-counter-ui>\n  </p>\n</form>\n", components: [{ type: i2__namespace$6.CharCounterComponent, selector: "bb-char-counter-ui", inputs: ["inputValue", "element", "maxLength", "blockTyping"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CharCounterExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-char-counter-example-ui',
                        templateUrl: './char-counter.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var CheckboxGroupExampleComponent = /** @class */ (function () {
        function CheckboxGroupExampleComponent() {
        }
        return CheckboxGroupExampleComponent;
    }());
    CheckboxGroupExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CheckboxGroupExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CheckboxGroupExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CheckboxGroupExampleComponent, selector: "bb-checkbox-group-example-ui", ngImport: i0__namespace, template: "<h5>Checkboxes group</h5>\n<h6>Template driven example</h6>\n<div class=\"form-row\">\n  <div class=\"col-md-4\">\n    <form #checkboxGroupForm=\"ngForm\">\n      <ul class=\"list-unstyled\">\n        <li>\n          <bb-checkbox-group-ui ngModelGroup=\"list\" label=\"Parent\"> </bb-checkbox-group-ui>\n          <ul ngModelGroup=\"list\" class=\"list-unstyled bb-checkbox-group\">\n            <li>\n              <bb-input-checkbox-ui name=\"i1\" ngModel disabled label=\"Child\"> </bb-input-checkbox-ui>\n            </li>\n            <li>\n              <bb-input-checkbox-ui name=\"i2\" ngModel label=\"Child\"> </bb-input-checkbox-ui>\n            </li>\n            <li>\n              <bb-checkbox-group-ui ngModelGroup=\"i3\" label=\"Parent\"> </bb-checkbox-group-ui>\n              <ul ngModelGroup=\"i3\" class=\"list-unstyled bb-checkbox-group\">\n                <li>\n                  <bb-input-checkbox-ui ngModel name=\"q1\" label=\"Child\"> </bb-input-checkbox-ui>\n                </li>\n                <li>\n                  <bb-input-checkbox-ui ngModel name=\"q2\" label=\"Child\"> </bb-input-checkbox-ui>\n                </li>\n                <li>\n                  <bb-checkbox-group-ui ngModelGroup=\"q3\" label=\"Parent\"> </bb-checkbox-group-ui>\n                  <ul ngModelGroup=\"q3\" class=\"list-unstyled bb-checkbox-group\">\n                    <li>\n                      <bb-input-checkbox-ui ngModel name=\"w1\" label=\"Child\"> </bb-input-checkbox-ui>\n                    </li>\n                    <li>\n                      <bb-input-checkbox-ui ngModel name=\"w2\" label=\"Child\"> </bb-input-checkbox-ui>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </form>\n  </div>\n  <div class=\"col-md-8\">{{ checkboxGroupForm.form.value | json }}</div>\n</div>\n", components: [{ type: i1__namespace$7.CheckboxGroupComponent, selector: "bb-checkbox-group-ui" }, { type: i2__namespace.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgModelGroup, selector: "[ngModelGroup]", inputs: ["ngModelGroup"], exportAs: ["ngModelGroup"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], pipes: { "json": i4__namespace.JsonPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CheckboxGroupExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-checkbox-group-example-ui',
                        templateUrl: './checkbox-group-example.component.html',
                    }]
            }] });

    var CollapsibleAccordionExampleComponent = /** @class */ (function () {
        function CollapsibleAccordionExampleComponent() {
        }
        return CollapsibleAccordionExampleComponent;
    }());
    CollapsibleAccordionExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleAccordionExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CollapsibleAccordionExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CollapsibleAccordionExampleComponent, selector: "bb-collapsible-accordion-example-ui", ngImport: i0__namespace, template: "<bb-collapsible-accordion-ui [closeOthers]=\"true\" [openFirst]=\"true\">\n  <bb-collapsible-card-ui>\n    <div bbCollapsibleTitle>Panel #1</div>\n    <div bbCollapsibleBody>\n      The first panel is expanded automatically.\n    </div>\n  </bb-collapsible-card-ui>\n  <bb-collapsible-card-ui>\n    <div bbCollapsibleTitle>Panel #2</div>\n    <div bbCollapsibleBody>This is the second panel with content.</div>\n  </bb-collapsible-card-ui>\n  <bb-collapsible-card-ui>\n    <div bbCollapsibleTitle>Panel #3</div>\n    <div bbCollapsibleBody>Last but not least, the third panel.</div>\n  </bb-collapsible-card-ui>\n</bb-collapsible-accordion-ui>\n", components: [{ type: i1__namespace$8.CollapsibleAccordionComponent, selector: "bb-collapsible-accordion-ui", inputs: ["closeOthers", "openFirst", "obeyParentAccordion"] }, { type: i2__namespace$7.CollapsibleCardComponent, selector: "bb-collapsible-card-ui", inputs: ["isOpen", "ariaLabelForIcon", "aria-label", "hasChevron", "highlight", "shadow", "size"], outputs: ["isOpenChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleAccordionExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-collapsible-accordion-example-ui',
                        templateUrl: './collapsible-accordion.example.component.html',
                    }]
            }] });

    var CollapsibleCardExampleComponent = /** @class */ (function () {
        function CollapsibleCardExampleComponent() {
        }
        return CollapsibleCardExampleComponent;
    }());
    CollapsibleCardExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleCardExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CollapsibleCardExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CollapsibleCardExampleComponent, selector: "bb-collapsible-card-example-ui", ngImport: i0__namespace, template: "<bb-collapsible-card-ui>\n  <span bbCollapsibleTitle>Click me</span>\n  <div bbCollapsibleBody>I am expandable content!</div>\n</bb-collapsible-card-ui>\n", components: [{ type: i2__namespace$7.CollapsibleCardComponent, selector: "bb-collapsible-card-ui", inputs: ["isOpen", "ariaLabelForIcon", "aria-label", "hasChevron", "highlight", "shadow", "size"], outputs: ["isOpenChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleCardExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-collapsible-card-example-ui',
                        templateUrl: './collapsible-card-example.component.html',
                    }]
            }] });

    var CollapsibleExampleComponent = /** @class */ (function () {
        function CollapsibleExampleComponent() {
        }
        return CollapsibleExampleComponent;
    }());
    CollapsibleExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CollapsibleExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CollapsibleExampleComponent, selector: "bb-collapsible-example-ui", ngImport: i0__namespace, template: "<bb-collapsible-ui #collapsible>\n  <ng-template\n    bbCollapsibleHeader\n    let-toggle=\"toggle\"\n    let-isOpen=\"true\"\n  >\n    <button bbButton (click)=\"toggle()\" class=\"bb-block--md\">\n      Toggle\n      <bb-icon-ui\n        [name]=\"collapsible.isOpen ? 'toggle-up' : 'toggle-down'\"\n        [inverse]=\"true\"\n        size=\"md\"\n      ></bb-icon-ui>\n    </button>\n  </ng-template>\n  <ng-template bbCollapsibleBody>\n    <p>I am expandable content!</p>\n  </ng-template>\n</bb-collapsible-ui>\n", components: [{ type: i1__namespace$9.CollapsibleComponent, selector: "bb-collapsible-ui", inputs: ["recreateBodyContent", "hasChevron", "isOpen"], outputs: ["isOpenChange"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i1__namespace$9.CollapsibleHeaderDirective, selector: "ng-template[bbCollapsibleHeader]" }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$9.CollapsibleBodyDirective, selector: "ng-template[bbCollapsibleBody]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-collapsible-example-ui',
                        templateUrl: './collapsible.example.component.html',
                    }]
            }] });

    var CommonErrorStateExampleComponent = /** @class */ (function () {
        function CommonErrorStateExampleComponent() {
            this.pageNotFound = new http.HttpErrorResponse({ status: 404 });
        }
        return CommonErrorStateExampleComponent;
    }());
    CommonErrorStateExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CommonErrorStateExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CommonErrorStateExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CommonErrorStateExampleComponent, selector: "bb-common-error-state-example-ui", ngImport: i0__namespace, template: "<bb-common-error-state-ui\n  [error]=\"pageNotFound\"\n></bb-common-error-state-ui>\n", components: [{ type: i1__namespace$a.ErrorCommonStateComponent, selector: "bb-common-error-state-ui", inputs: ["error"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CommonErrorStateExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-common-error-state-example-ui',
                        templateUrl: './common-error-state.example.component.html',
                    }]
            }] });

    var CurrencyInputExampleComponent = /** @class */ (function () {
        function CurrencyInputExampleComponent() {
            this.amount = new i1$N.FormControl({
                amount: '123.32',
                currency: 'EUR',
            });
            this.currencies = ['USD', 'EUR'];
        }
        return CurrencyInputExampleComponent;
    }());
    CurrencyInputExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrencyInputExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CurrencyInputExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CurrencyInputExampleComponent, selector: "bb-currency-input-example-ui", ngImport: i0__namespace, template: "<bb-currency-input-ui\n  [formControl]=\"amount\"\n  [currencies]=\"currencies\"\n  [allowNegativeValue]=\"true\"\n  resultType=\"string\"\n></bb-currency-input-ui>\n", components: [{ type: i1__namespace$b.CurrencyInputComponent, selector: "bb-currency-input-ui", inputs: ["decMaxLen", "decMinLen", "placeholder", "resultType", "integer", "required", "readonly", "disabled", "integerLabelSrOnly", "decimalLabelSrOnly", "currencies", "isRightAligned", "integerId", "decimalId", "integerLabel", "decimalLabel", "currencyLabel", "allowNegativeValue", "currencyListAriaLabel", "currencyListWithOnItemAriaLabel", "aria-describedby", "aria-labelledby", "aria-invalid"], outputs: ["blur"] }], directives: [{ type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrencyInputExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-currency-input-example-ui',
                        templateUrl: './currency-input.example.component.html',
                    }]
            }] });

    var DatePipeExampleComponent = /** @class */ (function () {
        function DatePipeExampleComponent() {
            this.exampleDate = '2018-12-12T14:29:14.000Z';
        }
        return DatePipeExampleComponent;
    }());
    DatePipeExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DatePipeExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    DatePipeExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DatePipeExampleComponent, selector: "bb-date-pipe-example-ui", ngImport: i0__namespace, template: "<p>\n  {{ exampleDate | bbDate: 'bbShort':'GMT-0700':'en-US' }}\n</p>\n", pipes: { "bbDate": i1__namespace$c.BbDatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DatePipeExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-date-pipe-example-ui',
                        templateUrl: './date-pipe.example.component.html',
                    }]
            }] });

    var DropdownMenuExampleComponent = /** @class */ (function () {
        function DropdownMenuExampleComponent() {
            this.dropdownMenuOptions = [
                { label: '30 minutes', duration: 1800 },
                { label: '1 hour', duration: 3600 },
                { label: '1 day', duration: 86400 },
            ];
            this.dropdownMenuOptionsLabel = this.dropdownMenuOptions.map(function (item) { return item.label; });
        }
        DropdownMenuExampleComponent.prototype.onButtonDropdownSelect = function (label) {
            var item = this.dropdownMenuOptions.find(function (option) { return option.label === label; });
            if (item) {
                this.snooze(item.duration);
            }
        };
        DropdownMenuExampleComponent.prototype.snooze = function (duration) {
            alert("Snooze for " + duration + " seconds");
        };
        return DropdownMenuExampleComponent;
    }());
    DropdownMenuExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMenuExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    DropdownMenuExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownMenuExampleComponent, selector: "bb-dropdown-menu-example-ui", ngImport: i0__namespace, template: "<bb-dropdown-menu-ui\n  container=\"body\"\n  position=\"bottom\"\n  icon=\"caret-down\"\n  btnColor=\"primary\"\n  iconSize=\"lg\"\n  [options]=\"dropdownMenuOptionsLabel\"\n  (select)=\"onButtonDropdownSelect($event)\"\n>\n  <ng-template bbDropdownLabel>\n    <bb-icon-ui name=\"time\" size=\"md\"></bb-icon-ui>\n    &nbsp;\n    <span>Snooze notification</span>\n  </ng-template>\n</bb-dropdown-menu-ui>\n", components: [{ type: i1__namespace$d.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i1__namespace$d.DropdownLabelDirective, selector: "ng-template[bbDropdownLabel]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMenuExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-dropdown-menu-example-ui',
                        templateUrl: './dropdown-menu.example.component.html',
                    }]
            }] });

    var EllipsisExampleComponent = /** @class */ (function () {
        function EllipsisExampleComponent() {
        }
        return EllipsisExampleComponent;
    }());
    EllipsisExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EllipsisExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    EllipsisExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: EllipsisExampleComponent, selector: "bb-ellipsis-example-ui", ngImport: i0__namespace, template: "<div style=\"width: 320px\">\n  <bb-ellipsis-ui\n    [lineClamp]=\"2\"\n    text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n  ></bb-ellipsis-ui>\n</div>\n", components: [{ type: i1__namespace$e.EllipsisComponent, selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EllipsisExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-ellipsis-example-ui',
                        templateUrl: './ellipsis.example.component.html',
                    }]
            }] });

    var EmptyStateExampleComponent = /** @class */ (function () {
        function EmptyStateExampleComponent() {
        }
        return EmptyStateExampleComponent;
    }());
    EmptyStateExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EmptyStateExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    EmptyStateExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: EmptyStateExampleComponent, selector: "bb-empty-state-example-ui", ngImport: i0__namespace, template: "<bb-empty-state-ui\n  title=\"No transactions found\"\n  subtitle=\"Please change your filters<br>and try again\"\n  iconSize=\"lg\"\n  iconModifier=\"error\"\n  iconColor=\"danger\"\n  iconClasses=\"text-muted\"\n  [showIcon]=\"true\"\n></bb-empty-state-ui>\n", components: [{ type: i1__namespace$f.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EmptyStateExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-empty-state-example-ui',
                        templateUrl: './empty-state.example.component.html',
                    }]
            }] });

    var FieldsetExampleComponent = /** @class */ (function () {
        function FieldsetExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                anonymous: false,
                personalInformation: this.formBuilder.group({
                    name: [''],
                    surname: [''],
                }),
            });
        }
        return FieldsetExampleComponent;
    }());
    FieldsetExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    FieldsetExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FieldsetExampleComponent, selector: "bb-fieldset-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <p>\n    <bb-input-checkbox-ui\n      label=\"I wish to remain anonymous\"\n      formControlName=\"anonymous\"\n    ></bb-input-checkbox-ui>\n  </p>\n  <bb-fieldset-ui\n    heading=\"Personal information\"\n    [disabled]=\"vForm?.get('anonymous')?.value\"\n    [formGroup]=\"vForm?.get('personalInformation')\"\n  >\n    <p>\n      <bb-input-text-ui\n        label=\"Name\"\n        formControlName=\"name\"\n      ></bb-input-text-ui>\n    </p>\n    <p>\n      <bb-input-text-ui\n        label=\"Surname\"\n        formControlName=\"surname\"\n      ></bb-input-text-ui>\n    </p>\n  </bb-fieldset-ui>\n</form>\n", components: [{ type: i2__namespace.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }, { type: i3__namespace$1.FieldsetComponent, selector: "bb-fieldset-ui", inputs: ["heading", "disabled"] }, { type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-fieldset-example-ui',
                        templateUrl: './fieldset.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var FileAttachmentExampleComponent = /** @class */ (function () {
        function FileAttachmentExampleComponent() {
            this.attachment = {
                name: 'examplePDF.pdf',
                size: 10000,
                fileContent: rxjs.of(new ArrayBuffer(2000000)),
            };
        }
        return FileAttachmentExampleComponent;
    }());
    FileAttachmentExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FileAttachmentExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    FileAttachmentExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FileAttachmentExampleComponent, selector: "bb-file-attachment-example-ui", ngImport: i0__namespace, template: "<bb-file-attachment-ui\n  [name]=\"attachment.name\"\n  [size]=\"attachment.size\"\n  [fileContent]=\"attachment.fileContent\"\n></bb-file-attachment-ui>\n", components: [{ type: i1__namespace$g.FileAttachmentComponent, selector: "bb-file-attachment-ui", inputs: ["name", "size", "fileContent", "loading", "deletable", "disabled", "block"], outputs: ["delete"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FileAttachmentExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-file-attachment-example-ui',
                        templateUrl: './file-attachment.example.component.html',
                    }]
            }] });

    var HeaderExampleComponent = /** @class */ (function () {
        function HeaderExampleComponent() {
        }
        return HeaderExampleComponent;
    }());
    HeaderExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HeaderExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    HeaderExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: HeaderExampleComponent, selector: "bb-header-example-ui", ngImport: i0__namespace, template: "<bb-header-ui headingType=\"h4\" heading=\"Example Header\"></bb-header-ui>\n", components: [{ type: i1__namespace$h.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HeaderExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-header-example-ui',
                        templateUrl: './header.example.component.html',
                    }]
            }] });

    var IconExampleComponent = /** @class */ (function () {
        function IconExampleComponent() {
        }
        return IconExampleComponent;
    }());
    IconExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IconExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    IconExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: IconExampleComponent, selector: "bb-icon-example-ui", ngImport: i0__namespace, template: "<bb-icon-ui\n  name=\"shopping-cart\"\n  size=\"xxl\"\n  color=\"primary\"\n  backgroundType=\"circle\"\n></bb-icon-ui>\n", components: [{ type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IconExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-icon-example-ui',
                        templateUrl: './icon.example.component.html',
                    }]
            }] });

    var InputCheckboxExampleComponent = /** @class */ (function () {
        function InputCheckboxExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                termsConditions: { value: false },
            });
        }
        return InputCheckboxExampleComponent;
    }());
    InputCheckboxExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputCheckboxExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputCheckboxExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputCheckboxExampleComponent, selector: "bb-input-checkbox-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <p>\n    <bb-input-checkbox-ui\n      label=\"I agree with the Terms & Conditions\"\n      formControlName=\"inputCheckbox\"\n    ></bb-input-checkbox-ui>\n  </p>\n</form>\n", components: [{ type: i2__namespace.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputCheckboxExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-checkbox-example-ui',
                        templateUrl: './input-checkbox.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputDatepickerExampleComponent = /** @class */ (function () {
        function InputDatepickerExampleComponent() {
            this.transferDate = '2024-12-25T00:00:00.000Z';
        }
        return InputDatepickerExampleComponent;
    }());
    InputDatepickerExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputDatepickerExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputDatepickerExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputDatepickerExampleComponent, selector: "bb-input-datepicker-example-ui", ngImport: i0__namespace, template: "<bb-input-datepicker-ui\n  label=\"Schedule transfer\"\n  [(ngModel)]=\"transferDate\"\n></bb-input-datepicker-ui>\n", components: [{ type: i2__namespace$a.InputDatepickerComponent, selector: "bb-input-datepicker-ui", inputs: ["rangeSelection", "rangeSelectionSplit", "clickOpen", "focusOpen", "placement", "datepickerDescribedby", "ariaLabelForButton", "minDate", "maxDate", "markDisabled", "icon", "iconSize", "iconColor", "btnColor", "ariaLabel", "navigation", "autocomplete", "firstDayOfWeek", "displayMonths", "placeholder", "overrideDateFormat"], outputs: ["focusedDate"] }], directives: [{ type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputDatepickerExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-datepicker-example-ui',
                        templateUrl: './input-datepicker.example.component.html',
                    }]
            }] });

    var InputEmailExampleComponent = /** @class */ (function () {
        function InputEmailExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                email: ['info@example.com', i1$N.Validators.required],
            });
        }
        return InputEmailExampleComponent;
    }());
    InputEmailExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputEmailExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputEmailExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputEmailExampleComponent, selector: "bb-input-email-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <bb-input-email-ui\n    label=\"E-mail address\"\n    formControlName=\"email\"\n    placeholder=\"Please enter a value...\"\n  >\n  </bb-input-email-ui>\n</form>\n", components: [{ type: i2__namespace$b.InputEmailComponent, selector: "bb-input-email-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputEmailExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-email-example-ui',
                        templateUrl: './input-email.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputNumberExampleComponent = /** @class */ (function () {
        function InputNumberExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                count: [
                    '',
                    i1$N.Validators.compose([
                        i1$N.Validators.required,
                        i1$N.Validators.min(2),
                        i1$N.Validators.max(42),
                    ]),
                ],
            });
        }
        InputNumberExampleComponent.prototype.isFieldValid = function (fieldName) {
            var control = this.getControl(fieldName);
            return control && (control.valid || control.untouched);
        };
        InputNumberExampleComponent.prototype.getControl = function (fieldName) {
            var _a;
            return (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls[fieldName];
        };
        InputNumberExampleComponent.prototype.hasError = function (field, type) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors[type];
        };
        InputNumberExampleComponent.prototype.hasRequiredError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.required;
        };
        InputNumberExampleComponent.prototype.hasMinError = function (field) {
            return this.hasError(field, 'min');
        };
        InputNumberExampleComponent.prototype.hasMaxError = function (field) {
            return this.hasError(field, 'max');
        };
        return InputNumberExampleComponent;
    }());
    InputNumberExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputNumberExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputNumberExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputNumberExampleComponent, selector: "bb-input-number-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <bb-input-number-ui\n    label=\"Count\"\n    placeholder=\"Enter number...\"\n    formControlName=\"count\"\n    [aria-describedby]=\"'input-number-showcase-error'\"\n    [min]=\"2\"\n    [max]=\"42\"\n    [required]=\"true\"\n    #numberInput\n  >\n  </bb-input-number-ui>\n  <bb-input-validation-message-ui\n    id=\"input-number-showcase-error\"\n    [showErrors]=\"vForm?.dirty && vForm?.get('count')?.errors\"\n  >\n    <p *ngIf=\"hasRequiredError('count')\">Field is required.</p>\n    <p *ngIf=\"hasMinError('count')\">\n      Minimum number allowed is: {{ numberInput.min }}\n    </p>\n    <p *ngIf=\"hasMaxError('count')\">\n      Maximum number allowed is: {{ numberInput.max }}\n    </p>\n  </bb-input-validation-message-ui>\n</form>\n", components: [{ type: i2__namespace$c.InputNumberComponent, selector: "bb-input-number-ui", inputs: ["placeholder", "max", "min", "step", "readonly", "autocomplete", "ariaLabel", "allowNonDigits", "allowNegativeSign"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputNumberExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-number-example-ui',
                        templateUrl: './input-number.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputPhoneExampleComponent = /** @class */ (function () {
        function InputPhoneExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                workPhone: '4151234567',
            });
            this.country = [
                {
                    countryCode: '+91',
                    isoCode: 'IN',
                    countryName: 'India',
                },
            ];
            this.countries = [
                {
                    countryCode: '+1',
                    isoCode: 'US',
                    countryName: 'United States',
                },
                {
                    countryCode: '+31',
                    isoCode: 'NL',
                    countryName: 'Netherlands',
                },
                {
                    countryCode: '+34',
                    isoCode: 'NZ',
                    countryName: 'New Zealand',
                },
                {
                    countryCode: '+355',
                    isoCode: 'AL',
                    countryName: 'Albania',
                },
                {
                    countryCode: '+91',
                    isoCode: 'IN',
                    countryName: 'India',
                },
                {
                    countryCode: '+55',
                    isoCode: 'BR',
                    countryName: 'Brazil',
                },
                {
                    countryCode: '+420',
                    isoCode: 'CZ',
                    countryName: 'Czech Republic',
                },
                {
                    countryCode: '+49',
                    isoCode: 'DE',
                    countryName: 'Germany',
                },
            ];
        }
        return InputPhoneExampleComponent;
    }());
    InputPhoneExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPhoneExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputPhoneExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputPhoneExampleComponent, selector: "bb-input-phone-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <bb-input-phone-ui\n    label=\"Work Phone\"\n    formControlName=\"workPhone\"\n    placeholder=\"Phone number without country code\"\n    autoComplete=\"tel-national\"\n  ></bb-input-phone-ui>\n\n  <bb-input-phone-ui\n    [id]=\"'phoneNumber1'\"\n    label=\"Phone Number\"\n    formControlName=\"workPhone\"\n    placeholder=\"Enter a phone number\"\n    [required]=\"true\"\n    [enableCountryCode]=\"true\"\n    defaultCountryIsoCode=\"BR\"\n    [countryList]=\"countries\"\n  >\n  </bb-input-phone-ui>\n\n  <bb-input-phone-ui\n    [id]=\"'phoneNumber2'\"\n    label=\"Phone Number\"\n    formControlName=\"workPhone\"\n    placeholder=\"Enter a phone number\"\n    [required]=\"true\"\n    [enableCountryCode]=\"true\"\n    [countryList]=\"country\"\n  >\n  </bb-input-phone-ui>\n</form>\n", components: [{ type: i2__namespace$d.InputPhoneComponent, selector: "bb-input-phone-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "ariaLabel", "autocomplete", "countryList", "dropdownPosition", "clearable", "searchable", "defaultCountryIsoCode", "enableCountryCode"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPhoneExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-phone-example-ui',
                        templateUrl: './input-phone.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputRadioGroupExampleComponent = /** @class */ (function () {
        function InputRadioGroupExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.form = this.formBuilder.group({
                accountType: [{ value: '', disabled: false }, i1$N.Validators.required],
            });
        }
        InputRadioGroupExampleComponent.prototype.onRadioTemplateFormSubmit = function (form) {
            console.log(form.value);
        };
        return InputRadioGroupExampleComponent;
    }());
    InputRadioGroupExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRadioGroupExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputRadioGroupExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputRadioGroupExampleComponent, selector: "bb-input-radio-group-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"form\">\n  <p id=\"label-account-type\">Account type</p>\n  <bb-input-radio-group-ui\n    formControlName=\"accountType\"\n    aria-labelledby=\"'label-account-type'\"\n    [horizontal]=\"true\"\n    [preselect]=\"true\"\n    [required]=\"true\"\n  >\n    <bb-input-radio-ui value=\"cr\" label=\"Credit\"></bb-input-radio-ui>\n    <bb-input-radio-ui value=\"dt\" label=\"Debit\"></bb-input-radio-ui>\n  </bb-input-radio-group-ui>\n</form>\n", components: [{ type: i2__namespace$1.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i2__namespace$1.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRadioGroupExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-radio-group-example-ui',
                        templateUrl: './input-radio-group.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputTextExampleComponent = /** @class */ (function () {
        function InputTextExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                name: ['', i1$N.Validators.required],
            });
        }
        return InputTextExampleComponent;
    }());
    InputTextExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTextExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputTextExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputTextExampleComponent, selector: "bb-input-text-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <bb-input-text-ui\n    label=\"First Name\"\n    formControlName=\"name\"\n    [required]=\"true\"\n    placeholder=\"Name\"\n    autoComplete=\"given-name\"\n  ></bb-input-text-ui>\n</form>\n", components: [{ type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTextExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-text-example-ui',
                        templateUrl: './input-text.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputValidationMessageExampleComponent = /** @class */ (function () {
        function InputValidationMessageExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                name: [
                    '',
                    i1$N.Validators.compose([
                        i1$N.Validators.required,
                        i1$N.Validators.minLength(5),
                    ]),
                ],
            });
        }
        InputValidationMessageExampleComponent.prototype.isFieldValid = function (fieldName) {
            var control = this.getControl(fieldName);
            return control && (control.valid || control.untouched);
        };
        InputValidationMessageExampleComponent.prototype.getControl = function (fieldName) {
            var _a;
            return (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls[fieldName];
        };
        InputValidationMessageExampleComponent.prototype.hasError = function (field, type) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors[type];
        };
        InputValidationMessageExampleComponent.prototype.hasLengthError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.minlength;
        };
        InputValidationMessageExampleComponent.prototype.hasRequiredError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.required;
        };
        return InputValidationMessageExampleComponent;
    }());
    InputValidationMessageExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputValidationMessageExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputValidationMessageExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputValidationMessageExampleComponent, selector: "bb-input-validation-message-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <bb-input-text-ui\n    label=\"First Name\"\n    formControlName=\"name\"\n    [aria-describedby]=\"'name-errors'\"\n  ></bb-input-text-ui>\n  <bb-input-validation-message-ui\n    id=\"name-errors\"\n    [showErrors]=\"!isFieldValid('name')\"\n  >\n    <span *ngIf=\"hasRequiredError('name')\"> Field is required. </span>\n    <span *ngIf=\"hasLengthError('name')\">\n      Field has minlength of 5.\n    </span>\n  </bb-input-validation-message-ui>\n</form>\n", components: [{ type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputValidationMessageExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-validation-message-example-ui',
                        templateUrl: './input-validation-message.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var ListMultipleSelectExampleComponent = /** @class */ (function () {
        function ListMultipleSelectExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.listMultipleSelectItemsConfig = {
                i2: {
                    icon: 'warning',
                    iconColor: 'warning',
                },
                i3: {
                    icon: 'warning',
                    iconColor: 'secondary',
                    items: {
                        q2: {
                            icon: 'warning',
                        },
                    },
                },
            };
            this.vForm = this.formBuilder.group({
                listMultipleSelect: this.formBuilder.group({
                    i1: true,
                    i2: true,
                    i3: this.formBuilder.group({
                        q1: false,
                        q2: true,
                        q3: this.formBuilder.group({
                            w1: { value: true, disabled: true },
                            w2: { value: false, disabled: true },
                        }),
                    }),
                }),
            });
        }
        ListMultipleSelectExampleComponent.prototype.onListMultipleSelectClearAll = function ($event) {
            $event.preventDefault();
            if (this.vForm) {
                this.vForm.controls['listMultipleSelect'].patchValue({
                    i1: false,
                    i2: false,
                    i3: {
                        q1: false,
                        q2: false,
                    },
                });
            }
        };
        return ListMultipleSelectExampleComponent;
    }());
    ListMultipleSelectExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ListMultipleSelectExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ListMultipleSelectExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ListMultipleSelectExampleComponent, selector: "bb-list-multiple-select-example-ui", ngImport: i0__namespace, template: "<form class=\"col-6\" [formGroup]=\"vForm\">\n  <bb-list-multiple-select-ui\n    formGroupName=\"listMultipleSelect\"\n    [config]=\"listMultipleSelectItemsConfig\"\n    aria-label=\"List multiple select\"\n  >\n    <ng-template bbListMultipleSelectAction>\n      <a href=\"\" (click)=\"onListMultipleSelectClearAll($event)\">Clear All</a>\n    </ng-template>\n  </bb-list-multiple-select-ui>\n</form>\n", components: [{ type: i2__namespace$e.ListMultipleSelectComponent, selector: "bb-list-multiple-select-ui", inputs: ["config"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i2__namespace$e.ListMultipleSelectActionDirective, selector: "ng-template[bbListMultipleSelectAction]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ListMultipleSelectExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-list-multiple-select-example-ui',
                        templateUrl: './list-multiple-select-example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var LOADING_DURATION = 1500;
    var LoadButtonExampleComponent = /** @class */ (function () {
        function LoadButtonExampleComponent() {
            var _this = this;
            this.itemsPerPage = 4;
            this.page = 0;
            this.totalItems = 12;
            this.loadRequest = new rxjs.Subject();
            this.loadProcedure = this.loadRequest.pipe(operators.mergeMap(function (params) { return _this.loadMore(params); }));
            this.isLoading = rxjs.merge(this.loadRequest.pipe(operators.map(function () { return true; })), this.loadProcedure.pipe(operators.map(function () { return false; }))).pipe(operators.startWith(false));
        }
        LoadButtonExampleComponent.prototype.onLoadButtonPress = function (params) {
            this.loadRequest.next(params);
        };
        LoadButtonExampleComponent.prototype.loadMore = function (params) {
            var _this = this;
            console.log('Loading more...');
            return rxjs.of(params).pipe(operators.delay(LOADING_DURATION), operators.tap(function () {
                _this.page = params.from;
            }));
        };
        return LoadButtonExampleComponent;
    }());
    LoadButtonExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadButtonExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LoadButtonExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoadButtonExampleComponent, selector: "bb-load-button-example-ui", ngImport: i0__namespace, template: "<bb-load-button-ui\n  color=\"primary\"\n  [size]=\"itemsPerPage\"\n  [from]=\"page\"\n  [totalCount]=\"totalItems\"\n  [isLoading]=\"isLoading | async\"\n  buttonSize=\"md\"\n  (paramChange)=\"onLoadButtonPress($event)\"\n>\n  <bb-icon-ui name=\"search\" size=\"lg\" cropped></bb-icon-ui>\n  Show more results...\n</bb-load-button-ui>\n", components: [{ type: i1__namespace$i.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], pipes: { "async": i4__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadButtonExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-load-button-example-ui',
                        templateUrl: './load-button.example.component.html',
                    }]
            }] });

    var LoadingIndicatorExampleComponent = /** @class */ (function () {
        function LoadingIndicatorExampleComponent() {
        }
        return LoadingIndicatorExampleComponent;
    }());
    LoadingIndicatorExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadingIndicatorExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LoadingIndicatorExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoadingIndicatorExampleComponent, selector: "bb-loading-indicator-example-ui", ngImport: i0__namespace, template: "<bb-loading-indicator-ui\n  loaderSize=\"lg\"\n  [showDelay]=\"750\"\n  text=\"Loading...\"\n></bb-loading-indicator-ui>\n", components: [{ type: i1__namespace$j.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadingIndicatorExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-loading-indicator-example-ui',
                        templateUrl: './loading-indicator.example.component.html',
                    }]
            }] });

    var LogoExampleComponent = /** @class */ (function () {
        function LogoExampleComponent() {
        }
        return LogoExampleComponent;
    }());
    LogoExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LogoExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LogoExampleComponent, selector: "bb-logo-example-ui", ngImport: i0__namespace, template: "<div style=\"max-height: 80px; max-width: 80px\">\n  <bb-logo-ui type=\"emblem\"></bb-logo-ui>\n</div>\n", components: [{ type: i1__namespace$k.LogoComponent, selector: "bb-logo-ui", inputs: ["type", "isInverse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-logo-example-ui',
                        templateUrl: './logo.example.component.html',
                    }]
            }] });

    var ModalExampleComponent = /** @class */ (function () {
        function ModalExampleComponent() {
            this.buttonColor = 'primary';
            this.showDialog = false;
        }
        ModalExampleComponent.prototype.openDialog = function () {
            this.showDialog = true;
        };
        ModalExampleComponent.prototype.closeDialog = function () {
            this.showDialog = false;
        };
        ModalExampleComponent.prototype.changeColor = function () {
            this.buttonColor =
                this.buttonColor === 'primary' ? 'secondary' : 'primary';
        };
        ModalExampleComponent.prototype.onConfirmDialog = function () {
            this.changeColor();
            this.closeDialog();
        };
        return ModalExampleComponent;
    }());
    ModalExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModalExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ModalExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModalExampleComponent, selector: "bb-modal-example-ui", ngImport: i0__namespace, template: "<div id=\"ariaDescribedById\">\n  Confirm Changing the color By Clicking on the button\n</div>\n<button\n  #button\n  bbButton\n  type=\"button\"\n  [color]=\"buttonColor\"\n  (click)=\"openDialog()\"\n  id=\"ariaLabelledByID\"\n>\n  Click here to change the color!\n</button>\n<bb-modal-ui\n  [isOpen]=\"showDialog\"\n  (cancel)=\"closeDialog()\"\n  (confirm)=\"onConfirmDialog()\"\n  [aria-describedby]=\"'ariaDescribedById'\"\n  [aria-labelledby]=\"'ariaLabelledByID'\"\n>\n  <bb-modal-header-ui\n    title=\"Confirm changing the color\"\n  ></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      Are you sure you want to change the color?\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui confirmText=\"I Agree\" (confirm)=\"closeDialog()\">\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$l.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$l.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1__namespace$l.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$l.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$l.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModalExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-modal-example-ui',
                        templateUrl: './modal.example.component.html',
                    }]
            }] });

    var ModeHeaderExampleComponent = /** @class */ (function () {
        function ModeHeaderExampleComponent() {
        }
        ModeHeaderExampleComponent.prototype.onCloseModeHeaderClick = function () {
            console.log('Mode header closed');
        };
        ModeHeaderExampleComponent.prototype.onActionOneClick = function () {
            console.log('Action one clicked');
        };
        ModeHeaderExampleComponent.prototype.onActionTwoClick = function () {
            console.log('Action two clicked');
        };
        return ModeHeaderExampleComponent;
    }());
    ModeHeaderExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ModeHeaderExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModeHeaderExampleComponent, selector: "bb-mode-header-example-ui", ngImport: i0__namespace, template: "<bb-mode-header-ui\n  title=\"Sarah Conners\"\n  secondaryTitle=\"Retail banking user\"\n  closeButtonAriaLabel=\"Close mode header to exit the user details section\"\n  [showCloseButton]=\"true\"\n  [reverseTitleOrder]=\"true\"\n  (close)=\"onCloseModeHeaderClick()\"\n>\n  <bb-icon-ui\n    mode-header-icon\n    name=\"search\"\n    class=\"bb-stack__item--fill\"\n    size=\"sm\"\n    color=\"primary\"\n  ></bb-icon-ui>\n  <bb-badge-ui mode-header-status text=\"Sample Text\" color=\"success\">\n  </bb-badge-ui>\n  <bb-dropdown-menu-ui\n    mode-header-utility-area\n    container=\"body\"\n    icon=\"caret-down\"\n    btnColor=\"primary\"\n    iconSize=\"md\"\n  >\n    <ng-template bbDropdownLabel> <span>Actions</span></ng-template>\n    <ng-template bbDropdownMenuItem>\n      <button\n        class=\"dropdown-item\"\n        type=\"button\"\n        (click)=\"onActionOneClick()\"\n      >\n        Action One\n      </button>\n      <button\n        class=\"dropdown-item\"\n        type=\"button\"\n        (click)=\"onActionTwoClick()\"\n      >\n        Action Two\n      </button>\n    </ng-template>\n  </bb-dropdown-menu-ui>\n</bb-mode-header-ui>\n", components: [{ type: i1__namespace$m.ModeHeaderComponent, selector: "bb-mode-header-ui", inputs: ["title", "secondaryTitle", "showCloseButton", "closeButtonAriaLabel", "reverseTitleOrder"], outputs: ["close"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3__namespace.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i1__namespace$d.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }], directives: [{ type: i1__namespace$d.DropdownLabelDirective, selector: "ng-template[bbDropdownLabel]" }, { type: i1__namespace$d.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-mode-header-example-ui',
                        templateUrl: './mode-header.example.component.html',
                    }]
            }] });

    var LOAD_DELAY = 500;
    var NotificationExampleComponent = /** @class */ (function () {
        function NotificationExampleComponent(notificationService) {
            this.notificationService = notificationService;
        }
        NotificationExampleComponent.prototype.checkMail = function () {
            var _this = this;
            setTimeout(function () { return _this.showNewMailNotification(); }, LOAD_DELAY);
        };
        NotificationExampleComponent.prototype.checkMailTemplate = function () {
            var _this = this;
            setTimeout(function () { return _this.showNewMailNotificationWithTemplateMesage(); }, LOAD_DELAY);
        };
        NotificationExampleComponent.prototype.showNewMailNotification = function () {
            this.notificationService.showNotification({
                header: 'You\'ve got new mail!',
                message: 'Backbase Release 1.2.3 is now available! What’s new in this release? ...',
                modifier: 'info',
                dismissible: true,
                primaryActionText: 'Visit website',
                primaryAction: function () {
                    window.location.href = 'https://backbase.com/';
                },
            });
        };
        NotificationExampleComponent.prototype.showNewMailNotificationWithTemplateMesage = function () {
            this.notificationService.showNotification({
                header: 'You\'ve got new mail!',
                message: this.messageTemplate,
                modifier: 'info',
                dismissible: true,
                primaryActionText: 'Visit website',
                primaryAction: function () {
                    window.location.href = 'https://backbase.com/';
                },
            });
        };
        return NotificationExampleComponent;
    }());
    NotificationExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationExampleComponent, deps: [{ token: i1__namespace$n.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    NotificationExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationExampleComponent, selector: "bb-notification-example-ui", viewQueries: [{ propertyName: "messageTemplate", first: true, predicate: ["messageTemplate"], descendants: true, static: true }], ngImport: i0__namespace, template: "<button\n  type=\"button\"\n  (click)=\"checkMail()\"\n  bbButton\n  [buttonSize]=\"'md'\"\n  [color]=\"'primary'\"\n>\n  Check for new mails\n</button>\n\n<button\n  type=\"button\"\n  (click)=\"checkMailTemplate()\"\n  bbButton\n  [buttonSize]=\"'md'\"\n  [color]=\"'primary'\"\n>\n  Check for new mails (message template)\n</button>\n\n<ng-template #messageTemplate>\n  <p>Backbase Release <strong>3.8.0</strong> is now available!</p>\n</ng-template>\n", directives: [{ type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-notification-example-ui',
                        templateUrl: './notification.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$n.NotificationService }]; }, propDecorators: { messageTemplate: [{
                    type: i0.ViewChild,
                    args: ['messageTemplate', { static: true }]
                }] } });

    var PaginationExampleComponent = /** @class */ (function () {
        function PaginationExampleComponent() {
            this.page = 0;
            this.totalItems = 100;
        }
        PaginationExampleComponent.prototype.onPageChange = function (page) {
            this.page = page;
        };
        return PaginationExampleComponent;
    }());
    PaginationExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaginationExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaginationExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaginationExampleComponent, selector: "bb-pagination-example-ui", ngImport: i0__namespace, template: "<bb-pagination-ui\n  [boundaryLinks]=\"true\"\n  [directionLinks]=\"true\"\n  [itemsPerPage]=\"10\"\n  [maxNavPages]=\"2\"\n  [page]=\"0\"\n  [totalItems]=\"totalItems\"\n  (pageChange)=\"onPageChange($event)\"\n></bb-pagination-ui>\n", components: [{ type: i1__namespace$o.PaginatorComponent, selector: "bb-pagination-ui", inputs: ["page", "boundaryLinks", "directionLinks", "totalItems", "itemsPerPage", "maxNavPages"], outputs: ["pageChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaginationExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-pagination-example-ui',
                        templateUrl: './pagination.example.component.html',
                    }]
            }] });

    var PaymentCardExampleComponent = /** @class */ (function () {
        function PaymentCardExampleComponent() {
            this.paymentCard = {
                name: 'Ricardo Peterson',
                number: '5678',
                vendor: 'mastercard',
                expirationDate: new Date(2021, 2),
                cardName: 'Backbase Blue Card',
            };
            this.numberFormat = {
                length: 16,
                maskRange: [0, 12],
                segments: 4,
            };
        }
        return PaymentCardExampleComponent;
    }());
    PaymentCardExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentCardExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentCardExampleComponent, selector: "bb-payment-card-example-ui", ngImport: i0__namespace, template: "<bb-payment-card-ui\n  [paymentCard]=\"paymentCard\"\n  [paymentCardNumberFormat]=\"numberFormat\"\n></bb-payment-card-ui>\n", components: [{ type: i1__namespace$p.PaymentCardComponent, selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-card-example-ui',
                        templateUrl: './payment-card.example.component.html',
                    }]
            }] });

    var dateTimeToDate = function (isoDateTime) { return isoDateTime.replace(/T.+/, ''); };
    var PeriodSelectorExampleComponent = /** @class */ (function () {
        function PeriodSelectorExampleComponent() {
            this.startDate = new Date('2018-08-01');
            this.endDate = new Date('2018-08-31');
            this.periodFormatters = {
                start: function (date) { return dateTimeToDate(date.toISOString()); },
                end: function (date) { return "End: " + dateTimeToDate(date.toISOString()); },
            };
        }
        return PeriodSelectorExampleComponent;
    }());
    PeriodSelectorExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PeriodSelectorExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PeriodSelectorExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PeriodSelectorExampleComponent, selector: "bb-period-selector-example-ui", ngImport: i0__namespace, template: "<bb-period-selector-ui\n  periodSize=\"month\"\n  [periodStart]=\"startDate\"\n  [periodEnd]=\"endDate\"\n  [periodFormatters]=\"periodFormatters\"\n></bb-period-selector-ui>\n", components: [{ type: i1__namespace$q.PeriodSelectorComponent, selector: "bb-period-selector-ui", inputs: ["periodStart", "periodEnd", "periodFormatters", "period"], outputs: ["periodChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PeriodSelectorExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-period-selector-example-ui',
                        templateUrl: './period-selector.example.component.html',
                    }]
            }] });

    var ProductItemBasicAccountExampleComponent = /** @class */ (function () {
        function ProductItemBasicAccountExampleComponent() {
            this.product = {
                id: 'b387bfa5-75fd-410e-bb86-7f764f8ef69c',
                name: 'Ricardo Norton\'s Savings Account',
                currency: 'EUR',
                amount: '83652.32',
                productNumber: 'NL75INGB3400120056',
            };
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 0],
                segments: 4,
            };
        }
        return ProductItemBasicAccountExampleComponent;
    }());
    ProductItemBasicAccountExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemBasicAccountExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemBasicAccountExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemBasicAccountExampleComponent, selector: "bb-product-item-basic-account-example-ui", ngImport: i0__namespace, template: "<bb-product-item-basic-account-ui\n  [title]=\"product.name\"\n  [amount]=\"product.amount\"\n  [productNumber]=\"product.productNumber\"\n  [currency]=\"product.currency\"\n  [productNumberFormat]=\"productNumberFormat\"\n  [highlight]=\"false\"\n  [favorite]=\"false\"\n  [active]=\"false\"\n  balanceLabel=\"Available balance\"\n></bb-product-item-basic-account-ui>\n", components: [{ type: i2__namespace$f.ProductItemBasicAccountComponent, selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemBasicAccountExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-basic-account-example-ui',
                        templateUrl: './product-item-basic-account.example.component.html',
                    }]
            }] });

    var ProductItemCreditCardExampleComponent = /** @class */ (function () {
        function ProductItemCreditCardExampleComponent() {
            this.product = {
                id: 'b387bfa5-75fd-410e-bb86-7f764f8ef69c',
                name: 'Ricardo Norton\'s Credit Card',
                currency: 'USD',
                amount: '1425.99',
                productNumber: 'CH6629039MLXHC9VOO7M9',
            };
            this.interest = {
                id: 'd2d85314-e60c-44af-ba98-8f704dad5970',
                name: 'Available Balance',
                currency: 'USD',
                amount: '880.54',
                productNumber: 'CH6629039MLXHC9VOO7M9',
            };
            this.credit = {
                id: 'e9af649e-e338-4b3e-808b-62e9feae0865',
                name: 'Credit Limit',
                currency: 'USD',
                amount: '7280.86',
            };
            this.productDetails = {
                owner: 'Richard Norton',
            };
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 0],
                segments: 4,
            };
        }
        return ProductItemCreditCardExampleComponent;
    }());
    ProductItemCreditCardExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCreditCardExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemCreditCardExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemCreditCardExampleComponent, selector: "bb-product-item-credit-card-example-ui", ngImport: i0__namespace, template: "<bb-product-item-credit-card-ui\n  [title]=\"product.name\"\n  [amount]=\"product.amount\"\n  [productNumber]=\"product.productNumber\"\n  [currency]=\"product.currency\"\n  [productNumberFormat]=\"productNumberFormat\"\n  [mainSectionCurrency]=\"interest.currency\"\n  [mainSectionAmount]=\"interest.amount\"\n  [mainSectionTitle]=\"interest.name\"\n  [secondarySectionCurrency]=\"credit.currency\"\n  [secondarySectionAmount]=\"credit.amount\"\n  [secondarySectionTitle]=\"credit.name\"\n  [productDetailsInfo]=\"productDetails\"\n  [highlight]=\"false\"\n  [favorite]=\"false\"\n></bb-product-item-credit-card-ui>\n", components: [{ type: i1__namespace$r.ProductItemCreditCardComponent, selector: "bb-product-item-credit-card-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "secondarySectionCurrency", "secondarySectionAmount", "secondarySectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCreditCardExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-credit-card-example-ui',
                        templateUrl: './product-item-credit-card.example.component.html',
                    }]
            }] });

    var ProductItemCurrentAccountExampleComponent = /** @class */ (function () {
        function ProductItemCurrentAccountExampleComponent() {
            this.product = {
                id: 'b387bfa5-75fd-410e-bb86-7f764f8ef69c',
                name: 'Ricardo Norton\'s Account',
                currency: 'EUR',
                amount: '83652.32',
                productNumber: 'NL75INGB3400120056',
            };
            this.interest = {
                id: 'd2d85314-e60c-44af-ba98-8f704dad5970',
                name: 'Accrued Interest',
                currency: 'EUR',
                amount: '880.54',
                productNumber: 'NL75INGB3400120056',
            };
            this.credit = {
                id: 'e9af649e-e338-4b3e-808b-62e9feae0865',
                name: 'Credit Limit',
                currency: 'EUR',
                amount: '7500',
            };
            this.productDetails = {
                owner: 'Richard Norton',
            };
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 12],
                segments: 4,
            };
        }
        return ProductItemCurrentAccountExampleComponent;
    }());
    ProductItemCurrentAccountExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCurrentAccountExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemCurrentAccountExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemCurrentAccountExampleComponent, selector: "bb-product-item-current-account-example-ui", ngImport: i0__namespace, template: "<bb-product-item-current-account-ui\n  [title]=\"product.name\"\n  [amount]=\"product.amount\"\n  [productNumber]=\"product.productNumber\"\n  [currency]=\"product.currency\"\n  [productNumberFormat]=\"productNumberFormat\"\n  [mainSectionCurrency]=\"interest.currency\"\n  [mainSectionAmount]=\"interest.amount\"\n  [mainSectionTitle]=\"interest.name\"\n  [secondarySectionCurrency]=\"credit.currency\"\n  [secondarySectionAmount]=\"credit.amount\"\n  [secondarySectionTitle]=\"credit.name\"\n  [productDetailsInfo]=\"productDetails\"\n  [highlight]=\"false\"\n  [favorite]=\"true\"\n>\n</bb-product-item-current-account-ui>\n", components: [{ type: i1__namespace$s.ProductItemCurrentAccountComponent, selector: "bb-product-item-current-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "secondarySectionCurrency", "secondarySectionAmount", "secondarySectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCurrentAccountExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-current-account-example-ui',
                        templateUrl: './product-item-current-account.example.component.html',
                    }]
            }] });

    var ProductItemDebitCardExampleComponent = /** @class */ (function () {
        function ProductItemDebitCardExampleComponent() {
            this.product = {
                id: 'b387bfa5-75fd-410e-bb86-7f764f8ef69c',
                name: 'Ricardo Norton\'s Savings Account',
                currency: 'EUR',
                amount: '83652.32',
                productNumber: 'NL75INGB3400120056',
            };
            this.productDetails = {
                owner: 'Richard Norton',
            };
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 0],
                segments: 4,
            };
        }
        return ProductItemDebitCardExampleComponent;
    }());
    ProductItemDebitCardExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemDebitCardExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemDebitCardExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemDebitCardExampleComponent, selector: "bb-product-item-debit-card-example-ui", ngImport: i0__namespace, template: "<bb-product-item-debit-card-ui\n  [title]=\"product.name\"\n  [productNumber]=\"product.productNumber\"\n  [productNumberFormat]=\"productNumberFormat\"\n  [highlight]=\"false\"\n  [favorite]=\"false\"\n  [active]=\"false\"\n  [productDetailsInfo]=\"productDetails\"\n></bb-product-item-debit-card-ui>\n", components: [{ type: i1__namespace$t.ProductItemDebitCardComponent, selector: "bb-product-item-debit-card-ui", inputs: ["title", "productNumber", "productNumberFormat", "highlight", "active", "productDetailsInfo", "favorite", "favoriteIconColor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemDebitCardExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-debit-card-example-ui',
                        templateUrl: './product-item-debit-card.example.component.html',
                    }]
            }] });

    var ProductItemInvestmentAccountExampleComponent = /** @class */ (function () {
        function ProductItemInvestmentAccountExampleComponent() {
            this.product = {
                id: 'b387bfa5-75fd-410e-bb86-7f764f8ef69c',
                name: 'Ricardo Norton\'s Savings Account',
                currency: 'EUR',
                amount: '83652.32',
                productNumber: 'NL75INGB3400120056',
            };
            this.productDetails = {
                owner: 'Richard Norton',
            };
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 0],
                segments: 4,
            };
        }
        return ProductItemInvestmentAccountExampleComponent;
    }());
    ProductItemInvestmentAccountExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemInvestmentAccountExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemInvestmentAccountExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemInvestmentAccountExampleComponent, selector: "bb-product-item-investment-account-example-ui", ngImport: i0__namespace, template: "<bb-product-item-investment-account-ui\n  [title]=\"product.name\"\n  [amount]=\"product.amount\"\n  [productNumber]=\"product.productNumber\"\n  [currency]=\"product.currency\"\n  [productNumberFormat]=\"productNumberFormat\"\n  [productDetailsInfo]=\"productDetails\"\n  [highlight]=\"false\"\n  [favorite]=\"false\"\n  [active]=\"false\"\n></bb-product-item-investment-account-ui>\n", components: [{ type: i1__namespace$u.ProductItemInvestmentAccountComponent, selector: "bb-product-item-investment-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemInvestmentAccountExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-investment-account-example-ui',
                        templateUrl: './product-item-investment-account.example.component.html',
                    }]
            }] });

    var ProductItemLoanExampleComponent = /** @class */ (function () {
        function ProductItemLoanExampleComponent() {
            this.product = {
                id: 'b387bfa5-75fd-410e-bb86-7f764f8ef69c',
                name: 'Ricardo Norton`s Savings Account',
                currency: 'EUR',
                amount: '83652.32',
                productNumber: 'NL75INGB3400120056',
            };
            this.productDetails = {
                owner: 'Richard Norton',
            };
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 0],
                segments: 4,
            };
        }
        return ProductItemLoanExampleComponent;
    }());
    ProductItemLoanExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemLoanExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemLoanExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemLoanExampleComponent, selector: "bb-product-item-loan-example-ui", ngImport: i0__namespace, template: "<bb-product-item-loan-ui\n  [title]=\"product.name\"\n  [amount]=\"product.amount\"\n  [productNumber]=\"product.productNumber\"\n  [currency]=\"product.currency\"\n  [productNumberFormat]=\"productNumberFormat\"\n  [productDetailsInfo]=\"productDetails\"\n  [highlight]=\"false\"\n  [favorite]=\"false\"\n  [active]=\"false\"\n></bb-product-item-loan-ui>\n", components: [{ type: i1__namespace$v.ProductItemLoanComponent, selector: "bb-product-item-loan-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemLoanExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-loan-example-ui',
                        templateUrl: './product-item-loan.example.component.html',
                    }]
            }] });

    var ProductItemSavingsAccountExampleComponent = /** @class */ (function () {
        function ProductItemSavingsAccountExampleComponent() {
            this.product = {
                id: 'b387bfa5-75fd-410e-bb86-7f764f8ef69c',
                name: 'Ricardo Norton\'s Savings Account',
                currency: 'EUR',
                amount: '6610.75',
                productNumber: 'NL75INGB34008927',
            };
            this.interest = {
                id: 'd2d85314-e60c-44af-ba98-8f704dad5970',
                name: 'Accrued Interest',
                currency: 'EUR',
                amount: '880.54',
                productNumber: 'NL75INGB34008927',
            };
            this.productDetails = {
                owner: 'Richard Norton',
            };
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 12],
                segments: 4,
            };
        }
        return ProductItemSavingsAccountExampleComponent;
    }());
    ProductItemSavingsAccountExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemSavingsAccountExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemSavingsAccountExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemSavingsAccountExampleComponent, selector: "bb-product-item-savings-account-example-ui", ngImport: i0__namespace, template: "<bb-product-item-savings-account-ui\n  [title]=\"product.name\"\n  [amount]=\"product.amount\"\n  [productNumber]=\"product.productNumber\"\n  [currency]=\"product.currency\"\n  [productNumberFormat]=\"productNumberFormat\"\n  [mainSectionCurrency]=\"interest.currency\"\n  [mainSectionAmount]=\"interest.amount\"\n  [mainSectionTitle]=\"interest.name\"\n  [productDetailsInfo]=\"productDetails\"\n  [highlight]=\"false\"\n  [favorite]=\"true\"\n></bb-product-item-savings-account-ui>\n", components: [{ type: i1__namespace$w.ProductItemSavingsAccountComponent, selector: "bb-product-item-savings-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemSavingsAccountExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-savings-account-example-ui',
                        templateUrl: './product-item-savings-account.example.component.html',
                    }]
            }] });

    var ProductItemTermDepositExampleComponent = /** @class */ (function () {
        function ProductItemTermDepositExampleComponent() {
            this.product = {
                id: 'b387bfa5-75fd-410e-bb86-7f764f8ef69c',
                name: 'Ricardo Norton`s Account',
                currency: 'EUR',
                amount: '83652.32',
                productNumber: 'NL75INGB3400120056',
            };
            this.interest = {
                id: 'd2d85314-e60c-44af-ba98-8f704dad5970',
                name: 'Accrued Interest',
                currency: 'EUR',
                amount: '880.54',
                productNumber: 'NL75INGB3400120056',
            };
            this.productDetails = {
                owner: 'Richard Norton',
            };
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 12],
                segments: 4,
            };
        }
        return ProductItemTermDepositExampleComponent;
    }());
    ProductItemTermDepositExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemTermDepositExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemTermDepositExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemTermDepositExampleComponent, selector: "bb-product-item-term-deposit-example-ui", ngImport: i0__namespace, template: "<bb-product-item-term-deposit-ui\n  [title]=\"product.name\"\n  [amount]=\"product.amount\"\n  [productNumber]=\"product.productNumber\"\n  [currency]=\"product.currency\"\n  [productNumberFormat]=\"productNumberFormat\"\n  [mainSectionCurrency]=\"interest.currency\"\n  [mainSectionAmount]=\"interest.amount\"\n  [mainSectionTitle]=\"interest.name\"\n  [productDetailsInfo]=\"productDetails\"\n  [highlight]=\"false\"\n  [favorite]=\"true\"\n></bb-product-item-term-deposit-ui>\n", components: [{ type: i1__namespace$x.ProductItemTermDepositComponent, selector: "bb-product-item-term-deposit-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemTermDepositExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-term-deposit-example-ui',
                        templateUrl: './product-item-term-deposit.example.component.html',
                    }]
            }] });

    var products = [
        {
            id: '1cdb2224',
            amount: '1231',
            currency: 'EUR',
            productNumber: '2342 443234 4234',
            name: 'Some Name',
            productType: 'currentAccounts',
        },
        {
            id: '1cdb222sgdfd4',
            amount: '123123',
            currency: 'EUR',
            productNumber: '2342 443234 4234432',
            name: 'Some Name 234',
            productType: 'my Type 234',
            custonType: 'header',
            header: 'savingsAccounts',
        },
        {
            id: '1cdb222gdfgsd4',
            amount: '123123',
            currency: 'EUR',
            productNumber: '2342 443234 4234432',
            name: 'Some NA34534',
            productType: 'termDeposits',
        },
        {
            id: '1cdb222sdfgd4',
            amount: '123123',
            currency: 'EUR',
            productNumber: '2342 443234 4234432',
            name: 'Some NA3454',
            productType: 'loans',
        },
        {
            id: '1cddfgb222sd4',
            amount: '123123',
            currency: 'EUR',
            productNumber: '2342 443234 4234432',
            name: 'Some N34534',
            productType: 'creditCards',
        },
        {
            id: '1cdb2sfd22sd4',
            amount: '123123',
            currency: 'EUR',
            productNumber: '2342 443233454 4234432',
            name: 'Some NAm345',
            productType: 'debitCards',
        },
        {
            id: '1cdb2df22sd4',
            amount: '123123',
            currency: 'EUR',
            productNumber: '2343542 443234 4234432',
            name: 'Some Name 234',
            productType: 'investmentAccounts',
        },
    ];

    var ProductSelectorExampleComponent = /** @class */ (function () {
        function ProductSelectorExampleComponent() {
            this.products = products;
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 12],
                segments: 4,
            };
        }
        ProductSelectorExampleComponent.prototype.selectProduct = function (product) {
            this.selected = product;
        };
        return ProductSelectorExampleComponent;
    }());
    ProductSelectorExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSelectorExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSelectorExampleComponent, selector: "bb-product-selector-example-ui", ngImport: i0__namespace, template: "<bb-product-selector-ui [autoClose]=\"false\">\n  <ng-container bbDropdownToggle>\n    <bb-product-item-basic-account-ui\n      class=\"text-left\"\n      *ngIf=\"selected\"\n      [title]=\"selected.name\"\n      [amount]=\"selected.amount\"\n      [productNumber]=\"selected.productNumber\"\n      [currency]=\"selected.currency\"\n      [productNumberFormat]=\"productNumberFormat\"\n      [active]=\"true\"\n    >\n    </bb-product-item-basic-account-ui>\n    <div *ngIf=\"!selected\" class=\"p-4 d-flex align-items-center\">\n      <span class=\"align-items-left py-2\"> Select a product </span>\n    </div>\n  </ng-container>\n  <ng-container bbDropdownMenu>\n    <button\n      *ngFor=\"let product of products\"\n      (click)=\"selectProduct(product)\"\n      type=\"button\"\n      role=\"option\"\n      class=\"\n        flex-column\n        align-items-stretch\n        btn btn-block\n        rounded-0\n        m-0\n        p-0\n        text-left\n        bg-white\n      \"\n    >\n      <bb-product-item-basic-account-ui\n        [title]=\"product.name\"\n        [amount]=\"product.amount\"\n        [productNumber]=\"product.productNumber\"\n        [currency]=\"product.currency\"\n        [productNumberFormat]=\"productNumberFormat\"\n        [active]=\"product.id === selected?.id\"\n      ></bb-product-item-basic-account-ui>\n    </button>\n  </ng-container>\n</bb-product-selector-ui>\n", components: [{ type: i1__namespace$y.ProductSelectorComponent, selector: "bb-product-selector-ui", inputs: ["autoClose", "position", "container"] }, { type: i2__namespace$f.ProductItemBasicAccountComponent, selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-selector-example-ui',
                        templateUrl: './product-selector.example.component.html',
                    }]
            }] });

    var RichTextEditorExampleComponent = /** @class */ (function () {
        function RichTextEditorExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                remarks: '',
            });
        }
        return RichTextEditorExampleComponent;
    }());
    RichTextEditorExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorExampleComponent, selector: "bb-rich-text-editor-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <bb-rich-text-editor-ui\n    label=\"Remarks\"\n    formControlName=\"remarks\"\n    placeholder=\"Please, enter your message\"\n    [maxLength]=\"300\"\n    [required]=\"true\"\n  >\n  </bb-rich-text-editor-ui>\n</form>\n", components: [{ type: i2__namespace$g.RichTextEditorComponent, selector: "bb-rich-text-editor-ui", inputs: ["maxLength", "minLength", "placeholder", "counter", "readonly", "actionsTooltipPlacement"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-example-ui',
                        templateUrl: './rich-text-editor.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var SearchBoxExampleComponent = /** @class */ (function () {
        function SearchBoxExampleComponent() {
            this.form = new i1$N.FormGroup({
                query: new i1$N.FormControl(''),
            });
            this.typeaheadOptions = {
                ngbTypeahead: this.search,
            };
        }
        SearchBoxExampleComponent.prototype.startSearching = function (value) {
            alert("You are searching for " + value);
        };
        SearchBoxExampleComponent.prototype.search = function (text) {
            var searchItems = ['John', 'Jane', 'James', 'Joey'];
            return text.pipe(operators.map(function (term) { return searchItems.filter(function (item) { return item.toLowerCase().indexOf(term.toLowerCase()) === 0; }); }));
        };
        return SearchBoxExampleComponent;
    }());
    SearchBoxExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    SearchBoxExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SearchBoxExampleComponent, selector: "bb-search-box-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"form\">\n  <h4 id=\"ariaLabelledby\">Example Search Box</h4>\n  <div class=\"bb-block bb-block--lg\">\n    <h5 id=\"ariaDescribedby\">\n      Search box with search and clear button.\n    </h5>\n    <bb-search-box-ui\n      formControlName=\"query\"\n      [showClear]=\"true\"\n      [showSearch]=\"true\"\n      placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n      [typeaheadOptions]=\"typeaheadOptions\"\n      (submit)=\"startSearching($event)\"\n      [aria-labelledby]=\"'ariaLabelledby'\"\n      [aria-describedby]=\"'ariaDescribedby'\"\n    ></bb-search-box-ui>\n  </div>\n</form>\n", components: [{ type: i1__namespace$z.SearchBoxComponent, selector: "bb-search-box-ui", inputs: ["placeholder", "maxLength", "squareBorder", "typeaheadOptions", "showSearch", "showClear", "searchLabel", "clearLabel", "autocomplete"], outputs: ["submit", "clear", "valueChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-search-box-example-ui',
                        templateUrl: './search-box.example.component.html',
                    }]
            }] });

    var SwitchExampleComponent = /** @class */ (function () {
        function SwitchExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                notifications: true,
            });
        }
        return SwitchExampleComponent;
    }());
    SwitchExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SwitchExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    SwitchExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SwitchExampleComponent, selector: "bb-switch-example-ui", ngImport: i0__namespace, template: "<bb-switch-ui\n  [labelPosition]=\"'right'\"\n  [label]=\"'Show notifications'\"\n  formControlName=\"notifications\"\n>\n</bb-switch-ui>\n", components: [{ type: i2__namespace$h.SwitchComponent, selector: "bb-switch-ui", inputs: ["labelPosition"] }], directives: [{ type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SwitchExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-switch-example-ui',
                        templateUrl: './switch.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var TextareaExampleComponent = /** @class */ (function () {
        function TextareaExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                textarea: ['', i1$N.Validators.minLength(3)],
            });
        }
        return TextareaExampleComponent;
    }());
    TextareaExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TextareaExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TextareaExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TextareaExampleComponent, selector: "bb-textarea-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <p>\n    <bb-textarea-ui\n      label=\"Additional remarks\"\n      placeholder=\"Enter text...\"\n      formControlName=\"textarea\"\n      [showCharCounter]=\"true\"\n      [minLength]=\"3\"\n      [maxLength]=\"160\"\n      [rows]=\"4\"\n    >\n    </bb-textarea-ui>\n  </p>\n</form>\n", components: [{ type: i2__namespace$i.TextareaComponent, selector: "bb-textarea-ui", inputs: ["rows", "cols", "placeholder", "maxLength", "minLength", "readonly", "showCharCounter", "wrap"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TextareaExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-textarea-example-ui',
                        templateUrl: './textarea.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var DropdownSingleSelectExampleComponent = /** @class */ (function () {
        function DropdownSingleSelectExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.objectDropdownOptions = [
                { title: 'DuckDuckGo', url: 'https://www.duckduckgo.com' },
                { title: 'Google', url: 'https://google.com' },
                { title: 'Yahoo', url: 'https://yahoo.com' },
            ];
            this.stringDropdownOptions = ['DuckDuckGo', 'Google', 'Yahoo'];
            this.frequencies = [
                {
                    value: 'ONCE',
                    every: 1,
                },
                {
                    value: 'DAILY',
                    every: 1,
                },
                {
                    value: 'WEEKLY',
                    every: 1,
                },
                {
                    value: 'BIWEEKLY',
                    every: 1,
                },
                {
                    value: 'MONTHLY',
                    every: 1,
                },
                {
                    value: 'QUARTERLY',
                    every: 1,
                },
                {
                    value: 'YEARLY',
                    every: 1,
                },
            ];
            this.vForm = this.formBuilder.group({
                websiteStrings: [
                    this.stringDropdownOptions[0],
                    i1$N.Validators.required,
                ],
                websiteObjects: [
                    this.objectDropdownOptions[0],
                    i1$N.Validators.required,
                ],
                frequency: [
                    {
                        value: 'ONCE',
                        every: 1,
                    },
                    i1$N.Validators.required,
                ],
            });
        }
        DropdownSingleSelectExampleComponent.prototype.compareByValue = function (p1, p2) {
            if (!p1 || !p2)
                return;
            return p1.value === p2.value;
        };
        return DropdownSingleSelectExampleComponent;
    }());
    DropdownSingleSelectExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownSingleSelectExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    DropdownSingleSelectExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownSingleSelectExampleComponent, selector: "bb-dropdown-single-select-example-ui", ngImport: i0__namespace, template: "<h4 id=\"ariaLabelledById\">Single select Dropdown</h4>\n<div id=\"ariaDescribedById\">Default with list of string as options</div>\n<div [formGroup]=\"vForm\">\n  <bb-dropdown-single-select-ui\n    label=\"Choose your search engine\"\n    placeholder=\"No search engine selected\"\n    formControlName=\"websiteStrings\"\n    [options]=\"stringDropdownOptions\"\n    [required]=\"true\"\n    [id]=\"'singleDropdown'\"\n    class=\"d-block bb-block bb-block--lg\"\n    [aria-label]=\"'single select'\"\n    [aria-labelledby]=\"'ariaLabelledById'\"\n    [aria-describedby]=\"'ariaDescribedById'\"\n    [aria-owns]=\"'singleDropdown'\"\n  >\n  </bb-dropdown-single-select-ui>\n\n  <bb-dropdown-single-select-ui\n    label=\"Choose your search engine\"\n    placeholder=\"No search engine selected\"\n    formControlName=\"websiteObjects\"\n    displayAttributePath=\"title\"\n    [options]=\"objectDropdownOptions\"\n    [required]=\"true\"\n    class=\"d-block bb-block bb-block--lg\"\n  >\n  </bb-dropdown-single-select-ui>\n\n  <bb-dropdown-single-select-ui\n    [compareWithFn]=\"compareByValue\"\n    label=\"Frequency\"\n    displayAttributePath=\"value\"\n    formControlName=\"frequency\"\n    data-role=\"frequency-selector\"\n  >\n    <bb-dropdown-single-select-option-ui\n      *ngFor=\"let frequency of frequencies\"\n      class=\"text-capitalize\"\n      [value]=\"frequency\"\n      [label]=\"frequency.value\"\n    >\n    </bb-dropdown-single-select-option-ui>\n  </bb-dropdown-single-select-ui>\n</div>\n", components: [{ type: i2__namespace$2.DropdownSingleSelectComponent, selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i2__namespace$2.DropdownSingleSelectOptionComponent, selector: "bb-dropdown-single-select-option-ui", inputs: ["value", "label"] }], directives: [{ type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownSingleSelectExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-dropdown-single-select-example-ui',
                        templateUrl: './dropdown-single-select.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var TabExampleComponent = /** @class */ (function () {
        function TabExampleComponent(notificationService) {
            this.notificationService = notificationService;
        }
        TabExampleComponent.prototype.onSelect = function (index) {
            this.notificationService.showNotification({
                header: 'Tab Navigation',
                message: "Navigate to Tab #" + (index + 1) + "'",
                modifier: 'info',
            });
        };
        TabExampleComponent.prototype.onClick = function ($event) {
            $event.stopPropagation();
            $event.preventDefault();
        };
        return TabExampleComponent;
    }());
    TabExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabExampleComponent, deps: [{ token: i1__namespace$n.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TabExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TabExampleComponent, selector: "bb-tab-example-ui", ngImport: i0__namespace, template: "<bb-tab-group-ui\n  [initialSelection]=\"0\"\n  (click)=\"onClick($event)\"\n  (select)=\"onSelect($event)\"\n>\n  <bb-tab-ui>First</bb-tab-ui>\n  <bb-tab-ui>Second</bb-tab-ui>\n  <bb-tab-ui>Third</bb-tab-ui>\n</bb-tab-group-ui>\n", components: [{ type: i2__namespace$j.TabGroupComponent, selector: "bb-tab-group-ui", inputs: ["initialSelection"], outputs: ["select"] }, { type: i2__namespace$j.TabComponent, selector: "bb-tab-ui" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-tab-example-ui',
                        templateUrl: './tab.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$n.NotificationService }]; } });

    var TooltipExampleComponent = /** @class */ (function () {
        function TooltipExampleComponent() {
        }
        return TooltipExampleComponent;
    }());
    TooltipExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TooltipExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TooltipExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TooltipExampleComponent, selector: "bb-tooltip-example-ui", ngImport: i0__namespace, template: "<span\n  bbTooltip=\"Cancelling this payment cannot be undone!\"\n  placement=\"bottom\"\n>\n  <bb-icon-ui name=\"info\" color=\"info\" size=\"lg\"></bb-icon-ui>\n</span>\n", components: [{ type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2__namespace$k.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TooltipExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-tooltip-example-ui',
                        templateUrl: './tooltip.example.component.html',
                    }]
            }] });

    var ProgessbarExampleComponent = /** @class */ (function () {
        function ProgessbarExampleComponent() {
            this.value = 0.42;
        }
        return ProgessbarExampleComponent;
    }());
    ProgessbarExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProgessbarExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProgessbarExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProgessbarExampleComponent, selector: "bb-progressbar-example-ui", ngImport: i0__namespace, template: "<bb-progressbar-ui\n  type=\"primary\"\n  [striped]=\"true\"\n  [animated]=\"true\"\n  [showValue]=\"true\"\n  [value]=\"value\"\n  [max]=\"1\"\n>\n</bb-progressbar-ui>\n", components: [{ type: i1__namespace$A.ProgressbarComponent, selector: "bb-progressbar-ui", inputs: ["height", "max", "showValue", "striped", "animated", "type", "value"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProgessbarExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-progressbar-example-ui',
                        templateUrl: './progressbar.example.component.html',
                    }]
            }] });

    var countryData = [
        {
            id: 1,
            name: 'Russia',
            flag: 'f/f3/Flag_of_Russia.svg',
            area: 17075200,
            population: 146989754,
        },
        {
            id: 2,
            name: 'France',
            flag: 'c/c3/Flag_of_France.svg',
            area: 640679,
            population: 64979548,
        },
        {
            id: 3,
            name: 'Germany',
            flag: 'b/ba/Flag_of_Germany.svg',
            area: 357114,
            population: 82114224,
        },
        {
            id: 4,
            name: 'Portugal',
            flag: '5/5c/Flag_of_Portugal.svg',
            area: 92090,
            population: 10329506,
        },
        {
            id: 5,
            name: 'Canada',
            flag: 'c/cf/Flag_of_Canada.svg',
            area: 9976140,
            population: 36624199,
        },
        {
            id: 6,
            name: 'Vietnam',
            flag: '2/21/Flag_of_Vietnam.svg',
            area: 331212,
            population: 95540800,
        },
        {
            id: 7,
            name: 'Brazil',
            flag: '0/05/Flag_of_Brazil.svg',
            area: 8515767,
            population: 209288278,
        },
        {
            id: 8,
            name: 'Mexico',
            flag: 'f/fc/Flag_of_Mexico.svg',
            area: 1964375,
            population: 129163276,
        },
        {
            id: 9,
            name: 'United States',
            flag: 'a/a4/Flag_of_the_United_States.svg',
            area: 9629091,
            population: 324459463,
        },
        {
            id: 10,
            name: 'India',
            flag: '4/41/Flag_of_India.svg',
            area: 3287263,
            population: 1324171354,
        },
        {
            id: 11,
            name: 'Indonesia',
            flag: '9/9f/Flag_of_Indonesia.svg',
            area: 1910931,
            population: 263991379,
        },
        {
            id: 12,
            name: 'Tuvalu',
            flag: '3/38/Flag_of_Tuvalu.svg',
            area: 26,
            population: 11097,
        },
        {
            id: 13,
            name: 'China',
            flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',
            area: 9596960,
            population: 1409517397,
        },
    ];

    var sortInteger = {
        asc: 1,
        desc: -1,
    };
    var TableExampleComponent = /** @class */ (function () {
        function TableExampleComponent() {
            this.countries = countryData;
            this.countries$ = rxjs.of(this.countries);
            this.sortDirection = 0;
            this.sortKey = '';
            this.pathFlagAssets = 'https://upload.wikimedia.org/wikipedia/commons/';
        }
        TableExampleComponent.prototype.onRowClick = function (country) {
            alert("You clicked on " + country.name);
        };
        TableExampleComponent.prototype.onSort = function (_a) {
            var column = _a.column, direction = _a.direction;
            this.sortDirection = sortInteger[direction] || 0;
            this.sortKey = column;
            this.countries$ = rxjs.of(this.sort(this.countries, this.sortKey, this.sortDirection));
        };
        TableExampleComponent.prototype.sort = function (countries, column, direction) {
            var _this = this;
            return __spreadArray([], __read(countries)).sort(function (a, b) { return direction * _this.compare(a[column], b[column]); });
        };
        TableExampleComponent.prototype.compare = function (v1, v2) {
            return v1 === v2 ? 0 : v1 < v2 ? -1 : 1;
        };
        TableExampleComponent.prototype.getAriaSort = function (key) {
            if (this.sortKey === key) {
                if (this.sortDirection < 0) {
                    return 'descending';
                }
                else if (this.sortDirection > 0) {
                    return 'ascending';
                }
            }
            return null;
        };
        return TableExampleComponent;
    }());
    TableExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TableExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TableExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TableExampleComponent, selector: "bb-table-example-ui", ngImport: i0__namespace, template: "<table\n  [bbTable]=\"countries$ | async\"\n  bbTableFocus\n  (rowClick)=\"onRowClick($event)\"\n  (sort)=\"onSort($event)\"\n  class=\"table table-hover\"\n>\n  <thead>\n    <tr>\n      <th\n        [attr.aria-sort]=\"getAriaSort('name')\"\n        [bbSortable]=\"'name'\"\n        scope=\"col\"\n        tabindex=\"0\"\n      >\n        Country\n      </th>\n      <th\n        [attr.aria-sort]=\"getAriaSort('area')\"\n        [bbSortable]=\"'area'\"\n        scope=\"col\"\n        tabindex=\"0\"\n      >\n        Area (km\u00B2)\n      </th>\n      <th\n        [attr.aria-sort]=\"getAriaSort('population')\"\n        [bbSortable]=\"'population'\"\n        scope=\"col\"\n        tabindex=\"0\"\n      >\n        Population\n      </th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let country of countries$ | async\" [bbRow]=\"country\">\n      <td>\n        {{ country.name }}\n      </td>\n      <td>\n        {{ country.area | number }}\n      </td>\n      <td>\n        {{ country.population | number }}\n      </td>\n      <td>\n        <img\n          [alt]=\"'Flag of ' + country.name\"\n          [src]=\"pathFlagAssets + country.flag\"\n          width=\"32\"\n        />\n      </td>\n    </tr>\n  </tbody>\n</table>\n", directives: [{ type: i1__namespace$B.TableDirective, selector: "table[bbTable]", inputs: ["bbTable"], outputs: ["selectRow", "rowClick", "sort"] }, { type: i1__namespace$B.TableFocusDirective, selector: "[bbTableFocus]", inputs: ["focusFirstRowOnChanges"] }, { type: i1__namespace$B.TableSortableDirective, selector: "th[bbSortable]", inputs: ["bbSortable", "direction"], outputs: ["sort"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$B.TableRowDirective, selector: "tr[bbRow]", inputs: ["bbRow"] }], pipes: { "async": i4__namespace.AsyncPipe, "number": i4__namespace.DecimalPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TableExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-table-example-ui',
                        templateUrl: './table.example.component.html',
                    }]
            }] });

    var InputPasswordExampleComponent = /** @class */ (function () {
        function InputPasswordExampleComponent(formBuilder, notificationService) {
            this.formBuilder = formBuilder;
            this.notificationService = notificationService;
            this.changePasswordForm = this.formBuilder.group({
                password: ['', i1$N.Validators.required],
            });
        }
        InputPasswordExampleComponent.prototype.onSubmit = function () {
            this.notificationService.showNotification({
                message: 'Password has been changed',
                modifier: 'success',
            });
        };
        return InputPasswordExampleComponent;
    }());
    InputPasswordExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPasswordExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }, { token: i1__namespace$n.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputPasswordExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputPasswordExampleComponent, selector: "bb-input-password-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSubmit()\">\n  <p>\n    <bb-input-password-ui\n      label=\"Password\"\n      placeholder=\"Please choose a new password\"\n      formControlName=\"password\"\n      autocomplete=\"new-password\"\n      [aria-describedby]=\"'password-error'\"\n      [showVisibilityControl]=\"true\"\n    >\n    </bb-input-password-ui>\n  </p>\n  <bb-input-validation-message-ui\n    id=\"password-error\"\n    [showErrors]=\"\n      !changePasswordForm.pristine && !changePasswordForm.valid\n    \"\n  >\n    <p>Password is required.</p>\n  </bb-input-validation-message-ui>\n\n  <button bbButton type=\"submit\">Change password</button>\n</form>\n", components: [{ type: i2__namespace$l.InputPasswordComponent, selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPasswordExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-password-example-ui',
                        templateUrl: './input-password.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }, { type: i1__namespace$n.NotificationService }]; } });

    var InputInlineEditExampleComponent = /** @class */ (function () {
        function InputInlineEditExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.form = this.formBuilder.group({
                description: ['Monthly Rent'],
            });
        }
        InputInlineEditExampleComponent.prototype.onAcceptDescription = function (description) {
            this.form.patchValue({
                description: description,
            });
        };
        return InputInlineEditExampleComponent;
    }());
    InputInlineEditExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputInlineEditExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputInlineEditExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputInlineEditExampleComponent, selector: "bb-input-inline-edit-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"form\">\n  <bb-input-inline-edit-ui\n    [inputText]=\"form.get('description')?.value\"\n    [maxLength]=\"64\"\n    [minLength]=\"2\"\n    [required]=\"true\"\n    (accept)=\"onAcceptDescription($event)\"\n  >\n  </bb-input-inline-edit-ui>\n</form>\n", components: [{ type: i2__namespace$m.InputInlineEditComponent, selector: "bb-input-inline-edit-ui", inputs: ["state", "canEdit", "hasLoadingState", "inputInlineTemplate", "inputText", "maxLength", "minLength", "maxValue", "minValue", "autofocus", "ariaLabelAccept", "ariaLabelCancel", "ariaLabelEdit", "tooltipAccept", "tooltipCancel", "tooltipEdit", "autocomplete", "pattern", "hint"], outputs: ["stateChange", "cancel", "accept"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputInlineEditExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-inline-edit-example-ui',
                        templateUrl: './input-inline-edit.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var StepperExampleComponent = /** @class */ (function () {
        function StepperExampleComponent() {
        }
        return StepperExampleComponent;
    }());
    StepperExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: StepperExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    StepperExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StepperExampleComponent, selector: "bb-stepper-example-ui", ngImport: i0__namespace, template: "<bb-stepper-ui>\n  <bb-stepper-step-ui\n    [isActive]=\"true\"\n    [isChecked]=\"true\"\n    ariaLabel=\"Step 1 out of 3\"\n    label=\"Step 1\"\n  ></bb-stepper-step-ui>\n  <bb-stepper-step-ui\n    label=\"Step 2\"\n    [isActive]=\"true\"\n    [isChecked]=\"false\"\n    [isCurrent]=\"true\"\n    ariaLabel=\"Step 2 out of 3\"\n  >\n    <bb-stepper-step-ui\n      label=\"Step 2.1\"\n      [isActive]=\"true\"\n      [isChecked]=\"false\"\n      [isCurrent]=\"true\"\n      ariaLabel=\"Sub step 1 out of 1\"\n    >\n    </bb-stepper-step-ui>\n  </bb-stepper-step-ui>\n  <bb-stepper-step-ui\n    ariaLabel=\"Step 3 out of 3\"\n    label=\"Step 3\"\n  ></bb-stepper-step-ui>\n</bb-stepper-ui>\n", components: [{ type: i1__namespace$C.StepperComponent, selector: "bb-stepper-ui", outputs: ["select"] }, { type: i1__namespace$C.StepperStepComponent, selector: "bb-stepper-step-ui", inputs: ["label", "stateLabel", "data", "ariaLabel", "isCurrent", "isChecked", "isActive"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: StepperExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-stepper-example-ui',
                        templateUrl: './stepper.example.component.html',
                    }]
            }] });

    var InputRangeExampleComponent = /** @class */ (function () {
        function InputRangeExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.form = this.formBuilder.group({
                range: this.formBuilder.group({
                    min: [0, i1$N.Validators.min(10)],
                    max: [100, i1$N.Validators.max(90)],
                }, {
                    validator: function (g) {
                        var min = g.get('min').errors;
                        var max = g.get('max').errors;
                        var errors = min || max ? Object.assign(Object.assign({}, min), max) : null;
                        console.log(errors);
                        return errors;
                    },
                }),
            });
        }
        return InputRangeExampleComponent;
    }());
    InputRangeExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRangeExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputRangeExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputRangeExampleComponent, selector: "bb-input-range-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"form\">\n  <div bbInputRange formGroupName=\"range\">\n    <bb-input-number-ui\n      bbInputRangeMin\n      formControlName=\"min\"\n      label=\"Minimum\"\n      [aria-describedby]=\"'error-min'\"\n    ></bb-input-number-ui>\n    <bb-input-number-ui\n      bbInputRangeMax\n      formControlName=\"max\"\n      label=\"Maximum\"\n      [aria-describedby]=\"'error-max'\"\n    ></bb-input-number-ui>\n  </div>\n  <ng-container\n    *ngTemplateOutlet=\"\n      errors;\n      context: { $implicit: form.get('range') }\n    \"\n  ></ng-container>\n</form>\n\n<ng-template #errors let-control>\n  <bb-input-validation-message-ui\n    *ngIf=\"control?.errors as errors\"\n    [showErrors]=\"control?.touched\"\n  >\n    <div id=\"error-min\" *ngIf=\"errors?.min as min\">\n      Minimum value is {{ min.min }}\n    </div>\n    <div id=\"error-max\" *ngIf=\"errors?.max as max\">\n      Maximum value is {{ max.max }}\n    </div>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i2__namespace$c.InputNumberComponent, selector: "bb-input-number-ui", inputs: ["placeholder", "max", "min", "step", "readonly", "autocomplete", "ariaLabel", "allowNonDigits", "allowNegativeSign"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4__namespace$1.InputRangeDirective, selector: "[bbInputRange]" }, { type: i1__namespace$2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i4__namespace$1.InputRangeMinDirective, selector: "bb-input-number-ui[bbInputRangeMin]", inputs: ["bbInputRangeMin"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4__namespace$1.InputRangeMaxDirective, selector: "bb-input-number-ui[bbInputRangeMax]", inputs: ["bbInputRangeMax"] }, { type: i4__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRangeExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-range-example-ui',
                        templateUrl: './input-range.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var IbanPipeExampleComponent = /** @class */ (function () {
        function IbanPipeExampleComponent() {
            this.productNumber = 'NL81TRIO0212471066';
        }
        return IbanPipeExampleComponent;
    }());
    IbanPipeExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IbanPipeExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    IbanPipeExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: IbanPipeExampleComponent, selector: "bb-iban-pipe-example-ui", ngImport: i0__namespace, template: "<div>\n  {{ productNumber | bbIban }}\n</div>\n", pipes: { "bbIban": i1__namespace$D.BbIbanPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IbanPipeExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-iban-pipe-example-ui',
                        templateUrl: './iban-pipe.example.component.html',
                    }]
            }] });

    var ActionStatusExampleComponent = /** @class */ (function () {
        function ActionStatusExampleComponent() {
            this.actionState = 'success';
        }
        return ActionStatusExampleComponent;
    }());
    ActionStatusExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ActionStatusExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ActionStatusExampleComponent, selector: "bb-action-status-example-ui", ngImport: i0__namespace, template: "<bb-action-status-ui [state]=\"actionState\"></bb-action-status-ui>\n", components: [{ type: i1__namespace$E.ActionStatusComponent, selector: "bb-action-status-ui", inputs: ["state"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-action-status-example-ui',
                        templateUrl: './action-status.example.component.html',
                    }]
            }] });

    var InfiniteScrollExampleComponent = /** @class */ (function () {
        function InfiniteScrollExampleComponent() {
            this.items = [1, 2, 3, 4];
            this.complete = false;
            this.loading = false;
            this.maxCount = 42;
        }
        InfiniteScrollExampleComponent.prototype.loadMore = function () {
            var _this = this;
            if (!this.loading) {
                this.loading = true;
                window.setTimeout(function () {
                    _this.loading = false;
                    _this.complete = _this.items.length >= _this.maxCount;
                    _this.generateMore(5);
                }, 1000);
            }
        };
        InfiniteScrollExampleComponent.prototype.generateMore = function (count) {
            var length = Math.max(0, Math.min(this.maxCount, this.items.length + count) -
                this.items.length);
            var start = 1 + (this.items[this.items.length - 1] || 0);
            console.log(start, length);
            this.items = __spreadArray(__spreadArray([], __read(this.items)), __read(new Array(length).fill(0).map(function (_, index) { return start + index; })));
        };
        return InfiniteScrollExampleComponent;
    }());
    InfiniteScrollExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InfiniteScrollExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    InfiniteScrollExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InfiniteScrollExampleComponent, selector: "bb-infinite-scroll-example-ui", ngImport: i0__namespace, template: "<div style=\"max-height: 320px; overflow: scroll\">\n  <bb-infinite-scroll-ui\n    [disableScrollEnd]=\"complete || loading\"\n    (scrollEnd)=\"loadMore()\"\n  >\n    <ul>\n      <li *ngFor=\"let item of items\">Item {{ item }}</li>\n    </ul>\n    <p *ngIf=\"loading\">\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </p>\n    <p *ngIf=\"complete\">All items loaded</p>\n  </bb-infinite-scroll-ui>\n</div>\n", components: [{ type: i1__namespace$F.InfiniteScrollComponent, selector: "bb-infinite-scroll-ui", inputs: ["offset", "debounce", "disableScrollEnd"], outputs: ["scrollEnd"] }, { type: i1__namespace$j.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InfiniteScrollExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-infinite-scroll-example-ui',
                        templateUrl: './infinite-scroll.example.component.html',
                    }]
            }] });

    var HighlightExampleComponent = /** @class */ (function () {
        function HighlightExampleComponent() {
            this.balance = '3299.00';
            this.creditLimit = '-500';
        }
        return HighlightExampleComponent;
    }());
    HighlightExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    HighlightExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: HighlightExampleComponent, selector: "bb-highlight-example-ui", ngImport: i0__namespace, template: "<table class=\"table\">\n  <tr>\n    <th>Balance</th>\n    <td\n      bbHighlight\n      [amount]=\"balance\"\n      positiveClass=\"bg-primary\"\n      negativeClass=\"bg-danger\"\n    >\n      <bb-amount-ui [amount]=\"balance\"></bb-amount-ui>\n    </td>\n  </tr>\n  <tr>\n    <th>Credit limit</th>\n    <td\n      bbHighlight\n      [amount]=\"creditLimit\"\n      positiveClass=\"bg-primary\"\n      negativeClass=\"bg-danger\"\n    >\n      <bb-amount-ui [amount]=\"creditLimit\"></bb-amount-ui>\n    </td>\n  </tr>\n</table>\n", components: [{ type: i1__namespace$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2__namespace$n.HighlightDirective, selector: "[bbHighlight]", inputs: ["amount", "bbHighlight", "negativeClass", "positiveClass"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-highlight-example-ui',
                        templateUrl: './highlight.example.component.html',
                    }]
            }] });

    var PaymentCardNumberPipeExampleComponent = /** @class */ (function () {
        function PaymentCardNumberPipeExampleComponent() {
            this.productNumber = 'NL75INGB3400120056';
            this.productNumberFormat = {
                length: 18,
                maskRange: [0, 12],
                segments: 4,
            };
        }
        return PaymentCardNumberPipeExampleComponent;
    }());
    PaymentCardNumberPipeExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardNumberPipeExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentCardNumberPipeExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentCardNumberPipeExampleComponent, selector: "bb-payment-card-number-pipe-example-ui", ngImport: i0__namespace, template: "<p>{{ productNumber | paymentCardNumber: productNumberFormat }}</p>\n", pipes: { "paymentCardNumber": i1__namespace$G.PaymentCardNumberPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardNumberPipeExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-card-number-pipe-example-ui',
                        templateUrl: './payment-card-number-pipe.example.component.html',
                    }]
            }] });

    var AccountNumberPipeExampleComponent = /** @class */ (function () {
        function AccountNumberPipeExampleComponent() {
            this.productNumber = 'IBAN1234567891234567';
            this.numberType = 'iban';
        }
        return AccountNumberPipeExampleComponent;
    }());
    AccountNumberPipeExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountNumberPipeExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountNumberPipeExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountNumberPipeExampleComponent, selector: "bb-account-number-pipe-example-ui", ngImport: i0__namespace, template: "<p>{{ productNumber | bbAccountNumber: numberType }}</p>\n", pipes: { "bbAccountNumber": i1__namespace$H.AccountNumberPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountNumberPipeExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-number-pipe-example-ui',
                        templateUrl: './account-number-pipe.example.component.html',
                    }]
            }] });

    var PhoneNumberPipeExampleComponent = /** @class */ (function () {
        function PhoneNumberPipeExampleComponent() {
            this.workPhone = '4151234567';
        }
        return PhoneNumberPipeExampleComponent;
    }());
    PhoneNumberPipeExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberPipeExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PhoneNumberPipeExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PhoneNumberPipeExampleComponent, selector: "bb-phone-number-pipe-example-ui", ngImport: i0__namespace, template: "<p>{{ workPhone | phoneNumber: 'US' }}</p>\n", pipes: { "phoneNumber": i1__namespace$I.PhoneNumberPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberPipeExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-phone-number-pipe-example-ui',
                        templateUrl: './phone-number-pipe.example.component.html',
                    }]
            }] });

    var accounts = [
        {
            id: '1',
            name: 'Mrs J. Smith',
            balance: 102.1,
            number: 'GB29NWBK60161331926819',
            currency: 'EUR',
            favorite: true,
        },
        {
            id: '2',
            name: 'Mr J. Simposon',
            balance: 131230.1,
            number: 'GB29NWBK60161331926819',
            currency: 'EUR',
            favorite: false,
        },
        {
            id: '3',
            name: 'Eddie',
            balance: 133,
            number: 'GB29NWBK60161331926819',
            currency: 'USD',
            favorite: false,
        },
        {
            id: '4',
            name: 'Mr and Mrs J. Smith',
            balance: 126453.321,
            number: 'GB29NWBK60161331926819',
            currency: 'EUR',
            favorite: true,
        },
        {
            id: '5',
            name: 'SmallSmith',
            balance: 432.321,
            number: 'GB29NWBK60161331926819',
            currency: 'EUR',
            favorite: true,
        },
        {
            id: '6',
            name: 'Mr and SmallSmith',
            balance: 23443.321,
            number: 'GB29NWBK60161331926819',
            currency: 'EUR',
            favorite: false,
        },
        {
            id: '7',
            name: 'Mr and Small Smith',
            balance: 12423.31,
            number: 'GB29NWBK60161331926819',
            currency: 'EUR',
            favorite: false,
        },
    ];

    var AccountSelectorExampleComponent = /** @class */ (function () {
        function AccountSelectorExampleComponent() {
            this.items = accounts;
            this.selectedItems = this.items[0];
        }
        AccountSelectorExampleComponent.prototype.onChange = function ($event) {
            var count = Array.isArray($event)
                ? $event.length
                : $event
                    ? 1
                    : 0;
            console.log(count + " items selected");
        };
        AccountSelectorExampleComponent.prototype.onSearch = function ($event) {
            console.log("Search for query: " + $event);
        };
        AccountSelectorExampleComponent.prototype.onClearSearch = function () {
            console.log('Search cleared');
        };
        AccountSelectorExampleComponent.prototype.onScrollToEnd = function () {
            console.log('Scrolled to end');
        };
        return AccountSelectorExampleComponent;
    }());
    AccountSelectorExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountSelectorExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountSelectorExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountSelectorExampleComponent, selector: "bb-account-selector-example-ui", ngImport: i0__namespace, template: "<h2 id=\"ariaLabelledById\">Account Selector</h2>\n<div id=\"ariaDescribedById\">\n  Account selector Component that supports single select, multi select\n  and auto complete\n</div>\n<bb-account-selector-ui\n  [items]=\"items\"\n  [disableScrollEnd]=\"false\"\n  [multiple]=\"true\"\n  [closeOnSelect]=\"true\"\n  [filterItems]=\"true\"\n  [selectedItems]=\"selectedItems\"\n  [dropdownPosition]=\"'bottom'\"\n  (change)=\"onChange($event)\"\n  (clearSearch)=\"onClearSearch()\"\n  (scrollToEnd)=\"onScrollToEnd()\"\n  (search)=\"onSearch($event)\"\n  placeholder=\"Select Accounts\"\n  [aria-describedby]=\"'ariaLabelledById'\"\n  [aria-labelledby]=\"'ariaDescribedById'\"\n>\n</bb-account-selector-ui>\n", components: [{ type: i1__namespace$J.AccountSelectorComponent, selector: "bb-account-selector-ui", inputs: ["items", "disabled", "notFoundText", "showError", "productNumberFormat", "selectedItems", "multiple", "closeOnSelect", "searchable", "clearable", "placeholder", "loading", "dropdownPosition", "disableScrollEnd", "highlight", "filterItems", "markFirst", "internalFiltering", "virtualScroll", "required", "typeahead", "minTermLength", "typeToSearchText", "aria-describedby", "aria-labelledby", "aria-invalid", "searchFunc", "showCurrencySymbol", "showBankBranchCode", "groupByFn", "groupValueFn", "size", "compareItemsWith"], outputs: ["search", "clearSearch", "scroll", "scrollToEnd", "remove", "change", "filterChange", "focus", "blur"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountSelectorExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-selector-example-ui',
                        templateUrl: './account-selector.example.component.html',
                    }]
            }] });

    var DropdownPanelExampleComponent = /** @class */ (function () {
        function DropdownPanelExampleComponent() {
        }
        return DropdownPanelExampleComponent;
    }());
    DropdownPanelExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownPanelExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    DropdownPanelExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownPanelExampleComponent, selector: "bb-dropdown-panel-example-ui", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-3\">\n    <bb-dropdown-panel-ui>\n      <ng-template bbDropdownToggle> Toggle without arrow </ng-template>\n      <ng-template bbDropdownMenu>\n        <div class=\"p-2\">The content of dropdown</div>\n      </ng-template>\n    </bb-dropdown-panel-ui>\n  </div>\n\n  <div class=\"col-3\">\n    <bb-dropdown-panel-ui>\n      <ng-template bbDropdownToggle let-isOpen=\"isOpen\">\n        <div class=\"d-flex align-items-center\">\n          Dropdown with arrow\n          <bb-icon-ui [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"></bb-icon-ui>\n        </div>\n      </ng-template>\n      <ng-template bbDropdownMenu>\n        <div class=\"p-2\">The content of dropdown</div>\n      </ng-template>\n    </bb-dropdown-panel-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$K.DropdownPanelComponent, selector: "bb-dropdown-panel-ui", outputs: ["open"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i1__namespace$K.DropdownToggleDirective, selector: "ng-template[bbDropdownToggle]" }, { type: i1__namespace$K.DropdownMenuDirective, selector: "ng-template[bbDropdownMenu]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownPanelExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-dropdown-panel-example-ui',
                        templateUrl: './dropdown-panel-example.component.html',
                    }]
            }] });

    var DropdownMultiSelectExampleComponent = /** @class */ (function () {
        function DropdownMultiSelectExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.form = this.formBuilder.group({
                days: new i1$N.FormControl(['1', '2', '3', '4', '5']),
            });
        }
        return DropdownMultiSelectExampleComponent;
    }());
    DropdownMultiSelectExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMultiSelectExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    DropdownMultiSelectExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownMultiSelectExampleComponent, selector: "bb-dropdown-multi-select-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"form\">\n  <bb-dropdown-multi-select-ui\n    label=\"Available days\"\n    placeholder=\"Please choose one or more days\"\n    formControlName=\"days\"\n    [required]=\"true\"\n  >\n    <bb-dropdown-multi-select-option-ui value=\"0\" label=\"Sunday\">\n    </bb-dropdown-multi-select-option-ui>\n    <bb-dropdown-multi-select-option-ui value=\"1\" label=\"Monday\">\n    </bb-dropdown-multi-select-option-ui>\n    <bb-dropdown-multi-select-option-ui value=\"2\" label=\"Tuesday\">\n    </bb-dropdown-multi-select-option-ui\n    ><bb-dropdown-multi-select-option-ui value=\"3\" label=\"Wednesday\">\n    </bb-dropdown-multi-select-option-ui>\n    <bb-dropdown-multi-select-option-ui value=\"4\" label=\"Thursday\">\n    </bb-dropdown-multi-select-option-ui\n    ><bb-dropdown-multi-select-option-ui value=\"5\" label=\"Friday\">\n    </bb-dropdown-multi-select-option-ui>\n    <bb-dropdown-multi-select-option-ui value=\"6\" label=\"Saturday\">\n    </bb-dropdown-multi-select-option-ui>\n  </bb-dropdown-multi-select-ui>\n</form>\n", components: [{ type: i2__namespace$o.DropdownMultiSelectComponent, selector: "bb-dropdown-multi-select-ui", inputs: ["dropdownHeaderText", "placeholder", "label", "filtering", "readonly"] }, { type: i2__namespace$o.DropdownMultiSelectOptionComponent, selector: "bb-dropdown-multi-select-option-ui", inputs: ["id", "value", "label", "state"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMultiSelectExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-dropdown-multi-select-example-ui',
                        templateUrl: './dropdown-multi-select.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    /**
     * @name InputTimepickerExampleComponent
     *
     * @description
     * Component that displays multiple examples with the timepicker component.
     */
    var InputTimepickerExampleComponent = /** @class */ (function () {
        function InputTimepickerExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                time: [''],
            });
            this.timeModel = '';
            this.min = '13:00:00';
            this.max = '14:30:00';
        }
        InputTimepickerExampleComponent.prototype.hasError = function (type) {
            var time = this.vForm.get('time');
            if (time !== null && time.errors) {
                return !!time.errors[type];
            }
            return false;
        };
        InputTimepickerExampleComponent.prototype.showErrors = function () {
            var time = this.vForm.get('time');
            if (time !== null) {
                return time.errors && !time.valid;
            }
            return null;
        };
        return InputTimepickerExampleComponent;
    }());
    InputTimepickerExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTimepickerExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputTimepickerExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputTimepickerExampleComponent, selector: "bb-input-timepicker-example-ui", ngImport: i0__namespace, template: "<div class=\"container d-block\">\n  <h5>Timepicker with 10 minute step and validation errors</h5>\n  <form [formGroup]=\"vForm\">\n    <bb-input-timepicker-ui\n      id=\"timePicker-validation\"\n      [readonly]=\"false\"\n      [minuteStep]=\"10\"\n      formControlName=\"time\"\n      [min]=\"min\"\n      [max]=\"max\"\n    >\n    </bb-input-timepicker-ui>\n\n    <bb-input-validation-message-ui [showErrors]=\"showErrors()\">\n      <span *ngIf=\"hasError('minTime')\">Time should be after {{ min }}</span>\n      <span *ngIf=\"hasError('maxTime')\">Time should not exceed {{ max }}</span>\n      <span *ngIf=\"hasError('minMaxTime')\">Time should be between {{ min }} and {{ max }}</span>\n    </bb-input-validation-message-ui>\n  </form>\n  <br />\n\n  <h5>Readonly timepicker</h5>\n  <bb-input-timepicker-ui id=\"timepicker-readonly\" [readonly]=\"true\"> </bb-input-timepicker-ui>\n  <br />\n\n  <h5>Timepicker with seconds and meridian</h5>\n  <bb-input-timepicker-ui\n    id=\"timepicker-meridian\"\n    [readonly]=\"false\"\n    [seconds]=\"true\"\n    clock=\"12h\"\n    [(ngModel)]=\"timeModel\"\n    [min]=\"min\"\n  >\n  </bb-input-timepicker-ui>\n</div>\n", components: [{ type: i2__namespace$p.InputTimepickerComponent, selector: "bb-input-timepicker-ui", inputs: ["hourStep", "clock", "minuteStep", "readonly", "seconds", "secondStep", "min", "max", "autocomplete"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTimepickerExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-timepicker-example-ui',
                        templateUrl: './input-timepicker-example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var ItemLogExampleComponent = /** @class */ (function () {
        function ItemLogExampleComponent() {
            this.logRecords = [
                {
                    userFullName: 'Green Goblet',
                    status: 'REJECTED',
                    createdAt: '2018-01-23T13:44:02Z',
                    comment: 'Limit exceeded',
                },
                {
                    userFullName: 'Robin Green',
                    status: 'APPROVED',
                    createdAt: '2018-01-22T13:44:02Z',
                },
            ];
        }
        return ItemLogExampleComponent;
    }());
    ItemLogExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ItemLogExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ItemLogExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ItemLogExampleComponent, selector: "bb-item-log-example-ui", ngImport: i0__namespace, template: "<bb-item-log-ui\n  [records]=\"logRecords\"\n  [isPending]=\"true\"\n></bb-item-log-ui>\n", components: [{ type: i1__namespace$L.ItemLogComponent, selector: "bb-item-log-ui", inputs: ["isPending", "records"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ItemLogExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-item-log-example-ui',
                        templateUrl: './item-log.example.component.html',
                    }]
            }] });

    var KeyboardClickExampleComponent = /** @class */ (function () {
        function KeyboardClickExampleComponent(notificationService) {
            this.notificationService = notificationService;
        }
        KeyboardClickExampleComponent.prototype.action = function () {
            this.notificationService.showNotification({
                message: 'bbKeyboardClick event',
                modifier: 'info',
            });
        };
        return KeyboardClickExampleComponent;
    }());
    KeyboardClickExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: KeyboardClickExampleComponent, deps: [{ token: i1__namespace$n.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    KeyboardClickExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: KeyboardClickExampleComponent, selector: "bb-keyboard-click-example-ui", ngImport: i0__namespace, template: "<button bbButton (bbKeyboardClick)=\"action()\">Click Me!</button>\n", directives: [{ type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i3__namespace$3.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: KeyboardClickExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-keyboard-click-example-ui',
                        templateUrl: './keyboard-click.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$n.NotificationService }]; } });

    // Please replace relative path imports e.g. '../*' with '@backbase/ui-ang'.
    var SelectListExampleComponent = /** @class */ (function () {
        function SelectListExampleComponent() {
            this.items = [
                { name: 'One', value: 'one' },
                { name: 'Two', value: 'two' },
                { name: 'Three', value: 'three' },
            ];
        }
        SelectListExampleComponent.prototype.ngOnInit = function () {
            this.form = new i1$N.FormGroup({
                number: new i1$N.FormControl([]),
            });
        };
        return SelectListExampleComponent;
    }());
    SelectListExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectListExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    SelectListExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SelectListExampleComponent, selector: "bb-select-list-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"form\">\n  <h4 id=\"selectListLabel\">Numbers from one to three</h4>\n  <bb-select-list-ui\n    id=\"selectListInput\"\n    formControlName=\"number\"\n    placeholder=\"Start typing name of numbers. e.g. one\"\n    [items]=\"items\"\n    [minTermLength]=\"3\"\n    aria-labelledby=\"selectListLabel\"\n  >\n  </bb-select-list-ui>\n</form>\n", components: [{ type: i1__namespace$M.SelectListComponent, selector: "bb-select-list-ui", inputs: ["loading", "placeholder", "minTermLength", "maxSelectedItems", "multiple", "items", "filterEnabled"], outputs: ["valueChange", "search", "clear"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectListExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-select-list-example-ui',
                        templateUrl: './select-list.example.component.html',
                    }]
            }] });

    var InputFileExampleComponent = /** @class */ (function () {
        function InputFileExampleComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                fileInput: undefined,
            });
        }
        return InputFileExampleComponent;
    }());
    InputFileExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputFileExampleComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputFileExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputFileExampleComponent, selector: "bb-input-file-example-ui", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <div class=\"bb-block bb-block--lg\">\n    <bb-input-file-ui\n      label=\"File input\"\n      formControlName=\"fileInput\"\n      data-role=\"file-input\"\n    >\n    </bb-input-file-ui>\n  </div>\n</form>\n", components: [{ type: i2__namespace$q.InputFileComponent, selector: "bb-input-file-ui", inputs: ["accept", "maxSizeInMb", "multiple", "color", "autofocus", "buttonText", "buttonSize", "iconName"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputFileExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-file-example-ui',
                        templateUrl: './input-file.example.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var ValueDiffExampleComponent = /** @class */ (function () {
        function ValueDiffExampleComponent() {
            this.oldValue = 'Old Value';
            this.newValue = 'New Value';
        }
        return ValueDiffExampleComponent;
    }());
    ValueDiffExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ValueDiffExampleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ValueDiffExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ValueDiffExampleComponent, selector: "bb-value-diff-ui-example", ngImport: i0__namespace, template: "<div [bbValueDiff]=\"newValue\">\n  {{ oldValue }}\n</div>\n", directives: [{ type: i1__namespace$N.ValueDiffDirective, selector: "[bbValueDiff]", inputs: ["bbValueDiff", "position", "sr-only-old", "sr-only-new", "showArrow"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ValueDiffExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-value-diff-ui-example',
                        templateUrl: './value-diff-example.component.html',
                    }]
            }] });

    var exampleComponents = [
        AccountNumberPipeExampleComponent,
        AccountSelectorExampleComponent,
        ActionStatusExampleComponent,
        AlertExampleComponent,
        AmountExampleComponent,
        AmountInputExampleComponent,
        AvatarExampleComponent,
        BadgeCounterExampleComponent,
        BadgeExampleComponent,
        ButtonExampleComponent,
        CardVendorExampleComponent,
        CharCounterExampleComponent,
        CheckboxGroupExampleComponent,
        CollapsibleAccordionExampleComponent,
        CollapsibleCardExampleComponent,
        CollapsibleExampleComponent,
        CommonErrorStateExampleComponent,
        CurrencyInputExampleComponent,
        ConfigurationInputComponent,
        DatePipeExampleComponent,
        DropdownMenuExampleComponent,
        DropdownMultiSelectExampleComponent,
        DropdownPanelExampleComponent,
        DropdownSingleSelectExampleComponent,
        EllipsisExampleComponent,
        EmptyStateExampleComponent,
        FieldsetExampleComponent,
        FileAttachmentExampleComponent,
        HeaderExampleComponent,
        HighlightExampleComponent,
        IbanPipeExampleComponent,
        IconExampleComponent,
        InfiniteScrollExampleComponent,
        InputCheckboxExampleComponent,
        InputDatepickerExampleComponent,
        InputEmailExampleComponent,
        InputFileExampleComponent,
        InputInlineEditExampleComponent,
        InputNumberExampleComponent,
        InputPasswordExampleComponent,
        InputPhoneExampleComponent,
        InputRadioGroupExampleComponent,
        InputRangeExampleComponent,
        InputTextExampleComponent,
        InputTimepickerExampleComponent,
        InputValidationMessageExampleComponent,
        ItemLogExampleComponent,
        KeyboardClickExampleComponent,
        ListMultipleSelectExampleComponent,
        LoadButtonExampleComponent,
        LoadingIndicatorExampleComponent,
        LogoExampleComponent,
        ModalExampleComponent,
        ModeHeaderExampleComponent,
        NotificationExampleComponent,
        PaginationExampleComponent,
        PaymentCardExampleComponent,
        PaymentCardNumberPipeExampleComponent,
        PeriodSelectorExampleComponent,
        PhoneNumberPipeExampleComponent,
        ProductItemBasicAccountExampleComponent,
        ProductItemCreditCardExampleComponent,
        ProductItemCurrentAccountExampleComponent,
        ProductItemDebitCardExampleComponent,
        ProductItemInvestmentAccountExampleComponent,
        ProductItemLoanExampleComponent,
        ProductItemSavingsAccountExampleComponent,
        ProductItemTermDepositExampleComponent,
        ProductSelectorExampleComponent,
        ProgessbarExampleComponent,
        RichTextEditorExampleComponent,
        SearchBoxExampleComponent,
        SelectListExampleComponent,
        StepperExampleComponent,
        SwitchExampleComponent,
        TabExampleComponent,
        TableExampleComponent,
        TextareaExampleComponent,
        TooltipExampleComponent,
        ValueDiffExampleComponent,
    ];
    var BackbaseUiAngExamplesModule = /** @class */ (function () {
        function BackbaseUiAngExamplesModule() {
        }
        return BackbaseUiAngExamplesModule;
    }());
    BackbaseUiAngExamplesModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiAngExamplesModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    BackbaseUiAngExamplesModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiAngExamplesModule, declarations: [AccountNumberPipeExampleComponent,
            AccountSelectorExampleComponent,
            ActionStatusExampleComponent,
            AlertExampleComponent,
            AmountExampleComponent,
            AmountInputExampleComponent,
            AvatarExampleComponent,
            BadgeCounterExampleComponent,
            BadgeExampleComponent,
            ButtonExampleComponent,
            CardVendorExampleComponent,
            CharCounterExampleComponent,
            CheckboxGroupExampleComponent,
            CollapsibleAccordionExampleComponent,
            CollapsibleCardExampleComponent,
            CollapsibleExampleComponent,
            CommonErrorStateExampleComponent,
            CurrencyInputExampleComponent,
            ConfigurationInputComponent,
            DatePipeExampleComponent,
            DropdownMenuExampleComponent,
            DropdownMultiSelectExampleComponent,
            DropdownPanelExampleComponent,
            DropdownSingleSelectExampleComponent,
            EllipsisExampleComponent,
            EmptyStateExampleComponent,
            FieldsetExampleComponent,
            FileAttachmentExampleComponent,
            HeaderExampleComponent,
            HighlightExampleComponent,
            IbanPipeExampleComponent,
            IconExampleComponent,
            InfiniteScrollExampleComponent,
            InputCheckboxExampleComponent,
            InputDatepickerExampleComponent,
            InputEmailExampleComponent,
            InputFileExampleComponent,
            InputInlineEditExampleComponent,
            InputNumberExampleComponent,
            InputPasswordExampleComponent,
            InputPhoneExampleComponent,
            InputRadioGroupExampleComponent,
            InputRangeExampleComponent,
            InputTextExampleComponent,
            InputTimepickerExampleComponent,
            InputValidationMessageExampleComponent,
            ItemLogExampleComponent,
            KeyboardClickExampleComponent,
            ListMultipleSelectExampleComponent,
            LoadButtonExampleComponent,
            LoadingIndicatorExampleComponent,
            LogoExampleComponent,
            ModalExampleComponent,
            ModeHeaderExampleComponent,
            NotificationExampleComponent,
            PaginationExampleComponent,
            PaymentCardExampleComponent,
            PaymentCardNumberPipeExampleComponent,
            PeriodSelectorExampleComponent,
            PhoneNumberPipeExampleComponent,
            ProductItemBasicAccountExampleComponent,
            ProductItemCreditCardExampleComponent,
            ProductItemCurrentAccountExampleComponent,
            ProductItemDebitCardExampleComponent,
            ProductItemInvestmentAccountExampleComponent,
            ProductItemLoanExampleComponent,
            ProductItemSavingsAccountExampleComponent,
            ProductItemTermDepositExampleComponent,
            ProductSelectorExampleComponent,
            ProgessbarExampleComponent,
            RichTextEditorExampleComponent,
            SearchBoxExampleComponent,
            SelectListExampleComponent,
            StepperExampleComponent,
            SwitchExampleComponent,
            TabExampleComponent,
            TableExampleComponent,
            TextareaExampleComponent,
            TooltipExampleComponent,
            ValueDiffExampleComponent], imports: [i4$1.CommonModule,
            i1$N.FormsModule,
            i1$N.ReactiveFormsModule,
            BackbaseUiModule,
            i1$e.DropdownPanelModule,
            i2$5.DropdownMultiSelectModule], exports: [AccountNumberPipeExampleComponent,
            AccountSelectorExampleComponent,
            ActionStatusExampleComponent,
            AlertExampleComponent,
            AmountExampleComponent,
            AmountInputExampleComponent,
            AvatarExampleComponent,
            BadgeCounterExampleComponent,
            BadgeExampleComponent,
            ButtonExampleComponent,
            CardVendorExampleComponent,
            CharCounterExampleComponent,
            CheckboxGroupExampleComponent,
            CollapsibleAccordionExampleComponent,
            CollapsibleCardExampleComponent,
            CollapsibleExampleComponent,
            CommonErrorStateExampleComponent,
            CurrencyInputExampleComponent,
            ConfigurationInputComponent,
            DatePipeExampleComponent,
            DropdownMenuExampleComponent,
            DropdownMultiSelectExampleComponent,
            DropdownPanelExampleComponent,
            DropdownSingleSelectExampleComponent,
            EllipsisExampleComponent,
            EmptyStateExampleComponent,
            FieldsetExampleComponent,
            FileAttachmentExampleComponent,
            HeaderExampleComponent,
            HighlightExampleComponent,
            IbanPipeExampleComponent,
            IconExampleComponent,
            InfiniteScrollExampleComponent,
            InputCheckboxExampleComponent,
            InputDatepickerExampleComponent,
            InputEmailExampleComponent,
            InputFileExampleComponent,
            InputInlineEditExampleComponent,
            InputNumberExampleComponent,
            InputPasswordExampleComponent,
            InputPhoneExampleComponent,
            InputRadioGroupExampleComponent,
            InputRangeExampleComponent,
            InputTextExampleComponent,
            InputTimepickerExampleComponent,
            InputValidationMessageExampleComponent,
            ItemLogExampleComponent,
            KeyboardClickExampleComponent,
            ListMultipleSelectExampleComponent,
            LoadButtonExampleComponent,
            LoadingIndicatorExampleComponent,
            LogoExampleComponent,
            ModalExampleComponent,
            ModeHeaderExampleComponent,
            NotificationExampleComponent,
            PaginationExampleComponent,
            PaymentCardExampleComponent,
            PaymentCardNumberPipeExampleComponent,
            PeriodSelectorExampleComponent,
            PhoneNumberPipeExampleComponent,
            ProductItemBasicAccountExampleComponent,
            ProductItemCreditCardExampleComponent,
            ProductItemCurrentAccountExampleComponent,
            ProductItemDebitCardExampleComponent,
            ProductItemInvestmentAccountExampleComponent,
            ProductItemLoanExampleComponent,
            ProductItemSavingsAccountExampleComponent,
            ProductItemTermDepositExampleComponent,
            ProductSelectorExampleComponent,
            ProgessbarExampleComponent,
            RichTextEditorExampleComponent,
            SearchBoxExampleComponent,
            SelectListExampleComponent,
            StepperExampleComponent,
            SwitchExampleComponent,
            TabExampleComponent,
            TableExampleComponent,
            TextareaExampleComponent,
            TooltipExampleComponent,
            ValueDiffExampleComponent] });
    BackbaseUiAngExamplesModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiAngExamplesModule, providers: [ButtonExampleService, ConfigurationInputService], imports: [[
                i4$1.CommonModule,
                i1$N.FormsModule,
                i1$N.ReactiveFormsModule,
                BackbaseUiModule,
                i1$e.DropdownPanelModule,
                i2$5.DropdownMultiSelectModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiAngExamplesModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4$1.CommonModule,
                            i1$N.FormsModule,
                            i1$N.ReactiveFormsModule,
                            BackbaseUiModule,
                            i1$e.DropdownPanelModule,
                            i2$5.DropdownMultiSelectModule,
                        ],
                        declarations: __spreadArray([], __read(exampleComponents)),
                        exports: __spreadArray([], __read(exampleComponents)),
                        entryComponents: __spreadArray([], __read(exampleComponents)),
                        providers: [ButtonExampleService, ConfigurationInputService],
                    }]
            }] });
    var COMPONENTS$1 = exampleComponents;

    var ActionStatusShowcaseComponent = /** @class */ (function () {
        function ActionStatusShowcaseComponent() {
            this.successExample = 'success';
            this.errorExample = 'error';
            this.warningExample = 'warning';
            this.infoExample = 'info';
        }
        ActionStatusShowcaseComponent.prototype.ngOnInit = function () {
            this.setStatesToLoading();
        };
        ActionStatusShowcaseComponent.prototype.setStatesToLoading = function () {
            var _this = this;
            setTimeout(function () {
                _this.successExample = 'loading';
                _this.errorExample = 'loading';
                _this.warningExample = 'loading';
                _this.infoExample = 'loading';
                _this.setStatesToDone();
            }, 2000);
        };
        ActionStatusShowcaseComponent.prototype.setStatesToDone = function () {
            var _this = this;
            setTimeout(function () {
                _this.successExample = 'success';
                _this.errorExample = 'error';
                _this.warningExample = 'warning';
                _this.infoExample = 'info';
                _this.setStatesToLoading();
            }, 2000);
        };
        return ActionStatusShowcaseComponent;
    }());
    ActionStatusShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ActionStatusShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ActionStatusShowcaseComponent, selector: "bb-action-status-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <h2>Success</h2>\n  <bb-action-status-ui [state]=\"successExample\"></bb-action-status-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Error</h2>\n  <bb-action-status-ui [state]=\"errorExample\"></bb-action-status-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Warning</h2>\n  <bb-action-status-ui [state]=\"warningExample\"></bb-action-status-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Info</h2>\n  <bb-action-status-ui [state]=\"infoExample\"></bb-action-status-ui>\n</div>\n", components: [{ type: i1__namespace$E.ActionStatusComponent, selector: "bb-action-status-ui", inputs: ["state"] }] });
    ActionStatusShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ActionStatusShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-action-status-ui-showcase',
                        templateUrl: './action-status-showcase.component.html',
                    }]
            }] });

    var ActionStatusShowcaseModule = /** @class */ (function () {
        function ActionStatusShowcaseModule() {
        }
        return ActionStatusShowcaseModule;
    }());
    ActionStatusShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ActionStatusShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusShowcaseModule, declarations: [ActionStatusShowcaseComponent], imports: [i4$1.CommonModule, i1$2.ActionStatusModule] });
    ActionStatusShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusShowcaseModule, imports: [[i4$1.CommonModule, i1$2.ActionStatusModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ActionStatusShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$2.ActionStatusModule],
                        declarations: [ActionStatusShowcaseComponent],
                        entryComponents: [ActionStatusShowcaseComponent],
                    }]
            }] });

    var AccountSelectorShowcaseComponent = /** @class */ (function () {
        function AccountSelectorShowcaseComponent(domAttributesService) {
            var _this = this;
            this.domAttributesService = domAttributesService;
            this.items = [
                {
                    id: '1',
                    name: 'Mrs J. Smith',
                    balance: 102.1,
                    number: 'GB29NWBK60161331926819',
                    currency: 'EUR',
                    favorite: true,
                    status: 'inactive',
                    bankBranchCode: '01788902',
                },
                {
                    id: '2',
                    name: 'Mr J. Simposon',
                    balance: 131230.1,
                    number: 'GB29NWBK60161331926819',
                    currency: 'EUR',
                    favorite: false,
                    type: 'accounts',
                    bankBranchCode: '01788902',
                },
                {
                    id: '3',
                    name: 'Eddie',
                    balance: 133,
                    number: 'GB29NWBK60161331926819',
                    currency: 'USD',
                    favorite: false,
                    type: 'accounts',
                    status: 'closed',
                    bankBranchCode: '01788902',
                },
                {
                    id: '4',
                    name: 'Gerald Carr',
                    balance: 400,
                    number: 'GB94BARC10201530093459',
                    currency: 'USD',
                    favorite: false,
                    type: 'accounts',
                    status: 'inactive',
                    bankBranchCode: '01788902',
                },
                {
                    id: '5',
                    name: 'Jenny Hawkins',
                    balance: 500,
                    number: 'GB33BUKB20201555555555',
                    currency: 'USD',
                    favorite: false,
                    type: 'accounts',
                    status: 'closed',
                    bankBranchCode: '01788902',
                },
                {
                    id: '6',
                    name: 'Bob Sanders',
                    balance: 300,
                    number: 'GB29NWBK60161331926819',
                    currency: 'USD',
                    favorite: false,
                    type: 'accounts',
                    status: 'closed',
                    bankBranchCode: '01788902',
                },
                {
                    id: '7',
                    name: 'Ashley Lowe',
                    balance: 900,
                    number: 'GB94BARC10201530093459',
                    currency: 'USD',
                    favorite: false,
                    type: 'accounts',
                    status: 'inactive',
                    bankBranchCode: '01788902',
                },
                {
                    id: '8',
                    name: 'George Mason',
                    balance: 250,
                    number: 'GB33BUKB20201555555555',
                    currency: 'USD',
                    favorite: false,
                    type: 'accounts',
                    status: 'active',
                    bankBranchCode: '01788902',
                },
                {
                    id: '9',
                    name: 'Wesley Harper',
                    balance: 350,
                    number: 'GB94BARC10201530093459',
                    currency: 'USD',
                    favorite: false,
                    type: 'accounts',
                    status: 'active',
                    bankBranchCode: '01788902',
                },
                {
                    id: '10',
                    name: 'Kristin Frazier',
                    balance: 550,
                    number: 'GB33BUKB20201555555555',
                    currency: 'USD',
                    favorite: false,
                    type: 'accounts',
                    status: 'closed',
                    bankBranchCode: '01788902',
                },
            ];
            this.typeahead = new rxjs.Subject();
            this.typeaheadSearchTerm = '';
            this.typeaheadItems$ = new rxjs.BehaviorSubject(__spreadArray([], __read(this.items)));
            this.accountSelectors = [
                {
                    labelId: this.domAttributesService.generateId(),
                    heading: 'Single select',
                    placeholder: 'Select Account Single (doesn`t close on select)',
                    dataRole: 'account-selector-single-select',
                    multiple: false,
                    items: __spreadArray([], __read(this.items)),
                    selectedItems: undefined,
                    showCurrencySymbol: true,
                    eventTriggered: undefined,
                    eventState: undefined,
                    position: 'auto',
                    closeOnSelect: false,
                    productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                    change: function (self, item) {
                        self.selectedItem = item;
                        self.eventTriggered = '$change';
                        self.eventState = item;
                    },
                    search: function (self, searchQ) {
                        self.eventTriggered = '$search';
                        self.eventState = searchQ;
                    },
                    clearSearch: function (self, event) {
                        self.eventTriggered = '$clearSearch';
                        self.eventState = event;
                    },
                    scrollToEnd: function (self, event) {
                        self.eventTriggered = '$scrollToEnd';
                        self.eventState = event;
                    },
                },
                {
                    labelId: this.domAttributesService.generateId(),
                    heading: 'Single select with notFoundText',
                    placeholder: 'Select Account Single',
                    dataRole: 'account-selector-single-select-no-text-found',
                    multiple: false,
                    items: __spreadArray([], __read(this.items)),
                    selectedItems: undefined,
                    eventTriggered: undefined,
                    eventState: undefined,
                    showCurrencySymbol: true,
                    position: 'bottom',
                    productNumberFormat: i1$t.DefaultPaymentCardNumberFormat,
                    notFoundText: 'Nothing found custom text',
                    markFirst: true,
                    invalid: true,
                    closeOnSelect: true,
                    change: function (self, item) {
                        self.selectedItem = item;
                        self.eventTriggered = '$change';
                        self.eventState = item;
                    },
                    search: function (self, searchQ) {
                        self.eventTriggered = '$search';
                        self.eventState = searchQ;
                    },
                    clearSearch: function (self, event) {
                        self.eventTriggered = '$clearSearch';
                        self.eventState = event;
                    },
                    scrollToEnd: function (self, event) {
                        self.eventTriggered = '$scrollToEnd';
                        self.eventState = event;
                    },
                },
                {
                    labelId: this.domAttributesService.generateId(),
                    heading: 'Single select with disabled attr',
                    placeholder: 'Select Account Single',
                    dataRole: 'account-selector-single-select-disabled',
                    multiple: false,
                    items: __spreadArray([], __read(this.items)),
                    selectedItems: undefined,
                    showCurrencySymbol: true,
                    eventTriggered: undefined,
                    eventState: undefined,
                    position: 'auto',
                    productNumberFormat: { length: 18, maskRange: [0, 0], segments: 4 },
                    disabled: true,
                    change: function (self, item) {
                        self.selectedItem = item;
                        self.eventTriggered = '$change';
                        self.eventState = item;
                    },
                    search: function (self, searchQ) {
                        self.eventTriggered = '$search';
                        self.eventState = searchQ;
                    },
                    clearSearch: function (self, event) {
                        self.eventTriggered = '$clearSearch';
                        self.eventState = event;
                    },
                    scrollToEnd: function (self, event) {
                        self.eventTriggered = '$scrollToEnd';
                        self.eventState = event;
                    },
                },
                {
                    labelId: this.domAttributesService.generateId(),
                    heading: 'Multiple select',
                    placeholder: 'Select Multiple Accounts',
                    dataRole: 'account-selector-multi-select',
                    multiple: true,
                    items: __spreadArray([], __read(this.items)),
                    selectedItems: undefined,
                    eventTriggered: undefined,
                    eventState: undefined,
                    showCurrencySymbol: true,
                    position: 'auto',
                    closeOnSelect: false,
                    productNumberFormat: { length: 18, maskRange: [0, 0], segments: 4 },
                    change: function (self, item) {
                        self.selectedItem = item;
                        self.eventTriggered = '$change';
                        self.eventState = item;
                    },
                    search: function (self, searchQ) {
                        self.eventTriggered = '$search';
                        self.eventState = searchQ;
                    },
                    clearSearch: function (self, event) {
                        self.eventTriggered = '$clearSearch';
                        self.eventState = event;
                    },
                    scrollToEnd: function (self, event) {
                        self.eventTriggered = '$scrollToEnd';
                        self.eventState = event;
                    },
                },
                {
                    labelId: this.domAttributesService.generateId(),
                    heading: 'Dropdown position top select',
                    placeholder: 'Select Account Single Dropdown Position',
                    dataRole: 'account-selector-single-select-position-top',
                    multiple: false,
                    items: __spreadArray([], __read(this.items)),
                    selectedItems: undefined,
                    eventTriggered: undefined,
                    eventState: undefined,
                    showCurrencySymbol: true,
                    position: 'top',
                    closeOnSelect: true,
                    productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                    change: function (self, item) {
                        self.selectedItem = item;
                        self.eventTriggered = '$change';
                        self.eventState = item;
                    },
                    search: function (self, searchQ) {
                        self.eventTriggered = '$search';
                        self.eventState = searchQ;
                    },
                    clearSearch: function (self, event) {
                        self.eventTriggered = '$clearSearch';
                        self.eventState = event;
                    },
                    scrollToEnd: function (self, event) {
                        self.eventTriggered = '$scrollToEnd';
                        self.eventState = event;
                    },
                },
                {
                    labelId: this.domAttributesService.generateId(),
                    heading: 'Single select with Currency Code',
                    placeholder: 'Select Account Single (doesn`t close on select)',
                    dataRole: 'account-selector-single-select',
                    multiple: false,
                    items: __spreadArray([], __read(this.items)),
                    selectedItems: undefined,
                    showCurrencySymbol: false,
                    eventTriggered: undefined,
                    eventState: undefined,
                    position: 'auto',
                    closeOnSelect: true,
                    productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                    change: function (self, item) {
                        self.selectedItem = item;
                        self.eventTriggered = '$change';
                        self.eventState = item;
                    },
                    search: function (self, searchQ) {
                        self.eventTriggered = '$search';
                        self.eventState = searchQ;
                    },
                    clearSearch: function (self, event) {
                        self.eventTriggered = '$clearSearch';
                        self.eventState = event;
                    },
                    scrollToEnd: function (self, event) {
                        self.eventTriggered = '$scrollToEnd';
                        self.eventState = event;
                    },
                },
                {
                    labelId: this.domAttributesService.generateId(),
                    heading: 'Single select with Bank Branch Code display',
                    placeholder: 'Select Account',
                    dataRole: 'account-selector-single-select',
                    multiple: false,
                    items: __spreadArray([], __read(this.items)),
                    selectedItems: undefined,
                    showCurrencySymbol: false,
                    eventTriggered: undefined,
                    showBankBranchCode: true,
                    eventState: undefined,
                    position: 'auto',
                    closeOnSelect: true,
                    productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                    change: function (self, item) {
                        self.selectedItem = item;
                        self.eventTriggered = '$change';
                        self.eventState = item;
                    },
                    search: function (self, searchQ) {
                        self.eventTriggered = '$search';
                        self.eventState = searchQ;
                    },
                    clearSearch: function (self, event) {
                        self.eventTriggered = '$clearSearch';
                        self.eventState = event;
                    },
                    scrollToEnd: function (self, event) {
                        self.eventTriggered = '$scrollToEnd';
                        self.eventState = event;
                    },
                },
            ];
            this.accountSelectorValidation = {
                labelId: this.domAttributesService.generateId(),
                heading: 'Single select with required validation',
                placeholder: 'Select Account Single (doesn`t close on select)',
                dataRole: 'account-selector-required-validation',
                multiple: false,
                items: __spreadArray([], __read(this.items)),
                selectedItems: new i1$N.FormControl(undefined, i1$N.Validators.required),
                eventTriggered: undefined,
                eventState: undefined,
                position: 'auto',
                closeOnSelect: false,
                invalid: false,
                required: true,
                showError: false,
                productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                change: function (self, item) {
                    self.selectedItems.setValue(Object.assign({}, item));
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: function (self, searchQ) {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: function (self, event) {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                },
                scrollToEnd: function (self, event) {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
                submit: function (self) {
                    if (!self.selectedItems.value || self.selectedItems.value.length === 0) {
                        self.showError = true;
                        return;
                    }
                    self.showError = false;
                },
                reset: function (self) {
                    self.selectedItems.reset();
                    self.showError = false;
                    _this.accountSelectorWithValidation.resetAccountSelectorModel();
                },
                onBlur: function (self) {
                    self.selectedItems.markAsTouched();
                },
            };
            this.accountSelectorTypeAhead = {
                labelId: this.domAttributesService.generateId(),
                heading: 'Single select with typeahead',
                placeholder: 'Select Account',
                dataRole: 'account-selector-single-select',
                multiple: false,
                selectedItems: undefined,
                showCurrencySymbol: false,
                eventTriggered: undefined,
                showBankBranchCode: true,
                eventState: undefined,
                position: 'bottom',
                editableSearchTerm: true,
                clearSearchOnAdd: false,
                closeOnSelect: true,
                typeahead: this.typeahead,
                typeToSearchText: 'This search uses typeahead',
                minTermLength: 0,
                productNumberFormat: { length: 18, maskRange: [0, 12], segments: 4 },
                change: function (self, item) {
                    self.selectedItem = item;
                    self.eventTriggered = '$change';
                    self.eventState = item;
                },
                search: function (self, searchQ) {
                    self.eventTriggered = '$search';
                    self.eventState = searchQ;
                },
                clearSearch: function (self, event) {
                    self.eventTriggered = '$clearSearch';
                    self.eventState = event;
                    _this.typeahead.next('');
                },
                scrollToEnd: function (self, event) {
                    self.eventTriggered = '$scrollToEnd';
                    self.eventState = event;
                },
            };
            this.typeahead.subscribe(function (term) {
                _this.typeaheadSearchTerm = term || '';
                var filteredItems = _this.items.filter(function (item) { return item.name.toLowerCase().includes(_this.typeaheadSearchTerm.toLowerCase()); });
                _this.typeaheadItems$.next(filteredItems);
            });
        }
        AccountSelectorShowcaseComponent.prototype.groupByItems = function (item) {
            return item.favorite;
        };
        AccountSelectorShowcaseComponent.prototype.searchFunc = function (term, item) {
            var SEARCHED_FIELDS = ['number', 'balance'];
            return SEARCHED_FIELDS.some(function (field) { return item[field].toString().includes(term); });
        };
        return AccountSelectorShowcaseComponent;
    }());
    AccountSelectorShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountSelectorShowcaseComponent, deps: [{ token: i1__namespace.DomAttributesService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountSelectorShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountSelectorShowcaseComponent, selector: "bb-account-selector-ui-showcase", viewQueries: [{ propertyName: "accountSelectorWithValidation", first: true, predicate: ["accountSelectorWithValidation"], descendants: true }], ngImport: i0__namespace, template: "<ng-container *ngFor=\"let accountSelector of accountSelectors\">\n  <div class=\"bb-block bb-block--xl\">\n    <h4 [id]=\"accountSelector.labelId\">{{ accountSelector.heading }}</h4>\n    <bb-account-selector-ui\n      [disableScrollEnd]=\"false\"\n      [items]=\"accountSelector.items\"\n      [multiple]=\"accountSelector.multiple\"\n      (change)=\"accountSelector.change(accountSelector, $event)\"\n      (clearSearch)=\"accountSelector.clearSearch(accountSelector, $event)\"\n      [selectedItems]=\"accountSelector.selectedItems\"\n      (scrollToEnd)=\"accountSelector.scrollToEnd(accountSelector, $event)\"\n      (search)=\"accountSelector.search(accountSelector, $event)\"\n      [closeOnSelect]=\"accountSelector.closeOnSelect\"\n      [showCurrencySymbol]=\"accountSelector.showCurrencySymbol\"\n      [dropdownPosition]=\"accountSelector.position\"\n      [groupByFn]=\"groupByItems\"\n      [placeholder]=\"accountSelector.placeholder\"\n      [disabled]=\"accountSelector.disabled\"\n      [notFoundText]=\"accountSelector.notFoundText\"\n      [productNumberFormat]=\"accountSelector.productNumberFormat\"\n      [highlight]=\"false\"\n      [aria-labelledby]=\"accountSelector.labelId\"\n      [aria-describedby]=\"accountSelector.errorMessageId\"\n      [aria-invalid]=\"accountSelector.invalid\"\n      [attr.data-role]=\"accountSelector.dataRole\"\n      [showBankBranchCode]=\"accountSelector.showBankBranchCode\"\n      [typeahead]=\"accountSelector.typeahead\"\n      [minTermLength]=\"accountSelector.minTermLength\"\n      [typeToSearchText]=\"accountSelector.typeToSearchText\"\n    >\n    </bb-account-selector-ui>\n    <p [id]=\"accountSelector.errorMessageId\">{{ accountSelector.errorMessage }}</p>\n  </div>\n</ng-container>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Showcase with custom search through 'number' and 'balance' fields (small size)</h4>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <bb-account-selector-ui\n        [searchFunc]=\"searchFunc\"\n        [disableScrollEnd]=\"false\"\n        [items]=\"accountSelectors[0].items\"\n        [multiple]=\"accountSelectors[0].multiple\"\n        (change)=\"accountSelectors[0].change(accountSelectors[0], $event)\"\n        (clearSearch)=\"accountSelectors[0].clearSearch(accountSelectors[0], $event)\"\n        [selectedItems]=\"accountSelectors[0].selectedItems\"\n        (scrollToEnd)=\"accountSelectors[0].scrollToEnd(accountSelectors[0], $event)\"\n        (search)=\"accountSelectors[0].search(accountSelectors[0], $event)\"\n        [closeOnSelect]=\"!accountSelectors[0].multiple\"\n        [dropdownPosition]=\"accountSelectors[0].position\"\n        [groupByFn]=\"groupByItems\"\n        [placeholder]=\"accountSelectors[0].placeholder\"\n        [productNumberFormat]=\"accountSelectors[0].productNumberFormat\"\n        [highlight]=\"false\"\n        [aria-labelledby]=\"accountSelectors[0].labelId\"\n        size=\"sm\"\n      >\n      </bb-account-selector-ui>\n    </div>\n    <div class=\"col-md-6\">\n      <bb-account-selector-ui\n        [searchFunc]=\"searchFunc\"\n        [disableScrollEnd]=\"false\"\n        [items]=\"accountSelectors[0].items\"\n        [multiple]=\"accountSelectors[0].multiple\"\n        (change)=\"accountSelectors[0].change(accountSelectors[0], $event)\"\n        (clearSearch)=\"accountSelectors[0].clearSearch(accountSelectors[0], $event)\"\n        [selectedItems]=\"accountSelectors[0].selectedItems\"\n        (scrollToEnd)=\"accountSelectors[0].scrollToEnd(accountSelectors[0], $event)\"\n        (search)=\"accountSelectors[0].search(accountSelectors[0], $event)\"\n        [closeOnSelect]=\"!accountSelectors[0].multiple\"\n        [dropdownPosition]=\"accountSelectors[0].position\"\n        [groupByFn]=\"groupByItems\"\n        [placeholder]=\"accountSelectors[0].placeholder\"\n        [productNumberFormat]=\"accountSelectors[0].productNumberFormat\"\n        [highlight]=\"false\"\n        [aria-labelledby]=\"accountSelectors[0].labelId\"\n        size=\"sm\"\n      >\n      </bb-account-selector-ui>\n    </div>\n  </div>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Account selector without groupBy function</h4>\n  <bb-account-selector-ui\n    [disableScrollEnd]=\"false\"\n    [items]=\"accountSelectors[0].items\"\n    [multiple]=\"accountSelectors[0].multiple\"\n    (change)=\"accountSelectors[0].change(accountSelectors[0], $event)\"\n    (clearSearch)=\"accountSelectors[0].clearSearch(accountSelectors[0], $event)\"\n    [selectedItems]=\"accountSelectors[0].selectedItems\"\n    (scrollToEnd)=\"accountSelectors[0].scrollToEnd(accountSelectors[0], $event)\"\n    (search)=\"accountSelectors[0].search(accountSelectors[0], $event)\"\n    [closeOnSelect]=\"accountSelectors[0].closeOnSelect\"\n    [dropdownPosition]=\"accountSelectors[0].position\"\n    [placeholder]=\"accountSelectors[0].placeholder\"\n    [disabled]=\"false\"\n    [productNumberFormat]=\"accountSelectors[0].productNumberFormat\"\n    [highlight]=\"false\"\n    data-role=\"account-selector-without-groupBy\"\n    [aria-labelledby]=\"accountSelectorValidation.labelId\"\n    [aria-describedby]=\"'accountSelectorValidationerrorMessageId'\"\n    [aria-invalid]=\"accountSelectorValidation.invalid\"\n  >\n  </bb-account-selector-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4 [id]=\"accountSelectorValidation.labelId\">{{ accountSelectorValidation.heading }}</h4>\n  <form action=\"\" (ngSubmit)=\"accountSelectorValidation.submit(accountSelectorValidation)\">\n    <bb-account-selector-ui\n      #accountSelectorWithValidation\n      [disableScrollEnd]=\"false\"\n      [items]=\"accountSelectorValidation.items\"\n      [multiple]=\"accountSelectorValidation.multiple\"\n      (change)=\"accountSelectorValidation.change(accountSelectorValidation, $event)\"\n      (clearSearch)=\"accountSelectorValidation.clearSearch(accountSelectorValidation, $event)\"\n      [selectedItems]=\"accountSelectorValidation.selectedItems.value\"\n      (scrollToEnd)=\"accountSelectorValidation.scrollToEnd(accountSelectorValidation, $event)\"\n      (search)=\"accountSelectorValidation.search(accountSelectorValidation, $event)\"\n      [closeOnSelect]=\"accountSelectorValidation.closeOnSelect\"\n      [dropdownPosition]=\"accountSelectorValidation.position\"\n      [groupByFn]=\"groupByItems\"\n      [placeholder]=\"accountSelectorValidation.placeholder\"\n      [disabled]=\"false\"\n      [productNumberFormat]=\"accountSelectorValidation.productNumberFormat\"\n      [highlight]=\"false\"\n      (blur)=\"accountSelectorValidation.onBlur(accountSelectorValidation)\"\n      [required]=\"accountSelectorValidation.required\"\n      [showError]=\"accountSelectorValidation.showError\"\n      [attr.data-role]=\"accountSelectorValidation.dataRole\"\n      [aria-labelledby]=\"accountSelectorValidation.labelId\"\n      [aria-describedby]=\"'accountSelectorValidationerrorMessageId'\"\n      [aria-invalid]=\"accountSelectorValidation.invalid\"\n    >\n    </bb-account-selector-ui>\n    <bb-input-validation-message-ui\n      role=\"alert\"\n      [showErrors]=\"accountSelectorValidation.showError || accountSelectorValidation.selectedItems?.touched\"\n    >\n      <span\n        *ngIf=\"accountSelectorValidation.selectedItems?.errors?.required\"\n        data-role=\"account-selector-required-validation-message\"\n      >\n        Account is required.\n      </span>\n    </bb-input-validation-message-ui>\n    <div class=\"text-right\">\n      <button\n        type=\"submit\"\n        data-role=\"account-selector-required-validation-submit\"\n        bbButton\n        class=\"m-2 btn-primary btn-sm btn\"\n        color=\"primary\"\n      >\n        Submit\n      </button>\n      <button\n        (click)=\"accountSelectorValidation.reset(accountSelectorValidation)\"\n        data-role=\"account-selector-required-validation-reset\"\n        bbButton\n        class=\"m-2 btn-secondary btn-sm btn\"\n        color=\"primary\"\n      >\n        Reset\n      </button>\n    </div>\n  </form>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4 [id]=\"accountSelectorValidation.labelId\">\n    {{ accountSelectorTypeAhead.heading }} - TypeaheadSearchTerm: {{ typeaheadSearchTerm }}\n  </h4>\n  <bb-account-selector-ui\n    #accountSelectorWithValidation\n    [disableScrollEnd]=\"false\"\n    [items]=\"typeaheadItems$ | async\"\n    [multiple]=\"accountSelectorTypeAhead.multiple\"\n    (change)=\"accountSelectorTypeAhead.change(accountSelectorTypeAhead, $event)\"\n    (clearSearch)=\"accountSelectorTypeAhead.clearSearch(accountSelectorTypeAhead, $event)\"\n    (scrollToEnd)=\"accountSelectorTypeAhead.scrollToEnd(accountSelectorTypeAhead, $event)\"\n    (search)=\"accountSelectorTypeAhead.search(accountSelectorTypeAhead, $event)\"\n    [closeOnSelect]=\"accountSelectorTypeAhead.closeOnSelect\"\n    [dropdownPosition]=\"accountSelectorTypeAhead.position\"\n    [groupByFn]=\"groupByItems\"\n    [placeholder]=\"accountSelectorTypeAhead.placeholder\"\n    [disabled]=\"false\"\n    [productNumberFormat]=\"accountSelectorTypeAhead.productNumberFormat\"\n    [highlight]=\"false\"\n    [attr.data-role]=\"accountSelectorTypeAhead.dataRole\"\n    [aria-labelledby]=\"accountSelectorTypeAhead.labelId\"\n    [aria-describedby]=\"'accountSelectorTypeAheaderrorMessageId'\"\n    [typeahead]=\"accountSelectorTypeAhead.typeahead\"\n    [minTermLength]=\"accountSelectorTypeAhead.minTermLength\"\n    [typeToSearchText]=\"accountSelectorTypeAhead.typeToSearchText\"\n  >\n  </bb-account-selector-ui>\n</div>\n", components: [{ type: i1__namespace$J.AccountSelectorComponent, selector: "bb-account-selector-ui", inputs: ["items", "disabled", "notFoundText", "showError", "productNumberFormat", "selectedItems", "multiple", "closeOnSelect", "searchable", "clearable", "placeholder", "loading", "dropdownPosition", "disableScrollEnd", "highlight", "filterItems", "markFirst", "internalFiltering", "virtualScroll", "required", "typeahead", "minTermLength", "typeToSearchText", "aria-describedby", "aria-labelledby", "aria-invalid", "searchFunc", "showCurrencySymbol", "showBankBranchCode", "groupByFn", "groupValueFn", "size", "compareItemsWith"], outputs: ["search", "clearSearch", "scroll", "scrollToEnd", "remove", "change", "filterChange", "focus", "blur"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i4__namespace.AsyncPipe } });
    AccountSelectorShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], AccountSelectorShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountSelectorShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-selector-ui-showcase',
                        templateUrl: './account-selector-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.DomAttributesService }]; }, propDecorators: { accountSelectorWithValidation: [{
                    type: i0.ViewChild,
                    args: ['accountSelectorWithValidation']
                }] } });

    var uiModules$2 = [i1$1.AccountSelectorModule, i2$2.ButtonModule, i3$2.InputValidationMessageModule];
    var AccountSelectorShowcaseModule = /** @class */ (function () {
        function AccountSelectorShowcaseModule() {
        }
        return AccountSelectorShowcaseModule;
    }());
    AccountSelectorShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountSelectorShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AccountSelectorShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountSelectorShowcaseModule, declarations: [AccountSelectorShowcaseComponent], imports: [i4$1.CommonModule, i1$N.FormsModule, i1$N.ReactiveFormsModule, i1$1.AccountSelectorModule, i2$2.ButtonModule, i3$2.InputValidationMessageModule] });
    AccountSelectorShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountSelectorShowcaseModule, imports: [__spreadArray([i4$1.CommonModule, i1$N.FormsModule, i1$N.ReactiveFormsModule], __read(uiModules$2))] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountSelectorShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i4$1.CommonModule, i1$N.FormsModule, i1$N.ReactiveFormsModule], __read(uiModules$2)),
                        declarations: [AccountSelectorShowcaseComponent],
                        entryComponents: [AccountSelectorShowcaseComponent],
                    }]
            }] });

    var AlertShowcaseComponent = /** @class */ (function () {
        function AlertShowcaseComponent() {
            this.colorVariants = [
                {
                    title: 'Information! Use this alert to introduce information only',
                    modifier: 'info',
                },
                {
                    title: 'Warning! Use this alert to show warn only',
                    modifier: 'warning',
                },
                {
                    title: 'Success! Use this alert to show success only',
                    modifier: 'success',
                },
                {
                    title: 'Error! Use this alert to show error only',
                    modifier: 'error',
                },
            ];
            this.dismissibleAlerts = [
                {
                    dismissed: false,
                },
                {
                    dismissed: false,
                },
            ];
        }
        return AlertShowcaseComponent;
    }());
    AlertShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AlertShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AlertShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AlertShowcaseComponent, selector: "bb-alert-ui-showcase", ngImport: i0__namespace, template: "<div class=\"mb-4\">\n  <h4>Default</h4>\n  <bb-alert-ui title=\"Default\" data-role=\"alert-default\"></bb-alert-ui>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Color variants</h4>\n  <bb-alert-ui\n    *ngFor=\"let alert of colorVariants\"\n    [title]=\"alert.title\"\n    [modifier]=\"alert.modifier\"\n    [attr.data-role]=\"'alert-' + alert.modifier\"\n  ></bb-alert-ui>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Multiple lines</h4>\n  <bb-alert-ui\n    title=\"Default\"\n    modifier=\"info\"\n    message=\"Body of a sticky alert.  This alert type is placed above the site header.\"\n    data-role=\"alert-multiple-lines\"\n  ></bb-alert-ui>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Dismissible</h4>\n  <bb-alert-ui\n    *ngIf=\"!dismissibleAlerts[0].dismissed\"\n    title=\"Dismissible alert\"\n    modifier=\"info\"\n    [dismissible]=\"true\"\n    (close)=\"dismissibleAlerts[0].dismissed = true\"\n    data-role=\"alert-dismissible-single-line\"\n  ></bb-alert-ui>\n  <bb-button-ui\n    *ngIf=\"dismissibleAlerts[0].dismissed\"\n    color=\"secondary\"\n    (click)=\"dismissibleAlerts[0].dismissed = false\"\n    data-role=\"alert-dismissible-single-line-restore\"\n    >Restore the alert</bb-button-ui\n  >\n\n  <bb-alert-ui\n    *ngIf=\"!dismissibleAlerts[1].dismissed\"\n    title=\"Dismissible alert\"\n    modifier=\"info\"\n    message=\"With text\"\n    [dismissible]=\"true\"\n    (close)=\"dismissibleAlerts[1].dismissed = true\"\n    data-role=\"alert-dismissible-multi-line\"\n  ></bb-alert-ui>\n  <bb-button-ui\n    *ngIf=\"dismissibleAlerts[1].dismissed\"\n    color=\"secondary\"\n    (click)=\"dismissibleAlerts[1].dismissed = false\"\n    data-role=\"alert-dismissible-multi-line-restore\"\n    >Restore the alert</bb-button-ui\n  >\n</div>\n\n<div class=\"mb-4\">\n  <h4>Custom message content template</h4>\n  <bb-alert-ui\n    *ngFor=\"let alert of colorVariants\"\n    [title]=\"alert.title\"\n    [modifier]=\"alert.modifier\"\n    [attr.data-role]=\"'alert-' + alert.modifier\"\n  >\n    Lorem ipsum dolor sit amet consectetur <a href=\"javascript:void(0);\" class=\"alert-link\">click here</a> adipisicing\n    elit. Dicta, corporis.\n  </bb-alert-ui>\n</div>\n", components: [{ type: i2__namespace$3.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i2__namespace$5.ButtonComponent, selector: "bb-button-ui", inputs: ["autofocus", "type", "disabled", "buttonSize", "color", "block"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    AlertShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], AlertShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AlertShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-alert-ui-showcase',
                        templateUrl: 'alert-showcase.component.html',
                    }]
            }] });

    var AlertShowcaseModule = /** @class */ (function () {
        function AlertShowcaseModule() {
        }
        return AlertShowcaseModule;
    }());
    AlertShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AlertShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AlertShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AlertShowcaseModule, declarations: [AlertShowcaseComponent], imports: [i4$1.CommonModule, i2.AlertModule, i2$2.ButtonModule] });
    AlertShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AlertShowcaseModule, imports: [[i4$1.CommonModule, i2.AlertModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AlertShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2.AlertModule, i2$2.ButtonModule],
                        declarations: [AlertShowcaseComponent],
                        entryComponents: [AlertShowcaseComponent],
                    }]
            }] });

    var AmountShowcaseComponent = /** @class */ (function () {
        function AmountShowcaseComponent() {
            this.asyncCurrency = '';
        }
        AmountShowcaseComponent.prototype.ngOnInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.asyncCurrency = 'USD';
            }, 2000);
        };
        return AmountShowcaseComponent;
    }());
    AmountShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AmountShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AmountShowcaseComponent, selector: "bb-amount-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--md\">\n  <h4>Amount with currency symbol</h4>\n  <bb-amount-ui [amount]=\"12345.67\" currency=\"USD\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Amount with currency code</h4>\n  <bb-amount-ui [amount]=\"12345.67\" currency=\"USD\" [mapCurrency]=\"false\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Amount with 5 decimals and currency rounding</h4>\n  <bb-amount-ui [amount]=\"12345.67891\" currency=\"USD\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Amount with 5 decimals and 7 decimal places override</h4>\n  <bb-amount-ui [amount]=\"12345.67891\" currency=\"USD\" [decimalPlaces]=\"7\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Amount with 5 decimals and 7 decimal places override, removing trailing zeroes</h4>\n  <bb-amount-ui [amount]=\"12345.67891\" currency=\"USD\" [decimalPlaces]=\"7\" [trailingZeroes]=\"false\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Amount with 0 decimal places override</h4>\n  <bb-amount-ui [amount]=\"12345.67891\" currency=\"USD\" [decimalPlaces]=\"0\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Negative amount</h4>\n  <bb-amount-ui [amount]=\"-12345.67\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Negative amount with currency symbol</h4>\n  <bb-amount-ui [amount]=\"-12345.67\" currency=\"USD\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Negative amount with currency code</h4>\n  <bb-amount-ui [amount]=\"-12345.67\" currency=\"USD\" [mapCurrency]=\"false\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Percentages</h4>\n  <bb-amount-ui [amount]=\"15\" [showPercent]=\"true\" [decimalPlaces]=\"0\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Asynchronous currency</h4>\n  <bb-amount-ui [amount]=\"-12345.67\" [currency]=\"asyncCurrency\" [decimalPlaces]=\"0\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Abbreviated amount</h4>\n  <bb-amount-ui [amount]=\"'-122329323230'\" [abbreviate]=\"true\" [mapCurrency]=\"true\" currency=\"USD\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Very big amount (<code>amount</code> should be passed as a string)</h4>\n  <bb-amount-ui [amount]=\"'999999999999999999999.99999'\" [mapCurrency]=\"true\" currency=\"USD\"></bb-amount-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Highlight (with bbHighlight directive and custom classes)</h4>\n  <div class=\"bb-block bb-block--sm\">\n    <bb-amount-ui [amount]=\"12345.67\" currency=\"USD\" [bbHighlight]=\"true\" positiveClass=\"text-success\"></bb-amount-ui>\n  </div>\n  <div class=\"bb-block bb-block--sm\">\n    <bb-amount-ui\n      [amount]=\"-12345.67\"\n      currency=\"USD\"\n      [bbHighlight]=\"true\"\n      negativeClass=\"bb-text-danger\"\n    ></bb-amount-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2__namespace$n.HighlightDirective, selector: "[bbHighlight]", inputs: ["amount", "bbHighlight", "negativeClass", "positiveClass"] }] });
    AmountShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], AmountShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-amount-ui-showcase',
                        templateUrl: './amount-showcase.component.html',
                    }]
            }] });

    var AmountShowcaseModule = /** @class */ (function () {
        function AmountShowcaseModule() {
        }
        return AmountShowcaseModule;
    }());
    AmountShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AmountShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountShowcaseModule, declarations: [AmountShowcaseComponent], imports: [i4$1.CommonModule, i1$3.AmountModule, i2$8.HighlightModule] });
    AmountShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountShowcaseModule, imports: [[i4$1.CommonModule, i1$3.AmountModule, i2$8.HighlightModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$3.AmountModule, i2$8.HighlightModule],
                        declarations: [AmountShowcaseComponent],
                        entryComponents: [AmountShowcaseComponent],
                    }]
            }] });

    var AmountInputShowcaseComponent = /** @class */ (function () {
        function AmountInputShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.test = 'egy';
            this.vForm = this.formBuilder.group({
                amount: [''],
                amount2: [''],
                amount3: [''],
            });
        }
        AmountInputShowcaseComponent.prototype.isFieldValid = function (fieldName) {
            var _a;
            var control = (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.get(fieldName);
            return control && (control.valid || control.untouched);
        };
        return AmountInputShowcaseComponent;
    }());
    AmountInputShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountInputShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AmountInputShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AmountInputShowcaseComponent, selector: "bb-amount-input-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"vForm\">\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            formControlName=\"amount\"\n            label=\"Amount\"\n            [id]=\"'bb-amount-input'\"\n            [currency]=\"'USD'\"\n            wrapperClasses=\"bb-amount-input__field--large\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount with auto decimals\"\n            formControlName=\"amount2\"\n            [id]=\"'bb-amount-input2'\"\n            [currency]=\"'EUR'\"\n            wrapperClasses=\"bb-amount-input__field--large\"\n            [autoDecimal]=\"true\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount with regular size\"\n            formControlName=\"amount3\"\n            [id]=\"'bb-amount-input3'\"\n            [currency]=\"'EUR'\"\n            [autoDecimal]=\"true\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n        </div>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount without mapping currency\"\n            formControlName=\"amount3\"\n            [id]=\"'bb-amount-input4'\"\n            [mapCurrency]=\"false\"\n            [currency]=\"'EUR'\"\n            [autoDecimal]=\"true\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount with ARIA described-by\"\n            formControlName=\"amount3\"\n            [id]=\"'bb-amount-input5'\"\n            [mapCurrency]=\"false\"\n            [currency]=\"'EUR'\"\n            [autoDecimal]=\"true\"\n            aria-describedby=\"describe-me-please\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n          <span class=\"sr-only\" id=\"describe-me-please\">Describing the field</span>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-amount-input-ui\n            label=\"Amount with ARIA described-by and without currency\"\n            formControlName=\"amount3\"\n            [id]=\"'bb-amount-input6'\"\n            [mapCurrency]=\"false\"\n            [autoDecimal]=\"true\"\n            aria-describedby=\"describe-me-too\"\n            placeholder=\"0.00\"\n          >\n          </bb-amount-input-ui>\n          <span class=\"sr-only\" id=\"describe-me-too\">I am the field description</span>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n", components: [{ type: i2__namespace$4.AmountInputComponent, selector: "bb-amount-input-ui", inputs: ["placeholder", "maxLength", "wrapperClasses", "mapCurrency", "currency", "autoDecimal"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    AmountInputShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], AmountInputShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountInputShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-amount-input-ui-showcase',
                        templateUrl: './amount-input-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var AmountInputShowcaseModule = /** @class */ (function () {
        function AmountInputShowcaseModule() {
        }
        return AmountInputShowcaseModule;
    }());
    AmountInputShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountInputShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AmountInputShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountInputShowcaseModule, declarations: [AmountInputShowcaseComponent], imports: [i4$1.CommonModule, i2$1.AmountInputModule, i1$N.ReactiveFormsModule] });
    AmountInputShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountInputShowcaseModule, imports: [[i4$1.CommonModule, i2$1.AmountInputModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AmountInputShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$1.AmountInputModule, i1$N.ReactiveFormsModule],
                        declarations: [AmountInputShowcaseComponent],
                        entryComponents: [AmountInputShowcaseComponent],
                    }]
            }] });

    var AvatarShowcaseComponent = /** @class */ (function () {
        function AvatarShowcaseComponent() {
        }
        return AvatarShowcaseComponent;
    }());
    AvatarShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AvatarShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AvatarShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AvatarShowcaseComponent, selector: "bb-avatar-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <h4>Default</h4>\n  <bb-avatar-ui name=\"Jane Doe\" [attr.data-role]=\"'avatar-default'\"></bb-avatar-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Size variants</h4>\n  <div class=\"bb-stack\">\n    <bb-avatar-ui\n      size=\"sm\"\n      name=\"Jane Doe\"\n      class=\"bb-stack__item\"\n      [attr.data-role]=\"'avatar-initials-sm'\"\n    ></bb-avatar-ui>\n    <bb-avatar-ui\n      size=\"md\"\n      name=\"Jane Doe\"\n      class=\"bb-stack__item\"\n      [attr.data-role]=\"'avatar-initials-md'\"\n    ></bb-avatar-ui>\n    <bb-avatar-ui\n      size=\"lg\"\n      name=\"Jane Doe\"\n      class=\"bb-stack__item\"\n      [attr.data-role]=\"'avatar-initials-lg'\"\n    ></bb-avatar-ui>\n    <bb-avatar-ui\n      size=\"xl\"\n      name=\"Jane Doe\"\n      class=\"bb-stack__item\"\n      [attr.data-role]=\"'avatar-initials-xl'\"\n    ></bb-avatar-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>With image</h4>\n  <div class=\"bb-stack\">\n    <bb-avatar-ui\n      size=\"sm\"\n      image=\"./assets/images/avatar.jpg\"\n      imgAlt=\"image for avatar\"\n      class=\"bb-stack__item\"\n      [attr.data-role]=\"'avatar-image-sm'\"\n    ></bb-avatar-ui>\n    <bb-avatar-ui\n      size=\"md\"\n      image=\"./assets/images/avatar.jpg\"\n      imgAlt=\"image for avatar\"\n      class=\"bb-stack__item\"\n      [attr.data-role]=\"'avatar-image-md'\"\n    ></bb-avatar-ui>\n    <bb-avatar-ui\n      size=\"lg\"\n      image=\"./assets/images/avatar.jpg\"\n      imgAlt=\"image for avatar\"\n      class=\"bb-stack__item\"\n      [attr.data-role]=\"'avatar-image-lg'\"\n    ></bb-avatar-ui>\n    <bb-avatar-ui\n      size=\"xl\"\n      image=\"./assets/images/avatar.jpg\"\n      imgAlt=\"image for avatar\"\n      class=\"bb-stack__item\"\n      [attr.data-role]=\"'avatar-image-xl'\"\n    ></bb-avatar-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$4.AvatarComponent, selector: "bb-avatar-ui", inputs: ["image", "name", "imgAlt", "size"] }] });
    AvatarShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], AvatarShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AvatarShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-avatar-ui-showcase',
                        templateUrl: './avatar-showcase.component.html',
                    }]
            }] });

    var AvatarShowcaseModule = /** @class */ (function () {
        function AvatarShowcaseModule() {
        }
        return AvatarShowcaseModule;
    }());
    AvatarShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AvatarShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AvatarShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AvatarShowcaseModule, declarations: [AvatarShowcaseComponent], imports: [i4$1.CommonModule, i1$4.AvatarModule] });
    AvatarShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AvatarShowcaseModule, imports: [[i4$1.CommonModule, i1$4.AvatarModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AvatarShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$4.AvatarModule],
                        declarations: [AvatarShowcaseComponent],
                        entryComponents: [AvatarShowcaseComponent],
                    }]
            }] });

    var BadgeCounterShowcaseComponent = /** @class */ (function () {
        function BadgeCounterShowcaseComponent() {
            this.badgeCounterShowCaseSetup = [
                {
                    type: 'success',
                    count: 5,
                },
                {
                    type: 'danger',
                    count: 18,
                },
                {
                    type: 'danger',
                    count: 1900,
                },
                {
                    type: 'danger',
                    count: 100,
                    maxCount: 99,
                },
            ];
        }
        return BadgeCounterShowcaseComponent;
    }());
    BadgeCounterShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeCounterShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BadgeCounterShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeCounterShowcaseComponent, selector: "bb-badge-counter-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-stack bb-block bb-block--md\">\n  <bb-badge-counter-ui\n    *ngFor=\"let badge of badgeCounterShowCaseSetup\"\n    [count]=\"badge.count\"\n    [maxCount]=\"badge.maxCount\"\n    [color]=\"badge.type\"\n    class=\"bb-stack__item\"\n  ></bb-badge-counter-ui>\n</div>\n", components: [{ type: i1__namespace$5.BadgeCounterComponent, selector: "bb-badge-counter-ui", inputs: ["color", "count", "maxCount"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    BadgeCounterShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], BadgeCounterShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeCounterShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-badge-counter-ui-showcase',
                        templateUrl: 'badge-counter-showcase.component.html',
                    }]
            }] });

    var BadgeCounterShowcaseModule = /** @class */ (function () {
        function BadgeCounterShowcaseModule() {
        }
        return BadgeCounterShowcaseModule;
    }());
    BadgeCounterShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeCounterShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    BadgeCounterShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeCounterShowcaseModule, declarations: [BadgeCounterShowcaseComponent], imports: [i4$1.CommonModule, i1$5.BadgeCounterModule] });
    BadgeCounterShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeCounterShowcaseModule, imports: [[i4$1.CommonModule, i1$5.BadgeCounterModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeCounterShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$5.BadgeCounterModule],
                        declarations: [BadgeCounterShowcaseComponent],
                        entryComponents: [BadgeCounterShowcaseComponent],
                    }]
            }] });

    var BadgeShowcaseComponent = /** @class */ (function () {
        function BadgeShowcaseComponent() {
            this.badgeShowCaseSetup = [
                {
                    type: 'warning',
                    text: {
                        single: 'A',
                        double: 'AA',
                    },
                },
                {
                    type: 'danger',
                    text: {
                        single: 'A',
                        double: 'AA',
                    },
                },
                {
                    type: 'info',
                    text: {
                        single: 'A',
                        double: 'AA',
                    },
                },
                {
                    type: 'success',
                    text: {
                        single: 'A',
                        double: 'AA',
                    },
                },
                {
                    type: 'secondary',
                    text: {
                        single: 'A',
                        double: 'AA',
                    },
                },
            ];
        }
        return BadgeShowcaseComponent;
    }());
    BadgeShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BadgeShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BadgeShowcaseComponent, selector: "bb-badge-ui-showcase", ngImport: i0__namespace, template: "<div class=\"mb-4\">\n  <h4>Single character</h4>\n  <div *ngFor=\"let badgeType of badgeShowCaseSetup\" class=\"d-inline-block mb-4 mr-3\">\n    <bb-badge-ui\n      color=\"{{ badgeType.type }}\"\n      text=\"{{ badgeType.text.single }}\"\n      [attr.data-role]=\"'badge-' + badgeType.type + '-single'\"\n    >\n    </bb-badge-ui>\n  </div>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Double character</h4>\n  <div *ngFor=\"let badgeType of badgeShowCaseSetup\" class=\"d-inline-block mb-4 mr-3\">\n    <bb-badge-ui\n      color=\"{{ badgeType.type }}\"\n      text=\"{{ badgeType.text.double }}\"\n      [attr.data-role]=\"'badge-' + badgeType.type + '-double'\"\n    >\n    </bb-badge-ui>\n  </div>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Text</h4>\n  <div *ngFor=\"let badgeType of badgeShowCaseSetup\" class=\"d-inline-block mb-4 mr-3\">\n    <bb-badge-ui\n      color=\"{{ badgeType.type }}\"\n      text=\"{{ badgeType.type | titlecase }}\"\n      [attr.data-role]=\"'badge-' + badgeType.type + '-text'\"\n    >\n    </bb-badge-ui>\n  </div>\n</div>\n\n<div class=\"mb-4\">\n  <h4>Abbreviation</h4>\n  <div *ngFor=\"let badgeType of badgeShowCaseSetup\" class=\"d-inline-block mb-4 mr-3\">\n    <bb-badge-ui\n      color=\"{{ badgeType.type }}\"\n      text=\"{{ badgeType.type | titlecase }}\"\n      ariaLabel=\"{{ badgeType.type }}\"\n      [abbr]=\"true\"\n      [attr.data-role]=\"'badge-' + badgeType.type + '-abbr'\"\n    >\n    </bb-badge-ui>\n  </div>\n</div>\n", components: [{ type: i3__namespace.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "titlecase": i4__namespace.TitleCasePipe } });
    BadgeShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], BadgeShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-badge-ui-showcase',
                        templateUrl: './badge-showcase.component.html',
                    }]
            }] });

    var BadgeShowcaseModule = /** @class */ (function () {
        function BadgeShowcaseModule() {
        }
        return BadgeShowcaseModule;
    }());
    BadgeShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    BadgeShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeShowcaseModule, declarations: [BadgeShowcaseComponent], imports: [i4$1.CommonModule, i3.BadgeModule] });
    BadgeShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeShowcaseModule, imports: [[i4$1.CommonModule, i3.BadgeModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BadgeShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i3.BadgeModule],
                        declarations: [BadgeShowcaseComponent],
                        entryComponents: [BadgeShowcaseComponent],
                    }]
            }] });

    var ButtonShowcaseComponent = /** @class */ (function () {
        function ButtonShowcaseComponent(notificationService) {
            var _this = this;
            this.notificationService = notificationService;
            this.buttons = [
                {
                    color: 'primary',
                    text: 'Primary',
                    icon: {
                        name: 'add',
                    },
                },
                {
                    color: 'secondary',
                    text: 'Secondary',
                    icon: {
                        name: 'add',
                        color: 'primary',
                    },
                },
                {
                    color: 'link',
                    text: 'Link',
                    icon: {
                        name: 'add',
                        color: 'primary',
                    },
                },
                {
                    color: 'link-text',
                    text: 'link-text',
                    noDisabledState: true,
                    icon: {
                        name: 'arrow-back',
                        color: 'primary',
                    },
                },
                {
                    color: 'success',
                    text: 'Success',
                },
                {
                    color: 'danger',
                    text: 'Danger',
                },
                {
                    color: 'unstyled',
                    text: 'Unstyled',
                },
            ];
            this.barButtonVariants = ['primary', 'secondary', 'link'];
            this.groups = {
                'sm-1': ['primary', 'secondary'],
                'sm-2': ['primary', 'secondary'],
                'sm-3': ['primary', 'secondary', 'secondary'],
                'md-1': ['primary', 'secondary'],
                'md-2': ['primary', 'secondary'],
                'md-3': ['primary', 'secondary', 'secondary'],
            };
            this.barButtons = this.buttons.filter(function (button) { return _this.barButtonVariants.indexOf(button.color) !== -1; });
            this.buttonsWithIcon = this.buttons.filter(function (button) { return !!button.icon; });
            this.disabledButtons = this.buttons.filter(function (button) { return !button.noDisabledState; });
            this.disabledButtonsWithIcon = this.disabledButtons.filter(function (button) { return !!button.icon; });
        }
        ButtonShowcaseComponent.prototype.showNotification = function (color) {
            var message = "Button " + color + " is clicked";
            this.notificationService.showNotification({
                header: 'Info notification',
                message: message,
                dismissible: true,
                ttl: 5000,
            });
            this.buttonsWithIcon = this.buttons.filter(function (button) { return !!button.icon; });
        };
        ButtonShowcaseComponent.prototype.setActive = function (index, group) {
            this.groups[group] = this.groups[group].map(function () { return 'secondary'; });
            this.groups[group][index] = 'primary';
        };
        return ButtonShowcaseComponent;
    }());
    ButtonShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonShowcaseComponent, deps: [{ token: i1__namespace$n.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ButtonShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ButtonShowcaseComponent, selector: "bb-button-ui-showcase", ngImport: i0__namespace, template: "<h2>Small</h2>\n<div class=\"bb-list bb-block bb-block--md\">\n  <div class=\"bb-list__item--no-separator bb-bock bb-block--lg\">\n    <h3>Variants</h3>\n    <button\n      *ngFor=\"let button of buttons\"\n      bbButton\n      [color]=\"button.color\"\n      buttonSize=\"sm\"\n      [attr.data-role]=\"'btn-' + button.color + '-sm-def'\"\n      class=\"m-2\"\n      (click)=\"showNotification(button.color)\"\n    >\n      {{ button.text }}\n    </button>\n    <button\n      *ngFor=\"let button of buttonsWithIcon\"\n      bbButton\n      [color]=\"button.color\"\n      buttonSize=\"sm\"\n      [attr.data-role]=\"'btn-icon-' + button.color + '-sm-def'\"\n      class=\"m-2\"\n    >\n      <bb-icon-ui [color]=\"button.icon.color\" [name]=\"button.icon.name\" [size]=\"'sm'\" cropped></bb-icon-ui>\n      <span>{{ button.text }}</span>\n    </button>\n    <div>\n      <button\n        *ngFor=\"let button of disabledButtons\"\n        bbButton\n        buttonSize=\"sm\"\n        [attr.data-role]=\"'btn-' + button.color + '-sm-disabled'\"\n        [disabled]=\"true\"\n        class=\"m-2\"\n      >\n        {{ button.text }}\n      </button>\n      <button\n        *ngFor=\"let button of disabledButtonsWithIcon\"\n        bbButton\n        buttonSize=\"sm\"\n        [attr.data-role]=\"'btn-icon-' + button.color + '-sm-disabled'\"\n        [disabled]=\"true\"\n        class=\"m-2\"\n      >\n        <bb-icon-ui [name]=\"'add'\" [size]=\"'sm'\" cropped></bb-icon-ui>\n        <span>{{ button.text }}</span>\n      </button>\n    </div>\n  </div>\n  <div class=\"bb-list__item--no-separator bb-bock bb-block--lg\">\n    <h3>Icon</h3>\n  </div>\n  <div class=\"bb-list__item--no-separator bb-bock bb-block--lg\">\n    <button bbButton color=\"primary\" circle=\"true\" buttonSize=\"sm\" class=\"m-2\" [attr.data-role]=\"'icon-primary-sm-def'\">\n      <bb-icon-ui name=\"search\" aria-label=\"Search icon\"></bb-icon-ui>\n    </button>\n    <button\n      bbButton\n      color=\"secondary\"\n      [circle]=\"true\"\n      buttonSize=\"sm\"\n      class=\"m-2\"\n      [attr.data-role]=\"'icon-secondary-sm-def'\"\n    >\n      <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n    </button>\n    <button bbButton color=\"link\" circle=\"true\" buttonSize=\"sm\" class=\"m-2\" [attr.data-role]=\"'icon-link-sm-def'\">\n      <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n    </button>\n    <button\n      [attr.data-role]=\"'icon-link-dark-sm-def'\"\n      bbButton\n      buttonSize=\"sm\"\n      [circle]=\"true\"\n      class=\"m-2\"\n      color=\"link-dark\"\n    >\n      <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n    </button>\n    <button bbButton color=\"success\" circle=\"true\" buttonSize=\"sm\" class=\"m-2\" [attr.data-role]=\"'icon-success-sm-def'\">\n      <bb-icon-ui name=\"check\"></bb-icon-ui>\n    </button>\n    <button bbButton color=\"danger\" circle=\"true\" buttonSize=\"sm\" class=\"m-2\" [attr.data-role]=\"'icon-danger-sm-def'\">\n      <bb-icon-ui name=\"times\"></bb-icon-ui>\n    </button>\n    <div>\n      <button\n        bbButton\n        color=\"primary\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-primary-sm-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"search\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        color=\"secondary\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-secondary-sm-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n      </button>\n      <button\n        [attr.data-role]=\"'icon-link-sm-disabled'\"\n        [disabled]=\"true\"\n        bbButton\n        [circle]=\"true\"\n        class=\"m-2\"\n        color=\"link\"\n      >\n        <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        color=\"link-dark\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-link-dark-sm-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        color=\"success\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-success-sm-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"check\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        color=\"danger\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-danger-sm-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"times\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n  <div class=\"bb-list__item--no-separator bb-bock bb-block--lg\">\n    <h3>Button group</h3>\n    <div class=\"bb-stack bb-stack\">\n      <div class=\"btn-group btn-group-sm bb-stack__item\" data-role=\"btn-group-sm-icons\">\n        <button (click)=\"setActive(0, 'sm-1')\" [color]=\"groups['sm-1'][0]\" bbButton>\n          <bb-icon-ui name=\"list\"></bb-icon-ui>\n        </button>\n        <button (click)=\"setActive(1, 'sm-1')\" [color]=\"groups['sm-1'][1]\" bbButton>\n          <bb-icon-ui name=\"view-module\"></bb-icon-ui>\n        </button>\n      </div>\n      <div class=\"btn-group btn-group-sm bb-stack__item\" data-role=\"btn-group-sm-2-options\">\n        <button (click)=\"setActive(0, 'sm-2')\" [color]=\"groups['sm-2'][0]\" bbButton>Left</button>\n        <button (click)=\"setActive(1, 'sm-2')\" [color]=\"groups['sm-2'][1]\" bbButton>Right</button>\n      </div>\n      <div class=\"btn-group btn-group-sm bb-stack__item\" data-role=\"btn-group-sm-3-options\">\n        <button (click)=\"setActive(0, 'sm-3')\" [color]=\"groups['sm-3'][0]\" bbButton>Left</button>\n        <button (click)=\"setActive(1, 'sm-3')\" [color]=\"groups['sm-3'][1]\" bbButton>Center</button>\n        <button (click)=\"setActive(2, 'sm-3')\" [color]=\"groups['sm-3'][2]\" bbButton>Right</button>\n      </div>\n    </div>\n  </div>\n  <div class=\"bb-list__item--no-separator bb-bock bb-block--lg\">\n    <h3>Button bar</h3>\n    <div class=\"bb-button-bar bb-block bb-block-md\">\n      <ng-container *ngFor=\"let button of barButtons\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"button.color\"\n          buttonSize=\"sm\"\n          [attr.data-role]=\"'btn-' + button.color + '-sm-def'\"\n        >\n          {{ button.text }}\n        </button>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"bb-list__item--no-separator bb-bock bb-block--lg\">\n    <h3>Button bar reverse</h3>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <ng-container *ngFor=\"let button of barButtons\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"button.color\"\n          buttonSize=\"sm\"\n          [attr.data-role]=\"'btn-' + button.color + '-sm-def'\"\n        >\n          {{ button.text }}\n        </button>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"bb-list__item--no-separator bb-bock bb-block--lg\">\n    <h3>Button bar center</h3>\n    <div class=\"bb-button-bar bb-button-bar--center bb-bock bb-block--md\">\n      <ng-container *ngFor=\"let button of barButtons\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"button.color\"\n          buttonSize=\"sm\"\n          [attr.data-role]=\"'btn-' + button.color + '-sm-def'\"\n        >\n          {{ button.text }}\n        </button>\n      </ng-container>\n    </div>\n    <div class=\"bb-button-bar bb-button-bar--center bb-block bb-block--md\">\n      <bb-load-button-ui [color]=\"'primary'\" [isLoading]=\"true\" [size]=\"8\" [from]=\"1\" [totalCount]=\"2\" class=\"m-3\">\n        Load more\n      </bb-load-button-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-list__item--no-separator bb-bock bb-block--lg\">\n    <h3>Button bar with bigger space between button elements</h3>\n    <div class=\"bb-button-bar bb-button-bar--reverse bb-button-bar--density-lg\">\n      <ng-container *ngFor=\"let button of barButtons\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"button.color\"\n          [attr.data-role]=\"'btn-' + button.color + '-sm-def'\"\n        >\n          {{ button.text }}\n        </button>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<h2>Medium</h2>\n<div class=\"bb-list\">\n  <div class=\"bb-list__item--no-separator\">\n    <h3>Variants</h3>\n    <button\n      *ngFor=\"let button of buttons\"\n      bbButton\n      [color]=\"button.color\"\n      buttonSize=\"md\"\n      [attr.data-role]=\"'btn-' + button.color + '-md-def'\"\n      class=\"m-2\"\n      (click)=\"showNotification(button.color)\"\n    >\n      {{ button.text }}\n    </button>\n    <button\n      *ngFor=\"let button of buttonsWithIcon\"\n      bbButton\n      [color]=\"button.color\"\n      buttonSize=\"md\"\n      [attr.data-role]=\"'btn-icon-' + button.color + '-md-def'\"\n      class=\"m-2\"\n    >\n      <bb-icon-ui [color]=\"button.icon.color\" [name]=\"button.icon.name\" [size]=\"'md'\" cropped></bb-icon-ui>\n      <span>{{ button.text }}</span>\n    </button>\n    <div>\n      <button\n        *ngFor=\"let button of disabledButtons\"\n        bbButton\n        buttonSize=\"md\"\n        [attr.data-role]=\"'btn-' + button.color + '-md-disabled'\"\n        [disabled]=\"true\"\n        class=\"m-2\"\n      >\n        {{ button.text }}\n      </button>\n      <button\n        *ngFor=\"let button of disabledButtonsWithIcon\"\n        bbButton\n        buttonSize=\"md\"\n        [attr.data-role]=\"'btn-icon-' + button.color + '-md-disabled'\"\n        [disabled]=\"true\"\n        class=\"m-2\"\n      >\n        <bb-icon-ui [name]=\"'add'\" [size]=\"'md'\" cropped></bb-icon-ui>\n        <span>{{ button.text }}</span>\n      </button>\n    </div>\n  </div>\n  <div class=\"bb-list__item--no-separator\">\n    <h3>Icon</h3>\n    <button bbButton color=\"primary\" circle=\"true\" buttonSize=\"md\" class=\"m-2\" [attr.data-role]=\"'icon-primary-md-def'\">\n      <bb-icon-ui name=\"search\"></bb-icon-ui>\n    </button>\n    <button\n      bbButton\n      color=\"secondary\"\n      [circle]=\"true\"\n      buttonSize=\"md\"\n      class=\"m-2\"\n      [attr.data-role]=\"'icon-secondary-md-def'\"\n    >\n      <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n    </button>\n    <button bbButton color=\"link\" circle=\"true\" buttonSize=\"md\" class=\"m-2\" [attr.data-role]=\"'icon-link-md-def'\">\n      <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n    </button>\n    <button\n      [attr.data-role]=\"'icon-link-dark-md-def'\"\n      bbButton\n      buttonSize=\"md\"\n      [circle]=\"true\"\n      class=\"m-2\"\n      color=\"link-dark\"\n    >\n      <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n    </button>\n    <button bbButton color=\"success\" circle=\"true\" buttonSize=\"md\" class=\"m-2\" [attr.data-role]=\"'icon-success-md-def'\">\n      <bb-icon-ui name=\"check\"></bb-icon-ui>\n    </button>\n    <button bbButton color=\"danger\" circle=\"true\" buttonSize=\"md\" class=\"m-2\" [attr.data-role]=\"'icon-danger-md-def'\">\n      <bb-icon-ui name=\"times\"></bb-icon-ui>\n    </button>\n    <div>\n      <button\n        bbButton\n        color=\"primary\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-primary-md-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"search\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        color=\"secondary\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-secondary-md-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n      </button>\n      <button\n        [attr.data-role]=\"'icon-link-md-disabled'\"\n        [disabled]=\"true\"\n        bbButton\n        [circle]=\"true\"\n        class=\"m-2\"\n        color=\"link\"\n      >\n        <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        color=\"link-dark\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-link-dark-md-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"ellipsis-h\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        color=\"success\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-success-md-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"check\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        color=\"danger\"\n        [circle]=\"true\"\n        class=\"m-2\"\n        [attr.data-role]=\"'icon-danger-md-disabled'\"\n        [disabled]=\"true\"\n      >\n        <bb-icon-ui name=\"times\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n  <div class=\"bb-list__item--no-separator\">\n    <h3>Button group</h3>\n    <div class=\"bb-stack bb-stack\">\n      <div class=\"btn-group btn-group-md bb-stack__item\" data-role=\"btn-group-md-icons\">\n        <button (click)=\"setActive(0, 'md-1')\" [color]=\"groups['md-1'][0]\" bbButton>\n          <bb-icon-ui name=\"list\"></bb-icon-ui>\n        </button>\n        <button (click)=\"setActive(1, 'md-1')\" [color]=\"groups['md-1'][1]\" bbButton>\n          <bb-icon-ui name=\"view-module\"></bb-icon-ui>\n        </button>\n      </div>\n      <div class=\"btn-group btn-group-md bb-stack__item\" data-role=\"btn-group-md-2-options\">\n        <button (click)=\"setActive(0, 'md-2')\" [color]=\"groups['md-2'][0]\" bbButton>Left</button>\n        <button (click)=\"setActive(1, 'md-2')\" [color]=\"groups['md-2'][1]\" bbButton>Right</button>\n      </div>\n      <div class=\"btn-group btn-group-md bb-stack__item\" data-role=\"btn-group-md-3-options\">\n        <button (click)=\"setActive(0, 'md-3')\" [color]=\"groups['md-3'][0]\" bbButton>Left</button>\n        <button (click)=\"setActive(1, 'md-3')\" [color]=\"groups['md-3'][1]\" bbButton>Center</button>\n        <button (click)=\"setActive(2, 'md-3')\" [color]=\"groups['md-3'][2]\" bbButton>Right</button>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i1__namespace$i.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    ButtonShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ButtonShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-button-ui-showcase',
                        templateUrl: 'button-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$n.NotificationService }]; } });

    var ButtonShowcaseModule = /** @class */ (function () {
        function ButtonShowcaseModule() {
        }
        return ButtonShowcaseModule;
    }());
    ButtonShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ButtonShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonShowcaseModule, declarations: [ButtonShowcaseComponent], imports: [i2$2.ButtonModule, i4$1.CommonModule, i2$9.IconModule, i1$m.LoadButtonModule] });
    ButtonShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonShowcaseModule, imports: [[i2$2.ButtonModule, i4$1.CommonModule, i2$9.IconModule, i1$m.LoadButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ButtonShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2$2.ButtonModule, i4$1.CommonModule, i2$9.IconModule, i1$m.LoadButtonModule],
                        declarations: [ButtonShowcaseComponent],
                        entryComponents: [ButtonShowcaseComponent],
                    }]
            }] });

    var CardVendorShowcaseComponent = /** @class */ (function () {
        function CardVendorShowcaseComponent() {
        }
        return CardVendorShowcaseComponent;
    }());
    CardVendorShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardVendorShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CardVendorShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CardVendorShowcaseComponent, selector: "bb-card-vendor-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-stack bb-stack--center\">\n  <div [style.width.px]=\"39\" class=\"bb-stack__item\">\n    <bb-card-vendor-ui vendor=\"mastercard\"></bb-card-vendor-ui>\n  </div>\n  <div [style.width.px]=\"48\" class=\"bb-stack__item\">\n    <bb-card-vendor-ui vendor=\"visa-debit\"></bb-card-vendor-ui>\n  </div>\n  <div [style.width.px]=\"38\" class=\"bb-stack__item\">\n    <bb-card-vendor-ui vendor=\"union-pay\"></bb-card-vendor-ui>\n  </div>\n  <div [style.width.px]=\"39\" class=\"bb-stack__item\">\n    <bb-card-vendor-ui vendor=\"maestro\"></bb-card-vendor-ui>\n  </div>\n  <div [style.width.px]=\"31\" class=\"bb-stack__item\">\n    <bb-card-vendor-ui vendor=\"diners-club\"></bb-card-vendor-ui>\n  </div>\n  <div [style.width.px]=\"80\" class=\"bb-stack__item\">\n    <bb-card-vendor-ui vendor=\"visa\"></bb-card-vendor-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$6.CardVendorComponent, selector: "bb-card-vendor-ui", inputs: ["vendor"] }] });
    CardVendorShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], CardVendorShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardVendorShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-card-vendor-ui-showcase',
                        templateUrl: './card-vendor-showcase.component.html',
                    }]
            }] });

    var CardVendorShowcaseModule = /** @class */ (function () {
        function CardVendorShowcaseModule() {
        }
        return CardVendorShowcaseModule;
    }());
    CardVendorShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardVendorShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CardVendorShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardVendorShowcaseModule, declarations: [CardVendorShowcaseComponent], imports: [i4$1.CommonModule, i1$6.CardVendorModule] });
    CardVendorShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardVendorShowcaseModule, imports: [[i4$1.CommonModule, i1$6.CardVendorModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CardVendorShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$6.CardVendorModule],
                        declarations: [CardVendorShowcaseComponent],
                        entryComponents: [CardVendorShowcaseComponent],
                    }]
            }] });

    var CharCounterShowcaseComponent = /** @class */ (function () {
        function CharCounterShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                textarea: '',
                textareaAlmostFull: '123456789012345678',
                textareaFull: '12345678901234567890',
            });
        }
        CharCounterShowcaseComponent.prototype.reset = function () {
            if (this.vForm) {
                var control = this.vForm.get('textareaFull');
                // eslint-disable-next-line @typescript-eslint/no-unused-expressions
                control && control.reset();
            }
        };
        return CharCounterShowcaseComponent;
    }());
    CharCounterShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CharCounterShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    CharCounterShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CharCounterShowcaseComponent, selector: "bb-char-counter-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Char counter</h4>\n    <bb-textarea-ui\n      [id]=\"'textarea'\"\n      label=\"Description\"\n      placeholder=\"Enter text...\"\n      formControlName=\"textarea\"\n      [showCharCounter]=\"true\"\n      [minLength]=\"3\"\n      [maxLength]=\"160\"\n      [rows]=\"3\"\n      [cols]=\"50\"\n      wrap=\"hard\"\n    ></bb-textarea-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Char counter (almost full)</h4>\n    <bb-textarea-ui\n      [id]=\"'textarea'\"\n      label=\"Description\"\n      placeholder=\"Enter text...\"\n      formControlName=\"textareaAlmostFull\"\n      [showCharCounter]=\"true\"\n      [minLength]=\"3\"\n      [maxLength]=\"20\"\n      [rows]=\"3\"\n      [cols]=\"50\"\n      wrap=\"hard\"\n    ></bb-textarea-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Char counter (full)</h4>\n    <bb-textarea-ui\n      [id]=\"'textarea'\"\n      label=\"Description\"\n      placeholder=\"Enter text...\"\n      formControlName=\"textareaFull\"\n      [showCharCounter]=\"true\"\n      [minLength]=\"3\"\n      [maxLength]=\"20\"\n      [rows]=\"3\"\n      [cols]=\"50\"\n      wrap=\"hard\"\n    ></bb-textarea-ui>\n    <button class=\"btn btn-primary\" (click)=\"reset()\">CLEAR VALUE</button>\n  </div>\n</form>\n", components: [{ type: i2__namespace$i.TextareaComponent, selector: "bb-textarea-ui", inputs: ["rows", "cols", "placeholder", "maxLength", "minLength", "readonly", "showCharCounter", "wrap"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    CharCounterShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], CharCounterShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CharCounterShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-char-counter-ui-showcase',
                        templateUrl: 'char-counter-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var CharCounterShowcaseModule = /** @class */ (function () {
        function CharCounterShowcaseModule() {
        }
        return CharCounterShowcaseModule;
    }());
    CharCounterShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CharCounterShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CharCounterShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CharCounterShowcaseModule, declarations: [CharCounterShowcaseComponent], imports: [i4$1.CommonModule, i2$3.CharCounterModule, i1$N.ReactiveFormsModule, i2$q.TextareaModule] });
    CharCounterShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CharCounterShowcaseModule, imports: [[i4$1.CommonModule, i2$3.CharCounterModule, i1$N.ReactiveFormsModule, i2$q.TextareaModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CharCounterShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$3.CharCounterModule, i1$N.ReactiveFormsModule, i2$q.TextareaModule],
                        declarations: [CharCounterShowcaseComponent],
                        entryComponents: [CharCounterShowcaseComponent],
                    }]
            }] });

    var CheckboxGroupShowcaseComponent = /** @class */ (function () {
        function CheckboxGroupShowcaseComponent() {
        }
        return CheckboxGroupShowcaseComponent;
    }());
    CheckboxGroupShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CheckboxGroupShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CheckboxGroupShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CheckboxGroupShowcaseComponent, selector: "bb-checkbox-group-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-6\">\n    <form #checkboxGroupForm=\"ngForm\">\n      <ul class=\"list-unstyled\">\n        <li>\n          <bb-checkbox-group-ui ngModelGroup=\"list\" label=\"Parent\" class=\"bb-block bb-block--sm\">\n          </bb-checkbox-group-ui>\n          <ul ngModelGroup=\"list\" class=\"list-unstyled bb-checkbox-group\">\n            <li>\n              <bb-input-checkbox-ui name=\"i1\" ngModel disabled label=\"Child\" class=\"bb-block bb-block--sm\">\n              </bb-input-checkbox-ui>\n            </li>\n            <li>\n              <bb-input-checkbox-ui name=\"i2\" ngModel label=\"Child\" class=\"bb-block bb-block--sm\">\n              </bb-input-checkbox-ui>\n            </li>\n            <li>\n              <bb-checkbox-group-ui ngModelGroup=\"i3\" label=\"Parent\" class=\"bb-block bb-block--sm\">\n              </bb-checkbox-group-ui>\n              <ul ngModelGroup=\"i3\" class=\"list-unstyled bb-checkbox-group\">\n                <li>\n                  <bb-input-checkbox-ui ngModel name=\"q1\" label=\"Child\" class=\"bb-block bb-block--sm\">\n                  </bb-input-checkbox-ui>\n                </li>\n                <li>\n                  <bb-input-checkbox-ui ngModel name=\"q2\" label=\"Child\" class=\"bb-block bb-block--sm\">\n                  </bb-input-checkbox-ui>\n                </li>\n                <li>\n                  <bb-checkbox-group-ui ngModelGroup=\"q3\" label=\"Parent\" class=\"bb-block bb-block--sm\">\n                  </bb-checkbox-group-ui>\n                  <ul ngModelGroup=\"q3\" class=\"list-unstyled bb-checkbox-group\">\n                    <li>\n                      <bb-input-checkbox-ui ngModel name=\"w1\" label=\"Child\" class=\"bb-block bb-block--sm\">\n                      </bb-input-checkbox-ui>\n                    </li>\n                    <li>\n                      <bb-input-checkbox-ui ngModel name=\"w2\" label=\"Child\"> </bb-input-checkbox-ui>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </form>\n  </div>\n</div>\n", components: [{ type: i1__namespace$7.CheckboxGroupComponent, selector: "bb-checkbox-group-ui" }, { type: i2__namespace.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgModelGroup, selector: "[ngModelGroup]", inputs: ["ngModelGroup"], exportAs: ["ngModelGroup"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
    CheckboxGroupShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], CheckboxGroupShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CheckboxGroupShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-checkbox-group-ui-showcase',
                        templateUrl: './checkbox-group-showcase.component.html',
                    }]
            }] });

    var CheckboxGroupShowcaseModule = /** @class */ (function () {
        function CheckboxGroupShowcaseModule() {
        }
        return CheckboxGroupShowcaseModule;
    }());
    CheckboxGroupShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CheckboxGroupShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CheckboxGroupShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CheckboxGroupShowcaseModule, declarations: [CheckboxGroupShowcaseComponent], imports: [i4$1.CommonModule, i1$7.CheckboxGroupModule, i1$N.FormsModule, i2$a.InputCheckboxModule] });
    CheckboxGroupShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CheckboxGroupShowcaseModule, imports: [[i4$1.CommonModule, i1$7.CheckboxGroupModule, i1$N.FormsModule, i2$a.InputCheckboxModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CheckboxGroupShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$7.CheckboxGroupModule, i1$N.FormsModule, i2$a.InputCheckboxModule],
                        declarations: [CheckboxGroupShowcaseComponent],
                        entryComponents: [CheckboxGroupShowcaseComponent],
                    }]
            }] });

    var CollapsibleAccordionShowcaseComponent = /** @class */ (function () {
        function CollapsibleAccordionShowcaseComponent() {
        }
        return CollapsibleAccordionShowcaseComponent;
    }());
    CollapsibleAccordionShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleAccordionShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CollapsibleAccordionShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CollapsibleAccordionShowcaseComponent, selector: "bb-collapsible-accordion-ui-showcase", ngImport: i0__namespace, template: "<h2>Collapsible cards</h2>\n<div class=\"bb-block bb-block--lg\">\n  <bb-collapsible-accordion-ui #collapsibleAccordion1 [closeOthers]=\"true\" [openFirst]=\"false\">\n    <div class=\"bb-block bb-block--sm\">\n      <bb-collapsible-card-ui>\n        <span bbCollapsibleTitle class=\"bb-stack\">\n          <bb-icon-ui name=\"account\" class=\"bb-stack__item\"></bb-icon-ui>\n          <span>Collapsible Panel #1</span>\n        </span>\n        <div bbCollapsibleBody>I am expandable content!</div>\n      </bb-collapsible-card-ui>\n    </div>\n    <div class=\"bb-block bb-block--sm\">\n      <bb-collapsible-card-ui class=\"bb-block bb-block--sm\">\n        <span bbCollapsibleTitle class=\"bb-stack\">\n          <bb-icon-ui name=\"account\" class=\"bb-stack__item\"></bb-icon-ui>\n          <span>Collapsible Panel #2</span>\n        </span>\n        <div bbCollapsibleBody>I am expandable content!</div>\n      </bb-collapsible-card-ui>\n    </div>\n    <div class=\"bb-block bb-block--sm\">\n      <bb-collapsible-card-ui class=\"bb-block bb-block--sm\">\n        <span bbCollapsibleTitle class=\"bb-stack\">\n          <bb-icon-ui name=\"account\" class=\"bb-stack__item\"></bb-icon-ui>\n          <span>Collapsible Panel #3</span>\n        </span>\n        <div bbCollapsibleBody>I am expandable content!</div>\n      </bb-collapsible-card-ui>\n    </div>\n  </bb-collapsible-accordion-ui>\n</div>\n<h2>Collapsible elements</h2>\n<div>\n  <bb-collapsible-accordion-ui #collapsibleAccordion1 [closeOthers]=\"true\" [openFirst]=\"false\">\n    <div class=\"bb-block bb-block--lg\">\n      <bb-collapsible-ui>\n        <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n          <div class=\"bb-stack bb-block bb-block--md\">\n            <span class=\"bb-stack__item\">Custom template for collapsible header</span>\n            <button bbButton color=\"primary\" (click)=\"toggle()\" class=\"bb-stack__item bb-stack__item--push-right\">\n              <span>Custom toggle button</span>\n              <bb-icon-ui cropped name=\"expand-more\" [class.fa-chevron-up]=\"isOpen\"></bb-icon-ui>\n            </button>\n          </div>\n        </ng-template>\n        <ng-template bbCollapsibleBody>\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <p>Example of default content inside.</p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam consectetur doloremque ea excepturi,\n                fugiat maxime minima nesciunt odit omnis.\n              </p>\n            </div>\n          </div>\n        </ng-template>\n      </bb-collapsible-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-collapsible-ui>\n        <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n          <div class=\"bb-stack bb-block bb-block--md\">\n            <span class=\"bb-stack__item\">Custom template for collapsible header</span>\n            <button bbButton color=\"primary\" (click)=\"toggle()\" class=\"bb-stack__item bb-stack__item--push-right\">\n              <span>Custom toggle button</span>\n              <bb-icon-ui cropped name=\"expand-more\" [class.fa-chevron-up]=\"isOpen\"></bb-icon-ui>\n            </button>\n          </div>\n        </ng-template>\n        <ng-template bbCollapsibleBody>\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <p>Example of default content inside.</p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam consectetur doloremque ea excepturi,\n                fugiat maxime minima nesciunt odit omnis.\n              </p>\n            </div>\n          </div>\n        </ng-template>\n      </bb-collapsible-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-collapsible-ui>\n        <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n          <div class=\"bb-stack bb-block bb-block--md\">\n            <span class=\"bb-stack__item\">Custom template for collapsible header</span>\n            <button bbButton color=\"primary\" (click)=\"toggle()\" class=\"bb-stack__item bb-stack__item--push-right\">\n              <span>Custom toggle button</span>\n              <bb-icon-ui cropped name=\"expand-more\" [class.fa-chevron-up]=\"isOpen\"></bb-icon-ui>\n            </button>\n          </div>\n        </ng-template>\n        <ng-template bbCollapsibleBody>\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <p>Example of default content inside.</p>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam consectetur doloremque ea excepturi,\n                fugiat maxime minima nesciunt odit omnis.\n              </p>\n            </div>\n          </div>\n        </ng-template>\n      </bb-collapsible-ui>\n    </div>\n  </bb-collapsible-accordion-ui>\n</div>\n", components: [{ type: i1__namespace$8.CollapsibleAccordionComponent, selector: "bb-collapsible-accordion-ui", inputs: ["closeOthers", "openFirst", "obeyParentAccordion"] }, { type: i2__namespace$7.CollapsibleCardComponent, selector: "bb-collapsible-card-ui", inputs: ["isOpen", "ariaLabelForIcon", "aria-label", "hasChevron", "highlight", "shadow", "size"], outputs: ["isOpenChange"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i1__namespace$9.CollapsibleComponent, selector: "bb-collapsible-ui", inputs: ["recreateBodyContent", "hasChevron", "isOpen"], outputs: ["isOpenChange"] }], directives: [{ type: i1__namespace$9.CollapsibleHeaderDirective, selector: "ng-template[bbCollapsibleHeader]" }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$9.CollapsibleBodyDirective, selector: "ng-template[bbCollapsibleBody]" }] });
    CollapsibleAccordionShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], CollapsibleAccordionShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleAccordionShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-collapsible-accordion-ui-showcase',
                        templateUrl: 'collapsible-accordion-showcase.component.html',
                    }]
            }] });

    var CollapsibleAccordionShowcaseModule = /** @class */ (function () {
        function CollapsibleAccordionShowcaseModule() {
        }
        return CollapsibleAccordionShowcaseModule;
    }());
    CollapsibleAccordionShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleAccordionShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CollapsibleAccordionShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleAccordionShowcaseModule, declarations: [CollapsibleAccordionShowcaseComponent], imports: [i4$1.CommonModule,
            i1$8.CollapsibleAccordionModule,
            i2$9.IconModule,
            i2$4.CollapsibleCardModule,
            i1$9.CollapsibleModule,
            i2$2.ButtonModule] });
    CollapsibleAccordionShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleAccordionShowcaseModule, imports: [[
                i4$1.CommonModule,
                i1$8.CollapsibleAccordionModule,
                i2$9.IconModule,
                i2$4.CollapsibleCardModule,
                i1$9.CollapsibleModule,
                i2$2.ButtonModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleAccordionShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4$1.CommonModule,
                            i1$8.CollapsibleAccordionModule,
                            i2$9.IconModule,
                            i2$4.CollapsibleCardModule,
                            i1$9.CollapsibleModule,
                            i2$2.ButtonModule,
                        ],
                        declarations: [CollapsibleAccordionShowcaseComponent],
                        entryComponents: [CollapsibleAccordionShowcaseComponent],
                    }]
            }] });

    var CollapsibleCardShowcaseComponent = /** @class */ (function () {
        function CollapsibleCardShowcaseComponent() {
        }
        return CollapsibleCardShowcaseComponent;
    }());
    CollapsibleCardShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleCardShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CollapsibleCardShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CollapsibleCardShowcaseComponent, selector: "bb-collapsible-card-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--md\">\n  <h4>Default collapsible card</h4>\n  <bb-collapsible-card-ui>\n    <span bbCollapsibleTitle>Collapsible card</span>\n    <div bbCollapsibleBody>I am expandable content!</div>\n  </bb-collapsible-card-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Small collapsible card</h4>\n  <bb-collapsible-card-ui size=\"sm\">\n    <span bbCollapsibleTitle>Small collapsible card</span>\n    <div bbCollapsibleBody>I am expandable content!</div>\n  </bb-collapsible-card-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Large collapsible card</h4>\n  <bb-collapsible-card-ui size=\"lg\">\n    <span bbCollapsibleTitle>Large collapsible card</span>\n    <div bbCollapsibleBody>I am expandable content!</div>\n  </bb-collapsible-card-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Without chevron</h4>\n  <bb-collapsible-card-ui [hasChevron]=\"false\">\n    <span bbCollapsibleTitle>Collapsible card</span>\n    <div bbCollapsibleBody>I am expandable content!</div>\n  </bb-collapsible-card-ui>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <h4>Highlighted collapsible card</h4>\n  <bb-collapsible-card-ui [highlight]=\"true\">\n    <span bbCollapsibleTitle>Highlighted collapsible card</span>\n    <div bbCollapsibleBody>I am expandable content!</div>\n  </bb-collapsible-card-ui>\n</div>\n", components: [{ type: i2__namespace$7.CollapsibleCardComponent, selector: "bb-collapsible-card-ui", inputs: ["isOpen", "ariaLabelForIcon", "aria-label", "hasChevron", "highlight", "shadow", "size"], outputs: ["isOpenChange"] }] });
    CollapsibleCardShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], CollapsibleCardShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleCardShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-collapsible-card-ui-showcase',
                        templateUrl: 'collapsible-card-showcase.component.html',
                    }]
            }] });

    var CollapsibleCardShowcaseModule = /** @class */ (function () {
        function CollapsibleCardShowcaseModule() {
        }
        return CollapsibleCardShowcaseModule;
    }());
    CollapsibleCardShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleCardShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CollapsibleCardShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleCardShowcaseModule, declarations: [CollapsibleCardShowcaseComponent], imports: [i4$1.CommonModule, i2$4.CollapsibleCardModule] });
    CollapsibleCardShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleCardShowcaseModule, imports: [[i4$1.CommonModule, i2$4.CollapsibleCardModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleCardShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$4.CollapsibleCardModule],
                        declarations: [CollapsibleCardShowcaseComponent],
                        entryComponents: [CollapsibleCardShowcaseComponent],
                    }]
            }] });

    var CollapsibleShowcaseComponent = /** @class */ (function () {
        function CollapsibleShowcaseComponent() {
        }
        return CollapsibleShowcaseComponent;
    }());
    CollapsibleShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CollapsibleShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CollapsibleShowcaseComponent, selector: "bb-collapsible-ui-showcase", ngImport: i0__namespace, template: "<div>\n  <h4>Collapsible (basic component without predefined markup)</h4>\n  <bb-collapsible-ui>\n    <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n      <div class=\"bb-stack bb-block bb-block--md\">\n        <span class=\"bb-stack__item\">Custom template for collapsible header</span>\n        <button bbButton color=\"primary\" (click)=\"toggle()\" class=\"bb-stack__item bb-stack__item--push-right\">\n          <span>Custom toggle button</span>\n          <bb-icon-ui cropped name=\"expand-more\" [class.fa-chevron-up]=\"isOpen\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n    <ng-template bbCollapsibleBody>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>Example of default content inside.</p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam consectetur doloremque ea excepturi,\n            fugiat maxime minima nesciunt odit omnis.\n          </p>\n        </div>\n      </div>\n    </ng-template>\n  </bb-collapsible-ui>\n</div>\n", components: [{ type: i1__namespace$9.CollapsibleComponent, selector: "bb-collapsible-ui", inputs: ["recreateBodyContent", "hasChevron", "isOpen"], outputs: ["isOpenChange"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i1__namespace$9.CollapsibleHeaderDirective, selector: "ng-template[bbCollapsibleHeader]" }, { type: i1__namespace$9.CollapsibleBodyDirective, selector: "ng-template[bbCollapsibleBody]" }] });
    CollapsibleShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], CollapsibleShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-collapsible-ui-showcase',
                        templateUrl: 'collapsible-showcase.component.html',
                    }]
            }] });

    var CollapsibleShowcaseModule = /** @class */ (function () {
        function CollapsibleShowcaseModule() {
        }
        return CollapsibleShowcaseModule;
    }());
    CollapsibleShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CollapsibleShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleShowcaseModule, declarations: [CollapsibleShowcaseComponent], imports: [i4$1.CommonModule, i1$9.CollapsibleModule, i2$9.IconModule] });
    CollapsibleShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleShowcaseModule, imports: [[i4$1.CommonModule, i1$9.CollapsibleModule, i2$9.IconModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CollapsibleShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$9.CollapsibleModule, i2$9.IconModule],
                        declarations: [CollapsibleShowcaseComponent],
                        entryComponents: [CollapsibleShowcaseComponent],
                    }]
            }] });

    var CommonErrorStateShowcaseComponent = /** @class */ (function () {
        function CommonErrorStateShowcaseComponent() {
        }
        CommonErrorStateShowcaseComponent.prototype.getErrorFromString = function (errorType) {
            switch (errorType) {
                case 'badRequestError':
                    return new http.HttpErrorResponse({ status: 400 });
                case 'unauthorizedError':
                    return new http.HttpErrorResponse({ status: 401 });
                case 'forbiddenError':
                    return new http.HttpErrorResponse({ status: 403 });
                case 'notFoundError':
                    return new http.HttpErrorResponse({ status: 404 });
                case 'internalServerError':
                    return new http.HttpErrorResponse({ status: 500 });
                case 'connectivityError':
                    return new http.HttpErrorResponse({ status: 0 });
                case 'textError':
                default:
                    return 'Some text error';
            }
        };
        return CommonErrorStateShowcaseComponent;
    }());
    CommonErrorStateShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CommonErrorStateShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CommonErrorStateShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CommonErrorStateShowcaseComponent, selector: "bb-common-error-state-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <h4>Not Found Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('notFoundError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Bad Request Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('badRequestError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Unauthorized Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('unauthorizedError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Forbidden Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('forbiddenError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Connectivity Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('connectivityError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Internal Server Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('internalServerError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Text Error (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"getErrorFromString('textError')\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Custom i18n Template (theme 1)</h4>\n  <bb-common-error-state-ui [error]=\"i18nCustomError\"></bb-common-error-state-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Not Found Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('notFoundError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Bad Request Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('badRequestError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"mb-3\">\n  <h4>Connectivity Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('connectivityError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Internal Server Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('internalServerError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Text Error - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"getErrorFromString('textError')\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4>Custom i18n Template - inside a card + state container (theme 2)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-state-container\">\n        <bb-common-error-state-ui [error]=\"i18nCustomError\"></bb-common-error-state-ui>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #i18nCustomError>\n  <p>Custom error with i18n support</p>\n</ng-template>\n", components: [{ type: i1__namespace$a.ErrorCommonStateComponent, selector: "bb-common-error-state-ui", inputs: ["error"] }] });
    CommonErrorStateShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], CommonErrorStateShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CommonErrorStateShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-common-error-state-ui-showcase',
                        templateUrl: 'common-error-state-showcase.component.html',
                    }]
            }] });

    var CommonErrorStateShowcaseModule = /** @class */ (function () {
        function CommonErrorStateShowcaseModule() {
        }
        return CommonErrorStateShowcaseModule;
    }());
    CommonErrorStateShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CommonErrorStateShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CommonErrorStateShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CommonErrorStateShowcaseModule, declarations: [CommonErrorStateShowcaseComponent], imports: [i4$1.CommonModule, i1$a.ErrorCommonStateModule] });
    CommonErrorStateShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CommonErrorStateShowcaseModule, imports: [[i4$1.CommonModule, i1$a.ErrorCommonStateModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CommonErrorStateShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$a.ErrorCommonStateModule],
                        declarations: [CommonErrorStateShowcaseComponent],
                        entryComponents: [CommonErrorStateShowcaseComponent],
                    }]
            }] });

    var CurrencyInputShowcaseComponent = /** @class */ (function () {
        function CurrencyInputShowcaseComponent() {
            this.withDecimal = {
                amount: undefined,
                currency: 'USD',
            };
            this.withoutDecimal = {
                amount: undefined,
                currency: 'EUR',
            };
            this.withoutCurrency = {
                amount: undefined,
            };
            this.currencies = [
                'USD',
                'EUR',
                // Bahraini dinar (BHD) and Omani rial have a decimal precision of three
                'BHD',
                'OMR',
                // Malagasy ariary (MGA) is a non-decimal currency
                'MGA',
            ];
            this.withDecimalControl = new i1$N.FormControl({
                amount: '-1234567.89',
                currency: 'USD',
            });
        }
        return CurrencyInputShowcaseComponent;
    }());
    CurrencyInputShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrencyInputShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CurrencyInputShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CurrencyInputShowcaseComponent, selector: "bb-currency-input-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <div id=\"currency-input-with-decimals-label\" class=\"bb-text-bold\">With decimals</div>\n    <div [attr.data-role]=\"'currency-input-with-decimals'\" class=\"bb-block--lg\">\n      <bb-currency-input-ui\n        [currencyLabel]=\"'Currency'\"\n        [formControl]=\"withDecimalControl\"\n        [currencies]=\"currencies\"\n        [aria-labelledby]=\"'currency-input-with-decimals-label'\"\n        [currencyListAriaLabel]=\"'Currency'\"\n        [isRightAligned]=\"true\"\n        [allowNegativeValue]=\"true\"\n        [required]=\"true\"\n      >\n        <div bbValidationMessage>\n          <bb-input-validation-message-ui [showErrors]=\"withDecimalControl.invalid\">\n            Field is required.\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-currency-input-ui>\n    </div>\n\n    <div id=\"currency-input-without-decimals-label\" class=\"bb-text-bold\">Without decimals</div>\n    <div data-role=\"currency-input-without-decimals\" class=\"bb-block--lg\">\n      <bb-currency-input-ui\n        [ngModel]=\"withoutDecimal\"\n        [integer]=\"true\"\n        [currencies]=\"currencies\"\n        #withoutDec=\"ngModel\"\n        [aria-labelledby]=\"'currency-input-without-decimals-label'\"\n      >\n        <div bbValidationMessage>\n          <bb-input-validation-message-ui [showErrors]=\"withoutDec.value?.amount === 0 && !withoutDec.untouched\">\n            Field is required.\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-currency-input-ui>\n    </div>\n\n    <div id=\"currency-input-without-currency-label\" class=\"bb-text-bold\">Without currency code</div>\n    <div data-role=\"currency-input-without-currency-label\" class=\"bb-block--lg\">\n      <bb-currency-input-ui\n        [ngModel]=\"withoutCurrency\"\n        #withoutCur=\"ngModel\"\n        [aria-labelledby]=\"'currency-input-without-currency-label'\"\n      >\n        <div bbValidationMessage>\n          <bb-input-validation-message-ui [showErrors]=\"withoutCur.value?.amount === 0 && withoutCur.touched\">\n            Field is required.\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-currency-input-ui>\n    </div>\n\n    <div id=\"currency-input-with-decimals-label-2\" data-role=\"currency-input-with-decimals-label\" class=\"bb-block--lg\">\n      <bb-currency-input-ui\n        [currencyLabel]=\"'Currency'\"\n        [formControl]=\"withDecimalControl\"\n        [currencies]=\"currencies\"\n        [aria-labelledby]=\"'currency-input-with-decimals-label-2'\"\n        [currencyListAriaLabel]=\"'Currency'\"\n        [isRightAligned]=\"true\"\n        [integerLabel]=\"'Integer'\"\n        [decimalLabel]=\"'Decimal'\"\n      >\n        <div bbValidationMessage>\n          <bb-input-validation-message-ui [showErrors]=\"withDecimalControl.invalid\">\n            Field is required. inclusion ...\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-currency-input-ui>\n    </div>\n\n    <div id=\"currency-input-invalid-label\" class=\"bb-text-bold\">Invalid value</div>\n    <div data-role=\"currency-input-invalid\" class=\"bb-block--lg\">\n      <bb-currency-input-ui\n        [ngModel]=\"withDecimal\"\n        #invalid=\"ngModel\"\n        [aria-invalid]=\"'true'\"\n        [currencies]=\"currencies\"\n        [aria-labelledby]=\"'currency-input-invalid-label'\"\n      >\n        <div bbValidationMessage>\n          <bb-input-validation-message-ui [showErrors]=\"invalid.value?.amount === 0 && invalid.touched\">\n            Field is required.\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-currency-input-ui>\n    </div>\n\n    <div id=\"currency-input-disabled\" class=\"bb-text-bold\">Disabled field</div>\n    <div data-role=\"currency-input-disabled\" class=\"bb-block--lg\">\n      <bb-currency-input-ui\n        [disabled]=\"true\"\n        [ngModel]=\"withoutDecimal\"\n        #disabled=\"ngModel\"\n        [currencies]=\"currencies\"\n        [aria-labelledby]=\"'currency-input-disabled'\"\n        [currencyListAriaLabel]=\"'Currency'\"\n      >\n      </bb-currency-input-ui>\n    </div>\n\n    <div id=\"currency-input-readonly\" class=\"bb-text-bold\">Readonly field</div>\n    <div data-role=\"'currency-input-readonly\" class=\"bb-block--lg\">\n      <bb-currency-input-ui\n        [readonly]=\"true\"\n        [ngModel]=\"withDecimal\"\n        #readonly=\"ngModel\"\n        [currencies]=\"currencies\"\n        [aria-labelledby]=\"'currency-input-readonly'\"\n        [currencyListAriaLabel]=\"'Currency'\"\n      >\n        <div bbValidationMessage>\n          <bb-input-validation-message-ui [showErrors]=\"readonly.value?.amount === 0 && readonly.touched\">\n            Field is required.\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-currency-input-ui>\n    </div>\n\n    <div id=\"currency-input-required\" class=\"bb-text-bold\">Required field</div>\n    <div [attr.data-role]=\"'currency-input-required'\" class=\"bb-block--lg\">\n      <bb-currency-input-ui\n        [required]=\"true\"\n        [ngModel]=\"withDecimal\"\n        #required=\"ngModel\"\n        [currencies]=\"currencies\"\n        [aria-labelledby]=\"'currency-input-required'\"\n        [currencyListAriaLabel]=\"'Currency'\"\n      >\n        <div bbValidationMessage>\n          <bb-input-validation-message-ui [showErrors]=\"required.value?.amount === 0 && required.touched\">\n            Field is required.\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-currency-input-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$b.CurrencyInputComponent, selector: "bb-currency-input-ui", inputs: ["decMaxLen", "decMinLen", "placeholder", "resultType", "integer", "required", "readonly", "disabled", "integerLabelSrOnly", "decimalLabelSrOnly", "currencies", "isRightAligned", "integerId", "decimalId", "integerLabel", "decimalLabel", "currencyLabel", "allowNegativeValue", "currencyListAriaLabel", "currencyListWithOnItemAriaLabel", "aria-describedby", "aria-labelledby", "aria-invalid"], outputs: ["blur"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
    CurrencyInputShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], CurrencyInputShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrencyInputShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-currency-input-ui-showcase',
                        templateUrl: 'currency-input-showcase.component.html',
                    }]
            }], ctorParameters: function () { return []; } });

    var CurrencyInputShowcaseModule = /** @class */ (function () {
        function CurrencyInputShowcaseModule() {
        }
        return CurrencyInputShowcaseModule;
    }());
    CurrencyInputShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrencyInputShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    CurrencyInputShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrencyInputShowcaseModule, declarations: [CurrencyInputShowcaseComponent], imports: [i4$1.CommonModule, i1$b.CurrencyInputModule, i1$N.ReactiveFormsModule, i1$N.FormsModule, i3$2.InputValidationMessageModule] });
    CurrencyInputShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrencyInputShowcaseModule, imports: [[i4$1.CommonModule, i1$b.CurrencyInputModule, i1$N.ReactiveFormsModule, i1$N.FormsModule, i3$2.InputValidationMessageModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CurrencyInputShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$b.CurrencyInputModule, i1$N.ReactiveFormsModule, i1$N.FormsModule, i3$2.InputValidationMessageModule],
                        declarations: [CurrencyInputShowcaseComponent],
                        entryComponents: [CurrencyInputShowcaseComponent],
                    }]
            }] });

    var DatePipeShowcaseComponent = /** @class */ (function () {
        function DatePipeShowcaseComponent() {
            this.dateToTransform = new Date('Wed Dec 3 2018 15:29:14 GMT+0100 (Central European Standard Time)');
        }
        return DatePipeShowcaseComponent;
    }());
    DatePipeShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DatePipeShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    DatePipeShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DatePipeShowcaseComponent, selector: "bb-date-pipe-ui-showcase", ngImport: i0__namespace, template: "<h2>Dates</h2>\n\n<div class=\"col-12 mb-5\">\n  <div class=\"card shadow-sm\">\n    <div class=\"card-body\">\n      <div class=\"table-responsive\">\n        <table class=\"table table-hover\" bbTable>\n          <thead>\n            <tr>\n              <th>Pipe usage</th>\n              <th class=\"bb-text-align-right\">Result</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Shorter:</td>\n              <td class=\"bb-text-align-right\">\n                {{ dateToTransform | bbDate: 'd/MM':'GMT+0100' }}\n              </td>\n            </tr>\n            <tr>\n              <td>Short:</td>\n              <td class=\"bb-text-align-right\">\n                {{ dateToTransform | bbDate: 'd/MM/yy':'GMT+0100' }}\n              </td>\n            </tr>\n            <tr>\n              <td>MediumShort:</td>\n              <td class=\"bb-text-align-right\">\n                {{ dateToTransform | bbDate: 'd/MM/y':'GMT+0100' }}\n              </td>\n            </tr>\n            <tr>\n              <td>Medium:</td>\n              <td class=\"bb-text-align-right\">\n                {{ dateToTransform | bbDate: 'mediumDate':'GMT+0100' }}\n              </td>\n            </tr>\n            <tr>\n              <td>Long:</td>\n              <td class=\"bb-text-align-right\">\n                {{ dateToTransform | bbDate: 'longDate':'GMT+0100' }}\n              </td>\n            </tr>\n            <tr>\n              <td>Full:</td>\n              <td class=\"bb-text-align-right\">\n                {{ dateToTransform | bbDate: 'fullDate':'GMT+0100' }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n\n<h2>Times</h2>\n<div class=\"card shadow-sm\">\n  <div class=\"card-body\">\n    <div class=\"table-responsive\">\n      <table class=\"table table-hover\" bbTable>\n        <thead>\n          <tr>\n            <th>Pipe usage</th>\n            <th class=\"bb-text-align-right\">Result</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Short:</td>\n            <td class=\"bb-text-align-right\">\n              {{ dateToTransform | bbDate: 'shortTime':'GMT+0100' }}\n            </td>\n          </tr>\n          <tr>\n            <td>Medium:</td>\n            <td class=\"bb-text-align-right\">\n              {{ dateToTransform | bbDate: 'mediumTime':'GMT+0100' }}\n            </td>\n          </tr>\n          <tr>\n            <td>Long:</td>\n            <td class=\"bb-text-align-right\">\n              {{ dateToTransform | bbDate: 'longTime':'GMT+0100' }}\n            </td>\n          </tr>\n          <tr>\n            <td>Full:</td>\n            <td class=\"bb-text-align-right\">\n              {{ dateToTransform | bbDate: 'fullTime':'GMT+0100' }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n", pipes: { "bbDate": i1__namespace$c.BbDatePipe } });
    DatePipeShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], DatePipeShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DatePipeShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-date-pipe-ui-showcase',
                        templateUrl: 'date-pipe-showcase.component.html',
                    }]
            }] });

    var DatePipeShowcaseModule = /** @class */ (function () {
        function DatePipeShowcaseModule() {
        }
        return DatePipeShowcaseModule;
    }());
    DatePipeShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DatePipeShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    DatePipeShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DatePipeShowcaseModule, declarations: [DatePipeShowcaseComponent], imports: [i4$1.CommonModule, i1$c.BbDatePipeModule] });
    DatePipeShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DatePipeShowcaseModule, imports: [[i4$1.CommonModule, i1$c.BbDatePipeModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DatePipeShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$c.BbDatePipeModule],
                        declarations: [DatePipeShowcaseComponent],
                        entryComponents: [DatePipeShowcaseComponent],
                    }]
            }] });

    var DropdownMenuShowcaseComponent = /** @class */ (function () {
        function DropdownMenuShowcaseComponent() {
            this.message = '';
            this.dropdownTemplateMenuOptions = i1$d.DROPDOWN_TEMPLATE_MENU_OPTIONS;
            this.dropdownMenuOptions = i1$d.DROPDOWN_MENU_OPTIONS;
        }
        DropdownMenuShowcaseComponent.prototype.onButtonDropdownSelect = function (item) {
            this.message = item;
        };
        DropdownMenuShowcaseComponent.prototype.doesParentContainDropdown = function (node) {
            if (node.parentNode) {
                if (node.parentNode.closest('.dropdown')) {
                    return true;
                }
                return false;
            }
            else {
                return false;
            }
        };
        return DropdownMenuShowcaseComponent;
    }());
    DropdownMenuShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMenuShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    DropdownMenuShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownMenuShowcaseComponent, selector: "bb-dropdown-menu-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row bb-block bb-block--md\">\n  <div class=\"col-sm-6 bb-block bb-block--md\">\n    <h4>Small button</h4>\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui container=\"body\" position=\"right\" icon=\"caret-down\" btnColor=\"primary\" buttonSize=\"sm\">\n        <ng-template bbDropdownLabel>\n          <span>Dropdown</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <a\n            [id]=\"option.name\"\n            rel=\"noopener noreferrer\"\n            role=\"menuitem\"\n            *ngFor=\"let option of dropdownTemplateMenuOptions\"\n            class=\"dropdown-item\"\n            target=\"_blank\"\n            [href]=\"option.url\"\n          >\n            {{ option.name }}\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui\n        container=\"body\"\n        position=\"right\"\n        icon=\"caret-down\"\n        btnColor=\"secondary\"\n        buttonSize=\"sm\"\n        class=\"btn-group-sm\"\n      >\n        <ng-template bbDropdownLabel>\n          <span>Dropdown</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <a\n            [id]=\"option.name\"\n            rel=\"noopener noreferrer\"\n            role=\"menuitem\"\n            *ngFor=\"let option of dropdownTemplateMenuOptions\"\n            class=\"dropdown-item\"\n            target=\"_blank\"\n            [href]=\"option.url\"\n          >\n            {{ option.name }}\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui container=\"body\" position=\"right\" icon=\"caret-down\" btnColor=\"primary\" buttonSize=\"sm\">\n        <ng-template bbDropdownLabel>\n          <span>Custom item</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <span>\n            <em> Custom item 1 </em>\n            <em> Custom item 2 </em>\n          </span>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n    <h5>With Full Width</h5>\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui position=\"right\" icon=\"caret-down\" btnColor=\"primary\" buttonSize=\"sm\" [fullWidth]=\"true\">\n        <ng-template bbDropdownLabel>\n          <span class=\"dropdown-menu__label--full-width\">Dropdown</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <a\n            [id]=\"option.name\"\n            rel=\"noopener noreferrer\"\n            role=\"menuitem\"\n            *ngFor=\"let option of dropdownTemplateMenuOptions\"\n            class=\"dropdown-item\"\n            target=\"_blank\"\n            [href]=\"option.url\"\n          >\n            {{ option.name }}\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n  <div class=\"col-sm-6\">\n    <h4>Medium button</h4>\n\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui\n        container=\"body\"\n        position=\"top\"\n        icon=\"caret-down\"\n        class=\"btn-md\"\n        btnColor=\"primary\"\n        iconSize=\"lg\"\n      >\n        <ng-template bbDropdownLabel>\n          <span>Dropdown</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <a\n            [id]=\"option.name\"\n            rel=\"noopener noreferrer\"\n            role=\"menuitem\"\n            *ngFor=\"let option of dropdownTemplateMenuOptions\"\n            class=\"dropdown-item\"\n            target=\"_blank\"\n            [href]=\"option.url\"\n          >\n            {{ option.name }}\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui container=\"body\" position=\"right\" icon=\"caret-down\" btnColor=\"secondary\" iconSize=\"lg\">\n        <ng-template bbDropdownLabel>\n          <span>Dropdown</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <a\n            [id]=\"option.name\"\n            rel=\"noopener noreferrer\"\n            role=\"menuitem\"\n            *ngFor=\"let option of dropdownTemplateMenuOptions\"\n            class=\"dropdown-item\"\n            target=\"_blank\"\n            [href]=\"option.url\"\n          >\n            {{ option.name }}\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n    <h5>With Full Width</h5>\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui position=\"left\" icon=\"caret-down\" btnColor=\"primary\" buttonSize=\"md\" [fullWidth]=\"true\">\n        <ng-template bbDropdownLabel>\n          <span class=\"dropdown-menu__label--full-width\">Dropdown</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <a\n            [id]=\"option.name\"\n            rel=\"noopener noreferrer\"\n            role=\"menuitem\"\n            *ngFor=\"let option of dropdownTemplateMenuOptions\"\n            class=\"dropdown-item\"\n            target=\"_blank\"\n            [href]=\"option.url\"\n          >\n            {{ option.name }}\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n  <div class=\"col-sm-6 bb-block bb-block--md\">\n    <h4>Medium button with default menu</h4>\n\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui position=\"bottom\" icon=\"caret-down\" class=\"btn-md\" btnColor=\"primary\" iconSize=\"lg\">\n        <ng-template bbDropdownLabel>\n          <span>Dropdown label wider than content</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <a\n            [id]=\"option.name\"\n            rel=\"noopener noreferrer\"\n            role=\"menuitem\"\n            *ngFor=\"let option of dropdownTemplateMenuOptions\"\n            class=\"dropdown-item\"\n            target=\"_blank\"\n            [href]=\"option.url\"\n          >\n            {{ option.name }}\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n  <div class=\"col-sm-6 bb-block bb-block--md\">\n    <h4>Medium button with fullwidth menu</h4>\n\n    <div class=\"bb-block bb-block--md\">\n      <bb-dropdown-menu-ui\n        position=\"bottom\"\n        icon=\"caret-down\"\n        class=\"btn-md\"\n        btnColor=\"primary\"\n        [bbDropdownToggleFullWidth]=\"true\"\n        iconSize=\"lg\"\n      >\n        <ng-template bbDropdownLabel>\n          <span>Dropdown label wider than content</span>\n        </ng-template>\n        <ng-template bbDropdownMenuItem>\n          <a\n            [id]=\"option.name\"\n            rel=\"noopener noreferrer\"\n            role=\"menuitem\"\n            *ngFor=\"let option of dropdownTemplateMenuOptions\"\n            class=\"dropdown-item\"\n            target=\"_blank\"\n            [href]=\"option.url\"\n          >\n            {{ option.name }}\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n</div>\n<div class=\"row bb-block bb-block--md\">\n  <div class=\"col-sm-6 bb-block bb-block--md\">\n    <h4>Split small button</h4>\n\n    <div class=\"bb-block bb-block--md\">\n      <div class=\"btn-group btn-group-sm\">\n        <button bbButton buttonSize=\"sm\">Open as auto</button>\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          position=\"auto\"\n          icon=\"caret-down\"\n          container=\"body\"\n          aria-label=\"options\"\n          [options]=\"dropdownMenuOptions\"\n        >\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <div class=\"btn-group btn-group-sm\">\n        <button bbButton color=\"secondary\">Open as</button>\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          container=\"body\"\n          position=\"top\"\n          icon=\"caret-down\"\n          btnColor=\"secondary\"\n          aria-label=\"options\"\n          [options]=\"dropdownMenuOptions\"\n        >\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <div class=\"btn-group btn-group-sm\">\n        <button bbButton>\n          <bb-icon-ui name=\"quick-action\" size=\"sm\" cropped></bb-icon-ui>\n          <span>Open as</span>\n        </button>\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          icon=\"caret-down\"\n          container=\"body\"\n          aria-label=\"options\"\n          [options]=\"dropdownMenuOptions\"\n        >\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n    <div>\n      <div class=\"btn-group btn-group-sm\">\n        <button bbButton color=\"secondary\">\n          <bb-icon-ui name=\"quick-action\" size=\"sm\" cropped></bb-icon-ui>\n          <span>Open as</span>\n        </button>\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          icon=\"caret-down\"\n          container=\"body\"\n          aria-label=\"options\"\n          btnColor=\"secondary\"\n          [options]=\"dropdownMenuOptions\"\n        >\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-6 bb-block bb-block--md\">\n    <h4>Split medium button</h4>\n\n    <div class=\"bb-block bb-block--md\">\n      <div class=\"btn-group\">\n        <button bbButton>Open as</button>\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          icon=\"caret-down\"\n          container=\"body\"\n          aria-label=\"options\"\n          iconSize=\"lg\"\n          [options]=\"dropdownMenuOptions\"\n        >\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <div class=\"btn-group\">\n        <button bbButton color=\"secondary\">Open as</button>\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          icon=\"caret-down\"\n          container=\"body\"\n          btnColor=\"secondary\"\n          aria-label=\"options\"\n          iconSize=\"lg\"\n          [options]=\"dropdownMenuOptions\"\n        >\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <div class=\"btn-group\">\n        <button bbButton>\n          <bb-icon-ui name=\"quick-action\" size=\"md\" cropped></bb-icon-ui>\n          <span>Open as</span>\n        </button>\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          icon=\"caret-down\"\n          container=\"body\"\n          aria-label=\"options\"\n          iconSize=\"lg\"\n          [options]=\"dropdownMenuOptions\"\n        >\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n    <div>\n      <div class=\"btn-group\">\n        <button bbButton color=\"secondary\">\n          <bb-icon-ui name=\"quick-action\" color=\"primary\" size=\"md\" cropped></bb-icon-ui>\n          <span>Open as</span>\n        </button>\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          icon=\"caret-down\"\n          container=\"body\"\n          btnColor=\"secondary\"\n          aria-label=\"options\"\n          iconSize=\"lg\"\n          position=\"bottom\"\n          [options]=\"dropdownMenuOptions\"\n        >\n        </bb-dropdown-menu-ui>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"row bb-block bb-block--md\">\n  <div class=\"col-sm-6 bb-block bb-block--md\">\n    <h4>Icon small button</h4>\n    <bb-dropdown-menu-ui\n      [options]=\"dropdownMenuOptions\"\n      icon=\"ellipsis-h\"\n      iconSize=\"md\"\n      buttonSize=\"sm\"\n      [btnCircle]=\"true\"\n      container=\"body\"\n      ariaLabel=\"dropdown with no label\"\n      dropDownButtonLabel=\"test\"\n      (select)=\"onButtonDropdownSelect($event)\"\n    >\n      <ng-template bbDropdownMenuItem>\n        <a role=\"menuitem\" *ngFor=\"let option of dropdownTemplateMenuOptions\" class=\"dropdown-item\">\n          {{ option.name }}\n        </a>\n      </ng-template>\n    </bb-dropdown-menu-ui>\n  </div>\n  <div class=\"col-sm-6 bb-block bb-block--md\">\n    <h4>Icon medium button</h4>\n    <bb-dropdown-menu-ui\n      [options]=\"dropdownMenuOptions\"\n      icon=\"ellipsis-h\"\n      [btnCircle]=\"true\"\n      container=\"body\"\n      ariaLabel=\"dropdown with no label\"\n      iconSize=\"lg\"\n      (select)=\"onButtonDropdownSelect($event)\"\n    >\n    </bb-dropdown-menu-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$d.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i1__namespace$d.DropdownLabelDirective, selector: "ng-template[bbDropdownLabel]" }, { type: i1__namespace$d.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$d.DropdownMenuFullWidthDirective, selector: "[bbDropdownToggleFullWidth]", inputs: ["bbDropdownToggleFullWidth"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    DropdownMenuShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], DropdownMenuShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMenuShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-dropdown-menu-ui-showcase',
                        templateUrl: './dropdown-menu-showcase.component.html',
                    }]
            }] });

    var DropdownMenuShowcaseModule = /** @class */ (function () {
        function DropdownMenuShowcaseModule() {
        }
        return DropdownMenuShowcaseModule;
    }());
    DropdownMenuShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMenuShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    DropdownMenuShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMenuShowcaseModule, declarations: [DropdownMenuShowcaseComponent], imports: [i4$1.CommonModule, i1$d.DropdownMenuModule, i2$9.IconModule, i2$2.ButtonModule] });
    DropdownMenuShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMenuShowcaseModule, imports: [[i4$1.CommonModule, i1$d.DropdownMenuModule, i2$9.IconModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMenuShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$d.DropdownMenuModule, i2$9.IconModule, i2$2.ButtonModule],
                        declarations: [DropdownMenuShowcaseComponent],
                        entryComponents: [DropdownMenuShowcaseComponent],
                    }]
            }] });

    var DropdownMultiSelectShowcaseComponent = /** @class */ (function () {
        function DropdownMultiSelectShowcaseComponent(fb) {
            this.fb = fb;
            this.flatListDropdownMultiSelect = new i1$N.FormControl('');
            this.parentChildDropdownMultiSelect = new i1$N.FormControl('');
            this.disabledDropdownMultiSelect = new i1$N.FormControl('');
            this.options = [
                { value: 'one', label: 'One' },
                { value: 'two', label: 'Two' },
                { value: 'three', label: 'Three' },
                { value: 'four', label: 'Four' },
                { value: 'five', label: 'Five' },
                { value: 'eleven', label: 'Eleven' },
            ];
            this.parentChildOptions = [];
            this.form = this.fb.group({
                categories: new i1$N.FormControl(),
            });
        }
        DropdownMultiSelectShowcaseComponent.prototype.resetForm = function () {
            this.form.reset();
        };
        return DropdownMultiSelectShowcaseComponent;
    }());
    DropdownMultiSelectShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMultiSelectShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    DropdownMultiSelectShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownMultiSelectShowcaseComponent, selector: "bb-dropdown-multi-select-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <h4>Default usage</h4>\n  <p>\n    <small\n      >Aria-labelledby used with the header bellow. Screen readers should read out both the placeholder and the content\n      of the header bellow</small\n    >\n  </p>\n  <h5 id=\"D231FE2E-A39B-4EE3-9937-751C955C4D2C\">Select a number</h5>\n  <bb-dropdown-multi-select-ui\n    [aria-labelledby]=\"'D231FE2E-A39B-4EE3-9937-751C955C4D2C'\"\n    [attr.data-role]=\"'dropdown-default'\"\n    [placeholder]=\"'No numbers selected'\"\n    [filtering]=\"true\"\n    [required]=\"true\"\n  >\n    <bb-dropdown-multi-select-option-ui *ngFor=\"let option of options\" [label]=\"option.label\" [value]=\"option.value\">\n    </bb-dropdown-multi-select-option-ui>\n  </bb-dropdown-multi-select-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h4>Default usage with inline listbox header</h4>\n  <p>\n    <small\n      >Aria-labelledby used with the header bellow. Screen readers should read out both the placeholder and the content\n      of the header bellow.</small\n    >\n  </p>\n  <p>\n    <small>\n      Additional inline header provided for the inner listbox. Screen readers should read out the inline header togheter\n      with the first selected item. Voice over will fail doing so, while NVDA behaves as expected.\n    </small>\n  </p>\n  <h5 id=\"D231FE2E-A39B-4EE3-9937-751C955C4D2D\">Select another number</h5>\n  <bb-dropdown-multi-select-ui\n    [aria-labelledby]=\"'D231FE2E-A39B-4EE3-9937-751C955C4D2D'\"\n    [dropdownHeaderText]=\"'Ordered numbers'\"\n  >\n    <bb-dropdown-multi-select-option-ui *ngFor=\"let option of options\" [label]=\"option.label\" [value]=\"option.value\">\n    </bb-dropdown-multi-select-option-ui>\n  </bb-dropdown-multi-select-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"D231FE2E-A39B-4EE3-9937-751C955C4D2DD\">Using embed label</h4>\n  <p>\n    <small\n      >Label content is used in order to indicate information about the control. Screen readers should read out both the\n      placeholder and the label bellow.</small\n    >\n  </p>\n  <bb-dropdown-multi-select-ui [label]=\"'Select another number'\" [placeholder]=\"''\">\n    <bb-dropdown-multi-select-option-ui *ngFor=\"let option of options\" [label]=\"option.label\" [value]=\"option.value\">\n    </bb-dropdown-multi-select-option-ui>\n  </bb-dropdown-multi-select-ui>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"B4DD9EEF-2963-47A9-B2F0-374BC217DA9E\">Disabled control</h4>\n  <bb-dropdown-multi-select-ui\n    [aria-labelledby]=\"'B4DD9EEF-2963-47A9-B2F0-374BC217DA9E'\"\n    [formControl]=\"disabledDropdownMultiSelect\"\n    [disabled]=\"true\"\n    [attr.data-role]=\"'dropdown-disabled'\"\n  >\n  </bb-dropdown-multi-select-ui>\n</div>\n\n<div [formGroup]=\"form\">\n  <h4>Using reactive form control</h4>\n  <div class=\"bb-block bb-block--lg\">\n    <bb-dropdown-multi-select-ui\n      formControlName=\"categories\"\n      [required]=\"true\"\n      data-role=\"categories-filter\"\n      placeholder=\"\u2013 select a category \u2013\"\n      label=\"Category\"\n    >\n      <bb-dropdown-multi-select-option-ui *ngFor=\"let option of options\" [label]=\"option.label\" [value]=\"option.value\">\n      </bb-dropdown-multi-select-option-ui>\n    </bb-dropdown-multi-select-ui>\n  </div>\n  <div class=\"bb-button-bar\">\n    <button bbButton (click)=\"resetForm()\" class=\"bb-button-bar__button\">reset form</button>\n  </div>\n</div>\n", components: [{ type: i2__namespace$o.DropdownMultiSelectComponent, selector: "bb-dropdown-multi-select-ui", inputs: ["dropdownHeaderText", "placeholder", "label", "filtering", "readonly"] }, { type: i2__namespace$o.DropdownMultiSelectOptionComponent, selector: "bb-dropdown-multi-select-option-ui", inputs: ["id", "value", "label", "state"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    DropdownMultiSelectShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], DropdownMultiSelectShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMultiSelectShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-dropdown-multi-select-ui-showcase',
                        templateUrl: 'dropdown-multi-select-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var DropdownMultiSelectShowcaseModule = /** @class */ (function () {
        function DropdownMultiSelectShowcaseModule() {
        }
        return DropdownMultiSelectShowcaseModule;
    }());
    DropdownMultiSelectShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMultiSelectShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    DropdownMultiSelectShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMultiSelectShowcaseModule, declarations: [DropdownMultiSelectShowcaseComponent], imports: [i4$1.CommonModule, i2$5.DropdownMultiSelectModule, i1$N.ReactiveFormsModule, i2$2.ButtonModule] });
    DropdownMultiSelectShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMultiSelectShowcaseModule, imports: [[i4$1.CommonModule, i2$5.DropdownMultiSelectModule, i1$N.ReactiveFormsModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownMultiSelectShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$5.DropdownMultiSelectModule, i1$N.ReactiveFormsModule, i2$2.ButtonModule],
                        declarations: [DropdownMultiSelectShowcaseComponent],
                        entryComponents: [DropdownMultiSelectShowcaseComponent],
                    }]
            }] });

    var DropdownPanelShowcaseComponent = /** @class */ (function () {
        function DropdownPanelShowcaseComponent() {
        }
        return DropdownPanelShowcaseComponent;
    }());
    DropdownPanelShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownPanelShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    DropdownPanelShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownPanelShowcaseComponent, selector: "bb-dropdown-panel-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--md\">\n  <bb-dropdown-panel-ui>\n    <ng-template bbDropdownToggle> Toggle without arrow </ng-template>\n    <ng-template bbDropdownMenu>\n      <div class=\"card\">\n        <div class=\"card-body\">Custom content</div>\n      </div>\n    </ng-template>\n  </bb-dropdown-panel-ui>\n</div>\n<bb-dropdown-panel-ui>\n  <ng-template bbDropdownToggle let-isOpen=\"isOpen\">\n    <div class=\"bb-stack\">\n      <span class=\"bb-stack__item\">Toggle with arrow</span>\n      <bb-icon-ui class=\"bb-stack__item--push-right\" [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"></bb-icon-ui>\n    </div>\n  </ng-template>\n  <ng-template bbDropdownMenu>\n    <div class=\"card\">\n      <div class=\"card-body\">Custom content</div>\n    </div>\n  </ng-template>\n</bb-dropdown-panel-ui>\n", components: [{ type: i1__namespace$K.DropdownPanelComponent, selector: "bb-dropdown-panel-ui", outputs: ["open"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i1__namespace$K.DropdownToggleDirective, selector: "ng-template[bbDropdownToggle]" }, { type: i1__namespace$K.DropdownMenuDirective, selector: "ng-template[bbDropdownMenu]" }] });
    DropdownPanelShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], DropdownPanelShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownPanelShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-dropdown-panel-ui-showcase',
                        templateUrl: './dropdown-panel-showcase.component.html',
                    }]
            }] });

    var DropdownPanelShowcaseModule = /** @class */ (function () {
        function DropdownPanelShowcaseModule() {
        }
        return DropdownPanelShowcaseModule;
    }());
    DropdownPanelShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownPanelShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    DropdownPanelShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownPanelShowcaseModule, declarations: [DropdownPanelShowcaseComponent], imports: [i4$1.CommonModule, i1$e.DropdownPanelModule, i2$9.IconModule] });
    DropdownPanelShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownPanelShowcaseModule, imports: [[i4$1.CommonModule, i1$e.DropdownPanelModule, i2$9.IconModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownPanelShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$e.DropdownPanelModule, i2$9.IconModule],
                        declarations: [DropdownPanelShowcaseComponent],
                        entryComponents: [DropdownPanelShowcaseComponent],
                    }]
            }] });

    var frequencies = [
        {
            value: 'ONCE',
            every: 1,
        },
        {
            value: 'DAILY',
            every: 1,
        },
        {
            value: 'WEEKLY',
            every: 1,
        },
        {
            value: 'BIWEEKLY',
            every: 1,
        },
        {
            value: 'MONTHLY',
            every: 1,
        },
        {
            value: 'QUARTERLY',
            every: 1,
        },
        {
            value: 'YEARLY',
            every: 1,
        },
    ];
    var DropdownSingleSelectShowcaseComponent = /** @class */ (function () {
        function DropdownSingleSelectShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.stringDropdownOptions = ['Option One', 'Option Two', 'Option Three'];
            this.objectDropdownOptions = [{ title: 'Option One' }, { title: 'Option Two' }, { title: 'Option Three' }];
            this.frequencies = frequencies;
            this.modelDropdownOptions = [
                { model: { displayNames: ['Selection A'], value: 'A' } },
                { model: { displayNames: ['Selection B'], value: 'B' } },
                { model: { displayNames: ['Selection C'], value: 'C' } },
            ];
            this.assetClassesOptions = [
                { name: 'Stock', id: 'stock' },
                { name: 'Bond', id: 'bonds' },
                { name: ' Liquid Assets', id: 'liquidassets' },
                { name: 'Real Estate', id: 'realestate' },
                { name: 'Cash', id: 'cash' },
            ];
            this.dropdownMenuOptions = [
                { name: 'google', url: 'https://google.com' },
                { name: 'twitter', url: 'https://twitter.com' },
                { name: 'facebook', url: 'https://www.facebook.com' },
            ];
            this.vForm = this.formBuilder.group({
                stringDropdownOptions: [this.stringDropdownOptions[0], i1$N.Validators.required],
                objectDropdownOptions: [this.objectDropdownOptions[0], i1$N.Validators.required],
                modelSingleSelect: [undefined, i1$N.Validators.required],
                customSingleSelect: undefined,
                frequency: [
                    {
                        value: 'ONCE',
                        every: 1,
                    },
                ],
                i18nSingleSelect: ['one'],
                modelSingleSelectDisabled: [{ value: this.modelDropdownOptions[0], disabled: true }, i1$N.Validators.required],
            });
        }
        DropdownSingleSelectShowcaseComponent.prototype.isFieldValid = function (fieldName) {
            var control = this.getControl(fieldName);
            if (control) {
                return control.valid || control.untouched;
            }
            return undefined;
        };
        DropdownSingleSelectShowcaseComponent.prototype.getControl = function (fieldName) {
            if (this.vForm) {
                return this.vForm.controls[fieldName];
            }
            return undefined;
        };
        DropdownSingleSelectShowcaseComponent.prototype.compareByValue = function (p1, p2) {
            if (!p1 || !p2)
                return;
            return p1.value === p2.value;
        };
        DropdownSingleSelectShowcaseComponent.prototype.hasRequiredError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.required;
        };
        return DropdownSingleSelectShowcaseComponent;
    }());
    DropdownSingleSelectShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownSingleSelectShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    DropdownSingleSelectShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: DropdownSingleSelectShowcaseComponent, selector: "bb-dropdown-single-select-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <div class=\"mb-3\">\n    <h4>Default with list of string as options</h4>\n    <bb-dropdown-single-select-ui\n      id=\"dropdownSingleSelect\"\n      [options]=\"stringDropdownOptions\"\n      formControlName=\"stringDropdownOptions\"\n      [required]=\"false\"\n      [attr.data-role]=\"'dropdown-single-select'\"\n    ></bb-dropdown-single-select-ui>\n  </div>\n\n  <div class=\"mb-3\">\n    <h4>Default with list of object as options</h4>\n    <bb-dropdown-single-select-ui\n      id=\"dropdownSingleSelectObject\"\n      [options]=\"objectDropdownOptions\"\n      displayAttributePath=\"title\"\n      formControlName=\"objectDropdownOptions\"\n      [required]=\"false\"\n      [attr.data-role]=\"'dropdown-single-select'\"\n    ></bb-dropdown-single-select-ui>\n  </div>\n\n  <div class=\"mb-3\">\n    <h4>With a label</h4>\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        id=\"dropdownSingleSelectWithLabel\"\n        label=\"Label\"\n        [options]=\"stringDropdownOptions\"\n        formControlName=\"stringDropdownOptions\"\n        [required]=\"false\"\n        [attr.data-role]=\"'dropdown-single-select-with-label'\"\n      ></bb-dropdown-single-select-ui>\n    </div>\n  </div>\n\n  <div class=\"mb-3\">\n    <h4>Translatable options</h4>\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        id=\"dropdownSingleSelectI18n\"\n        displayAttributePath=\"label\"\n        formControlName=\"i18nSingleSelect\"\n      >\n        <bb-dropdown-single-select-option-ui value=\"one\" label=\"Option One\"></bb-dropdown-single-select-option-ui>\n        <bb-dropdown-single-select-option-ui value=\"two\" label=\"Option Two\"></bb-dropdown-single-select-option-ui>\n      </bb-dropdown-single-select-ui>\n    </div>\n  </div>\n\n  <div class=\"mb-3\">\n    <h4>Validation error</h4>\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        id=\"dropdownSingleSelectFromModel\"\n        [options]=\"modelDropdownOptions\"\n        formControlName=\"modelSingleSelect\"\n        displayAttributePath=\"model.displayNames[0]\"\n        [required]=\"true\"\n        placeholder=\"- Select An Item -\"\n        [attr.data-role]=\"'dropdown-single-select-with-validation'\"\n      ></bb-dropdown-single-select-ui>\n      <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('modelSingleSelect')\">\n        <span *ngIf=\"hasRequiredError('modelSingleSelect')\"> Field is required. </span>\n      </bb-input-validation-message-ui>\n    </div>\n  </div>\n\n  <div class=\"mb-3\">\n    <h4>Disabled</h4>\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        id=\"dropdownSingleSelectDisabled\"\n        [options]=\"modelDropdownOptions\"\n        formControlName=\"modelSingleSelectDisabled\"\n        displayAttributePath=\"model.displayNames[0]\"\n        [required]=\"true\"\n      ></bb-dropdown-single-select-ui>\n    </div>\n  </div>\n\n  <div class=\"mb-3\">\n    <h4>With placeholder</h4>\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        id=\"dropdownSingleSelectPlaceholder\"\n        [options]=\"assetClassesOptions\"\n        placeholder=\"All\"\n        displayAttributePath=\"name\"\n        formControlName=\"customSingleSelect\"\n        [attr.data-role]=\"'dropdown-single-select-with-placeholder'\"\n      ></bb-dropdown-single-select-ui>\n    </div>\n  </div>\n\n  <div class=\"mb-3\">\n    <h4>With default option as placeholder</h4>\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        id=\"dropdownSingleSelectPlaceholderDefault\"\n        [options]=\"assetClassesOptions\"\n        [defaultOptionAsPlaceholder]=\"true\"\n        placeholder=\"All\"\n        displayAttributePath=\"name\"\n        formControlName=\"customSingleSelect\"\n      ></bb-dropdown-single-select-ui>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"form-group col-12 col-md-4 mb-4\">\n      <bb-dropdown-single-select-ui\n        [compareWithFn]=\"compareByValue\"\n        label=\"Frequency\"\n        displayAttributePath=\"value\"\n        formControlName=\"frequency\"\n        data-role=\"frequency-selector\"\n        ><bb-dropdown-single-select-option-ui\n          *ngFor=\"let frequency of frequencies\"\n          class=\"text-capitalize\"\n          [value]=\"frequency\"\n          [label]=\"frequency.value\"\n        ></bb-dropdown-single-select-option-ui>\n      </bb-dropdown-single-select-ui>\n    </div>\n  </div>\n</form>\n", components: [{ type: i2__namespace$2.DropdownSingleSelectComponent, selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i2__namespace$2.DropdownSingleSelectOptionComponent, selector: "bb-dropdown-single-select-option-ui", inputs: ["value", "label"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    DropdownSingleSelectShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], DropdownSingleSelectShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownSingleSelectShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-dropdown-single-select-ui-showcase',
                        templateUrl: './dropdown-single-select-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var DropdownSingleSelectShowcaseModule = /** @class */ (function () {
        function DropdownSingleSelectShowcaseModule() {
        }
        return DropdownSingleSelectShowcaseModule;
    }());
    DropdownSingleSelectShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownSingleSelectShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    DropdownSingleSelectShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownSingleSelectShowcaseModule, declarations: [DropdownSingleSelectShowcaseComponent], imports: [i4$1.CommonModule, i2$6.DropdownSingleSelectModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule] });
    DropdownSingleSelectShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownSingleSelectShowcaseModule, imports: [[i4$1.CommonModule, i2$6.DropdownSingleSelectModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DropdownSingleSelectShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$6.DropdownSingleSelectModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule],
                        declarations: [DropdownSingleSelectShowcaseComponent],
                        entryComponents: [DropdownSingleSelectShowcaseComponent],
                    }]
            }] });

    var EllipsisShowcaseComponent = /** @class */ (function () {
        function EllipsisShowcaseComponent() {
            this.hostRef = this;
            this.isMessageTruncated = false;
            this.textToEllipse = 'Lorem ipsum dolor sit amet.';
        }
        EllipsisShowcaseComponent.prototype.setIsContentTruncated = function (isMessageTruncated) {
            this.isMessageTruncated = isMessageTruncated;
        };
        return EllipsisShowcaseComponent;
    }());
    EllipsisShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EllipsisShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    EllipsisShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: EllipsisShowcaseComponent, selector: "bb-ellipsis-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <h2>Max width 100px:</h2>\n  <div [style.width.px]=\"100\">\n    <bb-ellipsis-ui [text]=\"textToEllipse\"></bb-ellipsis-ui>\n  </div>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Max width 200px:</h2>\n  <div [style.width.px]=\"200\">\n    <bb-ellipsis-ui [text]=\"textToEllipse\" [tooltipTriggers]=\"'hover'\"></bb-ellipsis-ui>\n  </div>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Line clamp (Truncating Multiple Line Text)</h2>\n  <div [style.width.px]=\"200\">\n    <bb-ellipsis-ui\n      [text]=\"\n        'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aperiam eligendi iusto aliquid quaerat maxime totam, tenetur unde aut illum minus?'\n      \"\n      [tooltipTriggers]=\"''\"\n      [lineClamp]=\"3\"\n    ></bb-ellipsis-ui>\n  </div>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Custom html template via ng-content</h2>\n  <div [style.width.px]=\"200\">\n    <bb-ellipsis-ui [lineClamp]=\"3\">\n      <span\n        >Lorem <a href=\"#\">ipsum</a> dolor, sit amet <strong>consectetur adipisicing elit.</strong> Perspiciatis nam\n        <strong>otam, vel accusantium aspernatu</strong> quisquam vero cupiditate architecto laudantium molestias.</span\n      >\n    </bb-ellipsis-ui>\n  </div>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Checking content truncation</h2>\n  <div [style.width.px]=\"200\">\n    <bb-ellipsis-ui [lineClamp]=\"2\">\n      <div bbIsContentTruncated [hostRef]=\"hostRef\">\n        <span\n          >Lorem <a href=\"#\">ipsum</a> dolor, sit amet <strong>consectetur adipisicing elit.</strong> Perspiciatis nam\n          <strong>otam, vel accusantium aspernatu</strong> quisquam vero cupiditate architecto laudantium\n          molestias.</span\n        >\n      </div>\n    </bb-ellipsis-ui>\n  </div>\n  <button *ngIf=\"isMessageTruncated\" class=\"btn-link-text bb-text-bold\">See more</button>\n</div>\n", components: [{ type: i1__namespace$e.EllipsisComponent, selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }], directives: [{ type: i1__namespace$e.IsContentTruncatedDirective, selector: "[bbIsContentTruncated]", inputs: ["hostRef"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    EllipsisShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], EllipsisShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EllipsisShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-ellipsis-ui-showcase',
                        templateUrl: 'ellipsis-showcase.component.html',
                    }]
            }] });

    var EllipsisShowcaseModule = /** @class */ (function () {
        function EllipsisShowcaseModule() {
        }
        return EllipsisShowcaseModule;
    }());
    EllipsisShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EllipsisShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    EllipsisShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EllipsisShowcaseModule, declarations: [EllipsisShowcaseComponent], imports: [i4$1.CommonModule, i1$f.EllipsisModule] });
    EllipsisShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EllipsisShowcaseModule, imports: [[i4$1.CommonModule, i1$f.EllipsisModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EllipsisShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$f.EllipsisModule],
                        declarations: [EllipsisShowcaseComponent],
                        entryComponents: [EllipsisShowcaseComponent],
                    }]
            }] });

    var EmptyStateShowcaseComponent = /** @class */ (function () {
        function EmptyStateShowcaseComponent() {
        }
        return EmptyStateShowcaseComponent;
    }());
    EmptyStateShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EmptyStateShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    EmptyStateShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: EmptyStateShowcaseComponent, selector: "bb-empty-state-ui-showcase", ngImport: i0__namespace, template: "<div class=\"mb-3\">\n  <h4>Default</h4>\n  <bb-empty-state-ui\n    title=\"No Results Found\"\n    iconSize=\"xxl\"\n    iconModifier=\"search\"\n    [attr.data-role]=\"'empty-state-example-icon-title'\"\n  ></bb-empty-state-ui>\n</div>\n\n<div class=\"mb-3\">\n  <h4>Inside a card + state container</h4>\n  <div class=\"card shadow-sm\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        title=\"No Transactions\"\n        subtitle=\"You don't have any transactions to be displayed.\"\n        iconSize=\"xxl\"\n        iconModifier=\"transactions\"\n        [attr.data-role]=\"'empty-state-example-icon-title-subtitle'\"\n      ></bb-empty-state-ui>\n    </div>\n  </div>\n</div>\n\n<div class=\"mb-3\">\n  <h4>Inside a card + state container + button</h4>\n  <div class=\"card shadow-sm\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        title=\"Page couldn\u2019t load\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        iconSize=\"xxl\"\n        iconModifier=\"error-outline\"\n      >\n      </bb-empty-state-ui>\n      <div class=\"bb-state-container__footer\">\n        <button bbButton buttonSize=\"md\" [attr.data-role]=\"'btn-primary'\">Reload</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"mb-3\">\n  <h4>No icon</h4>\n  <bb-empty-state-ui\n    [showIcon]=\"false\"\n    title=\"No Results Found\"\n    [attr.data-role]=\"'empty-state-example-title'\"\n  ></bb-empty-state-ui>\n</div>\n", components: [{ type: i1__namespace$f.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    EmptyStateShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], EmptyStateShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EmptyStateShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-empty-state-ui-showcase',
                        templateUrl: 'empty-state-showcase.component.html',
                    }]
            }] });

    var EmptyStateShowcaseModule = /** @class */ (function () {
        function EmptyStateShowcaseModule() {
        }
        return EmptyStateShowcaseModule;
    }());
    EmptyStateShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EmptyStateShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    EmptyStateShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EmptyStateShowcaseModule, declarations: [EmptyStateShowcaseComponent], imports: [i4$1.CommonModule, i1$g.EmptyStateModule, i2$2.ButtonModule] });
    EmptyStateShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EmptyStateShowcaseModule, imports: [[i4$1.CommonModule, i1$g.EmptyStateModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: EmptyStateShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$g.EmptyStateModule, i2$2.ButtonModule],
                        declarations: [EmptyStateShowcaseComponent],
                        entryComponents: [EmptyStateShowcaseComponent],
                    }]
            }] });

    var FieldsetShowcaseComponent = /** @class */ (function () {
        function FieldsetShowcaseComponent() {
            this.currencies = ['USD', 'EUR'];
            this.group = new i1$N.FormGroup({
                password: new i1$N.FormControl(''),
                withDecimalControl: new i1$N.FormControl({
                    amount: undefined,
                    currency: 'USD',
                }),
            });
        }
        return FieldsetShowcaseComponent;
    }());
    FieldsetShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    FieldsetShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FieldsetShowcaseComponent, selector: "bb-fieldset-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <bb-fieldset-ui heading=\"Group of two inputs\">\n    <form [formGroup]=\"group\">\n      <div class=\"form-row\">\n        <div class=\"form-group col-4\">\n          <bb-input-password-ui\n            [label]=\"'Password Input'\"\n            [aria-labelledby]=\"'input-password-label'\"\n            formControlName=\"password\"\n            [showVisibilityControl]=\"true\"\n            [maxLength]=\"5\"\n            [required]=\"true\"\n          >\n          </bb-input-password-ui>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-4\">\n          <div class=\"bb-block--lg\">\n            <label for=\"currency-input-with-decimals-label\">Currency input</label>\n            <bb-currency-input-ui\n              [currencyLabel]=\"'Currency'\"\n              formControlName=\"withDecimalControl\"\n              [currencies]=\"currencies\"\n              [id]=\"'currency-input-with-decimals-label'\"\n              [currencyListAriaLabel]=\"'Currency'\"\n            >\n            </bb-currency-input-ui>\n          </div>\n        </div>\n      </div>\n    </form>\n  </bb-fieldset-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default</h4>\n  <bb-fieldset-ui heading=\"Fieldset heading\">\n    <div class=\"form-group\">\n      <label class=\"bb-label\" for=\"example-default\">\n        Label <span class=\"bb-label__annotation\">(optional text)</span>\n      </label>\n      <bb-input-text-ui [id]=\"'example-default'\" placeholder=\"Input\"></bb-input-text-ui>\n    </div>\n  </bb-fieldset-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Without a heading</h4>\n  <bb-fieldset-ui>\n    <div class=\"form-group\">\n      <label class=\"bb-label\" for=\"example-without-heading\">\n        Label <span class=\"bb-label__annotation\">(optional text)</span>\n      </label>\n      <bb-input-text-ui [id]=\"'example-without-heading'\" placeholder=\"Input\"></bb-input-text-ui>\n    </div>\n  </bb-fieldset-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Disabled</h4>\n  <bb-fieldset-ui [disabled]=\"true\" heading=\"Fieldset heading\">\n    <div class=\"form-group\">\n      <label class=\"bb-label\" for=\"example-disabled\">\n        Label <span class=\"bb-label__annotation\">(optional text)</span>\n      </label>\n      <bb-input-text-ui [id]=\"'example-disabled'\" placeholder=\"Input\"></bb-input-text-ui>\n    </div>\n  </bb-fieldset-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Input width variations</h4>\n  <bb-fieldset-ui heading=\"Fieldset heading\">\n    <div class=\"form-row\">\n      <div class=\"form-group col-6\">\n        <bb-input-text-ui label=\"50%\" placeholder=\"Left\"></bb-input-text-ui>\n      </div>\n      <div class=\"form-group col-6\">\n        <bb-input-text-ui label=\"50%\" placeholder=\"Right\"></bb-input-text-ui>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-4\">\n        <bb-input-text-ui label=\"33%\" placeholder=\"Left\"></bb-input-text-ui>\n      </div>\n      <div class=\"form-group col-4\">\n        <bb-input-text-ui label=\"33%\" placeholder=\"Middle\"></bb-input-text-ui>\n      </div>\n      <div class=\"form-group col-4\">\n        <bb-input-text-ui label=\"33%\" placeholder=\"Right\"></bb-input-text-ui>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-4\">\n        <bb-input-text-ui label=\"33%\" placeholder=\"Left\"></bb-input-text-ui>\n      </div>\n      <div class=\"form-group col-8\">\n        <bb-input-text-ui label=\"66%\" placeholder=\"Right\"></bb-input-text-ui>\n      </div>\n    </div>\n\n    <div class=\"form-row\">\n      <div class=\"form-group col-8\">\n        <bb-input-text-ui label=\"66%\" placeholder=\"Left\"></bb-input-text-ui>\n      </div>\n      <div class=\"form-group col-4\">\n        <bb-input-text-ui label=\"33%\" placeholder=\"Right\"></bb-input-text-ui>\n      </div>\n    </div>\n  </bb-fieldset-ui>\n</div>\n", components: [{ type: i3__namespace$1.FieldsetComponent, selector: "bb-fieldset-ui", inputs: ["heading", "disabled"] }, { type: i2__namespace$l.InputPasswordComponent, selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i1__namespace$b.CurrencyInputComponent, selector: "bb-currency-input-ui", inputs: ["decMaxLen", "decMinLen", "placeholder", "resultType", "integer", "required", "readonly", "disabled", "integerLabelSrOnly", "decimalLabelSrOnly", "currencies", "isRightAligned", "integerId", "decimalId", "integerLabel", "decimalLabel", "currencyLabel", "allowNegativeValue", "currencyListAriaLabel", "currencyListWithOnItemAriaLabel", "aria-describedby", "aria-labelledby", "aria-invalid"], outputs: ["blur"] }, { type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    FieldsetShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], FieldsetShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-fieldset-ui-showcase',
                        templateUrl: './fieldset-showcase.component.html',
                    }]
            }], ctorParameters: function () { return []; } });

    var FieldsetShowcaseModule = /** @class */ (function () {
        function FieldsetShowcaseModule() {
        }
        return FieldsetShowcaseModule;
    }());
    FieldsetShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    FieldsetShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetShowcaseModule, declarations: [FieldsetShowcaseComponent], imports: [i4$1.CommonModule,
            i3$1.FieldsetModule,
            i1$N.ReactiveFormsModule,
            i2$g.InputPasswordModule,
            i1$b.CurrencyInputModule,
            i2$j.InputTextModule] });
    FieldsetShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetShowcaseModule, imports: [[
                i4$1.CommonModule,
                i3$1.FieldsetModule,
                i1$N.ReactiveFormsModule,
                i2$g.InputPasswordModule,
                i1$b.CurrencyInputModule,
                i2$j.InputTextModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4$1.CommonModule,
                            i3$1.FieldsetModule,
                            i1$N.ReactiveFormsModule,
                            i2$g.InputPasswordModule,
                            i1$b.CurrencyInputModule,
                            i2$j.InputTextModule,
                        ],
                        declarations: [FieldsetShowcaseComponent],
                        entryComponents: [FieldsetShowcaseComponent],
                    }]
            }] });

    var attachment = {
        name: 'examplePDF.pdf',
        deletable: false,
        disabled: false,
        size: 10000,
        loading: false,
        fileContent: rxjs.of(new ArrayBuffer(2000000)),
    };
    var FileAttachmentShowcaseComponent = /** @class */ (function () {
        function FileAttachmentShowcaseComponent() {
            this.defaultFileAttachmentsList = [
                attachment,
                Object.assign(Object.assign({}, attachment), { name: 'exampleXLS.xls' }),
                Object.assign(Object.assign({}, attachment), { name: 'exampleCSV.csv' }),
                Object.assign(Object.assign({}, attachment), { name: 'examplePNG.png' }),
                Object.assign(Object.assign({}, attachment), { name: 'exampleUnknown' }),
            ];
            this.deletableFileAttachmentsList = this.defaultFileAttachmentsList.map(function (defaultAttachment) { return (Object.assign(Object.assign({}, defaultAttachment), { deletable: true, disabled: true })); });
        }
        FileAttachmentShowcaseComponent.prototype.deleteAttachment = function (filesList, index) {
            filesList[index].loading = true;
            setTimeout(function () {
                filesList[index].loading = false;
                filesList.splice(index, 1);
            }, 1000);
        };
        return FileAttachmentShowcaseComponent;
    }());
    FileAttachmentShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FileAttachmentShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    FileAttachmentShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FileAttachmentShowcaseComponent, selector: "bb-file-attachment-ui-showcase", ngImport: i0__namespace, template: "<h4>Default downloadable file attachments</h4>\n<div class=\"row\">\n  <div class=\"col-auto\" *ngFor=\"let attachment of defaultFileAttachmentsList\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-file-attachment-ui\n        [name]=\"attachment.name\"\n        [size]=\"attachment.size\"\n        [loading]=\"attachment.loading\"\n        [fileContent]=\"attachment.fileContent\"\n      ></bb-file-attachment-ui>\n    </div>\n  </div>\n</div>\n<br />\n<h4>Disabled file attachments</h4>\n<div class=\"row\">\n  <div class=\"col-auto\" *ngFor=\"let attachment of defaultFileAttachmentsList\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-file-attachment-ui disabled=\"true\" [name]=\"attachment.name\" [size]=\"attachment.size\"></bb-file-attachment-ui>\n    </div>\n  </div>\n</div>\n<br />\n<h4>Deletable file attachments with disabled download</h4>\n<div class=\"row\">\n  <div class=\"col-auto\" *ngFor=\"let attachment of deletableFileAttachmentsList; let i = index\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-file-attachment-ui\n        [name]=\"attachment.name\"\n        [deletable]=\"attachment.deletable\"\n        [disabled]=\"attachment.disabled\"\n        [size]=\"attachment.size\"\n        [loading]=\"attachment.loading\"\n        (delete)=\"deleteAttachment(deletableFileAttachmentsList, i)\"\n        [fileContent]=\"attachment.fileContent\"\n      ></bb-file-attachment-ui>\n    </div>\n  </div>\n</div>\n<br />\n<h4>File attachments that fill their container</h4>\n<div class=\"row\">\n  <div class=\"col-md-4\" *ngFor=\"let attachment of defaultFileAttachmentsList; let i = index\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-file-attachment-ui\n        [name]=\"attachment.name\"\n        [size]=\"attachment.size\"\n        [loading]=\"attachment.loading\"\n        [fileContent]=\"attachment.fileContent\"\n        [block]=\"true\"\n      ></bb-file-attachment-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$g.FileAttachmentComponent, selector: "bb-file-attachment-ui", inputs: ["name", "size", "fileContent", "loading", "deletable", "disabled", "block"], outputs: ["delete"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    FileAttachmentShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], FileAttachmentShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FileAttachmentShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-file-attachment-ui-showcase',
                        templateUrl: 'file-attachment-showcase.component.html',
                    }]
            }] });

    var uiModules$1 = [i2$2.ButtonModule, i2$9.IconModule, i3$3.KeyboardClickModule, i1$n.LoadingIndicatorModule];
    var FileAttachmentShowcaseModule = /** @class */ (function () {
        function FileAttachmentShowcaseModule() {
        }
        return FileAttachmentShowcaseModule;
    }());
    FileAttachmentShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FileAttachmentShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    FileAttachmentShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FileAttachmentShowcaseModule, declarations: [FileAttachmentShowcaseComponent], imports: [i4$1.CommonModule, i1$h.FileAttachmentModule, i2$2.ButtonModule, i2$9.IconModule, i3$3.KeyboardClickModule, i1$n.LoadingIndicatorModule] });
    FileAttachmentShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FileAttachmentShowcaseModule, imports: [[i4$1.CommonModule, i1$h.FileAttachmentModule, uiModules$1]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FileAttachmentShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$h.FileAttachmentModule, uiModules$1],
                        declarations: [FileAttachmentShowcaseComponent],
                        entryComponents: [FileAttachmentShowcaseComponent],
                    }]
            }] });

    var FocusShowcaseComponent = /** @class */ (function () {
        function FocusShowcaseComponent() {
        }
        return FocusShowcaseComponent;
    }());
    FocusShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FocusShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    FocusShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FocusShowcaseComponent, selector: "bb-focus-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Automatically setting focus</h4>\n  <p>Are you sure you want to delete something?</p>\n  <div class=\"bb-stack\">\n    <div class=\"bb-stack__item\">\n      <button bbButton bbFocus>Cancel</button>\n    </div>\n    <button bbButton>OK</button>\n  </div>\n</div>\n\n<div clsas=\"bb-block bb-block--xl\">\n  <h4>Manually setting focus</h4>\n  <div class=\"bb-stack\">\n    <div class=\"bb-stack__item\">\n      <button bbButton [bbFocus]=\"\" #focusThis=\"bbFocus\">Button with bbFocus</button>\n    </div>\n    <button bbButton (click)=\"focusThis.focus()\">Click to focus the other button</button>\n  </div>\n</div>\n", directives: [{ type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i2__namespace$r.FocusDirective, selector: "[bbFocus]", inputs: ["bbFocus"], exportAs: ["bbFocus"] }] });
    FocusShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], FocusShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FocusShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-focus-ui-showcase',
                        templateUrl: './focus-showcase.component.html',
                    }]
            }] });

    var FocusShowcaseModule = /** @class */ (function () {
        function FocusShowcaseModule() {
        }
        return FocusShowcaseModule;
    }());
    FocusShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FocusShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    FocusShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FocusShowcaseModule, declarations: [FocusShowcaseComponent], imports: [i4$1.CommonModule, i2$7.FocusModule, i2$2.ButtonModule] });
    FocusShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FocusShowcaseModule, imports: [[i4$1.CommonModule, i2$7.FocusModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FocusShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$7.FocusModule, i2$2.ButtonModule],
                        declarations: [FocusShowcaseComponent],
                        entryComponents: [FocusShowcaseComponent],
                    }]
            }] });

    var HeaderShowcaseComponent = /** @class */ (function () {
        function HeaderShowcaseComponent() {
        }
        return HeaderShowcaseComponent;
    }());
    HeaderShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HeaderShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    HeaderShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: HeaderShowcaseComponent, selector: "bb-header-ui-showcase", ngImport: i0__namespace, template: "<bb-header-ui headingType=\"h1\" heading=\"This is H1\"></bb-header-ui>\n<bb-header-ui headingType=\"h2\" heading=\"This is H2\"></bb-header-ui>\n<bb-header-ui headingType=\"h3\" heading=\"This is H3\"></bb-header-ui>\n", components: [{ type: i1__namespace$h.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }] });
    HeaderShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], HeaderShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HeaderShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-header-ui-showcase',
                        templateUrl: './header-showcase.component.html',
                    }]
            }] });

    var HeaderShowcaseModule = /** @class */ (function () {
        function HeaderShowcaseModule() {
        }
        return HeaderShowcaseModule;
    }());
    HeaderShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HeaderShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    HeaderShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HeaderShowcaseModule, declarations: [HeaderShowcaseComponent], imports: [i4$1.CommonModule, i1$i.HeaderModule] });
    HeaderShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HeaderShowcaseModule, imports: [[i4$1.CommonModule, i1$i.HeaderModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HeaderShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$i.HeaderModule],
                        declarations: [HeaderShowcaseComponent],
                        entryComponents: [HeaderShowcaseComponent],
                    }]
            }] });

    var HighlightShowcaseComponent = /** @class */ (function () {
        function HighlightShowcaseComponent() {
        }
        return HighlightShowcaseComponent;
    }());
    HighlightShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    HighlightShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: HighlightShowcaseComponent, selector: "bb-highlight-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default</h4>\n  <bb-amount-ui [amount]=\"12345.47\" bbHighlight></bb-amount-ui>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Highlight with positive and negative</h4>\n  <bb-amount-ui\n    [amount]=\"12345.47\"\n    positiveClass=\"bb-amount--positive\"\n    negativeClass=\"bb-amount--negative\"\n    bbHighlight\n  ></bb-amount-ui>\n  <br />\n  <bb-amount-ui\n    [amount]=\"-12345.47\"\n    positiveClass=\"bb-amount--positive\"\n    negativeClass=\"bb-amount--negative\"\n    bbHighlight\n  ></bb-amount-ui>\n</div>\n<div>\n  <h4>Highlight off</h4>\n  <bb-amount-ui [amount]=\"12345.47\" [bbHighlight]=\"false\"></bb-amount-ui>\n</div>\n", components: [{ type: i1__namespace$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i2__namespace$n.HighlightDirective, selector: "[bbHighlight]", inputs: ["amount", "bbHighlight", "negativeClass", "positiveClass"] }] });
    HighlightShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], HighlightShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-highlight-ui-showcase',
                        templateUrl: './highlight-showcase.component.html',
                    }]
            }] });

    var HighlightShowcaseModule = /** @class */ (function () {
        function HighlightShowcaseModule() {
        }
        return HighlightShowcaseModule;
    }());
    HighlightShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    HighlightShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightShowcaseModule, declarations: [HighlightShowcaseComponent], imports: [i4$1.CommonModule, i2$8.HighlightModule, i1$3.AmountModule] });
    HighlightShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightShowcaseModule, imports: [[i4$1.CommonModule, i2$8.HighlightModule, i1$3.AmountModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$8.HighlightModule, i1$3.AmountModule],
                        declarations: [HighlightShowcaseComponent],
                        entryComponents: [HighlightShowcaseComponent],
                    }]
            }] });

    var IbanPipeShowcaseComponent = /** @class */ (function () {
        function IbanPipeShowcaseComponent() {
            this.iban = 'NL81TRIO0212471066';
        }
        return IbanPipeShowcaseComponent;
    }());
    IbanPipeShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IbanPipeShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    IbanPipeShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: IbanPipeShowcaseComponent, selector: "bb-iban-pipe-ui-showcase", ngImport: i0__namespace, template: "<div><strong>IBAN number formated:</strong> {{ iban | bbIban }}</div>\n", pipes: { "bbIban": i1__namespace$D.BbIbanPipe } });
    IbanPipeShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], IbanPipeShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IbanPipeShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-iban-pipe-ui-showcase',
                        templateUrl: './iban-pipe-showcase.component.html',
                    }]
            }] });

    var IbanPipeShowcaseModule = /** @class */ (function () {
        function IbanPipeShowcaseModule() {
        }
        return IbanPipeShowcaseModule;
    }());
    IbanPipeShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IbanPipeShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    IbanPipeShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IbanPipeShowcaseModule, declarations: [IbanPipeShowcaseComponent], imports: [i4$1.CommonModule, i1$j.BbIbanPipeModule] });
    IbanPipeShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IbanPipeShowcaseModule, imports: [[i4$1.CommonModule, i1$j.BbIbanPipeModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IbanPipeShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$j.BbIbanPipeModule],
                        declarations: [IbanPipeShowcaseComponent],
                        entryComponents: [IbanPipeShowcaseComponent],
                    }]
            }] });

    var IconShowcaseComponent = /** @class */ (function () {
        function IconShowcaseComponent() {
        }
        return IconShowcaseComponent;
    }());
    IconShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IconShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    IconShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: IconShowcaseComponent, selector: "bb-icon-ui-showcase", ngImport: i0__namespace, template: "<h4>Icon sizes and colors</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui\n    name=\"search\"\n    class=\"bb-stack__item--fill\"\n    size=\"sm\"\n    color=\"primary\"\n    aria-label=\"Search icon\"\n    [attr.data-role]=\"'search-sm-primary'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    name=\"search\"\n    class=\"bb-stack__item--fill\"\n    size=\"md\"\n    color=\"danger\"\n    [attr.data-role]=\"'search-md-danger'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    name=\"search\"\n    class=\"bb-stack__item--fill\"\n    size=\"lg\"\n    color=\"warning\"\n    [attr.data-role]=\"'search-lg-warning'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    name=\"search\"\n    class=\"bb-stack__item--fill\"\n    size=\"xl\"\n    color=\"info\"\n    [attr.data-role]=\"'search-xl-info'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    name=\"search\"\n    class=\"bb-stack__item--fill\"\n    size=\"xxl\"\n    color=\"success\"\n    [attr.data-role]=\"'search-xxl-success'\"\n  ></bb-icon-ui>\n</div>\n<h4>Icons - Background Circle (Theme 1.0 only)</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"directions-car\"\n    size=\"md\"\n    [backgroundType]=\"'circle'\"\n    [attr.data-role]=\"'directions-car-md-circle-v1'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"local-play\"\n    size=\"md\"\n    color=\"info\"\n    [backgroundType]=\"'circle'\"\n    [attr.data-role]=\"'local-play-md-circle-v1'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"favorite\"\n    size=\"md\"\n    color=\"danger\"\n    [backgroundType]=\"'circle'\"\n    [attr.data-role]=\"'favorite-md-circle-v1'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"shopping-cart\"\n    size=\"md\"\n    color=\"success\"\n    [backgroundType]=\"'circle'\"\n    [attr.data-role]=\"'shopping-cart-md-circle-v1'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"assignment-returned\"\n    size=\"md\"\n    color=\"warning\"\n    [backgroundType]=\"'circle'\"\n    [attr.data-role]=\"'assignment-returned-md-circle-v1'\"\n  ></bb-icon-ui>\n</div>\n<h4>Icons - Background Circle (Theme 2.0 only)</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"directions-car\"\n    size=\"sm\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'directions-car-sm-background-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"local-play\"\n    size=\"md\"\n    color=\"info\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'local-play-md-background-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"favorite\"\n    size=\"lg\"\n    color=\"danger\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'favorite-lg-background-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"shopping-cart\"\n    size=\"xl\"\n    color=\"success\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'shopping-cart-xl-background-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"assignment-returned\"\n    size=\"xxl\"\n    color=\"warning\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'assignment-returned-xxl-background-circle'\"\n  ></bb-icon-ui>\n</div>\n<h4>Icons - Background Square (Theme 2.0 only)</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"directions-car\"\n    size=\"sm\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'directions-car-sm-background-square'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"local-play\"\n    size=\"md\"\n    color=\"info\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'local-play-md-background-square'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"favorite\"\n    size=\"lg\"\n    color=\"danger\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'favorite-lg-background-square'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"shopping-cart\"\n    size=\"xl\"\n    color=\"success\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'shopping-cart-xl-background-square'\"\n  >\n  </bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    name=\"assignment-returned\"\n    size=\"xxl\"\n    color=\"warning\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'assignment-returned-xxl-background-square'\"\n  >\n  </bb-icon-ui>\n</div>\n<h4>Icons - Categories</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    size=\"md\"\n    name=\"category-home\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'category-home-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    size=\"md\"\n    name=\"category-transfers\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'category-transfers-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    size=\"md\"\n    name=\"category-interest-income\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'category-interest-income-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    size=\"md\"\n    name=\"category-beauty\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'category-beauty-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    size=\"md\"\n    name=\"category-restaurants\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'category-restaurants-circle'\"\n  ></bb-icon-ui>\n</div>\n<h4>Icons - Product Kinds</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui\n    size=\"md\"\n    class=\"bb-stack__item--fill\"\n    name=\"savings-accounts\"\n    color=\"savings-account\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'product-kind-savings-accounts-square'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    size=\"md\"\n    class=\"bb-stack__item--fill\"\n    name=\"investment-accounts\"\n    color=\"investment-account\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'product-kind-investment-accounts-square'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    size=\"md\"\n    class=\"bb-stack__item--fill\"\n    name=\"current-accounts\"\n    color=\"current-account\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'product-kind-current-accounts-square'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    size=\"md\"\n    name=\"credit-cards\"\n    color=\"credit-card\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'product-kind-credit-cards-square'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    size=\"md\"\n    name=\"loans\"\n    color=\"loan\"\n    backgroundType=\"square\"\n    [attr.data-role]=\"'product-kind-loans-square'\"\n  ></bb-icon-ui>\n</div>\n<h4>Icons - Inverse Product Kinds</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    [inverse]=\"true\"\n    size=\"md\"\n    name=\"savings-accounts\"\n    color=\"savings-account\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'product-kind-savings-accounts-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    [inverse]=\"true\"\n    size=\"md\"\n    name=\"investment-accounts\"\n    color=\"investment-account\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'product-kind-investment-accounts-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    [inverse]=\"true\"\n    size=\"md\"\n    name=\"current-accounts\"\n    color=\"current-account\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'product-kind-current-accounts-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    [inverse]=\"true\"\n    size=\"md\"\n    name=\"credit-cards\"\n    color=\"credit-card\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'product-kind-credit-cards-circle'\"\n  ></bb-icon-ui>\n  <bb-icon-ui\n    class=\"bb-stack__item--fill\"\n    [inverse]=\"true\"\n    size=\"md\"\n    name=\"loans\"\n    color=\"loan\"\n    backgroundType=\"circle\"\n    [attr.data-role]=\"'product-kind-loans-circle'\"\n  ></bb-icon-ui>\n</div>\n<h4>Icons - Files</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui name=\"file-bb-sepa\" size=\"lg\" class=\"bb-stack__item--fill\" [attr.data-role]=\"'file-bb-sepa'\"></bb-icon-ui>\n  <bb-icon-ui name=\"file-xls\" size=\"lg\" class=\"bb-stack__item--fill\" [attr.data-role]=\"'file-xls'\"></bb-icon-ui>\n  <bb-icon-ui name=\"file-csv\" size=\"lg\" class=\"bb-stack__item--fill\" [attr.data-role]=\"'file-csv'\"></bb-icon-ui>\n  <bb-icon-ui name=\"file-blk\" size=\"lg\" class=\"bb-stack__item--fill\" [attr.data-role]=\"'file-blk'\"></bb-icon-ui>\n  <bb-icon-ui name=\"file-mts\" size=\"lg\" class=\"bb-stack__item--fill\" [attr.data-role]=\"'file-mts'\"></bb-icon-ui>\n</div>\n<h4>Icons - Animated</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui name=\"cached\" size=\"lg\" [animate]=\"true\" class=\"bb-stack__item--fill\"></bb-icon-ui>\n</div>\n<h4>Outlined Icons</h4>\n<div class=\"bb-stack bb-block--lg\">\n  <bb-icon-ui name=\"warning-amber\" size=\"md\"></bb-icon-ui>\n</div>\n", components: [{ type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }] });
    IconShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], IconShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IconShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-icon-ui-showcase',
                        templateUrl: './icon-showcase.component.html',
                    }]
            }] });

    var IconShowcaseModule = /** @class */ (function () {
        function IconShowcaseModule() {
        }
        return IconShowcaseModule;
    }());
    IconShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IconShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    IconShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IconShowcaseModule, declarations: [IconShowcaseComponent], imports: [i4$1.CommonModule, i2$9.IconModule] });
    IconShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IconShowcaseModule, imports: [[i4$1.CommonModule, i2$9.IconModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: IconShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$9.IconModule],
                        declarations: [IconShowcaseComponent],
                        entryComponents: [IconShowcaseComponent],
                    }]
            }] });

    var InfiniteScrollShowcaseComponent = /** @class */ (function () {
        function InfiniteScrollShowcaseComponent() {
            this.items = [1, 2, 3, 4];
            this.complete = false;
            this.loading = false;
            this.page = 0;
        }
        InfiniteScrollShowcaseComponent.prototype.loadMore = function () {
            var _this = this;
            if (!this.loading) {
                this.loading = true;
                this.page = this.page + 1;
                window.setTimeout(function () {
                    _this.items = Array.from({ length: _this.page * 4 + 4 }).map(function (_, i) { return i + 1; });
                    _this.loading = false;
                    _this.complete = _this.page >= 4;
                }, 1000);
            }
        };
        return InfiniteScrollShowcaseComponent;
    }());
    InfiniteScrollShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InfiniteScrollShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    InfiniteScrollShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InfiniteScrollShowcaseComponent, selector: "bb-infinite-scroll-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <div class=\"card\">\n      <div class=\"bb-infinite-scroll-container card-body\">\n        <bb-infinite-scroll-ui\n          class=\"bb-infinite-scroll\"\n          (scrollEnd)=\"loadMore()\"\n          [disableScrollEnd]=\"complete || loading\"\n        >\n          <div\n            class=\"bb-list bb-subtitle bb-list--density-sm\"\n            [attr.aria-busy]=\"loading\"\n            [class.bb-list--infinite]=\"!complete\"\n          >\n            <div *ngFor=\"let item of items\" class=\"bb-list__item\">\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item\">Some kind of data:</div>\n                <bb-amount-ui\n                  [amount]=\"item\"\n                  [currency]=\"'USD'\"\n                  class=\"bb-stack__item bb-stack__item--push-right\"\n                ></bb-amount-ui>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"loading\" class=\"bb-block bb-block--md\">\n            <bb-loading-indicator-ui loaderSize=\"sm\"></bb-loading-indicator-ui>\n          </div>\n          <div *ngIf=\"complete\" class=\"bb-text-align-center\">All items loaded</div>\n        </bb-infinite-scroll-ui>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$F.InfiniteScrollComponent, selector: "bb-infinite-scroll-ui", inputs: ["offset", "debounce", "disableScrollEnd"], outputs: ["scrollEnd"] }, { type: i1__namespace$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i1__namespace$j.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    InfiniteScrollShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InfiniteScrollShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InfiniteScrollShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-infinite-scroll-ui-showcase',
                        templateUrl: './infinite-scroll-showcase.component.html',
                    }]
            }] });

    var InfiniteScrollShowcaseModule = /** @class */ (function () {
        function InfiniteScrollShowcaseModule() {
        }
        return InfiniteScrollShowcaseModule;
    }());
    InfiniteScrollShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InfiniteScrollShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InfiniteScrollShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InfiniteScrollShowcaseModule, declarations: [InfiniteScrollShowcaseComponent], imports: [i4$1.CommonModule, i1$k.InfiniteScrollModule, i1$n.LoadingIndicatorModule, i1$3.AmountModule] });
    InfiniteScrollShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InfiniteScrollShowcaseModule, imports: [[i4$1.CommonModule, i1$k.InfiniteScrollModule, i1$n.LoadingIndicatorModule, i1$3.AmountModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InfiniteScrollShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$k.InfiniteScrollModule, i1$n.LoadingIndicatorModule, i1$3.AmountModule],
                        declarations: [InfiniteScrollShowcaseComponent],
                        entryComponents: [InfiniteScrollShowcaseComponent],
                    }]
            }] });

    var InputCheckboxShowcaseComponent = /** @class */ (function () {
        function InputCheckboxShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                inputCheckbox: false,
                inputCheckbox2: false,
                inputCheckbox3: false,
                inputCheckbox4: false,
                inputCheckbox5: false,
                inputCheckbox6: false,
                inputCheckbox7: false,
                inputCheckboxDisabled: { value: false, disabled: true },
                inputCheckboxDisabledChecked: { value: true, disabled: true },
                inputCheckboxError: ['', i1$N.Validators.requiredTrue],
                inputCheckboxIndeterminate: { value: true },
            });
        }
        InputCheckboxShowcaseComponent.prototype.isFieldValid = function (fieldName) {
            if (this.vForm) {
                var control = this.vForm.controls[fieldName];
                return control && control.valid;
            }
            return false;
        };
        InputCheckboxShowcaseComponent.prototype.ngOnInit = function () {
            if (this.vForm) {
                var control = this.vForm.get('inputCheckboxError');
                if (control) {
                    control.markAsTouched();
                }
            }
        };
        return InputCheckboxShowcaseComponent;
    }());
    InputCheckboxShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputCheckboxShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputCheckboxShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputCheckboxShowcaseComponent, selector: "bb-input-checkbox-ui-showcase", ngImport: i0__namespace, template: "<div click=\"update()\">Click</div>\n\n<form [formGroup]=\"vForm\">\n  <div class=\"bb-block bb-block--lg\">\n    <h4>List of vertically stacked checkboxes</h4>\n    <bb-input-checkbox-ui\n      #inputCheckbox\n      [id]=\"'inputCheckbox'\"\n      data-role=\"checkbox-default\"\n      formControlName=\"inputCheckbox\"\n      label=\"I accept the Terms of Service\"\n      class=\"bb-block bb-block--sm\"\n    ></bb-input-checkbox-ui>\n    <bb-input-checkbox-ui\n      #inputCheckbox2\n      [id]=\"'inputCheckbox2'\"\n      data-role=\"checkbox-default-2\"\n      formControlName=\"inputCheckbox2\"\n      label=\"I accept the Terms of Conditions\"\n    ></bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>List of horizontally stacked checkboxes</h4>\n    <div class=\"bb-stack\">\n      <bb-input-checkbox-ui\n        #inputCheckbox3\n        [id]=\"'inputCheckbox3'\"\n        data-role=\"checkbox-default-3\"\n        formControlName=\"inputCheckbox3\"\n        label=\"I accept the Terms of Service\"\n        class=\"bb-stack__item\"\n      ></bb-input-checkbox-ui>\n      <bb-input-checkbox-ui\n        #inputCheckbox4\n        [id]=\"'inputCheckbox4'\"\n        data-role=\"checkbox-default-4\"\n        formControlName=\"inputCheckbox4\"\n        label=\"I accept the Terms of Conditions\"\n      ></bb-input-checkbox-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Disabled</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxDisabled'\"\n      data-role=\"checkbox-disabled\"\n      formControlName=\"inputCheckboxDisabled\"\n      label=\"I accept the Terms of Service\"\n    ></bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Disabled, checked</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxDisabledChecked'\"\n      data-role=\"checkbox-disabled-selected\"\n      formControlName=\"inputCheckboxDisabledChecked\"\n      label=\"I accept the Terms of Service\"\n    ></bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Invalid checkbox</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxError'\"\n      [aria-describedby]=\"'inputCheckboxExampleError'\"\n      data-role=\"checkbox-validated\"\n      [required]=\"true\"\n      formControlName=\"inputCheckboxError\"\n      label=\"I accept the Terms of Service\"\n    ></bb-input-checkbox-ui>\n    <bb-input-validation-message-ui\n      [id]=\"'inputCheckboxExampleError'\"\n      [showErrors]=\"!isFieldValid('inputCheckboxError')\"\n    >\n      <span>This field is required.</span>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Indeterminate</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxIndeterminate'\"\n      data-role=\"checkbox-indeterminate\"\n      [indeterminate]=\"true\"\n      formControlName=\"inputCheckboxIndeterminate\"\n      label=\"I accept the Terms of Service\"\n    ></bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Labelled by child node with aria-labelledby</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxChildNode'\"\n      data-role=\"checkbox-child-node\"\n      formControlName=\"inputCheckbox5\"\n      [aria-labelledby]=\"'inputCheckboxChildNodeLabelId'\"\n    >\n      <span id=\"inputCheckboxChildNodeLabelId\">I accept the Terms of Service</span>\n    </bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Labelled by child node aria-label content</h4>\n    <bb-input-checkbox-ui\n      #inputCheckboxAriaLabel\n      [id]=\"'inputCheckboxAriaLabel'\"\n      data-role=\"checkbox-aria-labelled\"\n      formControlName=\"inputCheckbox6\"\n      [aria-label]=\"'I accept the Terms of Service'\"\n    >\n      <span>{{ inputCheckboxAriaLabel?.ariaLabel }}</span>\n    </bb-input-checkbox-ui>\n  </div>\n\n  <div class=\"bb-block\">\n    <h4>Labelled by non child with aria-labelledby</h4>\n    <bb-input-checkbox-ui\n      [id]=\"'inputCheckboxAriaLabelledby'\"\n      data-role=\"checkbox-aria-labelledby\"\n      formControlName=\"inputCheckbox7\"\n      [aria-labelledby]=\"'ariaLabeledById'\"\n      class=\"bb-block bb-block--sm\"\n    >\n      Default label\n    </bb-input-checkbox-ui>\n    <span id=\"ariaLabeledById\">This label will be read out: I accept the Terms of Service</span>\n  </div>\n</form>\n", components: [{ type: i2__namespace.InputCheckboxComponent, selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    InputCheckboxShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputCheckboxShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputCheckboxShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-checkbox-ui-showcase',
                        templateUrl: './input-checkbox-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputCheckboxShowcaseModule = /** @class */ (function () {
        function InputCheckboxShowcaseModule() {
        }
        return InputCheckboxShowcaseModule;
    }());
    InputCheckboxShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputCheckboxShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputCheckboxShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputCheckboxShowcaseModule, declarations: [InputCheckboxShowcaseComponent], imports: [i4$1.CommonModule, i2$a.InputCheckboxModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule] });
    InputCheckboxShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputCheckboxShowcaseModule, imports: [[i4$1.CommonModule, i2$a.InputCheckboxModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputCheckboxShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$a.InputCheckboxModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule],
                        declarations: [InputCheckboxShowcaseComponent],
                        entryComponents: [InputCheckboxShowcaseComponent],
                    }]
            }] });

    var InputDatepickerShowcaseComponent = /** @class */ (function () {
        function InputDatepickerShowcaseComponent(formBuilder) {
            var _this = this;
            this.dateRangeSplit = null;
            this.dateRangeRequiredSplit = null;
            this.isDisabled = true;
            this.focusedDate$$ = new rxjs.BehaviorSubject(undefined);
            this.focusedRangeDate$$ = new rxjs.BehaviorSubject(undefined);
            this.focusedDate = function (event) {
                var _a = event.date, date = _a === void 0 ? null : _a, _b = event.isSelecting, isSelecting = _b === void 0 ? false : _b;
                _this.focusedDate$$.next({
                    date: date,
                    isSelecting: isSelecting,
                });
            };
            this.focusedRangeDate = function (event) {
                var _a = event.date, date = _a === void 0 ? null : _a, _b = event.isSelecting, isSelecting = _b === void 0 ? false : _b;
                _this.focusedRangeDate$$.next({
                    date: date,
                    isSelecting: isSelecting,
                });
            };
            this.date = '';
            this.dateFirstDayOfWeekSet = '';
            this.dateDefault = '';
            this.datePickerDisabled = '';
            this.predefinedDate = new Date('2019-10-29T00:00').toISOString();
            this.dateOverrideDateFormat = '';
            this.dateOverrideDateFormat2 = new Date('2020-10-09T00:00').toISOString();
            this.datePickerReadonly = this.predefinedDate;
            this.dateRange = {
                from: new Date('2020-11-05T00:00').toISOString(),
                to: new Date('2020-11-12T00:00').toISOString(),
            };
            this.dateRangeRequired = { from: '', to: '' };
            this.dateRangeSplit = {
                from: new Date('2020-11-05T00:00').toISOString(),
                to: new Date('2020-11-12T22:00').toISOString(),
            };
            this.dateRangeRequiredSplit = { from: '', to: '' };
            var today = new Date('2019-10-05T00:00');
            this.minDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1, 0, 0).toISOString();
            this.maxDate = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1, 0, 0).toISOString();
            this.formGroup = formBuilder.group({
                reactiveDateFormControlName: formBuilder.control(new Date('2020-10-09T00:00').toISOString(), [
                    i1$N.Validators.required,
                ]),
                reactiveDateRangeFormControlName1: formBuilder.control({
                    from: new Date('2020-11-05T00:00').toISOString(),
                    to: new Date('2020-11-12T00:00').toISOString(),
                }),
                reactiveDateRangeFormControlName2: formBuilder.control({ from: '', to: '' }, [i1$N.Validators.required]),
                reactiveDateRangeFormControlName3: formBuilder.control({ from: '', to: new Date('2020-11-12T00:00').toISOString() }, [i1$N.Validators.required]),
                reactiveDateRangeFormControlName4: formBuilder.control({
                    from: '',
                    to: new Date('2020-11-12T00:00').toISOString(),
                }),
                reactiveDateRangeFormControlName5: formBuilder.control({
                    from: 'date',
                    to: new Date('2020-11-12T00:00').toISOString(),
                }),
                reactiveDateRangeFormControlName6: formBuilder.control({
                    from: new Date('2020-11-12T00:00').toISOString(),
                    to: '',
                }),
            });
        }
        return InputDatepickerShowcaseComponent;
    }());
    InputDatepickerShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputDatepickerShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputDatepickerShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputDatepickerShowcaseComponent, selector: "bb-input-datepicker-ui-showcase", ngImport: i0__namespace, template: "<h2 class=\"bb-block bb-block--sm\">Single Date</h2>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerDefaultLabel\">\n    <label [attr.for]=\"defaultDatePicker6?.id\">Customized accessibility options</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <div class=\"sr-only\" aria-live=\"polite\" id=\"customDatepickerDescribedbyLabel\">\n      <div *ngIf=\"focusedDate$$ | async as focusDate\">\n        <span *ngIf=\"focusDate.isSelecting\"\n          >Current selected date is\n          {{ focusDate.date.year + '-' + focusDate.date.month + '-' + focusDate.date.day | date: 'longDate' }}</span\n        >\n      </div>\n    </div>\n    <bb-input-datepicker-ui\n      #defaultDatePicker6\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"predefinedDate\"\n      [ariaLabelForButton]=\"'Show calendar dropdown'\"\n      [aria-labelledby]=\"'datePickerDefaultLabel'\"\n      [datepickerDescribedby]=\"'customDatepickerDescribedbyLabel'\"\n      [firstDayOfWeek]=\"0\"\n      (focusedDate)=\"focusedDate($event)\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerDefaultLabel\">\n    <label [attr.for]=\"defaultDatePicker?.id\">Default</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"predefinedDate\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerDefaultLabel'\"\n      [firstDayOfWeek]=\"0\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerDefaultLabel2\">\n    <label [attr.for]=\"defaultDatePicker2?.id\">Default with first day of the week set to Sunday</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker2\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"dateFirstDayOfWeekSet\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerDefaultLabel2'\"\n      [firstDayOfWeek]=\"7\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerDefaultLabel3\">\n    <label [attr.for]=\"defaultDatePicker3?.id\">Default with override date format</label>\n  </h4>\n  <div class=\"datepicker-default bb-block bb-block--md\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker3\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"dateOverrideDateFormat\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerDefaultLabel3'\"\n      [overrideDateFormat]=\"'yyyy/MM/dd'\"\n    ></bb-input-datepicker-ui>\n  </div>\n\n  get default format from locale\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker3\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"dateOverrideDateFormat2\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerDefaultLabel3'\"\n      [overrideDateFormat]=\"'yyyy/MM/dd'\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerPredefinedLabel\">With pre-defined date</h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-predefinedDate'\">\n    <bb-input-datepicker-ui\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"predefinedDate\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerPredefinedLabel'\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerDisabledLabel\">Disabled</h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-disabled'\">\n    <bb-input-datepicker-ui\n      name=\"startDate2\"\n      [disabled]=\"isDisabled\"\n      [(ngModel)]=\"datePickerDisabled\"\n      [aria-labelledby]=\"'datePickerDisabledLabel'\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerCustomPlaceholder\">\n    <label [attr.for]=\"customPlaceholderDatePicker?.id\">Custom placeholder</label>\n  </h4>\n  <div class=\"datepicker-default\">\n    <bb-input-datepicker-ui\n      #customPlaceholderDatePicker\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [placeholder]=\"'You can add custom placeholder'\"\n      [(ngModel)]=\"date\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerCustomPlaceholder'\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerReadonlyLabel\">Readonly</h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-readonly'\">\n    <bb-input-datepicker-ui\n      name=\"startDate3\"\n      [readonly]=\"true\"\n      [(ngModel)]=\"datePickerReadonly\"\n      [aria-labelledby]=\"'datePickerReadonlyLabel'\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerMinMaxLabel\">With minimum and maximum date selection</h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-minMax'\">\n    <bb-input-datepicker-ui\n      name=\"startDate\"\n      [minDate]=\"minDate\"\n      [maxDate]=\"maxDate\"\n      [(ngModel)]=\"dateDefault\"\n      [aria-labelledby]=\"'datePickerMinMaxLabel'\"\n      [aria-describedby]=\"'datePickerMinMaxValues'\"\n    ></bb-input-datepicker-ui>\n  </div>\n  <div class=\"sr-only\" aria-live=\"polite\" id=\"datePickerMinMaxValues\">\n    Minimum value for this input is {{ minDate | date: 'short' }} maximum value is {{ maxDate | date: 'short' }}\n  </div>\n</div>\n\n<h2 class=\"bb-block bb-block--sm\">Range selection single input</h2>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerDefaultLabelRange\">\n    <label [attr.for]=\"defaultDatePicker5?.id\">Range: Customized accessibility options</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <div class=\"sr-only\" aria-live=\"polite\" id=\"customRangeDatepickerDescribedbyLabel\">\n      <div *ngIf=\"focusedRangeDate$$ | async as focusRangeDate\">\n        <span *ngIf=\"focusRangeDate.isSelecting\"\n          >Currently selecting date\n          {{\n            focusRangeDate.date.year + '-' + focusRangeDate.date.month + '-' + focusRangeDate.date.day\n              | date: 'longDate'\n          }}</span\n        >\n      </div>\n    </div>\n    <bb-input-datepicker-ui\n      #defaultDatePicker5\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"dateRange\"\n      [ariaLabelForButton]=\"'Show datepicker calendars'\"\n      [aria-labelledby]=\"'datePickerDefaultLabelRange'\"\n      [datepickerDescribedby]=\"'customRangeDatepickerDescribedbyLabel'\"\n      [firstDayOfWeek]=\"0\"\n      [rangeSelection]=\"true\"\n      (focusedDate)=\"focusedRangeDate($event)\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerDefaultLabelRange\">\n    <label [attr.for]=\"defaultDatePicker4?.id\">Default with ngModel</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker4\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"dateRange\"\n      [ariaLabelForButton]=\"'Show datepicker calendars'\"\n      [aria-labelledby]=\"'datePickerDefaultLabelRange'\"\n      [firstDayOfWeek]=\"0\"\n      [rangeSelection]=\"true\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerRangeSelectionSingleDefault5\">\n    <label [attr.for]=\"defaultDatePicker5?.id\">Default with ngModel, label required set</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker5\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"dateRangeRequired\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerRangeSelectionSingleDefault5'\"\n      [firstDayOfWeek]=\"0\"\n      label=\"Label\"\n      [rangeSelection]=\"true\"\n      [required]=\"true\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div [formGroup]=\"formGroup\">\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRange1\">\n      <label [attr.for]=\"defaultDatePicker7?.id\">Reactive</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker7\n        formControlName=\"reactiveDateRangeFormControlName1\"\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRange1'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelection]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRange2\">\n      <label [attr.for]=\"defaultDatePicker8?.id\">Reactive with empty initial and required</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker8\n        formControlName=\"reactiveDateRangeFormControlName2\"\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRange2'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelection]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRange3\">\n      <label [attr.for]=\"defaultDatePicker9?.id\">Reactive with missing from and required</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker9\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        formControlName=\"reactiveDateRangeFormControlName3\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRange3'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelection]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRange6\">\n      <label [attr.for]=\"defaultDatePicker?.id\">Reactive with missing to</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        formControlName=\"reactiveDateRangeFormControlName6\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRange6'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelection]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRange4\">\n      <label [attr.for]=\"defaultDatePicker10?.id\">Reactive with missing from and not required</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker10\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        formControlName=\"reactiveDateRangeFormControlName4\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRange4'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelection]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRange5\">\n      <label [attr.for]=\"defaultDatePicker11?.id\">Reactive with wrong from</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker11\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        formControlName=\"reactiveDateRangeFormControlName5\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRange5'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelection]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n</div>\n\n<h2 class=\"bb-block bb-block--sm\">Range selection split input</h2>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerDefaultLabelRangeSplit\">\n    <label [attr.for]=\"defaultDatePicker12?.id\">Default with ngModel</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker12\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"dateRangeSplit\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerDefaultLabelRangeSplit'\"\n      [firstDayOfWeek]=\"0\"\n      [rangeSelectionSplit]=\"true\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 id=\"datePickerRangeSelectionSplitDefault6\">\n    <label [attr.for]=\"defaultDatePicker21?.id\">Default with ngModel, label required set</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker21\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      [(ngModel)]=\"dateRangeRequiredSplit\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerRangeSelectionSplitDefault6'\"\n      [firstDayOfWeek]=\"0\"\n      label=\"Label\"\n      [rangeSelectionSplit]=\"true\"\n      [required]=\"true\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n\n<div [formGroup]=\"formGroup\">\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRangeSplit1\">\n      <label [attr.for]=\"defaultDatePicker?.id\">Reactive</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker\n        formControlName=\"reactiveDateRangeFormControlName1\"\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRangeSplit1'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelectionSplit]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRangeSplit2\">\n      <label [attr.for]=\"defaultDatePicker?.id\">Reactive with empty initial and required</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker\n        formControlName=\"reactiveDateRangeFormControlName2\"\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRangeSplit2'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelectionSplit]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRangeSplit3\">\n      <label [attr.for]=\"defaultDatePicker?.id\">Reactive with missing from and required</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        formControlName=\"reactiveDateRangeFormControlName3\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRangeSplit3'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelectionSplit]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRangeSplit6\">\n      <label [attr.for]=\"defaultDatePicker?.id\">Reactive with missing to</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        formControlName=\"reactiveDateRangeFormControlName6\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRangeSplit6'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelectionSplit]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\">\n    <h4 id=\"datePickerDefaultLabelRangeSplit4\">\n      <label [attr.for]=\"defaultDatePicker?.id\">Reactive with missing from and not required</label>\n    </h4>\n    <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n      <bb-input-datepicker-ui\n        #defaultDatePicker\n        labelClasses=\"font-weight-bold\"\n        name=\"startDate\"\n        formControlName=\"reactiveDateRangeFormControlName4\"\n        [ariaLabelForButton]=\"'button'\"\n        [aria-labelledby]=\"'datePickerDefaultLabelRangeSplit4'\"\n        [firstDayOfWeek]=\"0\"\n        [rangeSelectionSplit]=\"true\"\n      ></bb-input-datepicker-ui>\n    </div>\n  </div>\n\n  <h4 id=\"datePickerDefaultLabelRangeSplit5\">\n    <label [attr.for]=\"defaultDatePicker?.id\">Reactive with wrong from</label>\n  </h4>\n  <div class=\"datepicker-default\" [attr.data-role]=\"'datepicker-default'\">\n    <bb-input-datepicker-ui\n      #defaultDatePicker\n      labelClasses=\"font-weight-bold\"\n      name=\"startDate\"\n      formControlName=\"reactiveDateRangeFormControlName5\"\n      [ariaLabelForButton]=\"'button'\"\n      [aria-labelledby]=\"'datePickerDefaultLabelRange5'\"\n      [firstDayOfWeek]=\"0\"\n      [rangeSelectionSplit]=\"true\"\n    ></bb-input-datepicker-ui>\n  </div>\n</div>\n", components: [{ type: i2__namespace$a.InputDatepickerComponent, selector: "bb-input-datepicker-ui", inputs: ["rangeSelection", "rangeSelectionSplit", "clickOpen", "focusOpen", "placement", "datepickerDescribedby", "ariaLabelForButton", "minDate", "maxDate", "markDisabled", "icon", "iconSize", "iconColor", "btnColor", "ariaLabel", "navigation", "autocomplete", "firstDayOfWeek", "displayMonths", "placeholder", "overrideDateFormat"], outputs: ["focusedDate"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2__namespace$a.MinDateValidatorDirective, selector: "bb-input-datepicker-ui[minDate]", inputs: ["minDate"] }, { type: i2__namespace$a.MaxDateValidatorDirective, selector: "bb-input-datepicker-ui[maxDate]", inputs: ["maxDate"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }], pipes: { "async": i4__namespace.AsyncPipe, "date": i4__namespace.DatePipe } });
    InputDatepickerShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputDatepickerShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputDatepickerShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-datepicker-ui-showcase',
                        templateUrl: './input-datepicker-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputDatepickerShowcaseModule = /** @class */ (function () {
        function InputDatepickerShowcaseModule() {
        }
        return InputDatepickerShowcaseModule;
    }());
    InputDatepickerShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputDatepickerShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputDatepickerShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputDatepickerShowcaseModule, declarations: [InputDatepickerShowcaseComponent], imports: [i4$1.CommonModule, i2$b.InputDatepickerModule, i1$N.ReactiveFormsModule, i1$N.FormsModule] });
    InputDatepickerShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputDatepickerShowcaseModule, imports: [[i4$1.CommonModule, i2$b.InputDatepickerModule, i1$N.ReactiveFormsModule, i1$N.FormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputDatepickerShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$b.InputDatepickerModule, i1$N.ReactiveFormsModule, i1$N.FormsModule],
                        declarations: [InputDatepickerShowcaseComponent],
                        entryComponents: [InputDatepickerShowcaseComponent],
                    }]
            }] });

    var InputEmailShowcaseComponent = /** @class */ (function () {
        function InputEmailShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                inputEmail: ['', i1$N.Validators.required],
            });
        }
        InputEmailShowcaseComponent.prototype.isFieldValid = function (fieldName) {
            var control = this.getControl(fieldName);
            return control && (control.valid || control.untouched);
        };
        InputEmailShowcaseComponent.prototype.getControl = function (fieldName) {
            var _a;
            return (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls[fieldName];
        };
        InputEmailShowcaseComponent.prototype.hasEmailError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.email;
        };
        InputEmailShowcaseComponent.prototype.hasRequiredError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.required;
        };
        return InputEmailShowcaseComponent;
    }());
    InputEmailShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputEmailShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputEmailShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputEmailShowcaseComponent, selector: "bb-input-email-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"vForm\">\n      <label for=\"inputEmail\">\n        E-mail field <span class=\"bb-text-support bb-text-default\">(max {{ inputEmail?.maxLength }} characters)</span>\n      </label>\n      <bb-input-email-ui\n        #inputEmail\n        [id]=\"'inputEmail'\"\n        formControlName=\"inputEmail\"\n        [readonly]=\"false\"\n        [required]=\"true\"\n        placeholder=\"Please enter an email address...\"\n        [maxLength]=\"70\"\n        [aria-labelledby]=\"'inputEmailLabel'\"\n        [aria-describedby]=\"'inputEmailErrors'\"\n        [aria-invalid]=\"!isFieldValid('inputEmail')\"\n      >\n      </bb-input-email-ui>\n      <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('inputEmail')\" id=\"inputEmailErrors\">\n        <p *ngIf=\"hasRequiredError('inputEmail')\">Field is required.</p>\n        <p *ngIf=\"hasEmailError('inputEmail')\">Email format is incorrect.</p>\n      </bb-input-validation-message-ui>\n    </form>\n  </div>\n</div>\n", components: [{ type: i2__namespace$b.InputEmailComponent, selector: "bb-input-email-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    InputEmailShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputEmailShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputEmailShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-email-ui-showcase',
                        templateUrl: './input-email-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputEmailShowcaseModule = /** @class */ (function () {
        function InputEmailShowcaseModule() {
        }
        return InputEmailShowcaseModule;
    }());
    InputEmailShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputEmailShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputEmailShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputEmailShowcaseModule, declarations: [InputEmailShowcaseComponent], imports: [i4$1.CommonModule, i2$c.InputEmailModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule] });
    InputEmailShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputEmailShowcaseModule, imports: [[i4$1.CommonModule, i2$c.InputEmailModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputEmailShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$c.InputEmailModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule],
                        declarations: [InputEmailShowcaseComponent],
                        entryComponents: [InputEmailShowcaseComponent],
                    }]
            }] });

    var InputInlineEditShowcaseComponent = /** @class */ (function () {
        function InputInlineEditShowcaseComponent() {
            this.editInlineModel = 'Here some text that can be modified';
            this.editInlineModelWithLoading = 'Default text';
            this.inlineEditState = i2$e.InputInlineEditState.IDLE;
        }
        InputInlineEditShowcaseComponent.prototype.onCancel = function () { };
        InputInlineEditShowcaseComponent.prototype.onAccept = function (item) {
            this.editInlineModel = item;
        };
        InputInlineEditShowcaseComponent.prototype.onAcceptWithLoading = function (value) {
            var _this = this;
            this.inlineEditState = i2$e.InputInlineEditState.LOADING;
            setTimeout(function () {
                _this.inlineEditState = i2$e.InputInlineEditState.IDLE;
                _this.editInlineModelWithLoading = value;
            }, 5000);
        };
        return InputInlineEditShowcaseComponent;
    }());
    InputInlineEditShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputInlineEditShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputInlineEditShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputInlineEditShowcaseComponent, selector: "bb-input-inline-edit-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--md\">\n  <h3>Inline Edit</h3>\n  <bb-input-inline-edit-ui\n    [inputText]=\"editInlineModel\"\n    (cancel)=\"onCancel()\"\n    (accept)=\"onAccept($event)\"\n    [maxLength]=\"64\"\n    [minLength]=\"2\"\n    [required]=\"true\"\n    hint=\"This is visible to the whole company\"\n  >\n  </bb-input-inline-edit-ui>\n</div>\n<div class=\"bb-block bb-block--md\">\n  <h3>Inline edit with loading state</h3>\n  <bb-input-inline-edit-ui\n    [hasLoadingState]=\"true\"\n    [inputText]=\"editInlineModelWithLoading\"\n    (accept)=\"onAcceptWithLoading($event)\"\n    [maxLength]=\"64\"\n    [(state)]=\"inlineEditState\"\n    hint=\"This is visible to the whole company\"\n  >\n  </bb-input-inline-edit-ui>\n</div>\n", components: [{ type: i2__namespace$m.InputInlineEditComponent, selector: "bb-input-inline-edit-ui", inputs: ["state", "canEdit", "hasLoadingState", "inputInlineTemplate", "inputText", "maxLength", "minLength", "maxValue", "minValue", "autofocus", "ariaLabelAccept", "ariaLabelCancel", "ariaLabelEdit", "tooltipAccept", "tooltipCancel", "tooltipEdit", "autocomplete", "pattern", "hint"], outputs: ["stateChange", "cancel", "accept"] }] });
    InputInlineEditShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputInlineEditShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputInlineEditShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-inline-edit-ui-showcase',
                        templateUrl: './input-inline-edit-showcase.component.html',
                    }]
            }] });

    var InputInlineEditShowcaseModule = /** @class */ (function () {
        function InputInlineEditShowcaseModule() {
        }
        return InputInlineEditShowcaseModule;
    }());
    InputInlineEditShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputInlineEditShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputInlineEditShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputInlineEditShowcaseModule, declarations: [InputInlineEditShowcaseComponent], imports: [i4$1.CommonModule, i2$e.InputInlineEditModule] });
    InputInlineEditShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputInlineEditShowcaseModule, imports: [[i4$1.CommonModule, i2$e.InputInlineEditModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputInlineEditShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$e.InputInlineEditModule],
                        declarations: [InputInlineEditShowcaseComponent],
                        entryComponents: [InputInlineEditShowcaseComponent],
                    }]
            }] });

    var InputNumberShowcaseComponent = /** @class */ (function () {
        function InputNumberShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                inputNumber: ['', i1$N.Validators.compose([i1$N.Validators.required, i1$N.Validators.min(2), i1$N.Validators.max(20)])],
                inputNumberOnlyDigits: ['', i1$N.Validators.compose([i1$N.Validators.required, i1$N.Validators.min(2), i1$N.Validators.max(20)])],
                inputNumberNegative: ['', i1$N.Validators.compose([i1$N.Validators.required, i1$N.Validators.min(2), i1$N.Validators.max(20)])],
            });
        }
        InputNumberShowcaseComponent.prototype.isFieldValid = function (fieldName) {
            var control = this.getControl(fieldName);
            return control && (control.valid || control.untouched);
        };
        InputNumberShowcaseComponent.prototype.getControl = function (fieldName) {
            var _a;
            return (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls[fieldName];
        };
        InputNumberShowcaseComponent.prototype.hasError = function (field, type) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors[type];
        };
        InputNumberShowcaseComponent.prototype.hasRequiredError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.required;
        };
        InputNumberShowcaseComponent.prototype.hasMinError = function (field) {
            return this.hasError(field, 'min');
        };
        InputNumberShowcaseComponent.prototype.hasMaxError = function (field) {
            return this.hasError(field, 'max');
        };
        return InputNumberShowcaseComponent;
    }());
    InputNumberShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputNumberShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputNumberShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputNumberShowcaseComponent, selector: "bb-input-number-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"vForm\">\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-text-bold\" id=\"numberFieldLabel1\">\n          Default Number field\n          <span class=\"bb-text-support bb-text-default\">(min 2, max 20)</span>\n        </div>\n        <bb-input-number-ui\n          placeholder=\"Enter a number\"\n          formControlName=\"inputNumber\"\n          [min]=\"2\"\n          [max]=\"20\"\n          [required]=\"true\"\n          [aria-describedby]=\"'input-number-showcase-error'\"\n          [aria-labelledby]=\"'numberFieldLabel1'\"\n          [ariaLabel]=\"'Count'\"\n          [allowNonDigits]=\"true\"\n        >\n        </bb-input-number-ui>\n        <bb-input-validation-message-ui\n          [showErrors]=\"vForm?.touched && vForm?.get('inputNumber')?.errors\"\n          [id]=\"'input-number-showcase-error'\"\n        >\n          <span *ngIf=\"hasRequiredError('inputNumber')\"> Field is required. </span>\n          <span *ngIf=\"hasMinError('inputNumber')\"> Minimum number allowed is 2. </span>\n          <span *ngIf=\"hasMaxError('inputNumber')\"> Maximum number allowed is 20. </span>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <div class=\"bb-text-bold\" id=\"numberFieldLabel2\">\n          Number field with only digits\n          <span class=\"bb-text-support bb-text-default\">(min 2, max 20)</span>\n        </div>\n        <bb-input-number-ui\n          placeholder=\"Enter a number\"\n          formControlName=\"inputNumberOnlyDigits\"\n          [min]=\"2\"\n          [max]=\"20\"\n          [required]=\"true\"\n          [aria-describedby]=\"'input-number-showcase-error'\"\n          [aria-labelledby]=\"'numberFieldLabel2'\"\n          [ariaLabel]=\"'Count'\"\n        >\n        </bb-input-number-ui>\n        <bb-input-validation-message-ui\n          [showErrors]=\"vForm?.touched && vForm?.get('inputNumberOnlyDigits')?.errors\"\n          [id]=\"'input-number-showcase-error'\"\n        >\n          <span *ngIf=\"hasRequiredError('inputNumber')\"> Field is required. </span>\n          <span *ngIf=\"hasMinError('inputNumber')\"> Minimum number allowed is 2. </span>\n          <span *ngIf=\"hasMaxError('inputNumber')\"> Maximum number allowed is 20. </span>\n        </bb-input-validation-message-ui>\n      </div>\n      <div>\n        <div class=\"bb-text-bold\" id=\"numberFieldLabel3\">\n          Number field with negative sign allowed\n          <span class=\"bb-text-support bb-text-default\">(min 2, max 20)</span>\n        </div>\n        <bb-input-number-ui\n          placeholder=\"Enter a number\"\n          formControlName=\"inputNumberNegative\"\n          [min]=\"2\"\n          [max]=\"20\"\n          [required]=\"true\"\n          [aria-describedby]=\"'input-number-showcase-error'\"\n          [aria-labelledby]=\"'numberFieldLabel3'\"\n          [ariaLabel]=\"'Count'\"\n          [allowNegativeSign]=\"true\"\n        >\n        </bb-input-number-ui>\n        <bb-input-validation-message-ui\n          [showErrors]=\"vForm?.touched && vForm?.get('inputNumberNegative')?.errors\"\n          [id]=\"'input-number-showcase-error'\"\n        >\n          <span *ngIf=\"hasRequiredError('inputNumber')\"> Field is required. </span>\n          <span *ngIf=\"hasMinError('inputNumber')\"> Minimum number allowed is 2. </span>\n          <span *ngIf=\"hasMaxError('inputNumber')\"> Maximum number allowed is 20. </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </form>\n  </div>\n  formgroup\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"vForm\" class=\"form-group is-valid\">\n      <div class=\"bb-text-bold\" id=\"numberFieldLabel\">\n        Number field\n        <span class=\"bb-text-support bb-text-default\">(min 2, max 20)</span>\n      </div>\n      <bb-input-number-ui\n        placeholder=\"Enter a number\"\n        formControlName=\"inputNumber\"\n        [min]=\"2\"\n        [max]=\"20\"\n        [required]=\"true\"\n        [aria-describedby]=\"'input-number-showcase-error'\"\n        [aria-labelledby]=\"'numberFieldLabel'\"\n        [ariaLabel]=\"'Count'\"\n      >\n      </bb-input-number-ui>\n      <bb-input-validation-message-ui\n        [showErrors]=\"vForm?.touched && vForm?.get('inputNumber')?.errors\"\n        [id]=\"'input-number-showcase-error'\"\n      >\n        <span *ngIf=\"hasRequiredError('inputNumber')\"> Field is required. </span>\n        <span *ngIf=\"hasMinError('inputNumber')\"> Minimum number allowed is 2. </span>\n        <span *ngIf=\"hasMaxError('inputNumber')\"> Maximum number allowed is 20. </span>\n      </bb-input-validation-message-ui>\n    </form>\n  </div>\n</div>\n", components: [{ type: i2__namespace$c.InputNumberComponent, selector: "bb-input-number-ui", inputs: ["placeholder", "max", "min", "step", "readonly", "autocomplete", "ariaLabel", "allowNonDigits", "allowNegativeSign"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    InputNumberShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputNumberShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputNumberShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-number-ui-showcase',
                        templateUrl: './input-number-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputNumberShowcaseModule = /** @class */ (function () {
        function InputNumberShowcaseModule() {
        }
        return InputNumberShowcaseModule;
    }());
    InputNumberShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputNumberShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputNumberShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputNumberShowcaseModule, declarations: [InputNumberShowcaseComponent], imports: [i4$1.CommonModule, i2$f.InputNumberModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule] });
    InputNumberShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputNumberShowcaseModule, imports: [[i4$1.CommonModule, i2$f.InputNumberModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputNumberShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$f.InputNumberModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule],
                        declarations: [InputNumberShowcaseComponent],
                        entryComponents: [InputNumberShowcaseComponent],
                    }]
            }] });

    var InputPasswordShowcaseComponent = /** @class */ (function () {
        function InputPasswordShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.passwordForm = this.formBuilder.group({
                inputPassword: ['', i1$N.Validators.required],
                inputPasswordNoIcon: ['', i1$N.Validators.required],
            });
        }
        InputPasswordShowcaseComponent.prototype.onSubmit = function (form) {
            console.log(form.value.inputPassword);
        };
        InputPasswordShowcaseComponent.prototype.isFieldValid = function (fieldName) {
            var _a;
            var control = (_a = this.passwordForm) === null || _a === void 0 ? void 0 : _a.controls[fieldName];
            return control && (control.valid || control.untouched);
        };
        return InputPasswordShowcaseComponent;
    }());
    InputPasswordShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPasswordShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputPasswordShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputPasswordShowcaseComponent, selector: "bb-input-password-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"passwordForm\" novalidate (ngSubmit)=\"onSubmit(passwordForm)\">\n      <div class=\"bb-block bb-block--md\">\n        <bb-input-password-ui\n          label=\"Password\"\n          [aria-describedby]=\"'input-password-error'\"\n          formControlName=\"inputPassword\"\n          [showVisibilityControl]=\"true\"\n          [maxLength]=\"5\"\n          [required]=\"true\"\n          placeholder=\"Please enter password...\"\n          [autocomplete]=\"'current-password'\"\n        >\n        </bb-input-password-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('inputPassword')\" [id]=\"'input-password-error'\">\n          <span>Password is required.</span>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--md\">\n        <bb-input-password-ui\n          label=\"Password with no visibility button\"\n          [aria-describedby]=\"'input-password-error'\"\n          formControlName=\"inputPasswordNoIcon\"\n          [showVisibilityControl]=\"false\"\n          [maxLength]=\"5\"\n          [required]=\"true\"\n          placeholder=\"Please enter password...\"\n          [autocomplete]=\"'current-password'\"\n        >\n        </bb-input-password-ui>\n        <bb-input-validation-message-ui\n          [showErrors]=\"!isFieldValid('inputPasswordNoIcon')\"\n          [id]=\"'input-password-error'\"\n        >\n          <span>Password is required.</span>\n        </bb-input-validation-message-ui>\n      </div>\n    </form>\n  </div>\n</div>\n", components: [{ type: i2__namespace$l.InputPasswordComponent, selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    InputPasswordShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputPasswordShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPasswordShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-password-ui-showcase',
                        templateUrl: './input-password-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputPasswordShowcaseModule = /** @class */ (function () {
        function InputPasswordShowcaseModule() {
        }
        return InputPasswordShowcaseModule;
    }());
    InputPasswordShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPasswordShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputPasswordShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPasswordShowcaseModule, declarations: [InputPasswordShowcaseComponent], imports: [i4$1.CommonModule, i2$g.InputPasswordModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule] });
    InputPasswordShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPasswordShowcaseModule, imports: [[i4$1.CommonModule, i2$g.InputPasswordModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPasswordShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$g.InputPasswordModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule],
                        declarations: [InputPasswordShowcaseComponent],
                        entryComponents: [InputPasswordShowcaseComponent],
                    }]
            }] });

    var InputPhoneShowcaseComponent = /** @class */ (function () {
        function InputPhoneShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.country = [
                {
                    countryCode: '+91',
                    isoCode: 'IN',
                    countryName: 'India',
                },
            ];
            this.countries = [
                {
                    countryCode: '+1',
                    isoCode: 'US',
                    countryName: 'United States',
                },
                {
                    countryCode: '+31',
                    isoCode: 'NL',
                    countryName: 'Netherlands',
                },
                {
                    countryCode: '+34',
                    isoCode: 'NZ',
                    countryName: 'New Zealand',
                },
                {
                    countryCode: '+355',
                    isoCode: 'AL',
                    countryName: 'Albania',
                },
                {
                    countryCode: '+91',
                    isoCode: 'IN',
                    countryName: 'India',
                },
                {
                    countryCode: '+55',
                    isoCode: 'BR',
                    countryName: 'Brazil',
                },
                {
                    countryCode: '+420',
                    isoCode: 'CZ',
                    countryName: 'Czech Republic',
                },
                {
                    countryCode: '+49',
                    isoCode: 'DE',
                    countryName: 'Germany',
                },
            ];
        }
        InputPhoneShowcaseComponent.prototype.ngOnInit = function () {
            this.vForm = this.formBuilder.group({
                phoneNumberCountryCode: 'CA',
                phoneNumber: '',
            });
            this.vForm.controls.phoneNumber.setValue('16045555555');
        };
        return InputPhoneShowcaseComponent;
    }());
    InputPhoneShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPhoneShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputPhoneShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputPhoneShowcaseComponent, selector: "bb-input-phone-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <section class=\"showcase__section\">\n      <form [formGroup]=\"vForm\">\n        <div class=\"bb-stack\">\n          <div class=\"form-group bb-stack__item\">\n            <label for=\"countryCode\">Country Code</label>\n            <bb-input-text-ui\n              [id]=\"'countryCode'\"\n              [maxLength]=\"2\"\n              [size]=\"2\"\n              class=\"bb-block\"\n              [inputClassName]=\"'bb-text-align-center'\"\n              formControlName=\"phoneNumberCountryCode\"\n            ></bb-input-text-ui>\n          </div>\n          <div class=\"form-group bb-stack__item bb-stack__item--fill\">\n            <bb-input-phone-ui\n              [id]=\"'phoneNumber'\"\n              label=\"Phone Number\"\n              formControlName=\"phoneNumber\"\n              placeholder=\"Enter a phone number\"\n              [required]=\"true\"\n            >\n            </bb-input-phone-ui>\n          </div>\n        </div>\n        <p *ngIf=\"vForm\">\n          <strong>Formatted number: </strong><br />\n          {{ vForm.get('phoneNumberCountryCode')?.value }}\n          {{ vForm.get('phoneNumber')?.value | phoneNumber: vForm.get('phoneNumberCountryCode')?.value }}\n        </p>\n        <div class=\"bb-stack form-group bb-stack__item bb-stack__item--fill\">\n          <bb-input-phone-ui\n            [id]=\"'phoneNumber1'\"\n            label=\"Phone Number\"\n            formControlName=\"phoneNumber\"\n            placeholder=\"Enter a phone number\"\n            [required]=\"true\"\n            [enableCountryCode]=\"true\"\n            defaultCountryIsoCode=\"BR\"\n            [countryList]=\"countries\"\n          >\n          </bb-input-phone-ui>\n        </div>\n        <div class=\"bb-stack form-group bb-stack__item bb-stack__item--fill\">\n          <bb-input-phone-ui\n            [id]=\"'phoneNumber2'\"\n            label=\"Phone Number\"\n            formControlName=\"phoneNumber\"\n            placeholder=\"Enter a phone number\"\n            [required]=\"true\"\n            [enableCountryCode]=\"true\"\n            [countryList]=\"country\"\n          >\n          </bb-input-phone-ui>\n        </div>\n      </form>\n    </section>\n    <section class=\"showcase__section\">\n      <h1>Other examples</h1>\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Country Code</th>\n            <th scope=\"col\">Unformatted Number</th>\n            <th scope=\"col\">Formatted Number</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>CA</td>\n            <td>16045555555</td>\n            <td>{{ '16045555555' | phoneNumber: 'BT' }}</td>\n          </tr>\n          <tr>\n            <td>NL</td>\n            <td>0612345622</td>\n            <td>{{ '0612345622' | phoneNumber: 'NL' }}</td>\n          </tr>\n          <tr>\n            <td>GB</td>\n            <td>07744556677</td>\n            <td>{{ '07744556677' | phoneNumber: 'GB' }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </section>\n  </div>\n</div>\n", components: [{ type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i2__namespace$d.InputPhoneComponent, selector: "bb-input-phone-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "ariaLabel", "autocomplete", "countryList", "dropdownPosition", "clearable", "searchable", "defaultCountryIsoCode", "enableCountryCode"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "phoneNumber": i1__namespace$I.PhoneNumberPipe } });
    InputPhoneShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputPhoneShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPhoneShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-phone-ui-showcase',
                        templateUrl: './input-phone-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputPhoneShowcaseModule = /** @class */ (function () {
        function InputPhoneShowcaseModule() {
        }
        return InputPhoneShowcaseModule;
    }());
    InputPhoneShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPhoneShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputPhoneShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPhoneShowcaseModule, declarations: [InputPhoneShowcaseComponent], imports: [i4$1.CommonModule,
            i2$h.InputPhoneModule,
            i2$j.InputTextModule,
            i3$2.InputValidationMessageModule,
            i1$N.ReactiveFormsModule,
            i1$w.PhoneNumberModule] });
    InputPhoneShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPhoneShowcaseModule, imports: [[
                i4$1.CommonModule,
                i2$h.InputPhoneModule,
                i2$j.InputTextModule,
                i3$2.InputValidationMessageModule,
                i1$N.ReactiveFormsModule,
                i1$w.PhoneNumberModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputPhoneShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4$1.CommonModule,
                            i2$h.InputPhoneModule,
                            i2$j.InputTextModule,
                            i3$2.InputValidationMessageModule,
                            i1$N.ReactiveFormsModule,
                            i1$w.PhoneNumberModule,
                        ],
                        declarations: [InputPhoneShowcaseComponent],
                        entryComponents: [InputPhoneShowcaseComponent],
                    }]
            }] });

    var InputRadioGroupShowcaseComponent = /** @class */ (function () {
        function InputRadioGroupShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.paymentType = 'US_FOREIGN_WIRE';
            this.bank = 'ABN';
            this.radiosTemplateData = [
                {
                    label: 'ABN AMRO Bank',
                    value: 'ABN',
                },
                {
                    label: 'ING Bank',
                    value: 'ING',
                },
            ];
            this.radioGroupForm = this.formBuilder.group({
                accountType: [{ value: '', disabled: false }, i1$N.Validators.required],
            });
        }
        InputRadioGroupShowcaseComponent.prototype.onRadioTemplateFormSubmit = function (form) {
            console.log(form.value);
        };
        return InputRadioGroupShowcaseComponent;
    }());
    InputRadioGroupShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRadioGroupShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputRadioGroupShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputRadioGroupShowcaseComponent, selector: "bb-input-radio-group-ui-showcase", ngImport: i0__namespace, template: "<!-- Reactive form -->\n<div class=\"bb-block bb-block--xl\">\n  <form [formGroup]=\"radioGroupForm\">\n    <bb-input-radio-group-ui\n      [required]=\"true\"\n      aria-labelledby=\"bb-account-type\"\n      formControlName=\"accountType\"\n      [attr.data-role]=\"'radio-group'\"\n      [label]=\"'Regular'\"\n    >\n      <bb-input-radio-ui value=\"cr\" label=\"Label\"> </bb-input-radio-ui>\n      <bb-input-radio-ui value=\"dt\" label=\"Label 2\"> </bb-input-radio-ui>\n    </bb-input-radio-group-ui>\n  </form>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <!-- Template driven form -->\n  <form name=\"radiotemplateForm\" #f=\"ngForm\" (ngSubmit)=\"onRadioTemplateFormSubmit(f)\">\n    <bb-input-radio-group-ui [(ngModel)]=\"paymentType\" [required]=\"true\" name=\"test\" label=\"With custom label\">\n      <bb-input-radio-ui [labelTemplate]=\"customLabelTemplate1\" value=\"US_FOREIGN_WIRE1\"></bb-input-radio-ui>\n      <bb-input-radio-ui [labelTemplate]=\"customLabelTemplate2\" value=\"US_FOREIGN_WIRE2\"></bb-input-radio-ui>\n    </bb-input-radio-group-ui>\n  </form>\n\n  <ng-template #customLabelTemplate1>\n    <div>\n      <span class=\"bb-block\"> Label with sub text </span>\n      <span class=\"bb-text-support bb-text-default bb-subtitle\"> Help text goes here </span>\n    </div>\n  </ng-template>\n  <ng-template #customLabelTemplate2>\n    <div>\n      <span class=\"bb-block\"> Label with sub text </span>\n      <span class=\"bb-text-support bb-text-default bb-subtitle\">\n        Help text for the second label goes here and wraps when needed.\n      </span>\n    </div>\n  </ng-template>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <!-- Template driven form -->\n  <form name=\"radiotemplateForm\" #f=\"ngForm\" (ngSubmit)=\"onRadioTemplateFormSubmit(f)\">\n    <bb-input-radio-group-ui [(ngModel)]=\"bank\" [required]=\"true\" name=\"test\" label=\"With custom label and context\">\n      <bb-input-radio-ui\n        *ngFor=\"let radioData of radiosTemplateData\"\n        [labelTemplate]=\"customLabelTemplateWithData\"\n        [labelTemplateContext]=\"radioData.label\"\n        [value]=\"radioData.value\"\n      ></bb-input-radio-ui>\n    </bb-input-radio-group-ui>\n  </form>\n\n  <ng-template #customLabelTemplateWithData let-context=\"labelTemplateContext\">\n    <div>\n      <span class=\"bb-block\">\n        {{ context }}\n      </span>\n    </div>\n  </ng-template>\n  Selected Bank: {{ bank }}\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-input-radio-group-ui\n    [required]=\"true\"\n    name=\"test\"\n    verticalAlign=\"top\"\n    label=\"With radio vertical aligned to the top\"\n  >\n    <bb-input-radio-ui\n      *ngFor=\"let radioData of radiosTemplateData\"\n      [labelTemplate]=\"customLabelTemplateVerticalAlignedTop\"\n      [labelTemplateContext]=\"radioData.label\"\n      [value]=\"radioData.value\"\n    ></bb-input-radio-ui>\n  </bb-input-radio-group-ui>\n\n  <ng-template #customLabelTemplateVerticalAlignedTop let-context=\"labelTemplateContext\">\n    <div>\n      <span class=\"bb-block\">\n        {{ context }} <br />\n        more content <br />\n        even more content\n      </span>\n    </div>\n  </ng-template>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-input-radio-group-ui\n    [required]=\"true\"\n    name=\"test\"\n    verticalAlign=\"bottom\"\n    label=\"With radio vertical aligned to the bottom\"\n  >\n    <bb-input-radio-ui\n      *ngFor=\"let radioData of radiosTemplateData\"\n      [labelTemplate]=\"customLabelTemplateVerticalAlignedBottom\"\n      [labelTemplateContext]=\"radioData.label\"\n      [value]=\"radioData.value\"\n    ></bb-input-radio-ui>\n  </bb-input-radio-group-ui>\n\n  <ng-template #customLabelTemplateVerticalAlignedBottom let-context=\"labelTemplateContext\">\n    <div>\n      <span class=\"bb-block\">\n        {{ context }} <br />\n        more content <br />\n        even more content\n      </span>\n    </div>\n  </ng-template>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-input-radio-group-ui\n    [required]=\"true\"\n    name=\"test\"\n    verticalAlign=\"middle\"\n    label=\"With radio vertical aligned to the middle\"\n  >\n    <bb-input-radio-ui\n      *ngFor=\"let radioData of radiosTemplateData\"\n      [labelTemplate]=\"customLabelTemplateVerticalAlignedMiddle\"\n      [labelTemplateContext]=\"radioData.label\"\n      [value]=\"radioData.value\"\n    ></bb-input-radio-ui>\n  </bb-input-radio-group-ui>\n\n  <ng-template #customLabelTemplateVerticalAlignedMiddle let-context=\"labelTemplateContext\">\n    <div>\n      <span class=\"bb-block\">\n        {{ context }} <br />\n        more content <br />\n        even more content\n      </span>\n    </div>\n  </ng-template>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <form [formGroup]=\"radioGroupForm\">\n    <bb-input-radio-group-ui\n      [required]=\"true\"\n      aria-labelledby=\"bb-account-type\"\n      formControlName=\"accountType\"\n      label=\"Horizontal Regular\"\n      [horizontal]=\"true\"\n    >\n      <bb-input-radio-ui value=\"cr\" label=\"Label\"> </bb-input-radio-ui>\n      <bb-input-radio-ui value=\"dt\" label=\"Label\"> </bb-input-radio-ui>\n    </bb-input-radio-group-ui>\n  </form>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-input-radio-group-ui [required]=\"true\" aria-labelledby=\"bb-account-type\" label=\"Some items disabled\">\n    <bb-input-radio-ui value=\"cr\" label=\"Label 1\"> </bb-input-radio-ui>\n    <bb-input-radio-ui value=\"dt\" [disabled]=\"true\" label=\"Label 2 (disabled)\"> </bb-input-radio-ui>\n    <bb-input-radio-ui value=\"aa\" [disabled]=\"true\" label=\"Label 3 (disabled)\"> </bb-input-radio-ui>\n    <bb-input-radio-ui value=\"xx\" label=\"Label 4\"> </bb-input-radio-ui>\n  </bb-input-radio-group-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <bb-input-radio-group-ui [required]=\"true\" aria-labelledby=\"bb-account-type\" label=\"All disabled\" [disabled]=\"true\">\n    <bb-input-radio-ui value=\"cr\" label=\"Label 1\"> </bb-input-radio-ui>\n    <bb-input-radio-ui value=\"dt\" label=\"Label 2\"> </bb-input-radio-ui>\n    <bb-input-radio-ui value=\"aa\" label=\"Label 3\"> </bb-input-radio-ui>\n    <bb-input-radio-ui value=\"xx\" label=\"Label 4\"> </bb-input-radio-ui>\n  </bb-input-radio-group-ui>\n</div>\n", components: [{ type: i2__namespace$1.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i2__namespace$1.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1__namespace$2.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    InputRadioGroupShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputRadioGroupShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRadioGroupShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-radio-group-ui-showcase',
                        templateUrl: './input-radio-group-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputRadioGroupShowcaseModule = /** @class */ (function () {
        function InputRadioGroupShowcaseModule() {
        }
        return InputRadioGroupShowcaseModule;
    }());
    InputRadioGroupShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRadioGroupShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputRadioGroupShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRadioGroupShowcaseModule, declarations: [InputRadioGroupShowcaseComponent], imports: [i4$1.CommonModule, i2$i.InputRadioGroupModule, i1$N.ReactiveFormsModule, i1$N.FormsModule] });
    InputRadioGroupShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRadioGroupShowcaseModule, imports: [[i4$1.CommonModule, i2$i.InputRadioGroupModule, i1$N.ReactiveFormsModule, i1$N.FormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRadioGroupShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$i.InputRadioGroupModule, i1$N.ReactiveFormsModule, i1$N.FormsModule],
                        declarations: [InputRadioGroupShowcaseComponent],
                        entryComponents: [InputRadioGroupShowcaseComponent],
                    }]
            }] });

    var InputRangeShowcaseComponent = /** @class */ (function () {
        function InputRangeShowcaseComponent(fb) {
            this.fb = fb;
            this.form = this.fb.group({
                range1: this.fb.group({
                    min: [-10, i1$N.Validators.min(10)],
                    max: [100],
                }, {
                    validator: function (g) {
                        var errors = g.get('min').errors;
                        return errors ? Object.assign({}, errors) : null;
                    },
                }),
                range2: this.fb.group({
                    min: [30],
                    max: [33, i1$N.Validators.max(40)],
                }, {
                    validator: function (g) {
                        var errors = g.get('max').errors;
                        return errors ? Object.assign({}, errors) : null;
                    },
                }),
                range3: this.fb.group({
                    min: [2, i1$N.Validators.min(0)],
                    max: [5, i1$N.Validators.max(10)],
                }, {
                    validator: function (g) {
                        var min = g.get('min').errors;
                        var max = g.get('max').errors;
                        return min || max ? Object.assign(Object.assign({}, min), max) : null;
                    },
                }),
            });
            this.range4Min = 5;
            this.range4Max = 7;
        }
        return InputRangeShowcaseComponent;
    }());
    InputRangeShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRangeShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputRangeShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputRangeShowcaseComponent, selector: "bb-input-range-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <ng-container [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <h3>Range 1</h3>\n        <div class=\"sr-only\" id=\"input-range-label-one\">Two inputs for setting range between two values</div>\n        <div bbInputRange class=\"bb-stack bb-stack--align-top\" formGroupName=\"range1\">\n          <div class=\"bb-stack__item\">\n            <bb-input-number-ui\n              [aria-describedby]=\"'input-range-error-one-min'\"\n              [aria-labelledby]=\"'input-range-label-one'\"\n              bbInputRangeMin\n              label=\"Minimum\"\n              formControlName=\"min\"\n            ></bb-input-number-ui>\n            <bb-input-validation-message-ui\n              *ngIf=\"form.get('range1')?.errors as errors\"\n              [showErrors]=\"form.get('range1')?.touched\"\n              [id]=\"'input-range-error-one-min'\"\n            >\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item\" *ngIf=\"errors?.min as min\">Minimum value is {{ min.min }}</div>\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n          <div>\n            <bb-input-number-ui\n              [aria-describedby]=\"'input-range-error-one-max'\"\n              bbInputRangeMax\n              label=\"Maximum\"\n              formControlName=\"max\"\n            ></bb-input-number-ui>\n            <bb-input-validation-message-ui\n              *ngIf=\"form.get('range1')?.errors as errors\"\n              [showErrors]=\"form.get('range1')?.touched\"\n              [id]=\"'input-range-error-one-max'\"\n            >\n              <div class=\"bb-stack\">\n                <div *ngIf=\"errors?.max as max\">Maximum value is {{ max.max }}</div>\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <h3>Range 2</h3>\n        <div bbInputRange class=\"bb-stack bb-stack--align-top\" formGroupName=\"range2\">\n          <div class=\"bb-stack__item\">\n            <bb-input-number-ui\n              [aria-describedby]=\"'input-range-error-two-min'\"\n              bbInputRangeMin\n              label=\"Minimum\"\n              formControlName=\"min\"\n            ></bb-input-number-ui>\n            <bb-input-validation-message-ui\n              *ngIf=\"form.get('range2')?.errors as errors\"\n              [showErrors]=\"form.get('range2')?.touched\"\n              [id]=\"'input-range-error-two-min'\"\n            >\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item\" *ngIf=\"errors?.min as min\">Minimum value is {{ min.min }}</div>\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n          <div>\n            <bb-input-number-ui\n              [aria-describedby]=\"'input-range-error-two-max'\"\n              bbInputRangeMax\n              label=\"Maximum\"\n              formControlName=\"max\"\n            ></bb-input-number-ui>\n            <bb-input-validation-message-ui\n              *ngIf=\"form.get('range2')?.errors as errors\"\n              [showErrors]=\"form.get('range2')?.touched\"\n              [id]=\"'input-range-error-two-max'\"\n            >\n              <div class=\"bb-stack\">\n                <div *ngIf=\"errors?.max as max\">Maximum value is {{ max.max }}</div>\n              </div>\n            </bb-input-validation-message-ui>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"form-group\">\n      <h3>Range 3</h3>\n      <div bbInputRange class=\"bb-stack bb-stack--align-top\">\n        <div class=\"bb-stack__item\">\n          <bb-input-number-ui\n            [aria-describedby]=\"'input-range-error-three-min'\"\n            bbInputRangeMin\n            [formControl]=\"form.get('range3')?.get('min')\"\n            label=\"Minimum\"\n          ></bb-input-number-ui>\n          <bb-input-validation-message-ui\n            *ngIf=\"form.get('range3')?.errors as errors\"\n            [showErrors]=\"form.get('range3')?.touched\"\n            [id]=\"'input-range-error-three-min'\"\n          >\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\" *ngIf=\"errors?.min as min\">Minimum value is {{ min.min }}</div>\n            </div>\n          </bb-input-validation-message-ui>\n        </div>\n        <div>\n          <bb-input-number-ui\n            [aria-describedby]=\"'input-range-error-three-max'\"\n            bbInputRangeMax\n            [formControl]=\"form.get('range3')?.get('max')\"\n            label=\"Maximum\"\n          ></bb-input-number-ui>\n          <bb-input-validation-message-ui\n            *ngIf=\"form.get('range3')?.errors as errors\"\n            [showErrors]=\"form.get('range3')?.touched\"\n            [id]=\"'input-range-error-three-max'\"\n          >\n            <div class=\"bb-stack\">\n              <div *ngIf=\"errors?.max as max\">Maximum value is {{ max.max }}</div>\n            </div>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"bb-block--md\">\n      <bb-button-ui (click)=\"form.disable()\" *ngIf=\"form.enabled; else enable\">Disable</bb-button-ui>\n      <ng-template #enable>\n        <bb-button-ui (click)=\"form?.enable()\">Enable</bb-button-ui>\n      </ng-template>\n    </div>\n\n    <div class=\"form-group\">\n      <h3>Range 4</h3>\n      <div bbInputRange class=\"bb-stack\">\n        <bb-input-number-ui\n          class=\"bb-stack__item\"\n          [bbInputRangeMin]=\"form.get('range3')?.value?.min\"\n          [(ngModel)]=\"range4Min\"\n          label=\"Range with template driven form (min)\"\n        ></bb-input-number-ui>\n        <bb-input-number-ui\n          [bbInputRangeMax]=\"form.get('range3')?.value?.max\"\n          [(ngModel)]=\"range4Max\"\n          label=\"Range with template driven form (max)\"\n        ></bb-input-number-ui>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2__namespace$c.InputNumberComponent, selector: "bb-input-number-ui", inputs: ["placeholder", "max", "min", "step", "readonly", "autocomplete", "ariaLabel", "allowNonDigits", "allowNegativeSign"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i2__namespace$5.ButtonComponent, selector: "bb-button-ui", inputs: ["autofocus", "type", "disabled", "buttonSize", "color", "block"] }], directives: [{ type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4__namespace$1.InputRangeDirective, selector: "[bbInputRange]" }, { type: i1__namespace$2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i4__namespace$1.InputRangeMinDirective, selector: "bb-input-number-ui[bbInputRangeMin]", inputs: ["bbInputRangeMin"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace$1.InputRangeMaxDirective, selector: "bb-input-number-ui[bbInputRangeMax]", inputs: ["bbInputRangeMax"] }, { type: i1__namespace$2.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
    InputRangeShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputRangeShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRangeShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-range-ui-showcase',
                        templateUrl: './input-range-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputRangeShowcaseModule = /** @class */ (function () {
        function InputRangeShowcaseModule() {
        }
        return InputRangeShowcaseModule;
    }());
    InputRangeShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRangeShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputRangeShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRangeShowcaseModule, declarations: [InputRangeShowcaseComponent], imports: [i4$1.CommonModule,
            i4.InputRangeModule,
            i2$f.InputNumberModule,
            i1$N.ReactiveFormsModule,
            i3$2.InputValidationMessageModule,
            i2$2.ButtonModule,
            i1$N.FormsModule] });
    InputRangeShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRangeShowcaseModule, imports: [[
                i4$1.CommonModule,
                i4.InputRangeModule,
                i2$f.InputNumberModule,
                i1$N.ReactiveFormsModule,
                i3$2.InputValidationMessageModule,
                i2$2.ButtonModule,
                i1$N.FormsModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputRangeShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4$1.CommonModule,
                            i4.InputRangeModule,
                            i2$f.InputNumberModule,
                            i1$N.ReactiveFormsModule,
                            i3$2.InputValidationMessageModule,
                            i2$2.ButtonModule,
                            i1$N.FormsModule,
                        ],
                        declarations: [InputRangeShowcaseComponent],
                        entryComponents: [InputRangeShowcaseComponent],
                    }]
            }] });

    var InputTextShowcaseComponent = /** @class */ (function () {
        function InputTextShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.test = 'egy';
            this.vForm = this.formBuilder.group({
                inputText: [''],
                inputText2: [''],
                inputText3: [''],
                inputText4: [''],
            });
        }
        InputTextShowcaseComponent.prototype.isFieldValid = function (fieldName) {
            var _a;
            var control = (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.get(fieldName);
            return control && (control.valid || control.untouched);
        };
        return InputTextShowcaseComponent;
    }());
    InputTextShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTextShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputTextShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputTextShowcaseComponent, selector: "bb-input-text-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"vForm\">\n      <p>\n        <bb-input-text-ui\n          [id]=\"'inputText'\"\n          [attr.data-role]=\"'input-text'\"\n          label=\"Enabled text input label\"\n          formControlName=\"inputText\"\n          [readonly]=\"false\"\n          [aria-invalid]=\"vForm && vForm.invalid\"\n          placeholder=\"Please enter a value, at most 35 chars...\"\n          [maxLength]=\"35\"\n          [autocomplete]=\"'name'\"\n        >\n        </bb-input-text-ui>\n      </p>\n      <p>\n        <bb-input-text-ui\n          [id]=\"'inputTextDisabled'\"\n          [attr.data-role]=\"'input-text-disabled'\"\n          label=\"Disabled text input label\"\n          formControlName=\"inputText2\"\n          [disabled]=\"true\"\n          placeholder=\"Disabled input\"\n        >\n        </bb-input-text-ui>\n      </p>\n      <p>\n        <bb-input-text-ui\n          [id]=\"'inputTextMask3'\"\n          [attr.data-role]=\"'input-text'\"\n          label=\"Text input with a 5-digit mask '00000'\"\n          formControlName=\"inputText3\"\n          [readonly]=\"false\"\n          [aria-invalid]=\"vForm && vForm.invalid\"\n          [mask]=\"'0{5}'\"\n          [maskValidator]=\"true\"\n          placeholder=\"Only up to 5 digits can be entered (e.g., zipcode)\"\n        >\n        </bb-input-text-ui>\n      </p>\n      <p>\n        <bb-input-text-ui\n          [id]=\"'inputTextMask4'\"\n          [attr.data-role]=\"'input-text'\"\n          label=\"Text input with a phone mask '(000) 000-0000'\"\n          formControlName=\"inputText4\"\n          [readonly]=\"false\"\n          [aria-invalid]=\"vForm && vForm.invalid\"\n          [mask]=\"'(000) 000-0000'\"\n          placeholder=\"Only 10 digits can be entered, with/without separators\"\n        >\n        </bb-input-text-ui>\n      </p>\n    </form>\n  </div>\n</div>\n", components: [{ type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    InputTextShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputTextShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTextShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-text-ui-showcase',
                        templateUrl: './input-text-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputTextShowcaseModule = /** @class */ (function () {
        function InputTextShowcaseModule() {
        }
        return InputTextShowcaseModule;
    }());
    InputTextShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTextShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputTextShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTextShowcaseModule, declarations: [InputTextShowcaseComponent], imports: [i4$1.CommonModule, i2$j.InputTextModule, i1$N.ReactiveFormsModule] });
    InputTextShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTextShowcaseModule, imports: [[i4$1.CommonModule, i2$j.InputTextModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTextShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$j.InputTextModule, i1$N.ReactiveFormsModule],
                        declarations: [InputTextShowcaseComponent],
                        entryComponents: [InputTextShowcaseComponent],
                    }]
            }] });

    var InputTimepickerShowcaseComponent = /** @class */ (function () {
        function InputTimepickerShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                time: [''],
            });
            this.timeModel = '';
            this.min = '13:00:00';
            this.max = '14:30:00';
        }
        InputTimepickerShowcaseComponent.prototype.hasError = function (type) {
            var time = this.vForm.get('time');
            if (time !== null && time.errors) {
                return !!time.errors[type];
            }
            return false;
        };
        InputTimepickerShowcaseComponent.prototype.showErrors = function () {
            var time = this.vForm.get('time');
            if (time !== null) {
                return time.errors && !time.valid;
            }
            return null;
        };
        return InputTimepickerShowcaseComponent;
    }());
    InputTimepickerShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTimepickerShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputTimepickerShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputTimepickerShowcaseComponent, selector: "bb-input-timepicker-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <h2>Timepicker with 10 minute step and validation errors</h2>\n  <form [formGroup]=\"vForm\">\n    <bb-input-timepicker-ui\n      id=\"timePicker-validation\"\n      [aria-describedby]=\"'input-timepicker-example-error'\"\n      [readonly]=\"false\"\n      [minuteStep]=\"10\"\n      formControlName=\"time\"\n      [min]=\"min\"\n      [max]=\"max\"\n    >\n    </bb-input-timepicker-ui>\n\n    <bb-input-validation-message-ui [showErrors]=\"showErrors()\" [id]=\"'input-timepicker-example-error'\">\n      <span *ngIf=\"hasError('minTime')\">Time should be after {{ min }}</span>\n      <span *ngIf=\"hasError('maxTime')\">Time should not exceed {{ max }}</span>\n      <span *ngIf=\"hasError('minMaxTime')\">Time should be between {{ min }} and {{ max }}</span>\n    </bb-input-validation-message-ui>\n  </form>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Readonly timepicker</h2>\n  <bb-input-timepicker-ui id=\"timepicker-readonly\" [readonly]=\"true\"></bb-input-timepicker-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Disabled timepicker</h2>\n  <bb-input-timepicker-ui id=\"timepicker-readonly\" [disabled]=\"true\"></bb-input-timepicker-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Small timepicker</h2>\n  <bb-input-timepicker-ui id=\"timepicker-readonly-small\" [size]=\"'small'\"></bb-input-timepicker-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Timepicker with seconds and meridian</h2>\n  <bb-input-timepicker-ui\n    id=\"timepicker-meridian\"\n    [readonly]=\"false\"\n    [seconds]=\"true\"\n    clock=\"12h\"\n    [(ngModel)]=\"timeModel\"\n    [min]=\"min\"\n  >\n  </bb-input-timepicker-ui>\n</div>\n", components: [{ type: i2__namespace$p.InputTimepickerComponent, selector: "bb-input-timepicker-ui", inputs: ["hourStep", "clock", "minuteStep", "readonly", "seconds", "secondStep", "min", "max", "autocomplete"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
    InputTimepickerShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
        /**
         * @name InputTimepickerShowcaseComponent
         *
         * @description
         * Component that displays multiple examples with the timepicker component.
         */
    ], InputTimepickerShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTimepickerShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-timepicker-ui-showcase',
                        templateUrl: './input-timepicker-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputTimepickerShowcaseModule = /** @class */ (function () {
        function InputTimepickerShowcaseModule() {
        }
        return InputTimepickerShowcaseModule;
    }());
    InputTimepickerShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTimepickerShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputTimepickerShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTimepickerShowcaseModule, declarations: [InputTimepickerShowcaseComponent], imports: [i4$1.CommonModule, i2$k.InputTimepickerModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule, i1$N.FormsModule] });
    InputTimepickerShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTimepickerShowcaseModule, imports: [[i4$1.CommonModule, i2$k.InputTimepickerModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule, i1$N.FormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputTimepickerShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$k.InputTimepickerModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule, i1$N.FormsModule],
                        declarations: [InputTimepickerShowcaseComponent],
                        entryComponents: [InputTimepickerShowcaseComponent],
                    }]
            }] });

    var InputValidationMessageShowcaseComponent = /** @class */ (function () {
        function InputValidationMessageShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                name: ['', i1$N.Validators.compose([i1$N.Validators.required, i1$N.Validators.minLength(5)])],
            });
        }
        InputValidationMessageShowcaseComponent.prototype.isFieldValid = function (fieldName) {
            var control = this.getControl(fieldName);
            return control && (control.valid || control.untouched);
        };
        InputValidationMessageShowcaseComponent.prototype.getControl = function (fieldName) {
            var _a;
            return (_a = this.vForm) === null || _a === void 0 ? void 0 : _a.controls[fieldName];
        };
        InputValidationMessageShowcaseComponent.prototype.hasError = function (field, type) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors[type];
        };
        InputValidationMessageShowcaseComponent.prototype.hasLengthError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.minlength;
        };
        InputValidationMessageShowcaseComponent.prototype.hasRequiredError = function (field) {
            var fieldControl = this.getControl(field);
            if (!fieldControl || !fieldControl.errors) {
                return;
            }
            return fieldControl.errors.required;
        };
        return InputValidationMessageShowcaseComponent;
    }());
    InputValidationMessageShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputValidationMessageShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputValidationMessageShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputValidationMessageShowcaseComponent, selector: "bb-input-validation-message-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <bb-input-text-ui\n        label=\"Validation on Blur\"\n        formControlName=\"name\"\n        aria-describedby=\"input-validation-example-error\"\n      >\n      </bb-input-text-ui>\n      <bb-input-validation-message-ui [showErrors]=\"!isFieldValid('name')\" [id]=\"'input-validation-example-error'\">\n        <span *ngIf=\"hasRequiredError('name')\"> Field is required. </span>\n        <span *ngIf=\"hasLengthError('name')\"> Field has minlength of 5. </span>\n      </bb-input-validation-message-ui>\n    </div>\n  </div>\n</form>\n", components: [{ type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    InputValidationMessageShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputValidationMessageShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputValidationMessageShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-validation-message-ui-showcase',
                        templateUrl: './input-validation-message-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputValidationMessageShowcaseModule = /** @class */ (function () {
        function InputValidationMessageShowcaseModule() {
        }
        return InputValidationMessageShowcaseModule;
    }());
    InputValidationMessageShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputValidationMessageShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputValidationMessageShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputValidationMessageShowcaseModule, declarations: [InputValidationMessageShowcaseComponent], imports: [i4$1.CommonModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule, i2$j.InputTextModule] });
    InputValidationMessageShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputValidationMessageShowcaseModule, imports: [[i4$1.CommonModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule, i2$j.InputTextModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputValidationMessageShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i3$2.InputValidationMessageModule, i1$N.ReactiveFormsModule, i2$j.InputTextModule],
                        declarations: [InputValidationMessageShowcaseComponent],
                        entryComponents: [InputValidationMessageShowcaseComponent],
                    }]
            }] });

    var ItemLogShowcaseComponent = /** @class */ (function () {
        function ItemLogShowcaseComponent() {
            this.pendingRecords = [
                {
                    userFullName: 'Robin Green',
                    status: 'APPROVED',
                    createdAt: '2018-01-22T13:44:02Z',
                },
            ];
            this.rejectedRecords = [
                {
                    userFullName: 'Green Goblet',
                    status: 'REJECTED',
                    createdAt: '2018-01-23T13:44:02Z',
                    reason: 'Limit exceeded',
                },
                {
                    userFullName: 'Robin Green',
                    status: 'APPROVED',
                    createdAt: '2018-01-22T13:44:02Z',
                },
            ];
            this.successRecords = [
                {
                    userFullName: 'Green Goblet',
                    status: 'APPROVED',
                    createdAt: '2018-01-23T13:44:02Z',
                },
                {
                    userFullName: 'Robin Green',
                    status: 'APPROVED',
                    createdAt: '2018-01-22T13:44:02Z',
                },
            ];
        }
        return ItemLogShowcaseComponent;
    }());
    ItemLogShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ItemLogShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ItemLogShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ItemLogShowcaseComponent, selector: "bb-item-log-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <h2>Pending item log</h2>\n  <bb-item-log-ui [records]=\"pendingRecords\" [isPending]=\"true\"></bb-item-log-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Success item log</h2>\n  <bb-item-log-ui [records]=\"successRecords\"></bb-item-log-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Rejected item log</h2>\n  <bb-item-log-ui [records]=\"rejectedRecords\"></bb-item-log-ui>\n</div>\n<div class=\"bb-block bb-block--lg\">\n  <h2>Custom item log with description</h2>\n  <bb-item-log-ui [records]=\"rejectedRecords\">\n    <ng-template bbItemLogRecord let-record>\n      <bb-icon-ui\n        class=\"bb-item-log-record__icon\"\n        size=\"md\"\n        [name]=\"record?.status === 'REJECTED' ? 'cancel' : 'success'\"\n        [color]=\"record?.status === 'REJECTED' ? 'danger' : 'success'\"\n      ></bb-icon-ui>\n      <div class=\"bb-item-log-record__details\">\n        <span class=\"bb-text-bold\">\n          {{ record?.status | titlecase }}\n        </span>\n        <ng-container> by {{ record?.userFullName }}</ng-container>\n        <div class=\"bb-item-log-record__time\">\n          <time> {{ record?.createdAt | date }}</time>\n          <ng-container> at</ng-container>\n          <time> {{ record?.createdAt | date: 'shortTime' }}</time>\n        </div>\n        <div class=\"bb-stack\" *ngIf=\"record?.reason\">\n          <bb-icon-ui color=\"secondary\" name=\"forum\" size=\"md\" class=\"bb-stack__item\"></bb-icon-ui>\n          <div>\n            User hasn\u2019t posted all his/her details to complete the payment. <br />\n            Unfortunately, we will need to request more payment details now <br />\n            to approve this transaction.\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </bb-item-log-ui>\n</div>\n", components: [{ type: i1__namespace$L.ItemLogComponent, selector: "bb-item-log-ui", inputs: ["isPending", "records"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i1__namespace$L.ItemLogRecordDirective, selector: "ng-template[bbItemLogRecord]" }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "titlecase": i4__namespace.TitleCasePipe, "date": i4__namespace.DatePipe } });
    ItemLogShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ItemLogShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ItemLogShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-item-log-ui-showcase',
                        templateUrl: './item-log-showcase.component.html',
                    }]
            }] });

    var ItemLogShowcaseModule = /** @class */ (function () {
        function ItemLogShowcaseModule() {
        }
        return ItemLogShowcaseModule;
    }());
    ItemLogShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ItemLogShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ItemLogShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ItemLogShowcaseModule, declarations: [ItemLogShowcaseComponent], imports: [i4$1.CommonModule, i1$l.ItemLogModule, i2$9.IconModule] });
    ItemLogShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ItemLogShowcaseModule, imports: [[i4$1.CommonModule, i1$l.ItemLogModule, i2$9.IconModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ItemLogShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$l.ItemLogModule, i2$9.IconModule],
                        declarations: [ItemLogShowcaseComponent],
                        entryComponents: [ItemLogShowcaseComponent],
                    }]
            }] });

    var ListMultipleSelectShowcaseComponent = /** @class */ (function () {
        function ListMultipleSelectShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.listMultipleSelectItemsConfig = {
                'List Item 1': {},
                'List Item 2': {
                    items: {
                        q2: {
                            icon: 'warning',
                        },
                    },
                },
            };
            this.vForm = this.formBuilder.group({
                listMultipleSelect: this.formBuilder.group({
                    'List item 1': true,
                    'List item 2': this.formBuilder.group({
                        'Sub item 1': false,
                        'Sub item 2': true,
                        'Sub item 3': this.formBuilder.group({
                            'Sub sub item 1': { value: true, disabled: false },
                            'Disabled sub item 2': { value: false, disabled: true },
                        }),
                    }),
                }),
            });
        }
        ListMultipleSelectShowcaseComponent.prototype.onListMultipleSelectClearAll = function ($event) {
            $event.preventDefault();
            if (this.vForm) {
                this.vForm.controls['listMultipleSelect'].patchValue({
                    i1: false,
                    i2: false,
                    i3: {
                        q1: false,
                        q2: false,
                    },
                });
            }
        };
        return ListMultipleSelectShowcaseComponent;
    }());
    ListMultipleSelectShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ListMultipleSelectShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ListMultipleSelectShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ListMultipleSelectShowcaseComponent, selector: "bb-list-multiple-select-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <bb-list-multiple-select-ui\n    formGroupName=\"listMultipleSelect\"\n    [config]=\"listMultipleSelectItemsConfig\"\n    aria-label=\"List multiple select\"\n  >\n    <ng-template bbListMultipleSelectAction>\n      <a href=\"\" (click)=\"onListMultipleSelectClearAll($event)\">Clear All</a>\n    </ng-template>\n  </bb-list-multiple-select-ui>\n</form>\n", components: [{ type: i2__namespace$e.ListMultipleSelectComponent, selector: "bb-list-multiple-select-ui", inputs: ["config"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i2__namespace$e.ListMultipleSelectActionDirective, selector: "ng-template[bbListMultipleSelectAction]" }] });
    ListMultipleSelectShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ListMultipleSelectShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ListMultipleSelectShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-list-multiple-select-ui-showcase',
                        templateUrl: './list-multiple-select-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var ListMultipleSelectShowcaseModule = /** @class */ (function () {
        function ListMultipleSelectShowcaseModule() {
        }
        return ListMultipleSelectShowcaseModule;
    }());
    ListMultipleSelectShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ListMultipleSelectShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ListMultipleSelectShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ListMultipleSelectShowcaseModule, declarations: [ListMultipleSelectShowcaseComponent], imports: [i4$1.CommonModule, i2$l.ListMultipleSelectModule, i1$N.ReactiveFormsModule] });
    ListMultipleSelectShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ListMultipleSelectShowcaseModule, imports: [[i4$1.CommonModule, i2$l.ListMultipleSelectModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ListMultipleSelectShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$l.ListMultipleSelectModule, i1$N.ReactiveFormsModule],
                        declarations: [ListMultipleSelectShowcaseComponent],
                        entryComponents: [ListMultipleSelectShowcaseComponent],
                    }]
            }] });

    var LoadButtonShowcaseComponent = /** @class */ (function () {
        function LoadButtonShowcaseComponent() {
            this.showLoadingIndicator = false;
            this.isButtonLoading = false;
            this.isLoadMore = [false, false, false];
            this.loadMoreParams = [{ from: 0 }, { from: 0 }, { from: 0 }];
            this.localDisabled = false;
        }
        LoadButtonShowcaseComponent.prototype.onLoadButtonPress = function () {
            var _this = this;
            if (this.isButtonLoading) {
                return;
            }
            this.isButtonLoading = true;
            setTimeout(function () {
                _this.isButtonLoading = false;
            }, 1500);
        };
        LoadButtonShowcaseComponent.prototype.setLoadingParams = function (params) {
            var _this = this;
            this.isLoadMore[0] = true;
            this.loadMoreParams[0] = params;
            window.setTimeout(function () {
                _this.isLoadMore[0] = false;
            }, 1500);
        };
        LoadButtonShowcaseComponent.prototype.setLoadingParamsWithIcon = function (params) {
            var _this = this;
            this.isLoadMore[1] = true;
            this.loadMoreParams[1] = params;
            window.setTimeout(function () {
                _this.isLoadMore[1] = false;
            }, 1500);
        };
        LoadButtonShowcaseComponent.prototype.setLoadingParamsOnlyIcon = function (params) {
            var _this = this;
            this.isLoadMore[2] = true;
            this.loadMoreParams[2] = params;
            window.setTimeout(function () {
                _this.isLoadMore[2] = false;
            }, 1500);
        };
        return LoadButtonShowcaseComponent;
    }());
    LoadButtonShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadButtonShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LoadButtonShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoadButtonShowcaseComponent, selector: "bb-load-button-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-toolbar\">\n  <div class=\"text-center\">\n    <bb-load-button-ui\n      color=\"primary\"\n      [isLoading]=\"isLoadMore[0]\"\n      [size]=\"8\"\n      [from]=\"loadMoreParams[0]?.from\"\n      [totalCount]=\"48\"\n      (paramChange)=\"setLoadingParams($event)\"\n      class=\"m-3\"\n      [disabled]=\"localDisabled\"\n    >\n      Load more\n    </bb-load-button-ui>\n    <p class=\"mt-3\">Counter (max 5): {{ loadMoreParams[0]?.from }}</p>\n    <button (click)=\"localDisabled = !localDisabled\">disable load button</button>\n  </div>\n  <div class=\"text-center\">\n    <bb-load-button-ui\n      class=\"m-3\"\n      color=\"primary\"\n      [isLoading]=\"isLoadMore[1]\"\n      [size]=\"8\"\n      [from]=\"loadMoreParams[1]?.from\"\n      [totalCount]=\"48\"\n      (paramChange)=\"setLoadingParamsWithIcon($event)\"\n    >\n      <span>Download file</span>\n      <bb-icon-ui name=\"download\" size=\"lg\" cropped></bb-icon-ui>\n    </bb-load-button-ui>\n    <p class=\"mt-3\">Counter (max 5): {{ loadMoreParams[1]?.from }}</p>\n  </div>\n  <div class=\"text-center\">\n    <bb-load-button-ui\n      class=\"m-3\"\n      color=\"primary\"\n      [isLoading]=\"isLoadMore[2]\"\n      [size]=\"8\"\n      [from]=\"loadMoreParams[2]?.from\"\n      [totalCount]=\"48\"\n      (paramChange)=\"setLoadingParamsOnlyIcon($event)\"\n      [circle]=\"true\"\n    >\n      <bb-icon-ui name=\"search\" size=\"lg\"></bb-icon-ui>\n    </bb-load-button-ui>\n    <p class=\"mt-3\">Counter (max 5): {{ loadMoreParams[2]?.from }}</p>\n  </div>\n</div>\n", components: [{ type: i1__namespace$i.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }] });
    LoadButtonShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], LoadButtonShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadButtonShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-load-button-ui-showcase',
                        templateUrl: './load-button-showcase.component.html',
                    }]
            }] });

    var LoadButtonShowcaseModule = /** @class */ (function () {
        function LoadButtonShowcaseModule() {
        }
        return LoadButtonShowcaseModule;
    }());
    LoadButtonShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadButtonShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    LoadButtonShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadButtonShowcaseModule, declarations: [LoadButtonShowcaseComponent], imports: [i4$1.CommonModule, i1$m.LoadButtonModule, i2$9.IconModule] });
    LoadButtonShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadButtonShowcaseModule, imports: [[i4$1.CommonModule, i1$m.LoadButtonModule, i2$9.IconModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadButtonShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$m.LoadButtonModule, i2$9.IconModule],
                        declarations: [LoadButtonShowcaseComponent],
                        entryComponents: [LoadButtonShowcaseComponent],
                    }]
            }] });

    var LoadingIndicatorShowcaseComponent = /** @class */ (function () {
        function LoadingIndicatorShowcaseComponent() {
            this.loadingIndicators = [
                {
                    title: 'Small',
                    size: 'sm',
                    text: null,
                },
                {
                    title: 'Medium',
                    size: 'md',
                    text: null,
                },
                {
                    title: 'Large',
                    size: 'lg',
                    text: null,
                },
                {
                    title: 'Page loader',
                    size: 'lg',
                    text: 'Loading...',
                },
            ];
        }
        return LoadingIndicatorShowcaseComponent;
    }());
    LoadingIndicatorShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadingIndicatorShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LoadingIndicatorShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LoadingIndicatorShowcaseComponent, selector: "bb-loading-indicator-ui-showcase", ngImport: i0__namespace, template: "<ng-container *ngFor=\"let loadingIndicator of loadingIndicators\">\n  <div class=\"bb-block bb-block--lg\">\n    <h4 class=\"bb-block bb-block--lg\">{{ loadingIndicator.title }}</h4>\n    <bb-loading-indicator-ui\n      [loaderSize]=\"loadingIndicator.size\"\n      [text]=\"loadingIndicator.text\"\n    ></bb-loading-indicator-ui>\n  </div>\n</ng-container>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 class=\"bb-block bb-block--lg\">Inline</h4>\n  <p>\n    Some text\n    <bb-loading-indicator-ui [inline]=\"true\" loaderSize=\"sm\"></bb-loading-indicator-ui>\n  </p>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <h4 class=\"bb-block bb-block--lg\">Inline with text</h4>\n  <p>\n    Lorem ipsum\n    <bb-loading-indicator-ui [inline]=\"true\" loaderSize=\"sm\" text=\"Loading...\"></bb-loading-indicator-ui>\n  </p>\n</div>\n", components: [{ type: i1__namespace$j.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    LoadingIndicatorShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], LoadingIndicatorShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadingIndicatorShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-loading-indicator-ui-showcase',
                        templateUrl: './loading-indicator-showcase.component.html',
                    }]
            }] });

    var LoadingIndicatorShowcaseModule = /** @class */ (function () {
        function LoadingIndicatorShowcaseModule() {
        }
        return LoadingIndicatorShowcaseModule;
    }());
    LoadingIndicatorShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadingIndicatorShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    LoadingIndicatorShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadingIndicatorShowcaseModule, declarations: [LoadingIndicatorShowcaseComponent], imports: [i4$1.CommonModule, i1$n.LoadingIndicatorModule] });
    LoadingIndicatorShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadingIndicatorShowcaseModule, imports: [[i4$1.CommonModule, i1$n.LoadingIndicatorModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LoadingIndicatorShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$n.LoadingIndicatorModule],
                        declarations: [LoadingIndicatorShowcaseComponent],
                        entryComponents: [LoadingIndicatorShowcaseComponent],
                    }]
            }] });

    var LogoShowcaseComponent = /** @class */ (function () {
        function LogoShowcaseComponent() {
        }
        return LogoShowcaseComponent;
    }());
    LogoShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    LogoShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: LogoShowcaseComponent, selector: "bb-logo-ui-showcase", ngImport: i0__namespace, template: "<h4>Emblem</h4>\n<div class=\"bb-stack bb-block bb-block--xl row\">\n  <bb-logo-ui type=\"emblem\" class=\"bb-stack__item col-2\"></bb-logo-ui>\n  <span>Backbase</span>\n</div>\n<h4>Full</h4>\n<div class=\"bb-stack bb-block bb-block--xl\">\n  <bb-logo-ui type=\"full\" class=\"bb-stack__item\"></bb-logo-ui>\n</div>\n<h4>Inverse</h4>\n<div class=\"bb-stack row\">\n  <bb-logo-ui type=\"emblem\" [isInverse]=\"true\" class=\"bb-stack__item col-2\"></bb-logo-ui>\n  <span>Backbase</span>\n</div>\n", components: [{ type: i1__namespace$k.LogoComponent, selector: "bb-logo-ui", inputs: ["type", "isInverse"] }] });
    LogoShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], LogoShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-logo-ui-showcase',
                        templateUrl: './logo-showcase.component.html',
                    }]
            }] });

    var LogoShowcaseModule = /** @class */ (function () {
        function LogoShowcaseModule() {
        }
        return LogoShowcaseModule;
    }());
    LogoShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    LogoShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoShowcaseModule, declarations: [LogoShowcaseComponent], imports: [i4$1.CommonModule, i1$o.LogoModule] });
    LogoShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoShowcaseModule, imports: [[i4$1.CommonModule, i1$o.LogoModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: LogoShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$o.LogoModule],
                        declarations: [LogoShowcaseComponent],
                        entryComponents: [LogoShowcaseComponent],
                    }]
            }] });

    var ModalShowcaseComponent = /** @class */ (function () {
        function ModalShowcaseComponent() {
            this.console = console;
            this.smallModal = false;
            this.defaultModal = false;
            this.largeModal = false;
            this.passCodeModal = false;
            this.actionModal = false;
            this.threeBtnModal = false;
            this.leftHeaderModal = false;
            this.scrollableModal = false;
            this.longModal = false;
            this.passwordSize = 5;
            this.charsArray = Array.from(Array(this.passwordSize).keys());
        }
        return ModalShowcaseComponent;
    }());
    ModalShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModalShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ModalShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModalShowcaseComponent, selector: "bb-modal-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-list\">\n  <div class=\"bb-list__item\">\n    <h2>Accessibility of modal header via <code>bb-modal-header-ui</code></h2>\n    <p>\n      The modal header is accessible because <code>bb-modal-header-ui</code> is automatically detected and configured\n      via ARIA attributes by <code>bb-modal-ui</code>.\n    </p>\n    <button bbButton (click)=\"actionModal = true\">Open modal with call to action</button>\n  </div>\n  <div class=\"bb-list__item\">\n    <h2>Accessibility of modal header via <code>aria-lablledby</code></h2>\n    <p>\n      Modal with custom header, that is made accessible using the <code>aria-lablledby</code> property of\n      <code>bb-modal-ui</code>.\n    </p>\n    <button bbButton (click)=\"passCodeModal = true\" [attr.data-role]=\"'modal-with-password'\">\n      Open modal for entering passcode\n    </button>\n  </div>\n  <div class=\"bb-list__item\">\n    <h2>Icon placement to the left in the header</h2>\n    <button bbButton (click)=\"leftHeaderModal = true\" [attr.data-role]=\"'modal-with-header-icon'\">\n      Modal with left header icon\n    </button>\n  </div>\n  <div class=\"bb-list__item\">\n    <h2>Modal with three button for call to action</h2>\n    <button bbButton (click)=\"threeBtnModal = true\" [attr.data-role]=\"'modal-with-3-buttons'\">\n      Open modal with three buttons\n    </button>\n  </div>\n  <div class=\"bb-list__item\">\n    <h2>Modal with big height</h2>\n    <button bbButton (click)=\"longModal = true\" [attr.data-role]=\"'modal-long'\">Open modal with big height</button>\n  </div>\n  <div class=\"bb-list__item\">\n    <h2>Scrollable modal</h2>\n    <button bbButton (click)=\"scrollableModal = true\" [attr.data-role]=\"'modal-scrollable'\">\n      Open scrollable modal\n    </button>\n  </div>\n  <div class=\"bb-list__item\">\n    <h2>Size variants</h2>\n    <div class=\"bb-toolbar\">\n      <button class=\"bb-toolbar__item\" bbButton (click)=\"smallModal = true\" [attr.data-role]=\"'small-modal'\">\n        Open small modal\n      </button>\n      <button class=\"bb-toolbar__item\" bbButton (click)=\"defaultModal = true\" [attr.data-role]=\"'medium-modal'\">\n        Open medium modal\n      </button>\n      <button class=\"bb-toolbar__item\" bbButton (click)=\"largeModal = true\" [attr.data-role]=\"'large-modal'\">\n        Open large modal\n      </button>\n    </div>\n  </div>\n</div>\n\n<!-- Small modal -->\n<bb-modal-ui\n  [isOpen]=\"smallModal\"\n  (cancel)=\"smallModal = false\"\n  (confirm)=\"smallModal = false\"\n  [modalOptions]=\"{ size: 'sm' }\"\n>\n  <bb-modal-header-ui title=\"Discard payment data?\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody> Are you sure to change payment type? Entered data will be lost. </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui confirmText=\"Discard\"></bb-modal-footer-ui>\n</bb-modal-ui>\n\n<!-- Default modal -->\n<bb-modal-ui [isOpen]=\"defaultModal\" (cancel)=\"defaultModal = false\" (confirm)=\"defaultModal = false\">\n  <bb-modal-header-ui title=\"Discard payment data?\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody> Are you sure to change payment type? Entered data will be lost. </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui confirmText=\"Discard\"></bb-modal-footer-ui>\n</bb-modal-ui>\n\n<!-- Large modal -->\n<bb-modal-ui\n  [isOpen]=\"largeModal\"\n  (cancel)=\"largeModal = false\"\n  (confirm)=\"largeModal = false\"\n  [modalOptions]=\"{ size: 'lg' }\"\n>\n  <bb-modal-header-ui title=\"Discard payment data?\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody> Are you sure to change payment type? Entered data will be lost. </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui confirmText=\"Discard\"></bb-modal-footer-ui>\n</bb-modal-ui>\n\n<!-- Modal with action -->\n<bb-modal-ui\n  [isOpen]=\"actionModal\"\n  (cancel)=\"actionModal = false\"\n  (confirm)=\"console.log('action'); actionModal = false\"\n>\n  <bb-modal-header-ui title=\"Discard payment data?\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody> Are you sure to change payment type? Entered data will be lost. </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui confirmText=\"Discard\"></bb-modal-footer-ui>\n</bb-modal-ui>\n\n<p class=\"sr-only\" id=\"customModalLabel\">This is an authorisation dialog</p>\n\n<!-- Modal with passcode -->\n<bb-modal-ui\n  [(isOpen)]=\"passCodeModal\"\n  (confirm)=\"passCodeModal = false\"\n  [modalOptions]=\"{ size: 'lg', ariaLabelledBy: 'customModalLabel', ariaDescribedBy: 'customModalDescription' }\"\n>\n  <form name=\"stepUpForm\">\n    <div class=\"modal-header justify-content-center\" role=\"heading\" aria-level=\"2\" id=\"passCodeModal\">\n      <span class=\"modal-title\"> Authorisation </span>\n    </div>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <div class=\"d-flex justify-content-center text-muted pb-3\" id=\"customModalDescription\">\n          Enter your personal secure code to continue\n        </div>\n        <div class=\"row d-flex justify-content-center\">\n          <div class=\"col-2 col-sm-1 px-2\" *ngFor=\"let inputChar of charsArray\">\n            <input type=\"password\" class=\"form-control px-0 text-center\" [name]=\"'char-' + inputChar\" />\n          </div>\n        </div>\n      </ng-template>\n    </bb-modal-body-ui>\n    <div class=\"modal-footer justify-content-center\">\n      <div class=\"bb-button-bar\">\n        <button bbButton class=\"bb-button-bar__button\" color=\"primary\" (click)=\"passCodeModal = false\">\n          Authorise\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          (click)=\"passCodeModal = false\"\n          data-role=\"cancel\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  </form>\n</bb-modal-ui>\n\n<!-- Modal with left header icon -->\n<bb-modal-ui\n  [isOpen]=\"leftHeaderModal\"\n  (cancel)=\"leftHeaderModal = false\"\n  (confirm)=\"leftHeaderModal = false\"\n  [aria-describedby]=\"'customModalDescription'\"\n>\n  <bb-modal-header-ui [attr.data-role]=\"'modal-header'\">\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui\n              class=\"bb-stack__item\"\n              color=\"warning\"\n              name=\"warning\"\n              [attr.data-role]=\"'warning-icon'\"\n            ></bb-icon-ui>\n            <span class=\"modal-title\" [attr.data-role]=\"'modal-title'\"> One line question with icon? </span>\n          </div>\n        </div>\n        <div class=\"bb-stack__item--push-right\">\n          <div class=\"bb-stack\">\n            <button bbButton class=\"bb-stack__item-sm\" color=\"unstyled\" aria-label=\"print\">\n              <bb-icon-ui color=\"muted\" name=\"print\"></bb-icon-ui>\n            </button>\n            <button bbButton class=\"bb-stack__item-sm\" color=\"unstyled\" aria-label=\"more\">\n              <bb-icon-ui color=\"muted\" name=\"more-vertical\"></bb-icon-ui>\n            </button>\n            <button\n              (click)=\"leftHeaderModal = false\"\n              bbButton\n              class=\"bb-stack__item-sm\"\n              color=\"unstyled\"\n              aria-label=\"close dialog\"\n            >\n              <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui [attr.data-role]=\"'modal-body'\">\n    <ng-template bbCustomModalBody>\n      <p id=\"customModalDescription\">Are you sure to change payment type? Entered data will be lost.</p>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef [attr.data-role]=\"'modal-footer'\">\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button bbButton class=\"bb-button-bar__button\" (click)=\"console.log('Submitted'); leftHeaderModal = false\">\n          Discard\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          (click)=\"console.log('Cancelled'); leftHeaderModal = false\"\n          color=\"secondary\"\n          data-role=\"cancel\"\n        >\n          Cancel\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n\n<!-- Modal with 3 buttons -->\n<bb-modal-ui [isOpen]=\"threeBtnModal\" (cancel)=\"threeBtnModal = false\" (confirm)=\"threeBtnModal = false\">\n  <bb-modal-header-ui title=\"Discard payment data?\" [attr.data-role]=\"'modal-header'\"></bb-modal-header-ui>\n  <bb-modal-body-ui [attr.data-role]=\"'modal-body'\">\n    <ng-template bbCustomModalBody> Are you sure to change payment type? Entered data will be lost. </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui #modalFooterRef [attr.data-role]=\"'modal-footer'\">\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button bbButton class=\"bb-button-bar__button\" (click)=\"threeBtnModal = false\" [attr.data-role]=\"'continue'\">\n          Continue\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          (click)=\"threeBtnModal = false\"\n          [attr.data-role]=\"'back'\"\n        >\n          Back\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          color=\"link\"\n          (click)=\"threeBtnModal = false\"\n          [attr.data-role]=\"'cancel'\"\n        >\n          Cancel\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n\n<!-- Long modal -->\n<bb-modal-ui [isOpen]=\"longModal\" (cancel)=\"longModal = false\" (confirm)=\"longModal = false\">\n  <bb-modal-header-ui title=\"Discard payment data?\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div style=\"height: 1500px\">Are you sure to change payment type?</div>\n      <div>Entered data will be lost.</div>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui confirmText=\"Discard\"></bb-modal-footer-ui>\n</bb-modal-ui>\n\n<!-- Scrollable modal -->\n<bb-modal-ui\n  [isOpen]=\"scrollableModal\"\n  [modalOptions]=\"{ scrollable: true }\"\n  (cancel)=\"scrollableModal = false\"\n  (confirm)=\"scrollableModal = false\"\n>\n  <bb-modal-header-ui title=\"Discard payment data?\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div style=\"height: 1500px\">Are you sure to change payment type?</div>\n      <div>Entered data will be lost.</div>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui confirmText=\"Discard\"></bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$l.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$l.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1__namespace$l.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$l.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace$l.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$l.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1__namespace$l.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }] });
    ModalShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ModalShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModalShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-modal-ui-showcase',
                        templateUrl: './modal-showcase.component.html',
                    }]
            }] });

    var ModalShowcaseModule = /** @class */ (function () {
        function ModalShowcaseModule() {
        }
        return ModalShowcaseModule;
    }());
    ModalShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModalShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ModalShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModalShowcaseModule, declarations: [ModalShowcaseComponent], imports: [i4$1.CommonModule, i1$p.ModalModule, i2$9.IconModule, i2$2.ButtonModule] });
    ModalShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModalShowcaseModule, imports: [[i4$1.CommonModule, i1$p.ModalModule, i2$9.IconModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModalShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$p.ModalModule, i2$9.IconModule, i2$2.ButtonModule],
                        declarations: [ModalShowcaseComponent],
                        entryComponents: [ModalShowcaseComponent],
                    }]
            }] });

    var NotificationShowcaseComponent = /** @class */ (function () {
        function NotificationShowcaseComponent(notificationService, cdRef) {
            this.notificationService = notificationService;
            this.cdRef = cdRef;
        }
        NotificationShowcaseComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            this.notificationsConfig = [
                {
                    btn: {
                        text: 'Launch info notification',
                        color: 'primary',
                        type: 'info',
                    },
                    notification: {
                        header: 'This is the header of notification',
                        message: 'This is the default info notification. It breaks words, so you can have long text here.',
                        modifier: 'info',
                        dismissible: false,
                        ttl: 1500,
                    },
                },
                {
                    btn: {
                        text: 'Launch success notification',
                        color: 'success',
                        type: 'success',
                    },
                    notification: {
                        header: 'This is the header of notification',
                        message: 'This is the default success notification. It breaks words, so you can have long text here.',
                        modifier: 'success',
                        dismissible: true,
                        ttl: 2000,
                    },
                },
                {
                    btn: {
                        text: 'Launch alert notification',
                        color: 'danger',
                        type: 'danger',
                    },
                    notification: {
                        header: 'This is the header of notification',
                        message: 'This is the default error notification. It breaks words, so you can have long text here.',
                        modifier: 'error',
                        dismissible: true,
                        ttl: 10000,
                    },
                },
                {
                    btn: {
                        text: 'Launch warning notification',
                        color: 'primary',
                        type: 'warning',
                    },
                    notification: {
                        ttl: 10000,
                        header: 'This is the header of notification',
                        message: 'This is the default warning notification. It breaks words, so you can have long text here.',
                        modifier: 'warning',
                        dismissible: true,
                    },
                },
                {
                    btn: {
                        text: 'Launch two buttons notification',
                        color: 'primary',
                        type: 'two-buttons',
                    },
                    notification: {
                        ttl: 0,
                        header: 'This is the header of notification',
                        message: 'This is a notification with both primary and secondary actions. Both buttons allow callbacks and will close the notification when pressed. This notification also has no timeout, ensure this by setting ttl to 0.',
                        modifier: 'error',
                        dismissible: true,
                        primaryAction: function () { return _this.showMessage('primary'); },
                        secondaryAction: function () { return _this.showMessage('secondary'); },
                        primaryActionText: 'Primary',
                        secondaryActionText: 'Secondary',
                    },
                },
                {
                    btn: {
                        text: 'Launch custom notification with context',
                        color: 'primary',
                        type: 'custom',
                    },
                    notification: {
                        ttl: 10000,
                        header: 'File was uploaded',
                        message: 'Sample file.txt. was successfully uploaded',
                        modifier: 'success',
                        dismissible: true,
                    },
                },
                {
                    btn: {
                        text: 'Launch two customisable buttons notification',
                        color: 'primary',
                        type: 'two-buttons',
                    },
                    notification: {
                        ttl: 0,
                        header: 'This is the header of notification',
                        message: 'This is a notification with both primary and secondary actions. Both buttons allow callbacks and will close the notification when pressed. This notification also has no timeout, ensure this by setting ttl to 0.',
                        modifier: 'error',
                        dismissible: true,
                        primaryActionTemplate: this.default1,
                        secondaryActionTemplate: this.default2,
                        primaryAction: function () { return _this.showMessage('primary'); },
                        secondaryAction: function () { return _this.showMessage('secondary'); },
                        primaryActionText: 'Primary',
                        secondaryActionText: 'Secondary',
                    },
                },
                {
                    btn: {
                        text: 'Launch htm template text',
                        color: 'primary',
                        type: 'two-buttons',
                    },
                    notification: {
                        ttl: 0,
                        header: 'This is the header of notification',
                        message: this.messageTemplate,
                        modifier: 'error',
                        dismissible: true,
                        primaryActionTemplate: this.default1,
                        secondaryActionTemplate: this.default2,
                        primaryAction: function () { return _this.showMessage('primary'); },
                        secondaryAction: function () { return _this.showMessage('secondary'); },
                        primaryActionText: 'Primary',
                        secondaryActionText: 'Secondary',
                    },
                },
            ];
        };
        NotificationShowcaseComponent.prototype.ngAfterViewChecked = function () {
            this.cdRef.detectChanges();
        };
        NotificationShowcaseComponent.prototype.showNotification = function (_a) {
            var header = _a.header, message = _a.message, dismissible = _a.dismissible, ttl = _a.ttl, modifier = _a.modifier, primaryActionText = _a.primaryActionText, secondaryActionText = _a.secondaryActionText, primaryAction = _a.primaryAction, secondaryAction = _a.secondaryAction, primaryActionTemplate = _a.primaryActionTemplate, secondaryActionTemplate = _a.secondaryActionTemplate;
            this.notificationService.showNotification({
                ttl: ttl,
                header: header,
                message: message,
                modifier: modifier,
                dismissible: dismissible,
                primaryAction: primaryAction,
                secondaryAction: secondaryAction,
                primaryActionText: primaryActionText,
                secondaryActionText: secondaryActionText,
                primaryActionTemplate: primaryActionTemplate,
                secondaryActionTemplate: secondaryActionTemplate,
            });
        };
        NotificationShowcaseComponent.prototype.showMessage = function (buttonType) {
            this.notificationService.showNotification({
                header: 'This is the header of notification',
                message: "The notification triggered by clicking on " + buttonType + " button.",
                dismissible: true,
                ttl: 0,
            });
        };
        return NotificationShowcaseComponent;
    }());
    NotificationShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationShowcaseComponent, deps: [{ token: i1__namespace$n.NotificationService }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    NotificationShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationShowcaseComponent, selector: "bb-notification-ui-showcase", viewQueries: [{ propertyName: "default1", first: true, predicate: ["default1"], descendants: true, static: true }, { propertyName: "default2", first: true, predicate: ["default2"], descendants: true, static: true }, { propertyName: "messageTemplate", first: true, predicate: ["messageTemplate"], descendants: true, static: true }], ngImport: i0__namespace, template: "<div *ngFor=\"let config of notificationsConfig\" class=\"row mb-4\">\n  <div class=\"col-12\">\n    <button\n      (click)=\"showNotification(config.notification)\"\n      [buttonSize]=\"'md'\"\n      [color]=\"config.btn.color\"\n      bbButton\n      [attr.data-role]=\"'notification-' + config.btn.color + '-' + config.btn.type\"\n    >\n      {{ config.btn.text }}\n    </button>\n  </div>\n</div>\n\n<ng-template #default1>\n  <span>Save</span>\n</ng-template>\n\n<ng-template #default2>\n  <span>Discard</span>\n</ng-template>\n\n<ng-template #messageTemplate>\n  <p>This is an html message message template</p>\n</ng-template>\n", directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    NotificationShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], NotificationShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-notification-ui-showcase',
                        templateUrl: 'notification-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$n.NotificationService }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { default1: [{
                    type: i0.ViewChild,
                    args: ['default1', { static: true }]
                }], default2: [{
                    type: i0.ViewChild,
                    args: ['default2', { static: true }]
                }], messageTemplate: [{
                    type: i0.ViewChild,
                    args: ['messageTemplate', { static: true }]
                }] } });

    var NotificationShowcaseModule = /** @class */ (function () {
        function NotificationShowcaseModule() {
        }
        return NotificationShowcaseModule;
    }());
    NotificationShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    NotificationShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationShowcaseModule, declarations: [NotificationShowcaseComponent], imports: [i4$1.CommonModule, i1$r.NotificationModule, i2$2.ButtonModule] });
    NotificationShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationShowcaseModule, imports: [[i4$1.CommonModule, i1$r.NotificationModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: NotificationShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$r.NotificationModule, i2$2.ButtonModule],
                        declarations: [NotificationShowcaseComponent],
                        entryComponents: [NotificationShowcaseComponent],
                    }]
            }] });

    var PaginationShowcaseComponent = /** @class */ (function () {
        function PaginationShowcaseComponent() {
            this.paginatorOne = {
                page: 0,
                totalItems: 30,
                maxNavPages: 3,
                type: 'paginator-small-untruncated',
            };
            this.paginatorTwo = {
                page: 7,
                totalItems: 100,
                maxNavPages: 5,
                type: 'paginator-small-left-truncated',
            };
            this.paginatorThree = {
                page: 0,
                totalItems: 90,
                maxNavPages: 4,
                type: 'paginator-small-right-truncated',
            };
            this.paginatorFour = {
                page: 1020 / 10,
                totalItems: 1020,
                maxNavPages: 5,
                type: 'paginator-big-left-truncated',
            };
        }
        Object.defineProperty(PaginationShowcaseComponent.prototype, "paginator", {
            get: function () {
                return {
                    boundaryLinks: true,
                    directionLinks: true,
                    itemsPerPage: 10,
                    onPageChange: function (page) {
                        console.log('onPageChange', page);
                    },
                };
            },
            enumerable: false,
            configurable: true
        });
        return PaginationShowcaseComponent;
    }());
    PaginationShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaginationShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaginationShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaginationShowcaseComponent, selector: "bb-pagination-ui-showcase", ngImport: i0__namespace, template: "<h4>Small numbers untruncated</h4>\n<bb-pagination-ui\n  class=\"bb-pagination d-flex justify-content-start align-items-center mt-4 mb-3\"\n  [page]=\"paginatorOne.page\"\n  [boundaryLinks]=\"paginator.boundaryLinks\"\n  [directionLinks]=\"paginator.directionLinks\"\n  [totalItems]=\"paginatorOne.totalItems\"\n  [itemsPerPage]=\"paginator.itemsPerPage\"\n  [maxNavPages]=\"paginatorOne.maxNavPages\"\n  (pageChange)=\"paginator.onPageChange($event)\"\n  [attr.data-role]=\"paginatorOne.type\"\n></bb-pagination-ui>\n\n<h4>Small numbers left truncated</h4>\n<bb-pagination-ui\n  class=\"bb-pagination d-flex justify-content-start align-items-center mt-4 mb-3\"\n  [page]=\"paginatorTwo.page\"\n  [boundaryLinks]=\"paginator.boundaryLinks\"\n  [directionLinks]=\"paginator.directionLinks\"\n  [totalItems]=\"paginatorTwo.totalItems\"\n  [itemsPerPage]=\"paginator.itemsPerPage\"\n  [maxNavPages]=\"paginatorTwo.maxNavPages\"\n  (pageChange)=\"paginator.onPageChange($event)\"\n  [attr.data-role]=\"paginatorTwo.type\"\n></bb-pagination-ui>\n\n<h4>Small numbers right truncated</h4>\n<bb-pagination-ui\n  class=\"bb-pagination d-flex justify-content-start align-items-center mt-4 mb-3\"\n  [page]=\"paginatorThree.page\"\n  [boundaryLinks]=\"paginator.boundaryLinks\"\n  [directionLinks]=\"paginator.directionLinks\"\n  [totalItems]=\"paginatorThree.totalItems\"\n  [itemsPerPage]=\"paginator.itemsPerPage\"\n  [maxNavPages]=\"paginatorThree.maxNavPages\"\n  (pageChange)=\"paginator.onPageChange($event)\"\n  [attr.data-role]=\"paginatorThree.type\"\n></bb-pagination-ui>\n\n<h4>Big numbers left truncated</h4>\n<bb-pagination-ui\n  class=\"bb-pagination d-flex justify-content-start align-items-center mt-4 mb-3\"\n  [page]=\"paginatorFour.page\"\n  [boundaryLinks]=\"paginator.boundaryLinks\"\n  [directionLinks]=\"paginator.directionLinks\"\n  [totalItems]=\"paginatorFour.totalItems\"\n  [itemsPerPage]=\"paginator.itemsPerPage\"\n  [maxNavPages]=\"paginatorFour.maxNavPages\"\n  (pageChange)=\"paginator.onPageChange($event)\"\n  [attr.data-role]=\"paginatorFour.type\"\n></bb-pagination-ui>\n", components: [{ type: i1__namespace$o.PaginatorComponent, selector: "bb-pagination-ui", inputs: ["page", "boundaryLinks", "directionLinks", "totalItems", "itemsPerPage", "maxNavPages"], outputs: ["pageChange"] }] });
    PaginationShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], PaginationShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaginationShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-pagination-ui-showcase',
                        templateUrl: 'pagination-showcase.component.html',
                    }]
            }] });

    var PaginationShowcaseModule = /** @class */ (function () {
        function PaginationShowcaseModule() {
        }
        return PaginationShowcaseModule;
    }());
    PaginationShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaginationShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PaginationShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaginationShowcaseModule, declarations: [PaginationShowcaseComponent], imports: [i4$1.CommonModule, i1$s.PaginationModule] });
    PaginationShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaginationShowcaseModule, imports: [[i4$1.CommonModule, i1$s.PaginationModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaginationShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$s.PaginationModule],
                        declarations: [PaginationShowcaseComponent],
                        entryComponents: [PaginationShowcaseComponent],
                    }]
            }] });

    var PaymentCardNumberPipeShowcaseComponent = /** @class */ (function () {
        function PaymentCardNumberPipeShowcaseComponent() {
            this.maskStart = 0;
            this.maskEnd = 12;
            this._paymentCardNumberFormat = {};
        }
        Object.defineProperty(PaymentCardNumberPipeShowcaseComponent.prototype, "paymentCard", {
            get: function () {
                return {
                    name: 'Ricardo Peterson',
                    number: '1234567891234567',
                    vendor: 'mastercard',
                    expirationDate: new Date(2021, 2),
                };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaymentCardNumberPipeShowcaseComponent.prototype, "paymentCardNumberFormat", {
            get: function () {
                return {
                    length: 16,
                    maskRange: [this.maskStart, this.maskEnd],
                    segments: 4,
                };
            },
            set: function (val) {
                this._paymentCardNumberFormat = val;
            },
            enumerable: false,
            configurable: true
        });
        return PaymentCardNumberPipeShowcaseComponent;
    }());
    PaymentCardNumberPipeShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardNumberPipeShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentCardNumberPipeShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentCardNumberPipeShowcaseComponent, selector: "bb-payment-card-number-pipe-ui-showcase", ngImport: i0__namespace, template: "<bb-input-number-ui\n  label=\"Mask Start\"\n  aria-label=\"Mask Start Index\"\n  placeholder=\"Mask Start Index\"\n  [(ngModel)]=\"maskStart\"\n>\n</bb-input-number-ui>\n<bb-input-number-ui label=\"Mask End\" aria-label=\"Mask End Index\" placeholder=\"Mask End Index\" [(ngModel)]=\"maskEnd\">\n</bb-input-number-ui>\n<hr />\n{{ paymentCard?.number | paymentCardNumber: paymentCardNumberFormat }}\n", components: [{ type: i2__namespace$c.InputNumberComponent, selector: "bb-input-number-ui", inputs: ["placeholder", "max", "min", "step", "readonly", "autocomplete", "ariaLabel", "allowNonDigits", "allowNegativeSign"] }], directives: [{ type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], pipes: { "paymentCardNumber": i1__namespace$G.PaymentCardNumberPipe } });
    PaymentCardNumberPipeShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], PaymentCardNumberPipeShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardNumberPipeShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-card-number-pipe-ui-showcase',
                        templateUrl: './payment-card-number-pipe-showcase.component.html',
                    }]
            }] });

    var PaymentCardNumberPipeShowcaseModule = /** @class */ (function () {
        function PaymentCardNumberPipeShowcaseModule() {
        }
        return PaymentCardNumberPipeShowcaseModule;
    }());
    PaymentCardNumberPipeShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardNumberPipeShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PaymentCardNumberPipeShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardNumberPipeShowcaseModule, declarations: [PaymentCardNumberPipeShowcaseComponent], imports: [i4$1.CommonModule, i1$t.PaymentCardNumberModule, i2$f.InputNumberModule, i1$N.FormsModule] });
    PaymentCardNumberPipeShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardNumberPipeShowcaseModule, imports: [[i4$1.CommonModule, i1$t.PaymentCardNumberModule, i2$f.InputNumberModule, i1$N.FormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardNumberPipeShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$t.PaymentCardNumberModule, i2$f.InputNumberModule, i1$N.FormsModule],
                        declarations: [PaymentCardNumberPipeShowcaseComponent],
                        entryComponents: [PaymentCardNumberPipeShowcaseComponent],
                    }]
            }] });

    var AccountNumberPipeShowcaseComponent = /** @class */ (function () {
        function AccountNumberPipeShowcaseComponent(configuration) {
            this.configuration = configuration;
            this.customConfiguration = { segments: [1, 2, 3, 1, 2, 3, 1, 2, 3] };
            this.accounts = [
                {
                    description: 'iban',
                    typeOrFormat: 'iban',
                    number: 'IBAN1234567891234567',
                },
                {
                    description: 'bban',
                    typeOrFormat: 'bban',
                    number: 'BBAN1234567891234567',
                },
                {
                    description: 'cardNumber',
                    typeOrFormat: 'cardNumber',
                    number: 'num1234567891234567',
                },
                {
                    description: 'cardNumber (visa provider)',
                    typeOrFormat: 'cardNumber',
                    number: 'num1234567891234567',
                    cardProviderName: 'Visa',
                },
                {
                    description: "Custom format [" + this.customConfiguration.segments + "]",
                    typeOrFormat: this.customConfiguration,
                    number: 'num1234567891234567',
                },
            ];
        }
        return AccountNumberPipeShowcaseComponent;
    }());
    AccountNumberPipeShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountNumberPipeShowcaseComponent, deps: [{ token: i1.ACCOUNTS_DISPLAYING_FORMAT }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountNumberPipeShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: AccountNumberPipeShowcaseComponent, selector: "bb-account-number-pipe-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <h2>App configuration</h2>\n  <div>\n    <code>iban: {{ configuration.iban | json }}</code>\n  </div>\n  <div>\n    <code>bban: {{ configuration.bban | json }}</code>\n  </div>\n  <div>\n    <code>cardNumber: {{ configuration.cardNumber | json }}</code>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--lg\">\n  <ng-container *ngFor=\"let account of accounts\">\n    <h4>{{ account.description }}</h4>\n    <p>{{ account.number | bbAccountNumber: account.typeOrFormat:account.cardProviderName }}</p>\n  </ng-container>\n</div>\n", directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "json": i4__namespace.JsonPipe, "bbAccountNumber": i1__namespace$H.AccountNumberPipe } });
    AccountNumberPipeShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], AccountNumberPipeShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountNumberPipeShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-number-pipe-ui-showcase',
                        templateUrl: './account-number-pipe-showcase.component.html',
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.ACCOUNTS_DISPLAYING_FORMAT]
                        }] }];
        } });

    var accountsDisplayingFormatConfiguration = {
        iban: { segments: 4 },
        bban: { segments: 4 },
        cardNumber: {
            segments: [6, 8, 6],
            cardProviders: {
                visa: { segments: [3, 9, 9] },
            },
        },
    };
    var AccountNumberPipeShowcaseModule = /** @class */ (function () {
        function AccountNumberPipeShowcaseModule() {
        }
        return AccountNumberPipeShowcaseModule;
    }());
    AccountNumberPipeShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountNumberPipeShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AccountNumberPipeShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountNumberPipeShowcaseModule, declarations: [AccountNumberPipeShowcaseComponent], imports: [i4$1.CommonModule, i1$N.FormsModule, i1.AccountNumberPipeModule] });
    AccountNumberPipeShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountNumberPipeShowcaseModule, providers: [{ provide: i1.ACCOUNTS_DISPLAYING_FORMAT, useValue: accountsDisplayingFormatConfiguration }], imports: [[i4$1.CommonModule, i1$N.FormsModule, i1.AccountNumberPipeModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: AccountNumberPipeShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$N.FormsModule, i1.AccountNumberPipeModule],
                        declarations: [AccountNumberPipeShowcaseComponent],
                        entryComponents: [AccountNumberPipeShowcaseComponent],
                        providers: [{ provide: i1.ACCOUNTS_DISPLAYING_FORMAT, useValue: accountsDisplayingFormatConfiguration }],
                    }]
            }] });

    var PaymentCardShowcaseComponent = /** @class */ (function () {
        function PaymentCardShowcaseComponent() {
        }
        Object.defineProperty(PaymentCardShowcaseComponent.prototype, "paymentCard", {
            get: function () {
                return {
                    name: 'Ricardo Peterson',
                    number: '1234',
                    vendor: 'mastercard',
                    expirationDate: new Date(2021, 2),
                };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaymentCardShowcaseComponent.prototype, "paymentCardWithBackgroundImage", {
            get: function () {
                return {
                    name: 'Ricardo Peterson',
                    number: '1234',
                    vendor: 'mastercard',
                    expirationDate: new Date(2021, 2),
                    cardName: 'Blue Card',
                };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PaymentCardShowcaseComponent.prototype, "paymentCardNumberFormat", {
            get: function () {
                return {
                    length: 16,
                    maskRange: [0, 12],
                    segments: 4,
                };
            },
            enumerable: false,
            configurable: true
        });
        return PaymentCardShowcaseComponent;
    }());
    PaymentCardShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentCardShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PaymentCardShowcaseComponent, selector: "bb-payment-card-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h2>Default</h2>\n  <bb-payment-card-ui\n    [paymentCard]=\"paymentCard\"\n    [paymentCardNumberFormat]=\"paymentCardNumberFormat\"\n  ></bb-payment-card-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h2>With different background <small class=\"bb-text-support\">(controlled by card name)</small></h2>\n  <bb-payment-card-ui\n    [paymentCard]=\"paymentCardWithBackgroundImage\"\n    [paymentCardNumberFormat]=\"paymentCardNumberFormat\"\n  ></bb-payment-card-ui>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h2>With state overlay <small class=\"bb-text-support\">(provided by css, not component)</small></h2>\n  <div class=\"bb-payment-card-state\">\n    <div class=\"bb-payment-card-state__container\">\n      <i\n        aria-hidden=\"true\"\n        class=\"bb-payment-card-state__icon bb-icon bb-icon-not-interested bb-icon--xxl bb-icon--white\"\n      ></i>\n      <span class=\"bb-payment-card-state__label badge badge-secondary\">Deactivated</span>\n    </div>\n    <div class=\"bb-payment-card-state__overlay\">\n      <bb-payment-card-ui\n        [paymentCard]=\"paymentCard\"\n        [paymentCardNumberFormat]=\"paymentCardNumberFormat\"\n      ></bb-payment-card-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$p.PaymentCardComponent, selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }] });
    PaymentCardShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], PaymentCardShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-card-ui-showcase',
                        templateUrl: './payment-card-showcase.component.html',
                    }]
            }] });

    var PaymentCardShowcaseModule = /** @class */ (function () {
        function PaymentCardShowcaseModule() {
        }
        return PaymentCardShowcaseModule;
    }());
    PaymentCardShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PaymentCardShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardShowcaseModule, declarations: [PaymentCardShowcaseComponent], imports: [i4$1.CommonModule, i1$u.PaymentCardModule] });
    PaymentCardShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardShowcaseModule, imports: [[i4$1.CommonModule, i1$u.PaymentCardModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PaymentCardShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$u.PaymentCardModule],
                        declarations: [PaymentCardShowcaseComponent],
                        entryComponents: [PaymentCardShowcaseComponent],
                    }]
            }] });

    var PeriodSelectorShowcaseComponent = /** @class */ (function () {
        function PeriodSelectorShowcaseComponent() {
            this.periodStartDate = new Date('2019-02-09');
            this.periodEndDate = new Date('2019-02-21');
        }
        return PeriodSelectorShowcaseComponent;
    }());
    PeriodSelectorShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PeriodSelectorShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PeriodSelectorShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PeriodSelectorShowcaseComponent, selector: "bb-period-selector-ui-showcase", ngImport: i0__namespace, template: "<bb-period-selector-ui [periodStart]=\"periodStartDate\" [periodEnd]=\"periodEndDate\"></bb-period-selector-ui>\n", components: [{ type: i1__namespace$q.PeriodSelectorComponent, selector: "bb-period-selector-ui", inputs: ["periodStart", "periodEnd", "periodFormatters", "period"], outputs: ["periodChange"] }] });
    PeriodSelectorShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], PeriodSelectorShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PeriodSelectorShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-period-selector-ui-showcase',
                        templateUrl: './period-selector-showcase.component.html',
                    }]
            }] });

    var PeriodSelectorShowcaseModule = /** @class */ (function () {
        function PeriodSelectorShowcaseModule() {
        }
        return PeriodSelectorShowcaseModule;
    }());
    PeriodSelectorShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PeriodSelectorShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PeriodSelectorShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PeriodSelectorShowcaseModule, declarations: [PeriodSelectorShowcaseComponent], imports: [i4$1.CommonModule, i1$v.PeriodSelectorModule] });
    PeriodSelectorShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PeriodSelectorShowcaseModule, imports: [[i4$1.CommonModule, i1$v.PeriodSelectorModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PeriodSelectorShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$v.PeriodSelectorModule],
                        declarations: [PeriodSelectorShowcaseComponent],
                        entryComponents: [PeriodSelectorShowcaseComponent],
                    }]
            }] });

    var PhoneNumberFormatPipeShowcaseComponent = /** @class */ (function () {
        function PhoneNumberFormatPipeShowcaseComponent() {
        }
        return PhoneNumberFormatPipeShowcaseComponent;
    }());
    PhoneNumberFormatPipeShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberFormatPipeShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PhoneNumberFormatPipeShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: PhoneNumberFormatPipeShowcaseComponent, selector: "bb-phone-number-pipe-ui-showcase", ngImport: i0__namespace, template: "<div class=\"card card--shadow-level-1\">\n  <div class=\"card-body\">\n    <div class=\"table-responsive\">\n      <table class=\"table table-hover\">\n        <thead>\n          <tr class=\"align-middle\">\n            <th scope=\"col\"><span class=\"th-content\">Country</span></th>\n            <th scope=\"col\">\n              <span class=\"th-content\">Unformatted Number</span>\n            </th>\n            <th scope=\"col\"><span class=\"th-content\">Formated Number</span></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>CA</td>\n            <td>16045555555</td>\n            <td class=\"bb-text-align-right\">{{ '16045555555' | phoneNumber: 'CA' }}</td>\n          </tr>\n          <tr>\n            <td>NL</td>\n            <td>0612345622</td>\n            <td class=\"bb-text-align-right\">{{ '0612345622' | phoneNumber: 'NL' }}</td>\n          </tr>\n          <tr>\n            <td>GB</td>\n            <td>07744556677</td>\n            <td class=\"bb-text-align-right\">{{ '07744556677' | phoneNumber: 'GB' }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n", pipes: { "phoneNumber": i1__namespace$I.PhoneNumberPipe } });
    PhoneNumberFormatPipeShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], PhoneNumberFormatPipeShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberFormatPipeShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-phone-number-pipe-ui-showcase',
                        templateUrl: './phone-number-format-pipe-showcase.component.html',
                    }]
            }] });

    var PhoneNumberFormatPipeShowcaseModule = /** @class */ (function () {
        function PhoneNumberFormatPipeShowcaseModule() {
        }
        return PhoneNumberFormatPipeShowcaseModule;
    }());
    PhoneNumberFormatPipeShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberFormatPipeShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PhoneNumberFormatPipeShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberFormatPipeShowcaseModule, declarations: [PhoneNumberFormatPipeShowcaseComponent], imports: [i4$1.CommonModule, i1$w.PhoneNumberModule] });
    PhoneNumberFormatPipeShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberFormatPipeShowcaseModule, imports: [[i4$1.CommonModule, i1$w.PhoneNumberModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberFormatPipeShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$w.PhoneNumberModule],
                        declarations: [PhoneNumberFormatPipeShowcaseComponent],
                        entryComponents: [PhoneNumberFormatPipeShowcaseComponent],
                    }]
            }] });

    var ProductItemBasicAccountShowcaseComponent = /** @class */ (function () {
        function ProductItemBasicAccountShowcaseComponent() {
        }
        return ProductItemBasicAccountShowcaseComponent;
    }());
    ProductItemBasicAccountShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemBasicAccountShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemBasicAccountShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemBasicAccountShowcaseComponent, selector: "bb-product-item-basic-account-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-basic-account-ui\n        [title]=\"'Ricardo Norton\\'s Savings Account'\"\n        [amount]=\"83652.32\"\n        [productNumber]=\"'NL75INGB3400120056'\"\n        [currency]=\"'EUR'\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [highlight]=\"false\"\n        [favorite]=\"false\"\n        [active]=\"false\"\n      ></bb-product-item-basic-account-ui>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 1.x: component should provide padding)</h4>\n  <div class=\"card\">\n    <bb-product-item-basic-account-ui\n      [title]=\"'Ricardo Norton\\'s Savings Account'\"\n      [amount]=\"83652.32\"\n      [productNumber]=\"'NL75INGB3400120056'\"\n      [currency]=\"'EUR'\"\n      [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n      [highlight]=\"false\"\n      [favorite]=\"false\"\n      [active]=\"false\"\n    ></bb-product-item-basic-account-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Inside a list</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-list\">\n        <div class=\"bb-list__item\">\n          <bb-product-item-basic-account-ui\n            [title]=\"'Ricardo Norton\\'s Savings Account'\"\n            [amount]=\"83652.32\"\n            [productNumber]=\"'NL75INGB3400120056'\"\n            [currency]=\"'EUR'\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n            [highlight]=\"false\"\n            [favorite]=\"false\"\n            [active]=\"false\"\n          ></bb-product-item-basic-account-ui>\n        </div>\n        <div class=\"bb-list__item\">\n          <bb-product-item-basic-account-ui\n            [title]=\"'Ricardo Norton\\'s Master Card'\"\n            [amount]=\"6719.64\"\n            [productNumber]=\"8927\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 14], segments: 4 }\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"false\"\n            [active]=\"false\"\n          ></bb-product-item-basic-account-ui>\n        </div>\n        <div class=\"bb-list__item\">\n          <bb-product-item-basic-account-ui\n            [title]=\"'Ricardo Norton\\'s Master Card'\"\n            [amount]=\"6719.64\"\n            [productNumber]=\"'NL75INGB3400120056'\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"false\"\n            [active]=\"false\"\n            [productDetailsInfo]=\"{\n              owners: 'Ricardo Norton'\n            }\"\n          ></bb-product-item-basic-account-ui>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Multiple accounts with selection</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-list\">\n        <div class=\"bb-list__item\">\n          <bb-product-item-basic-account-ui\n            [title]=\"'Ricardo Norton\\'s Savings Account'\"\n            [amount]=\"83652.32\"\n            [productNumber]=\"'NL75INGB3400120056'\"\n            [currency]=\"'EUR'\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n            [highlight]=\"false\"\n            [favorite]=\"false\"\n            [active]=\"false\"\n          ></bb-product-item-basic-account-ui>\n        </div>\n        <div class=\"bb-list__item\">\n          <bb-product-item-basic-account-ui\n            [title]=\"'Ricardo Norton\\'s Master Card'\"\n            [productNumber]=\"8927\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 14], segments: 4 }\"\n            [amount]=\"6719.64\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"false\"\n            [favorite]=\"false\"\n          ></bb-product-item-basic-account-ui>\n        </div>\n        <div class=\"bb-list__item\">\n          <bb-product-item-basic-account-ui\n            [title]=\"'Ricardo Norton\\'s Credit Card'\"\n            [productNumber]=\"1278\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 14], segments: 4 }\"\n            [amount]=\"9004.98\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"false\"\n            [active]=\"false\"\n          ></bb-product-item-basic-account-ui>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>With account status</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-basic-account-ui\n        [title]=\"'Ricardo Norton\\'s Savings Account'\"\n        [amount]=\"83652.32\"\n        [productNumber]=\"'NL75INGB3400120056'\"\n        [currency]=\"'EUR'\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [highlight]=\"false\"\n        [favorite]=\"false\"\n        [active]=\"false\"\n        [status]=\"'inactive'\"\n      ></bb-product-item-basic-account-ui>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>With account status</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-basic-account-ui\n        [title]=\"'Ricardo Norton\\'s Savings Account'\"\n        [amount]=\"83652.32\"\n        [productNumber]=\"'NL75INGB3400120056'\"\n        [currency]=\"'EUR'\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [highlight]=\"false\"\n        [favorite]=\"false\"\n        [active]=\"false\"\n        [status]=\"'inactive'\"\n      ></bb-product-item-basic-account-ui>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>With amount label</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-basic-account-ui\n        [title]=\"'Ricardo Norton\\'s Savings Account'\"\n        [amount]=\"83652.32\"\n        [productNumber]=\"'NL75INGB3400120056'\"\n        [currency]=\"'EUR'\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [highlight]=\"false\"\n        [favorite]=\"false\"\n        [active]=\"false\"\n        balanceLabel=\"Available balance\"\n      ></bb-product-item-basic-account-ui>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>With amount label</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-basic-account-ui\n        [title]=\"'Ricardo Norton\\'s Savings Account'\"\n        [amount]=\"83652.32\"\n        [productNumber]=\"'NL75INGB3400120056'\"\n        [currency]=\"'EUR'\"\n        [bankBranchCode]=\"'055770134'\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [highlight]=\"false\"\n        [favorite]=\"false\"\n        [active]=\"false\"\n        balanceLabel=\"Available balance\"\n      ></bb-product-item-basic-account-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2__namespace$f.ProductItemBasicAccountComponent, selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }] });
    ProductItemBasicAccountShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductItemBasicAccountShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemBasicAccountShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-basic-account-ui-showcase',
                        templateUrl: './product-item-basic-account-showcase.component.html',
                    }]
            }] });

    var ProductItemBasicAccountShowcaseModule = /** @class */ (function () {
        function ProductItemBasicAccountShowcaseModule() {
        }
        return ProductItemBasicAccountShowcaseModule;
    }());
    ProductItemBasicAccountShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemBasicAccountShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemBasicAccountShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemBasicAccountShowcaseModule, declarations: [ProductItemBasicAccountShowcaseComponent], imports: [i4$1.CommonModule, i2$m.ProductItemBasicAccountModule] });
    ProductItemBasicAccountShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemBasicAccountShowcaseModule, imports: [[i4$1.CommonModule, i2$m.ProductItemBasicAccountModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemBasicAccountShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$m.ProductItemBasicAccountModule],
                        declarations: [ProductItemBasicAccountShowcaseComponent],
                        entryComponents: [ProductItemBasicAccountShowcaseComponent],
                    }]
            }] });

    var ProductItemCreditCardShowcaseComponent = /** @class */ (function () {
        function ProductItemCreditCardShowcaseComponent() {
        }
        return ProductItemCreditCardShowcaseComponent;
    }());
    ProductItemCreditCardShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCreditCardShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemCreditCardShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemCreditCardShowcaseComponent, selector: "bb-product-item-credit-card-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-credit-card-ui\n        [title]=\"'John Doe'\"\n        [productNumber]=\"4322\"\n        [amount]=\"1425.99\"\n        [currency]=\"'EUR'\"\n        [mainSectionCurrency]=\"'EUR'\"\n        [mainSectionAmount]=\"880.54\"\n        [mainSectionTitle]=\"'Available balance'\"\n        [secondarySectionCurrency]=\"'EUR'\"\n        [secondarySectionAmount]=\"7280.86\"\n        [secondarySectionTitle]=\"'Credit Limit'\"\n        [productDetailsInfo]=\"{ owners: 'Richard Norton' }\"\n        [highlight]=\"false\"\n        [favorite]=\"true\"\n      >\n      </bb-product-item-credit-card-ui>\n    </div>\n  </div>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 1.x: component should provide padding)</h4>\n  <div class=\"card\">\n    <bb-product-item-credit-card-ui\n      [title]=\"'John Doe'\"\n      [productNumber]=\"4322\"\n      [amount]=\"1425.99\"\n      [currency]=\"'EUR'\"\n      [secondarySectionCurrency]=\"'EUR'\"\n      [secondarySectionAmount]=\"7280.86\"\n      [secondarySectionTitle]=\"'Credit Limit'\"\n      [highlight]=\"false\"\n      [favorite]=\"true\"\n    >\n    </bb-product-item-credit-card-ui>\n  </div>\n</div>\n\n<div>\n  <h4>Inside a list</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-list\">\n        <div class=\"bb-list__item\">\n          <bb-product-item-credit-card-ui\n            [title]=\"'John Doe'\"\n            [productNumber]=\"4322\"\n            [amount]=\"-1425.99\"\n            [currency]=\"'EUR'\"\n            [secondarySectionCurrency]=\"'EUR'\"\n            [secondarySectionAmount]=\"7280.86\"\n            [secondarySectionTitle]=\"'Credit Limit'\"\n            [highlight]=\"true\"\n            [favorite]=\"true\"\n          >\n          </bb-product-item-credit-card-ui>\n        </div>\n        <div class=\"bb-list__item\">\n          <bb-product-item-basic-account-ui\n            [title]=\"'Ricardo Norton\\'s Master Card'\"\n            [amount]=\"6719.64\"\n            [productNumber]=\"8927\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 14], segments: 4 }\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"true\"\n            [active]=\"false\"\n          ></bb-product-item-basic-account-ui>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$r.ProductItemCreditCardComponent, selector: "bb-product-item-credit-card-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "secondarySectionCurrency", "secondarySectionAmount", "secondarySectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }, { type: i2__namespace$f.ProductItemBasicAccountComponent, selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }] });
    ProductItemCreditCardShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductItemCreditCardShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCreditCardShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-credit-card-ui-showcase',
                        templateUrl: './product-item-credit-card-showcase.component.html',
                    }]
            }] });

    var ProductItemCreditCardShowcaseModule = /** @class */ (function () {
        function ProductItemCreditCardShowcaseModule() {
        }
        return ProductItemCreditCardShowcaseModule;
    }());
    ProductItemCreditCardShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCreditCardShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemCreditCardShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCreditCardShowcaseModule, declarations: [ProductItemCreditCardShowcaseComponent], imports: [i4$1.CommonModule, i1$x.ProductItemCreditCardModule, i2$m.ProductItemBasicAccountModule] });
    ProductItemCreditCardShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCreditCardShowcaseModule, imports: [[i4$1.CommonModule, i1$x.ProductItemCreditCardModule, i2$m.ProductItemBasicAccountModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCreditCardShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$x.ProductItemCreditCardModule, i2$m.ProductItemBasicAccountModule],
                        declarations: [ProductItemCreditCardShowcaseComponent],
                        entryComponents: [ProductItemCreditCardShowcaseComponent],
                    }]
            }] });

    var ProductItemCurrentAccountShowcaseComponent = /** @class */ (function () {
        function ProductItemCurrentAccountShowcaseComponent() {
            this.currentAccountProductNumberFormat = {
                length: 16,
                maskRange: [0, 2],
                segments: 4,
            };
        }
        return ProductItemCurrentAccountShowcaseComponent;
    }());
    ProductItemCurrentAccountShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCurrentAccountShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemCurrentAccountShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemCurrentAccountShowcaseComponent, selector: "bb-product-item-current-account-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-current-account-ui\n        [title]=\"'John Doe'\"\n        [productNumber]=\"4322\"\n        [amount]=\"1425.99\"\n        [currency]=\"'EUR'\"\n        [mainSectionCurrency]=\"'EUR'\"\n        [mainSectionAmount]=\"880.54\"\n        [mainSectionTitle]=\"'Available balance'\"\n        [secondarySectionCurrency]=\"'EUR'\"\n        [secondarySectionAmount]=\"7280.86\"\n        [secondarySectionTitle]=\"'Credit Limit'\"\n        [productDetailsInfo]=\"{ owner: 'Richard Norton' }\"\n        [highlight]=\"false\"\n        [favorite]=\"true\"\n      >\n      </bb-product-item-current-account-ui>\n    </div>\n  </div>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 1.x: component should provide padding)</h4>\n  <div class=\"card\">\n    <bb-product-item-current-account-ui\n      [title]=\"'John Doe'\"\n      [productNumber]=\"4322\"\n      [amount]=\"1425.99\"\n      [currency]=\"'EUR'\"\n      [secondarySectionCurrency]=\"'EUR'\"\n      [secondarySectionAmount]=\"7280.86\"\n      [secondarySectionTitle]=\"'Credit Limit'\"\n      [highlight]=\"false\"\n      [favorite]=\"true\"\n    >\n    </bb-product-item-current-account-ui>\n  </div>\n</div>\n\n<div>\n  <h4>Inside a list</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"bb-list\">\n        <div class=\"bb-list__item\">\n          <bb-product-item-current-account-ui\n            [title]=\"'John Doe'\"\n            [productNumber]=\"4322\"\n            [amount]=\"1425.99\"\n            [currency]=\"'EUR'\"\n            [secondarySectionCurrency]=\"'EUR'\"\n            [secondarySectionAmount]=\"7280.86\"\n            [secondarySectionTitle]=\"'Credit Limit'\"\n            [highlight]=\"false\"\n            [favorite]=\"true\"\n          >\n          </bb-product-item-current-account-ui>\n        </div>\n        <div class=\"bb-list__item\">\n          <bb-product-item-basic-account-ui\n            [title]=\"'Ricardo Norton\\'s Master Card'\"\n            [amount]=\"6719.64\"\n            [productNumber]=\"8927\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 14], segments: 4 }\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"false\"\n            [active]=\"false\"\n          ></bb-product-item-basic-account-ui>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$s.ProductItemCurrentAccountComponent, selector: "bb-product-item-current-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "secondarySectionCurrency", "secondarySectionAmount", "secondarySectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }, { type: i2__namespace$f.ProductItemBasicAccountComponent, selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }] });
    ProductItemCurrentAccountShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductItemCurrentAccountShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCurrentAccountShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-current-account-ui-showcase',
                        templateUrl: './product-item-current-account-showcase.component.html',
                    }]
            }] });

    var ProductItemCurrentAccountShowcaseModule = /** @class */ (function () {
        function ProductItemCurrentAccountShowcaseModule() {
        }
        return ProductItemCurrentAccountShowcaseModule;
    }());
    ProductItemCurrentAccountShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCurrentAccountShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemCurrentAccountShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCurrentAccountShowcaseModule, declarations: [ProductItemCurrentAccountShowcaseComponent], imports: [i4$1.CommonModule, i1$y.ProductItemCurrentAccountModule, i2$m.ProductItemBasicAccountModule] });
    ProductItemCurrentAccountShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCurrentAccountShowcaseModule, imports: [[i4$1.CommonModule, i1$y.ProductItemCurrentAccountModule, i2$m.ProductItemBasicAccountModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemCurrentAccountShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$y.ProductItemCurrentAccountModule, i2$m.ProductItemBasicAccountModule],
                        declarations: [ProductItemCurrentAccountShowcaseComponent],
                        entryComponents: [ProductItemCurrentAccountShowcaseComponent],
                    }]
            }] });

    var ProductItemDebitCardShowcaseComponent = /** @class */ (function () {
        function ProductItemDebitCardShowcaseComponent() {
        }
        return ProductItemDebitCardShowcaseComponent;
    }());
    ProductItemDebitCardShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemDebitCardShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemDebitCardShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemDebitCardShowcaseComponent, selector: "bb-product-item-debit-card-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-debit-card-ui [title]=\"'John Doe'\" [productNumber]=\"4322\" [highlight]=\"false\" [favorite]=\"true\">\n      </bb-product-item-debit-card-ui>\n    </div>\n  </div>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 1.x: component should provide padding)</h4>\n  <div class=\"card\">\n    <bb-product-item-debit-card-ui [title]=\"'John Doe'\" [productNumber]=\"4322\" [highlight]=\"false\" [favorite]=\"true\">\n    </bb-product-item-debit-card-ui>\n  </div>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>With owners (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-debit-card-ui\n        [title]=\"'John Doe'\"\n        [productNumber]=\"4322\"\n        [highlight]=\"false\"\n        [favorite]=\"true\"\n        [productDetailsInfo]=\"{\n          owners: 'Ricardo Norton'\n        }\"\n      >\n      </bb-product-item-debit-card-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$t.ProductItemDebitCardComponent, selector: "bb-product-item-debit-card-ui", inputs: ["title", "productNumber", "productNumberFormat", "highlight", "active", "productDetailsInfo", "favorite", "favoriteIconColor"] }] });
    ProductItemDebitCardShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductItemDebitCardShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemDebitCardShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-debit-card-ui-showcase',
                        templateUrl: './product-item-debit-card-showcase.component.html',
                    }]
            }] });

    var ProductItemDebitCardShowcaseModule = /** @class */ (function () {
        function ProductItemDebitCardShowcaseModule() {
        }
        return ProductItemDebitCardShowcaseModule;
    }());
    ProductItemDebitCardShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemDebitCardShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemDebitCardShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemDebitCardShowcaseModule, declarations: [ProductItemDebitCardShowcaseComponent], imports: [i4$1.CommonModule, i1$z.ProductItemDebitCardModule] });
    ProductItemDebitCardShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemDebitCardShowcaseModule, imports: [[i4$1.CommonModule, i1$z.ProductItemDebitCardModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemDebitCardShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$z.ProductItemDebitCardModule],
                        declarations: [ProductItemDebitCardShowcaseComponent],
                        entryComponents: [ProductItemDebitCardShowcaseComponent],
                    }]
            }] });

    var ProductItemInvestmentAccountShowcaseComponent = /** @class */ (function () {
        function ProductItemInvestmentAccountShowcaseComponent() {
        }
        return ProductItemInvestmentAccountShowcaseComponent;
    }());
    ProductItemInvestmentAccountShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemInvestmentAccountShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemInvestmentAccountShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemInvestmentAccountShowcaseComponent, selector: "bb-product-item-investment-account-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-investment-account-ui\n        [title]=\"'John Doe'\"\n        [productNumber]=\"'NL75 INGB 3000 1200 56'\"\n        [amount]=\"13425.99\"\n        [currency]=\"'EUR'\"\n        [highlight]=\"false\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [favorite]=\"true\"\n      >\n      </bb-product-item-investment-account-ui>\n    </div>\n  </div>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 1.x: component should provide padding)</h4>\n  <div class=\"card\">\n    <bb-product-item-investment-account-ui\n      [title]=\"'John Doe'\"\n      [productNumber]=\"'NL75 INGB 3000 1200 56'\"\n      [amount]=\"13425.99\"\n      [currency]=\"'EUR'\"\n      [highlight]=\"false\"\n      [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n      [favorite]=\"true\"\n    >\n    </bb-product-item-investment-account-ui>\n  </div>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <h4>With owners (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-investment-account-ui\n        [title]=\"'John Doe'\"\n        [productNumber]=\"'NL75 INGB 3000 1200 56'\"\n        [amount]=\"13425.99\"\n        [currency]=\"'EUR'\"\n        [highlight]=\"false\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [favorite]=\"true\"\n        [productDetailsInfo]=\"{\n          owners: 'Ricardo Norton'\n        }\"\n      >\n      </bb-product-item-investment-account-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$u.ProductItemInvestmentAccountComponent, selector: "bb-product-item-investment-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    ProductItemInvestmentAccountShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductItemInvestmentAccountShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemInvestmentAccountShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-investment-account-ui-showcase',
                        templateUrl: './product-item-investment-account-showcase.component.html',
                    }]
            }] });

    var ProductItemInvestmentAccountShowcaseModule = /** @class */ (function () {
        function ProductItemInvestmentAccountShowcaseModule() {
        }
        return ProductItemInvestmentAccountShowcaseModule;
    }());
    ProductItemInvestmentAccountShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemInvestmentAccountShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemInvestmentAccountShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemInvestmentAccountShowcaseModule, declarations: [ProductItemInvestmentAccountShowcaseComponent], imports: [i4$1.CommonModule, i1$A.ProductItemInvestmentAccountModule] });
    ProductItemInvestmentAccountShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemInvestmentAccountShowcaseModule, imports: [[i4$1.CommonModule, i1$A.ProductItemInvestmentAccountModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemInvestmentAccountShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$A.ProductItemInvestmentAccountModule],
                        declarations: [ProductItemInvestmentAccountShowcaseComponent],
                        entryComponents: [ProductItemInvestmentAccountShowcaseComponent],
                    }]
            }] });

    var ProductItemLoanShowcaseComponent = /** @class */ (function () {
        function ProductItemLoanShowcaseComponent() {
        }
        return ProductItemLoanShowcaseComponent;
    }());
    ProductItemLoanShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemLoanShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemLoanShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemLoanShowcaseComponent, selector: "bb-product-item-loan-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-loan-ui\n        [title]=\"'John Doe'\"\n        [productNumber]=\"'NL75 INGB 3400 1200 56'\"\n        [amount]=\"15000.0\"\n        [currency]=\"'EUR'\"\n        [highlight]=\"false\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [favorite]=\"true\"\n        [productDetailsInfo]=\"{\n          owners: 'Ricardo Norton'\n        }\"\n      >\n      </bb-product-item-loan-ui>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 1.x: component should provide padding)</h4>\n  <div class=\"card\">\n    <bb-product-item-loan-ui\n      [title]=\"'John Doe'\"\n      [productNumber]=\"'NL75 INGB 3400 1200 56'\"\n      [amount]=\"15000.0\"\n      [currency]=\"'EUR'\"\n      [highlight]=\"false\"\n      [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n      [favorite]=\"true\"\n    >\n    </bb-product-item-loan-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$v.ProductItemLoanComponent, selector: "bb-product-item-loan-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    ProductItemLoanShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductItemLoanShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemLoanShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-loan-ui-showcase',
                        templateUrl: './product-item-loan-showcase.component.html',
                    }]
            }] });

    var ProductItemLoanShowcaseModule = /** @class */ (function () {
        function ProductItemLoanShowcaseModule() {
        }
        return ProductItemLoanShowcaseModule;
    }());
    ProductItemLoanShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemLoanShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemLoanShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemLoanShowcaseModule, declarations: [ProductItemLoanShowcaseComponent], imports: [i4$1.CommonModule, i1$B.ProductItemLoanModule] });
    ProductItemLoanShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemLoanShowcaseModule, imports: [[i4$1.CommonModule, i1$B.ProductItemLoanModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemLoanShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$B.ProductItemLoanModule],
                        declarations: [ProductItemLoanShowcaseComponent],
                        entryComponents: [ProductItemLoanShowcaseComponent],
                    }]
            }] });

    var ProductItemSavingsAccountShowcaseComponent = /** @class */ (function () {
        function ProductItemSavingsAccountShowcaseComponent() {
        }
        return ProductItemSavingsAccountShowcaseComponent;
    }());
    ProductItemSavingsAccountShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemSavingsAccountShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemSavingsAccountShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemSavingsAccountShowcaseComponent, selector: "bb-product-item-savings-account-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 1.x: component should provide padding)</h4>\n  <div class=\"card\">\n    <bb-product-item-savings-account-ui\n      [title]=\"'John Doe'\"\n      [productNumber]=\"'NL75 INGB 2000 1200 56'\"\n      [amount]=\"177425.99\"\n      [currency]=\"'EUR'\"\n      [highlight]=\"false\"\n      [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n      [favorite]=\"true\"\n    >\n    </bb-product-item-savings-account-ui>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-savings-account-ui\n        [title]=\"'John Doe'\"\n        [productNumber]=\"'NL75 INGB 2000 1200 56'\"\n        [amount]=\"177425.99\"\n        [currency]=\"'EUR'\"\n        [highlight]=\"false\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [favorite]=\"true\"\n      >\n      </bb-product-item-savings-account-ui>\n    </div>\n  </div>\n</div>\n\n<div>\n  <h4>With owners and with main section (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-savings-account-ui\n        [title]=\"'John Doe'\"\n        [productNumber]=\"'NL75 INGB 2000 1200 56'\"\n        [amount]=\"177425.99\"\n        [currency]=\"'EUR'\"\n        [highlight]=\"false\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [favorite]=\"true\"\n        [mainSectionCurrency]=\"'EUR'\"\n        [mainSectionAmount]=\"880.54\"\n        [mainSectionTitle]=\"'Available balance'\"\n        [productDetailsInfo]=\"{\n          owners: 'Ricardo Norton'\n        }\"\n      >\n      </bb-product-item-savings-account-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1__namespace$w.ProductItemSavingsAccountComponent, selector: "bb-product-item-savings-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    ProductItemSavingsAccountShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductItemSavingsAccountShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemSavingsAccountShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-savings-account-ui-showcase',
                        templateUrl: './product-item-savings-account-showcase.component.html',
                    }]
            }] });

    var ProductItemSavingsAccountShowcaseModule = /** @class */ (function () {
        function ProductItemSavingsAccountShowcaseModule() {
        }
        return ProductItemSavingsAccountShowcaseModule;
    }());
    ProductItemSavingsAccountShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemSavingsAccountShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemSavingsAccountShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemSavingsAccountShowcaseModule, declarations: [ProductItemSavingsAccountShowcaseComponent], imports: [i4$1.CommonModule, i1$C.ProductItemSavingsAccountModule] });
    ProductItemSavingsAccountShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemSavingsAccountShowcaseModule, imports: [[i4$1.CommonModule, i1$C.ProductItemSavingsAccountModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemSavingsAccountShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$C.ProductItemSavingsAccountModule],
                        declarations: [ProductItemSavingsAccountShowcaseComponent],
                        entryComponents: [ProductItemSavingsAccountShowcaseComponent],
                    }]
            }] });

    var ProductItemTermDepositShowcaseComponent = /** @class */ (function () {
        function ProductItemTermDepositShowcaseComponent() {
        }
        return ProductItemTermDepositShowcaseComponent;
    }());
    ProductItemTermDepositShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemTermDepositShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductItemTermDepositShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductItemTermDepositShowcaseComponent, selector: "bb-product-item-term-deposit-ui-showcase", ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-term-deposit-ui\n        [title]=\"'John Doe'\"\n        [amount]=\"200000\"\n        [currency]=\"'EUR'\"\n        [highlight]=\"false\"\n        [productNumber]=\"'NL75 INGB 2000 1200 56'\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [favorite]=\"true\"\n      >\n      </bb-product-item-term-deposit-ui>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>With mainSection (Theme 2.0: container should provide padding)</h4>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-product-item-term-deposit-ui\n        [title]=\"'John Doe'\"\n        [amount]=\"200000\"\n        [currency]=\"'EUR'\"\n        [highlight]=\"false\"\n        [productNumber]=\"'NL75 INGB 2000 1200 56'\"\n        [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n        [favorite]=\"true\"\n        [mainSectionCurrency]=\"'EUR'\"\n        [mainSectionAmount]=\"880.54\"\n        [mainSectionTitle]=\"'Available balance'\"\n      >\n      </bb-product-item-term-deposit-ui>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <h4>Default (Theme 1.x: component should provide padding)</h4>\n  <div class=\"card\">\n    <bb-product-item-term-deposit-ui\n      [title]=\"'John Doe'\"\n      [amount]=\"200000\"\n      [currency]=\"'EUR'\"\n      [highlight]=\"false\"\n      [productNumber]=\"'NL75 INGB 2000 1200 56'\"\n      [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n      [favorite]=\"true\"\n      [productDetailsInfo]=\"{\n        owners: 'Ricardo Norton'\n      }\"\n    >\n    </bb-product-item-term-deposit-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$x.ProductItemTermDepositComponent, selector: "bb-product-item-term-deposit-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "amount", "mainSectionCurrency", "mainSectionAmount", "mainSectionTitle", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor"] }] });
    ProductItemTermDepositShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductItemTermDepositShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemTermDepositShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-item-term-deposit-ui-showcase',
                        templateUrl: './product-item-term-deposit-showcase.component.html',
                    }]
            }] });

    var ProductItemTermDepositShowcaseModule = /** @class */ (function () {
        function ProductItemTermDepositShowcaseModule() {
        }
        return ProductItemTermDepositShowcaseModule;
    }());
    ProductItemTermDepositShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemTermDepositShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductItemTermDepositShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemTermDepositShowcaseModule, declarations: [ProductItemTermDepositShowcaseComponent], imports: [i4$1.CommonModule, i1$D.ProductItemTermDepositModule] });
    ProductItemTermDepositShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemTermDepositShowcaseModule, imports: [[i4$1.CommonModule, i1$D.ProductItemTermDepositModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductItemTermDepositShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$D.ProductItemTermDepositModule],
                        declarations: [ProductItemTermDepositShowcaseComponent],
                        entryComponents: [ProductItemTermDepositShowcaseComponent],
                    }]
            }] });

    var ProductSelectorShowcaseComponent = /** @class */ (function () {
        function ProductSelectorShowcaseComponent() {
            this.singleDropdownOptions = ['Option One', 'Option Two', 'Option Three'];
            this.productSelected = null;
            this.productsInterfaced = [
                {
                    id: '1cdb2224',
                    amount: '1231',
                    currency: 'EUR',
                    productNumber: '2342 443234 4234',
                    name: 'Some Name',
                    productType: 'currentAccounts',
                },
                {
                    id: '1cdb222sgdfd4',
                    amount: '123123',
                    currency: 'EUR',
                    productNumber: '2342 443234 4234432',
                    name: 'Some Name 234',
                    productType: 'my Type 234',
                    custonType: 'header',
                    header: 'savingsAccounts',
                },
                {
                    id: '1cdb222gdfgsd4',
                    amount: '123123',
                    currency: 'EUR',
                    productNumber: '2342 443234 4234432',
                    name: 'Some NA34534',
                    productType: 'termDeposits',
                },
                {
                    id: '1cdb222sdfgd4',
                    amount: '123123',
                    currency: 'EUR',
                    productNumber: '2342 443234 4234432',
                    name: 'Some NA3454',
                    productType: 'loans',
                },
                {
                    id: '1cddfgb222sd4',
                    amount: '123123',
                    currency: 'EUR',
                    productNumber: '2342 443234 4234432',
                    name: 'Some N34534',
                    productType: 'creditCards',
                },
                {
                    id: '1cdb2sfd22sd4',
                    amount: '123123',
                    currency: 'EUR',
                    productNumber: '2342 443233454 4234432',
                    name: 'Some NAm345',
                    productType: 'debitCards',
                },
                {
                    id: '1cdb2df22sd4',
                    amount: '123123',
                    currency: 'EUR',
                    productNumber: '2343542 443234 4234432',
                    name: 'Some Name 234',
                    productType: 'investmentAccounts',
                },
            ];
        }
        return ProductSelectorShowcaseComponent;
    }());
    ProductSelectorShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSelectorShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSelectorShowcaseComponent, selector: "bb-product-selector-ui-showcase", ngImport: i0__namespace, template: "<div>\n  <div class=\"bb-block bb-block--xl\">\n    <h2>Default</h2>\n    <bb-product-selector-ui [autoClose]=\"true\">\n      <ng-container bbDropdownToggle>\n        <div\n          *ngIf=\"productSelected\"\n          data-role=\"product-selector-selected-product\"\n          class=\"bb-product-item bb-product-item-basic-account-ui product-item\"\n        >\n          <div class=\"bb-stack bb-stack--wrap bb-text-align-left product-item-content\">\n            <div class=\"bb-stack__item bb-stack__item--fill\">\n              <span data-role=\"item-name\" class=\"bb-text-bold\"> {{ productSelected?.name }} </span><br />\n              <span data-role=\"item-number\" class=\"bb-text-support bb-subtitle bb-account-info__product-number\">\n                {{ productSelected?.productNumber }}\n              </span>\n            </div>\n            <div class=\"bb-stack__break bb-stack__break--xs\"></div>\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--spacing-none bb-product-item__details\"\n            >\n              <div class=\"bb-text-align-right\">\n                <div class=\"bb-text-support bb-subheader bb-subheader--lowercase bb-subheader--regular\">\n                  text herestas\n                </div>\n                <bb-amount-ui\n                  class=\"bb-highlight\"\n                  *ngIf=\"productSelected.amount\"\n                  [amount]=\"productSelected.amount\"\n                  [currency]=\"productSelected.currency\"\n                >\n                </bb-amount-ui>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!productSelected\" class=\"bb-stack\">\n          <span data-role=\"item-empty-state\" class=\"bb-text-support bb-product-selector__placeholder\">\n            Select one or more accounts\n          </span>\n        </div>\n      </ng-container>\n      <ng-container bbDropdownMenu>\n        <button\n          *ngFor=\"let item of productsInterfaced; let i = index\"\n          (click)=\"productSelected = productsInterfaced[i]\"\n          bbButton\n          color=\"unstyled\"\n          #listItem\n          class=\"bb-product-selector__dropdown-item\"\n          [ngClass]=\"{ selected: item.id === productSelected?.id }\"\n        >\n          <bb-product-item-basic-account-ui\n            [title]=\"item.name\"\n            [amount]=\"item.amount\"\n            [productNumber]=\"item.productNumber\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"true\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n            [active]=\"item.id === productSelected?.id\"\n          ></bb-product-item-basic-account-ui>\n        </button>\n      </ng-container>\n    </bb-product-selector-ui>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h2>Always open bottom</h2>\n    <bb-product-selector-ui [autoClose]=\"true\" [position]=\"'bottom'\">\n      <ng-container bbDropdownToggle>\n        <div\n          *ngIf=\"productSelected\"\n          data-role=\"product-selector-selected-product\"\n          class=\"bb-product-item bb-product-item-basic-account-ui product-item\"\n        >\n          <div class=\"bb-stack bb-stack--wrap bb-text-align-left product-item-content\">\n            <div class=\"bb-stack__item bb-stack__item--fill\">\n              <span data-role=\"item-name\" class=\"bb-text-bold\"> {{ productSelected?.name }} </span><br />\n              <span data-role=\"item-number\" class=\"bb-text-support bb-subtitle bb-account-info__product-number\">\n                {{ productSelected?.productNumber }}\n              </span>\n            </div>\n            <div class=\"bb-stack__break bb-stack__break--xs\"></div>\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--spacing-none bb-product-item__details\"\n            >\n              <bb-amount-ui\n                class=\"bb-highlight\"\n                *ngIf=\"productSelected?.amount\"\n                [amount]=\"productSelected?.amount\"\n                [currency]=\"productSelected?.currency\"\n              >\n              </bb-amount-ui>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!productSelected\" class=\"bb-stack\">\n          <span data-role=\"item-empty-state\" class=\"bb-text-support bb-product-selector__placeholder\">\n            Select one or more accounts\n          </span>\n        </div>\n      </ng-container>\n      <ng-container bbDropdownMenu>\n        <button\n          *ngFor=\"let item of productsInterfaced; let i = index\"\n          (click)=\"productSelected = productsInterfaced[i]\"\n          bbButton\n          color=\"unstyled\"\n          #listItem\n          class=\"bb-product-selector__dropdown-item\"\n          [ngClass]=\"{ selected: item.id === productSelected?.id }\"\n        >\n          <bb-product-item-basic-account-ui\n            [title]=\"item.name\"\n            [amount]=\"item.amount\"\n            [productNumber]=\"item.productNumber\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"true\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n            [active]=\"item.id === productSelected?.id\"\n          ></bb-product-item-basic-account-ui>\n        </button>\n      </ng-container>\n    </bb-product-selector-ui>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h2>Autoclose disabled</h2>\n    <bb-product-selector-ui [autoClose]=\"false\">\n      <ng-container bbDropdownToggle>\n        <div\n          *ngIf=\"productSelected\"\n          data-role=\"product-selector-selected-product\"\n          class=\"bb-product-item bb-product-item-basic-account-ui product-item\"\n        >\n          <div class=\"bb-stack bb-stack--wrap bb-text-align-left product-item-content\">\n            <div class=\"bb-stack__item bb-stack__item--fill\">\n              <span data-role=\"item-name\" class=\"bb-text-bold\"> {{ productSelected?.name }} </span><br />\n              <span data-role=\"item-number\" class=\"bb-text-support bb-subtitle bb-account-info__product-number\">\n                {{ productSelected?.productNumber }}\n              </span>\n            </div>\n            <div class=\"bb-stack__break bb-stack__break--xs\"></div>\n            <div\n              class=\"bb-stack__item bb-stack__item--push-right bb-stack__item--spacing-none bb-product-item__details\"\n            >\n              <div class=\"bb-text-align-right\">\n                <div class=\"bb-text-support bb-subheader bb-subheader--lowercase bb-subheader--regular\">\n                  text herestas\n                </div>\n                <bb-amount-ui\n                  class=\"bb-highlight\"\n                  *ngIf=\"productSelected.amount\"\n                  [amount]=\"productSelected.amount\"\n                  [currency]=\"productSelected.currency\"\n                >\n                </bb-amount-ui>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"!productSelected\" class=\"bb-stack\">\n          <span data-role=\"item-empty-state\" class=\"bb-text-support bb-product-selector__placeholder\">\n            Select one or more accounts\n          </span>\n        </div>\n      </ng-container>\n      <ng-container bbDropdownMenu>\n        <button\n          *ngFor=\"let item of productsInterfaced; let i = index\"\n          (click)=\"productSelected = productsInterfaced[i]\"\n          bbButton\n          color=\"unstyled\"\n          #listItem\n          class=\"bb-product-selector__dropdown-item\"\n          [ngClass]=\"{ selected: item.id === productSelected?.id }\"\n        >\n          <bb-product-item-basic-account-ui\n            [title]=\"item.name\"\n            [amount]=\"item.amount\"\n            [productNumber]=\"item.productNumber\"\n            [currency]=\"'EUR'\"\n            [highlight]=\"true\"\n            [productNumberFormat]=\"{ length: 18, maskRange: [0, 0], segments: 4 }\"\n            [active]=\"item.id === productSelected?.id\"\n          ></bb-product-item-basic-account-ui>\n        </button>\n      </ng-container>\n    </bb-product-selector-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$y.ProductSelectorComponent, selector: "bb-product-selector-ui", inputs: ["autoClose", "position", "container"] }, { type: i1__namespace$3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i2__namespace$f.ProductItemBasicAccountComponent, selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i4__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
    ProductSelectorShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProductSelectorShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-selector-ui-showcase',
                        templateUrl: './product-selector-showcase.component.html',
                    }]
            }] });

    var ProductSelectorShowcaseModule = /** @class */ (function () {
        function ProductSelectorShowcaseModule() {
        }
        return ProductSelectorShowcaseModule;
    }());
    ProductSelectorShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductSelectorShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorShowcaseModule, declarations: [ProductSelectorShowcaseComponent], imports: [i4$1.CommonModule, i1$E.ProductSelectorModule, i2$m.ProductItemBasicAccountModule, i1$3.AmountModule, i2$2.ButtonModule] });
    ProductSelectorShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorShowcaseModule, imports: [[i4$1.CommonModule, i1$E.ProductSelectorModule, i2$m.ProductItemBasicAccountModule, i1$3.AmountModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$E.ProductSelectorModule, i2$m.ProductItemBasicAccountModule, i1$3.AmountModule, i2$2.ButtonModule],
                        declarations: [ProductSelectorShowcaseComponent],
                        entryComponents: [ProductSelectorShowcaseComponent],
                    }]
            }] });

    var ProgressbarShowcaseComponent = /** @class */ (function () {
        function ProgressbarShowcaseComponent() {
            this.animate = true;
            this.value = 50;
            this.fulfilledValue = 100;
        }
        ProgressbarShowcaseComponent.prototype.ngOnDestroy = function () {
            clearInterval(this.interval);
        };
        ProgressbarShowcaseComponent.prototype.incrementProgress = function () {
            var _this = this;
            if (!this.interval) {
                this.interval = setInterval(function () {
                    if (_this.value < 100) {
                        _this.value += 5;
                    }
                    else if (_this.value >= 100) {
                        _this.value = Math.round(Math.random() * 100);
                    }
                }, 300);
            }
            else {
                clearInterval(this.interval);
                this.interval = undefined;
            }
        };
        return ProgressbarShowcaseComponent;
    }());
    ProgressbarShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProgressbarShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProgressbarShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProgressbarShowcaseComponent, selector: "bb-progressbar-ui-showcase", ngImport: i0__namespace, template: "<div class=\"col-6\">\n  <section class=\"bb-block bb-block--xl\">\n    <h4>Small</h4>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"4px\" [showValue]=\"false\" [value]=\"0\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"4px\" [showValue]=\"false\" [value]=\"value\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"4px\" [showValue]=\"false\" [value]=\"fulfilledValue\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"4px\" [striped]=\"true\" [showValue]=\"false\" [value]=\"value\">\n      </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"4px\" [striped]=\"true\" [showValue]=\"false\" [value]=\"fulfilledValue\">\n      </bb-progressbar-ui>\n    </div>\n  </section>\n  <section class=\"bb-block bb-block--xl\">\n    <h4>Medium</h4>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"8px\" [showValue]=\"false\" [value]=\"0\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"8px\" [showValue]=\"false\" [value]=\"value\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"8px\" [showValue]=\"false\" [value]=\"fulfilledValue\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"8px\" [striped]=\"true\" [showValue]=\"false\" [value]=\"value\">\n      </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" height=\"8px\" [striped]=\"true\" [showValue]=\"false\" [value]=\"fulfilledValue\">\n      </bb-progressbar-ui>\n    </div>\n  </section>\n  <section class=\"bb-block bb-block--xl\">\n    <h4>Large</h4>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" [showValue]=\"false\" [value]=\"0\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" [showValue]=\"false\" [value]=\"value\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" [showValue]=\"false\" [value]=\"fulfilledValue\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" [showValue]=\"false\" [value]=\"value\" [striped]=\"true\"> </bb-progressbar-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" [striped]=\"true\" [showValue]=\"false\" [value]=\"fulfilledValue\">\n      </bb-progressbar-ui>\n    </div>\n  </section>\n  <section class=\"bb-block bb-block--xl\">\n    <h4>Types</h4>\n    <h5>Primary</h5>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"primary\" [striped]=\"true\" [showValue]=\"false\" [value]=\"value\"> </bb-progressbar-ui>\n    </div>\n    <h5>Success</h5>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"success\" [striped]=\"true\" [showValue]=\"false\" [value]=\"value\"> </bb-progressbar-ui>\n    </div>\n    <h5>Info</h5>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"info\" [striped]=\"true\" [showValue]=\"false\" [value]=\"value\"> </bb-progressbar-ui>\n    </div>\n    <h5>Warning</h5>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"warning\" [striped]=\"true\" [showValue]=\"false\" [value]=\"value\"> </bb-progressbar-ui>\n    </div>\n    <h5>Danger</h5>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-progressbar-ui type=\"danger\" [striped]=\"true\" [showValue]=\"false\" [value]=\"value\"> </bb-progressbar-ui>\n    </div>\n  </section>\n</div>\n", components: [{ type: i1__namespace$A.ProgressbarComponent, selector: "bb-progressbar-ui", inputs: ["height", "max", "showValue", "striped", "animated", "type", "value"] }] });
    ProgressbarShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ProgressbarShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProgressbarShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-progressbar-ui-showcase',
                        templateUrl: './progressbar-showcase.component.html',
                    }]
            }], ctorParameters: function () { return []; } });

    var ProgressbarShowcaseModule = /** @class */ (function () {
        function ProgressbarShowcaseModule() {
        }
        return ProgressbarShowcaseModule;
    }());
    ProgressbarShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProgressbarShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProgressbarShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProgressbarShowcaseModule, declarations: [ProgressbarShowcaseComponent], imports: [i4$1.CommonModule, i1$F.ProgressbarModule] });
    ProgressbarShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProgressbarShowcaseModule, imports: [[i4$1.CommonModule, i1$F.ProgressbarModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProgressbarShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$F.ProgressbarModule],
                        declarations: [ProgressbarShowcaseComponent],
                        entryComponents: [ProgressbarShowcaseComponent],
                    }]
            }] });

    var RichTextEditorShowcaseComponent = /** @class */ (function () {
        function RichTextEditorShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                modelMessage: '',
                modelMessage2: '',
            });
        }
        return RichTextEditorShowcaseComponent;
    }());
    RichTextEditorShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    RichTextEditorShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: RichTextEditorShowcaseComponent, selector: "bb-rich-text-editor-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <div class=\"bb-block bb-block--xl\">\n    <p>\n      <bb-rich-text-editor-ui\n        #richTextEditor\n        [id]=\"'modelMessage'\"\n        label=\"Message (rich text editor)\"\n        formControlName=\"modelMessage\"\n        placeholder=\"Please, enter your message\"\n        [maxLength]=\"300\"\n        [readonly]=\"false\"\n        [required]=\"true\"\n        [aria-describedby]=\"'a4678b54-18f3-46eb-9f36-542093e5ece2'\"\n      ></bb-rich-text-editor-ui>\n    </p>\n    <p id=\"a4678b54-18f3-46eb-9f36-542093e5ece2\">\n      {{ richTextEditor.maxLength }} characters is the maximum, but the shorter the better.\n    </p>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Disabled editor</h4>\n    <p>\n      <bb-rich-text-editor-ui\n        [id]=\"'modelMessage2'\"\n        label=\"Message\"\n        formControlName=\"modelMessage2\"\n        placeholder=\"Please, enter your message\"\n        [maxLength]=\"300\"\n        [disabled]=\"true\"\n      ></bb-rich-text-editor-ui>\n    </p>\n  </div>\n</form>\n", components: [{ type: i2__namespace$g.RichTextEditorComponent, selector: "bb-rich-text-editor-ui", inputs: ["maxLength", "minLength", "placeholder", "counter", "readonly", "actionsTooltipPlacement"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
    RichTextEditorShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], RichTextEditorShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-rich-text-editor-ui-showcase',
                        templateUrl: './rich-text-editor-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var RichTextEditorShowcaseModule = /** @class */ (function () {
        function RichTextEditorShowcaseModule() {
        }
        return RichTextEditorShowcaseModule;
    }());
    RichTextEditorShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    RichTextEditorShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorShowcaseModule, declarations: [RichTextEditorShowcaseComponent], imports: [i4$1.CommonModule, i2$n.RichTextEditorModule, i1$N.ReactiveFormsModule] });
    RichTextEditorShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorShowcaseModule, imports: [[i4$1.CommonModule, i2$n.RichTextEditorModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: RichTextEditorShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$n.RichTextEditorModule, i1$N.ReactiveFormsModule],
                        declarations: [RichTextEditorShowcaseComponent],
                        entryComponents: [RichTextEditorShowcaseComponent],
                    }]
            }] });

    var startsWithCaseInsensitive = function (haystack, needle) { return haystack.toLowerCase().startsWith(needle.toLowerCase()); };
    var SearchBoxShowcaseComponent = /** @class */ (function () {
        function SearchBoxShowcaseComponent() {
            this.form = new i1$N.FormGroup({
                name: new i1$N.FormControl('John Doe'),
            });
            this.typeaheadOptions = {
                ngbTypeahead: this.search,
            };
        }
        SearchBoxShowcaseComponent.prototype.search = function (text) {
            var searchItems = ['John', 'Jane', 'James', 'Joey'];
            return text.pipe(operators.map(function (term) { return searchItems.filter(function (item) { return startsWithCaseInsensitive(item, term); }); }));
        };
        SearchBoxShowcaseComponent.prototype.customSearch = function (text) {
            var searchItems = [
                {
                    fullName: 'John',
                    legalEntityName: 'Legal Entity 1',
                },
                {
                    fullName: 'Jane',
                    legalEntityName: 'Legal Entity 2',
                },
                {
                    fullName: 'James',
                    legalEntityName: 'Legal Entity 3',
                },
                {
                    fullName: 'Joey',
                    legalEntityName: 'Legal Entity 4',
                },
            ];
            return text.pipe(operators.map(function (term) { return searchItems.filter(function (item) { return startsWithCaseInsensitive(item.fullName, term); }); }));
        };
        SearchBoxShowcaseComponent.prototype.customInputFormatter = function (person) {
            return person.fullName;
        };
        Object.defineProperty(SearchBoxShowcaseComponent.prototype, "typeaheadOptionsWithTemplate", {
            get: function () {
                return {
                    ngbTypeahead: this.customSearch,
                    resultTemplate: this.resultTemplate,
                    inputFormatter: this.customInputFormatter,
                };
            },
            enumerable: false,
            configurable: true
        });
        return SearchBoxShowcaseComponent;
    }());
    SearchBoxShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    SearchBoxShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SearchBoxShowcaseComponent, selector: "bb-search-box-ui-showcase", viewQueries: [{ propertyName: "resultTemplate", first: true, predicate: ["rt"], descendants: true, static: true }], ngImport: i0__namespace, template: "<form [formGroup]=\"form\">\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Small</h4>\n    <bb-search-box-ui\n      formControlName=\"name\"\n      [showClear]=\"true\"\n      [showSearch]=\"true\"\n      placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n      [typeaheadOptions]=\"typeaheadOptions\"\n      size=\"sm\"\n      [attr.data-role]=\"'searchbox-small'\"\n    >\n    </bb-search-box-ui>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Medium</h4>\n    <div class=\"bb-block bb-block--lg\">\n      <h5>Hide search</h5>\n      <bb-search-box-ui\n        formControlName=\"name\"\n        [showClear]=\"true\"\n        [showSearch]=\"false\"\n        placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n        [typeaheadOptions]=\"typeaheadOptions\"\n        [attr.data-role]=\"'searchbox-medium'\"\n      >\n      </bb-search-box-ui>\n    </div>\n    <div class=\"bb-block bb-block--lg\">\n      <h5>Hide clear</h5>\n      <bb-search-box-ui\n        formControlName=\"name\"\n        [showClear]=\"false\"\n        [showSearch]=\"true\"\n        placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n        [typeaheadOptions]=\"typeaheadOptions\"\n        [attr.data-role]=\"'searchbox-medium'\"\n      >\n      </bb-search-box-ui>\n    </div>\n    <div>\n      <h5>Hide both clear and search</h5>\n      <bb-search-box-ui\n        formControlName=\"name\"\n        [showClear]=\"false\"\n        [showSearch]=\"false\"\n        placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n        [typeaheadOptions]=\"typeaheadOptions\"\n        [attr.data-role]=\"'searchbox-medium'\"\n      >\n      </bb-search-box-ui>\n    </div>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Disabled</h4>\n    <bb-search-box-ui\n      formControlName=\"name\"\n      [showClear]=\"false\"\n      [showSearch]=\"false\"\n      placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n      [typeaheadOptions]=\"typeaheadOptions\"\n      [disabled]=\"true\"\n      [attr.data-role]=\"'searchbox-disabled'\"\n    >\n    </bb-search-box-ui>\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <h4>Search with custom template</h4>\n    <bb-search-box-ui\n      formControlName=\"name\"\n      [showClear]=\"true\"\n      [showSearch]=\"true\"\n      placeholder=\"Search box with autocomplete. Start typing with letter 'J'\"\n      [typeaheadOptions]=\"typeaheadOptionsWithTemplate\"\n      [attr.data-role]=\"'searchbox-with-autocomplete'\"\n    >\n    </bb-search-box-ui>\n  </div>\n</form>\n\n<ng-template #rt let-r=\"result\">\n  <div class=\"p-2 w-50\">\n    <div class=\"font-weight-bold\">{{ r.fullName }}</div>\n    <div class=\"text-support\">{{ r.legalEntityName }}</div>\n  </div>\n</ng-template>\n", components: [{ type: i1__namespace$z.SearchBoxComponent, selector: "bb-search-box-ui", inputs: ["placeholder", "maxLength", "squareBorder", "typeaheadOptions", "showSearch", "showClear", "searchLabel", "clearLabel", "autocomplete"], outputs: ["submit", "clear", "valueChange"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    SearchBoxShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], SearchBoxShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-search-box-ui-showcase',
                        templateUrl: './search-box-showcase.component.html',
                    }]
            }], propDecorators: { resultTemplate: [{
                    type: i0.ViewChild,
                    args: ['rt', { static: true }]
                }] } });

    var SearchBoxShowcaseModule = /** @class */ (function () {
        function SearchBoxShowcaseModule() {
        }
        return SearchBoxShowcaseModule;
    }());
    SearchBoxShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    SearchBoxShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxShowcaseModule, declarations: [SearchBoxShowcaseComponent], imports: [i4$1.CommonModule, i1$G.SearchBoxModule, i1$N.ReactiveFormsModule] });
    SearchBoxShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxShowcaseModule, imports: [[i4$1.CommonModule, i1$G.SearchBoxModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SearchBoxShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$G.SearchBoxModule, i1$N.ReactiveFormsModule],
                        declarations: [SearchBoxShowcaseComponent],
                        entryComponents: [SearchBoxShowcaseComponent],
                    }]
            }] });

    var SelectListShowcaseComponent = /** @class */ (function () {
        function SelectListShowcaseComponent() {
            var _this = this;
            /** Examples for standard data structure - e.g. { name: '', value: '' } */
            this.singleSelectItems = [
                { name: 'Single One', value: 'single-one' },
                { name: 'Single Two', value: 'single-two' },
                { name: 'Single Three', value: 'single-three' },
            ];
            this.multiSelectItems = [
                { name: 'Multi One', value: 'multi-one' },
                { name: 'Multi Two', value: 'multi-two' },
                { name: 'Multi Three', value: 'multi-three' },
                { name: 'Multi Four', value: 'multi-four' },
                { name: 'Multi Five', value: 'multi-five' },
            ];
            /** Example for non-standard data structure - e.g. { name: '', code: '' } */
            this.countries = [
                { name: 'France', code: 'FRA' },
                { name: 'Germany', code: 'GER' },
                { name: 'Italy', code: 'ITA' },
                { name: 'United Kingdom', code: 'UK' },
            ];
            this.itemsObservable$ = rxjs.of([
                { name: 'Item One', value: 'item-one' },
                { name: 'Item Two', value: 'item-two' },
            ]);
            this.searchOnLoadSubject = new rxjs.BehaviorSubject('');
            this.searchAfterValueSubject = new rxjs.Subject();
            this.loadingSubject = new rxjs.BehaviorSubject(false);
            this.searchOnLoadItems$ = this.searchOnLoadSubject.pipe(operators.tap(function () { return _this.loadingSubject.next(true); }), operators.delay(1000), operators.switchMap(function () { return _this.itemsObservable$; }), operators.tap(function () { return _this.loadingSubject.next(false); }));
            this.loading = this.loadingSubject.asObservable();
            this.searchAfterValueItems$ = this.searchAfterValueSubject.pipe(operators.switchMap(function () { return _this.itemsObservable$; }));
        }
        SelectListShowcaseComponent.prototype.ngOnInit = function () {
            this.form = new i1$N.FormGroup({
                singleSelect: new i1$N.FormControl(null),
                multipleSelect: new i1$N.FormControl([]),
                multipleSelectDestinations: new i1$N.FormControl([]),
                multipleSelectObservable: new i1$N.FormControl([]),
                searchOnLoad: new i1$N.FormControl(undefined),
                searchAfterValue: new i1$N.FormControl(undefined),
            });
        };
        SelectListShowcaseComponent.prototype.searchOnLoad = function (value) {
            this.searchOnLoadSubject.next(value);
        };
        SelectListShowcaseComponent.prototype.searchAfterValue = function (value) {
            this.searchAfterValueSubject.next(value);
        };
        return SelectListShowcaseComponent;
    }());
    SelectListShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectListShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    SelectListShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SelectListShowcaseComponent, selector: "bb-select-list-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"form\">\n  <div class=\"bb-block bb-block--xl\">\n    <h4 id=\"singleSelectLabel\">Single Select</h4>\n    <bb-select-list-ui\n      id=\"select-list\"\n      formControlName=\"singleSelect\"\n      placeholder=\"Start typing. e.g. single\"\n      [items]=\"singleSelectItems\"\n      minTermLength=\"3\"\n      aria-labelledby=\"singleSelectLabel\"\n    >\n    </bb-select-list-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <bb-select-list-ui\n      id=\"select-list2\"\n      formControlName=\"singleSelect\"\n      placeholder=\"Start typing. e.g. single\"\n      [items]=\"singleSelectItems\"\n      minTermLength=\"3\"\n      label=\"Embed label\"\n    >\n    </bb-select-list-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <h4 id=\"multipleSelectLabel\">Multiple Select - Max. 3 selections</h4>\n    <bb-select-list-ui\n      id=\"select-list-multi\"\n      formControlName=\"multipleSelect\"\n      placeholder=\"Start typing. e.g. multi\"\n      [items]=\"multiSelectItems\"\n      minTermLength=\"3\"\n      [multiple]=\"true\"\n      maxSelectedItems=\"3\"\n      aria-labelledby=\"multipleSelectLabel\"\n    >\n    </bb-select-list-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <h4 id=\"multipleSelectLabelDestinations\">Multiple Select - Non-Standard Data Structure</h4>\n    <bb-select-list-ui\n      id=\"select-list-multi-destinations\"\n      formControlName=\"multipleSelectDestinations\"\n      placeholder=\"Start typing. e.g. germany\"\n      [items]=\"countries\"\n      minTermLength=\"3\"\n      [multiple]=\"true\"\n      aria-labelledby=\"multipleSelectLabelDestinations\"\n    >\n    </bb-select-list-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <h4 id=\"multipleSelectLabelObservable\">Multiple Select - Items from Observable</h4>\n    <bb-select-list-ui\n      id=\"select-list-multi-observable\"\n      formControlName=\"multipleSelectObservable\"\n      placeholder=\"Start typing. e.g. item\"\n      [items]=\"itemsObservable$ | async\"\n      minTermLength=\"3\"\n      [multiple]=\"true\"\n      aria-labelledby=\"multipleSelectLabelObservable\"\n    >\n    </bb-select-list-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <h4 id=\"searchOnLoadLabel\">Single Select - Dynamic items list, retrieved on page load</h4>\n    <bb-select-list-ui\n      label=\"Search on load\"\n      formControlName=\"searchOnLoad\"\n      placeholder=\"Click to open dropdown, items are loaded when page is. Typing will return back the input value\"\n      [items]=\"searchOnLoadItems$ | async\"\n      [filterEnabled]=\"false\"\n      minTermLength=\"3\"\n      [loading]=\"loading | async\"\n      (search)=\"searchOnLoad($event)\"\n      aria-labelledby=\"searchOnLoadLabel\"\n    >\n    </bb-select-list-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <h4 id=\"searchAfterValueLabel\">Single Select - Dynamic items list, retrieved after first search</h4>\n    <bb-select-list-ui\n      formControlName=\"searchAfterValue\"\n      placeholder=\"Items are loaded when you search. Typing will return back the input value\"\n      [items]=\"searchAfterValueItems$ | async\"\n      [filterEnabled]=\"false\"\n      minTermLength=\"3\"\n      (search)=\"searchAfterValue($event)\"\n      aria-labelledby=\"searchAfterValueLabel\"\n    >\n    </bb-select-list-ui>\n  </div>\n</form>\n", components: [{ type: i1__namespace$M.SelectListComponent, selector: "bb-select-list-ui", inputs: ["loading", "placeholder", "minTermLength", "maxSelectedItems", "multiple", "items", "filterEnabled"], outputs: ["valueChange", "search", "clear"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }], pipes: { "async": i4__namespace.AsyncPipe } });
    SelectListShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], SelectListShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectListShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-select-list-ui-showcase',
                        templateUrl: './select-list-showcase.component.html',
                    }]
            }] });

    var SelectListShowcaseModule = /** @class */ (function () {
        function SelectListShowcaseModule() {
        }
        return SelectListShowcaseModule;
    }());
    SelectListShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectListShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    SelectListShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectListShowcaseModule, declarations: [SelectListShowcaseComponent], imports: [i4$1.CommonModule, i1$H.SelectListModule, i1$N.FormsModule, i1$N.ReactiveFormsModule] });
    SelectListShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectListShowcaseModule, imports: [[i4$1.CommonModule, i1$H.SelectListModule, i1$N.FormsModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectListShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$H.SelectListModule, i1$N.FormsModule, i1$N.ReactiveFormsModule],
                        declarations: [SelectListShowcaseComponent],
                        entryComponents: [SelectListShowcaseComponent],
                    }]
            }] });

    var StepperShowcaseComponent = /** @class */ (function () {
        function StepperShowcaseComponent() {
            this.data = '';
            this.steps = [
                {
                    label: 'Select a category',
                    ariaLabel: 'Select a category step',
                    isCurrent: false,
                    isChecked: true,
                    isActive: true,
                },
                {
                    label: 'Select a category',
                    ariaLabel: 'Select a category step',
                    isCurrent: true,
                    isChecked: false,
                    isActive: true,
                },
                {
                    label: 'Select a category',
                    ariaLabel: 'Select a category step',
                    isCurrent: false,
                    isChecked: false,
                    isActive: false,
                },
            ];
            this.stepsWithChildren = [
                {
                    label: 'Select a category',
                    stateLabel: 'Successful',
                    ariaLabel: 'Select a category step',
                    isCurrent: false,
                    isChecked: true,
                    isActive: true,
                },
                {
                    label: 'Select a category',
                    ariaLabel: 'Select a category step',
                    stateLabel: 'Done',
                    data: 'category-1',
                    isCurrent: false,
                    isChecked: true,
                    isActive: true,
                },
                {
                    label: 'Select a category',
                    stateLabel: 'Open',
                    ariaLabel: 'Select a category step',
                    isCurrent: true,
                    isChecked: false,
                    isActive: true,
                    children: [
                        {
                            label: 'Select a category',
                            ariaLabel: 'Select a category step',
                            data: 'category-2',
                            isCurrent: false,
                            isChecked: true,
                            isActive: true,
                        },
                        {
                            label: 'Select a category',
                            ariaLabel: 'Select a category step',
                            isCurrent: true,
                            isChecked: false,
                            isActive: true,
                        },
                        {
                            label: 'Select a category',
                            ariaLabel: 'Select a category step',
                            data: 'category-3',
                            isCurrent: false,
                            isChecked: false,
                            isActive: false,
                        },
                        {
                            label: 'Select a category',
                            ariaLabel: 'Select a category step',
                            isCurrent: false,
                            isChecked: false,
                            isActive: false,
                        },
                    ],
                },
                {
                    label: 'Select a category',
                    stateLabel: 'Open',
                    data: 'category-4',
                    ariaLabel: 'Select a category step',
                    isCurrent: false,
                    isChecked: false,
                    isActive: false,
                },
                {
                    label: 'Select a category',
                    stateLabel: 'Open',
                    ariaLabel: 'Select a category step',
                    isCurrent: false,
                    isChecked: false,
                    isActive: false,
                },
            ];
        }
        StepperShowcaseComponent.prototype.showData = function (data) {
            this.data = data;
        };
        return StepperShowcaseComponent;
    }());
    StepperShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: StepperShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    StepperShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: StepperShowcaseComponent, selector: "bb-stepper-ui-showcase", ngImport: i0__namespace, template: "<div class=\"mb-4\">\n  <h2>With labels</h2>\n  <div class=\"mt-4 col-8\">\n    <bb-stepper-ui>\n      <bb-stepper-step-ui\n        *ngFor=\"let step of steps\"\n        [label]=\"step.label\"\n        [ariaLabel]=\"step.ariaLabel\"\n        [isCurrent]=\"step.isCurrent\"\n        [isChecked]=\"step.isChecked\"\n        [isActive]=\"step.isActive\"\n      ></bb-stepper-step-ui>\n    </bb-stepper-ui>\n  </div>\n</div>\n<div class=\"mb-4\">\n  <h2>Without labels</h2>\n  <div class=\"mt-4 col-3\">\n    <bb-stepper-ui>\n      <bb-stepper-step-ui\n        *ngFor=\"let step of steps\"\n        [isCurrent]=\"step.isCurrent\"\n        [isChecked]=\"step.isChecked\"\n        [isActive]=\"step.isActive\"\n      ></bb-stepper-step-ui>\n    </bb-stepper-ui>\n  </div>\n</div>\n<div class=\"mb-4\">\n  <h2>Vertical with sub-steps, state labels and links</h2>\n  <p>Steps 2, 3.1, 3.3 and 4 are links and change state on hover. URL: {{ data || 'click on links...' }}</p>\n  <div class=\"mt-4 col-4\">\n    <bb-stepper-ui class=\"bb-stepper--vertical\" (select)=\"showData($event)\">\n      <bb-stepper-step-ui\n        *ngFor=\"let step of stepsWithChildren\"\n        [label]=\"step.label\"\n        [ariaLabel]=\"step.ariaLabel\"\n        [stateLabel]=\"step.stateLabel\"\n        [data]=\"step.data\"\n        [isCurrent]=\"step.isCurrent\"\n        [isChecked]=\"step.isChecked\"\n        [isActive]=\"step.isActive\"\n      >\n        <bb-stepper-step-ui\n          *ngFor=\"let step of step.children\"\n          [label]=\"step.label\"\n          [ariaLabel]=\"step.label\"\n          [data]=\"step.data\"\n          [isCurrent]=\"step.isCurrent\"\n          [isActive]=\"step.isActive\"\n          [isChecked]=\"step.isChecked\"\n        ></bb-stepper-step-ui>\n      </bb-stepper-step-ui>\n    </bb-stepper-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$C.StepperComponent, selector: "bb-stepper-ui", outputs: ["select"] }, { type: i1__namespace$C.StepperStepComponent, selector: "bb-stepper-step-ui", inputs: ["label", "stateLabel", "data", "ariaLabel", "isCurrent", "isChecked", "isActive"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    StepperShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], StepperShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: StepperShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-stepper-ui-showcase',
                        templateUrl: './stepper-showcase.component.html',
                    }]
            }] });

    var StepperShowcaseModule = /** @class */ (function () {
        function StepperShowcaseModule() {
        }
        return StepperShowcaseModule;
    }());
    StepperShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: StepperShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    StepperShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: StepperShowcaseModule, declarations: [StepperShowcaseComponent], imports: [i4$1.CommonModule, i1$I.StepperModule] });
    StepperShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: StepperShowcaseModule, imports: [[i4$1.CommonModule, i1$I.StepperModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: StepperShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$I.StepperModule],
                        declarations: [StepperShowcaseComponent],
                        entryComponents: [StepperShowcaseComponent],
                    }]
            }] });

    var SwitchShowcaseComponent = /** @class */ (function () {
        function SwitchShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.value = true;
            this.vForm = this.formBuilder.group({
                defaultSwitch1: false,
                defaultSwitch2: false,
                defaultSwitch3: false,
                defaultSwitch4: true,
                defaultSwitch5: { value: false, disabled: true },
                defaultSwitch6: { value: true, disabled: true },
            });
        }
        return SwitchShowcaseComponent;
    }());
    SwitchShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SwitchShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    SwitchShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SwitchShowcaseComponent, selector: "bb-switch-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <div class=\"bb-block bb-block--md\">\n    <bb-switch-ui [id]=\"'defaultSwitch4'\" aria-label=\"Switch without visible label\" formControlName=\"defaultSwitch4\">\n    </bb-switch-ui>\n  </div>\n  <div class=\"bb-block bb-block--md\">\n    <bb-switch-ui [id]=\"'defaultSwitch5'\" aria-label=\"Disabled switch\" formControlName=\"defaultSwitch5\"> </bb-switch-ui>\n  </div>\n  <div class=\"bb-block bb-block--md\">\n    <bb-switch-ui\n      [labelPosition]=\"'right'\"\n      [label]=\"'Label'\"\n      [id]=\"'defaultSwitch3'\"\n      formControlName=\"defaultSwitch3\"\n      aria-label=\"Switch with visible label (on the right)\"\n    >\n    </bb-switch-ui>\n  </div>\n  <div>\n    <bb-switch-ui\n      [label]=\"'Label'\"\n      [id]=\"'defaultSwitch2'\"\n      formControlName=\"defaultSwitch2\"\n      aria-label=\"Switch with visible label (on the left)\"\n    >\n    </bb-switch-ui>\n  </div>\n</form>\n", components: [{ type: i2__namespace$h.SwitchComponent, selector: "bb-switch-ui", inputs: ["labelPosition"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    SwitchShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], SwitchShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SwitchShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-switch-ui-showcase',
                        templateUrl: './switch-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var SwitchShowcaseModule = /** @class */ (function () {
        function SwitchShowcaseModule() {
        }
        return SwitchShowcaseModule;
    }());
    SwitchShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SwitchShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    SwitchShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SwitchShowcaseModule, declarations: [SwitchShowcaseComponent], imports: [i4$1.CommonModule, i2$o.SwitchModule, i1$N.ReactiveFormsModule] });
    SwitchShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SwitchShowcaseModule, imports: [[i4$1.CommonModule, i2$o.SwitchModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SwitchShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$o.SwitchModule, i1$N.ReactiveFormsModule],
                        declarations: [SwitchShowcaseComponent],
                        entryComponents: [SwitchShowcaseComponent],
                    }]
            }] });

    var TabShowcaseComponent = /** @class */ (function () {
        function TabShowcaseComponent() {
            this.index = 0;
        }
        TabShowcaseComponent.prototype.onTabSelect = function (index) {
            this.index = index;
            console.log("Selected tab with index: " + index);
        };
        TabShowcaseComponent.prototype.onClick = function ($event) {
            $event.stopPropagation();
            $event.preventDefault();
        };
        return TabShowcaseComponent;
    }());
    TabShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TabShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TabShowcaseComponent, selector: "bb-tab-ui-showcase", ngImport: i0__namespace, template: "<h4>Tab group - Light</h4>\n\n<div class=\"bb-block bb-block--lg\">\n  <bb-tab-group-ui [initialSelection]=\"0\" (select)=\"onTabSelect($event)\" (click)=\"onClick($event)\">\n    <bb-tab-ui>First</bb-tab-ui>\n    <bb-tab-ui>Second</bb-tab-ui>\n    <bb-tab-ui>\n      <div class=\"bb-stack\">\n        <span class=\"bb-stack__item bb-stack__item--spacing-xs\">Third</span>\n        <bb-badge-counter-ui\n          class=\"bb-stack__item\"\n          [count]=\"3\"\n          [maxCount]=\"10\"\n          [color]=\"'danger'\"\n        ></bb-badge-counter-ui>\n      </div>\n    </bb-tab-ui>\n  </bb-tab-group-ui>\n</div>\n<h4>Tab group - Dark (Theme v2 only)</h4>\n\n<div class=\"bg-dark bb-block bb-block--lg\">\n  <bb-tab-group-ui\n    class=\"bb-tab--inverse\"\n    [initialSelection]=\"0\"\n    (select)=\"onTabSelect($event)\"\n    (click)=\"onClick($event)\"\n  >\n    <bb-tab-ui>First</bb-tab-ui>\n    <bb-tab-ui>Second</bb-tab-ui>\n    <bb-tab-ui>\n      <div class=\"bb-stack\">\n        <span class=\"bb-stack__item bb-stack__item--spacing-xs\">Third</span>\n        <bb-badge-counter-ui\n          class=\"bb-stack__item\"\n          [count]=\"3\"\n          [maxCount]=\"10\"\n          [color]=\"'danger'\"\n        ></bb-badge-counter-ui>\n      </div>\n    </bb-tab-ui>\n  </bb-tab-group-ui>\n</div>\n\n<h4>Animated tabs</h4>\n\n<div class=\"bb-quick-transfer__tabs-container\">\n  <bb-tab-group-ui [initialSelection]=\"0\" (select)=\"onTabSelect($event)\" (click)=\"onClick($event)\">\n    <bb-tab-ui>First</bb-tab-ui>\n    <bb-tab-ui>Second</bb-tab-ui>\n    <bb-tab-ui>Third</bb-tab-ui>\n  </bb-tab-group-ui>\n  <div class=\"scrollable-box-content position-relative\" [@tabsAnimation]=\"index\">\n    <div data-role=\"first-tab\" *ngIf=\"index === 0\">First tab content here</div>\n    <div data-role=\"second-tab\" *ngIf=\"index === 1\">Second tab content here</div>\n    <div data-role=\"third-tab\" *ngIf=\"index === 2\">Third tab content here</div>\n  </div>\n</div>\n", components: [{ type: i2__namespace$j.TabGroupComponent, selector: "bb-tab-group-ui", inputs: ["initialSelection"], outputs: ["select"] }, { type: i2__namespace$j.TabComponent, selector: "bb-tab-ui" }, { type: i1__namespace$5.BadgeCounterComponent, selector: "bb-badge-counter-ui", inputs: ["color", "count", "maxCount"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], animations: [util.tabsAnim] });
    TabShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], TabShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-tab-ui-showcase',
                        templateUrl: './tab-showcase.component.html',
                        animations: [util.tabsAnim],
                    }]
            }] });

    var TabShowcaseModule = /** @class */ (function () {
        function TabShowcaseModule() {
        }
        return TabShowcaseModule;
    }());
    TabShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TabShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabShowcaseModule, declarations: [TabShowcaseComponent], imports: [i4$1.CommonModule, i2$p.TabModule, i1$5.BadgeCounterModule] });
    TabShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabShowcaseModule, imports: [[i4$1.CommonModule, i2$p.TabModule, i1$5.BadgeCounterModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TabShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$p.TabModule, i1$5.BadgeCounterModule],
                        declarations: [TabShowcaseComponent],
                        entryComponents: [TabShowcaseComponent],
                    }]
            }] });

    var COUNTRIES = [
        {
            id: 1,
            name: 'Russia',
            capital: 'Moscow',
            capitalPopulation: 10000000,
            flag: 'f/f3/Flag_of_Russia.svg',
            area: 17075200,
            population: 146989754,
        },
        {
            id: 2,
            name: 'France',
            capital: 'Paris',
            capitalPopulation: 10000000,
            flag: 'c/c3/Flag_of_France.svg',
            area: 640679,
            population: 64979548,
        },
        {
            id: 3,
            name: 'Germany',
            capital: 'Berlin',
            capitalPopulation: 10000000,
            flag: 'b/ba/Flag_of_Germany.svg',
            area: 357114,
            population: 82114224,
        },
        {
            id: 4,
            name: 'Portugal',
            capital: 'Lisbon',
            capitalPopulation: 10000000,
            flag: '5/5c/Flag_of_Portugal.svg',
            area: 92090,
            population: 10329506,
        },
        {
            id: 5,
            name: 'Canada',
            capital: 'Ottawa',
            capitalPopulation: 10000000,
            flag: 'c/cf/Flag_of_Canada.svg',
            area: 9976140,
            population: 36624199,
        },
        {
            id: 6,
            name: 'Vietnam',
            capital: 'Hanoi',
            capitalPopulation: 10000000,
            flag: '2/21/Flag_of_Vietnam.svg',
            area: 331212,
            population: 95540800,
        },
        {
            id: 7,
            name: 'Brazil',
            capital: 'Brazil',
            capitalPopulation: 10000000,
            flag: '0/05/Flag_of_Brazil.svg',
            area: 8515767,
            population: 209288278,
        },
        {
            id: 8,
            name: 'Mexico',
            capital: 'Mexico city',
            capitalPopulation: 10000000,
            flag: 'f/fc/Flag_of_Mexico.svg',
            area: 1964375,
            population: 129163276,
        },
        {
            id: 9,
            name: 'United States',
            capital: 'Washington',
            capitalPopulation: 10000000,
            flag: 'a/a4/Flag_of_the_United_States.svg',
            area: 9629091,
            population: 324459463,
        },
        {
            id: 10,
            name: 'India',
            capital: 'New Delhi',
            capitalPopulation: 10000000,
            flag: '4/41/Flag_of_India.svg',
            area: 3287263,
            population: 1324171354,
        },
        {
            id: 11,
            name: 'Indonesia',
            capital: 'Jakarta',
            capitalPopulation: 10000000,
            flag: '9/9f/Flag_of_Indonesia.svg',
            area: 1910931,
            population: 263991379,
        },
        {
            id: 12,
            name: 'Tuvalu',
            capital: 'Funafuti',
            capitalPopulation: 10000000,
            flag: '3/38/Flag_of_Tuvalu.svg',
            area: 26,
            population: 11097,
        },
        {
            id: 13,
            name: 'China',
            capital: 'Beijing',
            capitalPopulation: 10000000,
            flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',
            area: 9596960,
            population: 1409517397,
        },
    ];

    var TableShowcaseComponent = /** @class */ (function () {
        function TableShowcaseComponent() {
            this.currentPage = 0;
            this.pageSize = 10;
            this.rotate = { asc: 'ascending', desc: 'descending', '': '' };
            this.iconMap = { asc: 'caret-up', desc: 'caret-down', '': '' };
            this.sortDirection = '';
            this.activeSortingOption = {};
            this.sortingOptions = [
                { label: 'Capital', value: 'capital', direction: '' },
                { label: 'Population', value: 'population', direction: '' },
            ];
            this.countries$ = rxjs.of(this.getItems(0, this.pageSize));
        }
        TableShowcaseComponent.prototype.onSort = function (_a) {
            var column = _a.column, direction = _a.direction;
            this.activeSortingOption = {};
            var selectedOption = this.sortingOptions.find(function (option) { return option.value === column; });
            if (selectedOption && direction !== '') {
                this.activeSortingOption = selectedOption;
                this.activeSortingOption.direction = direction;
            }
            this.countries$ = rxjs.of(this.sort(this.getItems(this.currentPage * this.pageSize, this.currentPage * this.pageSize + this.pageSize), column, direction));
        };
        TableShowcaseComponent.prototype.onRowSelect = function (data) {
            this.selected = data;
        };
        TableShowcaseComponent.prototype.onRowClick = function (data) {
            this.tableRef.toggleItem(data, !this.tableRef.isSelected(data));
        };
        TableShowcaseComponent.prototype.search = function (value) {
            this.countries$ =
                value === ''
                    ? rxjs.of(this.getItems(this.currentPage, this.pageSize))
                    : rxjs.of(COUNTRIES.filter(function (country) { return country.name.toLowerCase().includes(value); }));
        };
        TableShowcaseComponent.prototype.sort = function (countries, column, direction) {
            var _this = this;
            this.sortDirection = this.rotate[direction];
            if (direction === '') {
                return countries;
            }
            else {
                return __spreadArray([], __read(countries)).sort(function (a, b) {
                    var res = _this.compare(a[column], b[column]);
                    return direction === 'asc' ? res : -res;
                });
            }
        };
        TableShowcaseComponent.prototype.compare = function (v1, v2) {
            return v1 < v2 ? -1 : v1 > v2 ? 1 : 0;
        };
        TableShowcaseComponent.prototype.getItems = function (start, end) {
            return COUNTRIES.slice(start, end);
        };
        Object.defineProperty(TableShowcaseComponent.prototype, "paginator", {
            get: function () {
                var _this = this;
                return {
                    page: this.currentPage,
                    boundaryLinks: false,
                    directionLinks: true,
                    totalItems: COUNTRIES.length,
                    itemsPerPage: this.pageSize,
                    maxNavPages: 3,
                    onPageChange: function (page) {
                        _this.countries$ = rxjs.of(_this.getItems(page * _this.pageSize, page * _this.pageSize + _this.pageSize));
                    },
                };
            },
            enumerable: false,
            configurable: true
        });
        return TableShowcaseComponent;
    }());
    TableShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TableShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TableShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TableShowcaseComponent, selector: "bb-table-ui-showcase", viewQueries: [{ propertyName: "tableRef", first: true, predicate: ["tableRef"], descendants: true, read: i1$J.TableDirective, static: true }], ngImport: i0__namespace, template: "<div class=\"card shadow-sm\">\n  <div class=\"card-body\">\n    <div class=\"table-responsive\">\n      <table\n        #tableRef\n        (rowClick)=\"onRowClick($event)\"\n        (selectRow)=\"onRowSelect($event)\"\n        (sort)=\"onSort($event)\"\n        [bbTable]=\"countries$ | async\"\n        bbTableFocus\n        class=\"table table-hover\"\n        data-role=\"table-showcase\"\n      >\n        <!--Add empty caption to fix sonar warning-->\n        <caption></caption>\n        <thead>\n          <tr>\n            <th\n              [attr.aria-sort]=\"sortDirection\"\n              [bbSortable]=\"'name'\"\n              scope=\"col\"\n              tabindex=\"0\"\n              data-role=\"table-sort-name\"\n            >\n              <span class=\"th-content\"> Data left aligned </span>\n            </th>\n            <!--set position relative is required. Since the dropdown button(set as position absolute) requires full height and width of the parent element-->\n            <th class=\"position-relative\" bbSortable scope=\"col\" role=\"presentation\" data-role=\"table-sort-dropdown\">\n              <span class=\"th-content\">Capital, Population</span>\n              <!--Add th-dropdown-menu class on dropdown to make it work with <th> tag-->\n              <!--Set role as presentation for dropdown so that screen reader will not read this dropdown.-->\n              <!--bbSortable directive will add necessary role to dropdown button so that button will be actually read as colunmheader by screen readers-->\n              <bb-dropdown-menu-ui\n                btnColor=\"unstyled\"\n                buttonSize=\"sm\"\n                class=\"th-dropdown-menu\"\n                dropDownButtonLabel=\"Capital, Population\"\n                role=\"presentation\"\n                position=\"bottom-left\"\n              >\n                <ng-template bbDropdownMenuItem>\n                  <div class=\"dropdown-header\">\n                    <h3 class=\"bb-subheader bb-text-support\">SORT BY</h3>\n                  </div>\n                  <!--bbTableMenuitem directive is added to facilitate the common behaviour of dropdown item such as active class and click event-->\n                  <button\n                    role=\"menuitem\"\n                    *ngFor=\"let option of sortingOptions\"\n                    class=\"dropdown-item bb-stack\"\n                    [bbDropdownMenuOption]=\"option.value\"\n                  >\n                    <span>\n                      {{ option.label }}\n                    </span>\n                    <bb-icon-ui\n                      class=\"bb-stack__item--push-right\"\n                      *ngIf=\"activeSortingOption.value === option.value\"\n                      [name]=\"iconMap[activeSortingOption.direction]\"\n                    >\n                    </bb-icon-ui>\n                  </button>\n                </ng-template>\n              </bb-dropdown-menu-ui>\n            </th>\n            <th class=\"text-center\" scope=\"col\">\n              <span class=\"th-content\"> Data center aligned </span>\n            </th>\n            <th [attr.aria-sort]=\"sortDirection\" bbSortable=\"area\" scope=\"col\" tabindex=\"0\" data-role=\"table-sort-area\">\n              <span class=\"th-content\"> Area (left aligned) </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"th-content\"> Data center aligned </span>\n            </th>\n            <th class=\"text-right\" scope=\"col\">\n              <span class=\"th-content\"> Data right aligned </span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let country of countries$ | async\" [bbRow]=\"country\">\n            <th scope=\"row\">\n              <span class=\"th-content\"> Data left aligned </span>\n            </th>\n            <td>\n              <div class=\"bb-stack\">\n                <img\n                  [src]=\"'https://upload.wikimedia.org/wikipedia/commons/' + country.flag\"\n                  [style.width]=\"'20px'\"\n                  [style.verticalAlign]=\"'baseline'\"\n                  alt=\"flag\"\n                  class=\"bb-stack__item--spacing-sm\"\n                  src=\"#\"\n                />\n                {{ country.name }}\n              </div>\n            </td>\n            <th scope=\"row\">\n              <span class=\"th-content\"> Capital (left aligned) </span>\n            </th>\n            <td>\n              <span class=\"bb-block bb-block--sm\">{{ country.capital }}</span>\n              <span class=\"text-support\">({{ country.capitalPopulation | number }})</span>\n            </td>\n            <th scope=\"row\">\n              <span class=\"th-content\"> Data center aligned </span>\n            </th>\n            <td class=\"text-center\">Some random text here</td>\n            <th scope=\"row\">\n              <span class=\"th-content\"> Area (left aligned) </span>\n            </th>\n            <td>Area: {{ country.area }}</td>\n            <th scope=\"row\">\n              <span class=\"th-content\"> Data center aligned </span>\n            </th>\n            <td class=\"bb-text-align-center\">\n              <bb-badge-ui color=\"info\" text=\"test\"></bb-badge-ui>\n            </td>\n            <th scope=\"row\" class=\"bb-text-align-right\">\n              <span class=\"th-content\"> Data right aligned </span>\n            </th>\n            <td class=\"bb-text-align-right\">\n              {{ country.population | number }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <bb-pagination-ui\n      (pageChange)=\"paginator.onPageChange($event)\"\n      [boundaryLinks]=\"paginator.boundaryLinks\"\n      [directionLinks]=\"paginator.directionLinks\"\n      [itemsPerPage]=\"paginator.itemsPerPage\"\n      [maxNavPages]=\"paginator.maxNavPages\"\n      [page]=\"paginator.page\"\n      [totalItems]=\"paginator.totalItems\"\n    >\n    </bb-pagination-ui>\n  </div>\n</div>\n", components: [{ type: i1__namespace$d.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3__namespace.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i1__namespace$o.PaginatorComponent, selector: "bb-pagination-ui", inputs: ["page", "boundaryLinks", "directionLinks", "totalItems", "itemsPerPage", "maxNavPages"], outputs: ["pageChange"] }], directives: [{ type: i1__namespace$B.TableDirective, selector: "table[bbTable]", inputs: ["bbTable"], outputs: ["selectRow", "rowClick", "sort"] }, { type: i1__namespace$B.TableFocusDirective, selector: "[bbTableFocus]", inputs: ["focusFirstRowOnChanges"] }, { type: i1__namespace$B.TableSortableDirective, selector: "th[bbSortable]", inputs: ["bbSortable", "direction"], outputs: ["sort"] }, { type: i1__namespace$d.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$d.DropdownMenuOptionDirective, selector: "[bbDropdownMenuOption]", inputs: ["bbDropdownMenuOption", "active"], outputs: ["selectionChange"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$B.TableRowDirective, selector: "tr[bbRow]", inputs: ["bbRow"] }], pipes: { "async": i4__namespace.AsyncPipe, "number": i4__namespace.DecimalPipe } });
    TableShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], TableShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TableShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-table-ui-showcase',
                        templateUrl: './table-showcase.component.html',
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { tableRef: [{
                    type: i0.ViewChild,
                    args: ['tableRef', { static: true, read: i1$J.TableDirective }]
                }] } });

    var TableShowcaseModule = /** @class */ (function () {
        function TableShowcaseModule() {
        }
        return TableShowcaseModule;
    }());
    TableShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TableShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TableShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TableShowcaseModule, declarations: [TableShowcaseComponent], imports: [i4$1.CommonModule, i1$J.TableModule, i2$9.IconModule, i1$d.DropdownMenuModule, i1$s.PaginationModule, i3.BadgeModule] });
    TableShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TableShowcaseModule, imports: [[i4$1.CommonModule, i1$J.TableModule, i2$9.IconModule, i1$d.DropdownMenuModule, i1$s.PaginationModule, i3.BadgeModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TableShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$J.TableModule, i2$9.IconModule, i1$d.DropdownMenuModule, i1$s.PaginationModule, i3.BadgeModule],
                        declarations: [TableShowcaseComponent],
                        entryComponents: [TableShowcaseComponent],
                    }]
            }] });

    var TextareaShowcaseComponent = /** @class */ (function () {
        function TextareaShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                textarea: ['', i1$N.Validators.minLength(3)],
            });
        }
        return TextareaShowcaseComponent;
    }());
    TextareaShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TextareaShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TextareaShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TextareaShowcaseComponent, selector: "bb-textarea-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <bb-textarea-ui\n    [id]=\"'textarea'\"\n    label=\"What's happening?\"\n    placeholder=\"Enter text...\"\n    formControlName=\"textarea\"\n    [showCharCounter]=\"true\"\n    [minLength]=\"3\"\n    [maxLength]=\"20\"\n    [rows]=\"3\"\n    [cols]=\"50\"\n    [aria-describedby]=\"'textAreaError'\"\n    wrap=\"hard\"\n  >\n  </bb-textarea-ui>\n  <bb-input-validation-message-ui [id]=\"'textAreaError'\" [showErrors]=\"vForm?.dirty && vForm?.get('textarea')?.errors\">\n    <p role=\"alert\">This field is not correct.</p>\n  </bb-input-validation-message-ui>\n</form>\n", components: [{ type: i2__namespace$i.TextareaComponent, selector: "bb-textarea-ui", inputs: ["rows", "cols", "placeholder", "maxLength", "minLength", "readonly", "showCharCounter", "wrap"] }, { type: i3__namespace$2.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    TextareaShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], TextareaShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TextareaShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-textarea-ui-showcase',
                        templateUrl: './textarea-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var TextareaShowcaseModule = /** @class */ (function () {
        function TextareaShowcaseModule() {
        }
        return TextareaShowcaseModule;
    }());
    TextareaShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TextareaShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TextareaShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TextareaShowcaseModule, declarations: [TextareaShowcaseComponent], imports: [i4$1.CommonModule, i2$q.TextareaModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule] });
    TextareaShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TextareaShowcaseModule, imports: [[i4$1.CommonModule, i2$q.TextareaModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TextareaShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$q.TextareaModule, i1$N.ReactiveFormsModule, i3$2.InputValidationMessageModule],
                        declarations: [TextareaShowcaseComponent],
                        entryComponents: [TextareaShowcaseComponent],
                    }]
            }] });

    var TooltipShowcaseComponent = /** @class */ (function () {
        function TooltipShowcaseComponent() {
        }
        return TooltipShowcaseComponent;
    }());
    TooltipShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TooltipShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TooltipShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TooltipShowcaseComponent, selector: "bb-tooltip-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <form>\n      <p>\n        <label [for]=\"nameInput.id\"\n          >Full name: (medium tooltip top)\n          <bb-icon-ui name=\"help-outline\" [bbTooltip]=\"fullNameTip\" placement=\"top\" color=\"info\"></bb-icon-ui>\n        </label>\n        <bb-input-text-ui #nameInput placeholder=\"Full name\"></bb-input-text-ui>\n      </p>\n      <p>\n        <label [for]=\"addressInput.id\"\n          >Address: (tooltip right)\n          <bb-icon-ui name=\"help-outline\" [bbTooltip]=\"addressTip\" placement=\"right\" color=\"info\"></bb-icon-ui>\n        </label>\n        <bb-input-text-ui #addressInput placeholder=\"Last name and suffix\"></bb-input-text-ui>\n      </p>\n      <p>\n        <label [for]=\"phoneInput.id\"\n          >Phone number: (tooltip bottom)\n          <bb-icon-ui name=\"help-outline\" [bbTooltip]=\"spacesInputTip\" placement=\"bottom\" color=\"info\"></bb-icon-ui>\n        </label>\n        <bb-input-text-ui #phoneInput placeholder=\"+0000000000\"></bb-input-text-ui>\n      </p>\n      <p>\n        <label [for]=\"ibanInput.id\">\n          <bb-icon-ui name=\"help-outline\" [bbTooltip]=\"spacesInputTip\" placement=\"left\" color=\"info\"></bb-icon-ui>\n          IBAN: (tooltip left)\n        </label>\n        <bb-input-text-ui #ibanInput placeholder=\"IBAN\"></bb-input-text-ui>\n      </p>\n    </form>\n  </div>\n</div>\n\n<ng-template #fullNameTip>Do not abbreviate given names or infix</ng-template>\n<ng-template #addressTip>Include street and number</ng-template>\n<ng-template #spacesInputTip>Do not include spaces</ng-template>\n", components: [{ type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }], directives: [{ type: i2__namespace$k.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }] });
    TooltipShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], TooltipShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TooltipShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-tooltip-ui-showcase',
                        templateUrl: './tooltip-showcase.component.html',
                    }]
            }] });

    var TooltipShowcaseModule = /** @class */ (function () {
        function TooltipShowcaseModule() {
        }
        return TooltipShowcaseModule;
    }());
    TooltipShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TooltipShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TooltipShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TooltipShowcaseModule, declarations: [TooltipShowcaseComponent], imports: [i4$1.CommonModule, i2$r.TooltipModule, i2$9.IconModule, i2$j.InputTextModule] });
    TooltipShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TooltipShowcaseModule, imports: [[i4$1.CommonModule, i2$r.TooltipModule, i2$9.IconModule, i2$j.InputTextModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: TooltipShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i2$r.TooltipModule, i2$9.IconModule, i2$j.InputTextModule],
                        declarations: [TooltipShowcaseComponent],
                        entryComponents: [TooltipShowcaseComponent],
                    }]
            }] });

    var InputFileShowcaseComponent = /** @class */ (function () {
        function InputFileShowcaseComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.vForm = this.formBuilder.group({
                fileInput1: undefined,
                fileInput2: undefined,
                fileInput3: undefined,
                fileInput4: undefined,
                fileInput5: undefined,
                fileInput6: undefined,
                fileInput7: undefined,
            });
        }
        InputFileShowcaseComponent.prototype.onUpload = function (event) {
            console.log(event);
            console.log(this.vForm);
        };
        return InputFileShowcaseComponent;
    }());
    InputFileShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputFileShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputFileShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputFileShowcaseComponent, selector: "bb-input-file-ui-showcase", ngImport: i0__namespace, template: "<form [formGroup]=\"vForm\">\n  <div class=\"bb-block bb-block--lg\">\n    <h4>Default</h4>\n    <bb-input-file-ui\n      label=\"Default file input\"\n      (change)=\"onUpload($event)\"\n      formControlName=\"fileInput1\"\n      data-role=\"file-input-default\"\n    >\n    </bb-input-file-ui>\n    <h4>Multiple</h4>\n    <bb-input-file-ui\n      label=\"Multiple files input\"\n      (change)=\"onUpload($event)\"\n      formControlName=\"fileInput2\"\n      data-role=\"file-input-multiple\"\n      multiple=\"true\"\n    >\n    </bb-input-file-ui>\n    <h4>Custom button color</h4>\n    <div class=\"bb-stack\">\n      <bb-input-file-ui\n        class=\"bb-stack__item\"\n        label=\"File input primary\"\n        (change)=\"onUpload($event)\"\n        color=\"primary\"\n        formControlName=\"fileInput3\"\n        data-role=\"file-input-primary\"\n      >\n      </bb-input-file-ui>\n      <bb-input-file-ui\n        class=\"bb-stack__item\"\n        label=\"File input danger\"\n        (change)=\"onUpload($event)\"\n        color=\"danger\"\n        formControlName=\"fileInput4\"\n        data-role=\"file-input-danger\"\n      >\n      </bb-input-file-ui>\n    </div>\n    <h4>Accept only image formats, custom icon and text</h4>\n    <bb-input-file-ui\n      label=\"IMG file input\"\n      accept=\".png, .jpg, .jpeg, .jpeg\"\n      (change)=\"onUpload($event)\"\n      iconName=\"image\"\n      buttonText=\"Upload image\"\n      formControlName=\"fileInput5\"\n      data-role=\"file-input-image\"\n    >\n    </bb-input-file-ui>\n    <h4>File size limited to 10 Mbs</h4>\n    <bb-input-file-ui\n      maxSizeInMb=\"10\"\n      label=\"File input limited to 10 Mbs\"\n      (change)=\"onUpload($event)\"\n      formControlName=\"fileInput6\"\n      data-role=\"file-input-image-with-size-limit\"\n    ></bb-input-file-ui>\n\n    <h4>Disabled</h4>\n    <bb-input-file-ui\n      label=\"Disabled file input\"\n      disabled=\"true\"\n      (change)=\"onUpload($event)\"\n      formControlName=\"fileInput7\"\n      data-role=\"file-input-disabled\"\n    >\n    </bb-input-file-ui>\n  </div>\n</form>\n", components: [{ type: i2__namespace$q.InputFileComponent, selector: "bb-input-file-ui", inputs: ["accept", "maxSizeInMb", "multiple", "color", "autofocus", "buttonText", "buttonSize", "iconName"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
    InputFileShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], InputFileShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputFileShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-file-ui-showcase',
                        templateUrl: './input-file-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var InputFileShowCaseModule = /** @class */ (function () {
        function InputFileShowCaseModule() {
        }
        return InputFileShowCaseModule;
    }());
    InputFileShowCaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputFileShowCaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    InputFileShowCaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputFileShowCaseModule, declarations: [InputFileShowcaseComponent], imports: [i2$d.InputFileModule, i1$N.ReactiveFormsModule] });
    InputFileShowCaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputFileShowCaseModule, imports: [[i2$d.InputFileModule, i1$N.ReactiveFormsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputFileShowCaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2$d.InputFileModule, i1$N.ReactiveFormsModule],
                        declarations: [InputFileShowcaseComponent],
                        entryComponents: [InputFileShowcaseComponent],
                    }]
            }] });

    var ModeHeaderShowcaseComponent = /** @class */ (function () {
        function ModeHeaderShowcaseComponent() {
            this.defaultModeHeader = {
                title: 'Close Button Displayed',
                secondaryTitle: undefined,
                showCloseButton: true,
                closeButtonAriaLabel: 'Close the mode header',
                reverseTitleOrder: true,
                displayIcon: false,
                displayStatus: false,
                displayUtilityArea: false,
                multiButtonUtilityArea: false,
            };
            this.modeHeaders = [
                Object.assign({}, this.defaultModeHeader),
                Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Close Button Hidden', showCloseButton: false, closeButtonAriaLabel: undefined }),
                Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Secondary title displayed', secondaryTitle: 'This is the secondary title' }),
                Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Title order not reversed', secondaryTitle: 'This is the secondary title', reverseTitleOrder: false }),
                Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Icon displayed', displayIcon: true }),
                Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Status displayed', displayStatus: true }),
                Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Utility Area displayed', displayUtilityArea: true }),
                Object.assign(Object.assign({}, this.defaultModeHeader), { title: 'Utility Area with multiple buttons', multiButtonUtilityArea: true }),
            ];
        }
        return ModeHeaderShowcaseComponent;
    }());
    ModeHeaderShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ModeHeaderShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ModeHeaderShowcaseComponent, selector: "bb-mode-header-ui-showcase", ngImport: i0__namespace, template: "<ng-container *ngFor=\"let modeHeader of modeHeaders\">\n  <div class=\"bb-block bb-block--xl\">\n    <bb-mode-header-ui\n      [title]=\"modeHeader.title\"\n      [secondaryTitle]=\"modeHeader.secondaryTitle\"\n      [showCloseButton]=\"modeHeader.showCloseButton\"\n      [closeButtonAriaLabel]=\"modeHeader.closeButtonAriaLabel\"\n      [reverseTitleOrder]=\"modeHeader.reverseTitleOrder\"\n    >\n      <bb-icon-ui *ngIf=\"modeHeader.displayIcon\" mode-header-icon name=\"search\" size=\"sm\" color=\"primary\"></bb-icon-ui>\n      <bb-badge-ui *ngIf=\"modeHeader.displayStatus\" mode-header-status text=\"Sample Text\" color=\"success\">\n      </bb-badge-ui>\n      <bb-dropdown-menu-ui\n        *ngIf=\"modeHeader.displayUtilityArea\"\n        mode-header-utility-area\n        container=\"body\"\n        icon=\"caret-down\"\n        btnColor=\"primary\"\n        iconSize=\"md\"\n      >\n        <ng-template bbDropdownLabel> <span>Actions</span></ng-template>\n        <ng-template bbDropdownMenuItem>\n          <button class=\"dropdown-item\" type=\"button\">Action One</button>\n          <button class=\"dropdown-item\" type=\"button\">Action Two</button>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n      <ng-container *ngIf=\"modeHeader.multiButtonUtilityArea\" mode-header-utility-area>\n        <button bbButton buttonSize=\"md\" type=\"button\" class=\"bb-button-bar__button\" [circle]=\"true\">\n          <bb-icon-ui name=\"add\" size=\"md\" cropped></bb-icon-ui>\n        </button>\n        <button bbButton buttonSize=\"md\" type=\"button\" class=\"bb-button-bar__button\" [circle]=\"true\">\n          <bb-icon-ui name=\"user\" size=\"md\" cropped></bb-icon-ui>\n        </button>\n        <button bbButton buttonSize=\"md\" type=\"button\" class=\"bb-button-bar__button\" [circle]=\"true\">\n          <bb-icon-ui name=\"payment\" size=\"md\" cropped></bb-icon-ui>\n        </button>\n      </ng-container>\n    </bb-mode-header-ui>\n  </div>\n</ng-container>\n", components: [{ type: i1__namespace$m.ModeHeaderComponent, selector: "bb-mode-header-ui", inputs: ["title", "secondaryTitle", "showCloseButton", "closeButtonAriaLabel", "reverseTitleOrder"], outputs: ["close"] }, { type: i2__namespace$8.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3__namespace.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i1__namespace$d.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "dropDownMenuRole", "dropDownMenuId", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$d.DropdownLabelDirective, selector: "ng-template[bbDropdownLabel]" }, { type: i1__namespace$d.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    ModeHeaderShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], ModeHeaderShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-mode-header-ui-showcase',
                        templateUrl: './mode-header-showcase.component.html',
                    }]
            }] });

    var uiModules = [i1$q.ModeHeaderModule, i2$9.IconModule, i3.BadgeModule, i1$d.DropdownMenuModule, i2$2.ButtonModule];
    var ModeHeaderShowcaseModule = /** @class */ (function () {
        function ModeHeaderShowcaseModule() {
        }
        return ModeHeaderShowcaseModule;
    }());
    ModeHeaderShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ModeHeaderShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderShowcaseModule, declarations: [ModeHeaderShowcaseComponent], imports: [i4$1.CommonModule, i1$q.ModeHeaderModule, i2$9.IconModule, i3.BadgeModule, i1$d.DropdownMenuModule, i2$2.ButtonModule] });
    ModeHeaderShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderShowcaseModule, imports: [__spreadArray([i4$1.CommonModule], __read(uiModules))] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ModeHeaderShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i4$1.CommonModule], __read(uiModules)),
                        declarations: [ModeHeaderShowcaseComponent],
                        entryComponents: [ModeHeaderShowcaseComponent],
                    }]
            }] });

    var CustomErrorShowcaseComponent = /** @class */ (function () {
        function CustomErrorShowcaseComponent() {
            this.errorId = 'testID';
        }
        return CustomErrorShowcaseComponent;
    }());
    CustomErrorShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomErrorShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    CustomErrorShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CustomErrorShowcaseComponent, selector: "bb-custom-error-showcase", ngImport: i0__namespace, template: "\n    <small @fade [id]=\"errorId\" *ngIf=\"text\" role=\"alert\" class=\"bb-input-validation-message\">\n      Custom error component - {{ text }}\n    </small>\n  ", isInline: true, directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], animations: [
            animations.trigger('fade', [
                animations.transition('void => *', [animations.style({ opacity: 0, height: '0px' }), animations.animate(150, animations.style({ opacity: 1, height: '*' }))]),
            ]),
        ] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: CustomErrorShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-custom-error-showcase',
                        template: "\n    <small @fade [id]=\"errorId\" *ngIf=\"text\" role=\"alert\" class=\"bb-input-validation-message\">\n      Custom error component - {{ text }}\n    </small>\n  ",
                        animations: [
                            animations.trigger('fade', [
                                animations.transition('void => *', [animations.style({ opacity: 0, height: '0px' }), animations.animate(150, animations.style({ opacity: 1, height: '*' }))]),
                            ]),
                        ],
                    }]
            }] });
    var customErrorMessagesShowcase = { required: function () { return 'My Field is required'; } };

    var InputWithCustomErrorComponent = /** @class */ (function () {
        function InputWithCustomErrorComponent() {
            this.inputField = new i1$N.FormControl(null, [i1$N.Validators.required]);
        }
        return InputWithCustomErrorComponent;
    }());
    InputWithCustomErrorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputWithCustomErrorComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    InputWithCustomErrorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InputWithCustomErrorComponent, selector: "bb-input-with-custom-error-showcase", providers: [
            {
                provide: i9.BB_VALIDATION_ERRORS,
                useValue: customErrorMessagesShowcase,
            },
            {
                provide: i9.BB_DYNAMIC_VALIDATION_ERROR_TMPL,
                useValue: CustomErrorShowcaseComponent,
            },
        ], ngImport: i0__namespace, template: "\n    <div>\n      <bb-input-text-ui\n        bbFormControl\n        label=\"Input with custom error component using InjectionToken\"\n        [formControl]=\"inputField\"\n        placeholder=\"Please enter a value, at most 35 chars...\"\n      >\n      </bb-input-text-ui>\n    </div>\n  ", isInline: true, components: [{ type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }], directives: [{ type: i9__namespace.ValidationErrorsDirective, selector: "[bbFormControl]", inputs: ["errorLabels", "showError", "inputSelector", "label", "errorComponent"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: InputWithCustomErrorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-input-with-custom-error-showcase',
                        template: "\n    <div>\n      <bb-input-text-ui\n        bbFormControl\n        label=\"Input with custom error component using InjectionToken\"\n        [formControl]=\"inputField\"\n        placeholder=\"Please enter a value, at most 35 chars...\"\n      >\n      </bb-input-text-ui>\n    </div>\n  ",
                        providers: [
                            {
                                provide: i9.BB_VALIDATION_ERRORS,
                                useValue: customErrorMessagesShowcase,
                            },
                            {
                                provide: i9.BB_DYNAMIC_VALIDATION_ERROR_TMPL,
                                useValue: CustomErrorShowcaseComponent,
                            },
                        ],
                    }]
            }] });

    exports.ControlErrorHandlerShowcaseComponent = /** @class */ (function () {
        function ControlErrorHandlerShowcaseComponent(fb) {
            this.fb = fb;
            this.customError = CustomErrorShowcaseComponent;
            this.objectDropdownOptions = [{ title: 'Option One' }, { title: 'Option Two' }, { title: 'Option Three' }];
            this.currencies = ['USD', 'EUR', 'BHD', 'OMR', 'MGA'];
            this.errorLabels1 = {
                required: function () { return 'Input is required'; },
            };
            this.errorLabels2 = {
                required: function () { return 'This textarea is required'; },
            };
            this.errorLabels3 = {
                required: function () { return 'The amount is required field'; },
            };
        }
        ControlErrorHandlerShowcaseComponent.prototype.ngOnInit = function () {
            this.form = this.fb.group({
                inputField: [null, [i1$N.Validators.required]],
                inputField2: [null, [i1$N.Validators.required, i1$N.Validators.minLength(3)]],
                textareaField: [null, i1$N.Validators.minLength(8)],
                checkboxField: [null, i1$N.Validators.requiredTrue],
                switchField: [null, i1$N.Validators.requiredTrue],
                currencyField: [null, i1$N.Validators.required],
                dropdownField: [null, i1$N.Validators.required],
                amountField: [null, i1$N.Validators.required],
            });
        };
        ControlErrorHandlerShowcaseComponent.prototype.onSubmit = function () { };
        return ControlErrorHandlerShowcaseComponent;
    }());
    exports.ControlErrorHandlerShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: exports.ControlErrorHandlerShowcaseComponent, deps: [{ token: i1__namespace$2.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    exports.ControlErrorHandlerShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: exports.ControlErrorHandlerShowcaseComponent, selector: "bb-control-error-handler-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row bb-stack\">\n  <div class=\"col-md-6\">\n    <div class=\"bb-block--md\">\n      <bb-input-with-custom-error-showcase></bb-input-with-custom-error-showcase>\n    </div>\n  </div>\n</div>\n<hr />\n<h2>Form</h2>\n<form [formGroup]=\"form\" bbFormSubmit (ngSubmit)=\"onSubmit()\">\n  <div class=\"row bb-stack bb-block--md\">\n    <div class=\"col-md-6\">\n      <div class=\"bb-block--md\">\n        <bb-input-text-ui\n          bbFormControl\n          [errorLabels]=\"errorLabels1\"\n          label=\"Input with custom error labels\"\n          formControlName=\"inputField\"\n          placeholder=\"Please enter a value, at most 35 chars...\"\n        ></bb-input-text-ui>\n      </div>\n\n      <div class=\"bb-block--md\">\n        <bb-input-text-ui\n          bbFormControl\n          [showCharCounter]=\"true\"\n          [maxLength]=\"10\"\n          aria-describedby=\"ariaDescribedbyId\"\n          label=\"Input with custom error component using errorComponent Input\"\n          formControlName=\"inputField2\"\n          placeholder=\"Please enter a value, at most 35 chars...\"\n        ></bb-input-text-ui>\n      </div>\n\n      <div class=\"bb-block--md\">\n        <div bbControlErrorContainer>\n          <bb-switch-ui\n            [required]=\"true\"\n            label=\"Label\"\n            id=\"defaultSwitch3\"\n            bbFormControl\n            formControlName=\"switchField\"\n            aria-label=\"Switch with visible label (on the right)\"\n          ></bb-switch-ui>\n          <div class=\"bb-text-support\">Additional description</div>\n        </div>\n      </div>\n\n      <div class=\"bb-block--md\">\n        <label for=\"currency-input\">Currency label</label>\n        <bb-currency-input-ui\n          [currencies]=\"currencies\"\n          [required]=\"true\"\n          id=\"currency-input\"\n          bbFormControl\n          formControlName=\"currencyField\"\n        ></bb-currency-input-ui>\n      </div>\n\n      <div class=\"bb-block--md\">\n        <bb-dropdown-single-select-ui\n          bbFormControl\n          [options]=\"objectDropdownOptions\"\n          label=\"Dropdown\"\n          displayAttributePath=\"title\"\n          id=\"dropdownSingleSelectObject\"\n          formControlName=\"dropdownField\"\n        ></bb-dropdown-single-select-ui>\n      </div>\n\n      <div class=\"bb-block--md\">\n        <label for=\"amountInput\">Amount</label>\n        <bb-amount-input-ui\n          bbFormControl\n          [errorLabels]=\"errorLabels2\"\n          formControlName=\"amountField\"\n          id=\"amountInput\"\n          placeholder=\"0.00\"\n          [autoDecimal]=\"true\"\n          [mapCurrency]=\"false\"\n          [currency]=\"'USD'\"\n        ></bb-amount-input-ui>\n      </div>\n\n      <div class=\"bb-block--md\">\n        <bb-rich-text-editor-ui\n          bbFormControl\n          [errorLabels]=\"errorLabels2\"\n          [maxLength]=\"300\"\n          [required]=\"true\"\n          formControlName=\"textareaField\"\n          placeholder=\"Please, enter your message\"\n          label=\"Textarea with custom errors labels\"\n        ></bb-rich-text-editor-ui>\n      </div>\n    </div>\n  </div>\n\n  <button type=\"submit\" bbButton>Submit</button>\n</form>\n", components: [{ type: InputWithCustomErrorComponent, selector: "bb-input-with-custom-error-showcase" }, { type: i2__namespace$9.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i2__namespace$h.SwitchComponent, selector: "bb-switch-ui", inputs: ["labelPosition"] }, { type: i1__namespace$b.CurrencyInputComponent, selector: "bb-currency-input-ui", inputs: ["decMaxLen", "decMinLen", "placeholder", "resultType", "integer", "required", "readonly", "disabled", "integerLabelSrOnly", "decimalLabelSrOnly", "currencies", "isRightAligned", "integerId", "decimalId", "integerLabel", "decimalLabel", "currencyLabel", "allowNegativeValue", "currencyListAriaLabel", "currencyListWithOnItemAriaLabel", "aria-describedby", "aria-labelledby", "aria-invalid"], outputs: ["blur"] }, { type: i2__namespace$2.DropdownSingleSelectComponent, selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i2__namespace$4.AmountInputComponent, selector: "bb-amount-input-ui", inputs: ["placeholder", "maxLength", "wrapperClasses", "mapCurrency", "currency", "autoDecimal"] }, { type: i2__namespace$g.RichTextEditorComponent, selector: "bb-rich-text-editor-ui", inputs: ["maxLength", "minLength", "placeholder", "counter", "readonly", "actionsTooltipPlacement"] }], directives: [{ type: i1__namespace$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i9__namespace.FormSubmitDirective, selector: "form[bbFormSubmit]" }, { type: i1__namespace$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i9__namespace.ValidationErrorsDirective, selector: "[bbFormControl]", inputs: ["errorLabels", "showError", "inputSelector", "label", "errorComponent"] }, { type: i1__namespace$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i9__namespace.ControlErrorContainerDirective, selector: "[bbControlErrorContainer]" }, { type: i1__namespace$2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    exports.ControlErrorHandlerShowcaseComponent = __decorate([
        util.BackbaseDocs({
            isTheme2Stable: true,
        })
    ], exports.ControlErrorHandlerShowcaseComponent);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: exports.ControlErrorHandlerShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-control-error-handler-ui-showcase',
                        templateUrl: './control-error-handler-showcase.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.FormBuilder }]; } });

    var components = [exports.ControlErrorHandlerShowcaseComponent, InputWithCustomErrorComponent, CustomErrorShowcaseComponent];
    var ControlErrorHandlerShowcaseModule = /** @class */ (function () {
        function ControlErrorHandlerShowcaseModule() {
        }
        return ControlErrorHandlerShowcaseModule;
    }());
    ControlErrorHandlerShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ControlErrorHandlerShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ControlErrorHandlerShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ControlErrorHandlerShowcaseModule, declarations: [exports.ControlErrorHandlerShowcaseComponent, InputWithCustomErrorComponent, CustomErrorShowcaseComponent], imports: [i4$1.CommonModule, i1$N.ReactiveFormsModule, i9.ControlErrorHandlerModule, BackbaseUiModule, i2$j.InputTextModule], exports: [exports.ControlErrorHandlerShowcaseComponent, InputWithCustomErrorComponent, CustomErrorShowcaseComponent] });
    ControlErrorHandlerShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ControlErrorHandlerShowcaseModule, imports: [[i4$1.CommonModule, i1$N.ReactiveFormsModule, i9.ControlErrorHandlerModule, BackbaseUiModule, i2$j.InputTextModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ControlErrorHandlerShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4$1.CommonModule, i1$N.ReactiveFormsModule, i9.ControlErrorHandlerModule, BackbaseUiModule, i2$j.InputTextModule],
                        declarations: __spreadArray([], __read(components)),
                        exports: __spreadArray([], __read(components)),
                        entryComponents: [exports.ControlErrorHandlerShowcaseComponent],
                    }]
            }] });

    var ValueDiffShowcaseComponent = /** @class */ (function () {
        function ValueDiffShowcaseComponent() {
            this.oldValue = 'Old Value';
            this.newValue = 'New Value';
            this.oldValueAfter = 'Old Value';
            this.newValueAfter = 'New Value';
            this.positionAfter = i1$K.ValueDiffPosition.AFTER;
        }
        ValueDiffShowcaseComponent.prototype.reset = function () {
            this.oldValue = 'Equal Value';
            this.newValue = 'Equal Value';
        };
        ValueDiffShowcaseComponent.prototype.changeData = function () {
            this.oldValue = ValueDiffShowcaseComponent.makeId();
            this.newValue = ValueDiffShowcaseComponent.makeId();
        };
        ValueDiffShowcaseComponent.makeId = function () {
            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            var charactersLength = characters.length;
            var result = '';
            for (var i = 0; i < 5; i++) {
                result += characters.charAt(Math.floor(Math.random() * charactersLength));
            }
            return result;
        };
        return ValueDiffShowcaseComponent;
    }());
    ValueDiffShowcaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ValueDiffShowcaseComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ValueDiffShowcaseComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ValueDiffShowcaseComponent, selector: "bb-value-diff-ui-showcase", ngImport: i0__namespace, template: "<div class=\"row\">\n  <div class=\"col-md-6\">\n    <h3>Default case</h3>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div [bbValueDiff]=\"newValue\" [sr-only-old]=\"'Old value: '\" [sr-only-new]=\"'New value: '\">\n          {{ oldValue }}\n        </div>\n        <br />\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button class=\"bb-button-bar__button\" (click)=\"changeData()\" bbButton buttonSize=\"sm\">Change data</button>\n          <button class=\"bb-button-bar__button\" (click)=\"reset()\" bbButton buttonSize=\"sm\">Make equal</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-md-6\">\n    <h3>Show new value after old</h3>\n    <div class=\"row\">\n      <div class=\"col\">\n        <div [bbValueDiff]=\"newValueAfter\" [position]=\"positionAfter\">\n          {{ oldValueAfter }}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<hr />\n\n<div class=\"row\">\n  <div class=\"col-md-6\">\n    <h3>With arrow right</h3>\n    <div class=\"bb-stack\">\n      <span [bbValueDiff]=\"newValue\" [position]=\"positionAfter\" [showArrow]=\"true\">{{ oldValue }}</span>\n    </div>\n  </div>\n\n  <div class=\"col-md-6\">\n    <h3>With arrow left</h3>\n    <div class=\"bb-stack\">\n      <span [bbValueDiff]=\"newValueAfter\" [showArrow]=\"true\">{{ oldValueAfter }}</span>\n    </div>\n  </div>\n</div>\n", directives: [{ type: i1__namespace$N.ValueDiffDirective, selector: "[bbValueDiff]", inputs: ["bbValueDiff", "position", "sr-only-old", "sr-only-new", "showArrow"] }, { type: i2__namespace$5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ValueDiffShowcaseComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-value-diff-ui-showcase',
                        templateUrl: './value-diff-showcase.component.html',
                    }]
            }] });

    var ValueDiffShowcaseModule = /** @class */ (function () {
        function ValueDiffShowcaseModule() {
        }
        return ValueDiffShowcaseModule;
    }());
    ValueDiffShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ValueDiffShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ValueDiffShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ValueDiffShowcaseModule, declarations: [ValueDiffShowcaseComponent], imports: [i4$1.CommonModule, i1$K.ValueDiffDirectiveModule, i2$2.ButtonModule], exports: [ValueDiffShowcaseComponent] });
    ValueDiffShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ValueDiffShowcaseModule, imports: [[i4$1.CommonModule, i1$K.ValueDiffDirectiveModule, i2$2.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ValueDiffShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [ValueDiffShowcaseComponent],
                        exports: [ValueDiffShowcaseComponent],
                        imports: [i4$1.CommonModule, i1$K.ValueDiffDirectiveModule, i2$2.ButtonModule],
                    }]
            }] });

    var showcaseModule = [
        AccountNumberPipeShowcaseModule,
        AccountSelectorShowcaseModule,
        ActionStatusShowcaseModule,
        AlertShowcaseModule,
        AmountInputShowcaseModule,
        AmountShowcaseModule,
        AvatarShowcaseModule,
        BadgeCounterShowcaseModule,
        BadgeShowcaseModule,
        ButtonShowcaseModule,
        CardVendorShowcaseModule,
        CharCounterShowcaseModule,
        CheckboxGroupShowcaseModule,
        CollapsibleAccordionShowcaseModule,
        CollapsibleCardShowcaseModule,
        CollapsibleShowcaseModule,
        CommonErrorStateShowcaseModule,
        ControlErrorHandlerShowcaseModule,
        CurrencyInputShowcaseModule,
        DatePipeShowcaseModule,
        DropdownMenuShowcaseModule,
        DropdownMultiSelectShowcaseModule,
        DropdownPanelShowcaseModule,
        DropdownSingleSelectShowcaseModule,
        EllipsisShowcaseModule,
        EmptyStateShowcaseModule,
        FieldsetShowcaseModule,
        FileAttachmentShowcaseModule,
        FocusShowcaseModule,
        HeaderShowcaseModule,
        HighlightShowcaseModule,
        IbanPipeShowcaseModule,
        IconShowcaseModule,
        InfiniteScrollShowcaseModule,
        InputCheckboxShowcaseModule,
        InputDatepickerShowcaseModule,
        InputEmailShowcaseModule,
        InputFileShowCaseModule,
        InputInlineEditShowcaseModule,
        InputNumberShowcaseModule,
        InputPasswordShowcaseModule,
        InputPhoneShowcaseModule,
        InputRadioGroupShowcaseModule,
        InputRangeShowcaseModule,
        InputTextShowcaseModule,
        InputTimepickerShowcaseModule,
        InputValidationMessageShowcaseModule,
        ItemLogShowcaseModule,
        ListMultipleSelectShowcaseModule,
        LoadButtonShowcaseModule,
        LoadingIndicatorShowcaseModule,
        LogoShowcaseModule,
        ModalShowcaseModule,
        ModeHeaderShowcaseModule,
        NotificationShowcaseModule,
        PaginationShowcaseModule,
        PaymentCardNumberPipeShowcaseModule,
        PaymentCardShowcaseModule,
        PeriodSelectorShowcaseModule,
        PhoneNumberFormatPipeShowcaseModule,
        ProductItemBasicAccountShowcaseModule,
        ProductItemCreditCardShowcaseModule,
        ProductItemCurrentAccountShowcaseModule,
        ProductItemDebitCardShowcaseModule,
        ProductItemInvestmentAccountShowcaseModule,
        ProductItemLoanShowcaseModule,
        ProductItemSavingsAccountShowcaseModule,
        ProductItemTermDepositShowcaseModule,
        ProductSelectorShowcaseModule,
        ProgressbarShowcaseModule,
        RichTextEditorShowcaseModule,
        SearchBoxShowcaseModule,
        SelectListShowcaseModule,
        StepperShowcaseModule,
        SwitchShowcaseModule,
        TabShowcaseModule,
        TableShowcaseModule,
        TextareaShowcaseModule,
        TooltipShowcaseModule,
        ValueDiffShowcaseModule,
    ];
    var BackbaseUiAngShowcaseModule = /** @class */ (function () {
        function BackbaseUiAngShowcaseModule() {
        }
        return BackbaseUiAngShowcaseModule;
    }());
    BackbaseUiAngShowcaseModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiAngShowcaseModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    BackbaseUiAngShowcaseModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiAngShowcaseModule, imports: [i4$1.CommonModule, AccountNumberPipeShowcaseModule,
            AccountSelectorShowcaseModule,
            ActionStatusShowcaseModule,
            AlertShowcaseModule,
            AmountInputShowcaseModule,
            AmountShowcaseModule,
            AvatarShowcaseModule,
            BadgeCounterShowcaseModule,
            BadgeShowcaseModule,
            ButtonShowcaseModule,
            CardVendorShowcaseModule,
            CharCounterShowcaseModule,
            CheckboxGroupShowcaseModule,
            CollapsibleAccordionShowcaseModule,
            CollapsibleCardShowcaseModule,
            CollapsibleShowcaseModule,
            CommonErrorStateShowcaseModule,
            ControlErrorHandlerShowcaseModule,
            CurrencyInputShowcaseModule,
            DatePipeShowcaseModule,
            DropdownMenuShowcaseModule,
            DropdownMultiSelectShowcaseModule,
            DropdownPanelShowcaseModule,
            DropdownSingleSelectShowcaseModule,
            EllipsisShowcaseModule,
            EmptyStateShowcaseModule,
            FieldsetShowcaseModule,
            FileAttachmentShowcaseModule,
            FocusShowcaseModule,
            HeaderShowcaseModule,
            HighlightShowcaseModule,
            IbanPipeShowcaseModule,
            IconShowcaseModule,
            InfiniteScrollShowcaseModule,
            InputCheckboxShowcaseModule,
            InputDatepickerShowcaseModule,
            InputEmailShowcaseModule,
            InputFileShowCaseModule,
            InputInlineEditShowcaseModule,
            InputNumberShowcaseModule,
            InputPasswordShowcaseModule,
            InputPhoneShowcaseModule,
            InputRadioGroupShowcaseModule,
            InputRangeShowcaseModule,
            InputTextShowcaseModule,
            InputTimepickerShowcaseModule,
            InputValidationMessageShowcaseModule,
            ItemLogShowcaseModule,
            ListMultipleSelectShowcaseModule,
            LoadButtonShowcaseModule,
            LoadingIndicatorShowcaseModule,
            LogoShowcaseModule,
            ModalShowcaseModule,
            ModeHeaderShowcaseModule,
            NotificationShowcaseModule,
            PaginationShowcaseModule,
            PaymentCardNumberPipeShowcaseModule,
            PaymentCardShowcaseModule,
            PeriodSelectorShowcaseModule,
            PhoneNumberFormatPipeShowcaseModule,
            ProductItemBasicAccountShowcaseModule,
            ProductItemCreditCardShowcaseModule,
            ProductItemCurrentAccountShowcaseModule,
            ProductItemDebitCardShowcaseModule,
            ProductItemInvestmentAccountShowcaseModule,
            ProductItemLoanShowcaseModule,
            ProductItemSavingsAccountShowcaseModule,
            ProductItemTermDepositShowcaseModule,
            ProductSelectorShowcaseModule,
            ProgressbarShowcaseModule,
            RichTextEditorShowcaseModule,
            SearchBoxShowcaseModule,
            SelectListShowcaseModule,
            StepperShowcaseModule,
            SwitchShowcaseModule,
            TabShowcaseModule,
            TableShowcaseModule,
            TextareaShowcaseModule,
            TooltipShowcaseModule,
            ValueDiffShowcaseModule], exports: [AccountNumberPipeShowcaseModule,
            AccountSelectorShowcaseModule,
            ActionStatusShowcaseModule,
            AlertShowcaseModule,
            AmountInputShowcaseModule,
            AmountShowcaseModule,
            AvatarShowcaseModule,
            BadgeCounterShowcaseModule,
            BadgeShowcaseModule,
            ButtonShowcaseModule,
            CardVendorShowcaseModule,
            CharCounterShowcaseModule,
            CheckboxGroupShowcaseModule,
            CollapsibleAccordionShowcaseModule,
            CollapsibleCardShowcaseModule,
            CollapsibleShowcaseModule,
            CommonErrorStateShowcaseModule,
            ControlErrorHandlerShowcaseModule,
            CurrencyInputShowcaseModule,
            DatePipeShowcaseModule,
            DropdownMenuShowcaseModule,
            DropdownMultiSelectShowcaseModule,
            DropdownPanelShowcaseModule,
            DropdownSingleSelectShowcaseModule,
            EllipsisShowcaseModule,
            EmptyStateShowcaseModule,
            FieldsetShowcaseModule,
            FileAttachmentShowcaseModule,
            FocusShowcaseModule,
            HeaderShowcaseModule,
            HighlightShowcaseModule,
            IbanPipeShowcaseModule,
            IconShowcaseModule,
            InfiniteScrollShowcaseModule,
            InputCheckboxShowcaseModule,
            InputDatepickerShowcaseModule,
            InputEmailShowcaseModule,
            InputFileShowCaseModule,
            InputInlineEditShowcaseModule,
            InputNumberShowcaseModule,
            InputPasswordShowcaseModule,
            InputPhoneShowcaseModule,
            InputRadioGroupShowcaseModule,
            InputRangeShowcaseModule,
            InputTextShowcaseModule,
            InputTimepickerShowcaseModule,
            InputValidationMessageShowcaseModule,
            ItemLogShowcaseModule,
            ListMultipleSelectShowcaseModule,
            LoadButtonShowcaseModule,
            LoadingIndicatorShowcaseModule,
            LogoShowcaseModule,
            ModalShowcaseModule,
            ModeHeaderShowcaseModule,
            NotificationShowcaseModule,
            PaginationShowcaseModule,
            PaymentCardNumberPipeShowcaseModule,
            PaymentCardShowcaseModule,
            PeriodSelectorShowcaseModule,
            PhoneNumberFormatPipeShowcaseModule,
            ProductItemBasicAccountShowcaseModule,
            ProductItemCreditCardShowcaseModule,
            ProductItemCurrentAccountShowcaseModule,
            ProductItemDebitCardShowcaseModule,
            ProductItemInvestmentAccountShowcaseModule,
            ProductItemLoanShowcaseModule,
            ProductItemSavingsAccountShowcaseModule,
            ProductItemTermDepositShowcaseModule,
            ProductSelectorShowcaseModule,
            ProgressbarShowcaseModule,
            RichTextEditorShowcaseModule,
            SearchBoxShowcaseModule,
            SelectListShowcaseModule,
            StepperShowcaseModule,
            SwitchShowcaseModule,
            TabShowcaseModule,
            TableShowcaseModule,
            TextareaShowcaseModule,
            TooltipShowcaseModule,
            ValueDiffShowcaseModule] });
    BackbaseUiAngShowcaseModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiAngShowcaseModule, imports: [__spreadArray([i4$1.CommonModule], __read(showcaseModule)), AccountNumberPipeShowcaseModule,
            AccountSelectorShowcaseModule,
            ActionStatusShowcaseModule,
            AlertShowcaseModule,
            AmountInputShowcaseModule,
            AmountShowcaseModule,
            AvatarShowcaseModule,
            BadgeCounterShowcaseModule,
            BadgeShowcaseModule,
            ButtonShowcaseModule,
            CardVendorShowcaseModule,
            CharCounterShowcaseModule,
            CheckboxGroupShowcaseModule,
            CollapsibleAccordionShowcaseModule,
            CollapsibleCardShowcaseModule,
            CollapsibleShowcaseModule,
            CommonErrorStateShowcaseModule,
            ControlErrorHandlerShowcaseModule,
            CurrencyInputShowcaseModule,
            DatePipeShowcaseModule,
            DropdownMenuShowcaseModule,
            DropdownMultiSelectShowcaseModule,
            DropdownPanelShowcaseModule,
            DropdownSingleSelectShowcaseModule,
            EllipsisShowcaseModule,
            EmptyStateShowcaseModule,
            FieldsetShowcaseModule,
            FileAttachmentShowcaseModule,
            FocusShowcaseModule,
            HeaderShowcaseModule,
            HighlightShowcaseModule,
            IbanPipeShowcaseModule,
            IconShowcaseModule,
            InfiniteScrollShowcaseModule,
            InputCheckboxShowcaseModule,
            InputDatepickerShowcaseModule,
            InputEmailShowcaseModule,
            InputFileShowCaseModule,
            InputInlineEditShowcaseModule,
            InputNumberShowcaseModule,
            InputPasswordShowcaseModule,
            InputPhoneShowcaseModule,
            InputRadioGroupShowcaseModule,
            InputRangeShowcaseModule,
            InputTextShowcaseModule,
            InputTimepickerShowcaseModule,
            InputValidationMessageShowcaseModule,
            ItemLogShowcaseModule,
            ListMultipleSelectShowcaseModule,
            LoadButtonShowcaseModule,
            LoadingIndicatorShowcaseModule,
            LogoShowcaseModule,
            ModalShowcaseModule,
            ModeHeaderShowcaseModule,
            NotificationShowcaseModule,
            PaginationShowcaseModule,
            PaymentCardNumberPipeShowcaseModule,
            PaymentCardShowcaseModule,
            PeriodSelectorShowcaseModule,
            PhoneNumberFormatPipeShowcaseModule,
            ProductItemBasicAccountShowcaseModule,
            ProductItemCreditCardShowcaseModule,
            ProductItemCurrentAccountShowcaseModule,
            ProductItemDebitCardShowcaseModule,
            ProductItemInvestmentAccountShowcaseModule,
            ProductItemLoanShowcaseModule,
            ProductItemSavingsAccountShowcaseModule,
            ProductItemTermDepositShowcaseModule,
            ProductSelectorShowcaseModule,
            ProgressbarShowcaseModule,
            RichTextEditorShowcaseModule,
            SearchBoxShowcaseModule,
            SelectListShowcaseModule,
            StepperShowcaseModule,
            SwitchShowcaseModule,
            TabShowcaseModule,
            TableShowcaseModule,
            TextareaShowcaseModule,
            TooltipShowcaseModule,
            ValueDiffShowcaseModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: BackbaseUiAngShowcaseModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i4$1.CommonModule], __read(showcaseModule)),
                        exports: __spreadArray([], __read(showcaseModule)),
                    }]
            }] });
    var COMPONENTS = [
        AccountNumberPipeShowcaseComponent,
        AccountSelectorShowcaseComponent,
        ActionStatusShowcaseComponent,
        AlertShowcaseComponent,
        AmountShowcaseComponent,
        AmountInputShowcaseComponent,
        AvatarShowcaseComponent,
        BadgeCounterShowcaseComponent,
        BadgeShowcaseComponent,
        ButtonShowcaseComponent,
        CardVendorShowcaseComponent,
        CharCounterShowcaseComponent,
        CheckboxGroupShowcaseComponent,
        CollapsibleAccordionShowcaseComponent,
        CollapsibleCardShowcaseComponent,
        CollapsibleShowcaseComponent,
        exports.ControlErrorHandlerShowcaseComponent,
        CommonErrorStateShowcaseComponent,
        CurrencyInputShowcaseComponent,
        DatePipeShowcaseComponent,
        DropdownMenuShowcaseComponent,
        DropdownMultiSelectShowcaseComponent,
        DropdownPanelShowcaseComponent,
        DropdownSingleSelectShowcaseComponent,
        EllipsisShowcaseComponent,
        EmptyStateShowcaseComponent,
        FieldsetShowcaseComponent,
        FileAttachmentShowcaseComponent,
        FocusShowcaseComponent,
        HeaderShowcaseComponent,
        HighlightShowcaseComponent,
        IbanPipeShowcaseComponent,
        IconShowcaseComponent,
        InfiniteScrollShowcaseComponent,
        InputCheckboxShowcaseComponent,
        InputDatepickerShowcaseComponent,
        InputEmailShowcaseComponent,
        InputFileShowcaseComponent,
        InputInlineEditShowcaseComponent,
        InputNumberShowcaseComponent,
        InputPasswordShowcaseComponent,
        InputPhoneShowcaseComponent,
        InputRadioGroupShowcaseComponent,
        InputRangeShowcaseComponent,
        InputTextShowcaseComponent,
        InputTimepickerShowcaseComponent,
        InputValidationMessageShowcaseComponent,
        ItemLogShowcaseComponent,
        ListMultipleSelectShowcaseComponent,
        LoadButtonShowcaseComponent,
        LoadingIndicatorShowcaseComponent,
        LogoShowcaseComponent,
        ModalShowcaseComponent,
        NotificationShowcaseComponent,
        PaginationShowcaseComponent,
        PaymentCardNumberPipeShowcaseComponent,
        PaymentCardShowcaseComponent,
        PeriodSelectorShowcaseComponent,
        PhoneNumberFormatPipeShowcaseComponent,
        ProductItemBasicAccountShowcaseComponent,
        ProductItemCreditCardShowcaseComponent,
        ProductItemCurrentAccountShowcaseComponent,
        ProductItemDebitCardShowcaseComponent,
        ProductItemInvestmentAccountShowcaseComponent,
        ProductItemLoanShowcaseComponent,
        ProductItemSavingsAccountShowcaseComponent,
        ProductItemTermDepositShowcaseComponent,
        ProductSelectorShowcaseComponent,
        ProgressbarShowcaseComponent,
        RichTextEditorShowcaseComponent,
        SearchBoxShowcaseComponent,
        SelectListShowcaseComponent,
        StepperShowcaseComponent,
        SwitchShowcaseComponent,
        TabShowcaseComponent,
        TableShowcaseComponent,
        TextareaShowcaseComponent,
        TooltipShowcaseComponent,
        ValueDiffShowcaseComponent,
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    Object.defineProperty(exports, 'SearchBoxComponent', {
        enumerable: true,
        get: function () { return i1$G.SearchBoxComponent; }
    });
    Object.defineProperty(exports, 'SearchBoxModule', {
        enumerable: true,
        get: function () { return i1$G.SearchBoxModule; }
    });
    Object.defineProperty(exports, 'AvatarComponent', {
        enumerable: true,
        get: function () { return i1$4.AvatarComponent; }
    });
    Object.defineProperty(exports, 'AvatarModule', {
        enumerable: true,
        get: function () { return i1$4.AvatarModule; }
    });
    Object.defineProperty(exports, 'BadgeComponent', {
        enumerable: true,
        get: function () { return i3.BadgeComponent; }
    });
    Object.defineProperty(exports, 'BadgeModule', {
        enumerable: true,
        get: function () { return i3.BadgeModule; }
    });
    Object.defineProperty(exports, 'ButtonComponent', {
        enumerable: true,
        get: function () { return i2$2.ButtonComponent; }
    });
    Object.defineProperty(exports, 'ButtonDirective', {
        enumerable: true,
        get: function () { return i2$2.ButtonDirective; }
    });
    Object.defineProperty(exports, 'ButtonModule', {
        enumerable: true,
        get: function () { return i2$2.ButtonModule; }
    });
    Object.defineProperty(exports, 'LoadButtonComponent', {
        enumerable: true,
        get: function () { return i1$m.LoadButtonComponent; }
    });
    Object.defineProperty(exports, 'LoadButtonModule', {
        enumerable: true,
        get: function () { return i1$m.LoadButtonModule; }
    });
    Object.defineProperty(exports, 'CardVendorComponent', {
        enumerable: true,
        get: function () { return i1$6.CardVendorComponent; }
    });
    Object.defineProperty(exports, 'CardVendorModule', {
        enumerable: true,
        get: function () { return i1$6.CardVendorModule; }
    });
    Object.defineProperty(exports, 'AmountComponent', {
        enumerable: true,
        get: function () { return i1$3.AmountComponent; }
    });
    Object.defineProperty(exports, 'AmountModule', {
        enumerable: true,
        get: function () { return i1$3.AmountModule; }
    });
    Object.defineProperty(exports, 'FormatAmountComponent', {
        enumerable: true,
        get: function () { return i1$3.AmountComponent; }
    });
    Object.defineProperty(exports, 'FormatAmountModule', {
        enumerable: true,
        get: function () { return i1$3.AmountModule; }
    });
    Object.defineProperty(exports, 'LogoComponent', {
        enumerable: true,
        get: function () { return i1$o.LogoComponent; }
    });
    Object.defineProperty(exports, 'LogoModule', {
        enumerable: true,
        get: function () { return i1$o.LogoModule; }
    });
    Object.defineProperty(exports, 'ErrorCommonStateComponent', {
        enumerable: true,
        get: function () { return i1$a.ErrorCommonStateComponent; }
    });
    Object.defineProperty(exports, 'ErrorCommonStateModule', {
        enumerable: true,
        get: function () { return i1$a.ErrorCommonStateModule; }
    });
    Object.defineProperty(exports, 'EmptyStateComponent', {
        enumerable: true,
        get: function () { return i1$g.EmptyStateComponent; }
    });
    Object.defineProperty(exports, 'EmptyStateModule', {
        enumerable: true,
        get: function () { return i1$g.EmptyStateModule; }
    });
    Object.defineProperty(exports, 'CalendarPopupComponent', {
        enumerable: true,
        get: function () { return i2$b.InputDatepickerComponent; }
    });
    Object.defineProperty(exports, 'CalendarPopupModule', {
        enumerable: true,
        get: function () { return i2$b.InputDatepickerModule; }
    });
    Object.defineProperty(exports, 'DATEPICKER_I18', {
        enumerable: true,
        get: function () { return i2$b.DATEPICKER_I18; }
    });
    Object.defineProperty(exports, 'InputDatepickerComponent', {
        enumerable: true,
        get: function () { return i2$b.InputDatepickerComponent; }
    });
    Object.defineProperty(exports, 'InputDatepickerModule', {
        enumerable: true,
        get: function () { return i2$b.InputDatepickerModule; }
    });
    Object.defineProperty(exports, 'MaxDateValidatorDirective', {
        enumerable: true,
        get: function () { return i2$b.MaxDateValidatorDirective; }
    });
    Object.defineProperty(exports, 'MinDateValidatorDirective', {
        enumerable: true,
        get: function () { return i2$b.MinDateValidatorDirective; }
    });
    Object.defineProperty(exports, 'CharCounterComponent', {
        enumerable: true,
        get: function () { return i2$3.CharCounterComponent; }
    });
    Object.defineProperty(exports, 'CharCounterModule', {
        enumerable: true,
        get: function () { return i2$3.CharCounterModule; }
    });
    Object.defineProperty(exports, 'CurrencyInputComponent', {
        enumerable: true,
        get: function () { return i1$b.CurrencyInputComponent; }
    });
    Object.defineProperty(exports, 'CurrencyInputModule', {
        enumerable: true,
        get: function () { return i1$b.CurrencyInputModule; }
    });
    Object.defineProperty(exports, 'CollapsibleBodyDirective', {
        enumerable: true,
        get: function () { return i1$9.CollapsibleBodyDirective; }
    });
    Object.defineProperty(exports, 'CollapsibleComponent', {
        enumerable: true,
        get: function () { return i1$9.CollapsibleComponent; }
    });
    Object.defineProperty(exports, 'CollapsibleHeaderDirective', {
        enumerable: true,
        get: function () { return i1$9.CollapsibleHeaderDirective; }
    });
    Object.defineProperty(exports, 'CollapsibleModule', {
        enumerable: true,
        get: function () { return i1$9.CollapsibleModule; }
    });
    Object.defineProperty(exports, 'CollapsibleCardComponent', {
        enumerable: true,
        get: function () { return i2$4.CollapsibleCardComponent; }
    });
    Object.defineProperty(exports, 'CollapsibleCardModule', {
        enumerable: true,
        get: function () { return i2$4.CollapsibleCardModule; }
    });
    Object.defineProperty(exports, 'CustomModalBodyDirective', {
        enumerable: true,
        get: function () { return i1$p.CustomModalBodyDirective; }
    });
    Object.defineProperty(exports, 'CustomModalFooterDirective', {
        enumerable: true,
        get: function () { return i1$p.CustomModalFooterDirective; }
    });
    Object.defineProperty(exports, 'CustomModalHeaderDirective', {
        enumerable: true,
        get: function () { return i1$p.CustomModalHeaderDirective; }
    });
    Object.defineProperty(exports, 'ModalBodyComponent', {
        enumerable: true,
        get: function () { return i1$p.ModalBodyComponent; }
    });
    Object.defineProperty(exports, 'ModalComponent', {
        enumerable: true,
        get: function () { return i1$p.ModalComponent; }
    });
    Object.defineProperty(exports, 'ModalFooterComponent', {
        enumerable: true,
        get: function () { return i1$p.ModalFooterComponent; }
    });
    Object.defineProperty(exports, 'ModalHeaderComponent', {
        enumerable: true,
        get: function () { return i1$p.ModalHeaderComponent; }
    });
    Object.defineProperty(exports, 'ModalModule', {
        enumerable: true,
        get: function () { return i1$p.ModalModule; }
    });
    Object.defineProperty(exports, 'PaginationModule', {
        enumerable: true,
        get: function () { return i1$s.PaginationModule; }
    });
    Object.defineProperty(exports, 'PaginatorComponent', {
        enumerable: true,
        get: function () { return i1$s.PaginatorComponent; }
    });
    Object.defineProperty(exports, 'PaginatorModule', {
        enumerable: true,
        get: function () { return i1$s.PaginationModule; }
    });
    Object.defineProperty(exports, 'DefaultPaymentCardNumberFormat', {
        enumerable: true,
        get: function () { return i1$t.DefaultPaymentCardNumberFormat; }
    });
    Object.defineProperty(exports, 'PaymentCardNumberModule', {
        enumerable: true,
        get: function () { return i1$t.PaymentCardNumberModule; }
    });
    Object.defineProperty(exports, 'PaymentCardNumberPipe', {
        enumerable: true,
        get: function () { return i1$t.PaymentCardNumberPipe; }
    });
    Object.defineProperty(exports, 'SYNCHRONIZE_NUMBERS_MASKING', {
        enumerable: true,
        get: function () { return i1$t.SYNCHRONIZE_NUMBERS_MASKING; }
    });
    Object.defineProperty(exports, 'PaymentCardComponent', {
        enumerable: true,
        get: function () { return i1$u.PaymentCardComponent; }
    });
    Object.defineProperty(exports, 'PaymentCardModule', {
        enumerable: true,
        get: function () { return i1$u.PaymentCardModule; }
    });
    Object.defineProperty(exports, 'ACCOUNTS_DISPLAYING_FORMAT', {
        enumerable: true,
        get: function () { return i1.ACCOUNTS_DISPLAYING_FORMAT; }
    });
    Object.defineProperty(exports, 'AccountNumberPipe', {
        enumerable: true,
        get: function () { return i1.AccountNumberPipe; }
    });
    Object.defineProperty(exports, 'AccountNumberPipeModule', {
        enumerable: true,
        get: function () { return i1.AccountNumberPipeModule; }
    });
    Object.defineProperty(exports, 'AccountsDisplayingFormatService', {
        enumerable: true,
        get: function () { return i1.AccountsDisplayingFormatService; }
    });
    Object.defineProperty(exports, 'PeriodSelectorComponent', {
        enumerable: true,
        get: function () { return i1$v.PeriodSelectorComponent; }
    });
    Object.defineProperty(exports, 'PeriodSelectorModule', {
        enumerable: true,
        get: function () { return i1$v.PeriodSelectorModule; }
    });
    Object.defineProperty(exports, 'SwitchComponent', {
        enumerable: true,
        get: function () { return i2$o.SwitchComponent; }
    });
    Object.defineProperty(exports, 'SwitchModule', {
        enumerable: true,
        get: function () { return i2$o.SwitchModule; }
    });
    Object.defineProperty(exports, 'TabComponent', {
        enumerable: true,
        get: function () { return i2$p.TabComponent; }
    });
    Object.defineProperty(exports, 'TabGroupComponent', {
        enumerable: true,
        get: function () { return i2$p.TabGroupComponent; }
    });
    Object.defineProperty(exports, 'TabModule', {
        enumerable: true,
        get: function () { return i2$p.TabModule; }
    });
    Object.defineProperty(exports, 'FileAttachmentComponent', {
        enumerable: true,
        get: function () { return i1$h.FileAttachmentComponent; }
    });
    Object.defineProperty(exports, 'FileAttachmentModule', {
        enumerable: true,
        get: function () { return i1$h.FileAttachmentModule; }
    });
    Object.defineProperty(exports, 'FocusDirective', {
        enumerable: true,
        get: function () { return i2$7.FocusDirective; }
    });
    Object.defineProperty(exports, 'FocusModule', {
        enumerable: true,
        get: function () { return i2$7.FocusModule; }
    });
    Object.defineProperty(exports, 'CollapsibleAccordionComponent', {
        enumerable: true,
        get: function () { return i1$8.CollapsibleAccordionComponent; }
    });
    Object.defineProperty(exports, 'CollapsibleAccordionModule', {
        enumerable: true,
        get: function () { return i1$8.CollapsibleAccordionModule; }
    });
    Object.defineProperty(exports, 'IconComponent', {
        enumerable: true,
        get: function () { return i2$9.IconComponent; }
    });
    Object.defineProperty(exports, 'IconModule', {
        enumerable: true,
        get: function () { return i2$9.IconModule; }
    });
    Object.defineProperty(exports, 'IbanModule', {
        enumerable: true,
        get: function () { return ibanDirective.IbanModule; }
    });
    Object.defineProperty(exports, 'IbanValidatorDirective', {
        enumerable: true,
        get: function () { return ibanDirective.IbanValidatorDirective; }
    });
    Object.defineProperty(exports, 'HeaderComponent', {
        enumerable: true,
        get: function () { return i1$i.HeaderComponent; }
    });
    Object.defineProperty(exports, 'HeaderModule', {
        enumerable: true,
        get: function () { return i1$i.HeaderModule; }
    });
    Object.defineProperty(exports, 'AlertComponent', {
        enumerable: true,
        get: function () { return i2.AlertComponent; }
    });
    Object.defineProperty(exports, 'AlertModule', {
        enumerable: true,
        get: function () { return i2.AlertModule; }
    });
    Object.defineProperty(exports, 'InputValidationMessageComponent', {
        enumerable: true,
        get: function () { return i3$2.InputValidationMessageComponent; }
    });
    Object.defineProperty(exports, 'InputValidationMessageModule', {
        enumerable: true,
        get: function () { return i3$2.InputValidationMessageModule; }
    });
    Object.defineProperty(exports, 'AppendToDomService', {
        enumerable: true,
        get: function () { return i1$r.AppendToDomService; }
    });
    Object.defineProperty(exports, 'BBNotificationConfig', {
        enumerable: true,
        get: function () { return i1$r.BBNotificationConfig; }
    });
    Object.defineProperty(exports, 'NotificationComponent', {
        enumerable: true,
        get: function () { return i1$r.NotificationComponent; }
    });
    Object.defineProperty(exports, 'NotificationModule', {
        enumerable: true,
        get: function () { return i1$r.NotificationModule; }
    });
    Object.defineProperty(exports, 'NotificationService', {
        enumerable: true,
        get: function () { return i1$r.NotificationService; }
    });
    Object.defineProperty(exports, 'LoadingIndicatorComponent', {
        enumerable: true,
        get: function () { return i1$n.LoadingIndicatorComponent; }
    });
    Object.defineProperty(exports, 'LoadingIndicatorModule', {
        enumerable: true,
        get: function () { return i1$n.LoadingIndicatorModule; }
    });
    Object.defineProperty(exports, 'InputTextComponent', {
        enumerable: true,
        get: function () { return i2$j.InputTextComponent; }
    });
    Object.defineProperty(exports, 'InputTextModule', {
        enumerable: true,
        get: function () { return i2$j.InputTextModule; }
    });
    Object.defineProperty(exports, 'InputCheckboxComponent', {
        enumerable: true,
        get: function () { return i2$a.InputCheckboxComponent; }
    });
    Object.defineProperty(exports, 'InputCheckboxModule', {
        enumerable: true,
        get: function () { return i2$a.InputCheckboxModule; }
    });
    Object.defineProperty(exports, 'InputPhoneComponent', {
        enumerable: true,
        get: function () { return i2$h.InputPhoneComponent; }
    });
    Object.defineProperty(exports, 'InputPhoneModule', {
        enumerable: true,
        get: function () { return i2$h.InputPhoneModule; }
    });
    Object.defineProperty(exports, 'InputEmailComponent', {
        enumerable: true,
        get: function () { return i2$c.InputEmailComponent; }
    });
    Object.defineProperty(exports, 'InputEmailModule', {
        enumerable: true,
        get: function () { return i2$c.InputEmailModule; }
    });
    Object.defineProperty(exports, 'DropdownSingleSelectComponent', {
        enumerable: true,
        get: function () { return i2$6.DropdownSingleSelectComponent; }
    });
    Object.defineProperty(exports, 'DropdownSingleSelectModule', {
        enumerable: true,
        get: function () { return i2$6.DropdownSingleSelectModule; }
    });
    Object.defineProperty(exports, 'DropdownSingleSelectOptionComponent', {
        enumerable: true,
        get: function () { return i2$6.DropdownSingleSelectOptionComponent; }
    });
    Object.defineProperty(exports, 'DROPDOWN_MENU_OPTIONS', {
        enumerable: true,
        get: function () { return i1$d.DROPDOWN_MENU_OPTIONS; }
    });
    Object.defineProperty(exports, 'DROPDOWN_TEMPLATE_MENU_OPTIONS', {
        enumerable: true,
        get: function () { return i1$d.DROPDOWN_TEMPLATE_MENU_OPTIONS; }
    });
    Object.defineProperty(exports, 'DropdownLabelDirective', {
        enumerable: true,
        get: function () { return i1$d.DropdownLabelDirective; }
    });
    Object.defineProperty(exports, 'DropdownMenuComponent', {
        enumerable: true,
        get: function () { return i1$d.DropdownMenuComponent; }
    });
    Object.defineProperty(exports, 'DropdownMenuFullWidthDirective', {
        enumerable: true,
        get: function () { return i1$d.DropdownMenuFullWidthDirective; }
    });
    Object.defineProperty(exports, 'DropdownMenuItemDirective', {
        enumerable: true,
        get: function () { return i1$d.DropdownMenuItemDirective; }
    });
    Object.defineProperty(exports, 'DropdownMenuModule', {
        enumerable: true,
        get: function () { return i1$d.DropdownMenuModule; }
    });
    Object.defineProperty(exports, 'DropdownMenuOptionDirective', {
        enumerable: true,
        get: function () { return i1$d.DropdownMenuOptionDirective; }
    });
    Object.defineProperty(exports, 'DropdownMenuOptionToken', {
        enumerable: true,
        get: function () { return i1$d.DropdownMenuOptionToken; }
    });
    Object.defineProperty(exports, 'DropdownMenuToken', {
        enumerable: true,
        get: function () { return i1$d.DropdownMenuToken; }
    });
    Object.defineProperty(exports, 'PhoneNumberModule', {
        enumerable: true,
        get: function () { return i1$w.PhoneNumberModule; }
    });
    Object.defineProperty(exports, 'PhoneNumberPipe', {
        enumerable: true,
        get: function () { return i1$w.PhoneNumberPipe; }
    });
    Object.defineProperty(exports, 'CustomProductItemSavingsAccountDetailsFormatterDirective', {
        enumerable: true,
        get: function () { return i1$C.CustomProductItemSavingsAccountDetailsFormatterDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemSavingsAccountMainSectionDirective', {
        enumerable: true,
        get: function () { return i1$C.CustomProductItemSavingsAccountMainSectionDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemSavingsAccountTitleDirective', {
        enumerable: true,
        get: function () { return i1$C.CustomProductItemSavingsAccountTitleDirective; }
    });
    Object.defineProperty(exports, 'ProductItemSavingsAccountComponent', {
        enumerable: true,
        get: function () { return i1$C.ProductItemSavingsAccountComponent; }
    });
    Object.defineProperty(exports, 'ProductItemSavingsAccountModule', {
        enumerable: true,
        get: function () { return i1$C.ProductItemSavingsAccountModule; }
    });
    Object.defineProperty(exports, 'CustomProductItemCreditCardDetailsFormatterDirective', {
        enumerable: true,
        get: function () { return i1$x.CustomProductItemCreditCardDetailsFormatterDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemCreditCardMainSectionDirective', {
        enumerable: true,
        get: function () { return i1$x.CustomProductItemCreditCardMainSectionDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemCreditCardSecondarySectionDirective', {
        enumerable: true,
        get: function () { return i1$x.CustomProductItemCreditCardSecondarySectionDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemCreditCardTitleDirective', {
        enumerable: true,
        get: function () { return i1$x.CustomProductItemCreditCardTitleDirective; }
    });
    Object.defineProperty(exports, 'ProductItemCreditCardComponent', {
        enumerable: true,
        get: function () { return i1$x.ProductItemCreditCardComponent; }
    });
    Object.defineProperty(exports, 'ProductItemCreditCardModule', {
        enumerable: true,
        get: function () { return i1$x.ProductItemCreditCardModule; }
    });
    Object.defineProperty(exports, 'CustomProductItemBasicAccountDetailsFormatterDirective', {
        enumerable: true,
        get: function () { return i2$m.CustomProductItemBasicAccountDetailsFormatterDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemBasicAccountTitleDirective', {
        enumerable: true,
        get: function () { return i2$m.CustomProductItemBasicAccountTitleDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemBasicAccountTypeDirective', {
        enumerable: true,
        get: function () { return i2$m.CustomProductItemBasicAccountTypeDirective; }
    });
    Object.defineProperty(exports, 'ProductItemBasicAccountComponent', {
        enumerable: true,
        get: function () { return i2$m.ProductItemBasicAccountComponent; }
    });
    Object.defineProperty(exports, 'ProductItemBasicAccountModule', {
        enumerable: true,
        get: function () { return i2$m.ProductItemBasicAccountModule; }
    });
    Object.defineProperty(exports, 'CustomProductItemCurrentAccountDetailsFormatterDirective', {
        enumerable: true,
        get: function () { return i1$y.CustomProductItemCurrentAccountDetailsFormatterDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemCurrentAccountMainSectionDirective', {
        enumerable: true,
        get: function () { return i1$y.CustomProductItemCurrentAccountMainSectionDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemCurrentAccountSecondarySectionDirective', {
        enumerable: true,
        get: function () { return i1$y.CustomProductItemCurrentAccountSecondarySectionDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemCurrentAccountTitleDirective', {
        enumerable: true,
        get: function () { return i1$y.CustomProductItemCurrentAccountTitleDirective; }
    });
    Object.defineProperty(exports, 'ProductItemCurrentAccountComponent', {
        enumerable: true,
        get: function () { return i1$y.ProductItemCurrentAccountComponent; }
    });
    Object.defineProperty(exports, 'ProductItemCurrentAccountModule', {
        enumerable: true,
        get: function () { return i1$y.ProductItemCurrentAccountModule; }
    });
    Object.defineProperty(exports, 'CustomProductItemInvestmentAccountDetailsFormatterDirective', {
        enumerable: true,
        get: function () { return i1$A.CustomProductItemInvestmentAccountDetailsFormatterDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemInvestmentAccountTitleDirective', {
        enumerable: true,
        get: function () { return i1$A.CustomProductItemInvestmentAccountTitleDirective; }
    });
    Object.defineProperty(exports, 'ProductItemInvestmentAccountComponent', {
        enumerable: true,
        get: function () { return i1$A.ProductItemInvestmentAccountComponent; }
    });
    Object.defineProperty(exports, 'ProductItemInvestmentAccountModule', {
        enumerable: true,
        get: function () { return i1$A.ProductItemInvestmentAccountModule; }
    });
    Object.defineProperty(exports, 'CustomProductItemDebitCardTitleDirective', {
        enumerable: true,
        get: function () { return i1$z.CustomProductItemDebitCardTitleDirective; }
    });
    Object.defineProperty(exports, 'ProductItemDebitCardComponent', {
        enumerable: true,
        get: function () { return i1$z.ProductItemDebitCardComponent; }
    });
    Object.defineProperty(exports, 'ProductItemDebitCardModule', {
        enumerable: true,
        get: function () { return i1$z.ProductItemDebitCardModule; }
    });
    Object.defineProperty(exports, 'CustomProductItemTermDepositDetailsFormatterDirective', {
        enumerable: true,
        get: function () { return i1$D.CustomProductItemTermDepositDetailsFormatterDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemTermDepositMainSectionDirective', {
        enumerable: true,
        get: function () { return i1$D.CustomProductItemTermDepositMainSectionDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemTermDepositTitleDirective', {
        enumerable: true,
        get: function () { return i1$D.CustomProductItemTermDepositTitleDirective; }
    });
    Object.defineProperty(exports, 'ProductItemTermDepositComponent', {
        enumerable: true,
        get: function () { return i1$D.ProductItemTermDepositComponent; }
    });
    Object.defineProperty(exports, 'ProductItemTermDepositModule', {
        enumerable: true,
        get: function () { return i1$D.ProductItemTermDepositModule; }
    });
    Object.defineProperty(exports, 'CustomProductItemLoanDetailsFormatterDirective', {
        enumerable: true,
        get: function () { return i1$B.CustomProductItemLoanDetailsFormatterDirective; }
    });
    Object.defineProperty(exports, 'CustomProductItemLoanTitleDirective', {
        enumerable: true,
        get: function () { return i1$B.CustomProductItemLoanTitleDirective; }
    });
    Object.defineProperty(exports, 'ProductItemLoanComponent', {
        enumerable: true,
        get: function () { return i1$B.ProductItemLoanComponent; }
    });
    Object.defineProperty(exports, 'ProductItemLoanModule', {
        enumerable: true,
        get: function () { return i1$B.ProductItemLoanModule; }
    });
    Object.defineProperty(exports, 'FieldsetComponent', {
        enumerable: true,
        get: function () { return i3$1.FieldsetComponent; }
    });
    Object.defineProperty(exports, 'FieldsetModule', {
        enumerable: true,
        get: function () { return i3$1.FieldsetModule; }
    });
    Object.defineProperty(exports, 'TextareaComponent', {
        enumerable: true,
        get: function () { return i2$q.TextareaComponent; }
    });
    Object.defineProperty(exports, 'TextareaModule', {
        enumerable: true,
        get: function () { return i2$q.TextareaModule; }
    });
    Object.defineProperty(exports, 'ProductSelectorComponent', {
        enumerable: true,
        get: function () { return i1$E.ProductSelectorComponent; }
    });
    Object.defineProperty(exports, 'ProductSelectorModule', {
        enumerable: true,
        get: function () { return i1$E.ProductSelectorModule; }
    });
    Object.defineProperty(exports, 'TooltipDirective', {
        enumerable: true,
        get: function () { return i2$r.TooltipDirective; }
    });
    Object.defineProperty(exports, 'TooltipModule', {
        enumerable: true,
        get: function () { return i2$r.TooltipModule; }
    });
    Object.defineProperty(exports, 'InputNumberComponent', {
        enumerable: true,
        get: function () { return i2$f.InputNumberComponent; }
    });
    Object.defineProperty(exports, 'InputNumberModule', {
        enumerable: true,
        get: function () { return i2$f.InputNumberModule; }
    });
    Object.defineProperty(exports, 'RichTextEditorActionsComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorActionsComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorActionsDirective', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorActionsDirective; }
    });
    Object.defineProperty(exports, 'RichTextEditorBoldActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorBoldActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorCodeActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorCodeActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorImageActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorImageActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorItalicActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorItalicActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorLinkActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorLinkActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorModule', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorModule; }
    });
    Object.defineProperty(exports, 'RichTextEditorOlistActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorOlistActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorParagraphActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorParagraphActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorStrikethroughActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorStrikethroughActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorUlistActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorUlistActionComponent; }
    });
    Object.defineProperty(exports, 'RichTextEditorUnderlineActionComponent', {
        enumerable: true,
        get: function () { return i2$n.RichTextEditorUnderlineActionComponent; }
    });
    Object.defineProperty(exports, 'InputRadioComponent', {
        enumerable: true,
        get: function () { return i2$i.InputRadioComponent; }
    });
    Object.defineProperty(exports, 'InputRadioGroupComponent', {
        enumerable: true,
        get: function () { return i2$i.InputRadioGroupComponent; }
    });
    Object.defineProperty(exports, 'InputRadioGroupModule', {
        enumerable: true,
        get: function () { return i2$i.InputRadioGroupModule; }
    });
    Object.defineProperty(exports, 'InputFileComponent', {
        enumerable: true,
        get: function () { return i2$d.InputFileComponent; }
    });
    Object.defineProperty(exports, 'InputFileModule', {
        enumerable: true,
        get: function () { return i2$d.InputFileModule; }
    });
    Object.defineProperty(exports, 'BbDatePipe', {
        enumerable: true,
        get: function () { return i1$c.BbDatePipe; }
    });
    Object.defineProperty(exports, 'BbDatePipeModule', {
        enumerable: true,
        get: function () { return i1$c.BbDatePipeModule; }
    });
    Object.defineProperty(exports, 'ListMultipleSelectActionDirective', {
        enumerable: true,
        get: function () { return i2$l.ListMultipleSelectActionDirective; }
    });
    Object.defineProperty(exports, 'ListMultipleSelectComponent', {
        enumerable: true,
        get: function () { return i2$l.ListMultipleSelectComponent; }
    });
    Object.defineProperty(exports, 'ListMultipleSelectItemDirective', {
        enumerable: true,
        get: function () { return i2$l.ListMultipleSelectItemDirective; }
    });
    Object.defineProperty(exports, 'ListMultipleSelectModule', {
        enumerable: true,
        get: function () { return i2$l.ListMultipleSelectModule; }
    });
    Object.defineProperty(exports, 'CheckboxGroupComponent', {
        enumerable: true,
        get: function () { return i1$7.CheckboxGroupComponent; }
    });
    Object.defineProperty(exports, 'CheckboxGroupModule', {
        enumerable: true,
        get: function () { return i1$7.CheckboxGroupModule; }
    });
    Object.defineProperty(exports, 'EllipsisComponent', {
        enumerable: true,
        get: function () { return i1$f.EllipsisComponent; }
    });
    Object.defineProperty(exports, 'EllipsisModule', {
        enumerable: true,
        get: function () { return i1$f.EllipsisModule; }
    });
    Object.defineProperty(exports, 'IsContentTruncatedDirective', {
        enumerable: true,
        get: function () { return i1$f.IsContentTruncatedDirective; }
    });
    Object.defineProperty(exports, 'HighlightDirective', {
        enumerable: true,
        get: function () { return i2$8.HighlightDirective; }
    });
    Object.defineProperty(exports, 'HighlightModule', {
        enumerable: true,
        get: function () { return i2$8.HighlightModule; }
    });
    Object.defineProperty(exports, 'ProgressbarComponent', {
        enumerable: true,
        get: function () { return i1$F.ProgressbarComponent; }
    });
    Object.defineProperty(exports, 'ProgressbarModule', {
        enumerable: true,
        get: function () { return i1$F.ProgressbarModule; }
    });
    Object.defineProperty(exports, 'TableDirective', {
        enumerable: true,
        get: function () { return i1$J.TableDirective; }
    });
    Object.defineProperty(exports, 'TableFocusDirective', {
        enumerable: true,
        get: function () { return i1$J.TableFocusDirective; }
    });
    Object.defineProperty(exports, 'TableModule', {
        enumerable: true,
        get: function () { return i1$J.TableModule; }
    });
    Object.defineProperty(exports, 'TableRowDirective', {
        enumerable: true,
        get: function () { return i1$J.TableRowDirective; }
    });
    Object.defineProperty(exports, 'TableSortableDirective', {
        enumerable: true,
        get: function () { return i1$J.TableSortableDirective; }
    });
    Object.defineProperty(exports, 'InputPasswordComponent', {
        enumerable: true,
        get: function () { return i2$g.InputPasswordComponent; }
    });
    Object.defineProperty(exports, 'InputPasswordModule', {
        enumerable: true,
        get: function () { return i2$g.InputPasswordModule; }
    });
    Object.defineProperty(exports, 'InputInlineEditComponent', {
        enumerable: true,
        get: function () { return i2$e.InputInlineEditComponent; }
    });
    Object.defineProperty(exports, 'InputInlineEditModule', {
        enumerable: true,
        get: function () { return i2$e.InputInlineEditModule; }
    });
    Object.defineProperty(exports, 'InputInlineEditState', {
        enumerable: true,
        get: function () { return i2$e.InputInlineEditState; }
    });
    Object.defineProperty(exports, 'CustomStepperStepDirective', {
        enumerable: true,
        get: function () { return i1$I.CustomStepperStepDirective; }
    });
    Object.defineProperty(exports, 'StepperComponent', {
        enumerable: true,
        get: function () { return i1$I.StepperComponent; }
    });
    Object.defineProperty(exports, 'StepperModule', {
        enumerable: true,
        get: function () { return i1$I.StepperModule; }
    });
    Object.defineProperty(exports, 'StepperStepComponent', {
        enumerable: true,
        get: function () { return i1$I.StepperStepComponent; }
    });
    Object.defineProperty(exports, 'BbIbanPipe', {
        enumerable: true,
        get: function () { return i1$j.BbIbanPipe; }
    });
    Object.defineProperty(exports, 'BbIbanPipeModule', {
        enumerable: true,
        get: function () { return i1$j.BbIbanPipeModule; }
    });
    Object.defineProperty(exports, 'ActionStatusComponent', {
        enumerable: true,
        get: function () { return i1$2.ActionStatusComponent; }
    });
    Object.defineProperty(exports, 'ActionStatusModule', {
        enumerable: true,
        get: function () { return i1$2.ActionStatusModule; }
    });
    Object.defineProperty(exports, 'BadgeCounterComponent', {
        enumerable: true,
        get: function () { return i1$5.BadgeCounterComponent; }
    });
    Object.defineProperty(exports, 'BadgeCounterModule', {
        enumerable: true,
        get: function () { return i1$5.BadgeCounterModule; }
    });
    Object.defineProperty(exports, 'InfiniteScrollComponent', {
        enumerable: true,
        get: function () { return i1$k.InfiniteScrollComponent; }
    });
    Object.defineProperty(exports, 'InfiniteScrollModule', {
        enumerable: true,
        get: function () { return i1$k.InfiniteScrollModule; }
    });
    Object.defineProperty(exports, 'AccountSelectorComponent', {
        enumerable: true,
        get: function () { return i1$1.AccountSelectorComponent; }
    });
    Object.defineProperty(exports, 'AccountSelectorModule', {
        enumerable: true,
        get: function () { return i1$1.AccountSelectorModule; }
    });
    Object.defineProperty(exports, 'CustomGroupItemsHeaderDirective', {
        enumerable: true,
        get: function () { return i1$1.CustomGroupItemsHeaderDirective; }
    });
    Object.defineProperty(exports, 'CustomLoadingTemplateDirective', {
        enumerable: true,
        get: function () { return i1$1.CustomLoadingTemplateDirective; }
    });
    Object.defineProperty(exports, 'CustomMultiSelectedItemsLabelDirective', {
        enumerable: true,
        get: function () { return i1$1.CustomMultiSelectedItemsLabelDirective; }
    });
    Object.defineProperty(exports, 'CustomOptionItemDirective', {
        enumerable: true,
        get: function () { return i1$1.CustomOptionItemDirective; }
    });
    Object.defineProperty(exports, 'CustomOptionsHeaderDirective', {
        enumerable: true,
        get: function () { return i1$1.CustomOptionsHeaderDirective; }
    });
    Object.defineProperty(exports, 'CustomSingleSelectedItemLabelDirective', {
        enumerable: true,
        get: function () { return i1$1.CustomSingleSelectedItemLabelDirective; }
    });
    Object.defineProperty(exports, 'ItemLogComponent', {
        enumerable: true,
        get: function () { return i1$l.ItemLogComponent; }
    });
    Object.defineProperty(exports, 'ItemLogModule', {
        enumerable: true,
        get: function () { return i1$l.ItemLogModule; }
    });
    Object.defineProperty(exports, 'ItemLogRecordDirective', {
        enumerable: true,
        get: function () { return i1$l.ItemLogRecordDirective; }
    });
    Object.defineProperty(exports, 'InputTimepickerComponent', {
        enumerable: true,
        get: function () { return i2$k.InputTimepickerComponent; }
    });
    Object.defineProperty(exports, 'InputTimepickerModule', {
        enumerable: true,
        get: function () { return i2$k.InputTimepickerModule; }
    });
    Object.defineProperty(exports, 'KeyboardClickDirective', {
        enumerable: true,
        get: function () { return i3$3.KeyboardClickDirective; }
    });
    Object.defineProperty(exports, 'KeyboardClickModule', {
        enumerable: true,
        get: function () { return i3$3.KeyboardClickModule; }
    });
    Object.defineProperty(exports, 'SelectListComponent', {
        enumerable: true,
        get: function () { return i1$H.SelectListComponent; }
    });
    Object.defineProperty(exports, 'SelectListModule', {
        enumerable: true,
        get: function () { return i1$H.SelectListModule; }
    });
    Object.defineProperty(exports, 'AmountInputComponent', {
        enumerable: true,
        get: function () { return i2$1.AmountInputComponent; }
    });
    Object.defineProperty(exports, 'AmountInputModule', {
        enumerable: true,
        get: function () { return i2$1.AmountInputModule; }
    });
    Object.defineProperty(exports, 'ModeHeaderComponent', {
        enumerable: true,
        get: function () { return i1$q.ModeHeaderComponent; }
    });
    Object.defineProperty(exports, 'ModeHeaderModule', {
        enumerable: true,
        get: function () { return i1$q.ModeHeaderModule; }
    });
    Object.defineProperty(exports, 'BB_DYNAMIC_VALIDATION_ERROR_TMPL', {
        enumerable: true,
        get: function () { return i9.BB_DYNAMIC_VALIDATION_ERROR_TMPL; }
    });
    Object.defineProperty(exports, 'BB_VALIDATION_ERRORS', {
        enumerable: true,
        get: function () { return i9.BB_VALIDATION_ERRORS; }
    });
    Object.defineProperty(exports, 'ControlErrorContainerDirective', {
        enumerable: true,
        get: function () { return i9.ControlErrorContainerDirective; }
    });
    Object.defineProperty(exports, 'ControlErrorHandlerModule', {
        enumerable: true,
        get: function () { return i9.ControlErrorHandlerModule; }
    });
    Object.defineProperty(exports, 'FormSubmitDirective', {
        enumerable: true,
        get: function () { return i9.FormSubmitDirective; }
    });
    Object.defineProperty(exports, 'ValidationErrorsDirective', {
        enumerable: true,
        get: function () { return i9.ValidationErrorsDirective; }
    });
    Object.defineProperty(exports, 'ValidationMessageComponent', {
        enumerable: true,
        get: function () { return i9.ValidationMessageComponent; }
    });
    Object.defineProperty(exports, 'InputRangeDirective', {
        enumerable: true,
        get: function () { return i4.InputRangeDirective; }
    });
    Object.defineProperty(exports, 'InputRangeMaxDirective', {
        enumerable: true,
        get: function () { return i4.InputRangeMaxDirective; }
    });
    Object.defineProperty(exports, 'InputRangeMinDirective', {
        enumerable: true,
        get: function () { return i4.InputRangeMinDirective; }
    });
    Object.defineProperty(exports, 'InputRangeModule', {
        enumerable: true,
        get: function () { return i4.InputRangeModule; }
    });
    Object.defineProperty(exports, 'ValueDiffDirective', {
        enumerable: true,
        get: function () { return i1$K.ValueDiffDirective; }
    });
    Object.defineProperty(exports, 'ValueDiffDirectiveModule', {
        enumerable: true,
        get: function () { return i1$K.ValueDiffDirectiveModule; }
    });
    Object.defineProperty(exports, 'ValueDiffPosition', {
        enumerable: true,
        get: function () { return i1$K.ValueDiffPosition; }
    });
    Object.defineProperty(exports, 'BaseClassesModule', {
        enumerable: true,
        get: function () { return baseClasses.BaseClassesModule; }
    });
    Object.defineProperty(exports, 'InputBaseComponent', {
        enumerable: true,
        get: function () { return baseClasses.InputBaseComponent; }
    });
    Object.defineProperty(exports, 'InputBaseModule', {
        enumerable: true,
        get: function () { return baseClasses.InputBaseModule; }
    });
    Object.defineProperty(exports, 'defaultSize', {
        enumerable: true,
        get: function () { return baseClasses.defaultSize; }
    });
    Object.defineProperty(exports, 'getInputNextId', {
        enumerable: true,
        get: function () { return baseClasses.getInputNextId; }
    });
    Object.defineProperty(exports, 'CssVariablesModule', {
        enumerable: true,
        get: function () { return cssVariablesLib.CssVariablesModule; }
    });
    Object.defineProperty(exports, 'CssVariablesService', {
        enumerable: true,
        get: function () { return cssVariablesLib.CssVariablesService; }
    });
    Object.defineProperty(exports, 'DropdownMultiSelectComponent', {
        enumerable: true,
        get: function () { return i2$5.DropdownMultiSelectComponent; }
    });
    Object.defineProperty(exports, 'DropdownMultiSelectModule', {
        enumerable: true,
        get: function () { return i2$5.DropdownMultiSelectModule; }
    });
    Object.defineProperty(exports, 'DropdownMultiSelectOptionComponent', {
        enumerable: true,
        get: function () { return i2$5.DropdownMultiSelectOptionComponent; }
    });
    Object.defineProperty(exports, 'DropdownMenuDirective', {
        enumerable: true,
        get: function () { return i1$e.DropdownMenuDirective; }
    });
    Object.defineProperty(exports, 'DropdownPanelComponent', {
        enumerable: true,
        get: function () { return i1$e.DropdownPanelComponent; }
    });
    Object.defineProperty(exports, 'DropdownPanelModule', {
        enumerable: true,
        get: function () { return i1$e.DropdownPanelModule; }
    });
    Object.defineProperty(exports, 'DropdownToggleDirective', {
        enumerable: true,
        get: function () { return i1$e.DropdownToggleDirective; }
    });
    Object.defineProperty(exports, 'formatByGroups', {
        enumerable: true,
        get: function () { return ibanLib.formatByGroups; }
    });
    Object.defineProperty(exports, 'isValidBBAN', {
        enumerable: true,
        get: function () { return ibanLib.isValidBBAN; }
    });
    Object.defineProperty(exports, 'isValidIBAN', {
        enumerable: true,
        get: function () { return ibanLib.isValidIBAN; }
    });
    Object.defineProperty(exports, 'isValidIBANFormControl', {
        enumerable: true,
        get: function () { return ibanLib.isValidIBANFormControl; }
    });
    Object.defineProperty(exports, 'LayoutModule', {
        enumerable: true,
        get: function () { return layout.LayoutModule; }
    });
    Object.defineProperty(exports, 'LayoutNavDropdownDirective', {
        enumerable: true,
        get: function () { return layout.LayoutNavDropdownDirective; }
    });
    Object.defineProperty(exports, 'LayoutService', {
        enumerable: true,
        get: function () { return layout.LayoutService; }
    });
    Object.defineProperty(exports, 'MediaQueryModule', {
        enumerable: true,
        get: function () { return mediaQueryLib.MediaQueryModule; }
    });
    Object.defineProperty(exports, 'MediaQueryService', {
        enumerable: true,
        get: function () { return mediaQueryLib.MediaQueryService; }
    });
    exports.AccountNumberPipeExampleComponent = AccountNumberPipeExampleComponent;
    exports.AccountNumberPipeShowcaseModule = AccountNumberPipeShowcaseModule;
    exports.AccountSelectorExampleComponent = AccountSelectorExampleComponent;
    exports.AccountSelectorShowcaseModule = AccountSelectorShowcaseModule;
    exports.ActionStatusExampleComponent = ActionStatusExampleComponent;
    exports.ActionStatusShowcaseModule = ActionStatusShowcaseModule;
    exports.AlertExampleComponent = AlertExampleComponent;
    exports.AlertShowcaseModule = AlertShowcaseModule;
    exports.AmountExampleComponent = AmountExampleComponent;
    exports.AmountInputExampleComponent = AmountInputExampleComponent;
    exports.AmountInputShowcaseModule = AmountInputShowcaseModule;
    exports.AmountShowcaseModule = AmountShowcaseModule;
    exports.AvatarExampleComponent = AvatarExampleComponent;
    exports.AvatarShowcaseModule = AvatarShowcaseModule;
    exports.BackbaseUiAngExamplesModule = BackbaseUiAngExamplesModule;
    exports.BackbaseUiAngShowcaseModule = BackbaseUiAngShowcaseModule;
    exports.BackbaseUiModule = BackbaseUiModule;
    exports.BadgeCounterExampleComponent = BadgeCounterExampleComponent;
    exports.BadgeCounterShowcaseModule = BadgeCounterShowcaseModule;
    exports.BadgeExampleComponent = BadgeExampleComponent;
    exports.BadgeShowcaseModule = BadgeShowcaseModule;
    exports.ButtonExampleComponent = ButtonExampleComponent;
    exports.ButtonShowcaseModule = ButtonShowcaseModule;
    exports.CardVendorExampleComponent = CardVendorExampleComponent;
    exports.CardVendorShowcaseModule = CardVendorShowcaseModule;
    exports.CharCounterExampleComponent = CharCounterExampleComponent;
    exports.CharCounterShowcaseModule = CharCounterShowcaseModule;
    exports.CheckboxGroupExampleComponent = CheckboxGroupExampleComponent;
    exports.CheckboxGroupShowcaseModule = CheckboxGroupShowcaseModule;
    exports.CollapsibleAccordionExampleComponent = CollapsibleAccordionExampleComponent;
    exports.CollapsibleAccordionShowcaseModule = CollapsibleAccordionShowcaseModule;
    exports.CollapsibleCardExampleComponent = CollapsibleCardExampleComponent;
    exports.CollapsibleCardShowcaseModule = CollapsibleCardShowcaseModule;
    exports.CollapsibleExampleComponent = CollapsibleExampleComponent;
    exports.CollapsibleShowcaseModule = CollapsibleShowcaseModule;
    exports.CommonErrorStateExampleComponent = CommonErrorStateExampleComponent;
    exports.CommonErrorStateShowcaseModule = CommonErrorStateShowcaseModule;
    exports.ConfigurationInputComponent = ConfigurationInputComponent;
    exports.ConfigurationInputService = ConfigurationInputService;
    exports.ControlErrorHandlerShowcaseModule = ControlErrorHandlerShowcaseModule;
    exports.CurrencyInputExampleComponent = CurrencyInputExampleComponent;
    exports.CurrencyInputShowcaseModule = CurrencyInputShowcaseModule;
    exports.CustomErrorShowcaseComponent = CustomErrorShowcaseComponent;
    exports.DatePipeExampleComponent = DatePipeExampleComponent;
    exports.DatePipeShowcaseModule = DatePipeShowcaseModule;
    exports.DropdownMenuExampleComponent = DropdownMenuExampleComponent;
    exports.DropdownMenuShowcaseModule = DropdownMenuShowcaseModule;
    exports.DropdownMultiSelectExampleComponent = DropdownMultiSelectExampleComponent;
    exports.DropdownMultiSelectShowcaseModule = DropdownMultiSelectShowcaseModule;
    exports.DropdownPanelExampleComponent = DropdownPanelExampleComponent;
    exports.DropdownPanelShowcaseModule = DropdownPanelShowcaseModule;
    exports.DropdownSingleSelectExampleComponent = DropdownSingleSelectExampleComponent;
    exports.DropdownSingleSelectShowcaseModule = DropdownSingleSelectShowcaseModule;
    exports.EllipsisExampleComponent = EllipsisExampleComponent;
    exports.EllipsisShowcaseModule = EllipsisShowcaseModule;
    exports.EmptyStateExampleComponent = EmptyStateExampleComponent;
    exports.EmptyStateShowcaseModule = EmptyStateShowcaseModule;
    exports.FieldsetExampleComponent = FieldsetExampleComponent;
    exports.FieldsetShowcaseModule = FieldsetShowcaseModule;
    exports.FileAttachmentExampleComponent = FileAttachmentExampleComponent;
    exports.FileAttachmentShowcaseModule = FileAttachmentShowcaseModule;
    exports.FocusShowcaseModule = FocusShowcaseModule;
    exports.HeaderExampleComponent = HeaderExampleComponent;
    exports.HeaderShowcaseModule = HeaderShowcaseModule;
    exports.HighlightExampleComponent = HighlightExampleComponent;
    exports.HighlightShowcaseModule = HighlightShowcaseModule;
    exports.IbanPipeExampleComponent = IbanPipeExampleComponent;
    exports.IbanPipeShowcaseModule = IbanPipeShowcaseModule;
    exports.IconExampleComponent = IconExampleComponent;
    exports.IconShowcaseModule = IconShowcaseModule;
    exports.InfiniteScrollExampleComponent = InfiniteScrollExampleComponent;
    exports.InfiniteScrollShowcaseModule = InfiniteScrollShowcaseModule;
    exports.InputCheckboxExampleComponent = InputCheckboxExampleComponent;
    exports.InputCheckboxShowcaseModule = InputCheckboxShowcaseModule;
    exports.InputDatepickerExampleComponent = InputDatepickerExampleComponent;
    exports.InputDatepickerShowcaseModule = InputDatepickerShowcaseModule;
    exports.InputEmailExampleComponent = InputEmailExampleComponent;
    exports.InputEmailShowcaseModule = InputEmailShowcaseModule;
    exports.InputFileExampleComponent = InputFileExampleComponent;
    exports.InputFileShowCaseModule = InputFileShowCaseModule;
    exports.InputInlineEditExampleComponent = InputInlineEditExampleComponent;
    exports.InputInlineEditShowcaseModule = InputInlineEditShowcaseModule;
    exports.InputNumberExampleComponent = InputNumberExampleComponent;
    exports.InputNumberShowcaseModule = InputNumberShowcaseModule;
    exports.InputPasswordExampleComponent = InputPasswordExampleComponent;
    exports.InputPasswordShowcaseModule = InputPasswordShowcaseModule;
    exports.InputPhoneExampleComponent = InputPhoneExampleComponent;
    exports.InputPhoneShowcaseModule = InputPhoneShowcaseModule;
    exports.InputRadioGroupExampleComponent = InputRadioGroupExampleComponent;
    exports.InputRadioGroupShowcaseModule = InputRadioGroupShowcaseModule;
    exports.InputRangeExampleComponent = InputRangeExampleComponent;
    exports.InputRangeShowcaseModule = InputRangeShowcaseModule;
    exports.InputTextExampleComponent = InputTextExampleComponent;
    exports.InputTextShowcaseModule = InputTextShowcaseModule;
    exports.InputTimepickerExampleComponent = InputTimepickerExampleComponent;
    exports.InputTimepickerShowcaseModule = InputTimepickerShowcaseModule;
    exports.InputValidationMessageExampleComponent = InputValidationMessageExampleComponent;
    exports.InputValidationMessageShowcaseModule = InputValidationMessageShowcaseModule;
    exports.InputWithCustomErrorComponent = InputWithCustomErrorComponent;
    exports.ItemLogExampleComponent = ItemLogExampleComponent;
    exports.ItemLogShowcaseModule = ItemLogShowcaseModule;
    exports.KeyboardClickExampleComponent = KeyboardClickExampleComponent;
    exports.ListMultipleSelectExampleComponent = ListMultipleSelectExampleComponent;
    exports.ListMultipleSelectShowcaseModule = ListMultipleSelectShowcaseModule;
    exports.LoadButtonExampleComponent = LoadButtonExampleComponent;
    exports.LoadButtonShowcaseModule = LoadButtonShowcaseModule;
    exports.LoadingIndicatorExampleComponent = LoadingIndicatorExampleComponent;
    exports.LoadingIndicatorShowcaseModule = LoadingIndicatorShowcaseModule;
    exports.LogoExampleComponent = LogoExampleComponent;
    exports.LogoShowcaseModule = LogoShowcaseModule;
    exports.ModalExampleComponent = ModalExampleComponent;
    exports.ModalShowcaseModule = ModalShowcaseModule;
    exports.ModeHeaderExampleComponent = ModeHeaderExampleComponent;
    exports.ModeHeaderShowcaseModule = ModeHeaderShowcaseModule;
    exports.NotificationExampleComponent = NotificationExampleComponent;
    exports.NotificationShowcaseModule = NotificationShowcaseModule;
    exports.PaginationExampleComponent = PaginationExampleComponent;
    exports.PaginationShowcaseModule = PaginationShowcaseModule;
    exports.PaymentCardExampleComponent = PaymentCardExampleComponent;
    exports.PaymentCardNumberPipeExampleComponent = PaymentCardNumberPipeExampleComponent;
    exports.PaymentCardNumberPipeShowcaseModule = PaymentCardNumberPipeShowcaseModule;
    exports.PaymentCardShowcaseModule = PaymentCardShowcaseModule;
    exports.PeriodSelectorExampleComponent = PeriodSelectorExampleComponent;
    exports.PeriodSelectorShowcaseModule = PeriodSelectorShowcaseModule;
    exports.PhoneNumberFormatPipeShowcaseModule = PhoneNumberFormatPipeShowcaseModule;
    exports.PhoneNumberPipeExampleComponent = PhoneNumberPipeExampleComponent;
    exports.ProductItemBasicAccountExampleComponent = ProductItemBasicAccountExampleComponent;
    exports.ProductItemBasicAccountShowcaseModule = ProductItemBasicAccountShowcaseModule;
    exports.ProductItemCreditCardExampleComponent = ProductItemCreditCardExampleComponent;
    exports.ProductItemCreditCardShowcaseModule = ProductItemCreditCardShowcaseModule;
    exports.ProductItemCurrentAccountExampleComponent = ProductItemCurrentAccountExampleComponent;
    exports.ProductItemCurrentAccountShowcaseModule = ProductItemCurrentAccountShowcaseModule;
    exports.ProductItemDebitCardExampleComponent = ProductItemDebitCardExampleComponent;
    exports.ProductItemDebitCardShowcaseModule = ProductItemDebitCardShowcaseModule;
    exports.ProductItemInvestmentAccountExampleComponent = ProductItemInvestmentAccountExampleComponent;
    exports.ProductItemInvestmentAccountShowcaseModule = ProductItemInvestmentAccountShowcaseModule;
    exports.ProductItemLoanExampleComponent = ProductItemLoanExampleComponent;
    exports.ProductItemLoanShowcaseModule = ProductItemLoanShowcaseModule;
    exports.ProductItemSavingsAccountExampleComponent = ProductItemSavingsAccountExampleComponent;
    exports.ProductItemSavingsAccountShowcaseModule = ProductItemSavingsAccountShowcaseModule;
    exports.ProductItemTermDepositExampleComponent = ProductItemTermDepositExampleComponent;
    exports.ProductItemTermDepositShowcaseModule = ProductItemTermDepositShowcaseModule;
    exports.ProductSelectorExampleComponent = ProductSelectorExampleComponent;
    exports.ProductSelectorShowcaseModule = ProductSelectorShowcaseModule;
    exports.ProgessbarExampleComponent = ProgessbarExampleComponent;
    exports.ProgressbarShowcaseModule = ProgressbarShowcaseModule;
    exports.RichTextEditorExampleComponent = RichTextEditorExampleComponent;
    exports.RichTextEditorShowcaseModule = RichTextEditorShowcaseModule;
    exports.SearchBoxExampleComponent = SearchBoxExampleComponent;
    exports.SearchBoxShowcaseModule = SearchBoxShowcaseModule;
    exports.SelectListExampleComponent = SelectListExampleComponent;
    exports.SelectListShowcaseModule = SelectListShowcaseModule;
    exports.StepperExampleComponent = StepperExampleComponent;
    exports.StepperShowcaseModule = StepperShowcaseModule;
    exports.SwitchExampleComponent = SwitchExampleComponent;
    exports.SwitchShowcaseModule = SwitchShowcaseModule;
    exports.TabExampleComponent = TabExampleComponent;
    exports.TabShowcaseModule = TabShowcaseModule;
    exports.TableExampleComponent = TableExampleComponent;
    exports.TableShowcaseModule = TableShowcaseModule;
    exports.TextareaExampleComponent = TextareaExampleComponent;
    exports.TextareaShowcaseModule = TextareaShowcaseModule;
    exports.TooltipExampleComponent = TooltipExampleComponent;
    exports.TooltipShowcaseModule = TooltipShowcaseModule;
    exports.ValueDiffExampleComponent = ValueDiffExampleComponent;
    exports.ValueDiffShowcaseComponent = ValueDiffShowcaseComponent;
    exports.ValueDiffShowcaseModule = ValueDiffShowcaseModule;
    exports["ƟEXAMPLE_COMPONENTS"] = COMPONENTS$1;
    exports["ƟSHOWCASE_COMPONENTS"] = COMPONENTS;
    Object.keys(i1$L).forEach(function (k) {
        if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
            enumerable: true,
            get: function () { return i1$L[k]; }
        });
    });
    Object.keys(util).forEach(function (k) {
        if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
            enumerable: true,
            get: function () { return util[k]; }
        });
    });

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang.umd.js.map
