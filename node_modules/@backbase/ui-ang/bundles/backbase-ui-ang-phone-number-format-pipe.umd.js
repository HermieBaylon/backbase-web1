(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@backbase/phone-number-lib')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/phone-number-format-pipe', ['exports', '@angular/common', '@angular/core', '@backbase/phone-number-lib'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"]["phone-number-format-pipe"] = {}), global.ng.common, global.ng.core, global.phoneNumberLib));
})(this, (function (exports, common, i0, phoneNumberLib) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    /**
     * @name PhoneNumberFormatPipe
     *
     * @description
     * Pipe for formatting phone numbers to various international formats
     */
    var PhoneNumberPipe = /** @class */ (function () {
        function PhoneNumberPipe() {
        }
        /**
         * @name PhoneNumberFormatPipe#transform
         * @param value - the phone number string to transform
         * @param countryCode - the two letter CDLR code for the country to format to
         * @param isInputElement - whether the value was entered in an input element
         *
         * @description
         * Formats a phone number to any entered country code international format
         */
        PhoneNumberPipe.prototype.transform = function (value, countryCode, isInputElement) {
            try {
                if (isInputElement) {
                    value = new phoneNumberLib.AsYouType(countryCode).input(value.toString());
                }
                return phoneNumberLib.parsePhoneNumber(value.toString(), countryCode).formatInternational();
            }
            catch (e) {
                return value.toString();
            }
        };
        return PhoneNumberPipe;
    }());
    PhoneNumberPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    PhoneNumberPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberPipe, name: "phoneNumber" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'phoneNumber',
                    }]
            }] });

    var PhoneNumberModule = /** @class */ (function () {
        function PhoneNumberModule() {
        }
        return PhoneNumberModule;
    }());
    PhoneNumberModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PhoneNumberModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberModule, declarations: [PhoneNumberPipe], imports: [common.CommonModule], exports: [PhoneNumberPipe] });
    PhoneNumberModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberModule, imports: [[common.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: PhoneNumberModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule],
                        declarations: [PhoneNumberPipe],
                        exports: [PhoneNumberPipe],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.PhoneNumberModule = PhoneNumberModule;
    exports.PhoneNumberPipe = PhoneNumberPipe;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-phone-number-format-pipe.umd.js.map
