(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/highlight', ['exports', '@angular/core', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"].highlight = {}), global.ng.core, global.ng.common));
})(this, (function (exports, i0, common) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var DEFAULT_POSITIVE_CLASS = 'bb-amount--positive';
    var DEFAULT_NEGATIVE_CLASS = 'bb-amount--negative';
    /**
     * @name HighlightDirective
     *
     * @description
     * Directive that encapsulate logic for highlighting positive/negative numbers.
     * Example usage with bb-amount-ui (AmountModule)
     */
    var HighlightDirective = /** @class */ (function () {
        function HighlightDirective(renderer, elementRef) {
            this.renderer = renderer;
            this.elementRef = elementRef;
            /**
             * The class for positive value.
             */
            this.negativeClass = DEFAULT_NEGATIVE_CLASS;
            /**
             * The class for negative value.
             */
            this.positiveClass = DEFAULT_POSITIVE_CLASS;
            this.amountValue = 0;
            this.highlightValue = true;
        }
        Object.defineProperty(HighlightDirective.prototype, "amount", {
            /**
             * Setter (Input) for value of highlighted number
             *
             * @param amount Value of highlighted number
             */
            set: function (amount) {
                this.amountValue = typeof amount === 'number' ? amount : parseFloat(amount);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HighlightDirective.prototype, "bbHighlight", {
            /**
             * Setter (Input) that turn on/off highlight
             *
             * @param value Highlight flag
             */
            set: function (value) {
                this.highlightValue = value === '' || value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(HighlightDirective.prototype, "isPositive", {
            get: function () {
                return this.amountValue >= 0;
            },
            enumerable: false,
            configurable: true
        });
        HighlightDirective.prototype.ngOnChanges = function (change) {
            if (change.negativeClass) {
                this.renderer.removeClass(this.elementRef.nativeElement, change.negativeClass.previousValue);
            }
            if (change.positiveClass) {
                this.renderer.removeClass(this.elementRef.nativeElement, change.positiveClass.previousValue);
            }
            if (change.amount || change.highlight || change.bbHighlight) {
                this.renderer.removeClass(this.elementRef.nativeElement, this.negativeClass);
                this.renderer.removeClass(this.elementRef.nativeElement, this.positiveClass);
            }
            if (this.highlightValue) {
                var highlight = this.isPositive ? this.positiveClass : this.negativeClass;
                this.renderer.addClass(this.elementRef.nativeElement, highlight);
            }
        };
        return HighlightDirective;
    }());
    HighlightDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightDirective, deps: [{ token: i0__namespace.Renderer2 }, { token: i0__namespace.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    HighlightDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: HighlightDirective, selector: "[bbHighlight]", inputs: { amount: "amount", bbHighlight: "bbHighlight", negativeClass: "negativeClass", positiveClass: "positiveClass" }, usesOnChanges: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbHighlight]',
                    }]
            }], ctorParameters: function () { return [{ type: i0__namespace.Renderer2 }, { type: i0__namespace.ElementRef }]; }, propDecorators: { amount: [{
                    type: i0.Input
                }], bbHighlight: [{
                    type: i0.Input
                }], negativeClass: [{
                    type: i0.Input
                }], positiveClass: [{
                    type: i0.Input
                }] } });

    var HighlightModule = /** @class */ (function () {
        function HighlightModule() {
        }
        return HighlightModule;
    }());
    HighlightModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    HighlightModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightModule, declarations: [HighlightDirective], imports: [common.CommonModule], exports: [HighlightDirective] });
    HighlightModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightModule, imports: [[common.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: HighlightModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule],
                        declarations: [HighlightDirective],
                        exports: [HighlightDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.HighlightDirective = HighlightDirective;
    exports.HighlightModule = HighlightModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-highlight.umd.js.map
