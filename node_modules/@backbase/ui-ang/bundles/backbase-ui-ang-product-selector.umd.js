(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@ng-bootstrap/ng-bootstrap'), require('@backbase/ui-ang/icon'), require('@backbase/foundation-ang/core'), require('@backbase/ui-ang/button')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/product-selector', ['exports', '@angular/common', '@angular/core', '@ng-bootstrap/ng-bootstrap', '@backbase/ui-ang/icon', '@backbase/foundation-ang/core', '@backbase/ui-ang/button'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"]["product-selector"] = {}), global.ng.common, global.ng.core, global.i3, global.backbase["ui-ang"].icon, global.i1, global.backbase["ui-ang"].button));
})(this, (function (exports, common, i0, i3, i2, i1, i4) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);

    /**
     * @name ProductSelectorComponent
     *
     * @description
     * A dropdown component that displays items in a pre-defined format.
     *
     * @a11y
     * Every items from list in custom templates need have
     * role="option" attribute, for detection by Screen Reader like option.
     *
     * Every items from list in custom templates need have  #listItem,
     * for keyBoard accessibility(navigate with keyUp/keyDown)
     */
    var ProductSelectorComponent = /** @class */ (function () {
        function ProductSelectorComponent(deprecationsService) {
            this.deprecationsService = deprecationsService;
            /**
             * Focused item index from product selector list
             */
            this.focusedItemIndex = -1;
            /**
             * State of focus on product selector element
             */
            this.focusState = '';
            /**
             * Open/close state of dropDown menu
             */
            this.isOpen = false;
            /**
             * Whether the dropdown should be closed when clicking one of dropdown items or pressing ESC
             */
            this.autoClose = true;
            /**
             * The relative position where the dropdown menu will be open
             */
            this.position = 'bottom';
            /**
             * Specifies which element the dropdown should be appended to.
             */
            this.container = '';
            this.isIE = navigator.userAgent.indexOf('MSIE ') > -1 || navigator.userAgent.indexOf('Trident/') > -1;
        }
        ProductSelectorComponent.prototype.onKeyEvent = function (event) {
            if (this.isOpen) {
                switch (this.isIE ? event.keyCode : event.key) {
                    case 40:
                    case 'ArrowDown':
                        this.focusedItemIndex = Math.min(this.focusedItemIndex + 1, this.listItems.length - 1);
                        this.focusItem();
                        break;
                    case 38:
                    case 'ArrowUp':
                        this.focusedItemIndex = Math.max(this.focusedItemIndex - 1, 0);
                        this.focusItem();
                        break;
                    default:
                        return;
                }
                event.preventDefault();
            }
        };
        ProductSelectorComponent.prototype.close = function () {
            if (this.bbDropdown && this.autoClose && this.bbDropdown.isOpen()) {
                this.bbDropdown.close();
            }
        };
        ProductSelectorComponent.prototype.open = function () {
            if (this.bbDropdown && !this.bbDropdown.isOpen()) {
                this.bbDropdown.open();
            }
        };
        ProductSelectorComponent.prototype.onClose = function () {
            if (this.autoClose) {
                this.close();
                this.dropdownToggle.nativeElement.focus();
            }
        };
        ProductSelectorComponent.prototype.focusItem = function () {
            var _this = this;
            this.listItems.forEach(function (el, index) {
                if (index === _this.focusedItemIndex) {
                    el.nativeElement.tabIndex = 0;
                    el.nativeElement.focus();
                }
            });
        };
        /**
         * Event handler for change open/close state in dropdown menu
         */
        ProductSelectorComponent.prototype.onOpenChange = function ($event) {
            this.isOpen = $event;
            if (!this.isOpen) {
                this.focusedItemIndex = -1;
            }
        };
        /**
         * Event handler for blur dropdown menu
         */
        ProductSelectorComponent.prototype.onBlur = function () {
            if (this.bbDropdown && this.bbDropdown.isOpen()) {
                this.bbDropdown.close();
            }
        };
        return ProductSelectorComponent;
    }());
    ProductSelectorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorComponent, deps: [{ token: i1__namespace.DeprecationsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSelectorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSelectorComponent, selector: "bb-product-selector-ui", inputs: { autoClose: "autoClose", position: "position", container: "container" }, host: { listeners: { "window:keydown": "onKeyEvent($event)" } }, queries: [{ propertyName: "listItems", predicate: ["listItem"] }], viewQueries: [{ propertyName: "bbDropdown", first: true, predicate: ["bbDropdown"], descendants: true, static: true }, { propertyName: "dropdownToggle", first: true, predicate: ["dropdownToggle"], descendants: true }], ngImport: i0__namespace, template: "<div class=\"bb-product-selector\">\n  <div\n    ngbDropdown\n    #bbDropdown=\"ngbDropdown\"\n    [autoClose]=\"autoClose\"\n    [container]=\"container\"\n    (blur)=\"onBlur()\"\n    (openChange)=\"onOpenChange($event)\"\n    [placement]=\"position\"\n    class=\"bb-product-selector__dropdown\"\n  >\n    <button\n      ngbDropdownToggle\n      #dropdownToggle\n      bbButton\n      color=\"unstyled\"\n      class=\"bb-product-selector__item\"\n      [attr.data-role]=\"'product-selector-expand-button'\"\n      type=\"button\"\n    >\n      <div class=\"bb-product-selector__item-content\" [attr.data-role]=\"'product-selector-selected-content'\">\n        <ng-content select=\"[bbDropdownToggle]\"></ng-content>\n      </div>\n      <bb-icon-ui cropped class=\"bb-product-selector__icon\" [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"></bb-icon-ui>\n    </button>\n    <div\n      ngbDropdownMenu\n      class=\"bb-product-selector__dropdown-menu-panel\"\n      role=\"menu\"\n      (click)=\"onClose()\"\n      [attr.data-role]=\"'product-selector-dropdown-menu'\"\n    >\n      <div class=\"bb-product-selector__dropdown-menu\">\n        <ng-content select=\"[bbDropdownMenu]\"></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3__namespace.NgbDropdown, selector: "[ngbDropdown]", inputs: ["open", "placement", "container", "autoClose", "display", "dropdownClass"], outputs: ["openChange"], exportAs: ["ngbDropdown"] }, { type: i4__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i3__namespace.NgbDropdownToggle, selector: "[ngbDropdownToggle]" }, { type: i3__namespace.NgbDropdownMenu, selector: "[ngbDropdownMenu]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-selector-ui',
                        templateUrl: './product-selector.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.DeprecationsService }]; }, propDecorators: { autoClose: [{
                    type: i0.Input
                }], position: [{
                    type: i0.Input
                }], container: [{
                    type: i0.Input
                }], bbDropdown: [{
                    type: i0.ViewChild,
                    args: ['bbDropdown', { static: true }]
                }], dropdownToggle: [{
                    type: i0.ViewChild,
                    args: ['dropdownToggle']
                }], listItems: [{
                    type: i0.ContentChildren,
                    args: ['listItem']
                }], onKeyEvent: [{
                    type: i0.HostListener,
                    args: ['window:keydown', ['$event']]
                }] } });

    var ProductSelectorModule = /** @class */ (function () {
        function ProductSelectorModule() {
        }
        return ProductSelectorModule;
    }());
    ProductSelectorModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductSelectorModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorModule, declarations: [ProductSelectorComponent], imports: [common.CommonModule, i3.NgbDropdownModule, i2.IconModule, i4.ButtonModule], exports: [ProductSelectorComponent] });
    ProductSelectorModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorModule, imports: [[common.CommonModule, i3.NgbDropdownModule, i2.IconModule, i4.ButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSelectorModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule, i3.NgbDropdownModule, i2.IconModule, i4.ButtonModule],
                        declarations: [ProductSelectorComponent],
                        exports: [ProductSelectorComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ProductSelectorComponent = ProductSelectorComponent;
    exports.ProductSelectorModule = ProductSelectorModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-product-selector.umd.js.map
