{"version":3,"file":"backbase-ui-ang-char-counter.umd.js","sources":["../../../../libs/ui-ang/char-counter/char-counter.component.ts","../../../../libs/ui-ang/char-counter/char-counter.component.html","../../../../libs/ui-ang/char-counter/char-counter.module.ts","../../../../libs/ui-ang/char-counter/backbase-ui-ang-char-counter.ts"],"sourcesContent":["import { Component, Input, OnInit, Renderer2, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\n\n/**\n * @name CharCounterComponent\n *\n * @description\n * Component for counting characters typed inside a form element\n */\n@Component({\n  selector: 'bb-char-counter-ui',\n  templateUrl: './char-counter.component.html',\n})\nexport class CharCounterComponent implements OnInit, OnChanges {\n  /**\n   * Passed value from parent input, it gives option to count\n   * char event if value was programmatically changed\n   */\n  @Input() inputValue: string | undefined;\n  /**\n   * The element reference which the characters are typed in.\n   */\n  @Input() element: HTMLInputElement | HTMLTextAreaElement | undefined;\n  /**\n   * Indicator for maximum character count.\n   */\n  @Input() maxLength = 150;\n  /**\n   * Whether the element should be blocked when maximum character count is reached.\n   */\n  @Input() set blockTyping(val: boolean) {\n    this._blockTyping = val;\n    if (this.blockTyping && this.element) {\n      this.renderer.setAttribute(this.element, 'maxlength', this.maxLength.toString());\n    } else {\n      this.renderer.removeAttribute(this.element, 'maxlength');\n    }\n  }\n\n  get blockTyping() {\n    return this._blockTyping;\n  }\n  private _blockTyping = false;\n  counter = 0;\n  valid = true;\n\n  constructor(private readonly renderer: Renderer2, private readonly cd: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    if (this.blockTyping && this.element) {\n      this.renderer.setAttribute(this.element, 'maxlength', this.maxLength.toString());\n    }\n\n    // Cover by setTimeout for handling value change in input/textarea\n    // This change cannot be checked by lifecycle hooks.\n    setTimeout(() => {\n      this.calculateElementValue();\n    }, 0);\n\n    this.renderer.listen(this.element, 'input', () => this.calculateElementValue());\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { inputValue } = changes;\n    if (inputValue && inputValue.previousValue !== inputValue.currentValue) {\n      this.counter = inputValue.currentValue.length;\n      this.valid = this.counter <= this.maxLength;\n    }\n  }\n  // It should be deprecated, because it doesn't allow to count\n  // value that was updated programmatically, for instance by patchValue\n  calculateElementValue(): void {\n    this.counter = this.element ? this.element.value.length : 0;\n    this.valid = this.counter <= this.maxLength;\n    this.cd.detectChanges();\n  }\n}\n","<div class=\"bb-char-counter\" [class.bb-char-counter--invalid]=\"!valid\">\n  <div [ngSwitch]=\"true\" aria-live=\"assertive\" class=\"sr-only\" aria-atomic=\"true\" role=\"log\">\n    <div\n      *ngSwitchCase=\"counter > maxLength - 4 && counter !== maxLength\"\n      i18n=\"\n        Above to reach Max Length Error|String is almost has 'maxLength' characters.\n        @@bb-char-counter-ui.pre-max-length-warning\"\n    >\n      You can type only {{ maxLength - counter }} more characters in this field.\n    </div>\n    <div\n      *ngSwitchCase=\"counter === maxLength\"\n      [attr.data-role]=\"'char-counter-error-message'\"\n      i18n=\"Max Length Error|String is more than 'maxLength' characters. @@bb-char-counter-ui.max-length-warning\"\n    >\n      Limit reached. You can only use {{ maxLength }} characters in this field.\n    </div>\n  </div>\n\n  <div *ngIf=\"element\" [attr.data-role]=\"'char-counter-current-max'\">{{ counter }}/{{ maxLength }}</div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CharCounterComponent } from './char-counter.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CharCounterComponent],\n  exports: [CharCounterComponent],\n})\nexport class CharCounterModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i0","i1","Component","Input","CommonModule","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAEA;;;;;IAKG;AAKH,QAAA,oBAAA,kBAAA,YAAA;QAiCE,SAA6B,oBAAA,CAAA,QAAmB,EAAmB,EAAqB,EAAA;IAA3D,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;IAAmB,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAmB;IAvBxF;;IAEG;IACM,QAAA,IAAS,CAAA,SAAA,GAAG,GAAG,CAAC;IAgBjB,QAAA,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;IAC7B,QAAA,IAAO,CAAA,OAAA,GAAG,CAAC,CAAC;IACZ,QAAA,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;SAE+E;IAhB5F,IAAA,MAAA,CAAA,cAAA,CAAa,oBAAW,CAAA,SAAA,EAAA,aAAA,EAAA;IASxB,QAAA,GAAA,EAAA,YAAA;gBACE,OAAO,IAAI,CAAC,YAAY,CAAC;aAC1B;IAdD;;IAEG;IACH,QAAA,GAAA,EAAA,UAAyB,GAAY,EAAA;IACnC,YAAA,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;IACxB,YAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE;IACpC,gBAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClF,aAAA;IAAM,iBAAA;oBACL,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC1D,aAAA;aACF;;;IAAA,KAAA,CAAA,CAAA;IAWD,IAAA,oBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YAAA,IAYC,KAAA,GAAA,IAAA,CAAA;IAXC,QAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE;IACpC,YAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClF,SAAA;;;IAID,QAAA,UAAU,CAAC,YAAA;gBACT,KAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B,EAAE,CAAC,CAAC,CAAC;YAEN,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,YAAM,EAAA,OAAA,KAAI,CAAC,qBAAqB,EAAE,CAA5B,EAA4B,CAAC,CAAC;SACjF,CAAA;QAED,oBAAW,CAAA,SAAA,CAAA,WAAA,GAAX,UAAY,OAAsB,EAAA;IACxB,QAAA,IAAA,UAAU,GAAK,OAAO,CAAA,UAAZ,CAAa;YAC/B,IAAI,UAAU,IAAI,UAAU,CAAC,aAAa,KAAK,UAAU,CAAC,YAAY,EAAE;gBACtE,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC;gBAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC;IAC7C,SAAA;SACF,CAAA;;;IAGD,IAAA,oBAAA,CAAA,SAAA,CAAA,qBAAqB,GAArB,YAAA;YACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC;IAC5C,QAAA,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;SACzB,CAAA;;;4IA9DU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,aAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,aAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAApB,oBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,wMCZjC,09BAqBA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;sHDTa,oBAAoB,EAAA,UAAA,EAAA,CAAA;sBAJhCC,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,oBAAoB;IAC9B,oBAAA,WAAW,EAAE,+BAA+B;qBAC7C,CAAA;0JAMU,UAAU,EAAA,CAAA;0BAAlBC,QAAK;oBAIG,OAAO,EAAA,CAAA;0BAAfA,QAAK;oBAIG,SAAS,EAAA,CAAA;0BAAjBA,QAAK;oBAIO,WAAW,EAAA,CAAA;0BAAvBA,QAAK;;;AEnBR,QAAA,iBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,iBAAA,GAAA;;;;yIAAa,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAH,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;IAAjB,iBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,iBAAiB,EAHb,YAAA,EAAA,CAAA,oBAAoB,CADzB,EAAA,OAAA,EAAA,CAAAI,eAAY,aAEZ,oBAAoB,CAAA,EAAA,CAAA,CAAA;0IAEnB,iBAAiB,EAAA,OAAA,EAAA,CAJnB,CAACA,eAAY,CAAC,CAAA,EAAA,CAAA,CAAA;sHAIZ,iBAAiB,EAAA,UAAA,EAAA,CAAA;sBAL7BC,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACR,OAAO,EAAE,CAACD,eAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,oBAAoB,CAAC;wBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;qBAChC,CAAA;;;ICTD;;IAEG;;;;;;;;;;;"}