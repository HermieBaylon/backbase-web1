(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@backbase/ui-ang/fieldset', ['exports', '@angular/core', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["ui-ang"] = global.backbase["ui-ang"] || {}, global.backbase["ui-ang"].fieldset = {}), global.ng.core, global.ng.common));
})(this, (function (exports, i0, i1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /**
     * @name FieldsetComponent
     *
     * @description
     * Component that displays a fieldset group.
     */
    var FieldsetComponent = /** @class */ (function () {
        function FieldsetComponent() {
            /**
             * Set disabled state of all form items within fieldset
             */
            this.disabled = false;
        }
        return FieldsetComponent;
    }());
    FieldsetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    FieldsetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: FieldsetComponent, selector: "bb-fieldset-ui", inputs: { heading: "heading", disabled: "disabled" }, ngImport: i0__namespace, template: "<fieldset [disabled]=\"disabled\" class=\"bb-fieldset\">\n  <legend *ngIf=\"heading\" class=\"bb-fieldset__heading\">\n    {{ heading }}\n  </legend>\n  <ng-content></ng-content>\n</fieldset>\n", directives: [{ type: i1__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-fieldset-ui',
                        templateUrl: './fieldset.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { heading: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }] } });

    var FieldsetModule = /** @class */ (function () {
        function FieldsetModule() {
        }
        return FieldsetModule;
    }());
    FieldsetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    FieldsetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetModule, declarations: [FieldsetComponent], imports: [i1.CommonModule], exports: [FieldsetComponent] });
    FieldsetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetModule, imports: [[i1.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: FieldsetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i1.CommonModule],
                        declarations: [FieldsetComponent],
                        exports: [FieldsetComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.FieldsetComponent = FieldsetComponent;
    exports.FieldsetModule = FieldsetModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-ui-ang-fieldset.umd.js.map
