import { EventEmitter, QueryList } from '@angular/core';
import { TabComponent } from './tab.component';
import * as i0 from "@angular/core";
/**
 * TabGroupComponent represents component that is used
 * as a wrapper for tab item components. It tracks user interaction and
 * notifies parent upon selection change
 */
export declare class TabGroupComponent {
    /**
     * Setter (Input) for initial tab item selection
     *
     * @param initialSelection Index of initially selected tab item
     */
    set initialSelection(initSelection: number | undefined);
    /**
     * Event (Output) that emits new value once tab item selection has changed.
     * As a parameter it provides index of newly selected item
     */
    select: EventEmitter<number>;
    /**
     * Represents a list of tab items component inside this wrapper
     */
    items: QueryList<TabComponent> | undefined;
    /**
     * Keeps track of currently active tab item index
     */
    private activeIndexValue;
    /**
     * Getter for index of currently active tab item
     */
    get activeIndex(): number;
    /**
     * Internal handler for clicks on tab items
     *
     * @param index Index of element that has been clicked
     */
    onClick(event: MouseEvent, index: number): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TabGroupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TabGroupComponent, "bb-tab-group-ui", never, { "initialSelection": "initialSelection"; }, { "select": "select"; }, ["items"], never>;
}
