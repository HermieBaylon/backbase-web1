import { FormControl } from '@angular/forms';
import { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';
import { DomAttributesService } from '@backbase/ui-ang/services';
import { AccountSelectorComponent } from '@backbase/ui-ang/account-selector';
import { Subject, BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export declare class AccountSelectorShowcaseComponent {
    private domAttributesService;
    items: ({
        id: string;
        name: string;
        balance: number;
        number: string;
        currency: string;
        favorite: boolean;
        status: string;
        bankBranchCode: string;
        type?: undefined;
    } | {
        id: string;
        name: string;
        balance: number;
        number: string;
        currency: string;
        favorite: boolean;
        type: string;
        bankBranchCode: string;
        status?: undefined;
    } | {
        id: string;
        name: string;
        balance: number;
        number: string;
        currency: string;
        favorite: boolean;
        type: string;
        status: string;
        bankBranchCode: string;
    })[];
    typeahead: Subject<string>;
    typeaheadSearchTerm: string;
    typeaheadItems$: BehaviorSubject<({
        id: string;
        name: string;
        balance: number;
        number: string;
        currency: string;
        favorite: boolean;
        status: string;
        bankBranchCode: string;
        type?: undefined;
    } | {
        id: string;
        name: string;
        balance: number;
        number: string;
        currency: string;
        favorite: boolean;
        type: string;
        bankBranchCode: string;
        status?: undefined;
    } | {
        id: string;
        name: string;
        balance: number;
        number: string;
        currency: string;
        favorite: boolean;
        type: string;
        status: string;
        bankBranchCode: string;
    })[]>;
    accountSelectors: ({
        labelId: string;
        heading: string;
        placeholder: string;
        dataRole: string;
        multiple: boolean;
        items: ({
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            status: string;
            bankBranchCode: string;
            type?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            bankBranchCode: string;
            status?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            status: string;
            bankBranchCode: string;
        })[];
        selectedItems: undefined;
        showCurrencySymbol: boolean;
        eventTriggered: undefined;
        eventState: undefined;
        position: string;
        closeOnSelect: boolean;
        productNumberFormat: {
            length: number;
            maskRange: number[];
            segments: number;
        };
        change: (self: any, item: any) => void;
        search: (self: any, searchQ: any) => void;
        clearSearch: (self: any, event: any) => void;
        scrollToEnd: (self: any, event: any) => void;
        notFoundText?: undefined;
        markFirst?: undefined;
        invalid?: undefined;
        disabled?: undefined;
        showBankBranchCode?: undefined;
    } | {
        labelId: string;
        heading: string;
        placeholder: string;
        dataRole: string;
        multiple: boolean;
        items: ({
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            status: string;
            bankBranchCode: string;
            type?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            bankBranchCode: string;
            status?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            status: string;
            bankBranchCode: string;
        })[];
        selectedItems: undefined;
        eventTriggered: undefined;
        eventState: undefined;
        showCurrencySymbol: boolean;
        position: string;
        productNumberFormat: PaymentCardNumberFormat;
        notFoundText: string;
        markFirst: boolean;
        invalid: boolean;
        closeOnSelect: boolean;
        change: (self: any, item: any) => void;
        search: (self: any, searchQ: any) => void;
        clearSearch: (self: any, event: any) => void;
        scrollToEnd: (self: any, event: any) => void;
        disabled?: undefined;
        showBankBranchCode?: undefined;
    } | {
        labelId: string;
        heading: string;
        placeholder: string;
        dataRole: string;
        multiple: boolean;
        items: ({
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            status: string;
            bankBranchCode: string;
            type?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            bankBranchCode: string;
            status?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            status: string;
            bankBranchCode: string;
        })[];
        selectedItems: undefined;
        showCurrencySymbol: boolean;
        eventTriggered: undefined;
        eventState: undefined;
        position: string;
        productNumberFormat: {
            length: number;
            maskRange: number[];
            segments: number;
        };
        disabled: boolean;
        change: (self: any, item: any) => void;
        search: (self: any, searchQ: any) => void;
        clearSearch: (self: any, event: any) => void;
        scrollToEnd: (self: any, event: any) => void;
        closeOnSelect?: undefined;
        notFoundText?: undefined;
        markFirst?: undefined;
        invalid?: undefined;
        showBankBranchCode?: undefined;
    } | {
        labelId: string;
        heading: string;
        placeholder: string;
        dataRole: string;
        multiple: boolean;
        items: ({
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            status: string;
            bankBranchCode: string;
            type?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            bankBranchCode: string;
            status?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            status: string;
            bankBranchCode: string;
        })[];
        selectedItems: undefined;
        showCurrencySymbol: boolean;
        eventTriggered: undefined;
        showBankBranchCode: boolean;
        eventState: undefined;
        position: string;
        closeOnSelect: boolean;
        productNumberFormat: {
            length: number;
            maskRange: number[];
            segments: number;
        };
        change: (self: any, item: any) => void;
        search: (self: any, searchQ: any) => void;
        clearSearch: (self: any, event: any) => void;
        scrollToEnd: (self: any, event: any) => void;
        notFoundText?: undefined;
        markFirst?: undefined;
        invalid?: undefined;
        disabled?: undefined;
    })[];
    accountSelectorValidation: {
        labelId: string;
        heading: string;
        placeholder: string;
        dataRole: string;
        multiple: boolean;
        items: ({
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            status: string;
            bankBranchCode: string;
            type?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            bankBranchCode: string;
            status?: undefined;
        } | {
            id: string;
            name: string;
            balance: number;
            number: string;
            currency: string;
            favorite: boolean;
            type: string;
            status: string;
            bankBranchCode: string;
        })[];
        selectedItems: FormControl;
        eventTriggered: undefined;
        eventState: undefined;
        position: string;
        closeOnSelect: boolean;
        invalid: boolean;
        required: boolean;
        showError: boolean;
        productNumberFormat: {
            length: number;
            maskRange: number[];
            segments: number;
        };
        change: (self: any, item: any) => void;
        search: (self: any, searchQ: any) => void;
        clearSearch: (self: any, event: any) => void;
        scrollToEnd: (self: any, event: any) => void;
        submit: (self: any) => void;
        reset: (self: any) => void;
        onBlur: (self: any) => void;
    };
    accountSelectorTypeAhead: {
        labelId: string;
        heading: string;
        placeholder: string;
        dataRole: string;
        multiple: boolean;
        selectedItems: undefined;
        showCurrencySymbol: boolean;
        eventTriggered: undefined;
        showBankBranchCode: boolean;
        eventState: undefined;
        position: string;
        editableSearchTerm: boolean;
        clearSearchOnAdd: boolean;
        closeOnSelect: boolean;
        typeahead: Subject<string>;
        typeToSearchText: string;
        minTermLength: number;
        productNumberFormat: {
            length: number;
            maskRange: number[];
            segments: number;
        };
        change: (self: any, item: any) => void;
        search: (self: any, searchQ: any) => void;
        clearSearch: (self: any, event: any) => void;
        scrollToEnd: (self: any, event: any) => void;
    };
    accountSelectorWithValidation: AccountSelectorComponent;
    groupByItems(item: any): any;
    searchFunc(term: string, item: any): boolean;
    constructor(domAttributesService: DomAttributesService);
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountSelectorShowcaseComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AccountSelectorShowcaseComponent, "bb-account-selector-ui-showcase", never, {}, {}, never, never>;
}
