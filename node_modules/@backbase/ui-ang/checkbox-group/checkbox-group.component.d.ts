import { ChangeDetectorRef, AfterContentChecked, OnDestroy } from '@angular/core';
import { ControlContainer } from '@angular/forms';
import { InputBaseComponent } from '@backbase/ui-ang/base-classes';
import { DeprecationsService } from '@backbase/foundation-ang/future';
import * as i0 from "@angular/core";
/**
 * @name CheckboxGroupComponent
 *
 * @description
 * Stores a state, determines it and displays a parent checkbox for a checkboxes group.
 * Required module(s): FormsModule
 */
export declare class CheckboxGroupComponent extends InputBaseComponent implements AfterContentChecked, OnDestroy {
    protected readonly cd: ChangeDetectorRef;
    protected readonly deprecationsService: DeprecationsService;
    private readonly controlContainer;
    indeterminate: boolean;
    private control?;
    private readonly skip$;
    private readonly unsubscribe$;
    constructor(cd: ChangeDetectorRef, deprecationsService: DeprecationsService, controlContainer: ControlContainer);
    ngAfterContentChecked(): void;
    ngOnDestroy(): void;
    onValueChange(): void;
    isDisabled(): boolean;
    private checkState;
    static ɵfac: i0.ɵɵFactoryDeclaration<CheckboxGroupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CheckboxGroupComponent, "bb-checkbox-group-ui", never, {}, {}, never, ["*"]>;
}
