import { ElementRef, OnChanges, Renderer2, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare const DEFAULT_POSITIVE_CLASS = "bb-amount--positive";
export declare const DEFAULT_NEGATIVE_CLASS = "bb-amount--negative";
/**
 * @name HighlightDirective
 *
 * @description
 * Directive that encapsulate logic for highlighting positive/negative numbers.
 * Example usage with bb-amount-ui (AmountModule)
 */
export declare class HighlightDirective implements OnChanges {
    private readonly renderer;
    private readonly elementRef;
    /**
     * Setter (Input) for value of highlighted number
     *
     * @param amount Value of highlighted number
     */
    set amount(amount: string | number);
    /**
     * Setter (Input) that turn on/off highlight
     *
     * @param value Highlight flag
     */
    set bbHighlight(value: boolean | '');
    /**
     * The class for positive value.
     */
    negativeClass: string;
    /**
     * The class for negative value.
     */
    positiveClass: string;
    private amountValue;
    private highlightValue;
    constructor(renderer: Renderer2, elementRef: ElementRef);
    private get isPositive();
    ngOnChanges(change: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<HighlightDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<HighlightDirective, "[bbHighlight]", never, { "amount": "amount"; "bbHighlight": "bbHighlight"; "negativeClass": "negativeClass"; "positiveClass": "positiveClass"; }, {}, never>;
}
