import { TemplateRef } from '@angular/core';
import { PaymentCardNumberFormat } from '@backbase/ui-ang/payment-card-number-pipe';
import * as i0 from "@angular/core";
export declare type AccountStatus = 'closed' | 'inactive' | 'active';
export declare class CustomProductItemBasicAccountTypeDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemBasicAccountTypeDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemBasicAccountTypeDirective, "ng-template[bbCustomProductItemBasicAccountType]", never, {}, {}, never>;
}
export declare class CustomProductItemBasicAccountTitleDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemBasicAccountTitleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemBasicAccountTitleDirective, "ng-template[bbCustomProductItemBasicAccountTitle]", never, {}, {}, never>;
}
export declare class CustomProductItemBasicAccountDetailsFormatterDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductItemBasicAccountDetailsFormatterDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CustomProductItemBasicAccountDetailsFormatterDirective, "ng-template[bbCustomProductItemBasicAccountDetailsFormatter]", never, {}, {}, never>;
}
export declare class ProductItemBasicAccountComponent {
    customProductItemBasicAccountType: CustomProductItemBasicAccountTypeDirective | undefined;
    customProductItemBasicAccountTitle: CustomProductItemBasicAccountTitleDirective | undefined;
    customProductItemBasicAccountDetailsFormatter: CustomProductItemBasicAccountDetailsFormatterDirective | undefined;
    readonly hostRef: ProductItemBasicAccountComponent;
    /**
     * The card Title value. Default is empty string
     */
    title: string | undefined;
    /**
     * The product Number. Default is empty string
     */
    productNumber: string | undefined;
    /**
     * Configuration of how the product number should be formatted.
     */
    productNumberFormat: PaymentCardNumberFormat;
    /**
     * The card currency value. Default is empty string
     */
    currency?: string | undefined;
    /**
     * Will show currency Symbol in amount. Default value true
     */
    showCurrencySymbol: boolean;
    /**
     * The card Amount value
     */
    amount?: number | undefined;
    /**
     * The card highlight the amount and currency value
     */
    highlight?: boolean;
    /**
     * The product details info values
     */
    productDetailsInfo?: {
        [key: string]: any;
    };
    /**
     * The active state of card (it adds active class for blue line)
     */
    active: boolean;
    /**
     * The favorite state of card (add favorite icon next to title)
     */
    favorite: boolean;
    /**
     * The favorite icon color (define star icon color)
     */
    favoriteIconColor: string;
    /**
     * The selected state of card (it removes check mark)
     */
    selected: boolean;
    /**
     * Type of account (define selected item icon)
     */
    type: string | undefined;
    /**
     * Current account status (ex: closed, inactive, active)
     */
    status: AccountStatus | undefined;
    /**
     * Balance label (ex: Available balance, Current balance)
     */
    balanceLabel: string | undefined;
    /**
     * Branch Code of bank
     */
    bankBranchCode: string | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductItemBasicAccountComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ProductItemBasicAccountComponent, "bb-product-item-basic-account-ui", never, { "title": "title"; "productNumber": "productNumber"; "productNumberFormat": "productNumberFormat"; "currency": "currency"; "showCurrencySymbol": "showCurrencySymbol"; "amount": "amount"; "highlight": "highlight"; "productDetailsInfo": "productDetailsInfo"; "active": "active"; "favorite": "favorite"; "favoriteIconColor": "favoriteIconColor"; "selected": "selected"; "type": "type"; "status": "status"; "balanceLabel": "balanceLabel"; "bankBranchCode": "bankBranchCode"; }, {}, ["customProductItemBasicAccountType", "customProductItemBasicAccountTitle", "customProductItemBasicAccountDetailsFormatter"], never>;
}
