import { TemplateRef } from '@angular/core';
import { HttpErrorResponse } from '@angular/common/http';
import * as i0 from "@angular/core";
/**
 * @name ErrorCommonStateComponent
 *
 * @description
 * Component that displays error state based on error value that was provided.
 */
export declare class ErrorCommonStateComponent {
    /**
     * Error that should be displayed. Could be HttpErrorResponse, Error, Template reference or string.
     * Default value empty string.
     */
    error: HttpErrorResponse | Error | TemplateRef<any> | string;
    /**
     * Bad Request error template reference
     */
    errorBadRequest: TemplateRef<any> | undefined;
    /**
     * Unauthorized error template reference
     */
    errorUnauthorized: TemplateRef<any> | undefined;
    /**
     * Forbidden error template reference
     */
    errorForbidden: TemplateRef<any> | undefined;
    /**
     * Not Found error template reference
     */
    errorNotFound: TemplateRef<any> | undefined;
    /**
     * Connectivity error template reference
     */
    errorConnectivityTemplate: TemplateRef<any> | undefined;
    /**
     * Unexpected error template reference
     */
    errorUnexpectedTemplate: TemplateRef<any> | undefined;
    /**
     * Message error template reference
     */
    errorMessageTemplate: TemplateRef<any> | undefined;
    /**
     * Text template reference
     */
    errorTextTemplate: TemplateRef<any> | undefined;
    /**
     * Custom template reference
     */
    errorCustomTemplate: TemplateRef<any> | undefined;
    getErrorTemplate(): TemplateRef<any> | undefined;
    getMessage(): string | TemplateRef<any> | HttpErrorResponse;
    static ɵfac: i0.ɵɵFactoryDeclaration<ErrorCommonStateComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ErrorCommonStateComponent, "bb-common-error-state-ui", never, { "error": "error"; }, {}, never, never>;
}
