import { createMocks } from '@backbase/foundation-ang/data-http';
export const ArrangementsHttpServiceGetArrangementByIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/arrangements/{arrangementId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "1cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                    "externalArrangementId": "d64c31c4-50e4-11e7-b114-b2f933d5fe66",
                    "name": "Spending fee",
                    "displayName": "Mr and Mrs J. Smith Account",
                    "bookedBalance": 100.1,
                    "availableBalance": 100.2,
                    "creditLimit": 100.3,
                    "IBAN": "••••••••••••••••••6819",
                    "BBAN": "••••••••••6819",
                    "currency": "EUR",
                    "bankAlias": "Secret account",
                    "externalTransferAllowed": true,
                    "urgentTransferAllowed": false,
                    "accruedInterest": 3.3,
                    "number": "•••••ffix",
                    "principalAmount": 100.4,
                    "currentInvestmentValue": 100.5,
                    "productNumber": "productNumber",
                    "BIC": "BICExample1",
                    "bankBranchCode": "bankBranchCode1",
                    "reservedAmount": 1000.02,
                    "remainingPeriodicTransfers": 1000.03,
                    "nextClosingDate": "2021-01-10",
                    "overdueSince": "2021-01-10",
                    "paymentsPastDue": 2,
                    "bankBranchCode2": "bankBranchCode2",
                    "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                    "accountInterestRate": 100.2,
                    "valueDateBalance": 100.1,
                    "creditLimitUsage": 100.3,
                    "creditLimitInterestRate": 100.4,
                    "creditLimitExpiryDate": "2019-09-28T16:41:41.090Z",
                    "startDate": "2016-02-28T16:41:41.090Z",
                    "termUnit": "Y",
                    "termNumber": 50,
                    "interestPaymentFrequencyUnit": "M",
                    "interestPaymentFrequencyNumber": 15,
                    "maturityDate": "2017-02-28T16:41:41.090Z",
                    "maturityAmount": 99.5,
                    "autoRenewalIndicator": true,
                    "interestSettlementAccount": "interestSettlementAccount1",
                    "outstandingPrincipalAmount": 100.2,
                    "monthlyInstalmentAmount": 100.1,
                    "amountInArrear": 100.3,
                    "minimumRequiredBalance": 80.4,
                    "creditCardAccountNumber": "••3456",
                    "validThru": "2019-02-28T16:41:41.090Z",
                    "applicableInterestRate": 101.2,
                    "remainingCredit": 50,
                    "outstandingPayment": 105.5,
                    "minimumPayment": 51.1,
                    "minimumPaymentDueDate": "2018-02-28T16:41:41.090Z",
                    "totalInvestmentValue": 110.2,
                    "debitCards": [{
                            "number": "7477",
                            "expiryDate": "2020-08-22",
                            "cardId": "id2",
                            "cardholderName": "John Doe",
                            "cardType": "Visa Electron",
                            "cardStatus": "Active"
                        }, {
                            "number": "7884",
                            "expiryDate": "2019-01-14",
                            "cardId": "id1",
                            "cardholderName": "John Doe",
                            "cardType": "Visa",
                            "cardStatus": "Active"
                        }],
                    "cardDetails": {
                        "cardProvider": "Provider 3",
                        "secured": true,
                        "availableCashCredit": 4300.3,
                        "cashCreditLimit": 4300.32,
                        "lastPaymentDate": "2021-01-11",
                        "lastPaymentAmount": 20.23,
                        "latePaymentFee": "0.3%",
                        "previousStatementDate": "2021-01-10",
                        "previousStatementBalance": -43.37,
                        "statementBalance": 43.37,
                        "additions": {
                            "prop0": "value03",
                            "prop1": "value13"
                        }
                    },
                    "interestDetails": {
                        "lastYearAccruedInterest": 35.3,
                        "dividendWithheldYTD": "0.3%",
                        "annualPercentageYield": 20.2,
                        "cashAdvanceInterestRate": 20.2,
                        "penaltyInterestRate": 20.2,
                        "additions": {
                            "prop0": "value04",
                            "prop1": "value14"
                        }
                    },
                    "accountHolderAddressLine1": "accountHolderAddressLine11",
                    "accountHolderAddressLine2": "accountHolderAddressLine12",
                    "accountHolderStreetName": "street1",
                    "town": "Amsterdam",
                    "postCode": "5000",
                    "countrySubDivision": "subDivision",
                    "accountHolderNames": "Okuneva Spencer,Danthe Mohr",
                    "accountHolderCountry": "AF",
                    "creditAccount": true,
                    "debitAccount": true,
                    "lastUpdateDate": "2019-09-28T16:41:41.090Z",
                    "productId": "productId",
                    "productKindName": "Current Account",
                    "visible": true,
                    "legalEntityIds": ["le1", "le2"],
                    "productTypeName": "productTypeName",
                    "externalLegalEntityId": "le1",
                    "externalProductId": "externalProductidId",
                    "userPreferences": {
                        "arrangementId": "9aabca5b-63ae-47d9-8d63-c5ed0e831dfa",
                        "alias": "My Bank Account",
                        "visible": true,
                        "favorite": false
                    },
                    "product": {
                        "externalId": "externalProductidId",
                        "externalTypeId": "externalProductTypeId",
                        "typeName": "productTypeName",
                        "productKind": {
                            "externalKindId": "kind1",
                            "kindName": "Current Account",
                            "kindUri": "current-account"
                        }
                    },
                    "state": {
                        "externalStateId": "externalStateId1",
                        "state": "Active"
                    },
                    "sourceId": "LJBASI2XXXX",
                    "parentId": "100",
                    "externalParentId": "externalParentId100",
                    "financialInstitutionId": 1,
                    "lastSyncDate": "2020-09-28T16:41:41.090Z",
                    "unmaskableAttributes": ["number", "IBAN"]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const ArrangementsHttpServiceGetArrangementChildrenMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/arrangements/{arrangementId}/children",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "name": "Mr and Mrs J. Smith",
                        "displayName": "Mr and Mrs J. Smith",
                        "currency": "AED",
                        "bookedBalance": 1000,
                        "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                        "maturityDate": "2017-02-28T16:41:41.090Z",
                        "maturityAmount": 99.5
                    }, {
                        "name": "Howlin Wolf",
                        "displayName": "Howlin Wolf",
                        "currency": "AED",
                        "bookedBalance": 15000,
                        "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                        "maturityDate": "2017-02-28T16:41:41.090Z",
                        "maturityAmount": 99.5
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const ArrangementsHttpServiceGetLinkedMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/arrangements/linked",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "totalElements": 1,
                    "arrangementElements": [{
                            "externalArrangementId": "d64c31c4-50e4-11e7-b114-b2f933d5fe66",
                            "name": "Spending fee",
                            "displayName": "Secret account",
                            "bookedBalance": 100.1,
                            "availableBalance": 100.2,
                            "creditLimit": 100.3,
                            "IBAN": "••••••••••••••••••6819",
                            "BBAN": "••••••••••6819",
                            "currency": "EUR",
                            "bankAlias": "Secret account",
                            "externalTransferAllowed": true,
                            "urgentTransferAllowed": false,
                            "accruedInterest": 3.3,
                            "number": "•••••ffix",
                            "principalAmount": 100.4,
                            "currentInvestmentValue": 100.5,
                            "productNumber": "productNumber",
                            "BIC": "BICExample1",
                            "bankBranchCode": "bankBranchCode1",
                            "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                            "accountInterestRate": 100.2,
                            "valueDateBalance": 100.1,
                            "creditLimitUsage": 100.3,
                            "creditLimitInterestRate": 100.4,
                            "creditLimitExpiryDate": "2019-09-28T16:41:41.090Z",
                            "startDate": "2016-02-28T16:41:41.090Z",
                            "termUnit": "Y",
                            "termNumber": 50,
                            "interestPaymentFrequencyUnit": "M",
                            "interestPaymentFrequencyNumber": 15,
                            "maturityDate": "2017-02-28T16:41:41.090Z",
                            "maturityAmount": 99.5,
                            "autoRenewalIndicator": true,
                            "interestSettlementAccount": "interestSettlementAccount1",
                            "outstandingPrincipalAmount": 100.2,
                            "monthlyInstalmentAmount": 100.1,
                            "amountInArrear": 100.3,
                            "minimumRequiredBalance": 80.4,
                            "creditCardAccountNumber": "••3456",
                            "validThru": "2019-02-28T16:41:41.090Z",
                            "applicableInterestRate": 101.2,
                            "remainingCredit": 50,
                            "outstandingPayment": 105.5,
                            "minimumPayment": 51.1,
                            "minimumPaymentDueDate": "2018-02-28T16:41:41.090Z",
                            "totalInvestmentValue": 110.2,
                            "debitCards": [{
                                    "number": "5462",
                                    "expiryDate": "2020-08-22"
                                }, {
                                    "number": "4424",
                                    "expiryDate": "2019-01-14"
                                }],
                            "accountHolderAddressLine1": "accountHolderAddressLine11",
                            "accountHolderAddressLine2": "accountHolderAddressLine12",
                            "accountHolderStreetName": "street1",
                            "town": "Amsterdam",
                            "postCode": "5000",
                            "countrySubDivision": "subDivision",
                            "accountHolderNames": "Okuneva Spencer,Mile Panika",
                            "accountHolderCountry": "AF",
                            "creditAccount": true,
                            "debitAccount": true,
                            "lastUpdateDate": "2019-09-28T16:41:41.090Z",
                            "productId": "productId",
                            "externalProductId": "externalProductidId",
                            "linked": true,
                            "sourceId": "LJBASI2XXXX",
                            "unmaskableAttributes": ["BBAN"]
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const ArrangementsHttpServiceGetUserPreferencesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/arrangements/user-preferences",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "arrangementId": "9aabca5b-63ae-47d9-8d63-c5ed0e831dfa",
                    "alias": "My Bank Account",
                    "visible": true,
                    "favorite": false
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const ArrangementsHttpServiceLinkExternalLegalEntityMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/arrangements/link/{externalLegalEntityId}",
        method: "POST",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const ArrangementsHttpServiceUnlinkExternalLegalEntityMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/arrangements/unlink/{externalLegalEntityId}/{externalArrangementId}",
        method: "POST",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const ArrangementsHttpServiceUnmaskedAttributeMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/arrangements/{arrangementId}/unmasked-attributes/{attributeName}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: "NL76ABNA7007935591"
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const ArrangementsHttpServiceUpdateUserPreferencesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/arrangements/user-preferences",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const ArrangementsHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/arrangements/{arrangementId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "1cdb2224-8926-4b4d-a99f-1c9dfbbb4699",
                    "externalArrangementId": "d64c31c4-50e4-11e7-b114-b2f933d5fe66",
                    "name": "Spending fee",
                    "displayName": "Mr and Mrs J. Smith Account",
                    "bookedBalance": 100.1,
                    "availableBalance": 100.2,
                    "creditLimit": 100.3,
                    "IBAN": "••••••••••••••••••6819",
                    "BBAN": "••••••••••6819",
                    "currency": "EUR",
                    "bankAlias": "Secret account",
                    "externalTransferAllowed": true,
                    "urgentTransferAllowed": false,
                    "accruedInterest": 3.3,
                    "number": "•••••ffix",
                    "principalAmount": 100.4,
                    "currentInvestmentValue": 100.5,
                    "productNumber": "productNumber",
                    "BIC": "BICExample1",
                    "bankBranchCode": "bankBranchCode1",
                    "reservedAmount": 1000.02,
                    "remainingPeriodicTransfers": 1000.03,
                    "nextClosingDate": "2021-01-10",
                    "overdueSince": "2021-01-10",
                    "paymentsPastDue": 2,
                    "bankBranchCode2": "bankBranchCode2",
                    "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                    "accountInterestRate": 100.2,
                    "valueDateBalance": 100.1,
                    "creditLimitUsage": 100.3,
                    "creditLimitInterestRate": 100.4,
                    "creditLimitExpiryDate": "2019-09-28T16:41:41.090Z",
                    "startDate": "2016-02-28T16:41:41.090Z",
                    "termUnit": "Y",
                    "termNumber": 50,
                    "interestPaymentFrequencyUnit": "M",
                    "interestPaymentFrequencyNumber": 15,
                    "maturityDate": "2017-02-28T16:41:41.090Z",
                    "maturityAmount": 99.5,
                    "autoRenewalIndicator": true,
                    "interestSettlementAccount": "interestSettlementAccount1",
                    "outstandingPrincipalAmount": 100.2,
                    "monthlyInstalmentAmount": 100.1,
                    "amountInArrear": 100.3,
                    "minimumRequiredBalance": 80.4,
                    "creditCardAccountNumber": "••3456",
                    "validThru": "2019-02-28T16:41:41.090Z",
                    "applicableInterestRate": 101.2,
                    "remainingCredit": 50,
                    "outstandingPayment": 105.5,
                    "minimumPayment": 51.1,
                    "minimumPaymentDueDate": "2018-02-28T16:41:41.090Z",
                    "totalInvestmentValue": 110.2,
                    "debitCards": [{
                            "number": "7477",
                            "expiryDate": "2020-08-22",
                            "cardId": "id2",
                            "cardholderName": "John Doe",
                            "cardType": "Visa Electron",
                            "cardStatus": "Active"
                        }, {
                            "number": "7884",
                            "expiryDate": "2019-01-14",
                            "cardId": "id1",
                            "cardholderName": "John Doe",
                            "cardType": "Visa",
                            "cardStatus": "Active"
                        }],
                    "cardDetails": {
                        "cardProvider": "Provider 3",
                        "secured": true,
                        "availableCashCredit": 4300.3,
                        "cashCreditLimit": 4300.32,
                        "lastPaymentDate": "2021-01-11",
                        "lastPaymentAmount": 20.23,
                        "latePaymentFee": "0.3%",
                        "previousStatementDate": "2021-01-10",
                        "previousStatementBalance": -43.37,
                        "statementBalance": 43.37,
                        "additions": {
                            "prop0": "value03",
                            "prop1": "value13"
                        }
                    },
                    "interestDetails": {
                        "lastYearAccruedInterest": 35.3,
                        "dividendWithheldYTD": "0.3%",
                        "annualPercentageYield": 20.2,
                        "cashAdvanceInterestRate": 20.2,
                        "penaltyInterestRate": 20.2,
                        "additions": {
                            "prop0": "value04",
                            "prop1": "value14"
                        }
                    },
                    "accountHolderAddressLine1": "accountHolderAddressLine11",
                    "accountHolderAddressLine2": "accountHolderAddressLine12",
                    "accountHolderStreetName": "street1",
                    "town": "Amsterdam",
                    "postCode": "5000",
                    "countrySubDivision": "subDivision",
                    "accountHolderNames": "Okuneva Spencer,Danthe Mohr",
                    "accountHolderCountry": "AF",
                    "creditAccount": true,
                    "debitAccount": true,
                    "lastUpdateDate": "2019-09-28T16:41:41.090Z",
                    "productId": "productId",
                    "productKindName": "Current Account",
                    "visible": true,
                    "legalEntityIds": ["le1", "le2"],
                    "productTypeName": "productTypeName",
                    "externalLegalEntityId": "le1",
                    "externalProductId": "externalProductidId",
                    "userPreferences": {
                        "arrangementId": "9aabca5b-63ae-47d9-8d63-c5ed0e831dfa",
                        "alias": "My Bank Account",
                        "visible": true,
                        "favorite": false
                    },
                    "product": {
                        "externalId": "externalProductidId",
                        "externalTypeId": "externalProductTypeId",
                        "typeName": "productTypeName",
                        "productKind": {
                            "externalKindId": "kind1",
                            "kindName": "Current Account",
                            "kindUri": "current-account"
                        }
                    },
                    "state": {
                        "externalStateId": "externalStateId1",
                        "state": "Active"
                    },
                    "sourceId": "LJBASI2XXXX",
                    "parentId": "100",
                    "externalParentId": "externalParentId100",
                    "financialInstitutionId": 1,
                    "lastSyncDate": "2020-09-28T16:41:41.090Z",
                    "unmaskableAttributes": ["number", "IBAN"]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/arrangements/{arrangementId}/children",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "name": "Mr and Mrs J. Smith",
                        "displayName": "Mr and Mrs J. Smith",
                        "currency": "AED",
                        "bookedBalance": 1000,
                        "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                        "maturityDate": "2017-02-28T16:41:41.090Z",
                        "maturityAmount": 99.5
                    }, {
                        "name": "Howlin Wolf",
                        "displayName": "Howlin Wolf",
                        "currency": "AED",
                        "bookedBalance": 15000,
                        "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                        "maturityDate": "2017-02-28T16:41:41.090Z",
                        "maturityAmount": 99.5
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/arrangements/linked",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "totalElements": 1,
                    "arrangementElements": [{
                            "externalArrangementId": "d64c31c4-50e4-11e7-b114-b2f933d5fe66",
                            "name": "Spending fee",
                            "displayName": "Secret account",
                            "bookedBalance": 100.1,
                            "availableBalance": 100.2,
                            "creditLimit": 100.3,
                            "IBAN": "••••••••••••••••••6819",
                            "BBAN": "••••••••••6819",
                            "currency": "EUR",
                            "bankAlias": "Secret account",
                            "externalTransferAllowed": true,
                            "urgentTransferAllowed": false,
                            "accruedInterest": 3.3,
                            "number": "•••••ffix",
                            "principalAmount": 100.4,
                            "currentInvestmentValue": 100.5,
                            "productNumber": "productNumber",
                            "BIC": "BICExample1",
                            "bankBranchCode": "bankBranchCode1",
                            "accountOpeningDate": "2016-01-28T16:41:41.090Z",
                            "accountInterestRate": 100.2,
                            "valueDateBalance": 100.1,
                            "creditLimitUsage": 100.3,
                            "creditLimitInterestRate": 100.4,
                            "creditLimitExpiryDate": "2019-09-28T16:41:41.090Z",
                            "startDate": "2016-02-28T16:41:41.090Z",
                            "termUnit": "Y",
                            "termNumber": 50,
                            "interestPaymentFrequencyUnit": "M",
                            "interestPaymentFrequencyNumber": 15,
                            "maturityDate": "2017-02-28T16:41:41.090Z",
                            "maturityAmount": 99.5,
                            "autoRenewalIndicator": true,
                            "interestSettlementAccount": "interestSettlementAccount1",
                            "outstandingPrincipalAmount": 100.2,
                            "monthlyInstalmentAmount": 100.1,
                            "amountInArrear": 100.3,
                            "minimumRequiredBalance": 80.4,
                            "creditCardAccountNumber": "••3456",
                            "validThru": "2019-02-28T16:41:41.090Z",
                            "applicableInterestRate": 101.2,
                            "remainingCredit": 50,
                            "outstandingPayment": 105.5,
                            "minimumPayment": 51.1,
                            "minimumPaymentDueDate": "2018-02-28T16:41:41.090Z",
                            "totalInvestmentValue": 110.2,
                            "debitCards": [{
                                    "number": "5462",
                                    "expiryDate": "2020-08-22"
                                }, {
                                    "number": "4424",
                                    "expiryDate": "2019-01-14"
                                }],
                            "accountHolderAddressLine1": "accountHolderAddressLine11",
                            "accountHolderAddressLine2": "accountHolderAddressLine12",
                            "accountHolderStreetName": "street1",
                            "town": "Amsterdam",
                            "postCode": "5000",
                            "countrySubDivision": "subDivision",
                            "accountHolderNames": "Okuneva Spencer,Mile Panika",
                            "accountHolderCountry": "AF",
                            "creditAccount": true,
                            "debitAccount": true,
                            "lastUpdateDate": "2019-09-28T16:41:41.090Z",
                            "productId": "productId",
                            "externalProductId": "externalProductidId",
                            "linked": true,
                            "sourceId": "LJBASI2XXXX",
                            "unmaskableAttributes": ["BBAN"]
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/arrangements/user-preferences",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "arrangementId": "9aabca5b-63ae-47d9-8d63-c5ed0e831dfa",
                    "alias": "My Bank Account",
                    "visible": true,
                    "favorite": false
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/arrangements/link/{externalLegalEntityId}",
        method: "POST",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/arrangements/unlink/{externalLegalEntityId}/{externalArrangementId}",
        method: "POST",
        responses: [
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/arrangements/{arrangementId}/unmasked-attributes/{attributeName}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: "NL76ABNA7007935591"
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/arrangements/user-preferences",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,