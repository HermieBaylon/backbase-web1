{"version":3,"file":"backbase-foundation-ang-core.umd.js","sources":["../../../tslib/tslib.es6.js","../../../../projects/backbase/foundation-ang/core/src/backbase-core/assets/assets.service.ts","../../../../projects/backbase/foundation-ang/core/src/web-sdk/properties.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/app-config.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/array.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/item-model-utils.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/tree.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/item-model.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/root-container.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/item-lifecycle.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/bootstrap/backbase-connector.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/lazy-config.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/item-registry.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/components/route.component.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/strategies/default-container-strategy.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/strategies/static-routes-strategy.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/strategies/routing-decorators.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/config/outlet-map.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/guards/route-guards-registry.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/customizable/template-registry.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/chrome/journey.component.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/config/routable-item-tree.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/components/outlet-collision.component.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/config/routing-tree.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/config/abstract-router-config.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/config/router-config.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/linked-list.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/navigation/router-navigation.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/item-navigation.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/component.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/pipeline-registry.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/observable.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/pipeline.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/item-io/parse-model.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/item-io/broker-helpers.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/item-io/input-broker.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/item-io/output-broker.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/debug.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/pluck.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/route-param.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/route-param-multi.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/item-navigate.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/model.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/app-config.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/url.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/router-navigate.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/graph.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/deprecated/flows.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/deprecated/item-transition.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/navigation.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/models/root-item-model.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/area/area.component.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/navigation/router.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/item-injector.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/combined-component-factory-resolver.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/item-loader.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/chrome/chrome.component.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/stepup/stepup.interceptor.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/stepup/stepup.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/session-timeout/session-timeout.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/rendering/root/root.component.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/directives/router-link.directive.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/directives/router-link-active.directive.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/directives/router-outlet.directive.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/routing/config/router-bootstrap.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/core-config.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/communication/pipes/handlers/memory.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/backbase-core.module.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/customizable/bb-template.service.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/stepup/stepup.module.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-core/session-timeout/session-timeout.module.ts","../../../../projects/backbase/foundation-ang/core/src/deprecated/start/register-single-app.ts","../../../../projects/backbase/foundation-ang/core/src/backbase-foundation-ang-core.ts"],"names":["InjectionToken","isDevMode","of","Injectable","Optional","Inject","PAGE_CONFIG","BehaviorSubject","switchMap","combineLatest","map","merge","scan","shareReplay","distinctUntilChanged","startWith","pluck","serializerDeserializer","Subject","filter","observableOf","LifecycleEventKind","publishReplay","take","mapTo","debounceTime","NgZone","Component","ActivatedRoute","PRIMARY_OUTLET","first","ReplaySubject","ɵSTORE_BRANCH","ɵSTORE_DISPATCH_CHANNEL","StoreFactory","ɵStoreBroker","FeaturesService","from","withLatestFrom","UrlSegment","UrlSegmentGroup","Router","noop","takeUntil","Injector","ComponentFactoryResolver","tap","ɵ0","TAG","CommunicationDefinition","mergeMap","HostBinding","Input","NgModuleFactory","Compiler","pairwise","last","ViewChild","ViewContainerRef","catchError","throwError","http","HttpClient","race","flatMap","ChangeDetectionStrategy","PUBSUB","router","NavigationEnd","Directive","LocationStrategy","ElementRef","Renderer2","HostListener","Attribute","ContentChildren","EventEmitter","RouterOutlet","ChildrenOutletContexts","ChangeDetectorRef","Output","skip","concatMap","asyncScheduler","ANALYZE_FOR_ENTRY_COMPONENTS","LOG_DEPRECATIONS_CONFIG","ENABLED_FEATURES_CONFIG","NgModule","CommonModule","RouterModule","DeprecationsService","APP_BOOTSTRAP_LISTENER","TemplateRef","HTTP_INTERCEPTORS","EXTERNAL_SERVICES"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable, Inject, InjectionToken, Optional, isDevMode } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { PAGE_CONFIG, PageConfig } from '@backbase/foundation-ang/web-sdk';\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface AssetsConfiguration {\n  /**\n   * The name of the CX item containing the assets.\n   *\n   * This allows the assets to be packaged and served from one CX item, generally the app container item itself.\n   */\n  assetsStaticItemName: string;\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type AssetIDResolver = (assetId: string) => string;\n/**\n * @deprecated Will be removed in v7.0.0\n * The method resolves an asset from a configured on the App level source\n * @param assetId id of the asset item to be resolved\n */\nexport type AssetsResolver = (assetId: string) => Observable<string>;\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface AssetsResolverConfig {\n  widgetName: string;\n  getURIFromAssetID: AssetIDResolver;\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const CONFIG_ASSETS = new InjectionToken<AssetsConfiguration>(\n  '@backbase/foundation Assets Service Configuration',\n);\nconst DEFAULT_STATIC_ROOT = '/';\nconst DEFAULT_STATIC_ITEM_NAME = '';\n/**\n * @deprecated Will be removed in v7.0.0\n */\n@Injectable()\nexport class AssetsService {\n  constructor(\n    @Optional()\n    @Inject(PAGE_CONFIG)\n    readonly pageConfig: PageConfig | null,\n    @Optional()\n    @Inject(CONFIG_ASSETS)\n    readonly assetsConfig: AssetsConfiguration | null,\n  ) {\n    if (!pageConfig && isDevMode()) {\n      console.warn(\n        `pageConfig is not provided which may impact the path that is resolving assets\n         please include *either* the 'WebSdkModule.forRoot(...)' in your AppModule (for CDN deployment) or WebSdkApiModule\n          (for CX deployment)`,\n      );\n    }\n  }\n\n  public createAssetsResolver(config: AssetsResolverConfig): AssetsResolver {\n    const widgetName = config.widgetName;\n    const assetsIdResolver = config.getURIFromAssetID;\n    const staticRoot = this.pageConfig ? this.pageConfig.staticResourcesRoot : DEFAULT_STATIC_ROOT;\n    const staticItemName = this.assetsConfig ? this.assetsConfig.assetsStaticItemName : DEFAULT_STATIC_ITEM_NAME;\n\n    return (assetId: string): Observable<string> => {\n      if (!assetId.length) {\n        return of('');\n      }\n      return of(\n        [staticRoot, staticItemName, 'assets', widgetName, assetsIdResolver(assetId)]\n          .filter(Boolean)\n          .map(str => str.replace(/\\/$/, ''))\n          .join('/'),\n      );\n    };\n  }\n}\n","import { Property, Properties } from '@backbase/foundation-ang/web-sdk';\n\nexport function equal(a: Property, b: Property): boolean {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a === b;\n}\n\n/**\n * Allow the processing of Properties as an array of pairs.\n *\n * @param process The processing to apply to the property pairs; mapping, filtering, etc.\n * @param properties\n */\nexport const propertiesAsPairs = (\n  process: (pairs: Array<[string, Property]>) => Array<[string, Property]>,\n  properties: Properties,\n): Properties => {\n  const pairs = process(Object.entries(properties));\n  return pairs.reduce(\n    (acc, [name, value]) => ({\n      ...acc,\n      [name]: value,\n    }),\n    {} as Properties,\n  );\n};\n\n/**\n * Returns a subset of the properties that start\n * with a given prefix, and also removes the prefix from the name\n * of the property.\n *\n * @param prefix\n * @param properties\n */\nexport const propertiesByPrefix = (prefix: string, properties: Properties): Properties =>\n  propertiesAsPairs(\n    pairs =>\n      pairs\n        .filter(([name]) => name.startsWith(prefix))\n        .map(([name, value]): [string, Property] => [name.substring(prefix.length), value]),\n    properties,\n  );\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Properties } from '@backbase/foundation-ang/web-sdk';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppConfigService {\n  private readonly config = new BehaviorSubject<Properties>({});\n  private readonly propertyPrefix = 'AppConfig.';\n\n  get prefix() {\n    return this.propertyPrefix;\n  }\n\n  getConfig(): Observable<Properties> {\n    return this.config.asObservable();\n  }\n\n  setConfig(config: Properties) {\n    this.config.next(config);\n  }\n}\n","export const map = <T, R>(callbackfn: (value: T) => R, arr: Array<T>): Array<R> => arr.map<R>(callbackfn);\n\nexport const flatten = <T>(arr: Array<Array<T>>): Array<T> =>\n  arr.reduce((acc: Array<T>, a: Array<T>): Array<T> => [...acc, ...a], [] as Array<T>);\n\nexport const flatMap = <T, R>(callbackfn: (value: T) => Array<R>, arr: Array<T>): Array<R> =>\n  flatten<R>(map<T, Array<R>>(callbackfn, arr));\n\nexport const uniq = <T>(array: Array<T>): Array<T> => Array.from(new Set<T>(array));\nexport const hasDuplicates = (array: Array<unknown>): boolean => array.length !== uniq(array).length;\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is the length of the longer of two\n * lists. If one of the lists is shorter, the values will be set to \"undefined\".\n *\n * @param left\n * @param right\n */\nexport const pairs = <T, R>(left: Array<T>, right: Array<R>): Array<[T | undefined, R | undefined]> => {\n  const max = Math.max(left.length, right.length);\n  let idx = 0;\n\n  const returnZip: Array<[T | undefined, R | undefined]> = [];\n  while (idx < max) {\n    returnZip[idx] = [left[idx], right[idx]];\n    idx++;\n  }\n  return returnZip;\n};\n\n/**\n * This helper checks if the value is array of strings.\n * @param value a value to be evaluated\n * @returns true for array of strings and false for any other values\n */\nexport const isArrayOfStrings = (value: any): value is Array<string> =>\n  Array.isArray(value) && value.every(item => typeof item === 'string');\n","import { Item, Container } from '@backbase/foundation-ang/web-sdk';\n\n/**\n * This helper determines container objects from any other ones.\n * @param item an item to be evaluated\n * @returns true for containers and false for widgets and any other objects\n */\nexport const isContainer = (item: Item): item is Container =>\n  'name' in item && 'properties' in item && 'children' in item;\n\n/**\n * Returns the elements of a tree with the children that meet the condition specified in a predicate function.\n * @param item an item whose children need to be filtered\n * @param predicate the filter method called for each child. It should return boolean\n */\nexport const filterChildren = <T extends Item>(item: T, predicate: (child: Item) => boolean): T => {\n  return isContainer(item)\n    ? {\n        ...item,\n        children: item.children.map(child => filterChildren(child, predicate)).filter(predicate),\n      }\n    : item;\n};\n","import { flatMap, flatten } from './array';\nimport { LinkedList } from './linked-list';\nimport { Observable, merge, of, combineLatest } from 'rxjs';\nimport { map, scan, shareReplay, distinctUntilChanged, switchMap } from 'rxjs/operators';\n\nexport type ChildrenUpdateFn<T> = (acc: Array<ObservableTree<T>>) => Array<ObservableTree<T>>;\n\nconst treeValue = <T>(t: Tree<T>): T => t.value;\n\n/**\n * Abstract tree representation.\n */\nexport class Tree<T> {\n  constructor(\n    /**\n     * The value of this node\n     */\n    public value: T,\n    /**\n     * The children of this node\n     */\n    public children: Array<Tree<T>>,\n  ) {}\n\n  map<R>(callbackfn: (value: T, oldChildren: Array<T>, newChildren: Array<R>) => R): Tree<R> {\n    const newChildren: Array<Tree<R>> = this.children.map(childTree => childTree.map(callbackfn));\n    return new Tree(callbackfn(this.value, this.children.map(treeValue), newChildren.map(treeValue)), newChildren);\n  }\n\n  /**\n   * Flattens the tree into a flat array of tree nodes.\n   *\n   * The tree is flattened by in order of depth-first-preorder-traversal.\n   */\n  flatten(): Array<Tree<T>> {\n    return [this, ...flatMap(child => child.flatten(), this.children)];\n  }\n\n  pathTo(value: T): Array<T> {\n    if (this.value === value) {\n      return [this.value];\n    } else {\n      for (const child of this.children) {\n        const childPath = child.pathTo(value);\n        if (childPath.length !== 0) {\n          return [this.value, ...childPath];\n        }\n      }\n      return [];\n    }\n  }\n\n  lowestCommonAncestor(left: T, right: T): T | undefined {\n    const leftPath = new Set(this.pathTo(left));\n    return this.pathTo(right)\n      .reverse()\n      .find(candidate => leftPath.has(candidate));\n  }\n}\n\n/**\n * @description\n * This is an operator that can be used with an Observable's `pipe`.\n *\n * The piped observable should be an observable of an array.\n *\n * The source array is mapped over with the provided callback function, and the\n * callback function should take an item (T) from the source array, and return an\n * *observable* of a new item (R).\n *\n * The result is a new observable of an array the same length as the source array\n * but with the Ts mapped to Rs.\n *\n * This is useful for mapping over the observable children of node in the model tree.\n *\n * @usageNotes\n *\n * ### Example\n * ```\n * const children: ObservableTree<ItemModel> = this.model.children;\n * const titleProperties: Observable<Array<string>> = this.model.children.pipe(\n *   mapObservableArray(item => item.value.property<string>('title', 'Default Title'))\n * );\n * ```\n * @param callback Function that produces an *observable* element of the new Array\n */\nexport const mapObservableArray = function <T, R>(callback: (a: T) => Observable<R>) {\n  return (source: Observable<Array<T>>): Observable<Array<R>> => {\n    return source.pipe(switchMap((tArray: Array<T>) => combineLatest(tArray.map(callback))));\n  };\n};\n\n/**\n * An tree where each node's children are observable.\n */\nexport class ObservableTree<T> {\n  // Reducers to update children state\n  private readonly initialChildren: Observable<ChildrenUpdateFn<T>> = of((acc: Array<ObservableTree<T>>) => acc); // identity reducer for initial value\n  private readonly insertUpdates: Observable<ChildrenUpdateFn<T>> = this.insertions.pipe(\n    map((\n      { item, index }, // map inserts to reducer functions\n    ) => (children: Array<ObservableTree<T>>) => [...children.slice(0, index), item, ...children.slice(index)]),\n  );\n  private readonly removalUpdates: Observable<ChildrenUpdateFn<T>> = this.removals.pipe(\n    map((\n      index, // map removals to reducer funtions\n    ) => (children: Array<ObservableTree<T>>) => {\n      const newChildren = [...children];\n      newChildren.splice(index, 1);\n      return newChildren;\n    }),\n  );\n\n  // Combine reducers to a single stream\n  private readonly reducers: Observable<ChildrenUpdateFn<T>> = merge(\n    this.initialChildren,\n    this.insertUpdates,\n    this.removalUpdates,\n  );\n\n  /**\n   * The children of this node\n   */\n  readonly children: Observable<Array<ObservableTree<T>>>;\n\n  constructor(\n    /**\n     * The value of this node\n     */\n    public value: T,\n    initialChildren: Array<ObservableTree<T>>,\n    private readonly insertions: Observable<{ item: ObservableTree<T>; index: number }>,\n    private readonly removals: Observable<number>,\n  ) {\n    this.children = this.reducers.pipe(\n      scan<ChildrenUpdateFn<T>, Array<ObservableTree<T>>>(\n        (currentChildren: Array<ObservableTree<T>>, updateFn: ChildrenUpdateFn<T>) => updateFn(currentChildren),\n        initialChildren,\n      ),\n      shareReplay(1),\n    );\n  }\n\n  /**\n   * Find a node in the tree. Returns the result as an observable.\n   *\n   * If the element is found it is emitted, otherwise, the result emits undefined.\n   *\n   * The result observable will only emit again if the found node changes (ie: if\n   * it is added or removed, or if it finds a different node).\n   *\n   * @param predicate predicate is called once for each node of the tree, until a\n   * node is found. The predicate will be called again every time the tree changes\n   * (ie: a node in the tree is added or removed). The predicate is called in order\n   * of depth-first-preorder-traversal.\n   */\n  find(predicate: (value: T) => boolean): Observable<ObservableTree<T> | undefined> {\n    return this.flatten().pipe(\n      map(nodes => nodes.find(node => predicate(node.value))),\n      distinctUntilChanged(),\n    );\n  }\n\n  pathTo(value: T): Observable<Array<T>> {\n    return this.toTree().pipe(\n      map((tree: Tree<T>) => tree.pathTo(value)),\n      distinctUntilChanged(),\n    );\n  }\n\n  lowestCommonAncestor(left: T, right: T): Observable<T | undefined> {\n    return this.toTree().pipe(\n      map((tree: Tree<T>) => tree.lowestCommonAncestor(left, right)),\n      distinctUntilChanged(),\n    );\n  }\n\n  filter(predicate: (value: T) => boolean): Observable<Array<ObservableTree<T>>> {\n    return this.flatten().pipe(\n      map(nodes => nodes.filter(node => predicate(node.value))),\n      distinctUntilChanged(),\n    );\n  }\n\n  /**\n   * Flattens a tree into a single array of nodes. The result nodes are still trees.\n   *\n   * The tree is flattened in order of depth-first-preorder-traversal.\n   *\n   * The result is returned as an observable and re-emits every time a node is added\n   * or removed from the tree.\n   */\n  flatten(): Observable<Array<ObservableTree<T>>> {\n    return this.children.pipe(\n      switchMap(children => (children.length === 0 ? of([]) : combineLatest(children.map(child => child.flatten())))),\n      map<Array<Array<ObservableTree<T>>>, Array<ObservableTree<T>>>(flatten),\n      map(flat => [this, ...flat]),\n    );\n  }\n\n  /**\n   * Takes a snapshot of the tree.\n   */\n  toTree(): Observable<Tree<T>> {\n    return this.children.pipe(\n      switchMap(children => {\n        const mappedChildren$ = children.length === 0 ? of([]) : combineLatest(children.map(child => child.toTree()));\n        return mappedChildren$.pipe(map((mappedChildren: Array<Tree<T>>) => new Tree(this.value, mappedChildren)));\n      }),\n    );\n  }\n}\n\n/**\n * Like combineLatest in rxjs, but for a tree of observables, instead of\n * an array of observables.\n */\nexport function combineTree<T>(tree: Tree<Observable<T>>): Observable<Tree<T>> {\n  // Convert children from Array<Tree<Observable<T>>> to Observable<Array<Tree<T>>>\n  const children$: Observable<Array<Tree<T>>> =\n    tree.children.length === 0 ? of([]) : combineLatest(tree.children.map(combineTree));\n  return combineLatest([tree.value, children$]).pipe(\n    map(([value, children]: [T, Array<Tree<T>>]) => new Tree<T>(value, children)),\n  );\n}\n\n/**\n * Describes a more generic tree than our \"Tree\" type.\n *\n * This is useful for performing operations on different\n * \"tree\" implementations.\n *\n * For example, this is type which describes an angular\n * `Route` as our generic tree type:\n * `type AngularRouteTree = GenericTree<Route>;`\n *\n * And this describes our `ComponentRouteTree`\n * `type ComponentTree = GenericTree<Tree<ItemRoutes>>;\n */\nexport type GenericTree<T> = T & {\n  children?: Array<GenericTree<T>>;\n};\n\n/**\n * Extracts a branch from a tree that starts at the root, and ends at the leaf\n * node, as determined by the predicate (returns a linked list).\n *\n * If the element is not found, the result is undefined.\n *\n * @param predicate predicate is called once for each node of the tree, until a\n * node is found. The predicate is called in order of depth-first-preorder-traversal.\n */\nexport const treeBranch = <T>(\n  tree: GenericTree<T>,\n  predicate: (value: T, index?: number, parent?: T) => boolean,\n): LinkedList<T> | undefined => {\n  const walkTree = (\n    treeInner: GenericTree<T>,\n    index?: number,\n    parentTree?: GenericTree<T>,\n  ): LinkedList<T> | undefined => {\n    if (predicate(treeInner, index, parentTree)) {\n      return {\n        value: treeInner,\n      };\n    }\n\n    if (!treeInner.children) {\n      return undefined;\n    }\n\n    for (let i = 0; i < treeInner.children.length; i++) {\n      const foundInChild = walkTree(treeInner.children[i], i, treeInner);\n      if (foundInChild) {\n        return {\n          value: treeInner,\n          next: foundInChild,\n        };\n      }\n    }\n\n    return undefined;\n  };\n\n  return walkTree(tree);\n};\n","import { Properties, Property } from '@backbase/foundation-ang/web-sdk';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, scan, shareReplay, startWith } from 'rxjs/operators';\nimport { equal, propertiesByPrefix, propertiesAsPairs } from '../../web-sdk/properties';\nimport { ObservableTree } from './tree';\n\nexport type ItemName = string;\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport class ItemModel {\n  /**\n   * Name of the page instance of Backbase Item\n   */\n  readonly name: ItemName;\n  /**\n   * Properties of Backbase Item\n   */\n  readonly properties: Observable<Properties>;\n\n  /**\n   * The classId of the component that will render this item.\n   * @internal\n   */\n  readonly ɵclassId: string;\n\n  /**\n   * The property definitions for this item.\n   * @internal\n   */\n  readonly ɵproperties: Properties;\n\n  /**\n   * The input handlers for this item.\n   * @internal\n   */\n  readonly ɵinputProperties: Properties;\n\n  /**\n   * The output handlers for this item.\n   * @internal\n   */\n  readonly ɵoutputProperties: Properties;\n\n  constructor(name: ItemName, initialProperties: Properties, propertyUpdates: Observable<Properties>) {\n    this.name = name;\n\n    const applyPropertyUpdate = (currentProperties: Properties, update: Properties): Properties => {\n      return { ...currentProperties, ...update };\n    };\n\n    this.properties = propertyUpdates.pipe(startWith(initialProperties), scan(applyPropertyUpdate), shareReplay(1));\n\n    if (initialProperties.classId === undefined) {\n      throw new Error(`Missing classId property for ${name}`);\n    }\n\n    this.ɵclassId = initialProperties.classId as string;\n    this.ɵoutputProperties = this.outputProperties(initialProperties);\n    this.ɵinputProperties = this.inputProperties(initialProperties);\n    this.ɵproperties = this.nonIOProperties(initialProperties);\n  }\n\n  property<T extends Property>(propertyName: string, defaultValue: T): Observable<T>;\n  property<T extends Property>(propertyName: string): Observable<T | undefined>;\n  property(propertyName: string, defaultValue?: Property): Observable<Property | undefined> {\n    return this.properties.pipe<Property | undefined, Property | undefined, Property | undefined>(\n      pluck(propertyName),\n      map(propertyValue => (propertyValue === undefined || propertyValue === null ? defaultValue : propertyValue)),\n      distinctUntilChanged((a, b) => {\n        if (a === undefined && b === undefined) {\n          return true;\n        }\n        if (a === undefined) {\n          return false;\n        }\n        if (b === undefined) {\n          return false;\n        }\n        return equal(a, b);\n      }),\n    );\n  }\n\n  private outputProperties(properties: Properties): Properties {\n    return propertiesByPrefix('output.', properties);\n  }\n\n  private inputProperties(properties: Properties): Properties {\n    return propertiesByPrefix('input.', properties);\n  }\n\n  private nonIOProperties(properties: Properties): Properties {\n    return propertiesAsPairs(\n      pairs => pairs.filter(([name]) => !name.startsWith('input.') && !name.startsWith('output.')),\n      properties,\n    );\n  }\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport class ItemModelTree extends ObservableTree<ItemModel> {}\n","import { Injectable } from '@angular/core';\nimport { CommunicationDefinition, serializerDeserializer } from '@backbase/communication-property';\nimport { Observable, BehaviorSubject, Subject, of as observableOf, merge, combineLatest } from 'rxjs';\nimport { map, filter, pluck, shareReplay, switchMap } from 'rxjs/operators';\nimport { ItemLocation, Item, Properties, Container } from '@backbase/foundation-ang/web-sdk';\nimport { isContainer } from './item-model-utils';\nimport { ItemModel } from '../models/item-model';\nimport { ObservableTree } from '../models/tree';\n\nexport const ROOT_COMPONENT_CLASS_ID = 'RootComponent';\nconst DEFAULT_ROOT_NAME = 'bb-root-empty';\n\nexport interface InsertUpdate {\n  item: Item;\n  itemLocation: ItemLocation;\n}\nexport interface PropertyUpdate {\n  name: string;\n  properties: Properties;\n}\nexport type RemovalUpdate = ItemLocation;\nexport type ModelUpdate = InsertUpdate | PropertyUpdate | RemovalUpdate;\n\nexport const isInsert = (update: ModelUpdate): update is InsertUpdate =>\n  !!((update as InsertUpdate).item && (update as InsertUpdate).itemLocation);\n\nexport const isPropertyUpdate = (update: ModelUpdate): update is PropertyUpdate =>\n  !!((update as PropertyUpdate).name && (update as PropertyUpdate).properties);\n\nexport const isRemovalUpdate = (update: ModelUpdate): update is Exclude<RemovalUpdate, undefined> =>\n  !!(update && 'parentName' in update && 'index' in update);\n\nclass CommunicationInputs {\n  constructor(private readonly properties: Map<string, CommunicationDefinition>) {}\n\n  static fromProperties(properties: Properties): CommunicationInputs {\n    return new CommunicationInputs(\n      new Map(\n        Object.entries(properties)\n          .filter((property): property is [string, string] => typeof property[1] === 'string')\n          .map(([propertyName, propertyValue]) => [propertyName, serializerDeserializer.fromProperty(propertyValue)])\n          .filter((property): property is [string, CommunicationDefinition] => property[1] !== undefined),\n      ),\n    );\n  }\n\n  hasInputFor(communicationDefinition: CommunicationDefinition): boolean {\n    return (\n      Array.from(this.properties.values()).find(candidate => communicationDefinition.equals(candidate)) !== undefined\n    );\n  }\n}\n\n/**\n * The root container is basically the page model, but we don't assume that the\n * angular app is the entire page. It could just be a subset of the page model,\n * hence we call it \"root container\"\n *\n * @internal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ӨRootContainerService {\n  // The websdk commands mapped to observables.\n  private readonly propertyUpdates = new Subject<PropertyUpdate>();\n  private readonly inserts = new Subject<InsertUpdate>();\n  private readonly removals = new Subject<RemovalUpdate>();\n\n  public readonly modelUpdates: Observable<ModelUpdate> = merge(this.propertyUpdates, this.inserts, this.removals);\n\n  private readonly defaultValue: Container = {\n    name: DEFAULT_ROOT_NAME,\n    properties: { classId: ROOT_COMPONENT_CLASS_ID },\n    children: [],\n  };\n\n  private readonly rootContainerItem = new BehaviorSubject<Container>(this.defaultValue);\n\n  public model: Observable<ObservableTree<ItemModel>> = this.rootContainerItem.pipe(\n    filter(container => !this.isDefaultContainer(container.name)), // skip the empty state\n    map(c => this.createInitialModelState(c)),\n    shareReplay(1),\n  );\n\n  private createInitialModelState({ name, properties, children }: Container): ObservableTree<ItemModel> {\n    const initialRootContainerProperties = {\n      ...properties,\n      classId: ROOT_COMPONENT_CLASS_ID,\n    };\n    return this.createModelStateNode({\n      name,\n      properties: initialRootContainerProperties,\n      children,\n    });\n  }\n\n  private createModelStateNode(item: Item): ObservableTree<ItemModel> {\n    // Filter property updates to just the updates for this item.\n    const propertyUpdates: Observable<Properties> = this.propertyUpdates.pipe(\n      filter(update => update.name === item.name),\n      pluck('properties'),\n    );\n\n    // Recursively create the children.\n    const childNodes: Array<ObservableTree<ItemModel>> = isContainer(item)\n      ? item.children.map(this.createModelStateNode.bind(this))\n      : [];\n\n    let insertions: Observable<{\n      item: ObservableTree<ItemModel>;\n      index: number;\n    }>;\n    let removals: Observable<number>;\n\n    if (isContainer(item)) {\n      // Filter container updates for this item (inserts and removes)\n      insertions = this.inserts.pipe(\n        filter(insert => !!insert.itemLocation && insert.itemLocation.parentName === item.name),\n        map(insert => ({\n          item: this.createModelStateNode(insert.item),\n          index: insert.itemLocation ? insert.itemLocation.index : 0,\n        })),\n      );\n\n      removals = this.removals.pipe(\n        filter((removal: ItemLocation): boolean => !!removal && removal.parentName === item.name),\n        pluck('index'),\n      );\n    } else {\n      insertions = observableOf();\n      removals = observableOf();\n    }\n\n    // Create the node itself.\n    return new ObservableTree<ItemModel>(\n      new ItemModel(item.name, item.properties, propertyUpdates),\n      childNodes,\n      insertions,\n      removals,\n    );\n  }\n\n  private get rootName() {\n    return this.rootContainerItem.getValue().name;\n  }\n\n  private isDefaultContainer(name: string) {\n    return name === DEFAULT_ROOT_NAME;\n  }\n\n  isBootstrapped() {\n    return !this.isDefaultContainer(this.rootName);\n  }\n\n  updateItem(name: string, properties: Partial<Properties>) {\n    this.propertyUpdates.next({ name, properties: properties as Properties });\n  }\n\n  insertItem(item: Item, itemLocation: ItemLocation) {\n    if (!this.isBootstrapped()) {\n      this.rootContainerItem.next(item as Container);\n    } else {\n      this.inserts.next({ item, itemLocation });\n    }\n  }\n\n  removeItem(itemName: string, itemLocation: ItemLocation) {\n    if (this.rootName === itemName) {\n      this.rootContainerItem.next(this.defaultValue);\n    } else {\n      this.removals.next(itemLocation);\n    }\n  }\n\n  private filter(predicate: (value: ItemModel) => boolean): Observable<Array<ObservableTree<ItemModel>>> {\n    return this.model.pipe(switchMap(model => model.filter(predicate)));\n  }\n\n  private getCommunicationGroupItems(groupDefinition: CommunicationDefinition): Observable<Array<ItemModel>> {\n    return this.filter((item: ItemModel) =>\n      CommunicationInputs.fromProperties(item.ɵinputProperties).hasInputFor(groupDefinition),\n    ).pipe(map(nodes => nodes.map(node => node.value)));\n  }\n\n  // The only case where there will not be a common ancestor (i.e. return `undefined`) is if there are\n  // no items with inputs in the communication group.\n  commonAncestor(groupDefinition: CommunicationDefinition): Observable<ItemModel | undefined> {\n    return combineLatest([\n      this.model.pipe(switchMap(model => model.toTree())),\n      this.getCommunicationGroupItems(groupDefinition),\n    ]).pipe(\n      map(([tree, [first, ...items]]) => {\n        let lowest: ItemModel | undefined = first;\n        for (const item of items) {\n          const newLowest = tree.lowestCommonAncestor(lowest, item);\n          if (newLowest === undefined) {\n            return undefined;\n          } else {\n            lowest = newLowest;\n          }\n        }\n        return lowest;\n      }),\n    );\n  }\n}\n","import { Injectable, ComponentRef } from '@angular/core';\nimport { ItemModel } from '../models/item-model';\nimport { ObservableTree } from '../models/observable-tree.interface';\nimport { Subject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport enum LifecycleEventKind {\n  Create = 'create',\n  Remove = 'remove',\n}\n\nexport interface LifecycleEvent {\n  kind: LifecycleEventKind;\n  itemModel: ObservableTree<ItemModel>;\n  component: ComponentRef<any>;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemLifecycleService {\n  private readonly lifecycleEvents: Subject<LifecycleEvent> = new Subject();\n\n  onCreate(itemModel: ObservableTree<ItemModel>, component: ComponentRef<any>) {\n    this.lifecycleEvents.next({\n      kind: LifecycleEventKind.Create,\n      itemModel,\n      component,\n    });\n  }\n\n  onRemove(itemModel: ObservableTree<ItemModel>, component: ComponentRef<any>) {\n    this.lifecycleEvents.next({\n      kind: LifecycleEventKind.Remove,\n      itemModel,\n      component,\n    });\n  }\n\n  fromItem(name: string): Observable<LifecycleEvent> {\n    return this.lifecycleEvents.pipe(filter((lcEvent: LifecycleEvent) => name === lcEvent.itemModel.value.name));\n  }\n\n  whenCreate(name?: string): Observable<LifecycleEvent> {\n    const nameFilter = name ? (currentName: string) => currentName === name : () => true;\n    return this.lifecycleEvents.pipe(\n      filter(\n        (lcEvent: LifecycleEvent) =>\n          LifecycleEventKind.Create === lcEvent.kind && nameFilter(lcEvent.itemModel.value.name),\n      ),\n    );\n  }\n\n  whenRemove(name?: string): Observable<LifecycleEvent> {\n    const nameFilter = name ? (currentName: string) => currentName === name : () => true;\n    return this.lifecycleEvents.pipe(\n      filter(\n        (lcEvent: LifecycleEvent) =>\n          LifecycleEventKind.Remove === lcEvent.kind && nameFilter(lcEvent.itemModel.value.name),\n      ),\n    );\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Item, ItemLocation, Properties, Property, RenderingStrategy } from '@backbase/foundation-ang/web-sdk';\nimport { ConnectableObservable, Observable } from 'rxjs';\nimport { debounceTime, mapTo, publishReplay, take } from 'rxjs/operators';\nimport { propertiesByPrefix } from '../../web-sdk/properties';\nimport { AppConfigService } from '../models/app-config.service';\nimport { isArrayOfStrings } from '../models/array';\nimport { filterChildren } from '../models/item-model-utils';\nimport { ӨRootContainerService } from '../models/root-container.service';\nimport { ItemLifecycleService, LifecycleEvent } from '../rendering/item-lifecycle.service';\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const isRootContainerItem = (item: Item): boolean => !item.properties || !item.properties.classId;\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\n@Injectable()\nexport class BackbaseConnector implements RenderingStrategy {\n  /**\n   * BackbaseConnectorService constructor\n   * @param zone NgZone to be used for manipulations with an item\n   * @param componentInjectors Backbase core components injector service to handle the model\n   */\n  constructor(\n    private readonly zone: NgZone,\n    private readonly appConfig: AppConfigService,\n    private readonly rootContainer: ӨRootContainerService,\n    private readonly lifeCycle: ItemLifecycleService,\n  ) {}\n\n  private filterItem(item: Item): Item {\n    const features = propertiesByPrefix(this.appConfig.prefix, item.properties);\n    this.appConfig.setConfig(features);\n    return filterChildren(item, child => {\n      const itemFeatures: Property = child.properties.features;\n      return (\n        !itemFeatures ||\n        !isArrayOfStrings(itemFeatures) ||\n        itemFeatures.some(requiredFeature => features[requiredFeature] !== false)\n      );\n    });\n  }\n\n  /**\n   * Bootstrap function to be called on page model initialization,\n   * and when new item added to the model (dropped on the page).\n   * @param item Item to bootstrap\n   * @param itemLocation Location of the item\n   */\n  bootstrap(item: Item, itemLocation: ItemLocation): Promise<boolean | void> {\n    return this.zone.run(() => {\n      let event: Observable<LifecycleEvent>;\n      if (isRootContainerItem(item)) {\n        event = this.lifeCycle.whenCreate(undefined).pipe(publishReplay(1));\n      } else {\n        event = this.lifeCycle.fromItem(item.name).pipe(publishReplay(1));\n      }\n      (event as ConnectableObservable<LifecycleEvent>).connect();\n      const itemToInsert = this.rootContainer.isBootstrapped() ? item : this.filterItem(item);\n      this.rootContainer.insertItem(itemToInsert, itemLocation);\n      return event.pipe(take(1), mapTo(true)).toPromise();\n    });\n  }\n\n  /**\n   * Update function will be called when properties are changed for\n   * one of the existing items on a page.\n   * @param item Updated item\n   * @param itemLocation Location of the item\n   * @param changes Object which contains only changed properties and their values\n   */\n  update(item: Item, _: ItemLocation, itemProperties: Partial<Properties>): Promise<void> {\n    return this.zone.run(() => {\n      this.rootContainer.updateItem(item.name, itemProperties);\n      return this.lifeCycle.fromItem(item.name).pipe(take(1), mapTo(undefined)).toPromise();\n    });\n  }\n\n  /**\n   * Remove function will be called when existing item is removed from the page.\n   * @param item Item to remove\n   * @param itemLocation Location of the item\n   */\n  remove(item: Item, itemLocation: ItemLocation): Promise<void> {\n    return this.zone.run(() => {\n      this.rootContainer.removeItem(item.name, itemLocation);\n      return this.lifeCycle.whenRemove().pipe(debounceTime(20), take(1), mapTo(undefined)).toPromise();\n    });\n  }\n}\n","import { InjectionToken, NgModuleFactory, Type } from '@angular/core';\n\n/**\n * Lazy Loading callback\n * Callback function that can be used to dynamically load lazy load bundles.\n */\nexport type LazyLoadCallback = () => Promise<NgModuleFactory<unknown> | Type<unknown>>;\n\n/**\n * Lazy Loading configuration item\n * It defines a list of components (array of strings),\n * and a callback function that can be used to\n * lazy load a bundle containing those components.\n */\nexport interface LazyComponentsConfig {\n  components: Array<string>;\n  loadChildren: LazyLoadCallback;\n}\n\nexport interface LazyModuleConfig {\n  module: string;\n  loadChildren: LazyLoadCallback;\n}\n\nexport type LazyConfigItem = LazyComponentsConfig | LazyModuleConfig;\n\nexport const LAZY_MAP = new InjectionToken<LazyConfig>('Lazy load map');\n\n/**\n * Backbase Lazy Loading configuration\n * Array of `LazyConfigItem` objects used to define which lazy\n * loading bundle should be loaded for a specific component.\n */\n\nexport type LazyConfig = Array<LazyConfigItem>;\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { LoadChildrenCallback } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\nimport { LazyConfigItem, LazyModuleConfig, LAZY_MAP } from './lazy-config';\n\nexport type ComponentClass<T> = new (...args: Array<any>) => T;\n\nexport interface ComponentMap {\n  [key: string]: ComponentClass<any>;\n}\n\n/**\n * ComponentRegistry configuration injection token\n */\nexport const CONFIG_COMPONENT_CLASS_MAP = new InjectionToken<Map<string, ComponentClass<any>>>(\n  '@backbase/foundation Components Registry',\n);\n\n/**\n * ItemRegistryService stores a hashMap\n * of the components included into the app and\n * avaliable for usage. It's meant to be an extension\n * point which is used by a developer.\n */\n@Injectable()\nexport class ItemRegistryService {\n  private readonly itemRegistry: BehaviorSubject<Map<string, ComponentClass<any>>>;\n  private readonly lazyModuleConfig: Array<LazyModuleConfig>;\n\n  /**\n   * ItemRegistryService constructor which allows to define components\n   * included into application\n   * @param ComponentRegistry a hashMap of the component classes to be added\n   */\n  constructor(\n    @Inject(CONFIG_COMPONENT_CLASS_MAP)\n    @Optional()\n    classMaps: Array<ComponentMap> | undefined,\n    @Inject(LAZY_MAP)\n    @Optional()\n    lazyConfig: Array<LazyConfigItem> | null,\n  ) {\n    this.itemRegistry = new BehaviorSubject(\n      new Map<string, ComponentClass<any>>(\n        classMaps\n          ? classMaps.reduce(\n              (acc: Array<[string, ComponentClass<any>]>, classMap) => [...acc, ...Object.entries(classMap)],\n              [],\n            )\n          : undefined,\n      ),\n    );\n\n    this.lazyModuleConfig = (lazyConfig || []).filter(isLazyModuleConfig);\n  }\n\n  entries() {\n    return Array.from(this.itemRegistry.value.entries());\n  }\n\n  add(classId: string, componentClass: ComponentClass<any>) {\n    this.itemRegistry.next(new Map([...this.entries(), [classId, componentClass]]));\n  }\n\n  has(classId: string): boolean {\n    return this.itemRegistry.value.has(classId);\n  }\n\n  /**\n   * This method allows to retrieve Component by it's classId\n   * @param classId classId key to get a component class\n   * @returns componentType to be used by a ComponentFactoryResolver\n   */\n  getComponentValue(classId: string): ComponentClass<any> | undefined {\n    return this.itemRegistry.value.get(classId);\n  }\n\n  getComponent(classId: string): Promise<ComponentClass<any>> {\n    return this.itemRegistry\n      .pipe(\n        map(registry => registry.get(classId)),\n        filter((componentClass): componentClass is ComponentClass<any> => componentClass !== undefined),\n        take(1),\n      )\n      .toPromise();\n  }\n\n  getModuleLoader(classId: string): LoadChildrenCallback | undefined {\n    const lazyModuleConfigItem = this.lazyModuleConfig.find(config => config.module === classId);\n    return lazyModuleConfigItem && lazyModuleConfigItem.loadChildren;\n  }\n}\n\nfunction isLazyModuleConfig(config: LazyConfigItem): config is LazyModuleConfig {\n  return !!(config as LazyModuleConfig).module;\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Route, Data } from '@angular/router';\nimport { pluck, switchMap, filter } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { ItemModel, ItemModelTree } from '../../models/item-model';\nimport { ObservableTree } from '../../models/tree';\nimport { ItemRegistryService } from '../../rendering/item-registry.service';\n\n@Component({\n  selector: 'bb-route',\n  template: `\n    <ng-container *ngIf=\"item | async as item\">\n      <router-outlet *ngIf=\"isModule(item.value); else renderModel\"></router-outlet>\n      <ng-template #renderModel><bb-chrome [item]=\"item\"></bb-chrome></ng-template>\n    </ng-container>\n  `,\n})\nexport class RouteComponent {\n  item: Observable<ObservableTree<ItemModel>> = this.route.data.pipe(\n    pluck<Data, string>('renderChild'),\n    switchMap(renderChild => this.tree.find(item => item.name === renderChild)),\n    filter((a: ObservableTree<ItemModel> | undefined): a is ObservableTree<ItemModel> => a !== undefined),\n  );\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly tree: ItemModelTree,\n    private itemRegistry: ItemRegistryService,\n  ) {}\n\n  static isItemInRoute(itemName: string, route: Route) {\n    if (!route.data || !route.data.renderChild) {\n      throw new Error(`@backbase/foundation Invalid route for RouteComponent. Missing data renderChild: ${route}`);\n    }\n    return route.data.renderChild === itemName;\n  }\n\n  /**\n   * @internal\n   */\n  isModule(model: ItemModel) {\n    return !!this.itemRegistry.getModuleLoader(model.ɵclassId);\n  }\n}\n","import { Route, Routes } from '@angular/router';\nimport { RouteComponent } from '../components/route.component';\nimport { RoutingStrategy } from './routing-decorators';\nimport { ItemRoutes } from '../config/routing-tree';\nimport { RoutableItem } from '../config/routable-item-tree';\n\nexport class DefaultContainerStrategy implements RoutingStrategy {\n  private itemRoutePath(route: string | undefined, index: number): string {\n    if (route) {\n      return route;\n    }\n    return (index + 1).toString();\n  }\n\n  // routes is guaranteed to have 1 item, but I don't know how to type that\n  private defaultRoute(routes: Routes): Route {\n    const defaultRoute = routes[0];\n    // Default behaviour, redirect to the first tab (primary route).\n    return {\n      path: '',\n      redirectTo: defaultRoute.path,\n      pathMatch: 'full',\n    };\n  }\n\n  private itemRoute(child: RoutableItem, childrenRoutes: Routes, index: number): Route {\n    return {\n      path: this.itemRoutePath(child.route, index),\n      component: RouteComponent,\n      canActivate: child.canActivate,\n      data: {\n        renderChild: child.name,\n        custom: child.routeData,\n      },\n      children: childrenRoutes,\n    };\n  }\n\n  private findChildrenRoutes(childrenItemRoutes: Array<ItemRoutes>, item: RoutableItem): Routes {\n    const itemRoutes = childrenItemRoutes.find(child => child.item === item.name);\n    return itemRoutes ? itemRoutes.routes : [];\n  }\n\n  private childrenRoutes(children: Array<RoutableItem>, childrenItemRoutes: Array<ItemRoutes>): Routes {\n    return children.map((child, index) =>\n      this.itemRoute(child, this.findChildrenRoutes(childrenItemRoutes, child), index),\n    );\n  }\n\n  getRoutes(item: RoutableItem, children: Array<RoutableItem>, childrenRoutes: Array<ItemRoutes>): Routes {\n    const childRoutes = this.childrenRoutes(children, childrenRoutes);\n    const defaultRoutes = childRoutes.length && item.hasDefault ? [this.defaultRoute(childRoutes)] : [];\n    const routes: Routes = [...childRoutes, ...defaultRoutes];\n    if (item.canActivateChild.length) {\n      return [\n        {\n          path: '',\n          canActivateChild: item.canActivateChild,\n          children: routes,\n        },\n      ];\n    } else {\n      return routes;\n    }\n  }\n}\n","import { Routes } from '@angular/router';\nimport { RoutingStrategy, WidgetRoute } from './routing-decorators';\n\nexport class StaticRoutesStrategy implements RoutingStrategy {\n  constructor(private readonly routes: Array<WidgetRoute> = []) {}\n\n  getRoutes(): Routes {\n    return this.routes;\n  }\n}\n","import { Routes, Route } from '@angular/router';\nimport { DefaultContainerStrategy } from './default-container-strategy';\nimport { StaticRoutesStrategy } from './static-routes-strategy';\nimport { RouteComponent } from '../components/route.component';\nimport { ItemRoutes } from '../config/routing-tree';\nimport { RoutableItem } from '../config/routable-item-tree';\n\n/**\n * Symbol used to keep internal Backbase routing information\n * in an Angular component class\n */\nexport const routingStrategyField = Symbol('ΩRoutingStrategy');\n\n/**\n * RoutingStrategyToken enum with routing strategy tokens\n */\nexport enum RoutingStrategyToken {\n  STATIC = 'StaticRoutesStrategy',\n  CONTAINERS = 'DefaultContainerStrategy',\n}\n\n/**\n * RoutingStrategyDefinition represents a set of avaliable\n * strategies for Backbase routing\n */\nexport type RoutingStrategyDefinition =\n  | { token: RoutingStrategyToken.CONTAINERS }\n  | { token: RoutingStrategyToken.STATIC; routes: WidgetRoutes };\n\n/**\n * RoutableComponentClass interface represents components which are\n * decorated with @RoutableWidget and can be used for @CopyRoute in a\n * wrapper widget (as a part of customisation).\n */\nexport interface RoutableComponentClass {\n  new (...args: Array<any>): {};\n  [routingStrategyField]?: RoutingStrategyDefinition;\n}\n\n/**\n * RoutableContainer decorator is used to mark an item as\n * routable. It makes the routing config service to use default\n * strategy for containers.\n */\nexport function RoutableContainer() {\n  return function <T extends new (...args: Array<any>) => {}>(constructor: T) {\n    (constructor as any)[routingStrategyField] = {\n      token: RoutingStrategyToken.CONTAINERS,\n    };\n    return constructor;\n  };\n}\n\n/**\n * WidgetRoute is a subset of Angular's Route interface but we only support a few select properties.\n *\n * We only support a selection of these properties so we can guarantee they work. If you would like\n * to have support added for additional Route properties, please request it and we will investigate\n * adding support for it.\n */\nexport interface WidgetRoute\n  extends Pick<Route, 'path' | 'component' | 'redirectTo' | 'pathMatch' | 'outlet' | 'canDeactivate'> {}\n\n/**\n * Please note that we have deprecated support for Routes. Please stick to using only the supported\n * `WidgetRoute` interface instead.\n */\nexport type WidgetRoutes = Routes | Array<WidgetRoute>;\n\n/**\n * Configuration interface for RoutableWidget decorator\n */\nexport interface RoutableWidgetConfig {\n  /**\n   * Angular router configuration\n   */\n  routes: WidgetRoutes;\n}\n\n/**\n * RoutableWidget decorator is used to define widget's internal routes.\n *\n * @usageNotes\n *\n * ### Example\n * ```\n * @Component({\n *   selector: 'bb-todo-widget',\n *   template: `\n *     <bb-router-outlet></bb-router-outlet>\n *   `,\n *   changeDetection: ChangeDetectionStrategy.OnPush,\n *   providers: [RouterService, TodoNavigationService],\n * })\n * @RoutableWidget({\n *   routes: [\n *     { path: '', component: TodoListContainerComponent },\n *     { path: ':id', component: TodoDetailContainerComponent },\n *     { path: 'edit/:id', component: TodoFormContainerComponent },\n *   ],\n * })\n * export class TodoWidgetComponent {}\n * ```\n *\n * @param config Configuration object of the RoutableWidget decorator\n */\nexport function RoutableWidget(config: RoutableWidgetConfig) {\n  return function <T extends new (...args: Array<any>) => {}>(constructor: T) {\n    (constructor as any)[routingStrategyField] = {\n      token: RoutingStrategyToken.STATIC,\n      routes: config.routes,\n    };\n    return constructor;\n  };\n}\n\nexport interface RoutingStrategy {\n  getRoutes(model: RoutableItem, children: Array<RoutableItem>, childRoutes: Array<ItemRoutes>): Routes;\n}\n\nexport interface RouteComponentStrategy {\n  isItemInRoute(itemName: string, route: Route): boolean;\n}\n\nexport const createRouteComponentStrategy = (component: any): RouteComponentStrategy => {\n  const isItemInRoute = component === RouteComponent ? component.isItemInRoute : () => false;\n  return {\n    isItemInRoute,\n  };\n};\n\nexport const createRoutingStrategy = (componentClass: RoutableComponentClass): RoutingStrategy | undefined => {\n  const strategy = componentClass[routingStrategyField];\n  if (strategy === undefined) {\n    return undefined;\n  }\n  switch (strategy.token) {\n    case RoutingStrategyToken.CONTAINERS:\n      return new DefaultContainerStrategy();\n    case RoutingStrategyToken.STATIC:\n      return new StaticRoutesStrategy(strategy.routes);\n    default:\n      return undefined;\n  }\n};\n\nexport const isRoutableItem = (componentClass: RoutableComponentClass): boolean => {\n  const strategy = componentClass[routingStrategyField];\n  return (\n    !!strategy &&\n    strategy.token &&\n    (strategy.token === RoutingStrategyToken.CONTAINERS || strategy.token === RoutingStrategyToken.STATIC)\n  );\n};\n\n/**\n * CopyRoutes decorator is used to re-use the internal routing configuration from an existing widget.\n *\n * @usageNotes\n *\n * ### Example\n * ```\n * @Component({\n *   selector: 'my-todo-widget',\n *   template: `\n *     <h1>My Custom Todo Widget</h1>\n *     <bb-router-outlet></bb-router-outlet>\n *   `,\n * })\n * @CopyRoutes(TodoWidgetComponent)\n * export class MyTodoWidgetComponent {}\n * ```\n *\n * @param from The Widget Component class from which to copy the routing configuration\n */\n// Note: `from` should be `{ [routingStrategyField]: RoutingStrategyDefinition }` but the type checker\n// can't resolve properties dynamically added by decorators.\nexport function CopyRoutes(\n  componentClass: RoutableComponentClass,\n  customize: (routes: WidgetRoutes) => WidgetRoutes = routes => routes,\n) {\n  return function <T extends RoutableComponentClass>(constructor: T) {\n    const definition = componentClass[routingStrategyField];\n    if (definition === undefined || definition.token !== RoutingStrategyToken.STATIC) {\n      return constructor;\n    }\n    (constructor as any)[routingStrategyField] = {\n      token: RoutingStrategyToken.STATIC,\n      routes: customize(definition.routes),\n    };\n    return constructor;\n  };\n}\n","import { PRIMARY_OUTLET } from '@angular/router';\nimport { Tree } from '../../models/tree';\nimport { flatMap } from '../../models/array';\nimport { ItemName } from '../../models/item-model';\nimport { RoutableItem } from './routable-item-tree';\n\n/**\n * Special type to flag an outlet as having a collision. This\n * enables us to create the outlet tree, and name the outlet, but\n * also flag the item as having a collision with another item.\n */\nexport class OutletCollision {\n  constructor(public outletName: string, public itemName: ItemName, public collisionWith: ItemName) {}\n}\n\nexport type OutletName = string | OutletCollision;\n\nexport interface ItemOutlet {\n  name: ItemName;\n  outlet?: OutletName;\n}\n\n/**\n * A mapping of the component tree, and their outlet configuration.\n * Because this tree isn't flattened, it hasn't had outlet collisions\n * resolved yet.\n */\nexport type OutletTree = Tree<ItemOutlet>;\n\n/**\n * A flattened tree of only routable items, and their outlets.\n *\n * This is a tree with outlet collisions resolved.\n *\n * Because flattening the tree can make multiple trees, this\n * interface is used to aggregate all the flattened (root) trees.\n */\nexport interface RoutableOutletTree {\n  rootItem: ItemName;\n  children: Array<Tree<RoutableItemOutlet>>;\n}\n\nexport interface RoutableItemOutlet {\n  item: ItemName;\n  outlet: OutletName;\n}\n\nexport type OutletMap = Map<ItemName, OutletName>;\n\nconst isValidOutlet = (outlet: string | undefined): boolean => outlet !== undefined && outlet !== '';\n\nconst outletCollision = (outletItem: RoutableItemOutlet, collisionWith: RoutableItemOutlet): RoutableItemOutlet => {\n  return {\n    item: outletItem.item,\n    outlet: new OutletCollision(`ɵ${outletItem.item}`, outletItem.item, collisionWith.item),\n  };\n};\n\nconst flattenOutletTreeNode = (node: OutletTree): Array<Tree<RoutableItemOutlet>> => {\n  const flattenedChildren = flatMap<OutletTree, Tree<RoutableItemOutlet>>(flattenOutletTreeNode, node.children);\n\n  if (node.value.outlet !== undefined) {\n    // not routable\n    // Don't flatten this node (just it's children)\n    return [new Tree({ item: node.value.name, outlet: node.value.outlet }, flattenedChildren)];\n  } else {\n    // Flatten this node\n    return flattenedChildren.reduce((acc, nextChild) => {\n      const collisionWith = acc.find(child => child.value.outlet === nextChild.value.outlet);\n      const newChild = collisionWith\n        ? new Tree(outletCollision(nextChild.value, collisionWith.value), nextChild.children)\n        : nextChild;\n      return [...acc, newChild];\n    }, [] as Array<Tree<RoutableItemOutlet>>);\n  }\n};\n\n/**\n * Special case for flattening the root node. If it can't be flattened into a tree with a single\n * root node, we create a special root node, so there is only ever a single tree.\n */\nconst flattenOutletTree = (outletTree: Tree<ItemOutlet>): RoutableOutletTree => {\n  return {\n    rootItem: outletTree.value.name,\n    children: flattenOutletTreeNode(outletTree),\n  };\n};\n\nconst mapItemToOutlet = (item: RoutableItem): ItemOutlet => {\n  if (!item.routingStrategy) {\n    return {\n      name: item.name,\n      outlet: undefined,\n    };\n  }\n  return {\n    name: item.name,\n    outlet: isValidOutlet(item.outlet) ? item.outlet : PRIMARY_OUTLET,\n  };\n};\n\nconst outletTreeToMap = (outletTree: RoutableOutletTree): OutletMap => {\n  const entries: Array<[ItemName, OutletName]> = flatMap(tree => tree.flatten(), outletTree.children) // flatten and merge the root outlet trees\n    .map((node: Tree<RoutableItemOutlet>): [ItemName, OutletName] => [node.value.item, node.value.outlet]);\n  return new Map<ItemName, OutletName>(entries);\n};\n\nexport const outletMap = (itemTree: Tree<RoutableItem>): OutletMap => {\n  return outletTreeToMap(flattenOutletTree(itemTree.map(mapItemToOutlet)));\n};\n","import { Inject, Injectable, InjectionToken, Type } from '@angular/core';\nimport { CanActivate, CanActivateChild } from '@angular/router';\n\nexport type RouteGuardKey = string;\n\nexport interface RouteGuardsConfig {\n  canActivate?: { [key: string]: Type<CanActivate> };\n  canActivateChild?: { [key: string]: Type<CanActivateChild> };\n}\n\nexport const CONFIG_ROUTE_GUARDS = new InjectionToken<RouteGuardsConfig>('@backbase/foundation Route Guards');\n/**\n * @deprecated Will be removed in v7.0.0\n */\n@Injectable()\nexport class RouteGuardsRegistryService {\n  readonly canActivate: Map<RouteGuardKey, Type<CanActivate>> = new Map();\n  readonly canActivateChild: Map<RouteGuardKey, Type<CanActivateChild>> = new Map();\n\n  constructor(@Inject(CONFIG_ROUTE_GUARDS) configs: Array<RouteGuardsConfig>) {\n    configs.forEach(handlerMap => {\n      Object.entries(handlerMap.canActivate || {})\n        .filter((entry): entry is [RouteGuardKey, Type<CanActivate>] => 'canActivate' in entry[1].prototype)\n        .forEach(([key, guard]: [RouteGuardKey, Type<CanActivate>]) => {\n          this.canActivate.set(key, guard);\n        });\n      Object.entries(handlerMap.canActivateChild || {}).forEach(\n        ([key, guard]: [RouteGuardKey, Type<CanActivateChild>]) => {\n          this.canActivateChild.set(key, guard);\n        },\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nexport type Id = any;\n\n@Injectable()\nexport class TemplateRegistry {\n  private readonly registry: Map<Id, ReplaySubject<any>> = new Map();\n\n  set<T>(id: Id, entry: T) {\n    const entry$: ReplaySubject<T> = this.registry.get(id) || this.initEntry(id);\n    entry$.next(entry);\n  }\n\n  get<T>(id: Id): Observable<T> {\n    const entry$ = this.registry.get(id) || this.initEntry(id);\n    return entry$.pipe(first());\n  }\n\n  private initEntry<T>(id: Id): ReplaySubject<T> {\n    const entry = new ReplaySubject<T>();\n    this.registry.set(id, entry);\n    return entry;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FeaturesService } from '@backbase/foundation-ang/future';\nimport { StoreFactory, ɵStoreBroker, ɵSTORE_BRANCH, ɵSTORE_DISPATCH_CHANNEL } from '@backbase/foundation-ang/store';\nimport { TemplateRegistry } from '../../customizable/template-registry';\nimport { ItemModel } from '../../models/item-model';\n\nexport function journeyItemModelFactory(route: ActivatedRoute) {\n  return route.snapshot.data.item;\n}\n\nexport function storeNameFactory(route: ActivatedRoute): any {\n  return route.snapshot.data.item.name;\n}\n\n@Component({\n  selector: 'bb-journey',\n  template: ` <router-outlet></router-outlet> `,\n  providers: [\n    {\n      provide: ItemModel,\n      useFactory: journeyItemModelFactory,\n      deps: [ActivatedRoute],\n    },\n    TemplateRegistry,\n    {\n      provide: ɵSTORE_BRANCH,\n      useFactory: storeNameFactory,\n      deps: [ActivatedRoute],\n    },\n    {\n      provide: ɵSTORE_DISPATCH_CHANNEL,\n      useFactory: storeNameFactory,\n      deps: [ActivatedRoute],\n    },\n    {\n      provide: StoreFactory,\n      useClass: StoreFactory,\n      deps: [ɵStoreBroker, ɵSTORE_BRANCH, ɵSTORE_DISPATCH_CHANNEL, FeaturesService],\n    },\n  ],\n})\nexport class JourneyComponent {}\n","import { Tree, combineTree } from '../../models/tree';\nimport { ItemModel } from '../../models/item-model';\nimport { createRoutingStrategy, RoutingStrategy } from '../strategies/routing-decorators';\nimport { propertiesByPrefix } from '../../../web-sdk/properties';\nimport { RouteGuardsRegistryService } from '../guards/route-guards-registry.service';\nimport { Observable, combineLatest, from, of } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { ItemRegistryService } from '../../rendering/item-registry.service';\nimport { Type } from '@angular/core';\nimport { CanActivate, CanActivateChild, LoadChildrenCallback } from '@angular/router';\nimport { Properties } from '@backbase/foundation-ang/web-sdk';\nimport { JourneyComponent } from '../../rendering/chrome/journey.component';\n\nconst CUSTOM_DATA_PREFIX = 'route.data.custom.';\n\nexport enum RouteModelProperty {\n  /**\n   * Each child of a RoutableContainer may have a property for \"route\",\n   * else the route will be the index of the child plus 1.\n   */\n  ROUTE = 'route',\n  /**\n   * RoutableContainers and RoutableWidget can have an optional \"outletName\"\n   * property to dynamically set the outlet name for the bb-router-outlet.\n   */\n  OUTLET = 'outletName',\n  /**\n   * `CanActivate` route guards can be added to generated child routes by including a\n   * `route.canActivate` property in the child's model. These guards must be registered with the\n   * `RouteGuardsRegistryService` via the `guards` option passed to `BackbaseCore.withConfig`.\n   */\n  CAN_ACTIVATE = 'route.canActivate',\n  /**\n   * `CanActivateChild` route guards can be added to generated routes by including a\n   * `route.canActivateChild` property in the item's model. These guards must be registered with the\n   * `RouteGuardsRegistryService` via the `guards` option passed to `BackbaseCore.withConfig`.\n   */\n  CAN_ACTIVATE_CHILD = 'route.canActivateChild',\n  /**\n   * RoutableContainer's can have a \"disableDefault\" property which will disable the\n   * default behaviour of containers where an empty path route will be created to\n   * redirect to the first child's route.\n   */\n  DISABLE_DEFAULT = 'disableDefault',\n}\n\n/**\n * @fixme: This is a union of some different types.\n *\n * interface NonRoutable {\n *   name: string;\n *   routingStrategy: undefined;\n * }\n * interface RoutableWidget {\n *   name: string;\n *   routingStrategy: RoutingStrategy;\n *   outletName?: string;\n * }\n * interface RoutableContainer {\n *   name: string;\n *   routingStrategy: RoutingStrategy;\n *   outletName?: string;\n *   hasDefault: boolean;\n * }\n * interface RoutableContainerChild extends NonRoutable | RoutableWidget | RoutableContainer {\n *   route?: string;\n *   routeData: Properties;\n *   canActivate: Array<CanActivate>;\n *   canActivateChild: Array<CanActivateChild>;\n * }\n * type RoutableItem = NonRoutable | RoutableWidget | RoutableContainer | RoutableContainerChild\n */\nexport interface RoutableItem {\n  name: string;\n  routingStrategy?: RoutingStrategy;\n  hasDefault?: boolean;\n  route?: string;\n  outlet?: string;\n  canActivate: Array<Type<CanActivate>>;\n  canActivateChild: Array<Type<CanActivateChild>>;\n  routeData: Properties;\n}\n\nconst getRoutingStrategy = (\n  itemRegistry: ItemRegistryService,\n  item: ItemModel,\n): Observable<RoutingStrategy | undefined> => {\n  const loadModuleFunction = itemRegistry.getModuleLoader(item.ɵclassId);\n  if (loadModuleFunction) {\n    return of(createJourneyStrategy(item, loadModuleFunction));\n  }\n  const component = itemRegistry.getComponentValue(item.ɵclassId);\n  if (component) {\n    return of(createRoutingStrategy(component));\n  }\n  return from(itemRegistry.getComponent(item.ɵclassId)).pipe(map(createRoutingStrategy), startWith(undefined));\n};\n\nconst getCanActivateRouteGuards = (\n  guardRegistry: RouteGuardsRegistryService,\n  guards: Array<string>,\n): Array<Type<CanActivate>> =>\n  guards\n    .map(guardName => guardRegistry.canActivate.get(guardName))\n    .filter((guard): guard is Type<CanActivate> => guard !== undefined);\n\nconst getCanActivateChildRouteGuards = (\n  guardRegistry: RouteGuardsRegistryService,\n  guards: Array<string>,\n): Array<Type<CanActivateChild>> =>\n  guards\n    .map(guardName => guardRegistry.canActivateChild.get(guardName))\n    .filter((guard): guard is Type<CanActivateChild> => guard !== undefined);\n\nconst toRoutableItem = (\n  item: ItemModel,\n  routeGuards: RouteGuardsRegistryService,\n  routeProperties: Properties,\n  routingStrategy: RoutingStrategy | undefined,\n): RoutableItem => {\n  return {\n    name: item.name,\n    routingStrategy,\n    route: routeProperties[RouteModelProperty.ROUTE] as string | undefined,\n    outlet: routeProperties[RouteModelProperty.OUTLET] as string | undefined,\n    canActivate: getCanActivateRouteGuards(\n      routeGuards,\n      (routeProperties[RouteModelProperty.CAN_ACTIVATE] || []) as Array<string>,\n    ),\n    canActivateChild: getCanActivateChildRouteGuards(\n      routeGuards,\n      (routeProperties[RouteModelProperty.CAN_ACTIVATE_CHILD] || []) as Array<string>,\n    ),\n    hasDefault: routingStrategy ? true !== routeProperties[RouteModelProperty.DISABLE_DEFAULT] : undefined,\n    routeData: propertiesByPrefix(CUSTOM_DATA_PREFIX, routeProperties),\n  };\n};\n\n// @fixme: don't re-emit unless properties we care about change\nconst routableItem = (itemRegistry: ItemRegistryService, routeGuards: RouteGuardsRegistryService) => (\n  item: ItemModel,\n): Observable<RoutableItem> =>\n  combineLatest([item.properties, getRoutingStrategy(itemRegistry, item)]).pipe(\n    map(([routeProperties, routingStrategy]) => toRoutableItem(item, routeGuards, routeProperties, routingStrategy)),\n  );\n\nfunction createJourneyStrategy(item: ItemModel, loadChildren: LoadChildrenCallback): RoutingStrategy {\n  return {\n    getRoutes() {\n      return [\n        {\n          path: '',\n          component: JourneyComponent,\n          data: { item },\n          loadChildren,\n        },\n      ];\n    },\n  };\n}\n\nexport const routableItemTree = (\n  itemRegistry: ItemRegistryService,\n  routeGuards: RouteGuardsRegistryService,\n  modelTree: Tree<ItemModel>,\n): Observable<Tree<RoutableItem>> => combineTree(modelTree.map(routableItem(itemRegistry, routeGuards)));\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-outlet-collision',\n  template: `\n    <p>You have dropped a routable item next to another routable item.</p>\n    <p>\n      You need to give this item ({{ me | async }}) a unique \"outletName\" from\n      <strong>{{ collisionWith | async }}</strong> to ensure the routes don't conflict.\n    </p>\n  `,\n})\nexport class OutletCollisionComponent {\n  me: Observable<string> = this.route.data.pipe(pluck<Data, string>('item'));\n\n  collisionWith: Observable<string> = this.route.data.pipe(pluck<Data, string>('collisionWith'));\n\n  constructor(private readonly route: ActivatedRoute) {}\n}\n","import { Routes, Route, PRIMARY_OUTLET } from '@angular/router';\nimport { OutletCollisionComponent } from '../components/outlet-collision.component';\nimport { flatMap } from '../../models/array';\nimport { Tree } from '../../models/tree';\nimport { OutletName, OutletCollision } from './outlet-map';\nimport { RoutableItem } from './routable-item-tree';\nimport { ItemName } from '../../models/item-model';\n\nexport type ComponentRouteTree = Tree<ItemRoutes>;\n\n/**\n * An ItemRoute represents a node in a routing tree, that is a\n * direct map of the CXP tree.\n *\n * The routes for each node represents the entire route tree from\n * this item down (this item's routes, merged with child routes).\n */\nexport interface ItemRoutes {\n  item: ItemName;\n  routes: Routes;\n  outletName?: OutletName;\n}\n\nexport const isRoutable = (itemRoutes: ItemRoutes): boolean => itemRoutes.outletName !== undefined;\n\nconst isAbsolute = (routePath: string) => routePath.startsWith('/');\n\nconst isMatchingRedirect = (redirectTo: string) => (route: Route): boolean =>\n  route.path !== undefined && route.path === redirectTo;\n\n/**\n * Applies an outlet name to a route\n * @param outlet\n * @param route\n * @param oldRoutes\n */\nconst namedOutletRoute = (outlet: string, route: Route, oldRoutes: Routes): Route => {\n  // Add outlet name\n  let newRoute: Route = route.component ? { ...route, outlet } : route;\n\n  // Convert redirects to duplicated routes (can't redirect to a named outlet easily).\n  if (newRoute.redirectTo !== undefined && !isAbsolute(newRoute.redirectTo)) {\n    // If it's not absolute, we try and make it a default route instead (no path)\n    const routeTo = oldRoutes.find(isMatchingRedirect(newRoute.redirectTo));\n    if (!routeTo) {\n      // Coudn't find a route that they're redirecting too, so we remove the route, as it won't work.\n      throw new Error(`Couldn't redirect to ${newRoute.redirectTo}`);\n    }\n    newRoute = {\n      ...routeTo, // @fixme: child routes with empty path redirects won't actually do the redirect\n      outlet, // ... that means a named deck container with a routable widget, won't show that\n      path: '', // ... widget's first route if it's a redirect\n    };\n  }\n\n  return newRoute;\n};\n\nconst applyOutletName = (item: RoutableItem, outlet: OutletName, routes: Routes): Routes => {\n  if (outlet === PRIMARY_OUTLET) {\n    return routes;\n  } else if (outlet instanceof OutletCollision) {\n    return [\n      {\n        path: '',\n        component: OutletCollisionComponent,\n        outlet: outlet.outletName,\n        data: {\n          item: item.name,\n          collisionWith: outlet.collisionWith,\n        },\n      },\n    ];\n  }\n\n  return routes.map((route, _, oldRoutes) => namedOutletRoute(`${outlet}`, route, oldRoutes));\n};\n\nconst mapItemToRoutes = (outlets: Map<ItemName, OutletName>) => (\n  item: RoutableItem,\n  children: Array<RoutableItem>,\n  childRoutes: Array<ItemRoutes>,\n): ItemRoutes => {\n  const outletName = outlets.get(item.name);\n  const routes = item.routingStrategy ? item.routingStrategy.getRoutes(item, children, childRoutes) : undefined;\n\n  if (outletName === undefined || routes === undefined) {\n    // Flatten non-routable items\n    return {\n      item: item.name,\n      outletName: undefined,\n      routes: flatMap(childRoute => childRoute.routes, childRoutes),\n    };\n  }\n  return {\n    item: item.name,\n    routes: applyOutletName(item, outletName, routes),\n    outletName,\n  };\n};\n\n/**\n * Create a tree of the components with routes. This is a direct map of the\n * component tree. Each node in the tree holds all routes for the nodes beneath\n * it. So the root node in the returned tree will hold all the routes for the\n * entire component tree.\n */\nexport const routingTree = (tree: Tree<RoutableItem>, outlets: Map<ItemName, OutletName>): ComponentRouteTree =>\n  tree.map(mapItemToRoutes(outlets));\n","import { Observable } from 'rxjs';\nimport { ItemModel } from '../../models/item-model';\n\nexport abstract class AbstractRouterConfigService {\n  abstract ɵitemOutletName(item: ItemModel): Observable<string | undefined>;\n}\n","import { Observable } from 'rxjs';\nimport { Routes } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { ItemModel } from '../../models/item-model';\nimport { map, switchMap, shareReplay, distinctUntilChanged, withLatestFrom } from 'rxjs/operators';\nimport { ӨRootContainerService } from '../../models/root-container.service';\nimport { OutletCollision, OutletName, outletMap } from './outlet-map';\nimport { RouteGuardsRegistryService } from '../guards/route-guards-registry.service';\nimport { Tree } from '../../models/tree';\nimport { ItemRegistryService } from '../../rendering/item-registry.service';\nimport { RoutableItem, routableItemTree } from './routable-item-tree';\nimport { ComponentRouteTree, routingTree } from './routing-tree';\nimport { AbstractRouterConfigService } from './abstract-router-config.service';\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterConfigService extends AbstractRouterConfigService {\n  private readonly routableItemTree: Observable<Tree<RoutableItem>> = this.rootContainer.model.pipe(\n    switchMap(model => model.toTree()),\n    switchMap(model => routableItemTree(this.itemRegistry, this.routeGuardsRegistry, model)),\n    shareReplay(1),\n  );\n\n  private readonly outlets: Observable<Map<string, OutletName>> = this.routableItemTree.pipe(\n    map(outletMap),\n    shareReplay(1),\n  );\n\n  /**\n   * Convert the component tree to a routing tree\n   *\n   * @internal\n   */\n  readonly ɵrouteTree: Observable<ComponentRouteTree> = this.outlets.pipe(\n    withLatestFrom(this.routableItemTree),\n    map(([outlets, tree]): ComponentRouteTree => routingTree(tree, outlets)),\n    shareReplay(1),\n  );\n\n  /**\n   * The dynamically generated Angular routes for the SPA, based on the model of the app.\n   */\n  public routes: Observable<Routes> = this.ɵrouteTree.pipe(\n    map((routeTrees: ComponentRouteTree): Routes => routeTrees.value.routes),\n    shareReplay(1),\n  );\n\n  constructor(\n    private readonly itemRegistry: ItemRegistryService,\n    private readonly routeGuardsRegistry: RouteGuardsRegistryService,\n    private readonly rootContainer: ӨRootContainerService,\n  ) {\n    super();\n  }\n\n  /**\n   * Get the router-outlet name for the given item in the model tree.\n   *\n   * @internal\n   */\n  ɵitemOutletName(item: ItemModel): Observable<string | undefined> {\n    return this.outlets.pipe(\n      map(outlets => outlets.get(item.name)),\n      map(outlet => (outlet instanceof OutletCollision ? outlet.outletName : outlet)),\n      distinctUntilChanged(),\n    );\n  }\n}\n","export interface LinkedList<T> {\n  value: T;\n  next?: LinkedList<T>;\n}\n\n/**\n * Creates a new LinkedList with the results of calling a provided function on\n * every element in the provided LinkedList.\n *\n * @param list\n * @param fn\n */\nexport const mapLinkedList = <T, R>(list: LinkedList<T>, fn: (value: T) => R): LinkedList<R> => ({\n  value: fn(list.value),\n  next: list.next === undefined ? undefined : mapLinkedList(list.next, fn),\n});\n\n/**\n * Returns a shallow copy of a portion of a linked list into a linked list, selected from HEAD\n * to TAIL, where the new HEAD is determined by the first \"true\" result of calling the predicate\n * on each node in the list.\n *\n * The search is done by iterating over each element in the linked list\n * in the order from HEAD to TAIL.\n *\n * If not found, returns undefined.\n *\n * @param list\n * @param predicate\n */\nexport const linkedListFind = <T>(list: LinkedList<T>, predicate: (value: T) => boolean): LinkedList<T> | undefined => {\n  if (predicate(list.value)) {\n    return list;\n  }\n  return list.next ? linkedListFind(list.next, predicate) : undefined;\n};\n\n/**\n * Returns a shallow copy of a portion of a linked list into a linked list, selected from HEAD\n * to TAIL, where the new HEAD is determined by the first \"true\" result of calling the predicate\n * on each node in the list.\n *\n * The search is done by iterating over each element in the linked list\n * in the order from TAIL to HEAD.\n *\n * If not found, returns undefined.\n *\n * @param list\n * @param predicate\n */\nexport const linkedListFindLast = <T>(\n  list: LinkedList<T>,\n  predicate: (value: T) => boolean,\n): LinkedList<T> | undefined => {\n  const foundChild = list.next ? linkedListFindLast(list.next, predicate) : undefined;\n  if (foundChild) {\n    return foundChild;\n  }\n  return predicate(list.value) ? list : undefined;\n};\n\n/**\n * Returns a shallow copy of a portion of a linked list into a new linked list,\n * selected from HEAD (inclusive) to the first element to return true (exclusive).\n * So the new TAIL will be the parent of the first element to return true.\n *\n * The search is done by iterating over each element in the linked list in the\n * order from HEAD to TAIL.\n *\n * If not found, returns undefined.\n *\n * @param list\n * @param predicate\n */\nconst linkedListSliceTail = <T>(list: LinkedList<T>, predicate: (value: T) => boolean): LinkedList<T> | undefined => {\n  if (predicate(list.value)) {\n    return undefined;\n  }\n  return {\n    value: list.value,\n    next: list.next ? linkedListSliceTail(list.next, predicate) : undefined,\n  };\n};\n\n/**\n * Returns a shallow copy of a portion of a linked list into a linked list, selected from HEAD\n * to TAIL, where the new HEAD is determined by the first \"true\" result of calling the \"begin\"\n * predicate and the new TAIL is determined by the first \"true\" result of calling the \"end\"\n * predicate.\n *\n * If no \"begin\" predicate is sent, the HEAD will be the current HEAD.\n *\n * If no \"end\" predicate is sent, the TAIL will be the current TAIL.\n *\n * The search is done by iterating over each element in the linked list\n * in the order from HEAD to TAIL until both predicates return true.\n *\n * If not both found, returns undefined.\n *\n * @param list\n * @param predicate\n */\nexport const linkedListSlice = <T>(\n  list: LinkedList<T>,\n  begin?: (value: T) => boolean,\n  end?: (value: T) => boolean,\n): LinkedList<T> | undefined => {\n  const head = begin ? linkedListFind(list, begin) : list;\n  if (!head) {\n    return undefined;\n  }\n  return end ? linkedListSliceTail(head, end) : head;\n};\n\nexport const linkedListToArray = <T>(list: LinkedList<T>): Array<T> => [\n  list.value,\n  ...(list.next ? linkedListToArray(list.next) : []),\n];\n\nexport const linkedListFromArray = <T>(arr: Array<T>): LinkedList<T> | undefined =>\n  arr.reduceRight((next: LinkedList<T> | undefined, value: T) => ({ value, next }), undefined);\n\nexport const linkedListLast = <T>(list: LinkedList<T>): LinkedList<T> => (list.next ? linkedListLast(list.next) : list);\n","import { Injectable } from '@angular/core';\nimport {\n  PRIMARY_OUTLET,\n  Router,\n  UrlSegment,\n  UrlSegmentGroup,\n  UrlTree,\n  ActivatedRoute,\n  ActivatedRouteSnapshot,\n} from '@angular/router';\n\nimport {\n  linkedListSlice,\n  LinkedList,\n  linkedListFind,\n  linkedListToArray,\n  linkedListFromArray,\n  linkedListLast,\n} from '../../models/linked-list';\nimport { pairs, flatMap } from '../../models/array';\n\nexport interface RouteSegmentParams {\n  [key: string]: any;\n}\n\nexport interface RouteSegment {\n  path: string;\n  outlet: string;\n  params?: RouteSegmentParams;\n}\n\nexport type NavigationRoute = LinkedList<RouteSegment>;\n\ndeclare interface UrlSegmentGroupChildren {\n  [key: string]: UrlSegmentGroup;\n}\n\nconst hasNamedOutlet = (node: RouteSegment): boolean => node.outlet !== PRIMARY_OUTLET;\n\nconst routeSegmentToUrlSegment = (node: RouteSegment): UrlSegment => new UrlSegment(node.path, node.params || {});\n\n@Injectable()\nexport class RouterNavigationService {\n  constructor(private readonly router: Router) {}\n\n  /**\n   * Set (merge) the params on a given `ActivatedRoute`, preserving the active children's states.\n   *\n   * This allows updating the params in an arbitrary route in the active route\n   * tree without needing to know the state of every child route.\n   *\n   * @param params The route params that should be set on the given route\n   * @param from The route to set the params on\n   * @returns The new URLTree\n   */\n  setParams(params: RouteSegmentParams, from: ActivatedRoute | ActivatedRouteSnapshot): UrlTree {\n    const snapshot = from instanceof ActivatedRoute ? from.snapshot : from;\n    const navigationRoute: NavigationRoute | undefined = linkedListFromArray(\n      flatMap(\n        (route: ActivatedRouteSnapshot): Array<RouteSegment> =>\n          route.url.map((url: UrlSegment) => ({\n            path: url.path,\n            outlet: route.outlet,\n            params: url.parameters,\n          })),\n        snapshot.pathFromRoot,\n      ),\n    );\n    if (!navigationRoute) {\n      throw new Error('No route to set params on');\n    }\n    const last = linkedListLast(navigationRoute);\n    last.value.params = last.value.params ? { ...last.value.params, ...params } : params;\n    return this.createUrlTree(navigationRoute);\n  }\n\n  createUrlTree(routeBranch: NavigationRoute): UrlTree {\n    const tree = this.router.parseUrl('/'); // @todo: is there no better way to make a tree?\n    const rootRouteSegment = routeBranch.value;\n    tree.root.children[rootRouteSegment.outlet] = this.urlSegmentGroupForRoute(routeBranch);\n    return tree;\n  }\n\n  /*\n   * A segment group is a node in the UrlTree. The node itself is an array\n   * of segments, which are all considered on the \"primary\" outlet.\n   * The children of this node are the paths on the \"non-primary\" outlets.\n   * There will only be a single \"child\" for the NavigationRoute (as it\n   * represents a single branch through a UrlTree).\n   */\n  private urlSegmentGroupForRoute(routeBranch: NavigationRoute): UrlSegmentGroup {\n    // Find all paths up to the first non-primary outlet - these will be the segments.\n    const routeSegments: NavigationRoute = {\n      value: routeBranch.value,\n      next: routeBranch.next ? linkedListSlice(routeBranch.next, undefined, hasNamedOutlet) : undefined,\n    };\n    const segments: Array<UrlSegment> = linkedListToArray(routeSegments).map(routeSegmentToUrlSegment);\n\n    // Find the first non-primary outlet - this will be the child.\n    const nextOutlet = routeBranch.next && linkedListFind(routeBranch.next, hasNamedOutlet);\n    const segmentGroupChildren = nextOutlet\n      ? { [nextOutlet.value.outlet]: this.urlSegmentGroupForRoute(nextOutlet) }\n      : {};\n\n    return new UrlSegmentGroup(segments, segmentGroupChildren);\n  }\n\n  /**\n   * Merge a new `UrlTree` into the current active `UrlTree`.\n   *\n   * @param newTree\n   */\n  navigate(newTree: UrlTree): Promise<boolean> {\n    const activeTree = this.router.parseUrl(this.router.url);\n    const mergedTree = this.router.parseUrl('/');\n    mergedTree.root.children = this.mergeUrlSegmentGroupChildren(activeTree.root.children, newTree.root.children);\n    return this.router.navigateByUrl(mergedTree);\n  }\n\n  /**\n   * Merge new children of a `UrlSegmentGroup` children into the children of the\n   * current active `UrlSegmentGroup`.\n   *\n   * @param activeChildren\n   * @param newChildren\n   */\n  private mergeUrlSegmentGroupChildren(\n    activeChildren: UrlSegmentGroupChildren,\n    newChildren: UrlSegmentGroupChildren,\n  ): UrlSegmentGroupChildren {\n    const mergedChildren = Object.keys(newChildren).reduce(\n      (acc: UrlSegmentGroupChildren, outletName: string): UrlSegmentGroupChildren => {\n        if (!activeChildren[outletName]) {\n          return acc;\n        }\n\n        return {\n          ...acc,\n          [outletName]: this.mergeUrlTreeSegmentGroup(activeChildren[outletName], newChildren[outletName]),\n        };\n      },\n      newChildren,\n    );\n\n    /**\n     * Sibling routes can be preserved, or not.\n     *\n     * Because the current active route is a tree (for example, when you have multiple named\n     * outlets and they are active) when you navigate to a new route it is possible to preserve\n     * active routes that are siblings to the route you're navigating to.\n     *\n     * For example, when navigating from URL `/a/(b//x:c)` to `/a/c`, should the `x:c` or `b`\n     * be preserved. The URL can be visualised as a tree (where a double slash `//` shows siblings\n     * in the tree):\n     *\n     * ```\n     *  -a\n     *   `- b\n     *   `- x:c\n     * ```\n     *\n     * When set to true, all sibling will be preserved. For example, when navigating to `/a/d`\n     * the `x:c` branch will be preserved and the new URL will be `/a/(d//x:c)`. Similarly,\n     * when navigating to `/a/(x:e)`, the `b` branch will be preserved and the new URL will\n     * be `/a/(b//x:e)`.\n     *\n     * Merging is disabled by default, but can be enabled with a feature flag.\n     */\n    return { ...activeChildren, ...mergedChildren };\n  }\n\n  /**\n   * Merge a new `UrlSegmentGroup` into the current active `UrlSegmentGroup`.\n   *\n   * @param activeSegmentGroup\n   * @param newSegmentGroup\n   */\n  private mergeUrlTreeSegmentGroup(\n    activeSegmentGroup: UrlSegmentGroup,\n    newSegmentGroup: UrlSegmentGroup,\n  ): UrlSegmentGroup {\n    return new UrlSegmentGroup(\n      this.mergeUrlSegments(activeSegmentGroup.segments, newSegmentGroup.segments),\n      this.mergeUrlSegmentGroupChildren(activeSegmentGroup.children, newSegmentGroup.children),\n    );\n  }\n\n  /**\n   * Merge an array of new `UrlSegment` into the current active `UrlSegment` array.\n   *\n   * @param activeSegments\n   * @param newSegments\n   */\n  private mergeUrlSegments(activeSegments: Array<UrlSegment>, newSegments: Array<UrlSegment>): Array<UrlSegment> {\n    // Determine if any params are being set.\n    const preserveActiveTailSegments = !!newSegments.find(segment => Object.keys(segment.parameters).length > 0);\n\n    // When the new segments change path from the active segment, then they\n    // should no longer be preserved, so they get set to undefined.\n    const removeActiveSegments = () => {\n      let matches = true;\n      type SegmentTupple = [UrlSegment | undefined, UrlSegment | undefined];\n      return ([activeSegment, newSegment]: SegmentTupple): SegmentTupple => {\n        if (matches && activeSegment && newSegment) {\n          matches = activeSegment.path === newSegment.path;\n        }\n        return [matches ? activeSegment : undefined, newSegment];\n      };\n    };\n\n    // pair the segments into a single array\n    return pairs(activeSegments, newSegments)\n      .map(removeActiveSegments())\n      .map(([activeSegment, newSegment]) => this.mergeUrlSegment(activeSegment, newSegment, preserveActiveTailSegments))\n      .filter((a): a is UrlSegment => a !== undefined);\n  }\n\n  /**\n   * Merge a new `UrlSegment` into the current active `UrlSegment`.\n   *\n   * If there is both an active and new segment it is assumed that the path\n   * is the same already.\n   *\n   * @param activeSegment\n   * @param newSegment\n   * @param isSettingParams\n   */\n  private mergeUrlSegment(\n    activeSegment: UrlSegment | undefined,\n    newSegment: UrlSegment | undefined,\n    preserveActiveTailSegments: boolean,\n  ): UrlSegment | undefined {\n    /**\n     * There are 3 different strategies for how to preserve any \"tail\" segments in\n     * the route: 'never' | 'on-param-set' | 'always'.\n     *\n     * This is only relevant when any route branch you're navigating to is a subset\n     * of a current active route. For example, when navigating from URL `/a/b` to\n     * `/a`, should `b` be preserved?\n     *\n     * When set to 'never' the children will be discarded, and the new URL will simply\n     * be `/a`.\n     *\n     * When set to 'always' the children will always be preserved (this means it would\n     * be impossible to navigate to a parent route).\n     *\n     * When set to 'on-param-set' the children will only be preserved if params are being\n     * set on the route. For example, when navigating from `/a/b` to\n     * `/a;data=foo` then the new URL will be `/a:data=foo/b`.\n     *\n     * This is implemented using the 'never' OR 'on-param-set' strategy depending on the\n     * `preserveActiveTailSegments` flag.\n     */\n    if (activeSegment && !newSegment && preserveActiveTailSegments) {\n      return new UrlSegment(activeSegment.path, activeSegment.parameters);\n    } else if (newSegment) {\n      const activeSegmentParams = (activeSegment && activeSegment.parameters) || {};\n      return new UrlSegment(newSegment.path, this.mergeUrlSegmentParams(activeSegmentParams, newSegment.parameters));\n    }\n    return undefined;\n  }\n\n  private mergeUrlSegmentParams(activeSegmentParams: RouteSegmentParams, newSegmentParams: RouteSegmentParams) {\n    /**\n     * There 3 different strategies for how to preserve any route-parameters in the\n     * route: 'never' | 'overwrite' | 'merge'.\n     *\n     * For example, when navigating from URL `/a;data=foo/b` to `/a;x=y/c`, should the\n     * 'data' param be preserved.\n     *\n     * When `never` the params will be discarded, and the new URL will simply be `/a;x=y/c`.\n     *\n     * When `merge`, then the params will be preserved, and the new URL will be\n     * `/a;data=foo;x=y/c`.\n     *\n     * When 'overwrite', then the params will be only be preserved if there are no *other*\n     * params being set on that segment. For example, when navigating instead to:\n     * `/a/c;foo=bar`, the new URL will be `/a;data=foo/c;foo=bar`.\n     *\n     * This is implemented using the \"overwrite\" strategy.\n     */\n    return Object.keys(newSegmentParams).length === 0 ? activeSegmentParams : newSegmentParams;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, PRIMARY_OUTLET } from '@angular/router';\nimport { createRouteComponentStrategy } from '../routing/strategies/routing-decorators';\nimport { RouterConfigService } from '../routing/config/router-config.service';\nimport { take } from 'rxjs/operators';\nimport { Tree, treeBranch } from '../models/tree';\nimport { ItemRoutes, isRoutable } from '../routing/config/routing-tree';\nimport { LinkedList, mapLinkedList, linkedListFindLast, linkedListLast } from '../models/linked-list';\nimport {\n  RouteSegmentParams,\n  NavigationRoute,\n  RouteSegment,\n  RouterNavigationService,\n} from '../routing/navigation/router-navigation.service';\n\nexport type FindRouteFunction = (tree: Tree<ItemRoutes>, index?: number, parent?: Tree<ItemRoutes>) => boolean;\n\n/**\n * Extracts a tree branch from the component route tree up to the given item and\n * unwraps the value.\n *\n * It unwraps it so we don't end up with a `LinkedList<Tree>`, where each node\n * would have value`.value`.\n *\n * @param itemRouteTree\n * @param itemName\n */\nconst itemRoutesBranch = (\n  findRoute: (tree: Tree<ItemRoutes>, index?: number, parent?: Tree<ItemRoutes>) => boolean,\n  itemRouteTree: Tree<ItemRoutes>,\n): LinkedList<ItemRoutes> | undefined => {\n  const branch = treeBranch<Tree<ItemRoutes>>(itemRouteTree, findRoute);\n  if (branch === undefined) {\n    return undefined;\n  }\n  return mapLinkedList<Tree<ItemRoutes>, ItemRoutes>(branch, tree => tree.value);\n};\n\n/**\n * Maps a LinkedList<Route> to a NavigationRoute, to ensure each route is a\n * part of a URL segment.\n */\nconst mapToNavigationRoute = (routeBranch: LinkedList<Route>): NavigationRoute =>\n  mapLinkedList<Route, RouteSegment>(routeBranch, route => {\n    if (route.path === undefined) {\n      throw new Error(`Can't find route to item as route has no path`);\n    }\n    return {\n      path: route.path,\n      outlet: route.outlet || PRIMARY_OUTLET,\n    };\n  });\n\n/**\n * @internal\n */\n@Injectable()\nexport class ӨItemNavigationService {\n  constructor(\n    private readonly routerConfig: RouterConfigService,\n    private readonly navigationService: RouterNavigationService,\n  ) {}\n  async navigateToItem(itemName: string, params: RouteSegmentParams): Promise<boolean> {\n    const isItemByName = (tree: Tree<ItemRoutes>) => tree.value.item === itemName;\n    return this.navigateToRoute(isItemByName, params);\n  }\n\n  private isItemChild(navigateToParent: string, childIndex: number): FindRouteFunction {\n    return (tree: Tree<ItemRoutes>, index?: number, parent?: Tree<ItemRoutes>): boolean => {\n      if (parent) {\n        const isChild = parent.value.item === navigateToParent;\n        const isNthChild = index === childIndex;\n        if (isChild && isNthChild) {\n          return true;\n        }\n\n        const isLastChild = index === parent.children.length - 1;\n        const isIndexOutOfRange = childIndex > parent.children.length - 1;\n        if (isChild && isLastChild && isIndexOutOfRange) {\n          return true;\n        }\n      }\n\n      const noChildren = tree.children.length === 0;\n      const isParent = tree.value.item === navigateToParent;\n\n      if (isParent && noChildren) {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  async navigateToChild(navigateToParent: string, childIndex: number, params: RouteSegmentParams): Promise<boolean> {\n    return this.navigateToRoute(this.isItemChild(navigateToParent, childIndex), params);\n  }\n\n  private async navigateToRoute(findRoute: FindRouteFunction, params: RouteSegmentParams): Promise<boolean> {\n    const route = await this.routeToItem(findRoute);\n\n    if (!route) {\n      // If there is no route, then this item should already be visible, as it means\n      // it's somewhere in the component tree above any routable item.\n      if (Object.keys(params).length) {\n        // If trying to pass params, this can't work, so throw\n        return Promise.reject(`Can't pass params to an item that isn't within a routable item`);\n      }\n      // Otherwise, there is no need to navigate, navigation has failed\n      return Promise.resolve(false);\n    }\n\n    const navigationRoute = mapToNavigationRoute(route);\n    // Set the params on the last path in the route.\n    linkedListLast(navigationRoute).value.params = params;\n    return this.navigationService.navigate(this.navigationService.createUrlTree(navigationRoute));\n  }\n\n  /**\n   * Search the component tree for a given item, and return the route to that item.\n   *\n   * @param itemName The CXP instance name of the item to route to.\n   */\n  private routeToItem(\n    findRoute: (tree: Tree<ItemRoutes>, index?: number, parent?: Tree<ItemRoutes>) => boolean,\n  ): Promise<LinkedList<Route> | undefined> {\n    // Take a snapshot of the current state of the route tree.\n    return this.routerConfig.ɵrouteTree\n      .pipe(take(1))\n      .toPromise()\n      .then((routeTree: Tree<ItemRoutes>) => this.findItemRoute(findRoute, routeTree));\n  }\n\n  /**\n   * Breadth-first-search of routes, to find a route to a given item.\n   *\n   * 1. Find the branch to this item in the component route tree.\n   * 2. Once found, find the closest routable parent.\n   * 3. Take the child of the routable parent.\n   * 4. For each route in the parent, use the \"RouteComponentStrategy\" to determine\n   *      which route the route-child is rendered in.\n   * 5. Once the route is found, flatten the routes of the componentRouteTree up to that route.\n   *\n   * @param itemName\n   * @param routes\n   */\n  private findItemRoute(\n    findRoute: (tree: Tree<ItemRoutes>, index?: number, parent?: Tree<ItemRoutes>) => boolean,\n    componentRouteTree: Tree<ItemRoutes>,\n  ): LinkedList<Route> | undefined {\n    // 1. Find the branch containing the item.\n    const branch: LinkedList<ItemRoutes> | undefined = itemRoutesBranch(findRoute, componentRouteTree);\n\n    if (!branch) {\n      // item not in tree\n      throw new Error(`No matching route found in model.`);\n    }\n    const foundNode = linkedListLast(branch);\n\n    // 2. Find the closest *routable* parent (depth-first search, so it searches from TAIL to HEAD)\n    const isParent = (node: ItemRoutes) => node.item !== foundNode.value.item;\n    const isRoutableParent = (node: ItemRoutes) => isRoutable(node) && isParent(node);\n    const routableNode = linkedListFindLast(branch, isRoutableParent);\n    if (!routableNode) {\n      return undefined;\n    }\n\n    // 3. Take the child of the routable node.\n    const routableNodeChild = routableNode.next;\n\n    // 4. Determine which route the child is rendered in.\n    const foundItemInRoute =\n      routableNodeChild &&\n      routableNode.value.routes.find(route => this.isItemInRoute(routableNodeChild.value.item, route));\n\n    // 5. Find the branch in the route tree up to that route (similar to step 1).\n    // Except that \"Routes\" is really like an array of trees, so we loop through them.\n    for (const rootRoute of componentRouteTree.value.routes) {\n      const routeBranch = treeBranch<Route>(rootRoute, route => route === foundItemInRoute);\n      if (routeBranch) {\n        return routeBranch;\n      }\n    }\n\n    return undefined;\n  }\n\n  private isItemInRoute(itemName: string, route: Route): boolean {\n    if (!route.component) {\n      return false;\n    }\n    return createRouteComponentStrategy(route.component).isItemInRoute(itemName, route);\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PipelineSource, PipelineSink } from '../pipeline-interface';\n\nexport const createComponentPipe = <T>(): PipelineSource<T> & PipelineSink<T> => ({\n  source: (ref: ComponentRef<any>, outputName: string) => () => ref.instance[outputName],\n  sink: (ref: ComponentRef<any>, inputName: string) => (stdin: Observable<T>) => {\n    stdin.subscribe((value: any) => {\n      ref.instance[inputName] = value;\n      ref.changeDetectorRef.markForCheck();\n    });\n  },\n});\n","import { InjectionToken, Inject, ValueProvider, FactoryProvider, Type, Injectable } from '@angular/core';\nimport { flatten } from '../../models/array';\n\nexport type ProcessorName = string;\n\n/**\n *\n * @deprecated Will be removed in v7.0.0\n * Configures a provider for a `PipelineProcessor` by name.\n *\n * @usageNotes\n *\n * Register a custom processor:\n *\n * ```typescript\n * BackbaseCoreModule.forRoot({\n *   pipelineProcessors: [{\n *     name: 'custom-pipe',\n *     provider: {\n *       provide: new InjectionToken('Custom handler'),\n *       useValue: {\n *         pipe: () => (stdin: Observable<any>) => stdin.pipe(tap(\n *           (val: any) => console.log(val)\n *         )),\n *       },\n *     },\n *   }],\n * })\n * ```\n *\n * Configure custom processor in model:\n *\n * ```json\n * {\n *   \"name\": \"my-widget\",\n *   \"properties\": {\n *     \"output.myOutput\": \"custom-pipe\"\n *   }\n * }\n * ```\n */\nexport interface PipelineProcessorConfig<T extends ProcessorName = ProcessorName> {\n  /**\n   * The name of the processor, which can be used in the model.\n   *\n   * Note: the name must begin with a letter (a-z).\n   */\n  name: T;\n  /**\n   * A valid angular provider that will be instantiated when it is needed.\n   */\n  provider: PipelineProcessorProvider;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * See https://angular.io/api/core/StaticProvider\n */\nexport declare interface StaticClassProvider {\n  useClass: Type<any>;\n  deps: Array<any>;\n  provide: any;\n  multi?: boolean;\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type PipelineProcessorProvider = StaticClassProvider | FactoryProvider | ValueProvider;\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const CONFIG_PIPELINE_PROCESSORS = new InjectionToken<Array<PipelineProcessorConfig>>(\n  '@backbase/foundation Pipeline Handlers',\n);\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Helper service wrapping around CONFIG_PIPELINE_PROCESSORS\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PipelineRegistry {\n  private readonly registeredHandlers: Map<ProcessorName, PipelineProcessorProvider>;\n\n  constructor(\n    @Inject(CONFIG_PIPELINE_PROCESSORS)\n    processorsNested: // eslint-disable-next-line @typescript-eslint/array-type\n    PipelineProcessorConfig[][], // Angular doesn't like nested array types\n  ) {\n    const allProcessors: Array<PipelineProcessorConfig> = flatten(processorsNested);\n    this.registeredHandlers = new Map(\n      allProcessors.map(({ name, provider }): [string, PipelineProcessorProvider] => [name, provider]),\n    );\n  }\n\n  getProcessorProvider(name: string): PipelineProcessorProvider {\n    const provider = this.registeredHandlers.get(name);\n    if (provider === undefined) {\n      throw new Error(`No provider to pipeline handler ${name}`);\n    }\n    return {\n      deps: [],\n      ...provider,\n    };\n  }\n\n  getProcessorProviderToken(name: string): any {\n    return this.getProcessorProvider(name).provide;\n  }\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function createPipelineProcessorConfig<T extends ProcessorName>(\n  name: T,\n  provider: PipelineProcessorProvider,\n): PipelineProcessorConfig<T> {\n  return {\n    name,\n    provider,\n  };\n}\n","import { UnaryFunction } from 'rxjs';\n\nconst noop = () => {};\n\n// @see https://github.com/ReactiveX/rxjs/blob/5b82dcc601ed6eae955409ed0995cad61744f102/src/internal/util/pipe.ts\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { PipelineRegistry } from './pipeline-registry';\nimport {\n  PipelinePipe,\n  Pipe,\n  Sink,\n  Pipeline,\n  PipelineSink,\n  Source,\n  PipelineSource,\n  PipelineProcessor,\n} from './pipeline-interface';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { pipeFromArray } from '../../models/observable';\n\nconst noop = () => {};\n\nconst noopSink = <R>(stdin: Observable<R>) => {\n  stdin.subscribe(noop);\n};\n\nconst isSourceDefinition = <T, R>(definition: PipelineProcessor<T, R>): definition is PipelineSource<T> =>\n  definition && 'source' in definition;\n\nconst isPipeDefinition = <T, R>(definition: PipelineProcessor<T, R>): definition is PipelinePipe<T, R> =>\n  definition && 'pipe' in definition;\n\nconst isSinkDefinition = <R>(definition: PipelineProcessor<any, R>): definition is PipelineSink<R> =>\n  definition && 'sink' in definition;\n/**\n * @deprecated Will be removed in v7.0.0\n */\n@Injectable()\nexport class PipelineService {\n  constructor(private readonly broker: PipelineRegistry, private readonly injector: Injector) {}\n\n  createSource<T>(name: string, args: Array<any>): Source<T> {\n    const instance = this.getInstance<T, any>(name);\n    if (!isSourceDefinition(instance)) {\n      throw new Error(`${name} is not a valid source`);\n    }\n    return instance.source(...args);\n  }\n\n  createPipe<T, R>(name: string, args: Array<any>): Pipe<T, R> {\n    const instance = this.getInstance<T, R>(name);\n    if (!isPipeDefinition(instance)) {\n      throw new Error(`${name} is not a valid pipe`);\n    }\n    return instance.pipe(...args);\n  }\n\n  createSink<R>(name: string, args: Array<any>): Sink<R> {\n    const instance = this.getInstance<any, R>(name);\n    if (isSinkDefinition(instance)) {\n      return instance.sink(...args);\n    } else if (isPipeDefinition(instance)) {\n      return this.chainSink([instance.pipe(...args)], noopSink);\n    }\n    throw new Error(`${name} is not a valid sink`);\n  }\n\n  private getInstance<T, R>(name: string): PipelineProcessor<T, R> {\n    const provide = this.broker.getProcessorProviderToken(name);\n    return this.injector.get<PipelineProcessor<T, R>>(provide);\n  }\n\n  chainSink<T, R>(pipes: Array<Pipe<T, R>>, sink: Sink<R>): Sink<T> {\n    return (stdin: Observable<T>): void => {\n      sink(stdin.pipe(pipeFromArray(pipes)));\n    };\n  }\n\n  runPipeline<T>(pipeline: Pipeline<T>, gc: Observable<any>): void {\n    return pipeline.sink(pipeline.source().pipe(takeUntil(gc)));\n  }\n}\n","import { serializerDeserializer } from '@backbase/communication-property';\nimport { Properties } from '@backbase/foundation-ang/web-sdk';\n\nexport interface PipelineCommand {\n  processorName: string;\n  args: Array<unknown>;\n}\n\nexport interface InputOutputProperty {\n  propertyName: string;\n  pipeline: PipelineCommand;\n}\n\nconst parsePipe = (pipeString: string): PipelineCommand => {\n  const communicationDefinition = serializerDeserializer.fromProperty(pipeString);\n  if (communicationDefinition !== undefined) {\n    return {\n      processorName: communicationDefinition.transport,\n      args: [communicationDefinition.param],\n    };\n  } else {\n    const parts = pipeString.split(' ');\n    const processorName = parts.shift() as string;\n    return {\n      processorName,\n      args: parts,\n    };\n  }\n};\n\nconst LEGACY_HANDLERS: Array<string> = ['debug', 'navigation', 'navigation-url', 'route-param', 'model-property'];\nconst isPipelineConfig = (propertyValue: string): boolean => {\n  const handlerName = propertyValue.split(':')[0];\n  return !LEGACY_HANDLERS.includes(handlerName);\n};\n\nconst upgradeToPipelineConfig = (propertyName: string, propertyValue: string): string => {\n  const colonIndex = propertyValue.indexOf(':');\n  const hasArg = colonIndex !== -1;\n  const handlerName = hasArg ? propertyValue.substr(0, colonIndex) : propertyValue;\n  const handlerArg = hasArg ? propertyValue.substr(colonIndex + 1) : '';\n\n  const handlerToPipeMapping: { [old: string]: () => string } = {\n    'navigation-url': () => `url ${handlerArg} ${propertyName}`,\n    navigation: () => `navigation ${propertyName} ${handlerArg}`,\n    'model-property': () => `model ${handlerArg}`,\n  };\n  return (handlerToPipeMapping[handlerName] || (() => `${handlerName} ${handlerArg}`))().trim();\n};\n\nconst normalizePropertyValue = (propertyName: string, value: string): string => {\n  if (!isPipelineConfig(value)) {\n    return upgradeToPipelineConfig(propertyName, value);\n  }\n  return value;\n};\n\nexport const parseInputOutputPropertyValue = (propertyName: string, propertyValue: string): PipelineCommand => {\n  const normalPropertyValue = normalizePropertyValue(propertyName, propertyValue);\n  const streamHandlers = normalPropertyValue.trim();\n  return parsePipe(streamHandlers);\n};\n\nexport const inputOutputProperties = (properties: Properties): Array<InputOutputProperty> =>\n  Object.entries(properties).map(([propertyName, value]) => ({\n    propertyName,\n    pipeline: parseInputOutputPropertyValue(propertyName, `${value}`),\n  }));\n","import { Properties } from '@backbase/foundation-ang/web-sdk';\nimport { inputOutputProperties, InputOutputProperty } from './parse-model';\n\nexport function parseProperties(properties: Properties): Array<InputOutputProperty> {\n  return inputOutputProperties(properties).filter(prop => !!prop.pipeline && !!prop.pipeline.processorName);\n}\n\nexport function getProcessorNames(properties: Properties): Array<string> {\n  return parseProperties(properties).map(propertyConfig => propertyConfig.pipeline.processorName);\n}\n","import { ComponentFactoryResolver, ComponentRef, Injectable, StaticProvider, Inject, Optional } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\n\nimport { ItemModel } from '../../models/item-model';\nimport { ObservableTree } from '../../models/observable-tree.interface';\nimport { ItemLifecycleService, LifecycleEvent } from '../../rendering/item-lifecycle.service';\nimport { LAZY_MAP, LazyConfig, LazyComponentsConfig } from '../../rendering/lazy-config';\nimport { createComponentPipe } from '../pipes/handlers/component';\nimport { Pipeline, Sink } from '../pipes/pipeline-interface';\nimport { PipelineRegistry } from '../pipes/pipeline-registry';\nimport { PipelineService } from '../pipes/pipeline.service';\nimport { getProcessorNames, parseProperties } from './broker-helpers';\n\n/**\n * The input broker service creates a communication pipeline\n * using the component input as a sink. The source of the pipeline\n * is determined by the item model.\n */\n@Injectable()\nexport class InputBrokerService {\n  constructor(\n    private readonly itemLifecycle: ItemLifecycleService,\n    private readonly pipelineRegistry: PipelineRegistry,\n    private readonly componentFactoryResolver: ComponentFactoryResolver,\n    @Inject(LAZY_MAP)\n    @Optional()\n    private readonly lazyConfig: LazyConfig | null,\n  ) {}\n\n  bootstrap() {\n    // Model properties cannot be linked to the Inputs of lazy loaded items\n    const lazyLoadedComponents = (this.lazyConfig\n      ? this.lazyConfig.filter(\n          (config): config is LazyComponentsConfig => !!(config as LazyComponentsConfig).components,\n        )\n      : []\n    ).reduce((acc, config) => [...acc, ...config.components], [] as Array<string>);\n\n    this.itemLifecycle.whenCreate().subscribe(({ itemModel, component }) => {\n      const gc$ = this.itemLifecycle.whenRemove(itemModel.value.name).pipe(take(1));\n      this.runInputPipelines(itemModel, component, gc$);\n      if (!lazyLoadedComponents.includes(itemModel.value.ɵclassId)) {\n        this.runModelInputs(itemModel, component, gc$);\n      }\n    });\n  }\n\n  private runModelInputs<C>(\n    itemModel: ObservableTree<ItemModel>,\n    ref: ComponentRef<C>,\n    gc$: Observable<LifecycleEvent>,\n  ) {\n    this.componentFactoryResolver.resolveComponentFactory(ref.componentType).inputs.forEach(input => {\n      // Abort if there is already an \"input.\" property with the same name\n      if (itemModel.value.ɵinputProperties[input.templateName] !== undefined) return;\n      const modelValue = itemModel.value.ɵproperties[input.templateName];\n      if (modelValue === undefined) return;\n      const source = itemModel.value.property(input.templateName, modelValue);\n      const sink = this.inputSink(ref, input.propName);\n      return sink(source.pipe(takeUntil(gc$)));\n    });\n  }\n\n  private runInputPipelines<C>(\n    itemModel: ObservableTree<ItemModel>,\n    ref: ComponentRef<C>,\n    gc$: Observable<LifecycleEvent>,\n  ) {\n    const pipelineService = ref.injector.get<PipelineService>(PipelineService);\n    parseProperties(itemModel.value.ɵinputProperties).forEach(inputPipesConfig => {\n      const sourceCommand = inputPipesConfig.pipeline;\n      const sourceFn = pipelineService.createSource(sourceCommand.processorName, sourceCommand.args);\n      const pipeline: Pipeline<any> = {\n        source: sourceFn,\n        sink: this.inputSink<C>(ref, inputPipesConfig.propertyName),\n      };\n\n      pipelineService.runPipeline(pipeline, gc$);\n    });\n  }\n\n  private inputSink<C>(ref: ComponentRef<C>, inputName: string): Sink<any> {\n    return createComponentPipe().sink(ref, inputName);\n  }\n\n  getItemProviders(item: ItemModel): Array<StaticProvider> {\n    return getProcessorNames(item.ɵinputProperties).map(processorName => {\n      try {\n        return this.pipelineRegistry.getProcessorProvider(processorName);\n      } catch (message) {\n        throw new Error(`Input '${processorName}' on ${item.name} is misconfigured. ${message}`);\n      }\n    });\n  }\n}\n\nexport function createInputBootstrap(Broker: InputBrokerService) {\n  return Broker.bootstrap.bind(Broker);\n}\n","import { ComponentRef, Injectable, StaticProvider } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { ItemModel } from '../../models/item-model';\nimport { ObservableTree } from '../../models/observable-tree.interface';\nimport { ItemLifecycleService, LifecycleEvent } from '../../rendering/item-lifecycle.service';\nimport { createComponentPipe } from '../pipes/handlers/component';\nimport { Pipeline, Source } from '../pipes/pipeline-interface';\nimport { PipelineRegistry } from '../pipes/pipeline-registry';\nimport { PipelineService } from '../pipes/pipeline.service';\nimport { getProcessorNames, parseProperties } from './broker-helpers';\n\n/**\n * The output broker service creates a communication pipeline\n * using the component output as a source. The sink of the pipeline\n * is determined by the item model.\n */\n@Injectable()\nexport class OutputBrokerService {\n  constructor(\n    private readonly itemLifecycle: ItemLifecycleService,\n    private readonly pipelineRegistry: PipelineRegistry,\n  ) {}\n\n  bootstrap() {\n    this.itemLifecycle.whenCreate().subscribe(({ itemModel, component }) => {\n      const gc$ = this.itemLifecycle.whenRemove(itemModel.value.name).pipe(take(1));\n      this.runOutputPipelines(itemModel, component, gc$);\n    });\n  }\n\n  private runOutputPipelines<C>(\n    itemModel: ObservableTree<ItemModel>,\n    ref: ComponentRef<C>,\n    gc$: Observable<LifecycleEvent>,\n  ) {\n    const pipelineService = ref.injector.get<PipelineService>(PipelineService);\n    parseProperties(itemModel.value.ɵoutputProperties).forEach(outputPipesConfig => {\n      const sinkCommand = outputPipesConfig.pipeline;\n      const sinkFn = pipelineService.createSink(sinkCommand.processorName, sinkCommand.args);\n      const pipeline: Pipeline<any> = {\n        source: this.outputSource<C>(ref, outputPipesConfig.propertyName),\n        sink: sinkFn,\n      };\n\n      if (!pipeline.source()) {\n        throw new Error(`${ref.componentType.name} does not have an output named '${outputPipesConfig.propertyName}'`);\n      }\n\n      pipelineService.runPipeline(pipeline, gc$);\n    });\n  }\n\n  private outputSource<C>(ref: ComponentRef<C>, outputName: string): Source<any> {\n    return createComponentPipe().source(ref, outputName);\n  }\n\n  getItemProviders(item: ItemModel): Array<StaticProvider> {\n    return getProcessorNames(item.ɵoutputProperties).map(processorName => {\n      try {\n        return this.pipelineRegistry.getProcessorProvider(processorName);\n      } catch (message) {\n        throw new Error(`Output '${processorName}' on ${item.name} is misconfigured. ${message}`);\n      }\n    });\n  }\n}\n\nexport function createOutputBootstrap(outputBroker: OutputBrokerService) {\n  return outputBroker.bootstrap.bind(outputBroker);\n}\n","import { Observable } from 'rxjs';\nimport { InjectionToken } from '@angular/core';\nimport { Pipe, PipelinePipe } from '../pipeline-interface';\nimport { tap } from 'rxjs/operators';\nimport { PipelineProcessorConfig } from '../pipeline-registry';\n\n/**\n * A `PipelineProcessor` which can be used as a pipe\n * or a sink to debug a component's output.\n *\n * An optional prefix can be given as an argument to the handler.\n *\n * See `debugProcessorConfig` for configuration.\n */\nexport interface DebugPipe<T> extends PipelinePipe<T, T> {\n  /**\n   * @param debugPrefix prefix placed before each debug output\n   */\n  pipe: (debugPrefix?: string) => Pipe<T, T>;\n}\n\nexport type DebugSink<T> = DebugPipe<T>;\n\nexport const makeDebugPipe = <T>(): DebugPipe<T> => ({\n  pipe: (debugPrefix: string = 'DEBUG'): Pipe<T, T> => (stdin: Observable<T>): Observable<T> =>\n    stdin.pipe(\n      tap((value: T) => {\n        // eslint-disable-next-line  no-console\n        console.log(`DEBUG ITEM OUTPUT ${debugPrefix}:`, value);\n      }),\n    ),\n});\n\n/**\n * Configure the `DebugPipe`.\n *\n * Use the string 'debug' to configure this handler.\n *\n * @usageNotes\n *\n * ```json\n * {\n *   \"output.myOutput1\": \"debug test\", // use as sink\n *   \"output.myOutput2\": \"debug > route-param\" // use a pipe\n * }\n * ```\n */\nexport const debugProcessorConfig: PipelineProcessorConfig<'debug'> = {\n  name: 'debug',\n  provider: {\n    provide: new InjectionToken('Debug handler'),\n    useFactory: makeDebugPipe,\n  },\n};\n","import { pluck } from 'rxjs/operators';\nimport { InjectionToken } from '@angular/core';\nimport { PipelinePipe, Pipe } from '../pipeline-interface';\nimport { PipelineProcessorConfig } from '../pipeline-registry';\n\n/**\n * A `PipelineProcessor` which can be pipe to transform a stream.\n *\n * Maps each source value (an object) to its specified nested property.\n *\n * See `pluckProcessorConfig` for configuration.\n */\nexport interface PluckPipe<T, R> extends PipelinePipe<T, R> {\n  /**\n   * The pluck function is from [RxJS](https://rxjs-dev.firebaseapp.com/api/operators/pluck)\n   */\n  pipe: (...properties: Array<string>) => Pipe<T, R>;\n}\n\nconst pluckPipe: PluckPipe<any, any> = { pipe: pluck };\n\n/**\n * Configure the `PluckPipe`.\n *\n * Use the string 'pluck' to configure this handler.\n *\n * @usageNotes\n *\n * ```json\n * {\n *   \"output.myObject\": \"pluck id > debug\", // transform an output\n *   \"input.myInput\": \"pluck id < some-object-source\" // transform an input\n * }\n * ```\n */\nexport const pluckProcessorConfig: PipelineProcessorConfig<'pluck'> = {\n  name: 'pluck',\n  provider: {\n    provide: new InjectionToken('Pluck pipeline handler'),\n    useValue: pluckPipe,\n  },\n};\n","import { InjectionToken } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { CommunicationDefinition, serializerDeserializer } from '@backbase/communication-property';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { ӨRootContainerService } from '../../../models/root-container.service';\nimport { ӨItemNavigationService } from '../../item-navigation.service';\nimport { PipelineSink, PipelineSource, Sink, Source } from '../pipeline-interface';\nimport { createPipelineProcessorConfig, PipelineProcessorConfig } from '../pipeline-registry';\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface RouteParams {\n  [key: string]: any;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Use the router to store data.\n *\n * ```\n * [ Component Output ] -> [ Route Store ]\n * [ Route Store ] -> [ Component Input ]\n * ```\n *\n * See `RouteParam` for configuration.\n *\n * Note: you can use a single output to save multiple params\n * to a store by using `RouteParamsMultiSink`.\n */\nexport interface RouteParamsStore<T extends RouteParamPayload> extends PipelineSource<T | undefined>, PipelineSink<T> {\n  /**\n   * @param paramName The name of the param to save in the route\n   */\n  source: (group: string) => Source<T | undefined>;\n  /**\n   * @param paramName The name of the param to read from the route\n   */\n  sink: (group: string) => Sink<T>;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Pipeable operator for normalizing value to `RouteParams`.\n *\n * @param paramNameArg\n */\nexport const routeParams = (paramNameArg: string) => (stdin: Observable<string | undefined>) =>\n  stdin.pipe(map((payload: string | undefined) => (paramNameArg ? { [paramNameArg]: `${payload}` } : {})));\n\nconst TAG: 'route-param' = 'route-param';\n\n/**\n * @deprecated Will be removed in v7.0.0\n * RouteParam Communication Transport\n *\n * Can be used to configure communication using RouteParam.\n *\n * @usageNotes\n *\n * Store some 2-way bound state to the router as \"paramName\"\n *\n * ```json\n * {\n *   \"name\": \"widget-a\",\n *   \"properties\": {\n *     \"output.myOutput\": RouteParam.toProperty(\"paramName\"),\n *     \"input.myInput\": RouteParam.toProperty(\"paramName\")\n *   }\n * }\n * ```\n *\n * Navigate to widget-b and pass data via route-param\n *\n * ```json\n * {\n *   \"name\": \"widget-a\",\n *   \"properties\": {\n *     \"output.myOutput\": RouteParam.toProperty(\"inputName\")\n *   }\n * },\n * {\n *   \"name\": \"widget-b\",\n *   \"properties\": {\n *     \"input.myInput\": RouteParam.toProperty(\"inputName\")\n *   }\n * }\n * ```\n */\nexport class RouteParam {\n  /**\n   * Generate a serialized communication configuration suitable for use as a Widget Input or Output property value.\n   *\n   * @param group The name of the communication group to which the Input/Output belongs\n   */\n  static toProperty(group: string): string {\n    return serializerDeserializer.toProperty(new CommunicationDefinition(TAG, group));\n  }\n}\n\nconst getActivatedRouteParam = (paramName: string) => (\n  activatedRoute: ActivatedRoute,\n): Observable<string | undefined> =>\n  activatedRoute.paramMap.pipe(\n    filter<ParamMap>(Boolean),\n    map((params: ParamMap) => params.get(paramName)),\n    map(param => (param === null ? undefined : param)),\n  );\n\nconst walkRoutePath = (activatedRoute: ActivatedRoute): Array<ActivatedRoute> => {\n  if (!activatedRoute.parent) {\n    return [activatedRoute];\n  }\n  return [activatedRoute, ...walkRoutePath(activatedRoute.parent)];\n};\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type RouteParamPayload =\n  | string\n  | {\n      [key: string]: string | number;\n    };\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const getRouteParam = (activatedRoute: ActivatedRoute, group: string): Observable<string | undefined> => {\n  const activatedRoutes: Array<ActivatedRoute> = walkRoutePath(activatedRoute);\n  const allParams$: Array<Observable<string | undefined>> = activatedRoutes.map(getActivatedRouteParam(group));\n\n  return combineLatest(allParams$).pipe(map(allParams => allParams.find(v => v !== undefined)));\n};\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const createRouteParams = <T extends RouteParamPayload = string>(\n  activatedRoute: ActivatedRoute,\n  itemNavigation: ӨItemNavigationService,\n  rootModel: ӨRootContainerService,\n): RouteParamsStore<T> => ({\n  source: (group: string) => () => getRouteParam(activatedRoute, group).pipe(map(deserialize)),\n  sink: (group: string) => {\n    return stdin => {\n      stdin.pipe(map(serialize), routeParams(group)).subscribe(params => {\n        rootModel\n          .commonAncestor(new CommunicationDefinition(TAG, group))\n          .pipe(first())\n          .subscribe(commonAncestor => {\n            if (commonAncestor === undefined) {\n              return console.warn('No Inputs configured to receive route param');\n            }\n            itemNavigation.navigateToItem(commonAncestor.name, params);\n          });\n      });\n    };\n  },\n});\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const routeParamsProcessorConfig: PipelineProcessorConfig = createPipelineProcessorConfig(TAG, {\n  provide: new InjectionToken('Route param pipeline handler'),\n  useFactory: createRouteParams,\n  deps: [ActivatedRoute, ӨItemNavigationService, ӨRootContainerService],\n});\n\nfunction serialize<T extends RouteParamPayload>(outputValue: T): string {\n  return typeof outputValue === 'string' ? outputValue : `\"${JSON.stringify(outputValue)}\"`;\n}\n\nfunction deserialize(payload: string | undefined) {\n  if (payload === undefined) {\n    return undefined;\n  }\n\n  // not serialized\n  if (!(payload.startsWith('\"') && payload.endsWith('\"'))) {\n    return payload;\n  }\n\n  // actually attempt to deserialize\n  try {\n    return JSON.parse(payload.substr(1, payload.length - 2));\n  } catch (_) {\n    return payload;\n  }\n}\n","import { Observable } from 'rxjs';\nimport { PipelineSink, Sink } from '../pipeline-interface';\nimport { ӨItemNavigationService } from '../../item-navigation.service';\nimport { InjectionToken } from '@angular/core';\nimport { PipelineProcessorConfig } from '../pipeline-registry';\nimport { ActivatedRoute } from '@angular/router';\nimport { RouterNavigationService } from '../../../routing/navigation/router-navigation.service';\n\nexport interface RouteParams {\n  [key: string]: any;\n}\n\nexport interface RouteParamsMultiSink extends PipelineSink<RouteParams> {\n  /**\n   * Save the given route params to the current route.\n   *\n   * If `targetName` is given it will also navigate to that item.\n   *\n   * Note: This sink only *writes* to the route. To read the params into a\n   * component input you must use the `RouteParamsStore`.\n   *\n   * @param targetName Optionally navigate to the given cxp item by name and save to\n   *   this item's route.\n   */\n  sink: (targetName?: string) => Sink<RouteParams>;\n}\n\nexport const createRouteParamsMulti = (\n  activatedRoute: ActivatedRoute,\n  routerService: RouterNavigationService,\n  itemNavigation: ӨItemNavigationService,\n): RouteParamsMultiSink => ({\n  sink: (targetName?: string) => (stdin: Observable<RouteParams>) => {\n    stdin.subscribe(params => {\n      if (!targetName) {\n        routerService.navigate(routerService.setParams(params, activatedRoute));\n      } else {\n        itemNavigation.navigateToItem(targetName, params);\n      }\n    });\n  },\n});\n\n/**\n * Configure the `RouteParamsMultiSink`.\n *\n * Use the string 'route-param-multi' to configure this handler.\n *\n * @usageNotes\n *\n * Store some 2-way bound states to the router as \"paramName\"\n *\n * ```json\n * {\n *   \"name\": \"widget-a\",\n *   \"properties\": {\n *     \"output.myOutput\": \"route-param-multi\",\n *     \"input.myInput\": \"route-param input1\", // assuming input1 is set via myOutput\n *     \"input.myInput2\": \"route-param input2\" // assuming input2 is set via myOutput\n *   }\n * }\n * ```\n *\n * Navigate to widget-b and pass data via route-param\n *\n * ```json\n * {\n *   \"name\": \"widget-a\",\n *   \"properties\": {\n *     \"output.myOutput\": \"route-param-multi widget-b\"\n *   }\n * },\n * {\n *   \"name\": \"widget-b\",\n *   \"properties\": {\n *     \"input.myInput\": \"route-param input1\",\n *     \"input.myInput2\": \"route-param input2\"\n *   }\n * }\n * ```\n *\n * See `RouteParamsMultiSink` for more options.\n *\n * Also see:\n *  - `routeParamsProcessorConfig`\n *  -\n */\nexport const routeParamsMultiProcessorConfig: PipelineProcessorConfig<'route-param-multi'> = {\n  name: 'route-param-multi',\n  provider: {\n    provide: new InjectionToken('Route param multi pipeline handler'),\n    useFactory: createRouteParamsMulti,\n    deps: [ActivatedRoute, RouterNavigationService, ӨItemNavigationService],\n  },\n};\n","import { Observable } from 'rxjs';\nimport { PipelineSink, Sink } from '../pipeline-interface';\nimport { ӨItemNavigationService } from '../../item-navigation.service';\nimport { InjectionToken } from '@angular/core';\nimport { PipelineProcessorConfig } from '../pipeline-registry';\n\nexport interface ItemNavigateSink extends PipelineSink<any> {\n  /**\n   * Navigate to `targetName` when component outputs.\n   *\n   * @param targetName Navigate to the given cxp item by name.\n   */\n  sink: (targetName: string) => Sink<any>;\n}\n\nexport const createItemNavigate = (itemNavigation: ӨItemNavigationService): ItemNavigateSink => ({\n  sink: (targetName: string) => (stdin: Observable<any>) => {\n    stdin.subscribe(() => {\n      itemNavigation.navigateToItem(targetName, {});\n    });\n  },\n});\n\n/**\n * Configure the `ItemNavigateSink`.\n *\n * Use the string 'item-navigate' to configure this handler.\n *\n * Note: to pass route params you must use `RouteParamsStore` instead.\n *\n * @usageNotes\n *\n * Navigate between widgets\n *\n *\n * ```json\n * {\n *   \"name\": \"widget-a\",\n *   \"properties\": {\n *     \"output.myOutput\": \"item-navigate widget-b\"\n *   }\n * },\n * {\n *   \"name\": \"widget-b\"\n * }\n * ```\n *\n * See `RouteParamsStore` for more options.\n */\nexport const itemNavigateProcessorConfig: PipelineProcessorConfig<'item-navigate'> = {\n  name: 'item-navigate',\n  provider: {\n    provide: new InjectionToken('Item navigation pipeline handler'),\n    useFactory: createItemNavigate,\n    deps: [ӨItemNavigationService],\n  },\n};\n","import { InjectionToken } from '@angular/core';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\nimport { ItemModel } from '../../../models/item-model';\nimport { PipelineSource, Source } from '../pipeline-interface';\nimport { PipelineProcessorConfig } from '../pipeline-registry';\n\n/**\n * A `PipelineProcessor` which can be used as a source for a component's\n * input.\n *\n * See `modelProcessorConfig` for configuration.\n */\nexport interface ModelSource extends PipelineSource<Property | undefined> {\n  /**\n   * @param propertyName the name of the model property to read from\n   */\n  source: (propertyName: string) => Source<Property | undefined>;\n}\n\nexport const createModelSource = (itemModel: ItemModel): PipelineSource<Property | undefined> => ({\n  source: (propertyName: string) => () => itemModel.property(propertyName),\n});\n\n/**\n * Configure the `ModelSource`.\n *\n * Use the string 'model' to configure this handler.\n *\n * @usageNotes\n *\n * ```json\n * {\n *   \"modelProperty\": \"foobar\",\n *   \"input.myInput\": \"model modelProperty\", // read the value of modelProperty\n * }\n * ```\n */\nexport const modelProcessorConfig: PipelineProcessorConfig<'model'> = {\n  name: 'model',\n  provider: {\n    provide: new InjectionToken('Model pipeline handler'),\n    useFactory: createModelSource,\n    deps: [ItemModel],\n  },\n};\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { pluck } from 'rxjs/operators';\nimport { CommunicationDefinition, serializerDeserializer } from '@backbase/communication-property';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\n\nimport { AppConfigService } from '../../../models/app-config.service';\nimport { PipelineSource, Source } from '../pipeline-interface';\nimport { createPipelineProcessorConfig, PipelineProcessorConfig } from '../pipeline-registry';\n\n/**\n * @deprecated Will be removed in v7.0.0\n * A `PipelineProcessor` which can be used as a source for a component's\n * input.\n *\n * See `appConfigProcessorConfig` for configuration.\n */\nexport interface AppConfigSource extends PipelineSource<Property | undefined> {\n  /**\n   * @param configName the name of the app config property to read from\n   */\n  source: (configName: string) => Source<Property | undefined>;\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const createAppConfigSource = (appConfig: AppConfigService): PipelineSource<Property | undefined> => ({\n  source: (configName: string) => (): Observable<Property> => appConfig.getConfig().pipe(pluck(configName)),\n});\n\nconst TAG: 'app-config' = 'app-config';\n\n/**\n * @deprecated Will be removed in v7.0.0\n * AppConfig Communication Transport\n *\n * Can be used in standalone development to configure communication using AppConfig\n */\nexport class AppConfig {\n  /**\n   * Generate a serialized communication configuration suitable for use as a Widget Input property value.\n   *\n   * @param group The name of the communication group to which the Input belongs\n   */\n  static toProperty(group: string): string {\n    return serializerDeserializer.toProperty(new CommunicationDefinition(TAG, group));\n  }\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Configure the `AppConfigSource`.\n *\n * Use the `AppConfig.toProperty` helper to configure this handler.\n *\n * @usageNotes\n *\n * ```json\n * {\n *   \"input.myInput\": \"AppConfig.toProperty(configPropertyName)\", // read the value of application configuration\n * }\n * ```\n */\nexport const appConfigProcessorConfig: PipelineProcessorConfig = createPipelineProcessorConfig(TAG, {\n  provide: new InjectionToken('Application configuration pipeline handler'),\n  useFactory: createAppConfigSource,\n  deps: [AppConfigService],\n});\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PipelineSink, Sink } from '../pipeline-interface';\nimport { PipelineProcessorConfig } from '../pipeline-registry';\n\nexport class UrlSinkNavigator {\n  go(url: string): void {\n    window.location.href = url;\n  }\n}\n\n/**\n * A `PipelineProcessor` which can be used as a sink\n * to navigate to a URL when a component outputs.\n *\n * The value of the stream can be passed as a query parameter\n * if the `paramName` is set.\n *\n * See `urlProcessorConfig` for configuration.\n */\nexport interface UrlSink extends PipelineSink<string | undefined> {\n  /**\n   * @param url The full URL to navigate to\n   * @param paramName An optional param to pass in the query string\n   */\n  sink: (url: string, paramName?: string) => Sink<string | undefined>;\n}\n\nexport const createUrlSink = (navigator: UrlSinkNavigator = new UrlSinkNavigator()): UrlSink => ({\n  sink: (url: string, paramName?: string) => (stdin: Observable<string | undefined>) => {\n    stdin.subscribe((payload: string | undefined) => {\n      navigator.go(navigationUrlWithParam(url, paramName, payload));\n    });\n  },\n});\n\nfunction navigationUrlWithParam(navigationUrl: string, paramName?: string, param?: string) {\n  if (!paramName || !param) {\n    return navigationUrl;\n  }\n  const paramSeparator = navigationUrl.indexOf('?') === -1 ? '?' : '&';\n  return `${navigationUrl}${paramSeparator}${paramName}=${param}`;\n}\n\n/**\n * Configure the `UrlSink`.\n *\n * Use the string 'url' to configure this handler.\n *\n * @usageNotes\n *\n * ```json\n * {\n *   \"output.myOutput1\": \"url http://www.google.com/\", // navigate without param\n *   \"output.myOutput2\": \"url http://www.google.com/ query\" // navigate with param\n * }\n * ```\n */\nexport const urlProcessorConfig: PipelineProcessorConfig<'url'> = {\n  name: 'url',\n  provider: {\n    provide: new InjectionToken('Url pipeline handler'),\n    useFactory: createUrlSink,\n    deps: [],\n  },\n};\n","import { InjectionToken } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PipelineSink, Sink, Source, PipelineSource } from '../pipeline-interface';\nimport { createPipelineProcessorConfig, PipelineProcessorConfig } from '../pipeline-registry';\nimport { getRouteParam } from './route-param';\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Path fragment\n */\nexport type RoutePath = string;\n\nconst TAG: 'router.navigate' = 'router.navigate';\n\nconst isDefined = <T>(param: undefined | T): param is T => param !== undefined;\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const PARAM_PLACEHOLDER_BUILDER = Symbol('Param Placeholder Builder');\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Placeholder to use for a named optional matrix param in `RouterNavigate`.\n *\n * This class is private. Use `RouterNavigateSink.param` to create a placeholder.\n */\nexport class RouterNavigateParamPlaceholder {\n  private constructor(public readonly paramName: string) {}\n\n  /**\n   * @internal\n   */\n  static [PARAM_PLACEHOLDER_BUILDER](name: string) {\n    return new RouterNavigateParamPlaceholder(name);\n  }\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Serialize the command generated with TS to pipeline source argument strings for the model.\n *\n * - Path commands are serialized as the path string.\n * - Single named optional params are serialzed as {paramName}\n * @param commands\n */\nexport const serializeCommands = (commands: Array<RoutePath | RouterNavigateParamPlaceholder>): Array<string> => {\n  // Validate that there is only max one placeholder\n  if (commands.filter(command => command instanceof RouterNavigateParamPlaceholder).length > 1) {\n    throw new Error('RouterNavigate: Only a single placeholder can be configured');\n  }\n\n  return commands.map(command => {\n    if (command instanceof RouterNavigateParamPlaceholder) {\n      return `{${command.paramName}}`;\n    } else {\n      return command;\n    }\n  });\n};\n\n/**\n * Deserialize the pipeline string arguments to commands for Router.navigate.\n * @param commands\n */\nconst deserializeCommands = (commands: Array<string>): Array<RoutePath | RouterNavigateParamPlaceholder> =>\n  commands.map(command => {\n    const paramNameMatches = command.match(/^{([^}]+)}$/);\n    if (!paramNameMatches) {\n      return command;\n    }\n    return RouterNavigateParamPlaceholder[PARAM_PLACEHOLDER_BUILDER](paramNameMatches[1]);\n  });\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Helper to configure output properties to write to the `RouterNavigateStore`\n *\n * @usageNotes\n *\n * To navigate like:\n *\n * ```ts\n * myOutput.subscribe(() => Router.navigate(['items']);)\n * ```\n *\n * Configure your model like:\n *\n * ```json\n *  {\n *   \"name\": \"widget-a\",\n *   \"properties\": {\n *     \"output.myOutput\": RouterNavigateSink.navigate(['items']),\n *   }\n * }\n * ```\n *\n * To navigate to nested paths like:\n *\n * ```ts\n * myOutput.subscribe(() => Router.navigate(['dashboard', 'transactions']);)\n * ```\n *\n * Configure your model like:\n *\n * ```json\n *  {\n *   \"name\": \"widget-a\",\n *   \"properties\": {\n *     \"output.myOutput\": RouterNavigateSink.navigate(['dashboard', 'transactions']),\n *   }\n * }\n * ```\n *\n * To navigate passing [optional route\n * params](https://angular.io/guide/router-tutorial-toh#heroes-list-optionally-selecting-a-hero),\n * eg in Angular it would be:\n *\n * ```ts\n * heroId.subscribe((heroId) => Router.navigate(['heroes', { id: heroId }]));\n * ```\n *\n * Configure your model like:\n *\n * ```json\n * {\n *   \"output.heroId\": RouterNavigateSink.navigate(['heroes', RouterNavigateSink.param('id')]),\n * }\n * ```\n *\n * To read a param you can connect an input to the `RouterNavigateSource`.\n */\nexport class RouterNavigateSink {\n  /**\n   * Generate a serialized `PipelineSink` configuration suitable for use as a Widget Output property value.\n   *\n   * @param commands The commands to use for navigation.\n   */\n  static navigate(commands: Array<RoutePath | RouterNavigateParamPlaceholder>): string {\n    return `${TAG} ${serializeCommands(commands).join(' ')}`;\n  }\n\n  /**\n   * Create a param placeholder to use in a `RouterNavigateSink`.\n   *\n   * @param paramName\n   */\n  static param(paramName: string): RouterNavigateParamPlaceholder {\n    if (!paramName) {\n      throw new Error('RouterNavigateSink.param: paramName must be set');\n    }\n    return RouterNavigateParamPlaceholder[PARAM_PLACEHOLDER_BUILDER](paramName);\n  }\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Helper to configure input properties to read from the `RouterNavigateStore`\n *\n * @usageNotes\n *\n *\n * To read a param into an input property:\n *\n * ```json\n * {\n *   \"input.heroId\": RouterNavigateSource.param('id')\n * }\n * ```\n */\nexport class RouterNavigateSource {\n  /**\n   * Generate a serialized `PipelineSource` configuration suitable for use as a Widget Input property value.\n   *\n   * @param paramName The name of the param to read from the URL.\n   */\n  static param(paramName: string): string {\n    return `${TAG} ${paramName}`;\n  }\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * A `PipelineProcessor` which can be used as a sink to navigate like Angular's `Router.Navigate` does.\n *\n * The value of the stream can be passed as an optional parameter.\n *\n * It can also be used as a source to read the params into a widget's inputs.\n *\n * There are some known limitations to the navigate sink:\n *\n *  1. You can only navigate with the primary outlet, not named outlets.\n *  2. You cannot navigate to paths with required params, only optional (matrix) params.\n *  3. You can only pass a single param name/value.\n *  4. You can only pass a string/number value.\n *  5. If there are other outlets in the current activate route, they Will be removed.\n *\n * If you require a more complex navigation, it's recommended to create a simple sink\n * of your own. See `PipelineProcessor` and `PipelineProcessorConfig`.\n *\n * See `RouterNavigateSink` and `RouterNavigateSource` for configuration.\n */\nexport interface RouterNavigateStore extends PipelineSink<string | undefined>, PipelineSource<string | undefined> {\n  /**\n   * A `PipelineProcessor` sink which navigates to a URL using angular's `Router.navigate`.\n   *\n   * To configure an output property for this sink use `RouterNavigateSink`.\n   *\n   * @param commands An array of URL fragments with which to construct the new URL tree.\n   */\n  sink: (...commands: Array<string>) => Sink<string | undefined>;\n\n  /**\n   * A `PipelineProcessor` source which reads from a URL param.\n   *\n   * To configure an input property for this source use `RouterNavigateSource`.\n   *\n   * @param paramName\n   */\n  source: (paramName: string) => Source<string | undefined>;\n}\n\nconst matrixParam = (\n  param: RouterNavigateParamPlaceholder,\n  paramValue: string | undefined,\n): { [key: string]: string } | undefined =>\n  isDefined(paramValue) ? { [param.paramName]: `${paramValue}` } : paramValue;\n\n// Convert configured navigate commands to actual angular Router.navigate commands\nconst navigateCommands = (\n  commands: Array<RoutePath | RouterNavigateParamPlaceholder>,\n  paramValue: string | undefined,\n): Array<string | { [key: string]: string }> =>\n  commands\n    .map(command => (command instanceof RouterNavigateParamPlaceholder ? matrixParam(command, paramValue) : command))\n    .filter(isDefined);\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const createRouterNavigateStore = (router: Router, activatedRoute: ActivatedRoute): RouterNavigateStore => ({\n  sink: (...serializedCommands) => {\n    const commands = deserializeCommands(serializedCommands);\n    return stdin => {\n      stdin.subscribe(paramValue => {\n        router.navigate(navigateCommands(commands, paramValue));\n      });\n    };\n  },\n  source: (paramName: string) => () => getRouteParam(activatedRoute, paramName),\n});\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const routerNavigateProcessorConfig: PipelineProcessorConfig = createPipelineProcessorConfig(TAG, {\n  provide: new InjectionToken('Router.Navigate pipeline handler'),\n  useFactory: createRouterNavigateStore,\n  deps: [Router, ActivatedRoute],\n});\n","export interface Edge<S> {\n  value: S;\n}\n\n/**\n * @deprecated\n */\nexport class Graph<T, S> {\n  public vertexes: Set<T> = new Set();\n  public edges: Map<T, Map<T, Edge<S>>> = new Map();\n\n  public add(vertex: T): void {\n    this.vertexes.add(vertex);\n  }\n\n  public connect(from: T, to: T, value: S) {\n    this.add(from);\n    this.add(to);\n\n    let vertexEdges = this.edges.get(from);\n    if (vertexEdges === undefined) {\n      vertexEdges = new Map();\n      this.edges.set(from, vertexEdges);\n    }\n    vertexEdges.set(to, { value });\n  }\n\n  public getEdge(from: T, to: T): S | undefined {\n    const edges = this.edges.get(from);\n    const edge = edges === undefined ? undefined : edges.get(to);\n    return edge === undefined ? undefined : edge.value;\n  }\n}\n","import { Injectable, InjectionToken, Inject, Optional } from '@angular/core';\nimport { Graph } from '../../models/graph';\n\nexport type ClassId = string;\nexport type OutputName = string;\nexport type InputName = string;\n\nexport interface ComponentOutputConfig {\n  classId: ClassId;\n  outputName: OutputName;\n}\nexport interface ComponentInputConfig {\n  classId: ClassId;\n  inputName?: InputName;\n}\n\nexport interface CommunicationFlowConfig {\n  output: ComponentOutputConfig;\n  input: ComponentInputConfig;\n  mapPayload?: (payload: any) => any;\n}\n\nexport interface Flow {\n  output: OutputName;\n  input?: InputName;\n  map?: (payload: any) => any;\n}\n\nexport const CONFIG_FLOWS = new InjectionToken<Array<Array<CommunicationFlowConfig>>>(\n  '@backbase/foundation Communcation Flow Configuration',\n);\n\n@Injectable()\nexport class FlowsService {\n  private readonly transitions = new Graph<ClassId, Array<Flow>>();\n\n  constructor(\n    @Optional()\n    @Inject(CONFIG_FLOWS)\n    flowsConfig: // eslint-disable-next-line @typescript-eslint/array-type\n    Array<CommunicationFlowConfig>[] | null, // Angular doesn't like nested array types\n  ) {\n    if (flowsConfig !== null) {\n      flowsConfig.forEach(flows => {\n        flows.forEach(flow => {\n          this.addFlow(flow);\n        });\n      });\n    }\n  }\n\n  private addFlow(config: CommunicationFlowConfig) {\n    const currentEdge = this.transitions.getEdge(config.output.classId, config.input.classId);\n    const flow = {\n      output: config.output.outputName,\n      input: config.input.inputName,\n      map: config.mapPayload,\n    };\n    const edge = currentEdge ? [...currentEdge, flow] : [flow];\n    this.transitions.connect(config.output.classId, config.input.classId, edge);\n  }\n\n  public getFlows(\n    from: ClassId,\n    fromOutput: OutputName,\n    to: Array<ClassId>,\n    toInput: InputName | undefined,\n  ): Array<Flow> {\n    const flows = to.reduce(\n      (acc, classId) => [...acc, ...(this.transitions.getEdge(from, classId) || [])],\n      [] as Array<Flow>,\n    );\n\n    return flows.filter(\n      flow =>\n        flow.output === fromOutput && (toInput === undefined || flow.input === undefined || toInput === flow.input),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Flow, FlowsService } from './flows.service';\nimport { ӨItemNavigationService } from '../item-navigation.service';\nimport { ItemModel } from '../../models/item-model';\n\n@Injectable()\nexport class ItemTransitionService {\n  constructor(private readonly flows: FlowsService, private readonly navigationService: ӨItemNavigationService) {}\n\n  transition(\n    fromItem: ItemModel,\n    fromOutput: string,\n    toItem: ItemModel,\n    toInput: string | undefined,\n    ancestors: Array<ItemModel>,\n    payload: any,\n  ): Promise<boolean> {\n    // Deprecated\n    const flows = this.flows.getFlows(\n      fromItem.ɵclassId,\n      fromOutput,\n      [...ancestors.map(item => item.ɵclassId)],\n      toInput,\n    );\n    if (flows.length === 0) {\n      flows.push({ output: fromOutput, input: toInput });\n    }\n    const params = this.mapFlows(flows, toInput, payload);\n    return this.navigationService.navigateToItem(toItem.name, params);\n  }\n\n  private mapFlows(flows: Array<Flow>, toInput: string | undefined, payload: any): any {\n    return flows.reduce((acc, flow) => {\n      const inputName = toInput || flow.input || flow.output;\n      const value = flow.map ? flow.map(payload) : payload;\n      if (value === undefined) {\n        return acc; // @todo: should it be possible to \"clear\" a param with undefined?\n      }\n      // Note: if 2 flows map to the same input, the 2nd will overwrite\n      return {\n        ...acc,\n        [inputName]: value,\n      };\n    }, {});\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { PipelineProcessorConfig } from '../pipeline-registry';\nimport { ItemTransitionService } from '../../deprecated/item-transition.service';\nimport { PipelineSink } from '../pipeline-interface';\nimport { ItemModel, ItemModelTree } from '../../../models/item-model';\nimport { ӨRootContainerService } from '../../../models/root-container.service';\nimport { mergeMap, filter, map } from 'rxjs/operators';\n\nexport const pipeName = 'navigation';\n\nexport const navigationHandlerToken = new InjectionToken('Navigation handler');\n\nexport const createNavigationSink = (\n  rootContainer: ӨRootContainerService,\n  itemTransition: ItemTransitionService,\n  itemModel: ItemModel,\n): PipelineSink<string | undefined> => {\n  return {\n    sink: (outputName?: string, config?: string) => (stdin: Observable<string | undefined>) => {\n      if (outputName === undefined || config === undefined) {\n        return;\n      }\n      const [targetName, targetInput] = config.split('.') as [string, string | undefined];\n\n      const target$: Observable<ItemModelTree> = rootContainer.model.pipe(\n        mergeMap(tree => tree.find(item => item.name === targetName)),\n        filter((a: ItemModelTree | undefined): a is ItemModelTree => a !== undefined),\n      );\n      const targetAnscestors: Observable<Array<ItemModel>> = target$.pipe(\n        mergeMap(tree => tree.flatten()),\n        map(flatNodes => flatNodes.map(node => node.value)),\n      );\n      combineLatest([target$, targetAnscestors, stdin]).subscribe(([target, anscestors, payload]) =>\n        itemTransition.transition(itemModel, outputName, target.value, targetInput, anscestors, payload),\n      );\n    },\n  };\n};\n\nexport const navigationProcessorConfig: PipelineProcessorConfig = {\n  name: pipeName,\n  provider: {\n    provide: navigationHandlerToken,\n    useFactory: createNavigationSink,\n    deps: [ӨRootContainerService, ItemTransitionService, ItemModel],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { ItemModel, ItemModelTree } from './item-model';\nimport { ӨRootContainerService } from './root-container.service';\nimport { ObservableTree } from './tree';\n\n/**\n * The model of the item at the root of the SPA (ie: the app container).\n */\n@Injectable()\nexport class RootItemModelService {\n  constructor(private readonly rootModel: ӨRootContainerService) {}\n\n  /**\n   * Find an item by searching the tree of the SPA.\n   *\n   * Note: Because the model of the SPA can change, this method returns an observable.\n   *\n   * @param name The instance name of the item to find.\n   */\n  findByName(name: string): Observable<ItemModelTree | undefined> {\n    return this.find(model => model.name === name);\n  }\n\n  private find(predicate: (value: ItemModel) => boolean): Observable<ObservableTree<ItemModel> | undefined> {\n    return this.rootModel.model.pipe(switchMap(model => model.find(predicate)));\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { ItemModel } from '../../models/item-model';\nimport { ObservableTree } from '../../models/tree';\nimport { ItemRegistryService } from '../item-registry.service';\n\n/**\n * AreaComponent is a wrapper for ChromeComponent,\n * which defines the area for dynamic components rendering\n */\n@Component({\n  selector: 'bb-area',\n  template: `\n    <ng-container *ngFor=\"let item of children\">\n      <router-outlet *ngIf=\"isModule(item.value); else renderModel\"></router-outlet>\n      <ng-template #renderModel><bb-chrome [item]=\"item\"></bb-chrome></ng-template>\n      <ng-container> </ng-container\n    ></ng-container>\n  `,\n  styles: [':host { display: block; }'],\n})\nexport class AreaComponent {\n  /**\n   * name attribute of the area,\n   * represented also as a \"data-area\"\n   * attribute in the corresponding node\n   */\n  @HostBinding('attr.data-area')\n  @Input()\n  name = '0';\n\n  @Input() children: Array<ObservableTree<ItemModel>> = [];\n\n  constructor(private itemRegistry: ItemRegistryService) {}\n\n  /**\n   * @internal\n   */\n  isModule(model: ItemModel) {\n    return !!this.itemRegistry.getModuleLoader(model.ɵclassId);\n  }\n}\n","import { Router, ActivatedRoute, NavigationExtras, UrlTree, PRIMARY_OUTLET } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { ItemModel } from '../../models/item-model';\nimport { AbstractRouterConfigService } from '../config/abstract-router-config.service';\n\n@Injectable()\nexport class RouterService {\n  readonly outletName: Observable<string | undefined> = this.routerConfig.ɵitemOutletName(this.itemModel);\n\n  /**\n   * Backbase Angular Router abstraction.\n   * See https://angular.io/api/router/Router\n   *\n   * The purpose for Backbase abstracting around the default Angular Router is\n   * when linking a to a bb-router-outlet. The outlet name for a bb-router-outlet\n   * is dynamically generated by a property on the model, so you can use the\n   * Backbase Router service to automatically apply the outletName to the navigation\n   * commands.\n   *\n   * @param router Angular Router\n   * @param route Angular ActivatedRoute\n   * @param itemModel Model of the Backbase Widget or Container\n   */\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly itemModel: ItemModel,\n    private readonly routerConfig: AbstractRouterConfigService,\n  ) {}\n\n  /**\n   * Navigate based on the provided array of commands and a starting point.\n   * If no starting route is provided, the navigation is absolute.\n   * See Angular Router.navigate\n   */\n  navigate(commands: Array<any>, extras: NavigationExtras = {}): Promise<boolean> {\n    return this.createUrlTree(commands, extras).then(urlTree =>\n      this.router.navigateByUrl(this.router.serializeUrl(urlTree), extras),\n    );\n  }\n\n  /**\n   * Applies an array of commands to the current url tree and creates a new url tree.\n   * See Angular Router.createUrlTree\n   */\n  createUrlTree(commands: Array<any>, extras: NavigationExtras = {}): Promise<UrlTree> {\n    return this.outletName\n      .pipe(take(1))\n      .toPromise()\n      .then(outletName => this.outletCommands(outletName, commands))\n      .then(cmnds =>\n        this.router.createUrlTree(cmnds, {\n          relativeTo: this.route,\n          ...extras,\n        }),\n      );\n  }\n\n  private outletCommands(outletName: string | undefined, commands: Array<any>): Array<any> {\n    if (outletName == null || outletName === PRIMARY_OUTLET) {\n      return commands;\n    } else {\n      return [{ outlets: { [outletName]: commands } }];\n    }\n  }\n}\n","import { Injector, Provider, Injectable, StaticProvider } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ItemModelTree, ItemModel } from '../models/item-model';\nimport { RouterService } from '../routing/navigation/router.service';\n\nimport { FeaturesService } from '@backbase/foundation-ang/future';\nimport { ɵSTORE_BRANCH, ɵSTORE_DISPATCH_CHANNEL, StoreFactory, ɵStoreBroker } from '@backbase/foundation-ang/store';\nimport { PipelineRegistry } from '../communication/pipes/pipeline-registry';\nimport { InputBrokerService } from '../communication/item-io/input-broker.service';\nimport { OutputBrokerService } from '../communication/item-io/output-broker.service';\nimport { PipelineService } from '../communication/pipes/pipeline.service';\nimport { uniq } from '../models/array';\nimport { TemplateRegistry } from '../customizable/template-registry';\nimport { AbstractRouterConfigService } from '../routing/config/abstract-router-config.service';\n\n@Injectable()\nexport class ItemInjectorService {\n  constructor(private readonly inputBroker: InputBrokerService, private readonly outputBroker: OutputBrokerService) {}\n\n  createInjector(parent: Injector | undefined, item: ItemModelTree): Injector {\n    const widgetProvider: Provider = {\n      provide: ItemModel,\n      useValue: item.value,\n    };\n    const containerProvider: Provider = {\n      provide: ItemModelTree,\n      useValue: item,\n    };\n    const routerServiceProvider: StaticProvider = {\n      provide: RouterService,\n      deps: [Router, ActivatedRoute, ItemModel, AbstractRouterConfigService],\n    };\n\n    /**\n     * @todo: consider putting *all* configured handlers on the\n     * injector, instead of only handlers used based on the model.\n     *\n     * This would make it possible to create higher-order handlers\n     */\n    const communicationPipelineProviders: Array<StaticProvider> = uniq([\n      ...this.inputBroker.getItemProviders(item.value),\n      ...this.outputBroker.getItemProviders(item.value),\n    ]);\n    const pipelineService: StaticProvider = {\n      provide: PipelineService,\n      deps: [PipelineRegistry, Injector],\n    };\n\n    return Injector.create({\n      providers: [\n        widgetProvider,\n        containerProvider,\n        routerServiceProvider,\n        ...communicationPipelineProviders,\n        pipelineService,\n        {\n          provide: ɵSTORE_BRANCH,\n          useValue: item.value.name,\n        },\n        {\n          provide: ɵSTORE_DISPATCH_CHANNEL,\n          useValue: item.value.name,\n        },\n        {\n          provide: StoreFactory,\n          useClass: StoreFactory,\n          deps: [ɵStoreBroker, ɵSTORE_BRANCH, ɵSTORE_DISPATCH_CHANNEL, FeaturesService],\n        },\n        {\n          provide: TemplateRegistry,\n          useClass: TemplateRegistry,\n          deps: [],\n        },\n      ],\n      parent,\n    });\n  }\n}\n","import { Injectable, ComponentFactoryResolver, ComponentFactory } from '@angular/core';\nimport { ItemRegistryService } from './item-registry.service';\n\n@Injectable()\nexport class CombinedComponentFactoryResolver {\n  private readonly childResolvers = new Map<string, ComponentFactoryResolver>();\n  constructor(\n    private readonly itemRegistry: ItemRegistryService,\n    private readonly rootResolver: ComponentFactoryResolver,\n  ) {}\n\n  registerChildResolver(classId: string, resolver: ComponentFactoryResolver) {\n    this.childResolvers.set(classId, resolver);\n  }\n\n  resolveComponentFactory<T>(classId: string): ComponentFactory<T> {\n    const type = this.itemRegistry.getComponentValue(classId);\n    if (!type) {\n      throw new Error(`@backbase/foundation No component registered for ${classId}. Did you add it to the classMap?`);\n    }\n    const resolver = this.childResolvers.get(classId) || this.rootResolver;\n    return resolver.resolveComponentFactory(type);\n  }\n}\n","import { Compiler, Injector, NgModuleRef, Injectable, Inject, Optional, NgModuleFactory, Type } from '@angular/core';\nimport { hasDuplicates } from '../models/array';\nimport { ItemRegistryService } from './item-registry.service';\nimport { CombinedComponentFactoryResolver } from './combined-component-factory-resolver';\nimport { LazyComponentsConfig, LazyConfig, LAZY_MAP } from './lazy-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemLoaderService {\n  private readonly lazyComponentsConfig: Array<LazyComponentsConfig>;\n  constructor(\n    private readonly compiler: Compiler,\n    private readonly parentInjector: Injector,\n    private readonly itemRegistry: ItemRegistryService,\n    private readonly componentFactoryResolver: CombinedComponentFactoryResolver,\n    // @fixme: generate lazy map from the page model?\n    @Inject(LAZY_MAP)\n    @Optional()\n    lazyConfig: LazyConfig | null,\n  ) {\n    this.lazyComponentsConfig = lazyConfig\n      ? lazyConfig.filter((config): config is LazyComponentsConfig => !!(config as LazyComponentsConfig).components)\n      : [];\n\n    if (\n      hasDuplicates(\n        this.lazyComponentsConfig.reduce((acc, config) => [...acc, ...config.components], [] as Array<string>),\n      )\n    ) {\n      throw new Error(\n        '[LazyConfig] You have added one or more components inside multiple lazy loading bundles. ' +\n          \"This will make an impact on your app's performance. \" +\n          'Update your config to have one component included in only one bundle.',\n      );\n    }\n  }\n\n  /**\n   * Loads the module this class is in, and adds\n   * it to the global item registry, and global component\n   * resolver.\n   *\n   * @param classId\n   */\n  loadComponent(classId: string): Promise<void> {\n    if (this.itemRegistry.has(classId) || this.lazyComponentsConfig.length === 0) {\n      return Promise.resolve();\n    }\n\n    const foundBundle = this.lazyComponentsConfig.find(item => item.components.indexOf(classId) !== -1);\n    const callback = foundBundle ? foundBundle.loadChildren : undefined;\n\n    if (!callback) {\n      return Promise.resolve();\n    }\n\n    return callback()\n      .then(this.toModuleFactory.bind(this))\n      .then(this.loadModule.bind(this))\n      .then(this.registerModule.bind(this, classId));\n  }\n\n  private toModuleFactory(loadedItem: NgModuleFactory<unknown> | Type<unknown>): NgModuleFactory<unknown> {\n    // Depending on compiler, callback can return either module factory or the module itself.\n    return loadedItem instanceof NgModuleFactory ? loadedItem : this.compiler.compileModuleSync(loadedItem);\n  }\n\n  private loadModule(moduleFactory: NgModuleFactory<unknown>): NgModuleRef<unknown> {\n    return moduleFactory.create(this.parentInjector);\n  }\n\n  private registerModule(classId: string, ngModule: NgModuleRef<unknown>) {\n    this.registerComponentClass(classId, ngModule);\n    this.registerComponentFactoryResolver(classId, ngModule);\n  }\n\n  private registerComponentClass(classId: string, ngModule: NgModuleRef<unknown>) {\n    const childRegistry = ngModule.injector.get<ItemRegistryService>(ItemRegistryService);\n    const componentClass = childRegistry.getComponentValue(classId);\n    if (!componentClass) {\n      throw new Error(`@backbase/foundation No component registered for ${classId}. Did you add it to the classMap?`);\n    }\n    this.itemRegistry.add(classId, componentClass);\n  }\n\n  private registerComponentFactoryResolver(classId: string, ngModule: NgModuleRef<unknown>) {\n    this.componentFactoryResolver.registerChildResolver(classId, ngModule.componentFactoryResolver);\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  HostBinding,\n  Input,\n  ViewChild,\n  ViewContainerRef,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { ItemModel } from '../../models/item-model';\nimport { ObservableTree } from '../../models/tree';\nimport { ItemLifecycleService } from '../item-lifecycle.service';\nimport { ItemInjectorService } from '../item-injector.service';\nimport { ReplaySubject, Observable, Subject } from 'rxjs';\nimport { shareReplay, takeUntil, pairwise, startWith, withLatestFrom, last, switchMap, map } from 'rxjs/operators';\nimport { ItemLoaderService } from '../item-loader.service';\nimport { CombinedComponentFactoryResolver } from '../combined-component-factory-resolver';\n\nexport type ComponentItemModelTuple = [ComponentRef<any>, ObservableTree<ItemModel>];\n\n/**\n * ChromeComponent represents \"chrome element\" and\n * implements dynamic components rendering\n */\n@Component({\n  selector: 'bb-chrome',\n  template: ` <ng-container #vc></ng-container> `,\n})\nexport class ChromeComponent implements OnInit, OnDestroy {\n  /**\n   * Represents a container where View can be attached\n   */\n  @ViewChild('vc', { read: ViewContainerRef, static: true })\n  vcRef: ViewContainerRef | undefined;\n\n  private readonly gc$ = new Subject<void>();\n  private readonly itemValue = new ReplaySubject<ObservableTree<ItemModel>>(1);\n  private readonly component$: Observable<ComponentRef<any>> = this.itemValue.pipe(\n    switchMap(item => this.createComponent(item)),\n    shareReplay(1),\n  );\n  private readonly componentItemModelTuple: Observable<\n    ComponentItemModelTuple | [undefined, undefined]\n  > = this.component$.pipe(\n    withLatestFrom(this.itemValue),\n    map(([ref, item]): ComponentItemModelTuple | [undefined, undefined] =>\n      ref === undefined ? [undefined, undefined] : [ref, item],\n    ),\n    startWith<ComponentItemModelTuple | [undefined, undefined]>([undefined, undefined]),\n  );\n\n  /**\n   * data-chrome attribute instructs CXP to use this component as drop target area\n   */\n  @HostBinding('attr.data-chrome') name: string | undefined;\n\n  /**\n   * Setter (Input) for an item to be bootstrapped\n   * @param item Actual item to be bootstrapped\n   */\n  @Input()\n  set item(item: ObservableTree<ItemModel>) {\n    this.name = item.value.name;\n    this.itemValue.next(item);\n  }\n\n  /**\n   * ChromeComponent constructor\n   * @param componentFactoryResolver Factory which allows chrome component to resolve items\n   * @param injectors Injectors map\n   * @param components Components Registry Service\n   */\n  constructor(\n    private readonly itemLifecycle: ItemLifecycleService,\n    private readonly itemInjector: ItemInjectorService,\n    private readonly itemLoader: ItemLoaderService,\n    private readonly componentFactoryLoader: CombinedComponentFactoryResolver,\n  ) {}\n\n  ngOnInit() {\n    // Insert component on create\n    this.componentItemModelTuple\n      .pipe(pairwise(), takeUntil(this.gc$))\n      .subscribe(([[oldComponent, oldItemValue], [component, item]]) => {\n        if (!this.vcRef || !component || !item) {\n          return;\n        }\n        if (oldComponent && oldItemValue) {\n          this.itemLifecycle.onRemove(oldItemValue, oldComponent);\n        }\n\n        this.vcRef.clear();\n        this.vcRef.insert(component.hostView);\n        this.itemLifecycle.onCreate(item, component);\n        component.changeDetectorRef.markForCheck();\n      });\n  }\n\n  ngOnDestroy() {\n    // Cleanup on destroy\n    this.componentItemModelTuple.pipe(takeUntil(this.gc$), last()).subscribe(([component, item]) => {\n      if (item && component) {\n        this.itemLifecycle.onRemove(item, component);\n      }\n    });\n\n    this.gc$.next();\n    this.gc$.complete();\n  }\n\n  /**\n   * inner helper function which creates components\n   * @param item item to be created\n   */\n  private createComponent(item: ObservableTree<ItemModel>): Promise<ComponentRef<any>> {\n    return this.itemLoader\n      .loadComponent(item.value.ɵclassId)\n      .then(() => this.componentFactoryLoader.resolveComponentFactory(item.value.ɵclassId))\n      .then(componentFactory => {\n        // FIXME: @deprecated parentInjector (no replacement)\n        const injector = this.itemInjector.createInjector(this.vcRef && this.vcRef.parentInjector, item);\n\n        // Create the component\n        return componentFactory.create(injector);\n      });\n  }\n}\n","import { ComponentRef, Injector } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpErrorResponse,\n  HttpClient,\n} from '@angular/common/http';\n\nimport { Observable, throwError, race } from 'rxjs';\nimport { switchMap, catchError, map, take } from 'rxjs/operators';\nimport { StepUpService, StepUpComponent, StepUpComponentType } from './stepup.service';\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type ShouldInterceptStepUpCallback = (response: HttpErrorResponse) => boolean;\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface ShouldInterceptStepUpConfig {\n  /**\n   * Step-up authentication is triggered when the response `statusCode` matches the one defined by this option.\n   * Default: `401`.\n   */\n  statusCode: number;\n  /**\n   * Step-up authentication is triggered when this header is present in a error response in combination with `statusCode` check\n   * Default: `WWW-Authenticate`.\n   */\n  headerAttribute: string;\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const createInterceptCallback = (\n  interceptConfig: ShouldInterceptStepUpConfig,\n): ShouldInterceptStepUpCallback => (responseError: HttpErrorResponse): boolean => {\n  return (\n    responseError.status === interceptConfig.statusCode &&\n    responseError.headers.get(interceptConfig.headerAttribute) !== null\n  );\n};\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const isInterceptCallback = (\n  interceptConfig: ShouldInterceptStepUpCallback | ShouldInterceptStepUpConfig,\n): interceptConfig is ShouldInterceptStepUpCallback => typeof interceptConfig === 'function';\n\n/**\n * @deprecated Will be removed in v7.0.0\n * The step-up interceptor configuration interface.\n * Step-up authentication provides a higher level of assurance that\n * a person is who they claim to be. When a user tries to perform a task,\n * they are challenged to produce additional forms of authentication.\n */\nexport interface StepUpInterceptorConfig {\n  /**\n   * Configuration for the retry requests of the stepup authentication mechanism.\n   */\n  retryRequests: {\n    /**\n     * The key of the header which is added to the retry request.\n     * The value for this header will be determined by the payload of an event\n     * emitted by the `StepUpComponentType.complete`. See the `StepUpComponentType` interface.\n     * Default: `X-MFA`\n     */\n    headerAttribute: string;\n  };\n  /**\n   * If this header is present, on a error response and it matches statusCode, it will trigger a step-up mechanism\n   */\n  interceptResponses: ShouldInterceptStepUpCallback | ShouldInterceptStepUpConfig;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Configuration interface for the step-up authentication.\n */\nexport type StepUpConfig = StepUpInterceptorConfig & {\n  /**\n   * Step-up component class. When a step-up request is intercepted this is the\n   * component which will be displayed to resolve the step-up authentication.\n   */\n  mediatorComponentClass: StepUpComponentType;\n};\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const DEFAULT_STEPUP_CONFIG: StepUpInterceptorConfig = {\n  retryRequests: {\n    headerAttribute: 'X-MFA',\n  },\n  interceptResponses: {\n    statusCode: 401,\n    headerAttribute: 'WWW-Authenticate',\n  },\n};\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type StepupComponentCompleteEvent = ['complete', string];\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type StepupComponentCancelEvent = ['cancel', undefined];\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type StepupComponentEvents = StepupComponentCancelEvent | StepupComponentCompleteEvent;\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport class StepUpInterceptor implements HttpInterceptor {\n  /**\n   * @deprecated Should not be public\n   * @todo convert to a local variable within  the intercept handler\n   */\n  mediatorComponent: ComponentRef<StepUpComponent> | undefined;\n\n  constructor(\n    private readonly stepupService: StepUpService,\n    private readonly config: StepUpConfig,\n    private readonly injector: Injector,\n  ) {}\n\n  intercept<R, T>(req: HttpRequest<R>, next: HttpHandler): Observable<HttpEvent<T>> {\n    const shouldIntercept: ShouldInterceptStepUpCallback = isInterceptCallback(this.config.interceptResponses)\n      ? this.config.interceptResponses\n      : createInterceptCallback(this.config.interceptResponses);\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse): Observable<never> | Observable<HttpEvent<T>> => {\n        if (!shouldIntercept(error)) {\n          // if it's an error which shouldn't be intercepted propagate the error\n          // to as if it wasn't intercepted at all.\n          return throwError(error);\n        }\n        this.mediatorComponent = this.mediatorComponent ?? this.stepupService.stepupComponent;\n\n        // Errors which are to be intercepted should be \"paused\" and the stream will be handled according\n        // to the event coming from a mediator component. On complete event we are going to retry the request\n        // while if any other event was fired by the mediator component, we proceed with the error as usual\n        const handleMediatorComponentEvent = ([event, token]: StepupComponentEvents): Observable<HttpEvent<T>> => {\n          if (event === 'complete' && token) {\n            // The HttpClient cannot be injected because it is a circular dependency, so we must lazily get it only when required.\n            const http = this.injector.get<HttpClient>(HttpClient);\n            return http.request<T>(req.clone({ setHeaders: { [this.config.retryRequests.headerAttribute]: token } }));\n          } else {\n            return throwError(error);\n          }\n        };\n\n        // we listen to an event from mediator component in order to be able to amend\n        // requests \"chain\", so we can repeat the request or just propagate the error\n        const mediatorComponentResponse = race<StepupComponentEvents>(\n          this.mediatorComponent.instance.complete.pipe(\n            map<string, StepupComponentCompleteEvent>(value => ['complete', value]),\n          ),\n          this.mediatorComponent.instance.cancel.pipe(\n            map<any, StepupComponentCancelEvent>(() => ['cancel', undefined]),\n          ),\n        ).pipe(take(1), switchMap(handleMediatorComponentEvent));\n\n        // and we trigger the component to open\n        this.mediatorComponent.instance.open(error);\n        return mediatorComponentResponse;\n      }),\n    );\n  }\n}\n","import {\n  ComponentRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ComponentFactory,\n  Injectable,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n} from '@angular/core';\nimport { StepUpConfig, DEFAULT_STEPUP_CONFIG } from './stepup.interceptor';\nimport { CustomStepUpConfig } from './stepup.module';\nimport { HttpErrorResponse } from '@angular/common/http';\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const STEPUP_CONFIG = new InjectionToken<StepUpConfig>('Custom step-up configuration injection token');\n\n/**\n * @deprecated Will be removed in v7.0.0\n * The interface which should be implemented by a stepUp component\n */\nexport interface StepUpComponent {\n  /**\n   * Indicates that the secret has been provided by the user via the `StepUpComponent`.\n   * After it emits the retry request will be sent to the API endpoint.\n   */\n  complete: EventEmitter<string>;\n  /**\n   * The StepUpComponent instance emits this cancel event to trigger standard behaviour.\n   * That is, there is no retry request and HttpEvent is propagated to the next interceptor in the chain.\n   */\n  cancel: EventEmitter<any>;\n  /**\n   * The method of the `StepUpComponent` which is called when a request is intercepted.\n   * Trigger this method should show the component where user can provide a second step \"secret\".\n   */\n  open: (response: HttpErrorResponse) => void;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * The type which defines the StepUpComponent signature\n */\nexport type StepUpComponentType = new (...args: Array<any>) => StepUpComponent;\n/**\n * @deprecated Will be removed in v7.0.0\n */\n@Injectable()\nexport class StepUpService {\n  private stepupComponentRef: ComponentRef<StepUpComponent> | undefined;\n  private readonly stepupConfig: StepUpConfig;\n\n  constructor(\n    private readonly resolver: ComponentFactoryResolver,\n    @Inject(STEPUP_CONFIG) stepupConfigParam: CustomStepUpConfig,\n  ) {\n    this.stepupConfig = { ...DEFAULT_STEPUP_CONFIG, ...stepupConfigParam };\n  }\n\n  get stepupComponent(): ComponentRef<StepUpComponent> {\n    if (this.stepupComponentRef) {\n      return this.stepupComponentRef;\n    }\n    throw new Error('No stepupComponent defined');\n  }\n\n  createStepUpComponent(stepupContainer: ViewContainerRef) {\n    stepupContainer.clear();\n    const factory: ComponentFactory<StepUpComponent> = this.resolver.resolveComponentFactory(\n      this.stepupConfig.mediatorComponentClass,\n    );\n    this.stepupComponentRef = stepupContainer.createComponent(factory);\n  }\n}\n","import {\n  ComponentRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ComponentFactory,\n  Injectable,\n  Inject,\n  InjectionToken,\n} from '@angular/core';\n\n/**\n * The session timeout configuration.\n * Allows the application to manage the session timeout component class and inactivity modal time.\n */\nexport interface SessionTimeoutConfig {\n  /**\n   * The name of the component to be used for stepup mechanism\n   */\n  sessionTimeoutComponentClass: SessionTimeoutComponentType;\n  /**\n   * The time before session expiry that the modal should appear in seconds\n   */\n  inactivityModalTime: number;\n}\n\nexport const SESSION_TIMEOUT_CONFIG = new InjectionToken<SessionTimeoutConfig>(\n  'Custom session timeout configuration injection token',\n);\n\n/**\n * The interface for a SessionTimeoutComponent\n */\nexport interface SessionTimeoutComponent {\n  /**\n   * The default time in seconds to open the session timeout modal before session expiry.\n   * This will be overwritten if you set `maxInactivityDuration` in the experience configuration\n   */\n  inactivityModalTime: number;\n}\n\n/**\n * The session timeout component type, set to SessionTimeoutComponent\n */\nexport type SessionTimeoutComponentType = new (...args: Array<any>) => SessionTimeoutComponent;\n\n/**\n * The session timeout service creates a session timeout component instance within the root.\n */\n@Injectable()\nexport class SessionTimeoutService {\n  private sessionTimeoutComponentRef: ComponentRef<SessionTimeoutComponent> | undefined;\n\n  constructor(\n    private readonly resolver: ComponentFactoryResolver,\n    @Inject(SESSION_TIMEOUT_CONFIG) private readonly sessionTimeoutConfig: SessionTimeoutConfig,\n  ) {}\n\n  get sessionTimeoutComponent(): ComponentRef<SessionTimeoutComponent> {\n    if (this.sessionTimeoutComponentRef) {\n      return this.sessionTimeoutComponentRef;\n    }\n    throw new Error('No sessionTimeoutComponent defined');\n  }\n\n  createSessionTimeoutComponent(sessionTimeoutContainer: ViewContainerRef) {\n    sessionTimeoutContainer.clear();\n    const factory: ComponentFactory<SessionTimeoutComponent> = this.resolver.resolveComponentFactory(\n      this.sessionTimeoutConfig.sessionTimeoutComponentClass,\n    );\n    this.sessionTimeoutComponentRef = sessionTimeoutContainer.createComponent(factory);\n    this.sessionTimeoutComponentRef.instance.inactivityModalTime = this.sessionTimeoutConfig.inactivityModalTime;\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Optional,\n  OnInit,\n  OnDestroy,\n  NgZone,\n  ViewChild,\n  ViewContainerRef,\n  Inject,\n} from '@angular/core';\nimport { flatMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport { ItemModel } from '../../models/item-model';\nimport { ObservableTree } from '../../models/tree';\nimport { ӨRootContainerService } from '../../models/root-container.service';\nimport { ӨItemNavigationService } from '../../communication/item-navigation.service';\nimport { StepUpService } from '../../stepup/stepup.service';\nimport { SessionTimeoutService } from '../../session-timeout/session-timeout.service';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\n\n@Component({\n  selector: 'bb-root',\n  template: `\n    <bb-area [children]=\"children | async\"></bb-area>\n    <template #stepupContainer></template>\n    <template #sessionTimeoutContainer></template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RootComponent implements OnInit, OnDestroy {\n  @ViewChild('stepupContainer', { read: ViewContainerRef, static: true })\n  readonly stepupContainer: ViewContainerRef | undefined;\n  @ViewChild('sessionTimeoutContainer', { read: ViewContainerRef, static: true })\n  readonly sessionTimeoutContainer: ViewContainerRef | undefined;\n\n  readonly children: Observable<Array<ObservableTree<ItemModel>>> = this.rootContainer.model.pipe(\n    flatMap(state => state.children),\n  );\n\n  constructor(\n    private readonly rootContainer: ӨRootContainerService,\n    private readonly zone: NgZone,\n    private readonly itemNavigation: ӨItemNavigationService,\n    @Optional()\n    @Inject(PUBSUB)\n    private readonly events?: Pubsub,\n    @Optional() private readonly stepupService?: StepUpService,\n    @Optional() private readonly sessionTimeoutService?: SessionTimeoutService,\n  ) {}\n\n  readonly eventListener: EventListener = ({ name }: any) => {\n    // [FIXME] This zone should almost certainly be handled in the EventBus, but can't be currently\n    // because we only provide an interface not a wrapper\n    this.zone.run(() => {\n      this.itemNavigation.navigateToItem(name, {});\n    });\n  };\n\n  ngOnInit() {\n    if (this.events) {\n      this.events.subscribe('navigation.viewItem', this.eventListener);\n    }\n    if (this.stepupService && this.stepupContainer) {\n      this.stepupService.createStepUpComponent(this.stepupContainer);\n    }\n    if (this.sessionTimeoutService && this.sessionTimeoutContainer) {\n      this.sessionTimeoutService.createSessionTimeoutComponent(this.sessionTimeoutContainer);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.events) {\n      this.events.unsubscribe('navigation.viewItem', this.eventListener);\n    }\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  HostListener,\n  Attribute,\n  Renderer2,\n  ElementRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router, ActivatedRoute, NavigationEnd, UrlTree } from '@angular/router';\nimport { LocationStrategy } from '@angular/common';\nimport { RouterService } from '../navigation/router.service';\n\n// This is declared in `@angular/router/src/config`, but doesn't seem to be exported\nexport type QueryParamsHandling = 'merge' | 'preserve' | '';\n\nconst toCommandsArray = (commands: Array<any> | string): Array<any> => {\n  if (commands != null) {\n    return Array.isArray(commands) ? commands : [commands];\n  } else {\n    return [];\n  }\n};\n\n@Directive({ selector: 'a[bbRouterLink]' })\nexport class RouterLinkWithHrefDirective implements OnChanges, OnDestroy {\n  @HostBinding('attr.target')\n  @Input()\n  target: string | undefined;\n\n  @Input() queryParams: { [k: string]: any } | undefined;\n  @Input() fragment: string | undefined;\n  @Input() queryParamsHandling: QueryParamsHandling | undefined;\n  @Input() preserveFragment: boolean | undefined;\n  @Input() skipLocationChange: boolean | undefined;\n  @Input() replaceUrl: boolean | undefined;\n\n  private commands: Array<any> = [];\n  private readonly subscriptions: Array<Subscription>;\n  private readonly preserve: boolean | undefined;\n\n  constructor(\n    private readonly router: Router,\n    private readonly bbRouter: RouterService,\n    private readonly locationStrategy: LocationStrategy,\n    private readonly el: ElementRef,\n    private readonly renderer: Renderer2,\n  ) {\n    this.subscriptions = [\n      router.events.subscribe(s => {\n        if (s instanceof NavigationEnd) {\n          this.updateTargetUrlAndHref();\n        }\n      }),\n    ];\n  }\n\n  @Input()\n  set bbRouterLink(commands: Array<any> | string) {\n    this.commands = toCommandsArray(commands);\n  }\n\n  ngOnChanges() {\n    this.updateTargetUrlAndHref();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  @HostListener('click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'])\n  onClick(button: number, ctrlKey: boolean, metaKey: boolean, shiftKey: boolean): boolean {\n    if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n      return true;\n    }\n\n    if (typeof this.target === 'string' && this.target !== '_self') {\n      return true;\n    }\n\n    const extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n    };\n    this.urlTree.then(urlTree => {\n      this.router.navigateByUrl(this.router.serializeUrl(urlTree), extras);\n    });\n    return false;\n  }\n\n  private updateTargetUrlAndHref(): void {\n    this.urlTree.then(urlTree => {\n      this.renderer.setAttribute(\n        this.el.nativeElement,\n        'href',\n        this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(urlTree)),\n      );\n    });\n  }\n\n  get urlTree(): Promise<UrlTree> {\n    return this.bbRouter.createUrlTree(this.commands, {\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      ...(attrBoolValue(this.preserve) ? { queryParamsHandling: 'preserve' } : {}),\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\n}\n\n@Directive({ selector: ':not(a)[bbRouterLink]' })\nexport class RouterLinkDirective {\n  @Input() queryParams: { [k: string]: any } | undefined;\n  @Input() fragment: string | undefined;\n  @Input() queryParamsHandling: QueryParamsHandling | undefined;\n  @Input() preserveFragment: boolean | undefined;\n  @Input() skipLocationChange: boolean | undefined;\n  @Input() replaceUrl: boolean | undefined;\n  private commands: Array<any> = [];\n  private readonly preserve: boolean | undefined;\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    @Attribute('tabindex') tabIndex: string,\n    renderer: Renderer2,\n    el: ElementRef,\n    private readonly bbRouter: RouterService,\n  ) {\n    if (tabIndex == null) {\n      renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n    }\n  }\n\n  @Input()\n  set bbRouterLink(commands: Array<any> | string) {\n    this.commands = toCommandsArray(commands);\n  }\n\n  @HostListener('click')\n  onClick(): boolean {\n    const extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n    };\n\n    this.urlTree.then(urlTree => {\n      this.router.navigateByUrl(this.router.serializeUrl(urlTree), extras);\n    });\n    return true;\n  }\n\n  get urlTree(): Promise<UrlTree> {\n    return this.bbRouter.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      ...(attrBoolValue(this.preserve) ? { queryParamsHandling: 'preserve' } : {}),\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\n}\n\nfunction attrBoolValue(s: any): boolean {\n  return s === '' || !!s;\n}\n","import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  Renderer2,\n  Optional,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RouterLinkDirective, RouterLinkWithHrefDirective } from './router-link.directive';\nimport { Router, NavigationEnd, Event } from '@angular/router';\n\n/**\n * Router link options\n */\nexport interface RouterLinkActiveOptions {\n  /**\n   * If it is `true`, the directive will add the classes only when the url matches the link exactly.\n   * Default: `false`\n   */\n  exact?: boolean;\n  /**\n   * If it is defined, active link will get `aria-current` attribute set to the value provided and all\n   * the other links will get `aria-current` set to `'false'`.\n   * Default: `undefined`\n   */\n  ariaCurrent?: string;\n}\n\n/**\n *\n * @description\n *\n * Lets you add a CSS class and `aria-current` attribute to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class and `aria-current` attribute to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a bbRouterLink=\"/user/bob\" bbRouterLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class Will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a bbRouterLink=\"/user/bob\" bbRouterLinkActive=\"class1 class2\">Bob</a>\n * <a bbRouterLink=\"/user/bob\" [bbRouterLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a bbRouterLink=\"/user/bob\" bbRouterLinkActive=\"active-link\" [bbRouterLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive to set `aria-current` attribute for all links. If option is defined,\n * value will be added to the active link and `aria-current=\"false\"` to the other links.\n *\n * ```\n * <a bbRouterLink=\"/user/bob\" bbRouterLinkActive=\"active-link\" [bbRouterLinkActiveOptions]=\"{ariaCurrent: 'page'}\">\n *  Bob\n * </a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a bbRouterLink=\"/user/bob\" bbRouterLinkActive #rla=\"bbRouterLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div bbRouterLinkActive=\"active-link\" [bbRouterLinkActiveOptions]=\"{exact: true}\">\n *   <a bbRouterLink=\"/user/jim\">Jim</a>\n *   <a bbRouterLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * @ngModule RouterModule\n *\n */\n@Directive({\n  selector: '[bbRouterLinkActive]',\n  exportAs: 'bbRouterLinkActive',\n})\nexport class RouterLinkActiveDirective implements OnChanges, OnDestroy, AfterContentInit {\n  @ContentChildren(RouterLinkDirective, { descendants: true })\n  links: QueryList<RouterLinkDirective> | undefined;\n  @ContentChildren(RouterLinkWithHrefDirective, { descendants: true })\n  linksWithHrefs: QueryList<RouterLinkWithHrefDirective> | undefined;\n\n  private classes: Array<string> = [];\n  private readonly subscription: Subscription;\n  public readonly isActive: boolean = false;\n\n  @Input() bbRouterLinkActiveOptions: RouterLinkActiveOptions = {};\n\n  constructor(\n    private readonly router: Router,\n    private readonly element: ElementRef,\n    private readonly renderer: Renderer2,\n    @Optional() private readonly link?: RouterLinkDirective,\n    @Optional() private readonly linkWithHref?: RouterLinkWithHrefDirective,\n  ) {\n    this.subscription = router.events.subscribe((s: Event) => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n\n  ngAfterContentInit(): void {\n    if (!this.links || !this.linksWithHrefs) return;\n    this.links.changes.subscribe(_ => this.update());\n    this.linksWithHrefs.changes.subscribe(_ => this.update());\n    this.update();\n  }\n\n  @Input()\n  set bbRouterLinkActive(data: Array<string> | string) {\n    const classes = Array.isArray(data) ? data : data.split(' ');\n    this.classes = classes.filter(c => !!c);\n  }\n\n  ngOnChanges(): void {\n    this.update();\n  }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  private updateClasses(hasActiveLinks: boolean) {\n    this.classes.forEach(c => {\n      if (hasActiveLinks) {\n        this.renderer.addClass(this.element.nativeElement, c);\n      } else {\n        this.renderer.removeClass(this.element.nativeElement, c);\n      }\n    });\n  }\n\n  private updateAria(hasActiveLinks: boolean) {\n    const ariaAttr = 'aria-current';\n    if (this.bbRouterLinkActiveOptions.ariaCurrent) {\n      this.renderer.setAttribute(\n        this.element.nativeElement,\n        ariaAttr,\n        hasActiveLinks ? this.bbRouterLinkActiveOptions.ariaCurrent : 'false',\n      );\n    } else {\n      this.renderer.removeAttribute(this.element.nativeElement, ariaAttr);\n    }\n  }\n\n  private update(): void {\n    if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;\n    this.hasActiveLinks().then(hasActiveLinks => {\n      if (this.isActive !== hasActiveLinks) {\n        (this as any).isActive = hasActiveLinks;\n        this.updateAria(hasActiveLinks);\n        this.updateClasses(hasActiveLinks);\n      }\n    });\n  }\n\n  private isLinkActive(router: Router): (link: RouterLinkDirective | RouterLinkWithHrefDirective) => Promise<boolean> {\n    return (link: RouterLinkDirective | RouterLinkWithHrefDirective): Promise<boolean> =>\n      link.urlTree.then(urlTree => router.isActive(urlTree, !!this.bbRouterLinkActiveOptions.exact));\n  }\n\n  private hasActiveLinks(): Promise<boolean> {\n    if (!this.links || !this.linksWithHrefs) return Promise.resolve(false);\n    return Promise.all([\n      this.link ? this.isLinkActive(this.router)(this.link) : Promise.resolve(false),\n      this.linkWithHref ? this.isLinkActive(this.router)(this.linkWithHref) : Promise.resolve(false),\n      ...this.links.map(this.isLinkActive(this.router)),\n      ...this.linksWithHrefs.map(this.isLinkActive(this.router)),\n    ]).then((liveActives: Array<boolean>): boolean => liveActives.some(a => a));\n  }\n}\n","import {\n  Directive,\n  OnDestroy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  OnInit,\n  Output,\n  ComponentRef,\n  EventEmitter,\n} from '@angular/core';\nimport { RouterOutlet, ChildrenOutletContexts, Router, PRIMARY_OUTLET, Data, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { RouterService } from '../navigation/router.service';\n\nconst OUTLET_IS_NOT_INITIALIZED_ERROR = 'Outlet is not instantiated';\n\n/**\n * Includes the component associated with the current Route\n */\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'bb-router-outlet',\n  exportAs: 'bbOutlet',\n})\nexport class RouterOutletDirective implements OnInit, OnDestroy {\n  private outlet: RouterOutlet | undefined;\n  private nameValue: string | undefined;\n  private readonly destroy$ = new Subject();\n\n  private get name(): string {\n    return this.nameValue || PRIMARY_OUTLET;\n  }\n\n  /**\n   * A router outlet will emit an activate event any time a new component\n   * is being instantiated.\n   */\n  // eslint-disable-next-line  @angular-eslint/no-output-rename\n  @Output('activate') activateEvents = new EventEmitter<any>();\n\n  /**\n   * A router outlet will emit a deactivate event when the route component\n   * is being destroyed.\n   */\n  // eslint-disable-next-line  @angular-eslint/no-output-rename\n  @Output('deactivate') deactivateEvents = new EventEmitter<any>();\n\n  get isActivated(): boolean {\n    return this.outlet ? this.outlet.isActivated : false;\n  }\n\n  get component(): Object {\n    if (!this.outlet) {\n      throw new Error(OUTLET_IS_NOT_INITIALIZED_ERROR);\n    }\n    return this.outlet.component;\n  }\n\n  get activatedRoute(): ActivatedRoute {\n    if (!this.outlet) {\n      throw new Error(OUTLET_IS_NOT_INITIALIZED_ERROR);\n    }\n    return this.outlet.activatedRoute;\n  }\n\n  get activatedRouteData(): Data {\n    if (!this.outlet) {\n      return {};\n    }\n    return this.outlet.activatedRouteData;\n  }\n\n  constructor(\n    private readonly childrenOutletContexts: ChildrenOutletContexts,\n    private readonly componentFactoryResolver: ComponentFactoryResolver,\n    private readonly vcRef: ViewContainerRef,\n    private readonly cdRef: ChangeDetectorRef,\n    private readonly router: Router,\n    private readonly bbRouter: RouterService,\n  ) {}\n\n  private destroy(): Promise<void> {\n    if (this.nameValue) {\n      return this.removeOutletFromUrl()\n        .then(() => this.router.navigate(['/']))\n        .then(() => this.destroyChild());\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  private destroyChild() {\n    if (this.outlet) {\n      this.outlet.ngOnDestroy();\n    }\n  }\n\n  private removeOutletFromUrl(): Promise<boolean> {\n    // @todo: It's not possible to remove an outlet from the navigation.\n    // @see: https://github.com/angular/angular/issues/15338 (this workaround is from there)\n    return this.nameValue ? this.router.navigate([{ outlets: { [this.nameValue]: null } }]) : Promise.resolve(true);\n  }\n\n  ngOnInit() {\n    this.bbRouter.outletName.pipe(takeUntil(this.destroy$)).subscribe(outletName => {\n      this.destroy().then(() => {\n        this.nameValue = outletName;\n\n        this.outlet = new RouterOutlet(\n          this.childrenOutletContexts,\n          this.vcRef,\n          this.componentFactoryResolver,\n          this.name,\n          this.cdRef,\n        );\n\n        this.outlet.activateEvents.subscribe((event: any) => {\n          this.activateEvents.next(event);\n        });\n        this.outlet.deactivateEvents.subscribe((event: any) => {\n          this.deactivateEvents.next(event);\n        });\n\n        // Doesn't implement the `RouterOutlet` interface due to private members\n        this.childrenOutletContexts.onChildOutletCreated(this.name, this as any);\n\n        this.outlet.ngOnInit();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.destroyChild();\n    this.childrenOutletContexts.onChildOutletDestroyed(this.name);\n  }\n\n  attach(ref: ComponentRef<any>, activatedRoute: ActivatedRoute): void {\n    if (!this.outlet) {\n      throw new Error(OUTLET_IS_NOT_INITIALIZED_ERROR);\n    }\n    return this.outlet.attach(ref, activatedRoute);\n  }\n\n  detach(): ComponentRef<any> {\n    if (!this.outlet) {\n      throw new Error(OUTLET_IS_NOT_INITIALIZED_ERROR);\n    }\n    return this.outlet.detach();\n  }\n\n  deactivate(): void {\n    if (this.outlet) {\n      this.outlet.deactivate();\n    }\n  }\n\n  activateWith(activatedRoute: ActivatedRoute, resolver: ComponentFactoryResolver | null) {\n    if (!this.outlet) {\n      throw new Error(OUTLET_IS_NOT_INITIALIZED_ERROR);\n    }\n    // Not sure how hacky this is - forcefully deactivating the outlet before reactivating it.\n    this.outlet.deactivate();\n    return this.outlet.activateWith(activatedRoute, resolver);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, Routes } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { skip, take, withLatestFrom, startWith } from 'rxjs/operators';\nimport { ӨItemNavigationService } from '../../communication/item-navigation.service';\nimport {\n  isInsert,\n  isPropertyUpdate,\n  ModelUpdate,\n  ӨRootContainerService,\n  isRemovalUpdate,\n} from '../../models/root-container.service';\nimport { isContainer } from '../../models/item-model-utils';\nimport { RouterConfigService } from './router-config.service';\n\nconst noop = undefined;\n\nexport interface BootstrapService {\n  bootstrap: Function;\n}\n\nexport function createRouteConfigBootstrap(routerBootstrap: BootstrapService) {\n  return routerBootstrap.bootstrap.bind(routerBootstrap);\n}\n\ninterface ItemNavigation {\n  name: string;\n  nthChild?: number;\n}\n\nconst notEmpty = (a: Array<any>): boolean => a.length > 0;\n\nconst itemToNavigate = (update: ModelUpdate): ItemNavigation => {\n  if (isInsert(update)) {\n    // navigate to the first child of inserted item (if exists) or to the item itself\n    return {\n      name: update.item.name,\n      nthChild: isContainer(update.item) && notEmpty(update.item.children) ? 0 : undefined,\n    };\n  } else if (isPropertyUpdate(update)) {\n    // navigate to the updated item (@todo: if this item is currently active)\n    return { name: update.name };\n  } else if (isRemovalUpdate(update)) {\n    // navigate to the nth child of the parent\n    return { name: update.parentName, nthChild: update.index };\n  } else {\n    throw Error('not handled model update');\n  }\n};\n\n@Injectable()\nexport class RouterBootstrapService {\n  private readonly bootstrapRoutes: Observable<Routes> = this.routerConfig.routes.pipe(take(1));\n  private readonly updateRoutes: Observable<[Routes, ModelUpdate | undefined]> = this.routerConfig.routes.pipe(\n    skip(1),\n    withLatestFrom(this.rootModel.modelUpdates.pipe(startWith(noop))),\n  );\n\n  constructor(\n    private readonly routerConfig: RouterConfigService,\n    private readonly router: Router,\n    private readonly rootModel: ӨRootContainerService,\n    private readonly itemNavigation: ӨItemNavigationService,\n  ) {}\n\n  bootstrap() {\n    const initialRoutes: Routes = this.router.config;\n\n    this.bootstrapRoutes.subscribe(routes => {\n      this.router.resetConfig([...routes, ...initialRoutes]);\n      this.router.initialNavigation();\n    });\n\n    let lastUpdate: ModelUpdate | undefined;\n    this.updateRoutes.subscribe(([routes, update]) => {\n      this.router.resetConfig([...routes, ...initialRoutes]);\n      if (update && lastUpdate !== update) {\n        lastUpdate = update;\n        this.navigateOnUpdates(update);\n      } else {\n        this.router.navigateByUrl(this.router.url, { skipLocationChange: true });\n      }\n    });\n  }\n\n  private navigateOnUpdates(update: ModelUpdate) {\n    const itemNavigation = itemToNavigate(update);\n    const navigation =\n      itemNavigation.nthChild !== undefined\n        ? this.itemNavigation.navigateToChild(itemNavigation.name, itemNavigation.nthChild, {})\n        : this.itemNavigation.navigateToItem(itemNavigation.name, {});\n    navigation.then((result: boolean) => {\n      if (!result) {\n        // If the navigation failed, it might be because the item\n        // was not within a routable item, so it can't be navigated to.\n        // In this case, we trigger a navigation to '/' to trigger\n        // and new redirects (this use-case is when a \"deck-container\" is\n        // dropped onto the root of the page, we need to trigger the\n        // redirect to the first route).\n        // @todo: is there a better way to trigger redirects?\n        // @todo: is there a better way to know that the navigation\n        //   failure was because it was to a non-routable item? maybe\n        //   it should throw instead of resolve false?\n        this.router.navigateByUrl('/');\n      }\n    });\n  }\n}\n","import { ComponentMap } from './rendering/item-registry.service';\nimport { CommunicationFlowConfig } from './communication/deprecated/flows.service';\nimport { AssetsConfiguration } from './assets/assets.service';\nimport { EnabledFeaturesConfig, DeprecationsService } from '@backbase/foundation-ang/future';\nimport { RouteGuardsConfig } from './routing/guards/route-guards-registry.service';\nimport { InjectionToken } from '@angular/core';\nimport { PipelineProcessorConfig } from './communication/pipes/pipeline-registry';\nimport { LazyConfig } from './rendering/lazy-config';\n\n/**\n * Options to configure the Backbase Core Functionality.\n */\nexport interface BackbaseCoreConfiguration {\n  /**\n   * A hash map of Backbase Item components (widget or container),\n   * where key is string matching the `classId` item property,\n   * and value is the Angular component Class.\n   */\n  classMap?: ComponentMap;\n\n  /**\n   * Register Route Guards that can be attached to routes based on the Item Model\n   *\n   * This only allows guards to be configured via the Item Model properties - the guards\n   * must still be provided in a `NgModule` `providers`.\n   */\n  guards?: RouteGuardsConfig;\n\n  /**\n   * Configure the input/output processors available in\n   * this app (in addition to the default processors).\n   */\n  pipelineProcessors?: Array<PipelineProcessorConfig>;\n}\n\n/**\n * Options to configure the Backbase Core Functionality.\n */\nexport interface BackbaseRootConfiguration {\n  /**\n   * Application assets configuration.\n   */\n  assets?: AssetsConfiguration;\n\n  /**\n   * A hash map of Backbase Item components (widget or container),\n   * where key is string matching the `classId` item property,\n   * and value is the Angular component Class.\n   */\n  classMap?: ComponentMap;\n\n  /**\n   * Configuration of \"navigation\" output handler.\n   */\n  flows?: Array<CommunicationFlowConfig>;\n\n  /**\n   * Configure the input/output processors available in\n   * this app (in addition to the default processors).\n   */\n  pipelineProcessors?: Array<PipelineProcessorConfig>;\n\n  /**\n   * Register Route Guards that can be attached to routes based on the Item Model\n   *\n   * This only allows guards to be configured via the Item Model properties - the guards\n   * must still be provided in a `NgModule` `providers`.\n   */\n  guards?: RouteGuardsConfig;\n\n  /**\n   * Decide if deprecation warnings should be logged to the developer console.\n   */\n  logDeprecations?: boolean;\n\n  /**\n   * Opt in to future features.\n   */\n  features?: EnabledFeaturesConfig;\n\n  /**\n   * Option for lazy loaded modules configuration.\n   */\n  lazyModules?: LazyConfig;\n}\n\nexport { ComponentMap, ComponentClass } from './rendering/item-registry.service';\nexport {\n  CommunicationFlowConfig,\n  ComponentOutputConfig,\n  ComponentInputConfig,\n  ClassId,\n  OutputName,\n  InputName,\n} from './communication/deprecated/flows.service';\nexport { EnabledFeaturesConfig } from '@backbase/foundation-ang/future';\n\nexport const DEPRECATED_WITH_CONFIG = new InjectionToken<DeprecatedWithConfig>(\n  'Flags whether BackbaseCoreModule.withConfig was called with deprecated options',\n);\n\nexport interface DeprecatedWithConfig {\n  assets?: any;\n  logDeprecationsService?: any;\n  features?: any;\n  flows?: any;\n  [key: string]: any | undefined;\n}\n\nexport const logDeprecatedConfig = (\n  deprecationService: DeprecationsService,\n  deprecatedConfigs: Array<DeprecatedWithConfig>,\n) => {\n  const deprecatedOptions: Array<string> = deprecatedConfigs.reduce<Array<string>>(\n    (acc, deprecatedConfig) => [\n      ...acc,\n      ...Object.keys(deprecatedConfig).filter(key => deprecatedConfig[key] !== undefined),\n    ],\n    [],\n  );\n  if (deprecatedOptions.length > 0) {\n    deprecationService.logDeprecatedFeature(\n      `Deprecated options (${deprecatedOptions.join(', ')}) ` +\n        'being used with BackbaseCoreModule.withConfig. Use BackbaseCoreModule.forRoot instead.',\n    );\n  }\n};\n\nexport const createLogDeprecatedConfig = (\n  deprecationService: DeprecationsService,\n  deprecatedConfig: Array<DeprecatedWithConfig>,\n) => {\n  return logDeprecatedConfig.bind(null, deprecationService, deprecatedConfig);\n};\n","import { Injectable, InjectionToken } from '@angular/core';\nimport { CommunicationDefinition, serializerDeserializer } from '@backbase/communication-property';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { concatMap, filter, first, map } from 'rxjs/operators';\nimport { ӨRootContainerService } from '../../../models/root-container.service';\nimport { ItemModel } from '../../../models/item-model';\nimport { ӨItemNavigationService } from '../../item-navigation.service';\nimport { PipelineSink, PipelineSource, Sink, Source } from '../pipeline-interface';\nimport { createPipelineProcessorConfig, PipelineProcessorConfig } from '../pipeline-registry';\nimport { asyncScheduler } from 'rxjs';\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Use a service to store data and pass it between widgets.\n *\n * ```\n * [ Component Output ] -> [ Memory Store ]\n * [ Memory Store ] -> [ Component Input ]\n * ```\n *\n * See `Memory` for configuration.\n */\nexport interface MemoryStore<T> extends PipelineSource<T | undefined>, PipelineSink<T> {\n  /**\n   * @param group The name communication group to connect via the store\n   */\n  source: (group: string) => Source<T | undefined>;\n  /**\n   * @param group The name communication group to connect via the store\n   */\n  sink: (group: string) => Sink<T>;\n}\n\nconst TAG: 'memory' = 'memory';\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Memory Communication Transport\n *\n * Can be used to configure communication using Memory.\n *\n * @usageNotes\n *\n * Pass some data to widget-b via an in memory store\n *\n * ```json\n * {\n *   \"name\": \"widget-a\",\n *   \"properties\": {\n *     \"output.myOutput\": Memory.toProperty(\"myGroupName\")\n *   }\n * },\n * {\n *   \"name\": \"widget-b\",\n *   \"properties\": {\n *     \"input.myInput\": Memory.toProperty(\"myGroupName\")\n *   }\n * }\n * ```\n */\nexport class Memory {\n  /**\n   * Generate a serialized communication configuration suitable for use as a Widget Input or Output property value.\n   *\n   * @param group The name of the communication group to which the Input/Output belongs\n   */\n  static toProperty(group: string): string {\n    return serializerDeserializer.toProperty(new CommunicationDefinition(TAG, group));\n  }\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Storage service to retain the values for each communication group that is using the Memory transport\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MemoryStorageService {\n  private readonly storage = new Map<\n    string,\n    Subject<{\n      value: any;\n    }>\n  >();\n  private getSubject(group: string) {\n    if (!this.storage.has(group)) {\n      this.storage.set(group, new ReplaySubject(1));\n    } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.storage.get(group)!;\n  }\n\n  /**\n   * Get an Observable of the values being communicated to the given group\n   *\n   * @param group The name of the communication group\n   */\n  get<T>(group: string): Observable<T> {\n    return this.getSubject(group)\n      .asObservable()\n      .pipe(\n        map(item => {\n          const localValue = item.value;\n          if (typeof item.value === 'object' && item.value['_clearPayload'] === true) {\n            item.value = undefined;\n          }\n          return localValue;\n        }),\n      );\n  }\n\n  /**\n   * Communicate some value to members of the given communication group\n   *\n   * @param group The name of the communication group\n   * @param value The value to communicate\n   */\n  set<T>(group: string, value: T): void {\n    this.getSubject(group).next({ value });\n  }\n}\n\nexport const createMemory = <T>(\n  itemNavigation: ӨItemNavigationService,\n  rootModel: ӨRootContainerService,\n  storage: MemoryStorageService,\n): MemoryStore<T> => {\n  return {\n    source: <U extends T>(group: string) => (): Observable<U | undefined> => storage.get(group),\n    sink: <U extends T>(group: string) => (stdin: Observable<U>) => {\n      const commonAncestorItem = getItemFormCommunicationGroup(group, rootModel);\n      return stdin\n        .pipe(concatMap(data => commonAncestorItem.pipe(map(item => [data, item.name] as const))))\n        .subscribe(([data, name]) => {\n          asyncScheduler.schedule(() => {\n            storage.set(group, data);\n          });\n          itemNavigation.navigateToItem(name, {});\n        });\n    },\n  };\n};\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const memoryProcessorConfig: PipelineProcessorConfig = createPipelineProcessorConfig(TAG, {\n  provide: new InjectionToken('Memory pipeline handler'),\n  useFactory: createMemory,\n  deps: [ӨItemNavigationService, ӨRootContainerService, MemoryStorageService],\n});\n\nfunction getItemFormCommunicationGroup(group: string, rootModel: ӨRootContainerService) {\n  const communicationDefinition = new CommunicationDefinition(TAG, group);\n  const commonAncestorItem = rootModel.commonAncestor(communicationDefinition).pipe(\n    first(),\n    filter((item): item is ItemModel => {\n      if (item === undefined) {\n        console.warn(`No Inputs configured to receive in memory value for communication group \"${group}\"`);\n        return false;\n      }\n      return true;\n    }),\n  );\n  return commonAncestorItem;\n}\n","import { CommonModule } from '@angular/common';\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n// assets (todo: make an assets module)\nimport { AssetsService, CONFIG_ASSETS } from './assets/assets.service';\n\n// bootstrap (todo: make a bootstrap module)\nimport { BackbaseConnector } from './bootstrap/backbase-connector.service';\n\n// communication (todo: make a communication module)\nimport { ӨItemNavigationService } from './communication/item-navigation.service';\nimport { InputBrokerService, createInputBootstrap } from './communication/item-io/input-broker.service';\nimport { OutputBrokerService, createOutputBootstrap } from './communication/item-io/output-broker.service';\nimport { CONFIG_PIPELINE_PROCESSORS } from './communication/pipes/pipeline-registry';\nimport { debugProcessorConfig } from './communication/pipes/handlers/debug';\nimport { pluckProcessorConfig } from './communication/pipes/handlers/pluck';\nimport { routeParamsProcessorConfig } from './communication/pipes/handlers/route-param';\nimport { routeParamsMultiProcessorConfig } from './communication/pipes/handlers/route-param-multi';\nimport { itemNavigateProcessorConfig } from './communication/pipes/handlers/item-navigate';\nimport { modelProcessorConfig } from './communication/pipes/handlers/model';\nimport { appConfigProcessorConfig } from './communication/pipes/handlers/app-config';\nimport { urlProcessorConfig } from './communication/pipes/handlers/url';\nimport { routerNavigateProcessorConfig } from './communication/pipes/handlers/router-navigate';\n// deprecated communications\nimport { FlowsService, CONFIG_FLOWS } from './communication/deprecated/flows.service';\nimport { ItemTransitionService } from './communication/deprecated/item-transition.service';\nimport { navigationProcessorConfig } from './communication/pipes/handlers/navigation';\n\n// future\nimport { ENABLED_FEATURES_CONFIG } from '@backbase/foundation-ang/future';\nimport { LOG_DEPRECATIONS_CONFIG, DeprecationsService } from '@backbase/foundation-ang/future';\n\n// models (todo: make a models module?)\nimport { RootItemModelService } from './models/root-item-model.service';\n\n// rendering (todo: make a rendering module)\nimport { AreaComponent } from './rendering/area/area.component';\nimport { ChromeComponent } from './rendering/chrome/chrome.component';\nimport { JourneyComponent } from './rendering/chrome/journey.component';\nimport { RootComponent } from './rendering/root/root.component';\nimport { CONFIG_COMPONENT_CLASS_MAP, ItemRegistryService } from './rendering/item-registry.service';\nimport { ItemInjectorService } from './rendering/item-injector.service';\n\n// routing (todo: create a separate routing module)\nimport { RouteComponent } from './routing/components/route.component';\nimport { RouterLinkDirective, RouterLinkWithHrefDirective } from './routing/directives/router-link.directive';\nimport { RouterLinkActiveDirective } from './routing/directives/router-link-active.directive';\nimport { RouterOutletDirective } from './routing/directives/router-outlet.directive';\nimport { OutletCollisionComponent } from './routing/components/outlet-collision.component';\nimport { RouterBootstrapService, createRouteConfigBootstrap } from './routing/config/router-bootstrap.service';\nimport { RouterNavigationService } from './routing/navigation/router-navigation.service';\nimport { RouteGuardsRegistryService, CONFIG_ROUTE_GUARDS } from './routing/guards/route-guards-registry.service';\nimport { RouterService } from './routing/navigation/router.service';\n\n// config\nimport {\n  BackbaseCoreConfiguration,\n  BackbaseRootConfiguration,\n  createLogDeprecatedConfig,\n  DEPRECATED_WITH_CONFIG,\n} from './core-config';\nimport { ItemLoaderService } from './rendering/item-loader.service';\nimport { LAZY_MAP } from './rendering/lazy-config';\nimport { CombinedComponentFactoryResolver } from './rendering/combined-component-factory-resolver';\nimport { memoryProcessorConfig } from './communication/pipes/handlers/memory';\n\nimport { AbstractRouterConfigService } from './routing/config/abstract-router-config.service';\nimport { RouterConfigService } from './routing/config/router-config.service';\n\nconst coreComponents = [\n  RootComponent,\n  AreaComponent,\n  ChromeComponent,\n  RouteComponent,\n  OutletCollisionComponent,\n  JourneyComponent,\n];\n\nconst coreDirectives = [\n  RouterLinkDirective,\n  RouterLinkWithHrefDirective,\n  RouterLinkActiveDirective,\n  RouterOutletDirective,\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [...coreComponents, ...coreDirectives],\n  exports: [...coreComponents, ...coreDirectives],\n  entryComponents: coreComponents,\n  providers: [\n    RootItemModelService,\n    ItemRegistryService,\n    BackbaseConnector,\n    ӨItemNavigationService,\n    ItemTransitionService,\n    RouteGuardsRegistryService,\n    RouterNavigationService,\n    RouterService,\n    DeprecationsService,\n    OutputBrokerService,\n    InputBrokerService,\n    RouterBootstrapService,\n    ItemInjectorService,\n    FlowsService,\n    AssetsService,\n    ItemLoaderService,\n    CombinedComponentFactoryResolver,\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      useFactory: createRouteConfigBootstrap,\n      deps: [RouterBootstrapService],\n      multi: true,\n    },\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      useFactory: createLogDeprecatedConfig,\n      deps: [DeprecationsService, DEPRECATED_WITH_CONFIG],\n      multi: true,\n    },\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      useFactory: createInputBootstrap,\n      deps: [InputBrokerService],\n      multi: true,\n    },\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      useFactory: createOutputBootstrap,\n      deps: [OutputBrokerService],\n      multi: true,\n    },\n    {\n      provide: CONFIG_COMPONENT_CLASS_MAP,\n      useValue: {\n        RootComponent,\n      },\n      multi: true,\n    },\n    {\n      provide: CONFIG_PIPELINE_PROCESSORS,\n      useValue: [\n        debugProcessorConfig,\n        pluckProcessorConfig,\n        routeParamsProcessorConfig,\n        routeParamsMultiProcessorConfig,\n        itemNavigateProcessorConfig,\n        modelProcessorConfig,\n        appConfigProcessorConfig,\n        urlProcessorConfig,\n        navigationProcessorConfig,\n        memoryProcessorConfig,\n        routerNavigateProcessorConfig,\n      ],\n      multi: true,\n    },\n    {\n      provide: AbstractRouterConfigService,\n      useExisting: RouterConfigService,\n    },\n    // Defaults, overrided by forRoot and withConfig\n    {\n      provide: CONFIG_COMPONENT_CLASS_MAP,\n      useValue: {},\n      multi: true,\n    },\n    {\n      provide: CONFIG_FLOWS,\n      multi: true,\n      useValue: [],\n    },\n    {\n      provide: CONFIG_ROUTE_GUARDS,\n      multi: true,\n      useValue: {},\n    },\n    {\n      provide: DEPRECATED_WITH_CONFIG,\n      useValue: {},\n      multi: true,\n    },\n  ],\n})\nexport class BackbaseCoreModule {\n  /**\n   * Creates a module that will populate entryComponents with Components passed as classMap\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * ```\n   * @NgModule({\n   *   imports: [\n   *     BackbaseCoreModule.withConfig({\n   *       classMap: {\n   *         myClassId: MyComponent\n   *       }\n   *     })\n   *   ]\n   * })\n   * class MyModule {}\n   * ```\n   */\n  static withConfig(config: BackbaseCoreConfiguration): ModuleWithProviders<BackbaseCoreModule> {\n    return {\n      ngModule: BackbaseCoreModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: config.classMap || {},\n          multi: true,\n        },\n        {\n          provide: CONFIG_COMPONENT_CLASS_MAP,\n          useValue: config.classMap || {},\n          multi: true,\n        },\n        {\n          provide: CONFIG_ROUTE_GUARDS,\n          multi: true,\n          useValue: config.guards || {},\n        },\n        {\n          provide: CONFIG_PIPELINE_PROCESSORS,\n          useValue: config.pipelineProcessors || [],\n          multi: true,\n        },\n      ],\n    };\n  }\n\n  /**\n   * Creates a configured BackbaseCoreModule.\n   *\n   * This should be called only once per app.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * ```\n   * @NgModule({\n   *   imports: [\n   *     BackbaseCoreModule.forRoot({\n   *       classMap: {\n   *         myClassId: MyComponent,\n   *         logDeprecations: true,\n   *       }\n   *     })\n   *   ]\n   * })\n   * class AppModule {}\n   * ```\n   */\n  static forRoot(config: BackbaseRootConfiguration): ModuleWithProviders<BackbaseCoreModule> {\n    return {\n      ngModule: BackbaseCoreModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: config.classMap || {},\n          multi: true,\n        },\n        {\n          provide: CONFIG_COMPONENT_CLASS_MAP,\n          useValue: config.classMap || {},\n          multi: true,\n        },\n        {\n          provide: CONFIG_FLOWS,\n          multi: true,\n          useValue: config.flows || [],\n        },\n        {\n          provide: CONFIG_ROUTE_GUARDS,\n          multi: true,\n          useValue: config.guards || {},\n        },\n        {\n          provide: CONFIG_ASSETS,\n          multi: false,\n          useValue: config.assets || {\n            assetsStaticItemName: '',\n          },\n        },\n        {\n          provide: LOG_DEPRECATIONS_CONFIG,\n          multi: false,\n          useValue: !!config.logDeprecations,\n        },\n        {\n          provide: ENABLED_FEATURES_CONFIG,\n          multi: false,\n          useValue: config.features || {},\n        },\n        {\n          provide: CONFIG_PIPELINE_PROCESSORS,\n          useValue: config.pipelineProcessors || [],\n          multi: true,\n        },\n        {\n          provide: LAZY_MAP,\n          useValue: config.lazyModules || undefined,\n          multi: false,\n        },\n      ],\n    };\n  }\n}\n","import {\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n  Directive,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { TemplateRegistry } from './template-registry';\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface CustomTemplateContext<Host, ExtraContext> {\n  readonly $implicit: Host;\n  context: ExtraContext | undefined;\n}\n\nexport type CustomTemplateRef<HostRef, Context> = TemplateRef<CustomTemplateContext<HostRef, Context>>;\n\n/**\n *\n * @deprecated Will be removed in v7.0.0\n *\n * @description\n * Every custom template directive should extend this class.\n * See 'How to make widget customizable'\n *\n * @usageNotes\n *\n * ### Example\n * ```\n * import { Component, Directive } from '@angular/core';\n * import { BbTemplate, ItemModel } from '@backbase/foundation-ang/core';\n *\n * @Component({\n *   selector: 'my-widget',\n *   template: `\n *   <li *ngFor=\"let item of pallete\">\n *     My colors:\n *     <ng-container\n *       customItemTemplate\n *       [bbHostRef]=\"hostRef\"\n *       [bbTemplateContext]=\"item\"\n *     ></ng-container>\n *   </li>\n *\n *   <ng-template customItemTemplate let-hostRef let-item=\"context\">\n *     Current name: {{ item.color }}\n *     Hex value: {{ hostRef.getHexColor(item.color) }}\n *   </ng-template>\n *   `,\n * })\n * export class MyWidgetComponent {\n *   readonly hostRef = this;\n *   readonly palette: Array<PaletteItem> = [{\n *     color: 'blue',\n *   }];\n *   readonly hexValues = {\n *     blue: '0000ff',\n *   };\n *\n *   constructor(private itemModel: ItemModel) {}\n *\n *   getHexColor(color: string): string | undefined {\n *     return this.hexValues[color];\n *   }\n * }\n *\n * type PaletteItem {\n *   color: string;\n * };\n *\n * @Directive({\n *   selector: '[customItemTemplate]',\n * })\n * export class customItemTemplate extends BbTemplate<MyWidgetComponent, PaletteItem> {}\n * ```\n */\n/* eslint-disable @angular-eslint/directive-class-suffix */\n@Directive({})\nexport abstract class BbTemplate<HostRef, Context> implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Custom context\n   */\n  @Input() bbTemplateContext: Context | undefined;\n\n  /**\n   * Context of the host component\n   */\n  @Input() bbHostRef: HostRef | undefined;\n\n  private templateSubscription: Subscription | undefined;\n\n  private customTemplateContext: CustomTemplateContext<HostRef, Context> | undefined;\n\n  constructor(\n    private readonly viewContainerRef: ViewContainerRef,\n    private readonly registry: TemplateRegistry,\n    @Optional() private readonly templateRef: TemplateRef<CustomTemplateContext<HostRef, Context>>,\n  ) {}\n\n  /**\n   * @internal\n   */\n  ngOnInit() {\n    this.checkContainerHasHostRef();\n    this.checkNgTemplateIsNotUsedtoDefineSlot();\n\n    if (this.isContainer) {\n      this.waitTemplate();\n    } else {\n      this.registry.set<CustomTemplateRef<HostRef, Context>>(this.templateId(), this.templateRef);\n    }\n  }\n\n  private templateId() {\n    return this.constructor;\n  }\n\n  private checkContainerHasHostRef() {\n    if (this.isContainer && this.bbHostRef === undefined) {\n      throw new Error(`${this.constructor.name}: Missing required input [bbHostRef]`);\n    }\n  }\n\n  private checkNgTemplateIsNotUsedtoDefineSlot() {\n    if (!this.isContainer && this.bbHostRef) {\n      throw new Error(\n        `${this.constructor.name}: [bbHostRef] should not be used in conjunction with <ng-template>. Use <ng-container> instead.`,\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.customTemplateContext) {\n      return;\n    }\n\n    if ('bbTemplateContext' in changes) {\n      this.customTemplateContext.context = changes.bbTemplateContext.currentValue;\n    }\n  }\n\n  private waitTemplate() {\n    const templateSubject = this.registry.get<CustomTemplateRef<HostRef, Context>>(this.templateId());\n\n    this.templateSubscription = templateSubject.subscribe(\n      (tempalateRef: TemplateRef<CustomTemplateContext<HostRef, Context>>) => {\n        this.viewContainerRef.clear();\n\n        this.customTemplateContext = this.createContext();\n        const view = tempalateRef.createEmbeddedView(this.customTemplateContext);\n        this.viewContainerRef.insert(view);\n      },\n    );\n  }\n\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    if (this.templateSubscription) {\n      this.templateSubscription.unsubscribe();\n    }\n  }\n\n  private createContext(): CustomTemplateContext<HostRef, Context> {\n    if (this.bbHostRef === undefined) {\n      throw new Error(`${this.constructor.name}: Missing required input [bbHostRef]`);\n    }\n\n    return {\n      $implicit: this.bbHostRef,\n      context: this.bbTemplateContext,\n    };\n  }\n\n  private get isContainer(): boolean {\n    return !this.templateRef;\n  }\n}\n","import {\n  NgModule,\n  ModuleWithProviders,\n  ComponentFactoryResolver,\n  ANALYZE_FOR_ENTRY_COMPONENTS,\n  Injector,\n} from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { StepUpInterceptor, StepUpConfig } from './stepup.interceptor';\nimport { StepUpService, StepUpComponentType, STEPUP_CONFIG } from './stepup.service';\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type CustomStepUpConfig = Partial<StepUpConfig> & { mediatorComponentClass: StepUpComponentType };\n/**\n * @deprecated Will be removed in v7.0.0\n */\n@NgModule({})\nexport class StepUpModule {\n  static forRoot(config: CustomStepUpConfig): ModuleWithProviders<StepUpModule> {\n    return {\n      ngModule: StepUpModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: [config.mediatorComponentClass],\n          multi: true,\n        },\n        {\n          provide: STEPUP_CONFIG,\n          useValue: config,\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: StepUpInterceptor,\n          deps: [StepUpService, STEPUP_CONFIG, Injector],\n          multi: true,\n        },\n        {\n          provide: StepUpService,\n          useClass: StepUpService,\n          deps: [ComponentFactoryResolver, STEPUP_CONFIG],\n        },\n      ],\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, ComponentFactoryResolver } from '@angular/core';\nimport { SessionTimeoutService, SESSION_TIMEOUT_CONFIG, SessionTimeoutConfig } from './session-timeout.service';\n\n@NgModule({})\nexport class SessionTimeoutModule {\n  /**\n   * Creates a configured SessionTimeoutModule.\n   *\n   * This should be called only once per app.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * ```\n   * @NgModule({\n   *   imports: [\n   *     SessionTimeoutModule.forRoot({\n   *       classMap: {\n   *         sessionTimeoutComponentClass: MyCustomSessionTimeoutComponent,\n   *         inactivityModalTime: 300,\n   *       }\n   *     })\n   *   ]\n   * })\n   * class AppModule {}\n   * ```\n   */\n  static forRoot(config: SessionTimeoutConfig): ModuleWithProviders<SessionTimeoutModule> {\n    return {\n      ngModule: SessionTimeoutModule,\n      providers: [\n        {\n          provide: ANALYZE_FOR_ENTRY_COMPONENTS,\n          useValue: config.sessionTimeoutComponentClass,\n          multi: true,\n        },\n        {\n          provide: SESSION_TIMEOUT_CONFIG,\n          useValue: config,\n        },\n        {\n          provide: SessionTimeoutService,\n          useClass: SessionTimeoutService,\n          deps: [ComponentFactoryResolver, SESSION_TIMEOUT_CONFIG],\n        },\n      ],\n    };\n  }\n}\n","import { NgModuleRef, StaticProvider } from '@angular/core';\nimport { ExternalServices, ɵEXTERNAL_SERVICES as EXTERNAL_SERVICES } from '@backbase/foundation-ang/web-sdk';\nimport { BackbaseConnector } from '../../backbase-core/bootstrap/backbase-connector.service';\n\nexport type CreateNgModule = (extraProviders: Array<StaticProvider>) => Promise<NgModuleRef<any>>;\nexport type StartSingleApp = (externalServices?: ExternalServices) => Promise<BackbaseConnector>;\n\n/**\n * Exposes Angular Single Page Application bootstrap method `window.BB.startSingleApp`\n * @param createNgModule Function that accepts StaticProviders and returns NgModuleRef\n * @usageNotes\n * ### Example\n *\n * ```\n * window.BB.startSingleApp = registerSingleApp(createNgModule);\n *\n * window.BB.startSingleApp(webSdkServices, staticProviders)\n *   .then((bbConnector: BackbaseConnector) => bbConector.bootstrap(item, itemLocation));\n * ```\n */\nexport function registerSingleApp(createNgModule: CreateNgModule): StartSingleApp {\n  const startSingleApp: StartSingleApp = (externalServices: ExternalServices = {}): Promise<BackbaseConnector> => {\n    const providers = [\n      {\n        provide: EXTERNAL_SERVICES,\n        useValue: externalServices,\n      },\n    ];\n    return createNgModule(providers).then(\n      (moduleRef: NgModuleRef<any>): BackbaseConnector => moduleRef.injector.get<BackbaseConnector>(BackbaseConnector),\n    );\n  };\n  window.BB = window.BB || {};\n  Object.assign(window.BB, { startSingleApp });\n  return startSingleApp;\n}\n\ndeclare global {\n  interface Window {\n    BB: { [key: string]: any };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CONFIG_ASSETS as ɵa} from './backbase-core/assets/assets.service';\nexport {CONFIG_FLOWS as ɵv,FlowsService as ɵw} from './backbase-core/communication/deprecated/flows.service';\nexport {ItemTransitionService as ɵbo} from './backbase-core/communication/deprecated/item-transition.service';\nexport {InputBrokerService as ɵbh,createInputBootstrap as ɵbi} from './backbase-core/communication/item-io/input-broker.service';\nexport {OutputBrokerService as ɵbj,createOutputBootstrap as ɵbk} from './backbase-core/communication/item-io/output-broker.service';\nexport {appConfigProcessorConfig as ɵi,createAppConfigSource as ɵh} from './backbase-core/communication/pipes/handlers/app-config';\nexport {debugProcessorConfig as ɵbs,makeDebugPipe as ɵbr} from './backbase-core/communication/pipes/handlers/debug';\nexport {createItemNavigate as ɵbw,itemNavigateProcessorConfig as ɵbx} from './backbase-core/communication/pipes/handlers/item-navigate';\nexport {MemoryStorageService as ɵl,createMemory as ɵm,memoryProcessorConfig as ɵn} from './backbase-core/communication/pipes/handlers/memory';\nexport {createModelSource as ɵby,modelProcessorConfig as ɵbz} from './backbase-core/communication/pipes/handlers/model';\nexport {createNavigationSink as ɵce,navigationHandlerToken as ɵcd,navigationProcessorConfig as ɵcf,pipeName as ɵcc} from './backbase-core/communication/pipes/handlers/navigation';\nexport {pluckProcessorConfig as ɵbt} from './backbase-core/communication/pipes/handlers/pluck';\nexport {createRouteParams as ɵj,routeParamsProcessorConfig as ɵk} from './backbase-core/communication/pipes/handlers/route-param';\nexport {createRouteParamsMulti as ɵbu,routeParamsMultiProcessorConfig as ɵbv} from './backbase-core/communication/pipes/handlers/route-param-multi';\nexport {createRouterNavigateStore as ɵp,routerNavigateProcessorConfig as ɵq,serializeCommands as ɵo} from './backbase-core/communication/pipes/handlers/router-navigate';\nexport {createUrlSink as ɵca,urlProcessorConfig as ɵcb} from './backbase-core/communication/pipes/handlers/url';\nexport {CONFIG_PIPELINE_PROCESSORS as ɵf,PipelineRegistry as ɵg} from './backbase-core/communication/pipes/pipeline-registry';\nexport {DEPRECATED_WITH_CONFIG as ɵr,createLogDeprecatedConfig as ɵs} from './backbase-core/core-config';\nexport {AppConfigService as ɵbn} from './backbase-core/models/app-config.service';\nexport {ObservableTree as ɵc} from './backbase-core/models/tree';\nexport {journeyItemModelFactory as ɵbc,storeNameFactory as ɵbd} from './backbase-core/rendering/chrome/journey.component';\nexport {CombinedComponentFactoryResolver as ɵbm} from './backbase-core/rendering/combined-component-factory-resolver';\nexport {ItemInjectorService as ɵbg} from './backbase-core/rendering/item-injector.service';\nexport {ItemLifecycleService as ɵb} from './backbase-core/rendering/item-lifecycle.service';\nexport {ItemLoaderService as ɵbl} from './backbase-core/rendering/item-loader.service';\nexport {CONFIG_COMPONENT_CLASS_MAP as ɵt,ItemRegistryService as ɵu} from './backbase-core/rendering/item-registry.service';\nexport {LAZY_MAP as ɵbb} from './backbase-core/rendering/lazy-config';\nexport {AbstractRouterConfigService as ɵbe} from './backbase-core/routing/config/abstract-router-config.service';\nexport {RouterBootstrapService as ɵbq,createRouteConfigBootstrap as ɵbp} from './backbase-core/routing/config/router-bootstrap.service';\nexport {CONFIG_ROUTE_GUARDS as ɵd,RouteGuardsRegistryService as ɵe} from './backbase-core/routing/guards/route-guards-registry.service';\nexport {RouterNavigationService as ɵbf} from './backbase-core/routing/navigation/router-navigation.service';\nexport {SESSION_TIMEOUT_CONFIG as ɵz,SessionTimeoutService as ɵba} from './backbase-core/session-timeout/session-timeout.service';\nexport {STEPUP_CONFIG as ɵx,StepUpService as ɵy} from './backbase-core/stepup/stepup.service';"]}