import { Tree } from '@angular-devkit/schematics';
import * as ts from 'typescript';
export declare class CompilerHost implements ts.CompilerHost {
    protected fs: Tree;
    protected options: ts.CompilerOptions;
    constructor(fs: Tree, options?: ts.CompilerOptions);
    getSourceFile(fileName: string, languageVersion: ts.ScriptTarget): ts.SourceFile | undefined;
    getDefaultLibFileName(options: ts.CompilerOptions): string;
    getDefaultLibLocation(): string;
    writeFile(fileName: string, data: string): void;
    getCurrentDirectory(): string;
    getCanonicalFileName(fileName: string): string;
    useCaseSensitiveFileNames(): boolean;
    getNewLine(): string;
    fileExists(fileName: string): boolean;
    readFile(fileName: string): string | undefined;
}
export declare class SchematicsTreeLanguageServiceHost extends CompilerHost implements ts.LanguageServiceHost {
    protected fs: Tree;
    protected options: ts.CompilerOptions;
    private rootFiles;
    private _getScriptVersion;
    constructor(fs: Tree, options: ts.CompilerOptions, rootFiles: Array<string>, _getScriptVersion?: (fileName: string) => string);
    getCompilationSettings(): ts.CompilerOptions;
    getScriptFileNames(): Array<string>;
    getScriptVersion(fileName: string): string;
    getScriptSnapshot(fileName: string): ts.IScriptSnapshot | undefined;
}
export declare class ParseConfigFileHost implements ts.ParseConfigFileHost {
    protected fs: Tree;
    constructor(fs: Tree);
    useCaseSensitiveFileNames: boolean;
    getCurrentDirectory(): string;
    readDirectory(rootDir: string, extensions: Array<string>, excludes: Array<string> | undefined): Array<string>;
    fileExists(path: string): boolean;
    readFile(path: string): string | undefined;
    onUnRecoverableConfigFileDiagnostic(): void;
}
