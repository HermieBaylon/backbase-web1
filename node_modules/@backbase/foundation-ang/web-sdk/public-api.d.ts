export { WebSdkApiModule } from './web-sdk-api-ang.module';
export { PAGE_CONFIG } from './page-config';
export { PUBSUB, SET_LOCALE, EXTERNAL_SERVICES as ɵEXTERNAL_SERVICES } from './providers';
export { PORTAL_CONTENT, LOGIN, LOGOUT, SESSION, REAUTHENTICATE, NAVIGATION, AUTH_EVENTS as ɵAUTH_EVENTS, HTTP_INTERCEPTORS, REFRESH, } from './deprecated/providers';
import { PortalContentMock as _PortalContentMock } from '@backbase/foundation-ang/testing';
/**
 * @deprecated This entrypoint is deprecated use \'@backbase/foundation-ang/test\' for PortalContentMock
 */
export declare class PortalContentMock extends _PortalContentMock {
}
export { ReauthErrorCodes, ContentTypes, ContentType, AuthKind, ContentTypeLegacy, } from '@backbase/lib-bb-page-bootstrap-cdn';
export { PubSubService } from './pub-sub.service';
export { SetLocaleService } from './set-locale.service';
export type { ExternalServices, WebSdkServiceMap } from './providers';
export type { LoginService, LogoutService, SessionService, ReauthenticateService, CountdownRegister, } from './deprecated/providers';
export type { PageConfig, RawPageConfig, AuthConfigs, ModuleLoader, BasConfig, HybridConfig, CustomConfig, Breadcrumb, GetBreadcrumbs, GetTree, LinkTreeItem, Navigation, EventName, Pubsub, Unsubscribe, Refresh, PortalContent, ImageContentItem, StructuredContentItem, ContentItem, ContentOptions, DocumentItem, FlattenContentItem, ImageItem, ContentUpdateUnsubscribe, Conditions, ResolveEntitlements, SetLocale, CXResponse, RenderingStrategy, Item, Widget, Container, Property, Properties, ItemLocation, HttpRequest, HttpRequestConfig, HttpResponse, HttpInterceptor, HttpInterceptors, HttpHandler, Login, Logout, Reauthenticate, ReauthConfig, ChallengeResponse, ChallengeError, ChallengeResponseFunction, RefreshSession, TimeToLive, GoToLoginPage, Countdown, BackbaseAuth, CookieOptions, IsExternal, Redirect, Base64Jwt, Seconds, UnixTimeSeconds, Cookie, StoredSession, BackbaseSession, AuthSession, AuthStrategy, AuthUtils, } from '@backbase/lib-bb-page-bootstrap-cdn';
export { WebSdkModule, WebSdkConfig } from './web-sdk.module';
/**
 * PubsubListener interface
 *
 * This is a generic function type and it requires to configured
 * the listener setting what type of value it will receive.
 */
export declare type PubsubListener<T> = (eventPayload: T) => void;
export { AuthEvents as ɵAuthEvents, AccessToken as ɵAccessToken, AuthSuccess as ɵAuthSuccess } from './auth-events';
export { CONDITIONS, ENTITLEMENTS_CONFIG, PropertyResolver, ConditionsService, EntitlementsConfig, SUMMARY_PERMISSIONS_PATH, DATA_ITEMS_PERMISSIONS_PATH, } from '@backbase/foundation-ang/entitlements';
