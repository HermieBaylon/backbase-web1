import { ExternalServices, WebSdkServiceMap } from './providers';
import * as ɵngcc0 from '@angular/core';
export declare function getWebSdkServiceMap(externalServices?: ExternalServices, embeddedServices?: WebSdkServiceMap): WebSdkServiceMap;
/**
 * Provides the following services:
 *
 * - `PageConfig`
 * - `Navigation`
 * - `Pubsub`
 * - `PortalConten`
 * - `LoginService`
 * - `LogoutService`
 * - `SessionService`
 * - `ReauthenticateService`
 * - `HttpInterceptors`
 * - `Refresh`
 * - `SetLocale`
 * - `Conditions`
 *
 * Notes:
 *  - The implementations of these services are provided via the Lean Page.
 *  - You must use the following injection tokens to any of inject these services.
 *
 * @usageNotes
 *
 * ```
 * constructor(
 *   @Inject(PAGE_CONFIG) pageConfig: PageConfig,
 *   @Inject(NAVIGATION) navigation: Navigation,
 *   @Inject(PUBSUB) pubsub: Pubsub,
 *   @Inject(PORTAL_CONTENT) portalContent: PortalContent
 *   @Inject(LOGIN) login: LoginService,
 *   @Inject(LOGOUT) logout: LogoutService,
 *   @Inject(SESSION) session: SessionService,
 *   @Inject(REAUTHENTICATE) reauthenticate: ReauthenticateService,
 *   @Inject(HTTP_INTERCEPTORS) httpInterceptors, HttpInterceptors,
 *   @Inject(REFRESH) refresh: Refresh,
 *   @Inject(SET_LOCALE) setLocale: SetLocale,
 *   @Inject(CONDITIONS) conditions: Conditions,
 * ) {}
 * ```
 */
export declare class WebSdkApiModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<WebSdkApiModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<WebSdkApiModule, never, never, never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<WebSdkApiModule>;
}

//# sourceMappingURL=web-sdk-api-ang.module.d.ts.map