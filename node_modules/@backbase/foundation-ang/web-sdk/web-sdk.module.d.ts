import type { ModuleWithProviders } from '@angular/core';
import { InjectionToken } from '@angular/core';
import { HybridConfig } from '@backbase/lib-bb-page-bootstrap-cdn';
import { WebSdkServiceMap } from './providers';
import { SetLocaleService } from './set-locale.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@backbase/foundation-ang/entitlements';
export interface WebSdkConfig {
    apiRoot?: string;
    staticResourcesRoot?: string;
    auth?: Omit<HybridConfig, 'kind' | 'loginPageUrl' | 'landingPageUrl'>;
    locales?: Array<string>;
    features?: any;
}
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare const WEBSDK_CONFIG: InjectionToken<WebSdkConfig>;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare function setLocaleFactory(setLocale: SetLocaleService): any;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare function bootstrapWebsdkService(config: WebSdkConfig, locale: string): WebSdkServiceMap;
export declare class WebSdkModule {
    constructor(config: WebSdkConfig, parentModule: WebSdkModule);
    /**
     * Add the `WebSdkModule` to your application's `AppModule` to embed the
     * web-sdk services into your application. This allows you to deploy your
     * application outside of an Experience, without the Lean Page.
     *
     * Note: Any services created via `environment.bootstrap.services` will
     * overwrite the services from this module.
     *
     * This module provides all the services from `WebSdkApiAng`.
     *
     * Importing this module will automatically enable the hybrid auth flow.
     *
     * @usageNotes
     *
     * ```
     * NgModule({
     *  declarations: [AppComponent],
     *  imports: [
     *    ...
     *    WebSdkModule.forRoot(),
     *  ],
     *  bootstrap: [AppComponent],
     * })
     * export class AppModule {}
     * ```
     */
    static forRoot(config?: WebSdkConfig): ModuleWithProviders<WebSdkModule>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<WebSdkModule, [{ optional: true; }, { optional: true; skipSelf: true; }]>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<WebSdkModule, never, [typeof ɵngcc1.EntitlementsModule], never>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<WebSdkModule>;
}

//# sourceMappingURL=web-sdk.module.d.ts.map