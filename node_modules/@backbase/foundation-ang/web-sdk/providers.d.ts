import { InjectionToken } from '@angular/core';
import { Navigation, Pubsub, PortalContent, BackbaseAuth, HttpInterceptors, Refresh, SetLocale, PageConfig } from '@backbase/lib-bb-page-bootstrap-cdn';
import { PropertyResolver } from '@backbase/foundation-ang/entitlements';
/**
 * @deprecated Will be removed in v7.0.0. Use the `PubSubService` class instead.
 */
export declare const PUBSUB: InjectionToken<Pubsub>;
/**
 * @deprecated Will be removed in v7.0.0. Use the `SetLocaleService` class instead.
 */
export declare const SET_LOCALE: InjectionToken<SetLocale>;
/**
 * @deprecated Will be removed in v7.0.0
 */
export interface WebSdkServiceMap {
    pageConfig?: () => PageConfig;
    navigation?: () => Navigation;
    eventBus?: () => Pubsub;
    portalContent?: () => PortalContent;
    auth?: () => BackbaseAuth;
    httpInterceptors?: () => HttpInterceptors;
    refresh?: () => Refresh;
    setLocale?: () => SetLocale;
    conditions?: () => Pick<PropertyResolver, 'resolveEntitlements'>;
}
/**
 * @deprecated Will be removed in v7.0.0
 */
export interface ExternalServices {
    [key: string]: () => any;
}
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare const EMBEDDED_SERVICES: InjectionToken<WebSdkServiceMap>;
/**
 * @description
 * Service to reauthenticate a user.
 *
 * @example
 * export class SigningService {
 *   constructor(
 *     @Inject(REAUTHENTICATE) private reauthenticateService: ReauthenticateService,
 *   ) {
 *     this.reauthenticate(error);
 *   }
 *
 *   private reauthenticate(error: HttpErrorResponse) {
 *     const { acrValues, scope } = this.getChallenge(error);
 *     this.reauthenticateService.reauthenticate(scope, acrValues);
 *   }
 *
 *   private getReauthChallenge(error: HttpErrorResponse) {
 *     const challenges = error.error ? error.error.challenges : [];
 *     return challenges.find(c => c.scope !== undefined);
 *   }
 * }
 */
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare const EXTERNAL_SERVICES: InjectionToken<WebSdkServiceMap>;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare const WEBSDK_SERVICE_MAP: InjectionToken<WebSdkServiceMap>;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare function websdkServiceFactory<K extends keyof WebSdkServiceMap, T extends ReturnType<Required<WebSdkServiceMap>[K]>>(webSdkServiceMap: WebSdkServiceMap | undefined, serviceKey: K): T | undefined;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare function navigationFactory(webSdkServiceMap?: WebSdkServiceMap): Navigation | undefined;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare function pubsubFactory(webSdkServiceMap?: WebSdkServiceMap): Pubsub | undefined;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare function portalContentFactory(webSdkServiceMap?: WebSdkServiceMap): PortalContent | undefined;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare function setLocaleFactory(webSdkServiceMap?: WebSdkServiceMap): SetLocale | undefined;
