{"version":3,"file":"item-loader.service.d.ts","sources":["item-loader.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Compiler, Injector } from '@angular/core';\nimport { ItemRegistryService } from './item-registry.service';\nimport { CombinedComponentFactoryResolver } from './combined-component-factory-resolver';\nimport { LazyConfig } from './lazy-config';\nexport declare class ItemLoaderService {\n    private readonly compiler;\n    private readonly parentInjector;\n    private readonly itemRegistry;\n    private readonly componentFactoryResolver;\n    private readonly lazyComponentsConfig;\n    constructor(compiler: Compiler, parentInjector: Injector, itemRegistry: ItemRegistryService, componentFactoryResolver: CombinedComponentFactoryResolver, lazyConfig: LazyConfig | null);\n    /**\n     * Loads the module this class is in, and adds\n     * it to the global item registry, and global component\n     * resolver.\n     *\n     * @param classId\n     */\n    loadComponent(classId: string): Promise<void>;\n    private toModuleFactory;\n    private loadModule;\n    private registerModule;\n    private registerComponentClass;\n    private registerComponentFactoryResolver;\n}\n"]}