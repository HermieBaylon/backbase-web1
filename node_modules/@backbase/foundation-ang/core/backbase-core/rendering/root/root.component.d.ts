import { OnInit, OnDestroy, NgZone, ViewContainerRef } from '@angular/core';
import { Observable } from 'rxjs';
import { ItemModel } from '../../models/item-model';
import { ObservableTree } from '../../models/tree';
import { ӨRootContainerService } from '../../models/root-container.service';
import { ӨItemNavigationService } from '../../communication/item-navigation.service';
import { StepUpService } from '../../stepup/stepup.service';
import { SessionTimeoutService } from '../../session-timeout/session-timeout.service';
import { Pubsub } from '@backbase/foundation-ang/web-sdk';
import * as ɵngcc0 from '@angular/core';
export declare class RootComponent implements OnInit, OnDestroy {
    private readonly rootContainer;
    private readonly zone;
    private readonly itemNavigation;
    private readonly events?;
    private readonly stepupService?;
    private readonly sessionTimeoutService?;
    readonly stepupContainer: ViewContainerRef | undefined;
    readonly sessionTimeoutContainer: ViewContainerRef | undefined;
    readonly children: Observable<Array<ObservableTree<ItemModel>>>;
    constructor(rootContainer: ӨRootContainerService, zone: NgZone, itemNavigation: ӨItemNavigationService, events?: Pubsub | undefined, stepupService?: StepUpService | undefined, sessionTimeoutService?: SessionTimeoutService | undefined);
    readonly eventListener: EventListener;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<RootComponent, [null, null, null, { optional: true; }, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<RootComponent, "bb-root", never, {}, {}, never, never>;
}

//# sourceMappingURL=root.component.d.ts.map