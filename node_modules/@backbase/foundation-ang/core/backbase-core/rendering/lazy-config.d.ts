import { InjectionToken, NgModuleFactory, Type } from '@angular/core';
/**
 * Lazy Loading callback
 * Callback function that can be used to dynamically load lazy load bundles.
 */
export declare type LazyLoadCallback = () => Promise<NgModuleFactory<unknown> | Type<unknown>>;
/**
 * Lazy Loading configuration item
 * It defines a list of components (array of strings),
 * and a callback function that can be used to
 * lazy load a bundle containing those components.
 */
export interface LazyComponentsConfig {
    components: Array<string>;
    loadChildren: LazyLoadCallback;
}
export interface LazyModuleConfig {
    module: string;
    loadChildren: LazyLoadCallback;
}
export declare type LazyConfigItem = LazyComponentsConfig | LazyModuleConfig;
export declare const LAZY_MAP: InjectionToken<LazyConfig>;
/**
 * Backbase Lazy Loading configuration
 * Array of `LazyConfigItem` objects used to define which lazy
 * loading bundle should be loaded for a specific component.
 */
export declare type LazyConfig = Array<LazyConfigItem>;
