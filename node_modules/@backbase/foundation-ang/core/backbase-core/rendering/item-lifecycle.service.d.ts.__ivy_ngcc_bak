import { ComponentRef } from '@angular/core';
import { ItemModel } from '../models/item-model';
import { ObservableTree } from '../models/observable-tree.interface';
import { Observable } from 'rxjs';
export declare enum LifecycleEventKind {
    Create = "create",
    Remove = "remove"
}
export interface LifecycleEvent {
    kind: LifecycleEventKind;
    itemModel: ObservableTree<ItemModel>;
    component: ComponentRef<any>;
}
export declare class ItemLifecycleService {
    private readonly lifecycleEvents;
    onCreate(itemModel: ObservableTree<ItemModel>, component: ComponentRef<any>): void;
    onRemove(itemModel: ObservableTree<ItemModel>, component: ComponentRef<any>): void;
    fromItem(name: string): Observable<LifecycleEvent>;
    whenCreate(name?: string): Observable<LifecycleEvent>;
    whenRemove(name?: string): Observable<LifecycleEvent>;
}
