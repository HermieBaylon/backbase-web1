import { ModuleWithProviders } from '@angular/core';
import { BackbaseCoreConfiguration, BackbaseRootConfiguration } from './core-config';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './rendering/root/root.component';
import * as ɵngcc2 from './rendering/area/area.component';
import * as ɵngcc3 from './rendering/chrome/chrome.component';
import * as ɵngcc4 from './routing/components/route.component';
import * as ɵngcc5 from './routing/components/outlet-collision.component';
import * as ɵngcc6 from './rendering/chrome/journey.component';
import * as ɵngcc7 from './routing/directives/router-link.directive';
import * as ɵngcc8 from './routing/directives/router-link-active.directive';
import * as ɵngcc9 from './routing/directives/router-outlet.directive';
import * as ɵngcc10 from '@angular/common';
import * as ɵngcc11 from '@angular/router';
export declare class BackbaseCoreModule {
    /**
     * Creates a module that will populate entryComponents with Components passed as classMap
     *
     * @usageNotes
     *
     * ### Example
     *
     * ```
     * @NgModule({
     *   imports: [
     *     BackbaseCoreModule.withConfig({
     *       classMap: {
     *         myClassId: MyComponent
     *       }
     *     })
     *   ]
     * })
     * class MyModule {}
     * ```
     */
    static withConfig(config: BackbaseCoreConfiguration): ModuleWithProviders<BackbaseCoreModule>;
    /**
     * Creates a configured BackbaseCoreModule.
     *
     * This should be called only once per app.
     *
     * @usageNotes
     *
     * ### Example
     *
     * ```
     * @NgModule({
     *   imports: [
     *     BackbaseCoreModule.forRoot({
     *       classMap: {
     *         myClassId: MyComponent,
     *         logDeprecations: true,
     *       }
     *     })
     *   ]
     * })
     * class AppModule {}
     * ```
     */
    static forRoot(config: BackbaseRootConfiguration): ModuleWithProviders<BackbaseCoreModule>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<BackbaseCoreModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<BackbaseCoreModule, [typeof ɵngcc1.RootComponent, typeof ɵngcc2.AreaComponent, typeof ɵngcc3.ChromeComponent, typeof ɵngcc4.RouteComponent, typeof ɵngcc5.OutletCollisionComponent, typeof ɵngcc6.JourneyComponent, typeof ɵngcc7.RouterLinkDirective, typeof ɵngcc7.RouterLinkWithHrefDirective, typeof ɵngcc8.RouterLinkActiveDirective, typeof ɵngcc9.RouterOutletDirective], [typeof ɵngcc10.CommonModule, typeof ɵngcc11.RouterModule], [typeof ɵngcc1.RootComponent, typeof ɵngcc2.AreaComponent, typeof ɵngcc3.ChromeComponent, typeof ɵngcc4.RouteComponent, typeof ɵngcc5.OutletCollisionComponent, typeof ɵngcc6.JourneyComponent, typeof ɵngcc7.RouterLinkDirective, typeof ɵngcc7.RouterLinkWithHrefDirective, typeof ɵngcc8.RouterLinkActiveDirective, typeof ɵngcc9.RouterOutletDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<BackbaseCoreModule>;
}

//# sourceMappingURL=backbase-core.module.d.ts.map