import { Routes } from '@angular/router';
import { Tree } from '../../models/tree';
import { OutletName } from './outlet-map';
import { RoutableItem } from './routable-item-tree';
import { ItemName } from '../../models/item-model';
export declare type ComponentRouteTree = Tree<ItemRoutes>;
/**
 * An ItemRoute represents a node in a routing tree, that is a
 * direct map of the CXP tree.
 *
 * The routes for each node represents the entire route tree from
 * this item down (this item's routes, merged with child routes).
 */
export interface ItemRoutes {
    item: ItemName;
    routes: Routes;
    outletName?: OutletName;
}
export declare const isRoutable: (itemRoutes: ItemRoutes) => boolean;
/**
 * Create a tree of the components with routes. This is a direct map of the
 * component tree. Each node in the tree holds all routes for the nodes beneath
 * it. So the root node in the returned tree will hold all the routes for the
 * entire component tree.
 */
export declare const routingTree: (tree: Tree<RoutableItem>, outlets: Map<ItemName, OutletName>) => ComponentRouteTree;
