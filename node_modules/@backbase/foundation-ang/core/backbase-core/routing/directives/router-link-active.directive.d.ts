import { AfterContentInit, ElementRef, OnChanges, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { RouterLinkDirective, RouterLinkWithHrefDirective } from './router-link.directive';
import { Router } from '@angular/router';
/**
 * Router link options
 */
import * as ɵngcc0 from '@angular/core';
export interface RouterLinkActiveOptions {
    /**
     * If it is `true`, the directive will add the classes only when the url matches the link exactly.
     * Default: `false`
     */
    exact?: boolean;
    /**
     * If it is defined, active link will get `aria-current` attribute set to the value provided and all
     * the other links will get `aria-current` set to `'false'`.
     * Default: `undefined`
     */
    ariaCurrent?: string;
}
/**
 *
 * @description
 *
 * Lets you add a CSS class and `aria-current` attribute to an element when the link's route becomes active.
 *
 * This directive lets you add a CSS class and `aria-current` attribute to an element when the link's route
 * becomes active.
 *
 * Consider the following example:
 *
 * ```
 * <a bbRouterLink="/user/bob" bbRouterLinkActive="active-link">Bob</a>
 * ```
 *
 * When the url is either '/user' or '/user/bob', the active-link class will
 * be added to the `a` tag. If the url changes, the class Will be removed.
 *
 * You can set more than one class, as follows:
 *
 * ```
 * <a bbRouterLink="/user/bob" bbRouterLinkActive="class1 class2">Bob</a>
 * <a bbRouterLink="/user/bob" [bbRouterLinkActive]="['class1', 'class2']">Bob</a>
 * ```
 *
 * You can configure RouterLinkActive by passing `exact: true`. This will add the classes
 * only when the url matches the link exactly.
 *
 * ```
 * <a bbRouterLink="/user/bob" bbRouterLinkActive="active-link" [bbRouterLinkActiveOptions]="{exact:
 * true}">Bob</a>
 * ```
 *
 * You can configure RouterLinkActive to set `aria-current` attribute for all links. If option is defined,
 * value will be added to the active link and `aria-current="false"` to the other links.
 *
 * ```
 * <a bbRouterLink="/user/bob" bbRouterLinkActive="active-link" [bbRouterLinkActiveOptions]="{ariaCurrent: 'page'}">
 *  Bob
 * </a>
 * ```
 *
 * You can assign the RouterLinkActive instance to a template variable and directly check
 * the `isActive` status.
 * ```
 * <a bbRouterLink="/user/bob" bbRouterLinkActive #rla="bbRouterLinkActive">
 *   Bob {{ rla.isActive ? '(already open)' : ''}}
 * </a>
 * ```
 *
 * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.
 *
 * ```
 * <div bbRouterLinkActive="active-link" [bbRouterLinkActiveOptions]="{exact: true}">
 *   <a bbRouterLink="/user/jim">Jim</a>
 *   <a bbRouterLink="/user/bob">Bob</a>
 * </div>
 * ```
 *
 * This will set the active-link class on the div tag if the url is either '/user/jim' or
 * '/user/bob'.
 *
 * @ngModule RouterModule
 *
 */
export declare class RouterLinkActiveDirective implements OnChanges, OnDestroy, AfterContentInit {
    private readonly router;
    private readonly element;
    private readonly renderer;
    private readonly link?;
    private readonly linkWithHref?;
    links: QueryList<RouterLinkDirective> | undefined;
    linksWithHrefs: QueryList<RouterLinkWithHrefDirective> | undefined;
    private classes;
    private readonly subscription;
    readonly isActive: boolean;
    bbRouterLinkActiveOptions: RouterLinkActiveOptions;
    constructor(router: Router, element: ElementRef, renderer: Renderer2, link?: RouterLinkDirective | undefined, linkWithHref?: RouterLinkWithHrefDirective | undefined);
    ngAfterContentInit(): void;
    set bbRouterLinkActive(data: Array<string> | string);
    ngOnChanges(): void;
    ngOnDestroy(): void;
    private updateClasses;
    private updateAria;
    private update;
    private isLinkActive;
    private hasActiveLinks;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<RouterLinkActiveDirective, [null, null, null, { optional: true; }, { optional: true; }]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<RouterLinkActiveDirective, "[bbRouterLinkActive]", ["bbRouterLinkActive"], { "bbRouterLinkActiveOptions": "bbRouterLinkActiveOptions"; "bbRouterLinkActive": "bbRouterLinkActive"; }, {}, ["links", "linksWithHrefs"]>;
}

//# sourceMappingURL=router-link-active.directive.d.ts.map