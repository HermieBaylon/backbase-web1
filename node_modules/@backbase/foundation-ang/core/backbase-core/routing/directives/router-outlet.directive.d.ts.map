{"version":3,"file":"router-outlet.directive.d.ts","sources":["router-outlet.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, ComponentFactoryResolver, ViewContainerRef, ChangeDetectorRef, OnInit, ComponentRef, EventEmitter } from '@angular/core';\nimport { ChildrenOutletContexts, Router, Data, ActivatedRoute } from '@angular/router';\nimport { RouterService } from '../navigation/router.service';\n/**\n * Includes the component associated with the current Route\n */\nexport declare class RouterOutletDirective implements OnInit, OnDestroy {\n    private readonly childrenOutletContexts;\n    private readonly componentFactoryResolver;\n    private readonly vcRef;\n    private readonly cdRef;\n    private readonly router;\n    private readonly bbRouter;\n    private outlet;\n    private nameValue;\n    private readonly destroy$;\n    private get name();\n    /**\n     * A router outlet will emit an activate event any time a new component\n     * is being instantiated.\n     */\n    activateEvents: EventEmitter<any>;\n    /**\n     * A router outlet will emit a deactivate event when the route component\n     * is being destroyed.\n     */\n    deactivateEvents: EventEmitter<any>;\n    get isActivated(): boolean;\n    get component(): Object;\n    get activatedRoute(): ActivatedRoute;\n    get activatedRouteData(): Data;\n    constructor(childrenOutletContexts: ChildrenOutletContexts, componentFactoryResolver: ComponentFactoryResolver, vcRef: ViewContainerRef, cdRef: ChangeDetectorRef, router: Router, bbRouter: RouterService);\n    private destroy;\n    private destroyChild;\n    private removeOutletFromUrl;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    attach(ref: ComponentRef<any>, activatedRoute: ActivatedRoute): void;\n    detach(): ComponentRef<any>;\n    deactivate(): void;\n    activateWith(activatedRoute: ActivatedRoute, resolver: ComponentFactoryResolver | null): void;\n}\n"]}