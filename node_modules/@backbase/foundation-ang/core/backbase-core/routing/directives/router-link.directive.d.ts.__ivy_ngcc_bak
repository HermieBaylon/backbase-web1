import { OnChanges, OnDestroy, Renderer2, ElementRef } from '@angular/core';
import { Router, ActivatedRoute, UrlTree } from '@angular/router';
import { LocationStrategy } from '@angular/common';
import { RouterService } from '../navigation/router.service';
export declare type QueryParamsHandling = 'merge' | 'preserve' | '';
export declare class RouterLinkWithHrefDirective implements OnChanges, OnDestroy {
    private readonly router;
    private readonly bbRouter;
    private readonly locationStrategy;
    private readonly el;
    private readonly renderer;
    target: string | undefined;
    queryParams: {
        [k: string]: any;
    } | undefined;
    fragment: string | undefined;
    queryParamsHandling: QueryParamsHandling | undefined;
    preserveFragment: boolean | undefined;
    skipLocationChange: boolean | undefined;
    replaceUrl: boolean | undefined;
    private commands;
    private readonly subscriptions;
    private readonly preserve;
    constructor(router: Router, bbRouter: RouterService, locationStrategy: LocationStrategy, el: ElementRef, renderer: Renderer2);
    set bbRouterLink(commands: Array<any> | string);
    ngOnChanges(): void;
    ngOnDestroy(): void;
    onClick(button: number, ctrlKey: boolean, metaKey: boolean, shiftKey: boolean): boolean;
    private updateTargetUrlAndHref;
    get urlTree(): Promise<UrlTree>;
}
export declare class RouterLinkDirective {
    private readonly router;
    private readonly route;
    private readonly bbRouter;
    queryParams: {
        [k: string]: any;
    } | undefined;
    fragment: string | undefined;
    queryParamsHandling: QueryParamsHandling | undefined;
    preserveFragment: boolean | undefined;
    skipLocationChange: boolean | undefined;
    replaceUrl: boolean | undefined;
    private commands;
    private readonly preserve;
    constructor(router: Router, route: ActivatedRoute, tabIndex: string, renderer: Renderer2, el: ElementRef, bbRouter: RouterService);
    set bbRouterLink(commands: Array<any> | string);
    onClick(): boolean;
    get urlTree(): Promise<UrlTree>;
}
