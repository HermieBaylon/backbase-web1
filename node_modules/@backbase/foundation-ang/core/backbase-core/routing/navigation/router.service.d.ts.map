{"version":3,"file":"router.service.d.ts","sources":["router.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Router, ActivatedRoute, NavigationExtras, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ItemModel } from '../../models/item-model';\nimport { AbstractRouterConfigService } from '../config/abstract-router-config.service';\nexport declare class RouterService {\n    private readonly router;\n    private readonly route;\n    private readonly itemModel;\n    private readonly routerConfig;\n    readonly outletName: Observable<string | undefined>;\n    /**\n     * Backbase Angular Router abstraction.\n     * See https://angular.io/api/router/Router\n     *\n     * The purpose for Backbase abstracting around the default Angular Router is\n     * when linking a to a bb-router-outlet. The outlet name for a bb-router-outlet\n     * is dynamically generated by a property on the model, so you can use the\n     * Backbase Router service to automatically apply the outletName to the navigation\n     * commands.\n     *\n     * @param router Angular Router\n     * @param route Angular ActivatedRoute\n     * @param itemModel Model of the Backbase Widget or Container\n     */\n    constructor(router: Router, route: ActivatedRoute, itemModel: ItemModel, routerConfig: AbstractRouterConfigService);\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     * See Angular Router.navigate\n     */\n    navigate(commands: Array<any>, extras?: NavigationExtras): Promise<boolean>;\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     * See Angular Router.createUrlTree\n     */\n    createUrlTree(commands: Array<any>, extras?: NavigationExtras): Promise<UrlTree>;\n    private outletCommands;\n}\n"]}