{"version":3,"file":"session-timeout.service.d.ts","sources":["session-timeout.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentRef, ViewContainerRef, ComponentFactoryResolver, InjectionToken } from '@angular/core';\n/**\n * The session timeout configuration.\n * Allows the application to manage the session timeout component class and inactivity modal time.\n */\nexport interface SessionTimeoutConfig {\n    /**\n     * The name of the component to be used for stepup mechanism\n     */\n    sessionTimeoutComponentClass: SessionTimeoutComponentType;\n    /**\n     * The time before session expiry that the modal should appear in seconds\n     */\n    inactivityModalTime: number;\n}\nexport declare const SESSION_TIMEOUT_CONFIG: InjectionToken<SessionTimeoutConfig>;\n/**\n * The interface for a SessionTimeoutComponent\n */\nexport interface SessionTimeoutComponent {\n    /**\n     * The default time in seconds to open the session timeout modal before session expiry.\n     * This will be overwritten if you set `maxInactivityDuration` in the experience configuration\n     */\n    inactivityModalTime: number;\n}\n/**\n * The session timeout component type, set to SessionTimeoutComponent\n */\nexport declare type SessionTimeoutComponentType = new (...args: Array<any>) => SessionTimeoutComponent;\n/**\n * The session timeout service creates a session timeout component instance within the root.\n */\nexport declare class SessionTimeoutService {\n    private readonly resolver;\n    private readonly sessionTimeoutConfig;\n    private sessionTimeoutComponentRef;\n    constructor(resolver: ComponentFactoryResolver, sessionTimeoutConfig: SessionTimeoutConfig);\n    get sessionTimeoutComponent(): ComponentRef<SessionTimeoutComponent>;\n    createSessionTimeoutComponent(sessionTimeoutContainer: ViewContainerRef): void;\n}\n"]}