import { PipelineSink, Sink } from '../pipeline-interface';
import { ӨItemNavigationService } from '../../item-navigation.service';
import { PipelineProcessorConfig } from '../pipeline-registry';
export interface ItemNavigateSink extends PipelineSink<any> {
    /**
     * Navigate to `targetName` when component outputs.
     *
     * @param targetName Navigate to the given cxp item by name.
     */
    sink: (targetName: string) => Sink<any>;
}
export declare const createItemNavigate: (itemNavigation: ӨItemNavigationService) => ItemNavigateSink;
/**
 * Configure the `ItemNavigateSink`.
 *
 * Use the string 'item-navigate' to configure this handler.
 *
 * Note: to pass route params you must use `RouteParamsStore` instead.
 *
 * @usageNotes
 *
 * Navigate between widgets
 *
 *
 * ```json
 * {
 *   "name": "widget-a",
 *   "properties": {
 *     "output.myOutput": "item-navigate widget-b"
 *   }
 * },
 * {
 *   "name": "widget-b"
 * }
 * ```
 *
 * See `RouteParamsStore` for more options.
 */
export declare const itemNavigateProcessorConfig: PipelineProcessorConfig<'item-navigate'>;
