import { Property } from '@backbase/foundation-ang/web-sdk';
import { AppConfigService } from '../../../models/app-config.service';
import { PipelineSource, Source } from '../pipeline-interface';
import { PipelineProcessorConfig } from '../pipeline-registry';
/**
 * @deprecated Will be removed in v7.0.0
 * A `PipelineProcessor` which can be used as a source for a component's
 * input.
 *
 * See `appConfigProcessorConfig` for configuration.
 */
export interface AppConfigSource extends PipelineSource<Property | undefined> {
    /**
     * @param configName the name of the app config property to read from
     */
    source: (configName: string) => Source<Property | undefined>;
}
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare const createAppConfigSource: (appConfig: AppConfigService) => PipelineSource<Property | undefined>;
/**
 * @deprecated Will be removed in v7.0.0
 * AppConfig Communication Transport
 *
 * Can be used in standalone development to configure communication using AppConfig
 */
export declare class AppConfig {
    /**
     * Generate a serialized communication configuration suitable for use as a Widget Input property value.
     *
     * @param group The name of the communication group to which the Input belongs
     */
    static toProperty(group: string): string;
}
/**
 * @deprecated Will be removed in v7.0.0
 * Configure the `AppConfigSource`.
 *
 * Use the `AppConfig.toProperty` helper to configure this handler.
 *
 * @usageNotes
 *
 * ```json
 * {
 *   "input.myInput": "AppConfig.toProperty(configPropertyName)", // read the value of application configuration
 * }
 * ```
 */
export declare const appConfigProcessorConfig: PipelineProcessorConfig;
