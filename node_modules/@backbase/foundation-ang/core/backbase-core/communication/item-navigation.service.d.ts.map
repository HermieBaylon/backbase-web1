{"version":3,"file":"item-navigation.service.d.ts","sources":["item-navigation.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { RouterConfigService } from '../routing/config/router-config.service';\nimport { Tree } from '../models/tree';\nimport { ItemRoutes } from '../routing/config/routing-tree';\nimport { RouteSegmentParams, RouterNavigationService } from '../routing/navigation/router-navigation.service';\nexport declare type FindRouteFunction = (tree: Tree<ItemRoutes>, index?: number, parent?: Tree<ItemRoutes>) => boolean;\n/**\n * @internal\n */\nexport declare class Ó¨ItemNavigationService {\n    private readonly routerConfig;\n    private readonly navigationService;\n    constructor(routerConfig: RouterConfigService, navigationService: RouterNavigationService);\n    navigateToItem(itemName: string, params: RouteSegmentParams): Promise<boolean>;\n    private isItemChild;\n    navigateToChild(navigateToParent: string, childIndex: number, params: RouteSegmentParams): Promise<boolean>;\n    private navigateToRoute;\n    /**\n     * Search the component tree for a given item, and return the route to that item.\n     *\n     * @param itemName The CXP instance name of the item to route to.\n     */\n    private routeToItem;\n    /**\n     * Breadth-first-search of routes, to find a route to a given item.\n     *\n     * 1. Find the branch to this item in the component route tree.\n     * 2. Once found, find the closest routable parent.\n     * 3. Take the child of the routable parent.\n     * 4. For each route in the parent, use the \"RouteComponentStrategy\" to determine\n     *      which route the route-child is rendered in.\n     * 5. Once the route is found, flatten the routes of the componentRouteTree up to that route.\n     *\n     * @param itemName\n     * @param routes\n     */\n    private findItemRoute;\n    private isItemInRoute;\n}\n"]}