{"version":3,"file":"flows.service.d.ts","sources":["flows.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nexport declare type ClassId = string;\nexport declare type OutputName = string;\nexport declare type InputName = string;\nexport interface ComponentOutputConfig {\n    classId: ClassId;\n    outputName: OutputName;\n}\nexport interface ComponentInputConfig {\n    classId: ClassId;\n    inputName?: InputName;\n}\nexport interface CommunicationFlowConfig {\n    output: ComponentOutputConfig;\n    input: ComponentInputConfig;\n    mapPayload?: (payload: any) => any;\n}\nexport interface Flow {\n    output: OutputName;\n    input?: InputName;\n    map?: (payload: any) => any;\n}\nexport declare const CONFIG_FLOWS: InjectionToken<CommunicationFlowConfig[][]>;\nexport declare class FlowsService {\n    private readonly transitions;\n    constructor(flowsConfig: // eslint-disable-next-line @typescript-eslint/array-type\n    Array<CommunicationFlowConfig>[] | null);\n    private addFlow;\n    getFlows(from: ClassId, fromOutput: OutputName, to: Array<ClassId>, toInput: InputName | undefined): Array<Flow>;\n}\n"]}