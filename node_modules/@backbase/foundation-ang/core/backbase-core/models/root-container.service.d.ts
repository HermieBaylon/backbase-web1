import { CommunicationDefinition } from '@backbase/communication-property';
import { Observable } from 'rxjs';
import { ItemLocation, Item, Properties } from '@backbase/foundation-ang/web-sdk';
import { ItemModel } from '../models/item-model';
import { ObservableTree } from '../models/tree';
import * as ɵngcc0 from '@angular/core';
export declare const ROOT_COMPONENT_CLASS_ID = "RootComponent";
export interface InsertUpdate {
    item: Item;
    itemLocation: ItemLocation;
}
export interface PropertyUpdate {
    name: string;
    properties: Properties;
}
export declare type RemovalUpdate = ItemLocation;
export declare type ModelUpdate = InsertUpdate | PropertyUpdate | RemovalUpdate;
export declare const isInsert: (update: ModelUpdate) => update is InsertUpdate;
export declare const isPropertyUpdate: (update: ModelUpdate) => update is PropertyUpdate;
export declare const isRemovalUpdate: (update: ModelUpdate) => update is {
    parentName: string;
    index: number;
};
/**
 * The root container is basically the page model, but we don't assume that the
 * angular app is the entire page. It could just be a subset of the page model,
 * hence we call it "root container"
 *
 * @internal
 */
export declare class ӨRootContainerService {
    private readonly propertyUpdates;
    private readonly inserts;
    private readonly removals;
    readonly modelUpdates: Observable<ModelUpdate>;
    private readonly defaultValue;
    private readonly rootContainerItem;
    model: Observable<ObservableTree<ItemModel>>;
    private createInitialModelState;
    private createModelStateNode;
    private get rootName();
    private isDefaultContainer;
    isBootstrapped(): boolean;
    updateItem(name: string, properties: Partial<Properties>): void;
    insertItem(item: Item, itemLocation: ItemLocation): void;
    removeItem(itemName: string, itemLocation: ItemLocation): void;
    private filter;
    private getCommunicationGroupItems;
    commonAncestor(groupDefinition: CommunicationDefinition): Observable<ItemModel | undefined>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ӨRootContainerService, never>;
}

//# sourceMappingURL=root-container.service.d.ts.map