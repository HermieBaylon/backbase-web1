{"version":3,"file":"root-container.service.d.ts","sources":["root-container.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { CommunicationDefinition } from '@backbase/communication-property';\nimport { Observable } from 'rxjs';\nimport { ItemLocation, Item, Properties } from '@backbase/foundation-ang/web-sdk';\nimport { ItemModel } from '../models/item-model';\nimport { ObservableTree } from '../models/tree';\nexport declare const ROOT_COMPONENT_CLASS_ID = \"RootComponent\";\nexport interface InsertUpdate {\n    item: Item;\n    itemLocation: ItemLocation;\n}\nexport interface PropertyUpdate {\n    name: string;\n    properties: Properties;\n}\nexport declare type RemovalUpdate = ItemLocation;\nexport declare type ModelUpdate = InsertUpdate | PropertyUpdate | RemovalUpdate;\nexport declare const isInsert: (update: ModelUpdate) => update is InsertUpdate;\nexport declare const isPropertyUpdate: (update: ModelUpdate) => update is PropertyUpdate;\nexport declare const isRemovalUpdate: (update: ModelUpdate) => update is {\n    parentName: string;\n    index: number;\n};\n/**\n * The root container is basically the page model, but we don't assume that the\n * angular app is the entire page. It could just be a subset of the page model,\n * hence we call it \"root container\"\n *\n * @internal\n */\nexport declare class Ó¨RootContainerService {\n    private readonly propertyUpdates;\n    private readonly inserts;\n    private readonly removals;\n    readonly modelUpdates: Observable<ModelUpdate>;\n    private readonly defaultValue;\n    private readonly rootContainerItem;\n    model: Observable<ObservableTree<ItemModel>>;\n    private createInitialModelState;\n    private createModelStateNode;\n    private get rootName();\n    private isDefaultContainer;\n    isBootstrapped(): boolean;\n    updateItem(name: string, properties: Partial<Properties>): void;\n    insertItem(item: Item, itemLocation: ItemLocation): void;\n    removeItem(itemName: string, itemLocation: ItemLocation): void;\n    private filter;\n    private getCommunicationGroupItems;\n    commonAncestor(groupDefinition: CommunicationDefinition): Observable<ItemModel | undefined>;\n}\n"]}