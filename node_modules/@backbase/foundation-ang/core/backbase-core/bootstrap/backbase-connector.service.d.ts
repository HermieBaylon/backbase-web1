import { NgZone } from '@angular/core';
import { Item, ItemLocation, Properties, RenderingStrategy } from '@backbase/foundation-ang/web-sdk';
import { AppConfigService } from '../models/app-config.service';
import { ӨRootContainerService } from '../models/root-container.service';
import { ItemLifecycleService } from '../rendering/item-lifecycle.service';
/**
 * @deprecated Will be removed in v7.0.0
 */
import * as ɵngcc0 from '@angular/core';
export declare const isRootContainerItem: (item: Item) => boolean;
/**
 * @deprecated Will be removed in v7.0.0
 */
export declare class BackbaseConnector implements RenderingStrategy {
    private readonly zone;
    private readonly appConfig;
    private readonly rootContainer;
    private readonly lifeCycle;
    /**
     * BackbaseConnectorService constructor
     * @param zone NgZone to be used for manipulations with an item
     * @param componentInjectors Backbase core components injector service to handle the model
     */
    constructor(zone: NgZone, appConfig: AppConfigService, rootContainer: ӨRootContainerService, lifeCycle: ItemLifecycleService);
    private filterItem;
    /**
     * Bootstrap function to be called on page model initialization,
     * and when new item added to the model (dropped on the page).
     * @param item Item to bootstrap
     * @param itemLocation Location of the item
     */
    bootstrap(item: Item, itemLocation: ItemLocation): Promise<boolean | void>;
    /**
     * Update function will be called when properties are changed for
     * one of the existing items on a page.
     * @param item Updated item
     * @param itemLocation Location of the item
     * @param changes Object which contains only changed properties and their values
     */
    update(item: Item, _: ItemLocation, itemProperties: Partial<Properties>): Promise<void>;
    /**
     * Remove function will be called when existing item is removed from the page.
     * @param item Item to remove
     * @param itemLocation Location of the item
     */
    remove(item: Item, itemLocation: ItemLocation): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<BackbaseConnector, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<BackbaseConnector>;
}

//# sourceMappingURL=backbase-connector.service.d.ts.map