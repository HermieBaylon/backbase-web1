{"version":3,"file":"backbase-foundation-ang-web-sdk.js","sources":["../../../../projects/backbase/foundation-ang/web-sdk/src/page-config.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/providers.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/auth-events.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/deprecated/providers.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/web-sdk-api-ang.module.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/pub-sub.service.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/set-locale.service.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/web-sdk.module.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/public-api.ts","../../../../projects/backbase/foundation-ang/web-sdk/src/backbase-foundation-ang-web-sdk.ts"],"names":["setLocaleFactory","_PortalContentMock"],"mappings":"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","sourcesContent":["import { PageConfig } from '@backbase/lib-bb-page-bootstrap-cdn';\nimport { InjectionToken } from '@angular/core';\nimport { WebSdkServiceMap } from './providers';\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const PAGE_CONFIG = new InjectionToken<PageConfig>('web-sdk-page-config');\n\nconst defaultPageConfig: PageConfig = {\n  apiRoot: '/gateway/api/',\n  staticResourcesRoot: '/',\n  currentLink: '',\n  pageName: '',\n  portalName: '',\n  version: '6',\n  locale: 'en-US',\n  locales: ['en-US'],\n  currentLinkUUID: '',\n  designmode: false,\n  cspNonce: '',\n  linkRoot: '/gateway',\n  webSdkVersion: '',\n  userId: '',\n};\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function getPageConfig(webSdkServiceMap: WebSdkServiceMap = {}): PageConfig {\n  const pageConfig = webSdkServiceMap.pageConfig\n    ? { ...defaultPageConfig, ...webSdkServiceMap.pageConfig() }\n    : defaultPageConfig;\n\n  return pageConfig;\n}\n","import { InjectionToken } from '@angular/core';\n\nimport {\n  Navigation,\n  Pubsub,\n  PortalContent,\n  BackbaseAuth,\n  HttpInterceptors,\n  Refresh,\n  SetLocale,\n  PageConfig,\n} from '@backbase/lib-bb-page-bootstrap-cdn';\nimport { PropertyResolver } from '@backbase/foundation-ang/entitlements';\n\n/**\n * @deprecated Will be removed in v7.0.0. Use the `PubSubService` class instead.\n */\nexport const PUBSUB = new InjectionToken<Pubsub>('web-sdk-pubsub');\n/**\n * @deprecated Will be removed in v7.0.0. Use the `SetLocaleService` class instead.\n */\nexport const SET_LOCALE = new InjectionToken<SetLocale>('web-sdk-set-locale');\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface WebSdkServiceMap {\n  pageConfig?: () => PageConfig;\n  navigation?: () => Navigation;\n  eventBus?: () => Pubsub;\n  portalContent?: () => PortalContent;\n  auth?: () => BackbaseAuth;\n  httpInterceptors?: () => HttpInterceptors;\n  refresh?: () => Refresh;\n  setLocale?: () => SetLocale;\n  conditions?: () => Pick<PropertyResolver, 'resolveEntitlements'>;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface ExternalServices {\n  [key: string]: () => any;\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const EMBEDDED_SERVICES = new InjectionToken<WebSdkServiceMap>('embedded platform services');\n\n/**\n * @description\n * Service to reauthenticate a user.\n *\n * @example\n * export class SigningService {\n *   constructor(\n *     @Inject(REAUTHENTICATE) private reauthenticateService: ReauthenticateService,\n *   ) {\n *     this.reauthenticate(error);\n *   }\n *\n *   private reauthenticate(error: HttpErrorResponse) {\n *     const { acrValues, scope } = this.getChallenge(error);\n *     this.reauthenticateService.reauthenticate(scope, acrValues);\n *   }\n *\n *   private getReauthChallenge(error: HttpErrorResponse) {\n *     const challenges = error.error ? error.error.challenges : [];\n *     return challenges.find(c => c.scope !== undefined);\n *   }\n * }\n */\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const EXTERNAL_SERVICES = new InjectionToken<WebSdkServiceMap>('external platform services');\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const WEBSDK_SERVICE_MAP = new InjectionToken<WebSdkServiceMap>('Web SDK Service Map');\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function websdkServiceFactory<\n  K extends keyof WebSdkServiceMap,\n  T extends ReturnType<Required<WebSdkServiceMap>[K]>\n>(webSdkServiceMap: WebSdkServiceMap | undefined, serviceKey: K): T | undefined {\n  if (!webSdkServiceMap) {\n    return undefined;\n  }\n  const factory = webSdkServiceMap[serviceKey];\n  if (!factory) {\n    return undefined;\n  }\n  return factory() as T; // TS isn't smart enough to know that factory() is T.\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function navigationFactory(webSdkServiceMap?: WebSdkServiceMap): Navigation | undefined {\n  return websdkServiceFactory(webSdkServiceMap, 'navigation');\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function pubsubFactory(webSdkServiceMap?: WebSdkServiceMap): Pubsub | undefined {\n  return websdkServiceFactory(webSdkServiceMap, 'eventBus');\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function portalContentFactory(webSdkServiceMap?: WebSdkServiceMap): PortalContent | undefined {\n  return websdkServiceFactory(webSdkServiceMap, 'portalContent');\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function setLocaleFactory(webSdkServiceMap?: WebSdkServiceMap): SetLocale | undefined {\n  return websdkServiceFactory(webSdkServiceMap, 'setLocale');\n}\n","import { from, fromEventPattern, Observable, ReplaySubject } from 'rxjs';\nimport { BackbaseAuth as BackbaseAuthCdn, Pubsub } from '@backbase/lib-bb-page-bootstrap-cdn';\n\nexport interface AccessToken {\n  raw: string;\n  parsed: any;\n}\n\nexport interface AuthSuccess {\n  currentAccessToken: AccessToken;\n}\n\nexport interface AuthEvents {\n  /**\n   * Emits once after authorisation is initiated, then completes.\n   *\n   * If the user is authorised, emits with AccessToken.\n   *\n   * If the user is not authorised, emits with undefined;\n   */\n  init: Observable<AuthSuccess | undefined>;\n  /**\n   * Emits when a user is successfully authenticated.\n   */\n  success: Observable<AuthSuccess>;\n  /**\n   * Emits when the session ends.\n   */\n  end: Observable<void>;\n  /**\n   * Emits if there was an error during authentication.\n   */\n  error: Observable<void>;\n}\n\n/**\n * Convert a pubsub event to a replay subject.\n */\nconst fromPubsub = <T = void>(eventName: string, pubsub: Pubsub): ReplaySubject<T> => {\n  const pubsubObservable = fromEventPattern<T>(\n    function (handler) {\n      return pubsub.subscribe(eventName, handler);\n    },\n    function (_, unsubscribe) {\n      unsubscribe();\n    },\n  );\n  // Subscribe now, and cache with ReplaySubject\n  const pubsubReplay = new ReplaySubject<T>(1);\n  pubsubObservable.subscribe(pubsubReplay);\n  return pubsubReplay;\n};\n\n// @todo: remove when lean client adds this\nexport interface BackbaseAuth extends BackbaseAuthCdn {\n  initToken: Promise<AuthSuccess | undefined>;\n}\n\n/**\n * We wrap the pubsub events from web-sdk in streams.\n *\n * The main reason to do this is to ensure that we are subscribing to these\n * events *before* they emit. We'll then ensure they replay\n */\nexport const wrapAuthEvents = (auth: BackbaseAuth, pubsub: Pubsub): AuthEvents => ({\n  init: from(auth.initToken),\n  success: fromPubsub<AuthSuccess>('auth:success', pubsub),\n  end: fromPubsub('auth:end', pubsub),\n  error: fromPubsub('auth:error', pubsub),\n});\n","import { InjectionToken } from '@angular/core';\nimport {\n  BackbaseAuth,\n  Countdown,\n  GoToLoginPage,\n  HttpInterceptors,\n  Login,\n  Logout,\n  Navigation,\n  PortalContent,\n  PropertyResolver,\n  Reauthenticate,\n  Refresh,\n  RefreshSession,\n  TimeToLive,\n} from '@backbase/lib-bb-page-bootstrap-cdn';\nimport { AuthEvents, wrapAuthEvents } from '../auth-events';\nimport { websdkServiceFactory, WebSdkServiceMap } from '../providers';\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const HTTP_INTERCEPTORS = new InjectionToken<HttpInterceptors>('web-sdk-http-interceptors');\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const REFRESH = new InjectionToken<Refresh>('web-sdk-refresh');\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const NAVIGATION = new InjectionToken<Navigation>('web-sdk-navigation');\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const PORTAL_CONTENT = new InjectionToken<PortalContent>('web-sdk-portal-content');\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const AUTH_EVENTS = new InjectionToken<AuthEvents>('Web SDK auth event streams');\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface LoginService {\n  /**\n   * @description method to login\n   * @param {string} username\n   * @param {string} password\n   * @return {Promise} promise that resolves when user is logged in\n   */\n  login: Login;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface LogoutService {\n  /**\n   * @description method to logout\n   * @param {string} redirectUri url for redirecting to after logout is done\n   * @return {Promise} promise that is resolved when logout is done\n   */\n  logout: Logout;\n  /**\n   * @description method to redirect to login page set in auth configuration\n   * @param {string} redirectUri parameter used by hybrid authentication.\n   *                  It is passed to Keycloak so when user gets authenticated on IAM server,\n   *                  that server redirects to this redirectUri.\n   *                  Usually redirectUri is the url of the page user is redirected from, or landing page of the portal.\n   * @return {void}\n   */\n  goToLoginPage: GoToLoginPage;\n}\n/**\n *\n * @deprecated Will be removed in v7.0.0\n *\n * @description\n * Token to get instance of LoginService.\n * Example of the use case: to implement custom login widget.\n *\n * @example\n * constructor(@Inject(LOGIN) private loginService: LoginService) {}\n */\nexport const LOGIN = new InjectionToken<LoginService>('web-sdk-login');\n\n/**\n *\n * @deprecated Will be removed in v7.0.0\n * @description\n * Token to get instance of LogoutService.\n * Examples of the use cases: to implement custom logout widget or to logout user based on some custom logic.\n *\n * @example\n * constructor(@Inject(LOGOUT) private logoutService: LogoutService) {}\n */\nexport const LOGOUT = new InjectionToken<LogoutService>('web-sdk-logout');\n/**\n * @deprecated Will be removed in v7.0.0\n * @description\n * Token to get instance of SessionService.\n * Examples of the use cases:\n * - to register custom countdown to show modal before session is over\n * - to refresh session.\n *\n * @example\n * constructor(@Inject(SESSION) private sessionService: SessionService) {}.\n */\nexport const SESSION = new InjectionToken<SessionService>('web-sdk-session');\n/**\n * @deprecated Will be removed in v7.0.0\n * @description\n * Token to get instance of ReauthenticateService.\n * Examples of the use cases:\n * - to reauthenticate a user.\n *\n * @example\n * constructor(@Inject(REAUTHENTICATE) private reauthenticateService: ReauthenticateService) {}.\n */\nexport const REAUTHENTICATE = new InjectionToken<ReauthenticateService>('web-sdk-reauthenticate');\n\nexport type CountdownRegister = (countdown: Countdown) => () => void;\n\n/**\n * @deprecated Will be removed in v7.0.0\n * @description\n * Token to get lean-client services map directly.\n * Used internally by foundation-ang to register lean-client services into the angular app.\n */\n\nexport interface ReauthenticateService {\n  /**\n   * @description method to reauthenticate a user\n   * @param {string} scope identifies the resource or permission that the user is consenting to.\n   * @param {string} acrValues a space-delimited list of acceptable levels of assurance.\n   *                  Can be used by the IdP to steer the authentication flow.\n   * @param {ReauthConfig} [reauthConfig] A configuration allowing the passing of optional parameters.\n   * @return {Promise}\n   */\n  reauthenticate: Reauthenticate;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n * @description\n * Service to register custom countdown callbacks, to refresh session, to get time to live of the session.\n *\n * @example\n * export class CountdownService {\n *   constructor(\n *     @Inject(SESSION) private sessionService: SessionService,\n *     private modalService: ModalService,\n *   ) {\n *     this.registerCountdown();\n *   }\n *\n *   private registerCountdown() {\n *     this.sessionService.registerCountdown({\n *       start: () => {\n *         this.modalService.open({\n *           header: 'Session notification',\n *           message: 'Your session will expire soon',\n *           okHandler: () => this.sessionService.refresh()\n *         });\n *       },\n *       end: () => {\n *         this.modalService.open('session', {\n *           header: 'Session notification',\n *           question: 'Your session is expired! Do you want to log in?',\n *           okHandler: () => this.sessionService.refresh(),\n *         });\n *       },\n *       reset: () => {\n *         this.modalService.close();\n *       },\n *       duration: 20, //seconds\n *     });\n *   }\n * }\n */\nexport interface SessionService {\n  /**\n   * @description Refreshes session\n   * @return {Promise} promise that will be resolved when session is refreshed\n   */\n  refresh: RefreshSession;\n  /**\n   * @description Registers countdown callbacks.\n   * @param {Countdown} countdown\n   */\n  registerCountdown: CountdownRegister;\n  /**\n   * @description Returns time to live of the session\n   * @return {number} time to live of the session (seconds)\n   */\n  timeToLive: TimeToLive;\n  /**\n   * @description Whether the user is being impersonated\n   */\n  isImpersonated: boolean;\n}\n\n/**\n * This returns a BackbaseAuth, but with the `keysToCheck` as required, not optional.\n */\nfunction getAuth<K extends keyof BackbaseAuth, T extends Required<Pick<BackbaseAuth, K>>>(\n  serviceName: string,\n  keysToCheck: Array<K>,\n  externalServices?: WebSdkServiceMap,\n  optionalKeys?: Array<K>,\n): T {\n  const auth = websdkServiceFactory(externalServices, 'auth');\n  if (!auth) {\n    throw new Error('Authentication Service is not available.');\n  }\n  keysToCheck.forEach((key: K) => {\n    if (!auth[key] && !optionalKeys?.includes(key)) {\n      throw new Error(\n        `'${serviceName}' Service cannot be injected because '${key}' is not available in authentication '${auth.config.kind}' strategy.`,\n      );\n    }\n  });\n  return (auth as unknown) as T; // this is guaranteed by the above checks\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function loginFactory(webSdkServiceMap?: WebSdkServiceMap): LoginService {\n  const auth = getAuth('Login', ['login'], webSdkServiceMap);\n  return {\n    login: auth.login,\n  };\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function logoutFactory(webSdkServiceMap?: WebSdkServiceMap): LogoutService {\n  const auth = getAuth('Logout', ['logout', 'goToLoginPage'], webSdkServiceMap);\n  return {\n    logout: auth.logout,\n    goToLoginPage: auth.goToLoginPage,\n  };\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function sessionFactory(webSdkServiceMap?: WebSdkServiceMap): SessionService {\n  const auth = getAuth('Session', ['register', 'refresh', 'timeToLive', 'isImpersonated'], webSdkServiceMap, [\n    'isImpersonated',\n  ]);\n  return {\n    registerCountdown: auth.register,\n    refresh: auth.refresh,\n    timeToLive: auth.timeToLive,\n    isImpersonated: auth.isImpersonated ? auth.isImpersonated() : false,\n  };\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function reauthenticateFactory(webSdkServiceMap?: WebSdkServiceMap): ReauthenticateService {\n  const auth = getAuth('Reauthenticate', ['reauthenticate'], webSdkServiceMap);\n  return {\n    reauthenticate: auth.reauthenticate,\n  };\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function getAuthEvents(webSdkServices: WebSdkServiceMap): AuthEvents {\n  if (!webSdkServices.auth || !webSdkServices.eventBus) {\n    throw new Error('Unable to listen to auth events');\n  }\n  // @todo: remove 'as any' when web-sdk updates BackbaseAuth\n  return wrapAuthEvents(webSdkServices.auth() as any, webSdkServices.eventBus());\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function refreshFactory(webSdkServiceMap?: WebSdkServiceMap): Refresh | undefined {\n  return websdkServiceFactory(webSdkServiceMap, 'refresh');\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function httpInterceptorsFactory(webSdkServiceMap?: WebSdkServiceMap): HttpInterceptors | undefined {\n  return websdkServiceFactory(webSdkServiceMap, 'httpInterceptors');\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function setConditionsFactory(\n  webSdkServiceMap?: WebSdkServiceMap,\n): Pick<PropertyResolver, 'resolveEntitlements'> | undefined {\n  return websdkServiceFactory(webSdkServiceMap, 'conditions');\n}\n","import { NgModule, Optional } from '@angular/core';\nimport { PAGE_CONFIG, getPageConfig } from './page-config';\nimport {\n  EXTERNAL_SERVICES,\n  WEBSDK_SERVICE_MAP,\n  PUBSUB,\n  navigationFactory,\n  pubsubFactory,\n  portalContentFactory,\n  SET_LOCALE,\n  setLocaleFactory,\n  ExternalServices,\n  WebSdkServiceMap,\n  EMBEDDED_SERVICES,\n} from './providers';\n\nimport { CONDITIONS } from '@backbase/foundation-ang/entitlements';\nimport {\n  AUTH_EVENTS,\n  getAuthEvents,\n  httpInterceptorsFactory,\n  HTTP_INTERCEPTORS,\n  LOGIN,\n  loginFactory,\n  LOGOUT,\n  logoutFactory,\n  NAVIGATION,\n  PORTAL_CONTENT,\n  REAUTHENTICATE,\n  reauthenticateFactory,\n  REFRESH,\n  refreshFactory,\n  SESSION,\n  sessionFactory,\n  setConditionsFactory,\n} from './deprecated/providers';\n\nexport function getWebSdkServiceMap(\n  externalServices?: ExternalServices,\n  embeddedServices?: WebSdkServiceMap,\n): WebSdkServiceMap {\n  return {\n    ...embeddedServices,\n    ...externalServices,\n  };\n}\n\n/**\n * Provides the following services:\n *\n * - `PageConfig`\n * - `Navigation`\n * - `Pubsub`\n * - `PortalConten`\n * - `LoginService`\n * - `LogoutService`\n * - `SessionService`\n * - `ReauthenticateService`\n * - `HttpInterceptors`\n * - `Refresh`\n * - `SetLocale`\n * - `Conditions`\n *\n * Notes:\n *  - The implementations of these services are provided via the Lean Page.\n *  - You must use the following injection tokens to any of inject these services.\n *\n * @usageNotes\n *\n * ```\n * constructor(\n *   @Inject(PAGE_CONFIG) pageConfig: PageConfig,\n *   @Inject(NAVIGATION) navigation: Navigation,\n *   @Inject(PUBSUB) pubsub: Pubsub,\n *   @Inject(PORTAL_CONTENT) portalContent: PortalContent\n *   @Inject(LOGIN) login: LoginService,\n *   @Inject(LOGOUT) logout: LogoutService,\n *   @Inject(SESSION) session: SessionService,\n *   @Inject(REAUTHENTICATE) reauthenticate: ReauthenticateService,\n *   @Inject(HTTP_INTERCEPTORS) httpInterceptors, HttpInterceptors,\n *   @Inject(REFRESH) refresh: Refresh,\n *   @Inject(SET_LOCALE) setLocale: SetLocale,\n *   @Inject(CONDITIONS) conditions: Conditions,\n * ) {}\n * ```\n */\n@NgModule({\n  imports: [],\n  declarations: [],\n  providers: [\n    {\n      provide: WEBSDK_SERVICE_MAP,\n      useFactory: getWebSdkServiceMap,\n      deps: [\n        [new Optional(), EXTERNAL_SERVICES],\n        [new Optional(), EMBEDDED_SERVICES],\n      ],\n    },\n    {\n      provide: PAGE_CONFIG,\n      useFactory: getPageConfig,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: NAVIGATION,\n      useFactory: navigationFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: PUBSUB,\n      useFactory: pubsubFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: PORTAL_CONTENT,\n      useFactory: portalContentFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: LOGIN,\n      useFactory: loginFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: LOGOUT,\n      useFactory: logoutFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: SESSION,\n      useFactory: sessionFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: REAUTHENTICATE,\n      useFactory: reauthenticateFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useFactory: httpInterceptorsFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: REFRESH,\n      useFactory: refreshFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: SET_LOCALE,\n      useFactory: setLocaleFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: CONDITIONS,\n      useFactory: setConditionsFactory,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n    {\n      provide: AUTH_EVENTS,\n      useFactory: getAuthEvents,\n      deps: [WEBSDK_SERVICE_MAP],\n    },\n  ],\n})\nexport class WebSdkApiModule {}\n","import { Injectable } from '@angular/core';\nimport { PubsubListener } from './public-api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PubSubService {\n  private listenersMap: Map<string, Array<PubsubListener<any>>>;\n\n  private getListeners = (string: string): Array<PubsubListener<any>> => this.listenersMap.get(string) || [];\n\n  constructor() {\n    this.listenersMap = new Map<string, Array<PubsubListener<any>>>();\n  }\n\n  publish<T>(string: string, payload: T): void {\n    const listeners = this.getListeners(string);\n    listeners.forEach(listener => {\n      try {\n        listener(payload);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }\n\n  subscribe<T>(string: string, listener: PubsubListener<T>): () => void {\n    const listeners = this.getListeners(string);\n    const newListeners = [...listeners, listener];\n    this.listenersMap.set(string, newListeners);\n    return () => {\n      this.unsubscribe<T>(string, listener);\n    };\n  }\n\n  unsubscribe<T>(string: string, listener: PubsubListener<T>): void {\n    const listeners = this.getListeners(string);\n    const newListeners = listeners.filter(currentListener => currentListener !== listener);\n    this.listenersMap.set(string, newListeners);\n  }\n\n  unsubscribeAll(): void {\n    this.listenersMap.clear();\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nconst COOKIE_NAME = 'bb-locale';\n\n//TODO: Remove dynamic when Ivy compilation is enabled\n//@dynamic\n@Injectable({\n  providedIn: 'root',\n})\nexport class SetLocaleService {\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  getCookieName(): string {\n    return COOKIE_NAME;\n  }\n\n  setLocale(locale: string) {\n    this.document.cookie = `${COOKIE_NAME}=${locale}; path=/`;\n  }\n\n  /**\n   * @deprecated Will be removed in v7.0.0\n   */\n  protected setLocaleLegacy(locale: string) {\n    this.setLocale(locale);\n\n    return Promise.resolve({\n      status: 200,\n      statusText: 'OK',\n      headers: {},\n      body: '',\n    });\n  }\n}\n","import type { ModuleWithProviders } from '@angular/core';\nimport { Inject, InjectionToken, LOCALE_ID, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { AuthKind, CdnPageConfig, HybridConfig, initialise } from '@backbase/lib-bb-page-bootstrap-cdn';\nimport {\n  navigationFactory,\n  portalContentFactory,\n  PUBSUB,\n  SET_LOCALE,\n  WEBSDK_SERVICE_MAP,\n  WebSdkServiceMap,\n} from './providers';\n\nimport { PubSubService } from './pub-sub.service';\nimport { getPageConfig, PAGE_CONFIG } from './page-config';\nimport { EntitlementsModule } from '@backbase/foundation-ang/entitlements';\nimport {\n  AUTH_EVENTS,\n  getAuthEvents,\n  HTTP_INTERCEPTORS,\n  httpInterceptorsFactory,\n  LOGIN,\n  loginFactory,\n  LOGOUT,\n  logoutFactory,\n  NAVIGATION,\n  PORTAL_CONTENT,\n  REAUTHENTICATE,\n  reauthenticateFactory,\n  REFRESH,\n  refreshFactory,\n  SESSION,\n  sessionFactory,\n} from './deprecated/providers';\nimport { SetLocaleService } from './set-locale.service';\n\nexport interface WebSdkConfig {\n  apiRoot?: string;\n  staticResourcesRoot?: string;\n  auth?: Omit<HybridConfig, 'kind' | 'loginPageUrl' | 'landingPageUrl'>;\n  locales?: Array<string>;\n  features?: any;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const WEBSDK_CONFIG = new InjectionToken<WebSdkConfig>('web sdk config');\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function setLocaleFactory(setLocale: SetLocaleService) {\n  const setLocale$ = setLocale as any;\n  return setLocale$.setLocaleLegacy;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport function bootstrapWebsdkService(config: WebSdkConfig, locale: string): WebSdkServiceMap {\n  const locales: Array<string> = config.locales || [locale];\n  if (!locales.includes(locale)) {\n    locales.push(locale);\n  }\n  const rawConfig: CdnPageConfig = {\n    apiRoot: config.apiRoot || '/api',\n    locale,\n    staticResourcesRoot: '/',\n    ...config,\n    locales: locales.join(','),\n    auth: {\n      authUrl: '/auth',\n      clientId: 'bb-web-client',\n      realm: 'backbase',\n      scope: 'openid',\n      ...config.auth,\n      kind: AuthKind.Hybrid,\n      loginPageUrl: '',\n      landingPageUrl: '',\n    } as HybridConfig,\n  };\n\n  const {\n    pageConfig,\n    pubsub,\n    navigation,\n    portalContent,\n    auth,\n    httpInterceptors,\n    itemRefresher,\n    setLocale,\n    conditions,\n  } = initialise(rawConfig);\n\n  return {\n    pageConfig: () => pageConfig,\n    navigation: () => navigation,\n    eventBus: () => pubsub,\n    portalContent: () => portalContent,\n    auth: () => auth,\n    httpInterceptors: () => httpInterceptors,\n    refresh: () => itemRefresher.refresh,\n    setLocale: () => setLocale,\n    conditions: () => conditions,\n  };\n}\n\n@NgModule({\n  imports: [EntitlementsModule],\n  providers: [\n    { provide: PUBSUB, useExisting: PubSubService },\n    {\n      provide: SET_LOCALE,\n      deps: [SetLocaleService],\n      useFactory: setLocaleFactory,\n    },\n  ],\n})\nexport class WebSdkModule {\n  constructor(\n    @Optional() @Inject(WEBSDK_CONFIG) config: WebSdkConfig,\n    @Optional() @SkipSelf() parentModule: WebSdkModule,\n  ) {\n    if (parentModule) {\n      throw new TypeError(`WebSdkModule is imported twice. It should only be imported in the AppModule`);\n    }\n\n    if (!config) {\n      throw new Error('WebSdkModule must be imported with WebSdkModule.forRoot(...)');\n    }\n  }\n\n  /**\n   * Add the `WebSdkModule` to your application's `AppModule` to embed the\n   * web-sdk services into your application. This allows you to deploy your\n   * application outside of an Experience, without the Lean Page.\n   *\n   * Note: Any services created via `environment.bootstrap.services` will\n   * overwrite the services from this module.\n   *\n   * This module provides all the services from `WebSdkApiAng`.\n   *\n   * Importing this module will automatically enable the hybrid auth flow.\n   *\n   * @usageNotes\n   *\n   * ```\n   * NgModule({\n   *  declarations: [AppComponent],\n   *  imports: [\n   *    ...\n   *    WebSdkModule.forRoot(),\n   *  ],\n   *  bootstrap: [AppComponent],\n   * })\n   * export class AppModule {}\n   * ```\n   */\n  static forRoot(config: WebSdkConfig = {}): ModuleWithProviders<WebSdkModule> {\n    return {\n      ngModule: WebSdkModule,\n      providers: [\n        {\n          provide: WEBSDK_CONFIG,\n          useValue: config,\n        },\n        {\n          provide: WEBSDK_SERVICE_MAP,\n          useFactory: bootstrapWebsdkService,\n          deps: [WEBSDK_CONFIG, LOCALE_ID],\n        },\n        {\n          provide: PAGE_CONFIG,\n          useFactory: getPageConfig,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: NAVIGATION,\n          useFactory: navigationFactory,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: PORTAL_CONTENT,\n          useFactory: portalContentFactory,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: LOGIN,\n          useFactory: loginFactory,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: LOGOUT,\n          useFactory: logoutFactory,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: SESSION,\n          useFactory: sessionFactory,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: REAUTHENTICATE,\n          useFactory: reauthenticateFactory,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useFactory: httpInterceptorsFactory,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: REFRESH,\n          useFactory: refreshFactory,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n        {\n          provide: AUTH_EVENTS,\n          useFactory: getAuthEvents,\n          deps: [WEBSDK_SERVICE_MAP],\n        },\n      ],\n    };\n  }\n}\n","export { WebSdkApiModule } from './web-sdk-api-ang.module';\n\nexport { PAGE_CONFIG } from './page-config';\nexport { PUBSUB, SET_LOCALE, EXTERNAL_SERVICES as ɵEXTERNAL_SERVICES } from './providers';\n\nexport {\n  PORTAL_CONTENT,\n  LOGIN,\n  LOGOUT,\n  SESSION,\n  REAUTHENTICATE,\n  NAVIGATION,\n  AUTH_EVENTS as ɵAUTH_EVENTS,\n  HTTP_INTERCEPTORS,\n  REFRESH,\n} from './deprecated/providers';\n\n// classes\nimport { PortalContentMock as _PortalContentMock } from '@backbase/foundation-ang/testing';\n/**\n * @deprecated This entrypoint is deprecated use \\'@backbase/foundation-ang/test\\' for PortalContentMock\n */\nexport class PortalContentMock extends _PortalContentMock {}\n// enums\nexport {\n  ReauthErrorCodes,\n  ContentTypes,\n  ContentType,\n  AuthKind,\n  ContentTypeLegacy,\n} from '@backbase/lib-bb-page-bootstrap-cdn';\n// typings\nexport { PubSubService } from './pub-sub.service';\nexport { SetLocaleService } from './set-locale.service';\nexport type { ExternalServices, WebSdkServiceMap } from './providers';\n\nexport type {\n  LoginService,\n  LogoutService,\n  SessionService,\n  ReauthenticateService,\n  CountdownRegister,\n} from './deprecated/providers';\n\nexport type {\n  PageConfig,\n  RawPageConfig,\n  AuthConfigs,\n  ModuleLoader,\n  BasConfig,\n  HybridConfig,\n  CustomConfig,\n  Breadcrumb,\n  GetBreadcrumbs,\n  GetTree,\n  LinkTreeItem,\n  Navigation,\n  EventName,\n  Pubsub,\n  Unsubscribe,\n  Refresh,\n  PortalContent,\n  ImageContentItem,\n  StructuredContentItem,\n  ContentItem,\n  ContentOptions,\n  DocumentItem,\n  FlattenContentItem,\n  ImageItem,\n  ContentUpdateUnsubscribe,\n  Conditions,\n  ResolveEntitlements,\n  SetLocale,\n  CXResponse,\n  RenderingStrategy,\n  Item,\n  Widget,\n  Container,\n  Property,\n  Properties,\n  ItemLocation,\n  HttpRequest,\n  HttpRequestConfig,\n  HttpResponse,\n  HttpInterceptor,\n  HttpInterceptors,\n  HttpHandler,\n  Login,\n  Logout,\n  Reauthenticate,\n  ReauthConfig,\n  ChallengeResponse,\n  ChallengeError,\n  ChallengeResponseFunction,\n  RefreshSession,\n  TimeToLive,\n  GoToLoginPage,\n  Countdown,\n  BackbaseAuth,\n  CookieOptions,\n  IsExternal,\n  Redirect,\n  Base64Jwt,\n  Seconds,\n  UnixTimeSeconds,\n  Cookie,\n  StoredSession,\n  BackbaseSession,\n  AuthSession,\n  AuthStrategy,\n  AuthUtils,\n} from '@backbase/lib-bb-page-bootstrap-cdn';\n\nexport { WebSdkModule, WebSdkConfig } from './web-sdk.module';\n/**\n * PubsubListener interface\n *\n * This is a generic function type and it requires to configured\n * the listener setting what type of value it will receive.\n */\nexport declare type PubsubListener<T> = (eventPayload: T) => void;\nexport { AuthEvents as ɵAuthEvents, AccessToken as ɵAccessToken, AuthSuccess as ɵAuthSuccess } from './auth-events';\n\nexport {\n  CONDITIONS,\n  ENTITLEMENTS_CONFIG,\n  PropertyResolver,\n  ConditionsService,\n  EntitlementsConfig,\n  SUMMARY_PERMISSIONS_PATH,\n  DATA_ITEMS_PERMISSIONS_PATH,\n} from '@backbase/foundation-ang/entitlements';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {getAuthEvents as ɵn,httpInterceptorsFactory as ɵp,loginFactory as ɵj,logoutFactory as ɵk,reauthenticateFactory as ɵm,refreshFactory as ɵo,sessionFactory as ɵl,setConditionsFactory as ɵq} from './deprecated/providers';\nexport {getPageConfig as ɵb} from './page-config';\nexport {EMBEDDED_SERVICES as ɵc,WEBSDK_SERVICE_MAP as ɵd,navigationFactory as ɵf,portalContentFactory as ɵh,pubsubFactory as ɵg,setLocaleFactory as ɵi,websdkServiceFactory as ɵe} from './providers';\nexport {getWebSdkServiceMap as ɵa} from './web-sdk-api-ang.module';\nexport {WEBSDK_CONFIG as ɵr,bootstrapWebsdkService as ɵt,setLocaleFactory as ɵs} from './web-sdk.module';"]}