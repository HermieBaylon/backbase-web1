{"version":3,"file":"backbase-foundation-ang-future.js","sources":["../../../../projects/backbase/foundation-ang/future/src/future.module.ts","../../../../projects/backbase/foundation-ang/future/src/deprecations.service.ts","../../../../projects/backbase/foundation-ang/future/src/features.service.ts","../../../../projects/backbase/foundation-ang/future/src/public-api.ts","../../../../projects/backbase/foundation-ang/future/src/backbase-foundation-ang-future.ts"],"names":["ɵ0"],"mappings":";;;;MAca,yBAAyB,GAAG,IAAI,cAAc,CACzD,4DAA4D,EAC5D;AACF,aASgB,EAAE,CAAA;AARlB;AACA;AACG;AACA,MASU,oBAAoB,CAAA;AAAE,IACjC,OAAO,UAAU,CAAC,QAAiC,EAAA;AAAE,QACnD,OAAO;AACL,YAAA,QAAQ,EAAE,oBAAoB;AAC9B,YAAA,SAAS,EAAE;AACT,gBAAA;AACE,oBAAA,OAAO,EAAE,yBAAyB;AAClC,oBAAA,KAAK,EAAE,IAAI;AACX,oBAAA,QAAQ,EAAE,QAAQ;AACnB,iBAAA;AACF,aAAA;AACP,SAAK,CAAC;AACN,KAAG;AACH;oCAtBC,IAAA,EAAA,IAAA,EAAA,QAAQ,EAAC,IAAA,EAAA,CAAA,EACR,gBAAA,SAAS,EAAE,EACT;AAAA,EACE,wBAAA,OAAO,EAAE,yBAAyB,EAClC,wBAAA,KAAK,EAAE,IAAI;AACX,wBAAA,QAAQ,EAAIA,IAAA,EACb,qBAAA,EACF,iBAAA;CACF;IAAA,EAAA,EAAA;;;;;;;;;;;;;;;;0BACA;AAAC;AC5BF;AACA;AACG;AACA,MAAU,uBAAuB,GAAG,IAAI,cAAc,CACvD,6DAA6D,EAC7D;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA,MAGU,mBAAmB,CAAA;AAE9B,IAAA,WAAA,CAGE,eAA+B,EAAA;AAE/B,QAAA,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,eAAe,CAAC;AAC7C,KAAG;AAED,IAAA,oBAAoB,CAAC,OAAe,EAAA;AAClC,QAAA,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AAC/B,YAAM,OAAO;AACR,SAAA;AACD,QAAA,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;AAC1C,KAAG;AACH;2JAAC;AACD,oOAjBC;mCAHA,IAAA,EAAA,zCAGC;AAHD,EAAA,UAAU,EAAC,IAAA,EAAA,CAAA,EACV,gBAAA,UAAU,EAAE,MAAM,EACnB,aAAA,EAAA,EAAA,5EAEW,0CAEP,QAAQ,EAAA,EAAA,EAAA,IAAA,EACR,MAAM,EAAA,IAAA,EAAA,CAAC,uBAAuB,EAAA,EAAA,CAAA,EAAA;AAAC;;;;;;;;;;;kCACnC;AAAC;ACrCF;AACA,MAAM,OAAO,GAAG,CAAI,GAAoB,KACtC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAa,EAAE,CAAW,KAAe,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,EAAc,CAAC,CAAC;AACvF;AAQA;AACA;AACG;AACA,MAAU,uBAAuB,GAAG,IAAI,cAAc,CACvD,0DAA0D,EAC1D;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA,MAGU,eAAe,CAAA;AAG1B,IAAA,WAAA,CAGE,gBAAuD,EAGvD,mBAAiD,EAGjD,eAA+B,EAAA;AAE/B,QAAA,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,eAAe,CAAC;AAC7C,QAAI,MAAM,eAAe,GAAG,OAAO,CAAC,gBAAgB,IAAI,EAAE,CAAC,CAAC;AACxD,QAAA,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACxE,QAAA,MAAM,aAAa,GAAG,mBAAmB,IAAI,EAAE,CAAC;AAEhD,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CACpB,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAoB,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAC/E,CAAC;AACF,QAAA,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,KAAI;AACxD,YAAA,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AAC/B,gBAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACjC,aAAA;AACH,SAAC,CAAC,CAAC;AACP,QACI,IAAI,IAAI,CAAC,eAAe,EAAE;AACxB,YAAA,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;AAC7D,SAAA;AACL,KAAG;AAED,IAAA,SAAS,CAAC,OAAyB,EAAA;AACjC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnD,QAAI,IAAI,OAAO,KAAK,SAAS,EAAE;AACzB,YAAA,OAAO,OAAO,CAAC;AAChB,SAAA;AAED,QAAA,MAAM,IAAI,KAAK,CACb,CAAA,iCAAA,EAAoC,OAAO,CAAC,IAAI,CAAA,EAAA,EAAK,OAAO,CAAC,WAAW,CAAA,+DAAA,CAAiE,CAC1I,CAAC;AACN,KAAG;AACH,IACU,sBAAsB,CAAC,eAAwC,EAAE,aAAoC,EAAA;AAC3G,QAAA,MAAM,oBAAoB,GAA4B,eAAe,CAAC,MAAM,CAC1E,OAAO,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,SAAS,CACrD,CAAC;AACN,QAAI,IAAI,oBAAoB,CAAC,MAAM,EAAE;AACrC,YAAM,MAAM,wBAAwB,GAAG,oBAAoB;AAClD,iBAAA,GAAG,CAAC,OAAO,IAAI,CAAG,EAAA,OAAO,CAAC,IAAI,CAAK,EAAA,EAAA,OAAO,CAAC,WAAW,EAAE,CAAC;AAClE,iBAAS,IAAI,CAAC,OAAO,CAAC,CAAC;AACjB,YAAA,OAAO,CAAC,IAAI,CACV,cAAc,EACd,CAAA;AAAiC,iBACxB,wBAAwB,CAAA;AAC8E,sHAAA,CAAA,CAChH,CAAC;AACH,SAAA;AACL,KAAG;AACH;2OAAC;AACD,sTA7DC;+BAHA,IAAA,EAAA,rCAGC;AAHD,EAAA,UAAU,EAAC,IAAA,EAAA,CAAA,EACV,gBAAA,UAAU,EAAE,oBAAoB,EACjC,aAAA,EAAA,EAAA,1FAOqB,IAAA,EAAA,IAAA,EAAA,KAAK,EAFtB,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAQ,EACR,EAAA,EAAA,IAAA,EAAA,MAAM,SAAC,yBAAyB,EAAA,EAAA,CAAA,EAAA;AACrC,4CACK,QAAQ,EAAA,EAAA,EAAA,IAAA,EACR,MAAM,EAAA,IAAA,EAAA,CAAC,uBAAuB,EAAA,EAAA,CAAA,EAAA;AACnC,0CACK,QAAQ,EAAA,EAAA,EAAA,IAAA,EACR,MAAM,EAAA,IAAA,EAAA,CAAC,uBAAuB,EAAA,EAAA,CAAA,EAAA;AAAC;;;;;;;;;;;;;;;;;;;;;kCACnC;AAAC;ACtGF;AACA;ACDA;AACA;AACG;AAED;AAAC;AAE2H","sourcesContent":["import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface AvailableFeature {\n  name: string;\n  description: string;\n}\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport type AvailableFeaturesConfig = Array<AvailableFeature>;\n\nexport const AVAILABLE_FEATURES_CONFIG = new InjectionToken<AvailableFeaturesConfig>(\n  '@backbase/foundation Available Feature Flags Configuration',\n);\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\n@NgModule({\n  providers: [\n    {\n      provide: AVAILABLE_FEATURES_CONFIG,\n      multi: true,\n      useValue: [],\n    },\n  ],\n})\nexport class FutureFeaturesModule {\n  static allowOptIn(features: AvailableFeaturesConfig): ModuleWithProviders<FutureFeaturesModule> {\n    return {\n      ngModule: FutureFeaturesModule,\n      providers: [\n        {\n          provide: AVAILABLE_FEATURES_CONFIG,\n          multi: true,\n          useValue: features,\n        },\n      ],\n    };\n  }\n}\n","import { Injectable, InjectionToken, Inject, Optional } from '@angular/core';\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const LOG_DEPRECATIONS_CONFIG = new InjectionToken<boolean>(\n  '@backbase/foundation Log Deprecation Warnings Configuration',\n);\n\n/**\n * @deprecated Will be removed in v7.0.0\n * Log deprecated features.\n *\n * Deprecations will only be logged when `logDeprecations` has been\n * configured to \"true\" in `BackbaseCoreConfiguration`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * Log a deprecated property:\n *\n * ```\n * @Component({\n *   …\n * })\n * export class MyComponent {\n *   private myOldPropertyValue: string | undefined;\n *\n *   constructor(private deprecationsService: DeprecationsService) { }\n *\n *   @Input()\n *   set myOldProperty(prop: string | undefined) {\n *     this.deprecationsService.logDeprecatedFeature(\"The `myOldProperty` property of MyComponent has been deprecated\");\n *     this.myOldPropertyValue = prop;\n *   }\n * }\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeprecationsService {\n  private readonly logDeprecations: boolean;\n  constructor(\n    @Optional()\n    @Inject(LOG_DEPRECATIONS_CONFIG)\n    logDeprecations: boolean | null,\n  ) {\n    this.logDeprecations = !!logDeprecations;\n  }\n\n  logDeprecatedFeature(warning: string) {\n    if (!this.logDeprecations) {\n      return;\n    }\n    console.warn('[DEPRECATED]', warning);\n  }\n}\n","import { Injectable, InjectionToken, Inject, Optional } from '@angular/core';\nimport { LOG_DEPRECATIONS_CONFIG } from './deprecations.service';\nimport {\n  AvailableFeature,\n  AvailableFeaturesConfig,\n  AVAILABLE_FEATURES_CONFIG,\n  FutureFeaturesModule,\n} from './future.module';\n\n// @todo: separate util package that can be shared across entry points?\nconst flatten = <T>(arr: Array<Array<T>>): Array<T> =>\n  arr.reduce((acc: Array<T>, a: Array<T>): Array<T> => [...acc, ...a], [] as Array<T>);\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport interface EnabledFeaturesConfig {\n  [feature: string]: boolean;\n}\n\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport const ENABLED_FEATURES_CONFIG = new InjectionToken<EnabledFeaturesConfig>(\n  '@backbase/foundation Enabled Feature Flags Configuration',\n);\n\n/**\n * @deprecated Will be removed in v7.0.0\n * @usageNotes\n *\n * ### Example\n *\n * Create a Feature Flag in the module that implements/uses it\n *\n * ```\n * export const FEATURE_EXAMPLE: AvailableFeature = {\n *  name: 'EXAMPLE',\n *  description: 'Describe the feature that will be enabled by this flag',\n * };\n * ```\n *\n * Check if the application has opted into the Feature Flag\n *\n * ```\n * if (featuresService.isEnabled(FEATURE_EXAMPLE)) {\n *   // Use new feature\n *   …\n * }\n * ```\n *\n * Make the feature flag available from the module that implements/uses it\n *\n * ```\n * @NgModule({\n *   imports: [\n *     FutureFeaturesModule.allowOptIn([FEATURE_EXAMPLE]),\n *     …\n *   ],\n *   …\n * })\n * export class MyModule {\n *   …\n * }\n * ```\n *\n * In the application, opt in to the new feature (and enable logging of configuration issues)\n *\n * ```\n * @NgModule({\n *   imports: [\n *     BackbaseCoreModule.forRoot({\n *       logDeprecations: true,\n *       features: {\n *          FEATURE_EXAMPLE: true,\n *       },\n *       …\n *     }),\n *     …\n *   ],\n *   …\n * })\n * export class AppModule {\n *   …\n * }\n * ```\n */\n@Injectable({\n  providedIn: FutureFeaturesModule,\n})\nexport class FeaturesService {\n  private readonly enabled: Map<string, boolean>;\n  private readonly logDeprecations: boolean;\n  constructor(\n    @Optional()\n    @Inject(AVAILABLE_FEATURES_CONFIG)\n    availableConfigs: Array<AvailableFeaturesConfig> | null,\n    @Optional()\n    @Inject(ENABLED_FEATURES_CONFIG)\n    enabledConfigOrNull: EnabledFeaturesConfig | null,\n    @Optional()\n    @Inject(LOG_DEPRECATIONS_CONFIG)\n    logDeprecations: boolean | null,\n  ) {\n    this.logDeprecations = !!logDeprecations;\n    const availableConfig = flatten(availableConfigs || []);\n    const available = new Set(availableConfig.map(feature => feature.name));\n    const enabledConfig = enabledConfigOrNull || {};\n\n    this.enabled = new Map(\n      Array.from(available.values()).map<[string, boolean]>(token => [token, false]),\n    );\n    Object.entries(enabledConfig).forEach(([name, enabled]) => {\n      if (available.has(name)) {\n        this.enabled.set(name, enabled);\n      }\n    });\n\n    if (this.logDeprecations) {\n      this.logConfigurationErrors(availableConfig, enabledConfig);\n    }\n  }\n\n  isEnabled(feature: AvailableFeature): boolean {\n    const enabled = this.enabled.get(feature.name);\n    if (enabled !== undefined) {\n      return enabled;\n    }\n\n    throw new Error(\n      `[FEATURE] Using unknown feature: ${feature.name}: ${feature.description}\\nYou probably need to add it to the modules provided features.`,\n    );\n  }\n\n  private logConfigurationErrors(availableConfig: AvailableFeaturesConfig, enabledConfig: EnabledFeaturesConfig): void {\n    const unconfiguredFeatures: Array<AvailableFeature> = availableConfig.filter(\n      feature => enabledConfig[feature.name] === undefined,\n    );\n    if (unconfiguredFeatures.length) {\n      const unconfiguredFeaturesList = unconfiguredFeatures\n        .map(feature => `${feature.name}: ${feature.description}`)\n        .join('\\n - ');\n      console.warn(\n        '[DEPRECATED]',\n        `Unconfigured features available:\n          \\n - ${unconfiguredFeaturesList}\n          \\nYou should opt-in to them in the App module as they will likely become defaults in the next major release.`,\n      );\n    }\n  }\n}\n","// future\nexport { FutureFeaturesModule, AvailableFeature, AvailableFeaturesConfig } from './future.module';\nexport { DeprecationsService, LOG_DEPRECATIONS_CONFIG } from './deprecations.service';\nexport { FeaturesService, ENABLED_FEATURES_CONFIG, EnabledFeaturesConfig } from './features.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AVAILABLE_FEATURES_CONFIG as ɵa} from './future.module';"]}