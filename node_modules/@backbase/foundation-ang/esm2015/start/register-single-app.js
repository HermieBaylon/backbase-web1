import { BackbaseConnector } from '@backbase/foundation-ang/core';
import { ÉµEXTERNAL_SERVICES as EXTERNAL_SERVICES } from '@backbase/foundation-ang/web-sdk';
/**
 * @deprecated Will be removed in v7.0.0
 * Exposes Angular Single Page Application bootstrap method `window.BB.startSingleApp`
 * @param createNgModule Function that accepts StaticProviders and returns NgModuleRef
 * @usageNotes
 * ### Example
 *
 * ```
 * window.BB.startSingleApp = registerSingleApp(createNgModule);
 *
 * window.BB.startSingleApp(webSdkServices, staticProviders)
 *   .then((bbConnector: BackbaseConnector) => bbConector.bootstrap(item, itemLocation));
 * ```
 */
export function registerSingleApp(createNgModule) {
    const startSingleApp = (externalServices = {}) => {
        const providers = [
            {
                provide: EXTERNAL_SERVICES,
                useValue: externalServices,
            },
        ];
        return createNgModule(providers).then((moduleRef) => moduleRef.injector.get(BackbaseConnector));
    };
    window.BB = window.BB || {};
    Object.assign(window.BB, { startSingleApp });
    return startSingleApp;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXItc2luZ2xlLWFwcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2JhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL3N0YXJ0L3NyYy9yZWdpc3Rlci1zaW5nbGUtYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBb0Isa0JBQWtCLElBQUksaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQVc3Rzs7Ozs7Ozs7Ozs7OztHQWFHO0FBQ0gsTUFBTSxVQUFVLGlCQUFpQixDQUFDLGNBQThCO0lBQzlELE1BQU0sY0FBYyxHQUFtQixDQUFDLG1CQUFxQyxFQUFFLEVBQThCLEVBQUU7UUFDN0csTUFBTSxTQUFTLEdBQUc7WUFDaEI7Z0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtnQkFDMUIsUUFBUSxFQUFFLGdCQUFnQjthQUMzQjtTQUNGLENBQUM7UUFDRixPQUFPLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQ25DLENBQUMsU0FBMkIsRUFBcUIsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFvQixpQkFBaUIsQ0FBQyxDQUNqSCxDQUFDO0lBQ0osQ0FBQyxDQUFDO0lBQ0YsTUFBTSxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUM1QixNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO0lBQzdDLE9BQU8sY0FBYyxDQUFDO0FBQ3hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZVJlZiwgU3RhdGljUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhY2tiYXNlQ29ubmVjdG9yIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHsgRXh0ZXJuYWxTZXJ2aWNlcywgybVFWFRFUk5BTF9TRVJWSUNFUyBhcyBFWFRFUk5BTF9TRVJWSUNFUyB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy93ZWItc2RrJztcbi8qKlxuICogQGRlcHJlY2F0ZWQgV2lsbCBiZSByZW1vdmVkIGluIHY3LjAuMFxuICovXG5leHBvcnQgdHlwZSBDcmVhdGVOZ01vZHVsZSA9IChleHRyYVByb3ZpZGVyczogQXJyYXk8U3RhdGljUHJvdmlkZXI+KSA9PiBQcm9taXNlPE5nTW9kdWxlUmVmPGFueT4+O1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFdpbGwgYmUgcmVtb3ZlZCBpbiB2Ny4wLjBcbiAqL1xuZXhwb3J0IHR5cGUgU3RhcnRTaW5nbGVBcHAgPSAoZXh0ZXJuYWxTZXJ2aWNlcz86IEV4dGVybmFsU2VydmljZXMpID0+IFByb21pc2U8QmFja2Jhc2VDb25uZWN0b3I+O1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFdpbGwgYmUgcmVtb3ZlZCBpbiB2Ny4wLjBcbiAqIEV4cG9zZXMgQW5ndWxhciBTaW5nbGUgUGFnZSBBcHBsaWNhdGlvbiBib290c3RyYXAgbWV0aG9kIGB3aW5kb3cuQkIuc3RhcnRTaW5nbGVBcHBgXG4gKiBAcGFyYW0gY3JlYXRlTmdNb2R1bGUgRnVuY3Rpb24gdGhhdCBhY2NlcHRzIFN0YXRpY1Byb3ZpZGVycyBhbmQgcmV0dXJucyBOZ01vZHVsZVJlZlxuICogQHVzYWdlTm90ZXNcbiAqICMjIyBFeGFtcGxlXG4gKlxuICogYGBgXG4gKiB3aW5kb3cuQkIuc3RhcnRTaW5nbGVBcHAgPSByZWdpc3RlclNpbmdsZUFwcChjcmVhdGVOZ01vZHVsZSk7XG4gKlxuICogd2luZG93LkJCLnN0YXJ0U2luZ2xlQXBwKHdlYlNka1NlcnZpY2VzLCBzdGF0aWNQcm92aWRlcnMpXG4gKiAgIC50aGVuKChiYkNvbm5lY3RvcjogQmFja2Jhc2VDb25uZWN0b3IpID0+IGJiQ29uZWN0b3IuYm9vdHN0cmFwKGl0ZW0sIGl0ZW1Mb2NhdGlvbikpO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlclNpbmdsZUFwcChjcmVhdGVOZ01vZHVsZTogQ3JlYXRlTmdNb2R1bGUpOiBTdGFydFNpbmdsZUFwcCB7XG4gIGNvbnN0IHN0YXJ0U2luZ2xlQXBwOiBTdGFydFNpbmdsZUFwcCA9IChleHRlcm5hbFNlcnZpY2VzOiBFeHRlcm5hbFNlcnZpY2VzID0ge30pOiBQcm9taXNlPEJhY2tiYXNlQ29ubmVjdG9yPiA9PiB7XG4gICAgY29uc3QgcHJvdmlkZXJzID0gW1xuICAgICAge1xuICAgICAgICBwcm92aWRlOiBFWFRFUk5BTF9TRVJWSUNFUyxcbiAgICAgICAgdXNlVmFsdWU6IGV4dGVybmFsU2VydmljZXMsXG4gICAgICB9LFxuICAgIF07XG4gICAgcmV0dXJuIGNyZWF0ZU5nTW9kdWxlKHByb3ZpZGVycykudGhlbihcbiAgICAgIChtb2R1bGVSZWY6IE5nTW9kdWxlUmVmPGFueT4pOiBCYWNrYmFzZUNvbm5lY3RvciA9PiBtb2R1bGVSZWYuaW5qZWN0b3IuZ2V0PEJhY2tiYXNlQ29ubmVjdG9yPihCYWNrYmFzZUNvbm5lY3RvciksXG4gICAgKTtcbiAgfTtcbiAgd2luZG93LkJCID0gd2luZG93LkJCIHx8IHt9O1xuICBPYmplY3QuYXNzaWduKHdpbmRvdy5CQiwgeyBzdGFydFNpbmdsZUFwcCB9KTtcbiAgcmV0dXJuIHN0YXJ0U2luZ2xlQXBwO1xufVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIEJCOiB7IFtrZXk6IHN0cmluZ106IGFueSB9O1xuICB9XG59XG4iXX0=