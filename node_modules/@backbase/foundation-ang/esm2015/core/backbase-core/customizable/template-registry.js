import { Injectable } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { first } from 'rxjs/operators';
export class TemplateRegistry {
    constructor() {
        this.registry = new Map();
    }
    set(id, entry) {
        const entry$ = this.registry.get(id) || this.initEntry(id);
        entry$.next(entry);
    }
    get(id) {
        const entry$ = this.registry.get(id) || this.initEntry(id);
        return entry$.pipe(first());
    }
    initEntry(id) {
        const entry = new ReplaySubject();
        this.registry.set(id, entry);
        return entry;
    }
}
TemplateRegistry.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUtcmVnaXN0cnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlL3NyYy9iYWNrYmFzZS1jb3JlL2N1c3RvbWl6YWJsZS90ZW1wbGF0ZS1yZWdpc3RyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQWMsTUFBTSxNQUFNLENBQUM7QUFDakQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBS3ZDLE1BQU0sT0FBTyxnQkFBZ0I7SUFEN0I7UUFFbUIsYUFBUSxHQUFnQyxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBaUJyRSxDQUFDO0lBZkMsR0FBRyxDQUFJLEVBQU0sRUFBRSxLQUFRO1FBQ3JCLE1BQU0sTUFBTSxHQUFxQixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzdFLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckIsQ0FBQztJQUVELEdBQUcsQ0FBSSxFQUFNO1FBQ1gsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMzRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU8sU0FBUyxDQUFJLEVBQU07UUFDekIsTUFBTSxLQUFLLEdBQUcsSUFBSSxhQUFhLEVBQUssQ0FBQztRQUNyQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDN0IsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOzs7WUFsQkYsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlcGxheVN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpcnN0IH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5leHBvcnQgdHlwZSBJZCA9IGFueTtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRlbXBsYXRlUmVnaXN0cnkge1xuICBwcml2YXRlIHJlYWRvbmx5IHJlZ2lzdHJ5OiBNYXA8SWQsIFJlcGxheVN1YmplY3Q8YW55Pj4gPSBuZXcgTWFwKCk7XG5cbiAgc2V0PFQ+KGlkOiBJZCwgZW50cnk6IFQpIHtcbiAgICBjb25zdCBlbnRyeSQ6IFJlcGxheVN1YmplY3Q8VD4gPSB0aGlzLnJlZ2lzdHJ5LmdldChpZCkgfHwgdGhpcy5pbml0RW50cnkoaWQpO1xuICAgIGVudHJ5JC5uZXh0KGVudHJ5KTtcbiAgfVxuXG4gIGdldDxUPihpZDogSWQpOiBPYnNlcnZhYmxlPFQ+IHtcbiAgICBjb25zdCBlbnRyeSQgPSB0aGlzLnJlZ2lzdHJ5LmdldChpZCkgfHwgdGhpcy5pbml0RW50cnkoaWQpO1xuICAgIHJldHVybiBlbnRyeSQucGlwZShmaXJzdCgpKTtcbiAgfVxuXG4gIHByaXZhdGUgaW5pdEVudHJ5PFQ+KGlkOiBJZCk6IFJlcGxheVN1YmplY3Q8VD4ge1xuICAgIGNvbnN0IGVudHJ5ID0gbmV3IFJlcGxheVN1YmplY3Q8VD4oKTtcbiAgICB0aGlzLnJlZ2lzdHJ5LnNldChpZCwgZW50cnkpO1xuICAgIHJldHVybiBlbnRyeTtcbiAgfVxufVxuIl19