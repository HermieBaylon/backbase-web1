import { NgModule, ComponentFactoryResolver, ANALYZE_FOR_ENTRY_COMPONENTS, Injector, } from '@angular/core';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { StepUpInterceptor } from './stepup.interceptor';
import { StepUpService, STEPUP_CONFIG } from './stepup.service';
/**
 * @deprecated Will be removed in v7.0.0
 */
export class StepUpModule {
    static forRoot(config) {
        return {
            ngModule: StepUpModule,
            providers: [
                {
                    provide: ANALYZE_FOR_ENTRY_COMPONENTS,
                    useValue: [config.mediatorComponentClass],
                    multi: true,
                },
                {
                    provide: STEPUP_CONFIG,
                    useValue: config,
                },
                {
                    provide: HTTP_INTERCEPTORS,
                    useClass: StepUpInterceptor,
                    deps: [StepUpService, STEPUP_CONFIG, Injector],
                    multi: true,
                },
                {
                    provide: StepUpService,
                    useClass: StepUpService,
                    deps: [ComponentFactoryResolver, STEPUP_CONFIG],
                },
            ],
        };
    }
}
StepUpModule.decorators = [
    { type: NgModule, args: [{},] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHVwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2JhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUvc3JjL2JhY2tiYXNlLWNvcmUvc3RlcHVwL3N0ZXB1cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFFBQVEsRUFFUix3QkFBd0IsRUFDeEIsNEJBQTRCLEVBQzVCLFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQWdCLE1BQU0sc0JBQXNCLENBQUM7QUFDdkUsT0FBTyxFQUFFLGFBQWEsRUFBdUIsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFLckY7O0dBRUc7QUFFSCxNQUFNLE9BQU8sWUFBWTtJQUN2QixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQTBCO1FBQ3ZDLE9BQU87WUFDTCxRQUFRLEVBQUUsWUFBWTtZQUN0QixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLDRCQUE0QjtvQkFDckMsUUFBUSxFQUFFLENBQUMsTUFBTSxDQUFDLHNCQUFzQixDQUFDO29CQUN6QyxLQUFLLEVBQUUsSUFBSTtpQkFDWjtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsYUFBYTtvQkFDdEIsUUFBUSxFQUFFLE1BQU07aUJBQ2pCO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxpQkFBaUI7b0JBQzFCLFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLElBQUksRUFBRSxDQUFDLGFBQWEsRUFBRSxhQUFhLEVBQUUsUUFBUSxDQUFDO29CQUM5QyxLQUFLLEVBQUUsSUFBSTtpQkFDWjtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsYUFBYTtvQkFDdEIsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLElBQUksRUFBRSxDQUFDLHdCQUF3QixFQUFFLGFBQWEsQ0FBQztpQkFDaEQ7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs7WUE1QkYsUUFBUSxTQUFDLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBOZ01vZHVsZSxcbiAgTW9kdWxlV2l0aFByb3ZpZGVycyxcbiAgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICBBTkFMWVpFX0ZPUl9FTlRSWV9DT01QT05FTlRTLFxuICBJbmplY3Rvcixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIVFRQX0lOVEVSQ0VQVE9SUyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IFN0ZXBVcEludGVyY2VwdG9yLCBTdGVwVXBDb25maWcgfSBmcm9tICcuL3N0ZXB1cC5pbnRlcmNlcHRvcic7XG5pbXBvcnQgeyBTdGVwVXBTZXJ2aWNlLCBTdGVwVXBDb21wb25lbnRUeXBlLCBTVEVQVVBfQ09ORklHIH0gZnJvbSAnLi9zdGVwdXAuc2VydmljZSc7XG4vKipcbiAqIEBkZXByZWNhdGVkIFdpbGwgYmUgcmVtb3ZlZCBpbiB2Ny4wLjBcbiAqL1xuZXhwb3J0IHR5cGUgQ3VzdG9tU3RlcFVwQ29uZmlnID0gUGFydGlhbDxTdGVwVXBDb25maWc+ICYgeyBtZWRpYXRvckNvbXBvbmVudENsYXNzOiBTdGVwVXBDb21wb25lbnRUeXBlIH07XG4vKipcbiAqIEBkZXByZWNhdGVkIFdpbGwgYmUgcmVtb3ZlZCBpbiB2Ny4wLjBcbiAqL1xuQE5nTW9kdWxlKHt9KVxuZXhwb3J0IGNsYXNzIFN0ZXBVcE1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZzogQ3VzdG9tU3RlcFVwQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxTdGVwVXBNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IFN0ZXBVcE1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogQU5BTFlaRV9GT1JfRU5UUllfQ09NUE9ORU5UUyxcbiAgICAgICAgICB1c2VWYWx1ZTogW2NvbmZpZy5tZWRpYXRvckNvbXBvbmVudENsYXNzXSxcbiAgICAgICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFNURVBVUF9DT05GSUcsXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEhUVFBfSU5URVJDRVBUT1JTLFxuICAgICAgICAgIHVzZUNsYXNzOiBTdGVwVXBJbnRlcmNlcHRvcixcbiAgICAgICAgICBkZXBzOiBbU3RlcFVwU2VydmljZSwgU1RFUFVQX0NPTkZJRywgSW5qZWN0b3JdLFxuICAgICAgICAgIG11bHRpOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogU3RlcFVwU2VydmljZSxcbiAgICAgICAgICB1c2VDbGFzczogU3RlcFVwU2VydmljZSxcbiAgICAgICAgICBkZXBzOiBbQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBTVEVQVVBfQ09ORklHXSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfTtcbiAgfVxufVxuIl19