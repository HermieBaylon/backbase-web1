/**
 * @deprecated
 */
export class Graph {
    constructor() {
        this.vertexes = new Set();
        this.edges = new Map();
    }
    add(vertex) {
        this.vertexes.add(vertex);
    }
    connect(from, to, value) {
        this.add(from);
        this.add(to);
        let vertexEdges = this.edges.get(from);
        if (vertexEdges === undefined) {
            vertexEdges = new Map();
            this.edges.set(from, vertexEdges);
        }
        vertexEdges.set(to, { value });
    }
    getEdge(from, to) {
        const edges = this.edges.get(from);
        const edge = edges === undefined ? undefined : edges.get(to);
        return edge === undefined ? undefined : edge.value;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlL3NyYy9iYWNrYmFzZS1jb3JlL21vZGVscy9ncmFwaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTs7R0FFRztBQUNILE1BQU0sT0FBTyxLQUFLO0lBQWxCO1FBQ1MsYUFBUSxHQUFXLElBQUksR0FBRyxFQUFFLENBQUM7UUFDN0IsVUFBSyxHQUE0QixJQUFJLEdBQUcsRUFBRSxDQUFDO0lBdUJwRCxDQUFDO0lBckJRLEdBQUcsQ0FBQyxNQUFTO1FBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFTSxPQUFPLENBQUMsSUFBTyxFQUFFLEVBQUssRUFBRSxLQUFRO1FBQ3JDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRWIsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxXQUFXLEtBQUssU0FBUyxFQUFFO1lBQzdCLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztTQUNuQztRQUNELFdBQVcsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRU0sT0FBTyxDQUFDLElBQU8sRUFBRSxFQUFLO1FBQzNCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLE1BQU0sSUFBSSxHQUFHLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUM3RCxPQUFPLElBQUksS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNyRCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEVkZ2U8Uz4ge1xuICB2YWx1ZTogUztcbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY2xhc3MgR3JhcGg8VCwgUz4ge1xuICBwdWJsaWMgdmVydGV4ZXM6IFNldDxUPiA9IG5ldyBTZXQoKTtcbiAgcHVibGljIGVkZ2VzOiBNYXA8VCwgTWFwPFQsIEVkZ2U8Uz4+PiA9IG5ldyBNYXAoKTtcblxuICBwdWJsaWMgYWRkKHZlcnRleDogVCk6IHZvaWQge1xuICAgIHRoaXMudmVydGV4ZXMuYWRkKHZlcnRleCk7XG4gIH1cblxuICBwdWJsaWMgY29ubmVjdChmcm9tOiBULCB0bzogVCwgdmFsdWU6IFMpIHtcbiAgICB0aGlzLmFkZChmcm9tKTtcbiAgICB0aGlzLmFkZCh0byk7XG5cbiAgICBsZXQgdmVydGV4RWRnZXMgPSB0aGlzLmVkZ2VzLmdldChmcm9tKTtcbiAgICBpZiAodmVydGV4RWRnZXMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdmVydGV4RWRnZXMgPSBuZXcgTWFwKCk7XG4gICAgICB0aGlzLmVkZ2VzLnNldChmcm9tLCB2ZXJ0ZXhFZGdlcyk7XG4gICAgfVxuICAgIHZlcnRleEVkZ2VzLnNldCh0bywgeyB2YWx1ZSB9KTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRFZGdlKGZyb206IFQsIHRvOiBUKTogUyB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3QgZWRnZXMgPSB0aGlzLmVkZ2VzLmdldChmcm9tKTtcbiAgICBjb25zdCBlZGdlID0gZWRnZXMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IGVkZ2VzLmdldCh0byk7XG4gICAgcmV0dXJuIGVkZ2UgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IGVkZ2UudmFsdWU7XG4gIH1cbn1cbiJdfQ==