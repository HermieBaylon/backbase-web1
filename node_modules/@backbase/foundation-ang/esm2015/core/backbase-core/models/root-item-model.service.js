import { Injectable } from '@angular/core';
import { switchMap } from 'rxjs/operators';
import { ӨRootContainerService } from './root-container.service';
/**
 * The model of the item at the root of the SPA (ie: the app container).
 */
export class RootItemModelService {
    constructor(rootModel) {
        this.rootModel = rootModel;
    }
    /**
     * Find an item by searching the tree of the SPA.
     *
     * Note: Because the model of the SPA can change, this method returns an observable.
     *
     * @param name The instance name of the item to find.
     */
    findByName(name) {
        return this.find(model => model.name === name);
    }
    find(predicate) {
        return this.rootModel.model.pipe(switchMap(model => model.find(predicate)));
    }
}
RootItemModelService.decorators = [
    { type: Injectable }
];
RootItemModelService.ctorParameters = () => [
    { type: ӨRootContainerService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9vdC1pdGVtLW1vZGVsLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlL3NyYy9iYWNrYmFzZS1jb3JlL21vZGVscy9yb290LWl0ZW0tbW9kZWwuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUczQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUdqRTs7R0FFRztBQUVILE1BQU0sT0FBTyxvQkFBb0I7SUFDL0IsWUFBNkIsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpFOzs7Ozs7T0FNRztJQUNILFVBQVUsQ0FBQyxJQUFZO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVPLElBQUksQ0FBQyxTQUF3QztRQUNuRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5RSxDQUFDOzs7WUFqQkYsVUFBVTs7O1lBTkYscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgc3dpdGNoTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQgeyBJdGVtTW9kZWwsIEl0ZW1Nb2RlbFRyZWUgfSBmcm9tICcuL2l0ZW0tbW9kZWwnO1xuaW1wb3J0IHsg06hSb290Q29udGFpbmVyU2VydmljZSB9IGZyb20gJy4vcm9vdC1jb250YWluZXIuc2VydmljZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlVHJlZSB9IGZyb20gJy4vdHJlZSc7XG5cbi8qKlxuICogVGhlIG1vZGVsIG9mIHRoZSBpdGVtIGF0IHRoZSByb290IG9mIHRoZSBTUEEgKGllOiB0aGUgYXBwIGNvbnRhaW5lcikuXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBSb290SXRlbU1vZGVsU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgcm9vdE1vZGVsOiDTqFJvb3RDb250YWluZXJTZXJ2aWNlKSB7fVxuXG4gIC8qKlxuICAgKiBGaW5kIGFuIGl0ZW0gYnkgc2VhcmNoaW5nIHRoZSB0cmVlIG9mIHRoZSBTUEEuXG4gICAqXG4gICAqIE5vdGU6IEJlY2F1c2UgdGhlIG1vZGVsIG9mIHRoZSBTUEEgY2FuIGNoYW5nZSwgdGhpcyBtZXRob2QgcmV0dXJucyBhbiBvYnNlcnZhYmxlLlxuICAgKlxuICAgKiBAcGFyYW0gbmFtZSBUaGUgaW5zdGFuY2UgbmFtZSBvZiB0aGUgaXRlbSB0byBmaW5kLlxuICAgKi9cbiAgZmluZEJ5TmFtZShuYW1lOiBzdHJpbmcpOiBPYnNlcnZhYmxlPEl0ZW1Nb2RlbFRyZWUgfCB1bmRlZmluZWQ+IHtcbiAgICByZXR1cm4gdGhpcy5maW5kKG1vZGVsID0+IG1vZGVsLm5hbWUgPT09IG5hbWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBmaW5kKHByZWRpY2F0ZTogKHZhbHVlOiBJdGVtTW9kZWwpID0+IGJvb2xlYW4pOiBPYnNlcnZhYmxlPE9ic2VydmFibGVUcmVlPEl0ZW1Nb2RlbD4gfCB1bmRlZmluZWQ+IHtcbiAgICByZXR1cm4gdGhpcy5yb290TW9kZWwubW9kZWwucGlwZShzd2l0Y2hNYXAobW9kZWwgPT4gbW9kZWwuZmluZChwcmVkaWNhdGUpKSk7XG4gIH1cbn1cbiJdfQ==