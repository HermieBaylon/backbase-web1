import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { FeaturesService } from '@backbase/foundation-ang/future';
import { StoreFactory, ɵStoreBroker, ɵSTORE_BRANCH, ɵSTORE_DISPATCH_CHANNEL } from '@backbase/foundation-ang/store';
import { TemplateRegistry } from '../../customizable/template-registry';
import { ItemModel } from '../../models/item-model';
export function journeyItemModelFactory(route) {
    return route.snapshot.data.item;
}
export function storeNameFactory(route) {
    return route.snapshot.data.item.name;
}
export class JourneyComponent {
}
JourneyComponent.decorators = [
    { type: Component, args: [{
                selector: 'bb-journey',
                template: ` <router-outlet></router-outlet> `,
                providers: [
                    {
                        provide: ItemModel,
                        useFactory: journeyItemModelFactory,
                        deps: [ActivatedRoute],
                    },
                    TemplateRegistry,
                    {
                        provide: ɵSTORE_BRANCH,
                        useFactory: storeNameFactory,
                        deps: [ActivatedRoute],
                    },
                    {
                        provide: ɵSTORE_DISPATCH_CHANNEL,
                        useFactory: storeNameFactory,
                        deps: [ActivatedRoute],
                    },
                    {
                        provide: StoreFactory,
                        useClass: StoreFactory,
                        deps: [ɵStoreBroker, ɵSTORE_BRANCH, ɵSTORE_DISPATCH_CHANNEL, FeaturesService],
                    },
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam91cm5leS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlL3NyYy9iYWNrYmFzZS1jb3JlL3JlbmRlcmluZy9jaHJvbWUvam91cm5leS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3BILE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUVwRCxNQUFNLFVBQVUsdUJBQXVCLENBQUMsS0FBcUI7SUFDM0QsT0FBTyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDbEMsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxLQUFxQjtJQUNwRCxPQUFPLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDdkMsQ0FBQztBQTZCRCxNQUFNLE9BQU8sZ0JBQWdCOzs7WUEzQjVCLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsUUFBUSxFQUFFLG1DQUFtQztnQkFDN0MsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSxTQUFTO3dCQUNsQixVQUFVLEVBQUUsdUJBQXVCO3dCQUNuQyxJQUFJLEVBQUUsQ0FBQyxjQUFjLENBQUM7cUJBQ3ZCO29CQUNELGdCQUFnQjtvQkFDaEI7d0JBQ0UsT0FBTyxFQUFFLGFBQWE7d0JBQ3RCLFVBQVUsRUFBRSxnQkFBZ0I7d0JBQzVCLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQztxQkFDdkI7b0JBQ0Q7d0JBQ0UsT0FBTyxFQUFFLHVCQUF1Qjt3QkFDaEMsVUFBVSxFQUFFLGdCQUFnQjt3QkFDNUIsSUFBSSxFQUFFLENBQUMsY0FBYyxDQUFDO3FCQUN2QjtvQkFDRDt3QkFDRSxPQUFPLEVBQUUsWUFBWTt3QkFDckIsUUFBUSxFQUFFLFlBQVk7d0JBQ3RCLElBQUksRUFBRSxDQUFDLFlBQVksRUFBRSxhQUFhLEVBQUUsdUJBQXVCLEVBQUUsZUFBZSxDQUFDO3FCQUM5RTtpQkFDRjthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBGZWF0dXJlc1NlcnZpY2UgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvZnV0dXJlJztcbmltcG9ydCB7IFN0b3JlRmFjdG9yeSwgybVTdG9yZUJyb2tlciwgybVTVE9SRV9CUkFOQ0gsIMm1U1RPUkVfRElTUEFUQ0hfQ0hBTk5FTCB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9zdG9yZSc7XG5pbXBvcnQgeyBUZW1wbGF0ZVJlZ2lzdHJ5IH0gZnJvbSAnLi4vLi4vY3VzdG9taXphYmxlL3RlbXBsYXRlLXJlZ2lzdHJ5JztcbmltcG9ydCB7IEl0ZW1Nb2RlbCB9IGZyb20gJy4uLy4uL21vZGVscy9pdGVtLW1vZGVsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGpvdXJuZXlJdGVtTW9kZWxGYWN0b3J5KHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSkge1xuICByZXR1cm4gcm91dGUuc25hcHNob3QuZGF0YS5pdGVtO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RvcmVOYW1lRmFjdG9yeShyb3V0ZTogQWN0aXZhdGVkUm91dGUpOiBhbnkge1xuICByZXR1cm4gcm91dGUuc25hcHNob3QuZGF0YS5pdGVtLm5hbWU7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWpvdXJuZXknLFxuICB0ZW1wbGF0ZTogYCA8cm91dGVyLW91dGxldD48L3JvdXRlci1vdXRsZXQ+IGAsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEl0ZW1Nb2RlbCxcbiAgICAgIHVzZUZhY3Rvcnk6IGpvdXJuZXlJdGVtTW9kZWxGYWN0b3J5LFxuICAgICAgZGVwczogW0FjdGl2YXRlZFJvdXRlXSxcbiAgICB9LFxuICAgIFRlbXBsYXRlUmVnaXN0cnksXG4gICAge1xuICAgICAgcHJvdmlkZTogybVTVE9SRV9CUkFOQ0gsXG4gICAgICB1c2VGYWN0b3J5OiBzdG9yZU5hbWVGYWN0b3J5LFxuICAgICAgZGVwczogW0FjdGl2YXRlZFJvdXRlXSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IMm1U1RPUkVfRElTUEFUQ0hfQ0hBTk5FTCxcbiAgICAgIHVzZUZhY3Rvcnk6IHN0b3JlTmFtZUZhY3RvcnksXG4gICAgICBkZXBzOiBbQWN0aXZhdGVkUm91dGVdLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogU3RvcmVGYWN0b3J5LFxuICAgICAgdXNlQ2xhc3M6IFN0b3JlRmFjdG9yeSxcbiAgICAgIGRlcHM6IFvJtVN0b3JlQnJva2VyLCDJtVNUT1JFX0JSQU5DSCwgybVTVE9SRV9ESVNQQVRDSF9DSEFOTkVMLCBGZWF0dXJlc1NlcnZpY2VdLFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEpvdXJuZXlDb21wb25lbnQge31cbiJdfQ==