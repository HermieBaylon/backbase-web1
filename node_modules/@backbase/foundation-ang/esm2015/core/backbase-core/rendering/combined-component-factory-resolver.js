import { Injectable, ComponentFactoryResolver } from '@angular/core';
import { ItemRegistryService } from './item-registry.service';
export class CombinedComponentFactoryResolver {
    constructor(itemRegistry, rootResolver) {
        this.itemRegistry = itemRegistry;
        this.rootResolver = rootResolver;
        this.childResolvers = new Map();
    }
    registerChildResolver(classId, resolver) {
        this.childResolvers.set(classId, resolver);
    }
    resolveComponentFactory(classId) {
        const type = this.itemRegistry.getComponentValue(classId);
        if (!type) {
            throw new Error(`@backbase/foundation No component registered for ${classId}. Did you add it to the classMap?`);
        }
        const resolver = this.childResolvers.get(classId) || this.rootResolver;
        return resolver.resolveComponentFactory(type);
    }
}
CombinedComponentFactoryResolver.decorators = [
    { type: Injectable }
];
CombinedComponentFactoryResolver.ctorParameters = () => [
    { type: ItemRegistryService },
    { type: ComponentFactoryResolver }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluZWQtY29tcG9uZW50LWZhY3RvcnktcmVzb2x2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlL3NyYy9iYWNrYmFzZS1jb3JlL3JlbmRlcmluZy9jb21iaW5lZC1jb21wb25lbnQtZmFjdG9yeS1yZXNvbHZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLHdCQUF3QixFQUFvQixNQUFNLGVBQWUsQ0FBQztBQUN2RixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUc5RCxNQUFNLE9BQU8sZ0NBQWdDO0lBRTNDLFlBQ21CLFlBQWlDLEVBQ2pDLFlBQXNDO1FBRHRDLGlCQUFZLEdBQVosWUFBWSxDQUFxQjtRQUNqQyxpQkFBWSxHQUFaLFlBQVksQ0FBMEI7UUFIeEMsbUJBQWMsR0FBRyxJQUFJLEdBQUcsRUFBb0MsQ0FBQztJQUkzRSxDQUFDO0lBRUoscUJBQXFCLENBQUMsT0FBZSxFQUFFLFFBQWtDO1FBQ3ZFLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQsdUJBQXVCLENBQUksT0FBZTtRQUN4QyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDVCxNQUFNLElBQUksS0FBSyxDQUFDLG9EQUFvRCxPQUFPLG1DQUFtQyxDQUFDLENBQUM7U0FDakg7UUFDRCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3ZFLE9BQU8sUUFBUSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hELENBQUM7OztZQW5CRixVQUFVOzs7WUFGRixtQkFBbUI7WUFEUCx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIENvbXBvbmVudEZhY3RvcnkgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEl0ZW1SZWdpc3RyeVNlcnZpY2UgfSBmcm9tICcuL2l0ZW0tcmVnaXN0cnkuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDb21iaW5lZENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciB7XG4gIHByaXZhdGUgcmVhZG9ubHkgY2hpbGRSZXNvbHZlcnMgPSBuZXcgTWFwPHN0cmluZywgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyPigpO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IGl0ZW1SZWdpc3RyeTogSXRlbVJlZ2lzdHJ5U2VydmljZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJvb3RSZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICApIHt9XG5cbiAgcmVnaXN0ZXJDaGlsZFJlc29sdmVyKGNsYXNzSWQ6IHN0cmluZywgcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcikge1xuICAgIHRoaXMuY2hpbGRSZXNvbHZlcnMuc2V0KGNsYXNzSWQsIHJlc29sdmVyKTtcbiAgfVxuXG4gIHJlc29sdmVDb21wb25lbnRGYWN0b3J5PFQ+KGNsYXNzSWQ6IHN0cmluZyk6IENvbXBvbmVudEZhY3Rvcnk8VD4ge1xuICAgIGNvbnN0IHR5cGUgPSB0aGlzLml0ZW1SZWdpc3RyeS5nZXRDb21wb25lbnRWYWx1ZShjbGFzc0lkKTtcbiAgICBpZiAoIXR5cGUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQGJhY2tiYXNlL2ZvdW5kYXRpb24gTm8gY29tcG9uZW50IHJlZ2lzdGVyZWQgZm9yICR7Y2xhc3NJZH0uIERpZCB5b3UgYWRkIGl0IHRvIHRoZSBjbGFzc01hcD9gKTtcbiAgICB9XG4gICAgY29uc3QgcmVzb2x2ZXIgPSB0aGlzLmNoaWxkUmVzb2x2ZXJzLmdldChjbGFzc0lkKSB8fCB0aGlzLnJvb3RSZXNvbHZlcjtcbiAgICByZXR1cm4gcmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodHlwZSk7XG4gIH1cbn1cbiJdfQ==