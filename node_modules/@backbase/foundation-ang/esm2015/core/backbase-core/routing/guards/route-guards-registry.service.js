import { Inject, Injectable, InjectionToken } from '@angular/core';
export const CONFIG_ROUTE_GUARDS = new InjectionToken('@backbase/foundation Route Guards');
/**
 * @deprecated Will be removed in v7.0.0
 */
export class RouteGuardsRegistryService {
    constructor(configs) {
        this.canActivate = new Map();
        this.canActivateChild = new Map();
        configs.forEach(handlerMap => {
            Object.entries(handlerMap.canActivate || {})
                .filter((entry) => 'canActivate' in entry[1].prototype)
                .forEach(([key, guard]) => {
                this.canActivate.set(key, guard);
            });
            Object.entries(handlerMap.canActivateChild || {}).forEach(([key, guard]) => {
                this.canActivateChild.set(key, guard);
            });
        });
    }
}
RouteGuardsRegistryService.decorators = [
    { type: Injectable }
];
RouteGuardsRegistryService.ctorParameters = () => [
    { type: Array, decorators: [{ type: Inject, args: [CONFIG_ROUTE_GUARDS,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtZ3VhcmRzLXJlZ2lzdHJ5LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlL3NyYy9iYWNrYmFzZS1jb3JlL3JvdXRpbmcvZ3VhcmRzL3JvdXRlLWd1YXJkcy1yZWdpc3RyeS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBUSxNQUFNLGVBQWUsQ0FBQztBQVV6RSxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLGNBQWMsQ0FBb0IsbUNBQW1DLENBQUMsQ0FBQztBQUM5Rzs7R0FFRztBQUVILE1BQU0sT0FBTywwQkFBMEI7SUFJckMsWUFBeUMsT0FBaUM7UUFIakUsZ0JBQVcsR0FBMEMsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUMvRCxxQkFBZ0IsR0FBK0MsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUdoRixPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQzNCLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLFdBQVcsSUFBSSxFQUFFLENBQUM7aUJBQ3pDLE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBK0MsRUFBRSxDQUFDLGFBQWEsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO2lCQUNuRyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQXFDLEVBQUUsRUFBRTtnQkFDNUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ25DLENBQUMsQ0FBQyxDQUFDO1lBQ0wsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsZ0JBQWdCLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxDQUN2RCxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBMEMsRUFBRSxFQUFFO2dCQUN4RCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUN4QyxDQUFDLENBQ0YsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBbEJGLFVBQVU7OztZQUt5QyxLQUFLLHVCQUExQyxNQUFNLFNBQUMsbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlLCBJbmplY3Rpb25Ub2tlbiwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FuQWN0aXZhdGUsIENhbkFjdGl2YXRlQ2hpbGQgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5leHBvcnQgdHlwZSBSb3V0ZUd1YXJkS2V5ID0gc3RyaW5nO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJvdXRlR3VhcmRzQ29uZmlnIHtcbiAgY2FuQWN0aXZhdGU/OiB7IFtrZXk6IHN0cmluZ106IFR5cGU8Q2FuQWN0aXZhdGU+IH07XG4gIGNhbkFjdGl2YXRlQ2hpbGQ/OiB7IFtrZXk6IHN0cmluZ106IFR5cGU8Q2FuQWN0aXZhdGVDaGlsZD4gfTtcbn1cblxuZXhwb3J0IGNvbnN0IENPTkZJR19ST1VURV9HVUFSRFMgPSBuZXcgSW5qZWN0aW9uVG9rZW48Um91dGVHdWFyZHNDb25maWc+KCdAYmFja2Jhc2UvZm91bmRhdGlvbiBSb3V0ZSBHdWFyZHMnKTtcbi8qKlxuICogQGRlcHJlY2F0ZWQgV2lsbCBiZSByZW1vdmVkIGluIHY3LjAuMFxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUm91dGVHdWFyZHNSZWdpc3RyeVNlcnZpY2Uge1xuICByZWFkb25seSBjYW5BY3RpdmF0ZTogTWFwPFJvdXRlR3VhcmRLZXksIFR5cGU8Q2FuQWN0aXZhdGU+PiA9IG5ldyBNYXAoKTtcbiAgcmVhZG9ubHkgY2FuQWN0aXZhdGVDaGlsZDogTWFwPFJvdXRlR3VhcmRLZXksIFR5cGU8Q2FuQWN0aXZhdGVDaGlsZD4+ID0gbmV3IE1hcCgpO1xuXG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoQ09ORklHX1JPVVRFX0dVQVJEUykgY29uZmlnczogQXJyYXk8Um91dGVHdWFyZHNDb25maWc+KSB7XG4gICAgY29uZmlncy5mb3JFYWNoKGhhbmRsZXJNYXAgPT4ge1xuICAgICAgT2JqZWN0LmVudHJpZXMoaGFuZGxlck1hcC5jYW5BY3RpdmF0ZSB8fCB7fSlcbiAgICAgICAgLmZpbHRlcigoZW50cnkpOiBlbnRyeSBpcyBbUm91dGVHdWFyZEtleSwgVHlwZTxDYW5BY3RpdmF0ZT5dID0+ICdjYW5BY3RpdmF0ZScgaW4gZW50cnlbMV0ucHJvdG90eXBlKVxuICAgICAgICAuZm9yRWFjaCgoW2tleSwgZ3VhcmRdOiBbUm91dGVHdWFyZEtleSwgVHlwZTxDYW5BY3RpdmF0ZT5dKSA9PiB7XG4gICAgICAgICAgdGhpcy5jYW5BY3RpdmF0ZS5zZXQoa2V5LCBndWFyZCk7XG4gICAgICAgIH0pO1xuICAgICAgT2JqZWN0LmVudHJpZXMoaGFuZGxlck1hcC5jYW5BY3RpdmF0ZUNoaWxkIHx8IHt9KS5mb3JFYWNoKFxuICAgICAgICAoW2tleSwgZ3VhcmRdOiBbUm91dGVHdWFyZEtleSwgVHlwZTxDYW5BY3RpdmF0ZUNoaWxkPl0pID0+IHtcbiAgICAgICAgICB0aGlzLmNhbkFjdGl2YXRlQ2hpbGQuc2V0KGtleSwgZ3VhcmQpO1xuICAgICAgICB9LFxuICAgICAgKTtcbiAgICB9KTtcbiAgfVxufVxuIl19