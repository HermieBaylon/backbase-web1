import { InjectionToken } from '@angular/core';
import { tap } from 'rxjs/operators';
export const makeDebugPipe = () => ({
    pipe: (debugPrefix = 'DEBUG') => (stdin) => stdin.pipe(tap((value) => {
        // eslint-disable-next-line  no-console
        console.log(`DEBUG ITEM OUTPUT ${debugPrefix}:`, value);
    })),
});
/**
 * Configure the `DebugPipe`.
 *
 * Use the string 'debug' to configure this handler.
 *
 * @usageNotes
 *
 * ```json
 * {
 *   "output.myOutput1": "debug test", // use as sink
 *   "output.myOutput2": "debug > route-param" // use a pipe
 * }
 * ```
 */
export const debugProcessorConfig = {
    name: 'debug',
    provider: {
        provide: new InjectionToken('Debug handler'),
        useFactory: makeDebugPipe,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlL3NyYy9iYWNrYmFzZS1jb3JlL2NvbW11bmljYXRpb24vcGlwZXMvaGFuZGxlcnMvZGVidWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUvQyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFvQnJDLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxHQUFvQixFQUFFLENBQUMsQ0FBQztJQUNuRCxJQUFJLEVBQUUsQ0FBQyxjQUFzQixPQUFPLEVBQWMsRUFBRSxDQUFDLENBQUMsS0FBb0IsRUFBaUIsRUFBRSxDQUMzRixLQUFLLENBQUMsSUFBSSxDQUNSLEdBQUcsQ0FBQyxDQUFDLEtBQVEsRUFBRSxFQUFFO1FBQ2YsdUNBQXVDO1FBQ3ZDLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLFdBQVcsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzFELENBQUMsQ0FBQyxDQUNIO0NBQ0osQ0FBQyxDQUFDO0FBRUg7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFxQztJQUNwRSxJQUFJLEVBQUUsT0FBTztJQUNiLFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxJQUFJLGNBQWMsQ0FBQyxlQUFlLENBQUM7UUFDNUMsVUFBVSxFQUFFLGFBQWE7S0FDMUI7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBpcGUsIFBpcGVsaW5lUGlwZSB9IGZyb20gJy4uL3BpcGVsaW5lLWludGVyZmFjZSc7XG5pbXBvcnQgeyB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBQaXBlbGluZVByb2Nlc3NvckNvbmZpZyB9IGZyb20gJy4uL3BpcGVsaW5lLXJlZ2lzdHJ5JztcblxuLyoqXG4gKiBBIGBQaXBlbGluZVByb2Nlc3NvcmAgd2hpY2ggY2FuIGJlIHVzZWQgYXMgYSBwaXBlXG4gKiBvciBhIHNpbmsgdG8gZGVidWcgYSBjb21wb25lbnQncyBvdXRwdXQuXG4gKlxuICogQW4gb3B0aW9uYWwgcHJlZml4IGNhbiBiZSBnaXZlbiBhcyBhbiBhcmd1bWVudCB0byB0aGUgaGFuZGxlci5cbiAqXG4gKiBTZWUgYGRlYnVnUHJvY2Vzc29yQ29uZmlnYCBmb3IgY29uZmlndXJhdGlvbi5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBEZWJ1Z1BpcGU8VD4gZXh0ZW5kcyBQaXBlbGluZVBpcGU8VCwgVD4ge1xuICAvKipcbiAgICogQHBhcmFtIGRlYnVnUHJlZml4IHByZWZpeCBwbGFjZWQgYmVmb3JlIGVhY2ggZGVidWcgb3V0cHV0XG4gICAqL1xuICBwaXBlOiAoZGVidWdQcmVmaXg/OiBzdHJpbmcpID0+IFBpcGU8VCwgVD47XG59XG5cbmV4cG9ydCB0eXBlIERlYnVnU2luazxUPiA9IERlYnVnUGlwZTxUPjtcblxuZXhwb3J0IGNvbnN0IG1ha2VEZWJ1Z1BpcGUgPSA8VD4oKTogRGVidWdQaXBlPFQ+ID0+ICh7XG4gIHBpcGU6IChkZWJ1Z1ByZWZpeDogc3RyaW5nID0gJ0RFQlVHJyk6IFBpcGU8VCwgVD4gPT4gKHN0ZGluOiBPYnNlcnZhYmxlPFQ+KTogT2JzZXJ2YWJsZTxUPiA9PlxuICAgIHN0ZGluLnBpcGUoXG4gICAgICB0YXAoKHZhbHVlOiBUKSA9PiB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAgbm8tY29uc29sZVxuICAgICAgICBjb25zb2xlLmxvZyhgREVCVUcgSVRFTSBPVVRQVVQgJHtkZWJ1Z1ByZWZpeH06YCwgdmFsdWUpO1xuICAgICAgfSksXG4gICAgKSxcbn0pO1xuXG4vKipcbiAqIENvbmZpZ3VyZSB0aGUgYERlYnVnUGlwZWAuXG4gKlxuICogVXNlIHRoZSBzdHJpbmcgJ2RlYnVnJyB0byBjb25maWd1cmUgdGhpcyBoYW5kbGVyLlxuICpcbiAqIEB1c2FnZU5vdGVzXG4gKlxuICogYGBganNvblxuICoge1xuICogICBcIm91dHB1dC5teU91dHB1dDFcIjogXCJkZWJ1ZyB0ZXN0XCIsIC8vIHVzZSBhcyBzaW5rXG4gKiAgIFwib3V0cHV0Lm15T3V0cHV0MlwiOiBcImRlYnVnID4gcm91dGUtcGFyYW1cIiAvLyB1c2UgYSBwaXBlXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGRlYnVnUHJvY2Vzc29yQ29uZmlnOiBQaXBlbGluZVByb2Nlc3NvckNvbmZpZzwnZGVidWcnPiA9IHtcbiAgbmFtZTogJ2RlYnVnJyxcbiAgcHJvdmlkZXI6IHtcbiAgICBwcm92aWRlOiBuZXcgSW5qZWN0aW9uVG9rZW4oJ0RlYnVnIGhhbmRsZXInKSxcbiAgICB1c2VGYWN0b3J5OiBtYWtlRGVidWdQaXBlLFxuICB9LFxufTtcbiJdfQ==