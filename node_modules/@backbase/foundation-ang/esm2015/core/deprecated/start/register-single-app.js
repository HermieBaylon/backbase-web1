import { ÉµEXTERNAL_SERVICES as EXTERNAL_SERVICES } from '@backbase/foundation-ang/web-sdk';
import { BackbaseConnector } from '../../backbase-core/bootstrap/backbase-connector.service';
/**
 * Exposes Angular Single Page Application bootstrap method `window.BB.startSingleApp`
 * @param createNgModule Function that accepts StaticProviders and returns NgModuleRef
 * @usageNotes
 * ### Example
 *
 * ```
 * window.BB.startSingleApp = registerSingleApp(createNgModule);
 *
 * window.BB.startSingleApp(webSdkServices, staticProviders)
 *   .then((bbConnector: BackbaseConnector) => bbConector.bootstrap(item, itemLocation));
 * ```
 */
export function registerSingleApp(createNgModule) {
    const startSingleApp = (externalServices = {}) => {
        const providers = [
            {
                provide: EXTERNAL_SERVICES,
                useValue: externalServices,
            },
        ];
        return createNgModule(providers).then((moduleRef) => moduleRef.injector.get(BackbaseConnector));
    };
    window.BB = window.BB || {};
    Object.assign(window.BB, { startSingleApp });
    return startSingleApp;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXItc2luZ2xlLWFwcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2JhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUvc3JjL2RlcHJlY2F0ZWQvc3RhcnQvcmVnaXN0ZXItc2luZ2xlLWFwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQW9CLGtCQUFrQixJQUFJLGlCQUFpQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDN0csT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFLN0Y7Ozs7Ozs7Ozs7OztHQVlHO0FBQ0gsTUFBTSxVQUFVLGlCQUFpQixDQUFDLGNBQThCO0lBQzlELE1BQU0sY0FBYyxHQUFtQixDQUFDLG1CQUFxQyxFQUFFLEVBQThCLEVBQUU7UUFDN0csTUFBTSxTQUFTLEdBQUc7WUFDaEI7Z0JBQ0UsT0FBTyxFQUFFLGlCQUFpQjtnQkFDMUIsUUFBUSxFQUFFLGdCQUFnQjthQUMzQjtTQUNGLENBQUM7UUFDRixPQUFPLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQ25DLENBQUMsU0FBMkIsRUFBcUIsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFvQixpQkFBaUIsQ0FBQyxDQUNqSCxDQUFDO0lBQ0osQ0FBQyxDQUFDO0lBQ0YsTUFBTSxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQztJQUM1QixNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDO0lBQzdDLE9BQU8sY0FBYyxDQUFDO0FBQ3hCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZVJlZiwgU3RhdGljUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEV4dGVybmFsU2VydmljZXMsIMm1RVhURVJOQUxfU0VSVklDRVMgYXMgRVhURVJOQUxfU0VSVklDRVMgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvd2ViLXNkayc7XG5pbXBvcnQgeyBCYWNrYmFzZUNvbm5lY3RvciB9IGZyb20gJy4uLy4uL2JhY2tiYXNlLWNvcmUvYm9vdHN0cmFwL2JhY2tiYXNlLWNvbm5lY3Rvci5zZXJ2aWNlJztcblxuZXhwb3J0IHR5cGUgQ3JlYXRlTmdNb2R1bGUgPSAoZXh0cmFQcm92aWRlcnM6IEFycmF5PFN0YXRpY1Byb3ZpZGVyPikgPT4gUHJvbWlzZTxOZ01vZHVsZVJlZjxhbnk+PjtcbmV4cG9ydCB0eXBlIFN0YXJ0U2luZ2xlQXBwID0gKGV4dGVybmFsU2VydmljZXM/OiBFeHRlcm5hbFNlcnZpY2VzKSA9PiBQcm9taXNlPEJhY2tiYXNlQ29ubmVjdG9yPjtcblxuLyoqXG4gKiBFeHBvc2VzIEFuZ3VsYXIgU2luZ2xlIFBhZ2UgQXBwbGljYXRpb24gYm9vdHN0cmFwIG1ldGhvZCBgd2luZG93LkJCLnN0YXJ0U2luZ2xlQXBwYFxuICogQHBhcmFtIGNyZWF0ZU5nTW9kdWxlIEZ1bmN0aW9uIHRoYXQgYWNjZXB0cyBTdGF0aWNQcm92aWRlcnMgYW5kIHJldHVybnMgTmdNb2R1bGVSZWZcbiAqIEB1c2FnZU5vdGVzXG4gKiAjIyMgRXhhbXBsZVxuICpcbiAqIGBgYFxuICogd2luZG93LkJCLnN0YXJ0U2luZ2xlQXBwID0gcmVnaXN0ZXJTaW5nbGVBcHAoY3JlYXRlTmdNb2R1bGUpO1xuICpcbiAqIHdpbmRvdy5CQi5zdGFydFNpbmdsZUFwcCh3ZWJTZGtTZXJ2aWNlcywgc3RhdGljUHJvdmlkZXJzKVxuICogICAudGhlbigoYmJDb25uZWN0b3I6IEJhY2tiYXNlQ29ubmVjdG9yKSA9PiBiYkNvbmVjdG9yLmJvb3RzdHJhcChpdGVtLCBpdGVtTG9jYXRpb24pKTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJTaW5nbGVBcHAoY3JlYXRlTmdNb2R1bGU6IENyZWF0ZU5nTW9kdWxlKTogU3RhcnRTaW5nbGVBcHAge1xuICBjb25zdCBzdGFydFNpbmdsZUFwcDogU3RhcnRTaW5nbGVBcHAgPSAoZXh0ZXJuYWxTZXJ2aWNlczogRXh0ZXJuYWxTZXJ2aWNlcyA9IHt9KTogUHJvbWlzZTxCYWNrYmFzZUNvbm5lY3Rvcj4gPT4ge1xuICAgIGNvbnN0IHByb3ZpZGVycyA9IFtcbiAgICAgIHtcbiAgICAgICAgcHJvdmlkZTogRVhURVJOQUxfU0VSVklDRVMsXG4gICAgICAgIHVzZVZhbHVlOiBleHRlcm5hbFNlcnZpY2VzLFxuICAgICAgfSxcbiAgICBdO1xuICAgIHJldHVybiBjcmVhdGVOZ01vZHVsZShwcm92aWRlcnMpLnRoZW4oXG4gICAgICAobW9kdWxlUmVmOiBOZ01vZHVsZVJlZjxhbnk+KTogQmFja2Jhc2VDb25uZWN0b3IgPT4gbW9kdWxlUmVmLmluamVjdG9yLmdldDxCYWNrYmFzZUNvbm5lY3Rvcj4oQmFja2Jhc2VDb25uZWN0b3IpLFxuICAgICk7XG4gIH07XG4gIHdpbmRvdy5CQiA9IHdpbmRvdy5CQiB8fCB7fTtcbiAgT2JqZWN0LmFzc2lnbih3aW5kb3cuQkIsIHsgc3RhcnRTaW5nbGVBcHAgfSk7XG4gIHJldHVybiBzdGFydFNpbmdsZUFwcDtcbn1cblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHtcbiAgICBCQjogeyBba2V5OiBzdHJpbmddOiBhbnkgfTtcbiAgfVxufVxuIl19