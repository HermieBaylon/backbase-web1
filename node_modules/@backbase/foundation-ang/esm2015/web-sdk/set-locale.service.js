import { Inject, Injectable } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const COOKIE_NAME = 'bb-locale';
//TODO: Remove dynamic when Ivy compilation is enabled
//@dynamic
export class SetLocaleService {
    constructor(document) {
        this.document = document;
    }
    getCookieName() {
        return COOKIE_NAME;
    }
    setLocale(locale) {
        this.document.cookie = `${COOKIE_NAME}=${locale}; path=/`;
    }
    /**
     * @deprecated Will be removed in v7.0.0
     */
    setLocaleLegacy(locale) {
        this.setLocale(locale);
        return Promise.resolve({
            status: 200,
            statusText: 'OK',
            headers: {},
            body: '',
        });
    }
}
SetLocaleService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SetLocaleService_Factory() { return new SetLocaleService(i0.ɵɵinject(i1.DOCUMENT)); }, token: SetLocaleService, providedIn: "root" });
SetLocaleService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
SetLocaleService.ctorParameters = () => [
    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LWxvY2FsZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvd2ViLXNkay9zcmMvc2V0LWxvY2FsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7O0FBRTNDLE1BQU0sV0FBVyxHQUFHLFdBQVcsQ0FBQztBQUVoQyxzREFBc0Q7QUFDdEQsVUFBVTtBQUlWLE1BQU0sT0FBTyxnQkFBZ0I7SUFDM0IsWUFBc0MsUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtJQUFHLENBQUM7SUFFNUQsYUFBYTtRQUNYLE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxTQUFTLENBQUMsTUFBYztRQUN0QixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxHQUFHLFdBQVcsSUFBSSxNQUFNLFVBQVUsQ0FBQztJQUM1RCxDQUFDO0lBRUQ7O09BRUc7SUFDTyxlQUFlLENBQUMsTUFBYztRQUN0QyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXZCLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQztZQUNyQixNQUFNLEVBQUUsR0FBRztZQUNYLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLE9BQU8sRUFBRSxFQUFFO1lBQ1gsSUFBSSxFQUFFLEVBQUU7U0FDVCxDQUFDLENBQUM7SUFDTCxDQUFDOzs7O1lBMUJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7O1lBRWlELFFBQVEsdUJBQTNDLE1BQU0sU0FBQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0LCBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBET0NVTUVOVCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmNvbnN0IENPT0tJRV9OQU1FID0gJ2JiLWxvY2FsZSc7XG5cbi8vVE9ETzogUmVtb3ZlIGR5bmFtaWMgd2hlbiBJdnkgY29tcGlsYXRpb24gaXMgZW5hYmxlZFxuLy9AZHluYW1pY1xuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIFNldExvY2FsZVNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihASW5qZWN0KERPQ1VNRU5UKSBwcml2YXRlIGRvY3VtZW50OiBEb2N1bWVudCkge31cblxuICBnZXRDb29raWVOYW1lKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIENPT0tJRV9OQU1FO1xuICB9XG5cbiAgc2V0TG9jYWxlKGxvY2FsZTogc3RyaW5nKSB7XG4gICAgdGhpcy5kb2N1bWVudC5jb29raWUgPSBgJHtDT09LSUVfTkFNRX09JHtsb2NhbGV9OyBwYXRoPS9gO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIFdpbGwgYmUgcmVtb3ZlZCBpbiB2Ny4wLjBcbiAgICovXG4gIHByb3RlY3RlZCBzZXRMb2NhbGVMZWdhY3kobG9jYWxlOiBzdHJpbmcpIHtcbiAgICB0aGlzLnNldExvY2FsZShsb2NhbGUpO1xuXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICBzdGF0dXM6IDIwMCxcbiAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICBoZWFkZXJzOiB7fSxcbiAgICAgIGJvZHk6ICcnLFxuICAgIH0pO1xuICB9XG59XG4iXX0=