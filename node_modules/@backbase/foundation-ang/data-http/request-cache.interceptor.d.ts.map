{"version":3,"file":"request-cache.interceptor.d.ts","sources":["request-cache.interceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Provider } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RequestCacheService } from './request-cache.service';\nexport declare class RequestCacheInterceptor implements HttpInterceptor {\n    private readonly cache;\n    constructor(cache: RequestCacheService);\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n    private isCachable;\n    private cachedResponse;\n    private refreshResponse;\n}\nexport declare const requestCacheInterceptorProvider: Provider;\n"]}