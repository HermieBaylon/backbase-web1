import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { InjectionToken, Provider } from '@angular/core';
import { Observable } from 'rxjs';
import { ServiceDataHttpConfig } from './data-http-config';
import { DataModulesManager } from './data-module-manager';
import { MockExample } from './mocks';
export declare class MocksInterceptor implements HttpInterceptor {
    private readonly dataModuleManager;
    private readonly options;
    private urlMatchesPattern;
    private findRequestMock;
    private toResponseObject;
    constructor(dataModuleManager: DataModulesManager);
    private getMockItemFromStorage;
    private processRequest;
    intercept<R, T>(request: HttpRequest<R>, next: HttpHandler): Observable<HttpEvent<T>>;
}
export interface MocksInterceptorConfiguration {
    responseDelay: number;
    enableMocksStorageKey: string;
}
/**
 * Create a HTTP_INTERCEPTOR to return mock responses for data modules.
 */
export declare function createMocksInterceptor(): Provider;
export declare function bootstrapMocksInterceptor(): void;
/**
 * @internal
 * @deprecated
 */
export declare function createMockInterceptor(examples: Array<MockExample>): Provider;
/**
 * Create mocks
 *
 * @param examples
 * @param serviceConfigToken
 */
export declare function createMocks(examples: Array<MockExample>, serviceConfigToken?: InjectionToken<ServiceDataHttpConfig>): Provider;
