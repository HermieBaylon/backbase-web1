{"version":3,"file":"mocks.interceptor.service.d.ts","sources":["mocks.interceptor.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { InjectionToken, Provider } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ServiceDataHttpConfig } from './data-http-config';\nimport { DataModulesManager } from './data-module-manager';\nimport { MockExample } from './mocks';\nexport declare class MocksInterceptor implements HttpInterceptor {\n    private readonly dataModuleManager;\n    private readonly options;\n    private urlMatchesPattern;\n    private findRequestMock;\n    private toResponseObject;\n    constructor(dataModuleManager: DataModulesManager);\n    private getMockItemFromStorage;\n    private processRequest;\n    intercept<R, T>(request: HttpRequest<R>, next: HttpHandler): Observable<HttpEvent<T>>;\n}\nexport interface MocksInterceptorConfiguration {\n    responseDelay: number;\n    enableMocksStorageKey: string;\n}\n/**\n * Create a HTTP_INTERCEPTOR to return mock responses for data modules.\n */\nexport declare function createMocksInterceptor(): Provider;\nexport declare function bootstrapMocksInterceptor(): void;\n/**\n * @internal\n * @deprecated\n */\nexport declare function createMockInterceptor(examples: Array<MockExample>): Provider;\n/**\n * Create mocks\n *\n * @param examples\n * @param serviceConfigToken\n */\nexport declare function createMocks(examples: Array<MockExample>, serviceConfigToken?: InjectionToken<ServiceDataHttpConfig>): Provider;\n"]}