{"version":3,"file":"invalid-token.interceptor.d.ts","sources":["invalid-token.interceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './deprecated/auth.service';\nexport interface InvalidTokenConfig {\n    enableAutoRefresh?: boolean;\n    redirectToLoginPage?: boolean;\n}\nexport declare const INVALID_TOKEN_CONFIG: InjectionToken<InvalidTokenConfig>;\nexport declare class InvalidTokenInterceptor implements HttpInterceptor {\n    private authService;\n    private httpClient;\n    private injectedConfig;\n    private document;\n    private config;\n    private autoRefresh;\n    constructor(authService: AuthService, httpClient: HttpClient, injectedConfig: InvalidTokenConfig, document: any);\n    private checkRedirect;\n    private tryRefresh;\n    intercept(req: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<any>>;\n}\n"]}