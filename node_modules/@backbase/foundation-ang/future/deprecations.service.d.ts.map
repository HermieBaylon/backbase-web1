{"version":3,"file":"deprecations.service.d.ts","sources":["deprecations.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\n/**\n * @deprecated Will be removed in v7.0.0\n */\nexport declare const LOG_DEPRECATIONS_CONFIG: InjectionToken<boolean>;\n/**\n * @deprecated Will be removed in v7.0.0\n * Log deprecated features.\n *\n * Deprecations will only be logged when `logDeprecations` has been\n * configured to \"true\" in `BackbaseCoreConfiguration`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * Log a deprecated property:\n *\n * ```\n * @Component({\n *   â€¦\n * })\n * export class MyComponent {\n *   private myOldPropertyValue: string | undefined;\n *\n *   constructor(private deprecationsService: DeprecationsService) { }\n *\n *   @Input()\n *   set myOldProperty(prop: string | undefined) {\n *     this.deprecationsService.logDeprecatedFeature(\"The `myOldProperty` property of MyComponent has been deprecated\");\n *     this.myOldPropertyValue = prop;\n *   }\n * }\n */\nexport declare class DeprecationsService {\n    private readonly logDeprecations;\n    constructor(logDeprecations: boolean | null);\n    logDeprecatedFeature(warning: string): void;\n}\n"]}