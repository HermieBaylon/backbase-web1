import { InjectionToken } from '@angular/core';
/**
 * @deprecated Will be removed in v7.0.0
 */
import * as ɵngcc0 from '@angular/core';
export declare const LOG_DEPRECATIONS_CONFIG: InjectionToken<boolean>;
/**
 * @deprecated Will be removed in v7.0.0
 * Log deprecated features.
 *
 * Deprecations will only be logged when `logDeprecations` has been
 * configured to "true" in `BackbaseCoreConfiguration`.
 *
 * @usageNotes
 *
 * ### Example
 *
 * Log a deprecated property:
 *
 * ```
 * @Component({
 *   …
 * })
 * export class MyComponent {
 *   private myOldPropertyValue: string | undefined;
 *
 *   constructor(private deprecationsService: DeprecationsService) { }
 *
 *   @Input()
 *   set myOldProperty(prop: string | undefined) {
 *     this.deprecationsService.logDeprecatedFeature("The `myOldProperty` property of MyComponent has been deprecated");
 *     this.myOldPropertyValue = prop;
 *   }
 * }
 */
export declare class DeprecationsService {
    private readonly logDeprecations;
    constructor(logDeprecations: boolean | null);
    logDeprecatedFeature(warning: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DeprecationsService, [{ optional: true; }]>;
}

//# sourceMappingURL=deprecations.service.d.ts.map