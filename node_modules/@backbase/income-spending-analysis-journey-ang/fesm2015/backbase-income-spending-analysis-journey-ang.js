import * as i6 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { InjectionToken, Injectable, Optional, Inject, Component, NgModule } from '@angular/core';
import * as i1 from '@angular/router';
import { provideRoutes, RouterModule } from '@angular/router';
import * as i1$1 from '@backbase/foundation-ang/core';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import * as i5 from '@backbase/income-spending-analysis-widget-ang';
import { IncomeSpendingAnalysisWidgetModule } from '@backbase/income-spending-analysis-widget-ang';
import * as i4 from '@backbase/product-summary-account-selector-widget-ang';
import { ProductSummaryAccountSelectorWidgetModule } from '@backbase/product-summary-account-selector-widget-ang';
import * as i3 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';

var AnalysisType;
(function (AnalysisType) {
    AnalysisType["INCOME"] = "CRDT";
    AnalysisType["SPENDING"] = "DBIT";
})(AnalysisType || (AnalysisType = {}));
const IncomeSpendingAnalysisJourneyConfigurationToken = new InjectionToken('IncomeSpendingAnalysisJourneyConfiguration injection token');
const configDefaults = {
    analysisType: AnalysisType.SPENDING,
};
class IncomeSpendingAnalysisJourneyService {
    constructor(config) {
        config = config || {};
        this._config = Object.assign(Object.assign({}, configDefaults), config);
    }
    get defaults() {
        return configDefaults;
    }
    get analysisType() {
        return this._config.analysisType;
    }
}
IncomeSpendingAnalysisJourneyService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyService, deps: [{ token: IncomeSpendingAnalysisJourneyConfigurationToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
IncomeSpendingAnalysisJourneyService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [IncomeSpendingAnalysisJourneyConfigurationToken]
                }] }]; } });

class IncomeSpendingAnalysisJourneyComponent {
}
IncomeSpendingAnalysisJourneyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
IncomeSpendingAnalysisJourneyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: IncomeSpendingAnalysisJourneyComponent, selector: "bb-income-spending-analysis-journey", providers: [IncomeSpendingAnalysisJourneyService], ngImport: i0, template: '<router-outlet></router-outlet>', isInline: true, directives: [{ type: i1.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-income-spending-analysis-journey',
                    template: '<router-outlet></router-outlet>',
                    providers: [IncomeSpendingAnalysisJourneyService],
                }]
        }] });

class IncomeSpendingAnalysisViewComponent {
    constructor(router, route, config) {
        this.router = router;
        this.route = route;
        this.config = config;
        this.isSpendingAnalysis = this.config.analysisType === AnalysisType.SPENDING;
    }
    onItemSelect(selectedAccount) {
        this.router.navigate(['.', { selectedAccount }], { relativeTo: this.route });
    }
}
IncomeSpendingAnalysisViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisViewComponent, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: IncomeSpendingAnalysisJourneyService }], target: i0.ɵɵFactoryTarget.Component });
IncomeSpendingAnalysisViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: IncomeSpendingAnalysisViewComponent, selector: "bb-income-spending-analysis-view", ngImport: i0, template: `
    <bb-header-ui
      *ngIf="isSpendingAnalysis"
      headingType="h1"
      headingClasses="bb-heading-widget__heading px-0 pb-5"
      heading="Spending Analysis"
      i18n-heading="Spending analysis|Heading for Spending analysis journey@@spending.analysis.journey.heading.text"
    ></bb-header-ui>
    <bb-header-ui
      *ngIf="!isSpendingAnalysis"
      headingType="h1"
      headingClasses="bb-heading-widget__heading px-0 pb-5"
      heading="Income Analysis"
      i18n-heading="Income analysis|Heading for Income analysis journey@@income.analysis.journey.heading.text"
    ></bb-header-ui>
    <div class="bb-block--xl">
      <bb-product-summary-account-selector-widget
        (selectedAccount)="onItemSelect($event)"
      ></bb-product-summary-account-selector-widget>
    </div>
    <div>
      <bb-income-spending-analysis-widget [analysisType]="config.analysisType"></bb-income-spending-analysis-widget>
    </div>
  `, isInline: true, components: [{ type: i3.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4.ProductSummaryAccountSelectorWidgetComponent, selector: "bb-product-summary-account-selector-widget", inputs: ["event.refreshAccountsList", "multiple", "filterItems", "showAccountState"], outputs: ["selectedAccount", "selectedKind"] }, { type: i5.IncomeSpendingAnalysisWidgetComponent, selector: "bb-income-spending-analysis-widget", inputs: ["analysisType"] }], directives: [{ type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-income-spending-analysis-view',
                    template: `
    <bb-header-ui
      *ngIf="isSpendingAnalysis"
      headingType="h1"
      headingClasses="bb-heading-widget__heading px-0 pb-5"
      heading="Spending Analysis"
      i18n-heading="Spending analysis|Heading for Spending analysis journey@@spending.analysis.journey.heading.text"
    ></bb-header-ui>
    <bb-header-ui
      *ngIf="!isSpendingAnalysis"
      headingType="h1"
      headingClasses="bb-heading-widget__heading px-0 pb-5"
      heading="Income Analysis"
      i18n-heading="Income analysis|Heading for Income analysis journey@@income.analysis.journey.heading.text"
    ></bb-header-ui>
    <div class="bb-block--xl">
      <bb-product-summary-account-selector-widget
        (selectedAccount)="onItemSelect($event)"
      ></bb-product-summary-account-selector-widget>
    </div>
    <div>
      <bb-income-spending-analysis-widget [analysisType]="config.analysisType"></bb-income-spending-analysis-widget>
    </div>
  `,
                }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: IncomeSpendingAnalysisJourneyService }]; } });

const defaultRoute = {
    path: '',
    component: IncomeSpendingAnalysisJourneyComponent,
    children: [
        {
            path: '',
            component: IncomeSpendingAnalysisViewComponent,
        },
    ],
};
class IncomeSpendingAnalysisJourneyModule {
    static forRoot(data = { route: defaultRoute }) {
        return {
            ngModule: IncomeSpendingAnalysisJourneyModule,
            providers: [provideRoutes([data.route])],
        };
    }
}
IncomeSpendingAnalysisJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IncomeSpendingAnalysisJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyModule, declarations: [IncomeSpendingAnalysisJourneyComponent, IncomeSpendingAnalysisViewComponent], imports: [CommonModule, i1$1.BackbaseCoreModule, RouterModule,
        HeaderModule,
        ProductSummaryAccountSelectorWidgetModule,
        IncomeSpendingAnalysisWidgetModule] });
IncomeSpendingAnalysisJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyModule, imports: [[
            CommonModule,
            BackbaseCoreModule.withConfig({
                classMap: { IncomeSpendingAnalysisJourneyComponent },
            }),
            RouterModule,
            HeaderModule,
            ProductSummaryAccountSelectorWidgetModule,
            IncomeSpendingAnalysisWidgetModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: IncomeSpendingAnalysisJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IncomeSpendingAnalysisJourneyComponent, IncomeSpendingAnalysisViewComponent],
                    imports: [
                        CommonModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { IncomeSpendingAnalysisJourneyComponent },
                        }),
                        RouterModule,
                        HeaderModule,
                        ProductSummaryAccountSelectorWidgetModule,
                        IncomeSpendingAnalysisWidgetModule,
                    ],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { AnalysisType, IncomeSpendingAnalysisJourneyComponent, IncomeSpendingAnalysisJourneyConfigurationToken, IncomeSpendingAnalysisJourneyModule, IncomeSpendingAnalysisJourneyService, IncomeSpendingAnalysisViewComponent };
//# sourceMappingURL=backbase-income-spending-analysis-journey-ang.js.map
