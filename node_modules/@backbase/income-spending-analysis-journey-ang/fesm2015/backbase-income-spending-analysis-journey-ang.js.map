{"version":3,"file":"backbase-income-spending-analysis-journey-ang.js","sources":["../../../../libs/income-spending-analysis-journey/src/income-spending-analysis-journey-config.service.ts","../../../../libs/income-spending-analysis-journey/src/income-spending-analysis-journey.component.ts","../../../../libs/income-spending-analysis-journey/src/views/income-spending-analysis-view.component.ts","../../../../libs/income-spending-analysis-journey/src/income-spending-analysis-journey.module.ts","../../../../libs/income-spending-analysis-journey/backbase-income-spending-analysis-journey-ang.ts"],"sourcesContent":["import { Injectable, Optional, Inject, InjectionToken } from '@angular/core';\n\nexport enum AnalysisType {\n  INCOME = 'CRDT',\n  SPENDING = 'DBIT',\n}\n\nexport interface IncomeSpendingAnalysisJourneyConfiguration {\n  /**\n   * Should the analysis be done for income or spending\n   */\n  analysisType: AnalysisType;\n}\n\nexport const IncomeSpendingAnalysisJourneyConfigurationToken =\n  new InjectionToken<IncomeSpendingAnalysisJourneyConfiguration>(\n    'IncomeSpendingAnalysisJourneyConfiguration injection token',\n  );\n\nconst configDefaults: IncomeSpendingAnalysisJourneyConfiguration = {\n  analysisType: AnalysisType.SPENDING,\n};\n\n@Injectable()\nexport class IncomeSpendingAnalysisJourneyService {\n  private _config: IncomeSpendingAnalysisJourneyConfiguration;\n\n  constructor(\n    @Optional()\n    @Inject(IncomeSpendingAnalysisJourneyConfigurationToken)\n    config: IncomeSpendingAnalysisJourneyConfiguration,\n  ) {\n    config = config || {};\n    this._config = { ...configDefaults, ...config };\n  }\n\n  get defaults(): IncomeSpendingAnalysisJourneyConfiguration {\n    return configDefaults;\n  }\n\n  get analysisType(): AnalysisType {\n    return this._config.analysisType;\n  }\n}\n","import { Component } from '@angular/core';\nimport { IncomeSpendingAnalysisJourneyService } from './income-spending-analysis-journey-config.service';\n\n@Component({\n  selector: 'bb-income-spending-analysis-journey',\n  template: '<router-outlet></router-outlet>',\n  providers: [IncomeSpendingAnalysisJourneyService],\n})\nexport class IncomeSpendingAnalysisJourneyComponent {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AnalysisType, IncomeSpendingAnalysisJourneyService } from '../income-spending-analysis-journey-config.service';\n\n@Component({\n  selector: 'bb-income-spending-analysis-view',\n  template: `\n    <bb-header-ui\n      *ngIf=\"isSpendingAnalysis\"\n      headingType=\"h1\"\n      headingClasses=\"bb-heading-widget__heading px-0 pb-5\"\n      heading=\"Spending Analysis\"\n      i18n-heading=\"Spending analysis|Heading for Spending analysis journey@@spending.analysis.journey.heading.text\"\n    ></bb-header-ui>\n    <bb-header-ui\n      *ngIf=\"!isSpendingAnalysis\"\n      headingType=\"h1\"\n      headingClasses=\"bb-heading-widget__heading px-0 pb-5\"\n      heading=\"Income Analysis\"\n      i18n-heading=\"Income analysis|Heading for Income analysis journey@@income.analysis.journey.heading.text\"\n    ></bb-header-ui>\n    <div class=\"bb-block--xl\">\n      <bb-product-summary-account-selector-widget\n        (selectedAccount)=\"onItemSelect($event)\"\n      ></bb-product-summary-account-selector-widget>\n    </div>\n    <div>\n      <bb-income-spending-analysis-widget [analysisType]=\"config.analysisType\"></bb-income-spending-analysis-widget>\n    </div>\n  `,\n})\nexport class IncomeSpendingAnalysisViewComponent {\n  constructor(\n    private readonly router: Router,\n    private route: ActivatedRoute,\n    readonly config: IncomeSpendingAnalysisJourneyService,\n  ) {}\n\n  readonly isSpendingAnalysis: boolean = this.config.analysisType === AnalysisType.SPENDING;\n\n  onItemSelect(selectedAccount: string) {\n    this.router.navigate(['.', { selectedAccount }], { relativeTo: this.route });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { IncomeSpendingAnalysisWidgetModule } from '@backbase/income-spending-analysis-widget-ang';\nimport { ProductSummaryAccountSelectorWidgetModule } from '@backbase/product-summary-account-selector-widget-ang';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IncomeSpendingAnalysisJourneyComponent } from './income-spending-analysis-journey.component';\nimport { IncomeSpendingAnalysisViewComponent } from './views/income-spending-analysis-view.component';\n\nexport const defaultRoute: Route = {\n  path: '',\n  component: IncomeSpendingAnalysisJourneyComponent,\n  children: [\n    {\n      path: '',\n      component: IncomeSpendingAnalysisViewComponent,\n    },\n  ],\n};\n\n@NgModule({\n  declarations: [IncomeSpendingAnalysisJourneyComponent, IncomeSpendingAnalysisViewComponent],\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { IncomeSpendingAnalysisJourneyComponent },\n    }),\n    RouterModule,\n    HeaderModule,\n    ProductSummaryAccountSelectorWidgetModule,\n    IncomeSpendingAnalysisWidgetModule,\n  ],\n})\nexport class IncomeSpendingAnalysisJourneyModule {\n  static forRoot(\n    data: { route: Route; [key: string]: any } = { route: defaultRoute },\n  ): ModuleWithProviders<IncomeSpendingAnalysisJourneyModule> {\n    return {\n      ngModule: IncomeSpendingAnalysisJourneyModule,\n      providers: [provideRoutes([data.route])],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}