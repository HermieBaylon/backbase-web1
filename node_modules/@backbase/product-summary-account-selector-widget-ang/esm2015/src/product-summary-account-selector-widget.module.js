import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { FormsModule } from '@angular/forms';
import { AccountSelectorModule } from '@backbase/ui-ang/account-selector';
import { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';
import { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { EllipsisModule } from '@backbase/ui-ang/ellipsis';
import { AmountModule } from '@backbase/ui-ang/amount';
import { ProductNumberModule } from '@backbase/product-summary-ui';
import { ValidationModule, DatePipeModule, ProductsExternalInfoService } from '@backbase/product-summary-common-ang';
import { ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorDropdownCustomizableDirective, ProductSummaryAccountSelectorItemCustomizableDirective, ProductSummaryAccountSelectorLoadingCustomizableDirective, ProductSummaryAccountSelectorStateCustomizableDirective, ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, } from './product-summary-account-selector/product-summary-account-selector-widget.component';
import { ProductItemCustomModule, ProductKindModule, AccountStateModule } from '@backbase/product-summary-ui';
import { productSummaryAccountSelectorConfigProviders } from './model/providers';
import { ProductSummaryAccountSelectorItemComponent } from './product-summary-account-selector-item/product-summary-account-selector-item.component';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const components = [ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorItemComponent];
const directives = [
    ProductSummaryAccountSelectorDropdownCustomizableDirective,
    ProductSummaryAccountSelectorItemCustomizableDirective,
    ProductSummaryAccountSelectorLoadingCustomizableDirective,
    ProductSummaryAccountSelectorStateCustomizableDirective,
    ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective,
];
const uiModules = [
    ProductItemCustomModule,
    ProductKindModule,
    AccountStateModule,
    AccountSelectorModule,
    InputCheckboxModule,
    ProductItemBasicAccountModule,
    EmptyStateModule,
    LoadingIndicatorModule,
    EllipsisModule,
    ProductNumberModule,
    AmountModule,
    ValidationModule,
    DatePipeModule,
];
const services = [ProductsExternalInfoService];
/**
 * Exports the Widgets and UI components for displaying of the account selector. (Retail banking)
 *
 * The following widgets are included in this module:
 *  - `ProductSummaryAccountSelectorWidgetComponent`
 *
 * @see ProductSummaryAccountSelectorWidgetComponent
 *
 * @usageNotes
 *
 * ### Include the exported widgets in your `AppModule`:
 *
 * ```typescript
 * @NgModule({
 *   imports: [
 *     ProductSummaryAccountSelectorWidgetModule ,
 *   ],
 *   ...
 * })
 * export class AppModule {}
 * ```
 */
export class ProductSummaryAccountSelectorWidgetModule {
}
ProductSummaryAccountSelectorWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryAccountSelectorWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ProductSummaryAccountSelectorWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryAccountSelectorWidgetModule, declarations: [ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorItemComponent, ProductSummaryAccountSelectorDropdownCustomizableDirective,
        ProductSummaryAccountSelectorItemCustomizableDirective,
        ProductSummaryAccountSelectorLoadingCustomizableDirective,
        ProductSummaryAccountSelectorStateCustomizableDirective,
        ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective], imports: [CommonModule,
        FormsModule, i1.BackbaseCoreModule, ProductItemCustomModule,
        ProductKindModule,
        AccountStateModule,
        AccountSelectorModule,
        InputCheckboxModule,
        ProductItemBasicAccountModule,
        EmptyStateModule,
        LoadingIndicatorModule,
        EllipsisModule,
        ProductNumberModule,
        AmountModule,
        ValidationModule,
        DatePipeModule], exports: [ProductSummaryAccountSelectorWidgetComponent, ProductSummaryAccountSelectorItemComponent, ProductSummaryAccountSelectorDropdownCustomizableDirective,
        ProductSummaryAccountSelectorItemCustomizableDirective,
        ProductSummaryAccountSelectorLoadingCustomizableDirective,
        ProductSummaryAccountSelectorStateCustomizableDirective,
        ProductSummaryAccountSelectorMultiSelectedItemsCustomizableDirective, ProductItemCustomModule,
        ProductKindModule,
        AccountStateModule,
        AccountSelectorModule,
        InputCheckboxModule,
        ProductItemBasicAccountModule,
        EmptyStateModule,
        LoadingIndicatorModule,
        EllipsisModule,
        ProductNumberModule,
        AmountModule,
        ValidationModule,
        DatePipeModule] });
ProductSummaryAccountSelectorWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryAccountSelectorWidgetModule, providers: [...services, ...productSummaryAccountSelectorConfigProviders], imports: [[
            CommonModule,
            FormsModule,
            BackbaseCoreModule.withConfig({
                classMap: { ProductSummaryAccountSelectorWidgetComponent },
            }),
            ...uiModules,
        ], ProductItemCustomModule,
        ProductKindModule,
        AccountStateModule,
        AccountSelectorModule,
        InputCheckboxModule,
        ProductItemBasicAccountModule,
        EmptyStateModule,
        LoadingIndicatorModule,
        EllipsisModule,
        ProductNumberModule,
        AmountModule,
        ValidationModule,
        DatePipeModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryAccountSelectorWidgetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { ProductSummaryAccountSelectorWidgetComponent },
                        }),
                        ...uiModules,
                    ],
                    declarations: [...components, ...directives],
                    exports: [...components, ...directives, ...uiModules],
                    providers: [...services, ...productSummaryAccountSelectorConfigProviders],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,