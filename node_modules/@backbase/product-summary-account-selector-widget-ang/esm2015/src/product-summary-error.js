export class ProductKindsBadRequest {
    constructor(response) {
        this.response = response;
        this.kind = 'ProductKindsBadRequest';
        this.messages = ((response.error || {}).errors || []).map((e) => e.message);
    }
}
export class ProductKindsUnknownError {
    constructor(response) {
        this.response = response;
        this.kind = 'ProductKindsUnknownError';
        this.messages = [response.message];
    }
}
export class ProductKindsAccessDenied {
    constructor(response) {
        this.response = response;
        this.kind = 'ProductKindsAccessDenied';
        this.messages = ((response.error || {}).errors || []).map((e) => e.message);
    }
}
export const parseError = (error) => {
    if (error.error instanceof ErrorEvent) {
        return new ProductKindsUnknownError(error);
    }
    else {
        switch (error.status) {
            case 400:
                return new ProductKindsBadRequest(error);
            case 403:
                return new ProductKindsAccessDenied(error);
            case 401:
                return new ProductKindsAccessDenied(error);
            default:
                return new ProductKindsUnknownError(error);
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1zdW1tYXJ5LWVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9wcm9kdWN0LXN1bW1hcnktYWNjb3VudC1zZWxlY3Rvci13aWRnZXQtYW5nL3NyYy9wcm9kdWN0LXN1bW1hcnktZXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxPQUFPLHNCQUFzQjtJQUdqQyxZQUFxQixRQUEyQjtRQUEzQixhQUFRLEdBQVIsUUFBUSxDQUFtQjtRQURoRCxTQUFJLEdBQTZCLHdCQUF3QixDQUFDO1FBRXhELElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25GLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyx3QkFBd0I7SUFHbkMsWUFBcUIsUUFBMkI7UUFBM0IsYUFBUSxHQUFSLFFBQVEsQ0FBbUI7UUFEaEQsU0FBSSxHQUErQiwwQkFBMEIsQ0FBQztRQUU1RCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyx3QkFBd0I7SUFHbkMsWUFBcUIsUUFBMkI7UUFBM0IsYUFBUSxHQUFSLFFBQVEsQ0FBbUI7UUFEaEQsU0FBSSxHQUErQiwwQkFBMEIsQ0FBQztRQUU1RCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuRixDQUFDO0NBQ0Y7QUFJRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxLQUF3QixFQUFxQixFQUFFO0lBQ3hFLElBQUksS0FBSyxDQUFDLEtBQUssWUFBWSxVQUFVLEVBQUU7UUFDckMsT0FBTyxJQUFJLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQzVDO1NBQU07UUFDTCxRQUFRLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDcEIsS0FBSyxHQUFHO2dCQUNOLE9BQU8sSUFBSSxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMzQyxLQUFLLEdBQUc7Z0JBQ04sT0FBTyxJQUFJLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzdDLEtBQUssR0FBRztnQkFDTixPQUFPLElBQUksd0JBQXdCLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDN0M7Z0JBQ0UsT0FBTyxJQUFJLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzlDO0tBQ0Y7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcblxuZXhwb3J0IGNsYXNzIFByb2R1Y3RLaW5kc0JhZFJlcXVlc3Qge1xuICBtZXNzYWdlczogc3RyaW5nW107XG4gIGtpbmQ6ICdQcm9kdWN0S2luZHNCYWRSZXF1ZXN0JyA9ICdQcm9kdWN0S2luZHNCYWRSZXF1ZXN0JztcbiAgY29uc3RydWN0b3IocmVhZG9ubHkgcmVzcG9uc2U6IEh0dHBFcnJvclJlc3BvbnNlKSB7XG4gICAgdGhpcy5tZXNzYWdlcyA9ICgocmVzcG9uc2UuZXJyb3IgfHwge30pLmVycm9ycyB8fCBbXSkubWFwKChlOiBhbnkpID0+IGUubWVzc2FnZSk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFByb2R1Y3RLaW5kc1Vua25vd25FcnJvciB7XG4gIG1lc3NhZ2VzOiBzdHJpbmdbXTtcbiAga2luZDogJ1Byb2R1Y3RLaW5kc1Vua25vd25FcnJvcicgPSAnUHJvZHVjdEtpbmRzVW5rbm93bkVycm9yJztcbiAgY29uc3RydWN0b3IocmVhZG9ubHkgcmVzcG9uc2U6IEh0dHBFcnJvclJlc3BvbnNlKSB7XG4gICAgdGhpcy5tZXNzYWdlcyA9IFtyZXNwb25zZS5tZXNzYWdlXTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUHJvZHVjdEtpbmRzQWNjZXNzRGVuaWVkIHtcbiAgbWVzc2FnZXM6IHN0cmluZ1tdO1xuICBraW5kOiAnUHJvZHVjdEtpbmRzQWNjZXNzRGVuaWVkJyA9ICdQcm9kdWN0S2luZHNBY2Nlc3NEZW5pZWQnO1xuICBjb25zdHJ1Y3RvcihyZWFkb25seSByZXNwb25zZTogSHR0cEVycm9yUmVzcG9uc2UpIHtcbiAgICB0aGlzLm1lc3NhZ2VzID0gKChyZXNwb25zZS5lcnJvciB8fCB7fSkuZXJyb3JzIHx8IFtdKS5tYXAoKGU6IGFueSkgPT4gZS5tZXNzYWdlKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBQcm9kdWN0S2luZHNFcnJvciA9IFByb2R1Y3RLaW5kc0FjY2Vzc0RlbmllZCB8IFByb2R1Y3RLaW5kc0JhZFJlcXVlc3QgfCBQcm9kdWN0S2luZHNVbmtub3duRXJyb3I7XG5cbmV4cG9ydCBjb25zdCBwYXJzZUVycm9yID0gKGVycm9yOiBIdHRwRXJyb3JSZXNwb25zZSk6IFByb2R1Y3RLaW5kc0Vycm9yID0+IHtcbiAgaWYgKGVycm9yLmVycm9yIGluc3RhbmNlb2YgRXJyb3JFdmVudCkge1xuICAgIHJldHVybiBuZXcgUHJvZHVjdEtpbmRzVW5rbm93bkVycm9yKGVycm9yKTtcbiAgfSBlbHNlIHtcbiAgICBzd2l0Y2ggKGVycm9yLnN0YXR1cykge1xuICAgICAgY2FzZSA0MDA6XG4gICAgICAgIHJldHVybiBuZXcgUHJvZHVjdEtpbmRzQmFkUmVxdWVzdChlcnJvcik7XG4gICAgICBjYXNlIDQwMzpcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9kdWN0S2luZHNBY2Nlc3NEZW5pZWQoZXJyb3IpO1xuICAgICAgY2FzZSA0MDE6XG4gICAgICAgIHJldHVybiBuZXcgUHJvZHVjdEtpbmRzQWNjZXNzRGVuaWVkKGVycm9yKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBuZXcgUHJvZHVjdEtpbmRzVW5rbm93bkVycm9yKGVycm9yKTtcbiAgICB9XG4gIH1cbn07XG4iXX0=