import { OnDestroy } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { ProductSummaryHttpService } from '@backbase/data-ang/arrangements';
import { Product } from '@backbase/product-summary-common-ang';
import { ProductKindsError } from './product-summary-error';
import * as i0 from "@angular/core";
export declare type ListParams = any;
/**
 * Service for fetching and storing accounts and properties from model.xml
 *
 * This service relies on providers from `ProductSummaryAccountSelectorWidgetModule`.
 *
 * @see ProductSummaryAccountSelectorWidgetModule
 *
 * @usageNotes
 *
 * ### Ensure the ProductSummaryAccountSelectorWidgetModule is imported to your component module
 *
 * ```ts
 * @NgModule({
 *   ...
 *   imports: [
 *     ...
 *     ProductSummaryAccountSelectorWidgetModule,
 *   ],
 * })
 * export class MyWidgetModule {}
 * ```
 *
 * ### Inject this service into your component
 *
 * ```ts
 * @Component({
 *   ...
 *   providers: [ProductSummaryService],
 * })
 *  export class MyComponent {
 * ```
 */
export declare class ProductSummaryService implements OnDestroy {
    private readonly productSummaryDataService;
    /**
     * Constructor
     *
     * @param productSummaryDataService
     */
    constructor(productSummaryDataService: ProductSummaryHttpService);
    /**
     * Used to store the error occured during loading of accounts
     */
    readonly error: BehaviorSubject<ProductKindsError | undefined>;
    private readonly listParams;
    private readonly listRefresh;
    /**
     * List of accounts fetched from the server
     */
    readonly accountsList: Observable<Product[] | undefined>;
    /**
     * Refreshes the list of accounts
     */
    refreshAccountsList(): void;
    /**
     * @internal
     */
    ngOnDestroy(): void;
    private getProductSummary;
    private extractProducts;
    private toProductKindList;
    private responseToProductList;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ProductSummaryService>;
}
