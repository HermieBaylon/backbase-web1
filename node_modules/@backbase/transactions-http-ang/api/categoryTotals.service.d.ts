import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CategoryTotalsGetResponseBody } from '../model/models';
import { TransactionsConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetCategorytotalsRequestParams {
    ["creditDebitIndicator"]: 'DBIT' | 'CRDT';
    ["periodStartDate"]: string;
    ["periodEndDate"]: string;
    ["arrangementIds"]?: Array<string>;
    ["intervalDuration"]?: 'DAY' | 'WEEK' | 'MONTH' | 'YEAR';
    ["parentCategory"]?: string;
}
export declare class CategoryTotalsHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: TransactionsConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: TransactionsConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getCategorytotals(requestParameters: GetCategorytotalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<CategoryTotalsGetResponseBody>;
    getCategorytotals(requestParameters: GetCategorytotalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<CategoryTotalsGetResponseBody>>;
    getCategorytotals(requestParameters: GetCategorytotalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<CategoryTotalsGetResponseBody>>;
    getCategorytotalsUrl(requestParameters: GetCategorytotalsRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<CategoryTotalsHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CategoryTotalsHttpService>;
}
