{"version":3,"file":"backbase-card-details-widget-ang.js","sources":["../../../../libs/card-details-widget-ang/src/components/bb-payment-card-controls/payment-card-controls.component.ts","../../../../libs/card-details-widget-ang/src/components/bb-payment-card-controls/payment-card-controls.component.html","../../../../libs/card-details-widget-ang/src/components/bb-payment-card-summary/payment-card-summary.component.ts","../../../../libs/card-details-widget-ang/src/components/bb-payment-card-summary/payment-card-summary.component.html","../../../../libs/card-details-widget-ang/src/components/bb-payment-card/payment-card.component.ts","../../../../libs/card-details-widget-ang/src/components/bb-payment-card/payment-card.component.html","../../../../libs/card-details-widget-ang/src/services/widget-properties.service.ts","../../../../libs/card-details-widget-ang/src/components/card-details-container/card-details-container.component.ts","../../../../libs/card-details-widget-ang/src/components/card-details-container/card-details-container.component.html","../../../../libs/card-details-widget-ang/src/components/card-details-widget/card-details-widget.component.ts","../../../../libs/card-details-widget-ang/src/components/card-details-widget/card-details-widget.component.html","../../../../libs/card-details-widget-ang/src/card-details-widget.module.ts","../../../../libs/card-details-widget-ang/backbase-card-details-widget-ang.ts"],"sourcesContent":["import { Component, Directive, OnInit } from '@angular/core';\nimport { PaymentCardControlsBase } from '@backbase/cards-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-card-details-payment-card-controls',\n  templateUrl: './payment-card-controls.component.html',\n})\nexport class PaymentCardControlsComponent extends PaymentCardControlsBase implements OnInit {\n  get lockStatus() {\n    return this.isLocked || false;\n  }\n\n  set lockStatus(value: boolean) {\n    if (value) {\n      this.onLock();\n    } else {\n      this.onUnlock();\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCardDetailsPaymentCardControlsCustomizable]',\n})\nexport class CardDetailsPaymentCardControlsCustomizableDirective extends BbTemplate<\n  PaymentCardControlsComponent,\n  undefined\n> {}\n","<ng-container bbCardDetailsPaymentCardControlsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardDetailsPaymentCardControlsCustomizable let-hostRef>\n  <div class=\"bb-block--lg bb-list card\" *ngIf=\"hostRef.paymentCard\">\n   \n    <ng-container *ngIf=\"hostRef.paymentCard.status === 'ACTIVE'\">\n\n      <div class=\"card-header\">\n        <h2 i18n=\"Self service heading|Heading for the Self service section@@card.selfService.heading\">\n          Self service\n        </h2>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"bb-list\">\n          <div class=\"bb-list__item bb-stack\">\n            <div class=\"bb-stack bb-stack--align-top\">\n              <bb-icon-ui \n                name=\"lock\"\n                size=\"md\"\n                class=\"bb-stack__item\"\n              ></bb-icon-ui>\n              <div class=\"bb-stack__item\">\n                <h5 class=\"bb-block--no-margin\" i18n=\"Lock or unlock card|Lock or unlock card@@card.controls.lockStatus.heading\">\n                  Lock card\n                </h5>\n                <span class=\"bb-text-support text-small\" i18n=\"Lock card description|Subtitle for lock card@@card.controls.lockStatus.description\">\n                  Freeze your card temporarily\n                </span>\n              </div>\n            </div>\n    \n            <form>\n              <bb-switch-ui\n                [id]=\"hostRef.lockStatus\"\n                *ngIf=\"!hostRef.isLockLoading\"\n                aria-label=\"lock/unlock your payment card, Freeze your card temporarily\"\n                i18n-aria-label=\"lock/unlock aria-label@@card.controls.lock.switch.aria-label\"\n                name=\"lockStatus\"\n                [(ngModel)]=\"hostRef.lockStatus\"\n              >\n              </bb-switch-ui>\n              <bb-loading-indicator-ui *ngIf=\"hostRef.isLockLoading\" loaderSize=\"sm\"></bb-loading-indicator-ui>\n            </form>\n          </div>\n    \n          <div class=\"bb-list__item bb-stack bb-payment-card-self-service-row\">\n            <div class=\"bb-stack bb-stack--align-top bb-stack__item bb-payment-card-self-service-row__description\">\n              <bb-icon-ui \n                name=\"autorenew\"\n                size=\"md\"\n                class=\"bb-stack__item\"\n              ></bb-icon-ui>\n            \n              <div class=\"bb-stack__item\">\n                <h5 class=\"bb-block--no-margin\" i18n=\"Replace card|Replace card@@card.controls.replaceCard.heading\">\n                  Replace card\n                </h5>\n                <span class=\"bb-text-support text-small\" i18n=\"Replace card description|Subtitle for replace card@@card.controls.replaceCard.description\">\n                  Replace lost, stolen or damaged cards\n                </span>\n              </div>\n            </div>\n            <div class=\"bb-stack__item bb-payment-card-self-service-row__button\">\n              <bb-payment-card-initiate-replacement\n                [paymentCard]=\"hostRef.paymentCard\"\n                [isInitiateReplacementLoading]=\"hostRef.isInitiateReplacementLoading\"\n                (initiateReplacement)=\"hostRef.onInitiateReplacement($event)\"\n              ></bb-payment-card-initiate-replacement>\n            </div>\n          </div>\n    \n          <div class=\"bb-list__item bb-stack bb-payment-card-self-service-row\">\n            <div class=\"bb-stack bb-stack--align-top bb-stack__item bb-payment-card-self-service-row__description\">\n              <bb-icon-ui \n                name=\"dialpad\"\n                size=\"md\"\n                class=\"bb-stack__item\"\n              ></bb-icon-ui>\n    \n              <div class=\"bb-stack__item\">\n                <ng-container *ngIf=\"hostRef.resetPinMode === 'RESET'\">\n                  <h5 class=\"bb-block--no-margin\" i18n=\"reset PIN|Reset PIN@@card.controls.resetPin.heading\">\n                    Reset PIN\n                  </h5>\n                  <span class=\"bb-text-support text-small\" i18n=\"Reset PIN description|Subtitle for reset PIN@@card.controls.resetPin.description\">\n                    Change your PIN online\n                  </span>\n                </ng-container>\n                <ng-container *ngIf=\"hostRef.resetPinMode === 'REQUEST'\">\n                  <h5 class=\"bb-block--no-margin\" i18n=\"Request PIN|Request PIN@@card.controls.requestPin.heading\" >\n                    Request new PIN\n                  </h5>\n                  <span class=\"bb-text-support text-small\" i18n=\"Request PIN description|Subtitle for request PIN@@card.controls.requestPin.description\">\n                    Request a new PIN by mail\n                  </span>\n                </ng-container>\n              </div>\n            </div>\n            <div class=\"bb-stack__item bb-payment-card-self-service-row__button\">\n              <bb-payment-card-reset-pin \n                [paymentCard]=\"hostRef.paymentCard\" \n                [mode]=\"hostRef.resetPinMode\"\n                [isResetPinLoading]=\"hostRef.isResetPinLoading\"\n                (resetPin)=\"hostRef.onResetPin($event)\"\n                (requestPin)=\"hostRef.onRequestPin($event)\"\n              ></bb-payment-card-reset-pin>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </ng-container>\n    \n    <ng-container *ngIf=\"hostRef.paymentCard.status === 'INACTIVE'\">\n      <div class=\"card-body\">\n        <div class=\"bb-block bb-block--lg\">\n          <h2 i18n=\"Card activation heading|Heading for the Card activation section@@card.cardActivation.heading\">\n            Card activation\n          </h2>\n          <p \n            class=\"bb-text-support\"\n            i18n=\"Activation needed|Text for activation needed@@card.controls.activate.text\"\n          >\n            In order to use this card you need to activate it first.\n          </p>\n        </div>\n        <div class=\"bb-payment-card-self-service__inactive-container\">\n          <bb-payment-card-initiate-activation\n            [paymentCard]=\"hostRef.paymentCard\"\n            [isInitiateActivationLoading]=\"hostRef.isInitiateActivationLoading\"\n            (initiateActivation)=\"hostRef.onInitiateActivation($event)\"\n          ></bb-payment-card-initiate-activation>\n        </div>\n      </div>\n      \n    </ng-container>\n  </div>\n</ng-template>\n","import { Component, Directive, Input, OnInit } from '@angular/core';\nimport {\n  PaymentCard,\n  PaymentCardDisplayState,\n  PaymentCardLockStatus,\n  PaymentCardStatus,\n} from '@backbase/cards-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-payment-card-summary',\n  templateUrl: './payment-card-summary.component.html',\n})\nexport class PaymentCardSummaryComponent implements OnInit {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCard: PaymentCard | undefined;\n\n  readonly hostRef = this;\n\n  /**\n   * Translate the payment card status/lock status/replacement status into a displayable\n   * PaymentCardDisplayState.\n   */\n  getDisplayState(): PaymentCardDisplayState | undefined {\n    if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Inactive) {\n      return 'INACTIVE';\n    }\n\n    if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Canceled) {\n      return 'CANCELLED';\n    }\n\n    if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Expired) {\n      return 'EXPIRED';\n    }\n\n    if (this.paymentCard && this.paymentCard.lockStatus === PaymentCardLockStatus.Locked) {\n      return 'LOCKED';\n    }\n\n    return undefined;\n  }\n\n  ngOnInit() {\n    if (typeof this.paymentCard === 'undefined') {\n      throw new Error(`\"paymentCard\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbCardDetailsPaymentCardSummaryCustomizable]',\n})\nexport class CardDetailsPaymentCardSummaryCustomizableDirective extends BbTemplate<\n  PaymentCardSummaryComponent,\n  undefined\n> {}\n","<ng-container bbCardDetailsPaymentCardSummaryCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardDetailsPaymentCardSummaryCustomizable let-hostRef>\n  <div class=\"bb-payment-card-summary\" *ngIf=\"hostRef.paymentCard\">\n    <div class=\"bb-block bb-block--xl\">\n      <div class=\"row\">\n        <div class=\"col-auto\">\n          <div class=\" bb-payment-card-component\">\n            <bb-payment-card-state-wrapper-ui [state]=\"hostRef.getDisplayState()\">\n              <bb-payment-card-ui [paymentCard]=\"hostRef.paymentCard\"></bb-payment-card-ui>\n            </bb-payment-card-state-wrapper-ui>\n          </div>\n        </div>\n        <div class=\"col-12 order-first col-sm order-sm-last\">\n          <div class=\"bb-block bb-block--xl\">\n            <h2 i18n=\"Card payment header|Card payment title@@card.summary.heading\">\n              {{ hostRef.paymentCard.name }} {{ hostRef.paymentCard.type | lowercase }} card\n            </h2>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"hostRef.paymentCard.replacementStatus === 'UNDER_REPLACEMENT'\">\n      <div class=\"bb-block bb-block--xl\">\n        <bb-alert-ui\n          modifier=\"warning\"\n          title=\"Card under replacement\"\n          i18n-title=\"Card under replacement title|Card under replacement title@@card.summary.underReplacement.title\"\n          message=\"New cards usually take 3-5 business days to arrive.\"\n          i18n-message=\"Card under replacement text|Card under replacement@@card.summary.underReplacement.subtitle\"\n        ></bb-alert-ui>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"hostRef.paymentCard.deliveryStatus\">\n      <bb-payment-card-delivery-status\n        [deliveryStatus]=\"hostRef.paymentCard.deliveryStatus\"\n      ></bb-payment-card-delivery-status>\n    </ng-container>\n  </div>\n</ng-template>\n","import { ChangeDetectorRef, Component, Directive, OnInit } from '@angular/core';\nimport { CardsService, PaymentCardContainerBase } from '@backbase/cards-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\ndeclare const $localize: any;\n\n@Component({\n  selector: 'bb-payment-card',\n  templateUrl: './payment-card.component.html',\n})\nexport class PaymentCardComponent extends PaymentCardContainerBase implements OnInit {\n  readonly hostRef = this;\n\n  ngOnInit() {\n    /* eslint-disable max-len */\n    const cardDetailsLocalizations = {\n      activationErrorHeader: $localize`:Error@@card.details.activation.notification.errorHeader:Error`,\n      activationErrorMessage: $localize`:Failed to Activate Card. Unable to proceed, please try again@@card.details.activation.notification.errorBody:Failed to Activate Card. Unable to proceed, please try again.`,\n      activationSuccessHeader: $localize`:Card Activated@@card.details.activation.notification.successHeader:Card Activated.`,\n      lockErrorHeader: $localize`:Error@@card.details.lock.notification.errorHeader:Error`,\n      lockErrorMessage: $localize`:Card number cannot be locked, try again later|Lock Error Message@@card.details.lock.notification.errorMessage:Card number ending with ${this.paymentCard?.number}:Card Number: cannot be locked! Try again later.`,\n      lockSuccessHeader: $localize`:Card locked@@card.details.lock.notification.successHeader:Card locked`,\n      lockSuccessMessage: $localize`:Card number locked|Successful lock message@@card.details.lock.notification.successMessage:Card number ending with ${this.paymentCard?.number}:Card Number: has been locked.`,\n      replacementErrorHeader: $localize`:Error@@card.details.replacement.notification.errorHeader:Error`,\n      replacementErrorMessage: $localize`:Can't request card replacement. Try again@@card.details.replacement.notification.errorBody:Unable to request a card replacement. Try again later.`,\n      replacementSuccessHeader: $localize`:New card ordered header@@card.details.replacement.notification.successHeader:New card ordered`,\n      replacementSuccessMessage: $localize`:New card ordered@@card.details.replacement.notification.successBody:A new card has been ordered.`,\n      requestNewPinSuccessMessage: $localize`:New PIN requested@@card.details.pin.notification.requestNewPinSuccessMessage:New PIN requested`,\n      requestPinErrorMessage: $localize`:Can't request PIN. Try again@@card.details.requestPin.notification.errorBody:Can't request PIN.  Please try again later.`,\n      resetPinSuccessMessage: $localize`:PIN successfully reset@@card.details.pin.notification.resetPinSuccessMessage:PIN successfully reset`,\n      resetPinErrorMessage: $localize`:Unable to change PIN, try again@@card.details.resetPin.notification.errorBody:Unable to change PIN.  Please try again later.`,\n      resetInvalidPinMessage: $localize`:Unable to change PIN, validations not meet@@card.details.pin.notification.resetInvalidPinMessage:Unable to change PIN. New PIN and confirm don't match`,\n      unlockErrorHeader: $localize`:Error@@card.details.unlock.notification.errorHeader:Error`,\n      unlockErrorMessage: $localize`:Card number cannot be unlocked, try again later|Unlock Error Message@@card.details.unlock.notification.errorMessage:Card number ending with ${this.paymentCard?.number}:Card Number: cannot be unlocked! Try again later.`,\n      unlockSuccessHeader: $localize`:Card unlocked@@card.details.unlock.notification.successHeader:Card unlocked`,\n      unlockSuccessMessage: $localize`:Card number unlocked|Successful unlock Error Message@@card.details.unlock.notification.successMessage:Card number ending with ${this.paymentCard?.number}:Card Number: has been unlocked.`,\n      updateLimitErrorHeader: $localize`:Update Limit Error Header@@card.details.limit.notification.errorHeader:`,\n      updateLimitErrorMessage: $localize`:Unable to change card limit@@card.details.limit.notification.errorBody:Unable to change card limit`,\n      updateLimitSuccessHeader: $localize`:Limit changed header@@card.details.limit.notification.successHeader:Limit changed`,\n      updateLimitSuccessMessage: $localize`:Card limit changed successfully@@card.details.limit.notification.changeLimitSuccessMessage:Card limit changed successfully`,\n    };\n    this.localizations = { ...cardDetailsLocalizations };\n  }\n\n  constructor(\n    protected readonly cardsService: CardsService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {\n    super(cardsService, cd, notificationService);\n  }\n}\n\n@Directive({\n  selector: '[bbCardDetailsPaymentCardCustomizable]',\n})\nexport class CardDetailsPaymentCardCustomizableDirective extends BbTemplate<PaymentCardComponent, undefined> {}\n","<ng-container bbCardDetailsPaymentCardCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardDetailsPaymentCardCustomizable let-hostRef>\n  <bb-payment-card-summary\n    [paymentCard]=\"hostRef.paymentCard\"\n  ></bb-payment-card-summary>\n\n  <bb-card-details-payment-card-controls\n    [paymentCard]=\"hostRef.paymentCard\"\n    [isLockLoading]=\"hostRef.isLockLoading\"\n    [isInitiateReplacementLoading]=\"hostRef.isInitiateReplacementLoading\"\n    [isInitiateActivationLoading]=\"hostRef.isInitiateActivationLoading\"\n    [isResetPinLoading]=\"hostRef.isResetPinLoading\"\n    (updateLockStatus)=\"hostRef.onUpdateLockStatus($event)\"\n    (initiateReplacement)=\"hostRef.onInitiateReplacement($event)\"\n    (initiateActivation)=\"hostRef.onInitiateActivation($event)\"\n    (resetPin)=\"hostRef.onResetPin($event)\"\n    (requestPin)=\"hostRef.onRequestPin($event)\"\n    *ngIf=\"hostRef.paymentCard?.status !== 'CANCELED'\"\n  ></bb-card-details-payment-card-controls>\n\n  <bb-payment-card-limits\n    [paymentCard]=\"hostRef.paymentCard\"\n    [isLimitsLoading]=\"hostRef.isLimitsLoading\"\n    *ngIf=\"hostRef.paymentCard?.status === 'ACTIVE'\"\n    (updateLimit)=\"hostRef.onUpdateLimit($event)\"\n  ></bb-payment-card-limits>\n</ng-template>","import { Injectable, Optional } from '@angular/core';\nimport { BaseWidgetPropertiesService } from '@backbase/cards-common-ang';\nimport { ItemModel } from '@backbase/foundation-ang/core';\n\n@Injectable()\nexport class WidgetPropertiesService extends BaseWidgetPropertiesService {\n  constructor(@Optional() protected readonly itemModel: ItemModel) {\n    super(itemModel);\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Input, OnInit, Optional } from '@angular/core';\nimport { CardsBackendError, CardService, filterInputParameters, PaymentCard } from '@backbase/cards-common-ang';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { WidgetPropertiesService } from '../../services/widget-properties.service';\n\n@Component({\n  selector: 'bb-card-details-container',\n  templateUrl: './card-details-container.component.html',\n  providers: [CardService, WidgetPropertiesService],\n})\nexport class CardDetailsContainerComponent implements OnInit {\n  private readonly notificationTtlSubject = new BehaviorSubject<number | undefined>(undefined);\n  private readonly updateAllLimitsSubject = new BehaviorSubject<boolean | undefined>(undefined);\n\n  /**\n   * Observable of the payment card ID this component should retrieve the card details for.\n   */\n  @Input() paymentCardId: Observable<string> | undefined;\n  /**\n   * Notification timeout timer value configuration\n   */\n  // eslint-disable-next-line\n  @Input('notificationTtl')\n  set notificationTtlValue(value: number | undefined) {\n    this.notificationTtlSubject.next(value);\n  }\n  /**\n   * Enable to send multiple limits to the API when updating values\n   */\n  @Input('updateAllLimits') set updateAllLimitsValue(value: boolean | undefined) {\n    this.updateAllLimitsSubject.next(value);\n  }\n  /**\n   * Observable of the payment card\n   */\n  paymentCard: Observable<PaymentCard | undefined> | undefined;\n  /**\n   * Information about the backend error, if it occurs.\n   */\n  errors: CardsBackendError[] | undefined;\n\n  private readonly handleError = (errorResponse: HttpErrorResponse[]) => {\n    this.errors = errorResponse;\n\n    return of(undefined);\n  };\n\n  ngOnInit() {\n    if (typeof this.paymentCardId === 'undefined') {\n      throw new Error(`\"paymentCardId\" input is required in \"${this.constructor.name}\"`);\n    }\n\n    this.cardService.getPaymentCardFrom(this.paymentCardId);\n\n    this.paymentCard = this.cardService.getPaymentCard().pipe(\n      tap(() => {\n        this.cd.markForCheck();\n      }),\n      catchError(this.handleError),\n    );\n  }\n\n  get notificationTtl(): Observable<number> {\n    return filterInputParameters(this.notificationTtlSubject, this.widgetPropertiesService.notificationTtl);\n  }\n\n  get updateAllLimits(): Observable<boolean> {\n    return filterInputParameters(this.updateAllLimitsSubject, this.widgetPropertiesService.updateAllLimits);\n  }\n\n  constructor(\n    private readonly cardService: CardService,\n    private readonly cd: ChangeDetectorRef,\n    @Optional() private readonly widgetPropertiesService: WidgetPropertiesService,\n  ) {}\n}\n","<ng-container *ngIf=\"paymentCardId | async; else emptyState\">\n  <ng-container *ngIf=\"!errors; else errorState\">\n    <ng-container *ngIf=\"paymentCard | async as paymentCard; else loadingState\">\n      <bb-payment-card \n        [paymentCard]=\"paymentCard\" \n        [notificationTtl]=\"(notificationTtl | async) || undefined\"\n        [updateAllLimits]=\"(updateAllLimits | async) || undefined\"\n      ></bb-payment-card>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyState>\n  <bb-empty-state-ui title=\"No Card Selected\"></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <bb-payment-card-multiple-error-state [errors]=\"errors\"></bb-payment-card-multiple-error-state>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-card-details-widget',\n  templateUrl: './card-details-widget.component.html',\n})\nexport class CardDetailsWidgetComponent {\n  /**\n   * Notification timeout timer value configuration\n   */\n  @Input() notificationTtl?: number;\n\n  /**\n   * Enable to send multiple limits to the API when updating values\n   */\n  @Input() updateAllLimits?: boolean;\n\n  readonly paymentCardId = this.getRouteParam(this.route, 'selectedCard').pipe(\n    map((selectedCard) => selectedCard as string),\n  );\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // Ensure that level that has actual value keeps it from being cleared.\n    return combineLatest(paramValue, this.getRouteParam(route.parent, param)).pipe(\n      map((params) => params[0] || params[1]),\n    );\n  }\n  constructor(private readonly route: ActivatedRoute) {}\n}\n","<bb-card-details-container \n  [paymentCardId]=\"paymentCardId\"\n  [notificationTtl]=\"notificationTtl\"\n  [updateAllLimits]=\"updateAllLimits\"\n></bb-card-details-container>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CardsCommonModule } from '@backbase/cards-common-ang';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { PaymentCardModule } from '@backbase/ui-ang/payment-card';\nimport { SwitchModule } from '@backbase/ui-ang/switch';\nimport {\n  CardDetailsPaymentCardControlsCustomizableDirective,\n  PaymentCardControlsComponent,\n} from './components/bb-payment-card-controls/payment-card-controls.component';\nimport {\n  CardDetailsPaymentCardSummaryCustomizableDirective,\n  PaymentCardSummaryComponent,\n} from './components/bb-payment-card-summary/payment-card-summary.component';\nimport {\n  CardDetailsPaymentCardCustomizableDirective,\n  PaymentCardComponent,\n} from './components/bb-payment-card/payment-card.component';\nimport { CardDetailsContainerComponent } from './components/card-details-container/card-details-container.component';\nimport { CardDetailsWidgetComponent } from './components/card-details-widget/card-details-widget.component';\n\nconst modules = [\n  CardsCommonModule,\n  SwitchModule,\n  LoadingIndicatorModule,\n  EmptyStateModule,\n  PaymentCardModule,\n  AlertModule,\n];\n\nconst components = [\n  CardDetailsWidgetComponent,\n  CardDetailsContainerComponent,\n  PaymentCardComponent,\n  PaymentCardSummaryComponent,\n  PaymentCardControlsComponent,\n];\n\nconst customizables = [\n  CardDetailsPaymentCardCustomizableDirective,\n  CardDetailsPaymentCardControlsCustomizableDirective,\n  CardDetailsPaymentCardSummaryCustomizableDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { CardDetailsWidgetComponent },\n    }),\n    ...modules,\n  ],\n  declarations: [...components, ...customizables],\n  exports: [...modules, ...components, ...customizables],\n})\nexport class CardDetailsWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}