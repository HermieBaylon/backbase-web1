import { Component, Directive, Input } from '@angular/core';
import { PaymentCardLockStatus, PaymentCardStatus, } from '@backbase/cards-common-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/cards-common-ang";
import * as i2 from "@backbase/ui-ang/payment-card";
import * as i3 from "@backbase/ui-ang/alert";
import * as i4 from "@angular/common";
export class PaymentCardSummaryComponent {
    constructor() {
        this.hostRef = this;
    }
    /**
     * Translate the payment card status/lock status/replacement status into a displayable
     * PaymentCardDisplayState.
     */
    getDisplayState() {
        if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Inactive) {
            return 'INACTIVE';
        }
        if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Canceled) {
            return 'CANCELLED';
        }
        if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Expired) {
            return 'EXPIRED';
        }
        if (this.paymentCard && this.paymentCard.lockStatus === PaymentCardLockStatus.Locked) {
            return 'LOCKED';
        }
        return undefined;
    }
    ngOnInit() {
        if (typeof this.paymentCard === 'undefined') {
            throw new Error(`"paymentCard" input is required in "${this.constructor.name}"`);
        }
    }
}
PaymentCardSummaryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardSummaryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PaymentCardSummaryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentCardSummaryComponent, selector: "bb-payment-card-summary", inputs: { paymentCard: "paymentCard" }, ngImport: i0, template: "<ng-container bbCardDetailsPaymentCardSummaryCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbCardDetailsPaymentCardSummaryCustomizable let-hostRef>\n  <div class=\"bb-payment-card-summary\" *ngIf=\"hostRef.paymentCard\">\n    <div class=\"bb-block bb-block--xl\">\n      <div class=\"row\">\n        <div class=\"col-auto\">\n          <div class=\" bb-payment-card-component\">\n            <bb-payment-card-state-wrapper-ui [state]=\"hostRef.getDisplayState()\">\n              <bb-payment-card-ui [paymentCard]=\"hostRef.paymentCard\"></bb-payment-card-ui>\n            </bb-payment-card-state-wrapper-ui>\n          </div>\n        </div>\n        <div class=\"col-12 order-first col-sm order-sm-last\">\n          <div class=\"bb-block bb-block--xl\">\n            <h2 i18n=\"Card payment header|Card payment title@@card.summary.heading\">\n              {{ hostRef.paymentCard.name }} {{ hostRef.paymentCard.type | lowercase }} card\n            </h2>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"hostRef.paymentCard.replacementStatus === 'UNDER_REPLACEMENT'\">\n      <div class=\"bb-block bb-block--xl\">\n        <bb-alert-ui\n          modifier=\"warning\"\n          title=\"Card under replacement\"\n          i18n-title=\"Card under replacement title|Card under replacement title@@card.summary.underReplacement.title\"\n          message=\"New cards usually take 3-5 business days to arrive.\"\n          i18n-message=\"Card under replacement text|Card under replacement@@card.summary.underReplacement.subtitle\"\n        ></bb-alert-ui>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"hostRef.paymentCard.deliveryStatus\">\n      <bb-payment-card-delivery-status\n        [deliveryStatus]=\"hostRef.paymentCard.deliveryStatus\"\n      ></bb-payment-card-delivery-status>\n    </ng-container>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.PaymentCardStateWrapperComponent; }), selector: "bb-payment-card-state-wrapper,bb-payment-card-state-wrapper-ui", inputs: ["state"] }, { type: i0.forwardRef(function () { return i2.PaymentCardComponent; }), selector: "bb-payment-card-ui", inputs: ["paymentCard", "paymentCardNumberFormat"] }, { type: i0.forwardRef(function () { return i3.AlertComponent; }), selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i1.PaymentCardDeliveryStatusComponent; }), selector: "bb-payment-card-delivery-status", inputs: ["deliveryStatus"] }], directives: [{ type: i0.forwardRef(function () { return CardDetailsPaymentCardSummaryCustomizableDirective; }), selector: "[bbCardDetailsPaymentCardSummaryCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "lowercase": i0.forwardRef(function () { return i4.LowerCasePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentCardSummaryComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payment-card-summary',
                    templateUrl: './payment-card-summary.component.html',
                }]
        }], propDecorators: { paymentCard: [{
                type: Input
            }] } });
export class CardDetailsPaymentCardSummaryCustomizableDirective extends BbTemplate {
}
CardDetailsPaymentCardSummaryCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardDetailsPaymentCardSummaryCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
CardDetailsPaymentCardSummaryCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: CardDetailsPaymentCardSummaryCustomizableDirective, selector: "[bbCardDetailsPaymentCardSummaryCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardDetailsPaymentCardSummaryCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbCardDetailsPaymentCardSummaryCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1jYXJkLXN1bW1hcnkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jYXJkLWRldGFpbHMtd2lkZ2V0LWFuZy9zcmMvY29tcG9uZW50cy9iYi1wYXltZW50LWNhcmQtc3VtbWFyeS9wYXltZW50LWNhcmQtc3VtbWFyeS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NhcmQtZGV0YWlscy13aWRnZXQtYW5nL3NyYy9jb21wb25lbnRzL2JiLXBheW1lbnQtY2FyZC1zdW1tYXJ5L3BheW1lbnQtY2FyZC1zdW1tYXJ5LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBR0wscUJBQXFCLEVBQ3JCLGlCQUFpQixHQUNsQixNQUFNLDRCQUE0QixDQUFDO0FBQ3BDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7Ozs7O0FBTTNELE1BQU0sT0FBTywyQkFBMkI7SUFKeEM7UUFVVyxZQUFPLEdBQUcsSUFBSSxDQUFDO0tBK0J6QjtJQTdCQzs7O09BR0c7SUFDSCxlQUFlO1FBQ2IsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxLQUFLLGlCQUFpQixDQUFDLFFBQVEsRUFBRTtZQUM5RSxPQUFPLFVBQVUsQ0FBQztTQUNuQjtRQUVELElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sS0FBSyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUU7WUFDOUUsT0FBTyxXQUFXLENBQUM7U0FDcEI7UUFFRCxJQUFJLElBQUksQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEtBQUssaUJBQWlCLENBQUMsT0FBTyxFQUFFO1lBQzdFLE9BQU8sU0FBUyxDQUFDO1NBQ2xCO1FBRUQsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxLQUFLLHFCQUFxQixDQUFDLE1BQU0sRUFBRTtZQUNwRixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUVELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxPQUFPLElBQUksQ0FBQyxXQUFXLEtBQUssV0FBVyxFQUFFO1lBQzNDLE1BQU0sSUFBSSxLQUFLLENBQUMsdUNBQXVDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztTQUNsRjtJQUNILENBQUM7O3lIQXBDVSwyQkFBMkI7NkdBQTNCLDJCQUEyQix1R0NieEMsODNEQTBDQSxzdUJEYWEsa0RBQWtEOzRGQTFDbEQsMkJBQTJCO2tCQUp2QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFdBQVcsRUFBRSx1Q0FBdUM7aUJBQ3JEOzhCQUtVLFdBQVc7c0JBQW5CLEtBQUs7O0FBc0NSLE1BQU0sT0FBTyxrREFBbUQsU0FBUSxVQUd2RTs7Z0pBSFksa0RBQWtEO29JQUFsRCxrREFBa0Q7NEZBQWxELGtEQUFrRDtrQkFIOUQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsK0NBQStDO2lCQUMxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRGlyZWN0aXZlLCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBQYXltZW50Q2FyZCxcbiAgUGF5bWVudENhcmREaXNwbGF5U3RhdGUsXG4gIFBheW1lbnRDYXJkTG9ja1N0YXR1cyxcbiAgUGF5bWVudENhcmRTdGF0dXMsXG59IGZyb20gJ0BiYWNrYmFzZS9jYXJkcy1jb21tb24tYW5nJztcbmltcG9ydCB7IEJiVGVtcGxhdGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLXBheW1lbnQtY2FyZC1zdW1tYXJ5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BheW1lbnQtY2FyZC1zdW1tYXJ5LmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgUGF5bWVudENhcmRTdW1tYXJ5Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIFBheW1lbnQgY2FyZCB0byBiZSBkaXNwbGF5ZWQuXG4gICAqL1xuICBASW5wdXQoKSBwYXltZW50Q2FyZDogUGF5bWVudENhcmQgfCB1bmRlZmluZWQ7XG5cbiAgcmVhZG9ubHkgaG9zdFJlZiA9IHRoaXM7XG5cbiAgLyoqXG4gICAqIFRyYW5zbGF0ZSB0aGUgcGF5bWVudCBjYXJkIHN0YXR1cy9sb2NrIHN0YXR1cy9yZXBsYWNlbWVudCBzdGF0dXMgaW50byBhIGRpc3BsYXlhYmxlXG4gICAqIFBheW1lbnRDYXJkRGlzcGxheVN0YXRlLlxuICAgKi9cbiAgZ2V0RGlzcGxheVN0YXRlKCk6IFBheW1lbnRDYXJkRGlzcGxheVN0YXRlIHwgdW5kZWZpbmVkIHtcbiAgICBpZiAodGhpcy5wYXltZW50Q2FyZCAmJiB0aGlzLnBheW1lbnRDYXJkLnN0YXR1cyA9PT0gUGF5bWVudENhcmRTdGF0dXMuSW5hY3RpdmUpIHtcbiAgICAgIHJldHVybiAnSU5BQ1RJVkUnO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnBheW1lbnRDYXJkICYmIHRoaXMucGF5bWVudENhcmQuc3RhdHVzID09PSBQYXltZW50Q2FyZFN0YXR1cy5DYW5jZWxlZCkge1xuICAgICAgcmV0dXJuICdDQU5DRUxMRUQnO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnBheW1lbnRDYXJkICYmIHRoaXMucGF5bWVudENhcmQuc3RhdHVzID09PSBQYXltZW50Q2FyZFN0YXR1cy5FeHBpcmVkKSB7XG4gICAgICByZXR1cm4gJ0VYUElSRUQnO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnBheW1lbnRDYXJkICYmIHRoaXMucGF5bWVudENhcmQubG9ja1N0YXR1cyA9PT0gUGF5bWVudENhcmRMb2NrU3RhdHVzLkxvY2tlZCkge1xuICAgICAgcmV0dXJuICdMT0NLRUQnO1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMucGF5bWVudENhcmQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFwicGF5bWVudENhcmRcIiBpbnB1dCBpcyByZXF1aXJlZCBpbiBcIiR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfVwiYCk7XG4gICAgfVxuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYkNhcmREZXRhaWxzUGF5bWVudENhcmRTdW1tYXJ5Q3VzdG9taXphYmxlXScsXG59KVxuZXhwb3J0IGNsYXNzIENhcmREZXRhaWxzUGF5bWVudENhcmRTdW1tYXJ5Q3VzdG9taXphYmxlRGlyZWN0aXZlIGV4dGVuZHMgQmJUZW1wbGF0ZTxcbiAgUGF5bWVudENhcmRTdW1tYXJ5Q29tcG9uZW50LFxuICB1bmRlZmluZWRcbj4ge31cbiIsIjxuZy1jb250YWluZXIgYmJDYXJkRGV0YWlsc1BheW1lbnRDYXJkU3VtbWFyeUN1c3RvbWl6YWJsZSBbYmJIb3N0UmVmXT1cImhvc3RSZWZcIj48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlIGJiQ2FyZERldGFpbHNQYXltZW50Q2FyZFN1bW1hcnlDdXN0b21pemFibGUgbGV0LWhvc3RSZWY+XG4gIDxkaXYgY2xhc3M9XCJiYi1wYXltZW50LWNhcmQtc3VtbWFyeVwiICpuZ0lmPVwiaG9zdFJlZi5wYXltZW50Q2FyZFwiPlxuICAgIDxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0teGxcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1hdXRvXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIiBiYi1wYXltZW50LWNhcmQtY29tcG9uZW50XCI+XG4gICAgICAgICAgICA8YmItcGF5bWVudC1jYXJkLXN0YXRlLXdyYXBwZXItdWkgW3N0YXRlXT1cImhvc3RSZWYuZ2V0RGlzcGxheVN0YXRlKClcIj5cbiAgICAgICAgICAgICAgPGJiLXBheW1lbnQtY2FyZC11aSBbcGF5bWVudENhcmRdPVwiaG9zdFJlZi5wYXltZW50Q2FyZFwiPjwvYmItcGF5bWVudC1jYXJkLXVpPlxuICAgICAgICAgICAgPC9iYi1wYXltZW50LWNhcmQtc3RhdGUtd3JhcHBlci11aT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTIgb3JkZXItZmlyc3QgY29sLXNtIG9yZGVyLXNtLWxhc3RcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLXhsXCI+XG4gICAgICAgICAgICA8aDIgaTE4bj1cIkNhcmQgcGF5bWVudCBoZWFkZXJ8Q2FyZCBwYXltZW50IHRpdGxlQEBjYXJkLnN1bW1hcnkuaGVhZGluZ1wiPlxuICAgICAgICAgICAgICB7eyBob3N0UmVmLnBheW1lbnRDYXJkLm5hbWUgfX0ge3sgaG9zdFJlZi5wYXltZW50Q2FyZC50eXBlIHwgbG93ZXJjYXNlIH19IGNhcmRcbiAgICAgICAgICAgIDwvaDI+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaG9zdFJlZi5wYXltZW50Q2FyZC5yZXBsYWNlbWVudFN0YXR1cyA9PT0gJ1VOREVSX1JFUExBQ0VNRU5UJ1wiPlxuICAgICAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS14bFwiPlxuICAgICAgICA8YmItYWxlcnQtdWlcbiAgICAgICAgICBtb2RpZmllcj1cIndhcm5pbmdcIlxuICAgICAgICAgIHRpdGxlPVwiQ2FyZCB1bmRlciByZXBsYWNlbWVudFwiXG4gICAgICAgICAgaTE4bi10aXRsZT1cIkNhcmQgdW5kZXIgcmVwbGFjZW1lbnQgdGl0bGV8Q2FyZCB1bmRlciByZXBsYWNlbWVudCB0aXRsZUBAY2FyZC5zdW1tYXJ5LnVuZGVyUmVwbGFjZW1lbnQudGl0bGVcIlxuICAgICAgICAgIG1lc3NhZ2U9XCJOZXcgY2FyZHMgdXN1YWxseSB0YWtlIDMtNSBidXNpbmVzcyBkYXlzIHRvIGFycml2ZS5cIlxuICAgICAgICAgIGkxOG4tbWVzc2FnZT1cIkNhcmQgdW5kZXIgcmVwbGFjZW1lbnQgdGV4dHxDYXJkIHVuZGVyIHJlcGxhY2VtZW50QEBjYXJkLnN1bW1hcnkudW5kZXJSZXBsYWNlbWVudC5zdWJ0aXRsZVwiXG4gICAgICAgID48L2JiLWFsZXJ0LXVpPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaG9zdFJlZi5wYXltZW50Q2FyZC5kZWxpdmVyeVN0YXR1c1wiPlxuICAgICAgPGJiLXBheW1lbnQtY2FyZC1kZWxpdmVyeS1zdGF0dXNcbiAgICAgICAgW2RlbGl2ZXJ5U3RhdHVzXT1cImhvc3RSZWYucGF5bWVudENhcmQuZGVsaXZlcnlTdGF0dXNcIlxuICAgICAgPjwvYmItcGF5bWVudC1jYXJkLWRlbGl2ZXJ5LXN0YXR1cz5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuIl19