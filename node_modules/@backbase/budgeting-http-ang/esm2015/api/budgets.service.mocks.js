import { createMocks } from '@backbase/foundation-ang/data-http';
export const BudgetsHttpServiceDeleteIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/budgets/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const BudgetsHttpServiceGetBudgetsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/budgets",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "1955e686-d31e-4216-b3dd-5d66161d536d",
                        "categoryName": "Groceries",
                        "budgetName": "Groceries",
                        "budgetIcon": "groceries",
                        "spendingLimit": {
                            "amount": "350.00",
                            "currencyCode": "EUR"
                        },
                        "frequency": "MONTHLY",
                        "spent": {
                            "amount": "550.00",
                            "currencyCode": "EUR"
                        },
                        "spentPercentage": 100,
                        "available": {
                            "amount": "200.00",
                            "currencyCode": "EUR"
                        },
                        "period": {
                            "startDate": "2017-06-01",
                            "endDate": "2017-06-17"
                        }
                    }, {
                        "id": "2955e686-d31e-4216-b3dd-5d66161d536d",
                        "categoryName": "Home",
                        "budgetName": "Home",
                        "budgetIcon": "home",
                        "spendingLimit": {
                            "amount": "700.00",
                            "currencyCode": "EUR"
                        },
                        "frequency": "MONTHLY",
                        "spent": {
                            "amount": "550.00",
                            "currencyCode": "EUR"
                        },
                        "spentPercentage": 80,
                        "available": {
                            "amount": "150.00",
                            "currencyCode": "EUR"
                        },
                        "period": {
                            "startDate": "2017-06-01"
                        }
                    }, {
                        "id": "4955e686-d31e-4216-b3dd-5d66161d536d",
                        "categoryName": "Shopping",
                        "budgetName": "Shopping",
                        "budgetIcon": "shopping",
                        "spendingLimit": {
                            "amount": "800.00",
                            "currencyCode": "EUR"
                        },
                        "frequency": "MONTHLY",
                        "spent": {
                            "amount": "270.00",
                            "currencyCode": "EUR"
                        },
                        "spentPercentage": 30,
                        "available": {
                            "amount": "530.00",
                            "currencyCode": "EUR"
                        },
                        "period": {
                            "startDate": "2017-06-01"
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const BudgetsHttpServicePostBudgetsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/budgets",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d77161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const BudgetsHttpServicePutIdMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/budgets/{id}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const BudgetsHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/budgets/{id}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/budgets",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "1955e686-d31e-4216-b3dd-5d66161d536d",
                        "categoryName": "Groceries",
                        "budgetName": "Groceries",
                        "budgetIcon": "groceries",
                        "spendingLimit": {
                            "amount": "350.00",
                            "currencyCode": "EUR"
                        },
                        "frequency": "MONTHLY",
                        "spent": {
                            "amount": "550.00",
                            "currencyCode": "EUR"
                        },
                        "spentPercentage": 100,
                        "available": {
                            "amount": "200.00",
                            "currencyCode": "EUR"
                        },
                        "period": {
                            "startDate": "2017-06-01",
                            "endDate": "2017-06-17"
                        }
                    }, {
                        "id": "2955e686-d31e-4216-b3dd-5d66161d536d",
                        "categoryName": "Home",
                        "budgetName": "Home",
                        "budgetIcon": "home",
                        "spendingLimit": {
                            "amount": "700.00",
                            "currencyCode": "EUR"
                        },
                        "frequency": "MONTHLY",
                        "spent": {
                            "amount": "550.00",
                            "currencyCode": "EUR"
                        },
                        "spentPercentage": 80,
                        "available": {
                            "amount": "150.00",
                            "currencyCode": "EUR"
                        },
                        "period": {
                            "startDate": "2017-06-01"
                        }
                    }, {
                        "id": "4955e686-d31e-4216-b3dd-5d66161d536d",
                        "categoryName": "Shopping",
                        "budgetName": "Shopping",
                        "budgetIcon": "shopping",
                        "spendingLimit": {
                            "amount": "800.00",
                            "currencyCode": "EUR"
                        },
                        "frequency": "MONTHLY",
                        "spent": {
                            "amount": "270.00",
                            "currencyCode": "EUR"
                        },
                        "spentPercentage": 30,
                        "available": {
                            "amount": "530.00",
                            "currencyCode": "EUR"
                        },
                        "period": {
                            "startDate": "2017-06-01"
                        }
                    }]
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/budgets",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d77161d536d"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/budgets/{id}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,