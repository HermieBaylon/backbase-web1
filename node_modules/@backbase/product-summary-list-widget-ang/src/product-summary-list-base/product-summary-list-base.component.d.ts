import { OnDestroy, EventEmitter } from '@angular/core';
import { ProductKindsError } from '../product-summary-error';
import { BehaviorSubject, Observable } from 'rxjs';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { ProductsExternalInfoService, Product } from '@backbase/product-summary-common-ang';
import { Pubsub } from '@backbase/foundation-ang/web-sdk';
import { ProductKinds, ProductSummaryBaseService } from '../product-summary-base.service';
import * as i0 from "@angular/core";
/**
 * A widget for displaying a list of accounts
 *
 * @usageNotes
 *
 * ### Include this widget in your `AppModule`:
 *
 * ```typescript
 * @NgModule({
 *   imports: [
 *     ProductSummaryListWidgetModule,
 *   ],
 *   ...
 * })
 * export class AppModule {}
 * ```
 *
 * ### Include this widget (standalone model)
 *
 * ```typescript
 * export const environment: Environment = {
 *   ...
 *   bootstrap: {
 *     pageModel: {
 *       name: 'root',
 *       properties: {},
 *       children: [
 *         {
 *           name: 'product-summary-account-details-widget-ang',
 *           properties: {
 *            classId: 'ProductSummaryListWidgetComponent',
 *            showIcons: true,
 *           },
 *         },
 *       ],
 *     },
 *   },
 * };
 * ```
 */
export declare class ProductSummaryListBaseComponent implements OnDestroy {
    protected readonly service: ProductSummaryBaseService;
    protected readonly productsExternalInfoService: ProductsExternalInfoService;
    protected readonly eventBusService: Pubsub;
    /**
     * @internal
     */
    readonly hostRef: ProductSummaryListBaseComponent;
    /**
     * If the fetching of the product kinds failed, this property
     * holds the errors coming from the server
     */
    readonly error: Observable<ProductKindsError | undefined>;
    /**
     * Product kinds fetched from the server
     */
    readonly items: Observable<ProductKinds | undefined>;
    /**
     * Defines the loading state during the loading of data.
     */
    readonly isLoading: Observable<boolean>;
    private readonly widgetPropertiesSubscription;
    /**
     * Indicates whether the product kind card is expanded or collapsed.
     */
    readonly isExpanded: {
        [key: string]: boolean;
    };
    /**
     * Defines whether to show product kind icons.
     */
    readonly showIcons: BehaviorSubject<boolean>;
    set showIconsValue(value: boolean);
    /**
     * Comma separated list of event names to subscribe to perform accounts refresh
     */
    set refreshAccountListEvent(value: string);
    /**
     * Output emits id from selected account as string
     */
    selectedAccount: EventEmitter<string>;
    /**
     * Output emits selected product
     */
    selectProduct: EventEmitter<Product>;
    private refreshAccountsEventNames;
    private refreshAccountsHandler;
    /**
     * Joins the specified error messages to display on the template
     *
     * @param messages
     */
    processErrorMessages: (messages: string[] | undefined) => string | undefined;
    private getProductsFromProductKinds;
    private addProductsToProductKinds;
    /**
     * Constructor
     *
     * @param service
     * @param productsExternalInfoService
     * @param eventBusService
     */
    constructor(service: ProductSummaryBaseService, productsExternalInfoService: ProductsExternalInfoService, eventBusService: Pubsub);
    /**
     * @internal
     */
    ngOnDestroy(): void;
    /**
     * Emit the passed `id` to the `selectedAccount` output
     *
     * @param id
     */
    selectAccount(id: string): void;
    /**
     * Refreshes list of accounts
     */
    refreshAccounts(): void;
    /**
     * Subscribes or Unsubscribes on the passed eventNames.
     *
     * @param eventNames list of events.
     * @param listener PubsubListener to be invoced on the events.
     * @param subscribe defines whether the function subscribes or unsubscribes (default: true).
     */
    private handleEvents;
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListBaseComponent, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListBaseComponent, never, never, { "showIconsValue": "showIcons"; "refreshAccountListEvent": "event.refreshAccountsList"; }, { "selectedAccount": "selectedAccount"; "selectProduct": "selectProduct"; }, never>;
}
/**
 * This is an extension slot to be used for customizing the entire view
 *
 * @usageNotes
 *
 * ### Customize the entire view
 *
 * ```html
 * <ng-template
 *   bbProductSummaryCustomizable
 *   let-hostRef
 *   let-items="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryCustomizableDirective, "[bbProductSummaryCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing the header of the view
 *
 * @usageNotes
 *
 * ### Customize the header
 *
 * ```html
 * <ng-template
 *   bbProductSummaryHeaderCustomizable
 *   let-hostRef
 *   let-items="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryHeaderCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryHeaderCustomizableDirective, "[bbProductSummaryHeaderCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing the body of the view
 *
 * @usageNotes
 *
 * ### Customize the body
 *
 * ```html
 * <ng-template
 *   bbProductSummaryBodyCustomizable
 *   let-hostRef
 *   let-items="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryBodyCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryBodyCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryBodyCustomizableDirective, "[bbProductSummaryBodyCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing every item in the list
 *
 * @usageNotes
 *
 * ### Customize items
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemCustomizableDirective, "[bbProductSummaryListItemCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing items with the `currentAccounts` productKind
 *
 * @usageNotes
 *
 * ### Customize `Current Accounts`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemCurrentAccountCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemCurrentAccountCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemCurrentAccountCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemCurrentAccountCustomizableDirective, "[bbProductSummaryListItemCurrentAccountCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing items with the `savingsAccounts` productKind
 *
 * @usageNotes
 *
 * ### Customize `Savings Accounts`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemSavingsAccountCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemSavingsAccountCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemSavingsAccountCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemSavingsAccountCustomizableDirective, "[bbProductSummaryListItemSavingsAccountCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing items with the `termDeposits` productKind
 *
 * @usageNotes
 *
 * ### Customize `Term Deposits`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemTermDepositCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemTermDepositCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemTermDepositCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemTermDepositCustomizableDirective, "[bbProductSummaryListItemTermDepositCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing items with the `loans` productKind
 *
 * @usageNotes
 *
 * ### Customize `Loans`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemLoanCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemLoanCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemLoanCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemLoanCustomizableDirective, "[bbProductSummaryListItemLoanCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing items with the `creditCards` productKind
 *
 * @usageNotes
 *
 * ### Customize `Credit Cards`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemCreditCardCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemCreditCardCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemCreditCardCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemCreditCardCustomizableDirective, "[bbProductSummaryListItemCreditCardCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing items with the `debitCards` productKind
 *
 * @usageNotes
 *
 * ### Customize `Debit Cards`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemDebitCardCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemDebitCardCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemDebitCardCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemDebitCardCustomizableDirective, "[bbProductSummaryListItemDebitCardCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing items with the `investmentAccounts` productKind
 *
 * @usageNotes
 *
 * ### Customize `Investment Accounts`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemInvestmentAccountCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemInvestmentAccountCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemInvestmentAccountCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemInvestmentAccountCustomizableDirective, "[bbProductSummaryListItemInvestmentAccountCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing items with a custom (default) productKind
 *
 * @usageNotes
 *
 * ### Customize custom product kinds
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemOtherProductKindsCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListItemOtherProductKindsCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListItemOtherProductKindsCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListItemOtherProductKindsCustomizableDirective, "[bbProductSummaryListItemOtherProductKindsCustomizable]", never, {}, {}, never>;
}
/**
 * This is an extension slot to be used for customizing the loading view
 *
 * @usageNotes
 *
 * ### Customize the loading view
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListLoadingCustomizable
 *   let-hostRef>
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export declare class ProductSummaryListLoadingCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ProductSummaryListLoadingCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ProductSummaryListLoadingCustomizableDirective, "[bbProductSummaryListLoadingCustomizable]", never, {}, {}, never>;
}
