{"version":3,"file":"backbase-product-summary-list-widget-ang.js","sources":["../../../../libs/product-summary-list-widget-ang/src/product-summary-error.ts","../../../../libs/product-summary-list-widget-ang/src/product-summary-base.service.ts","../../../../libs/product-summary-list-widget-ang/src/product-summary.service.ts","../../../../libs/product-summary-list-widget-ang/src/model/constants.ts","../../../../libs/product-summary-list-widget-ang/src/product-summary-list-base/product-summary-list-base.component.ts","../../../../libs/product-summary-list-widget-ang/src/product-summary-list/product-summary-list-widget.component.ts","../../../../libs/product-summary-list-widget-ang/src/product-summary-list/product-summary-list-widget.component.html","../../../../libs/product-summary-list-widget-ang/src/arrangements.service.ts","../../../../libs/product-summary-list-widget-ang/src/arrangements-list/arrangements-list-widget.component.ts","../../../../libs/product-summary-list-widget-ang/src/arrangements-list/arrangements-list-widget.component.html","../../../../libs/product-summary-list-widget-ang/src/product-summary-list-widget.module.ts","../../../../libs/product-summary-list-widget-ang/backbase-product-summary-list-widget-ang.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\n\nexport class ProductKindsAccessDenied {\n  messages: string[];\n  kind: 'ProductKindsAccessDenied' = 'ProductKindsAccessDenied';\n  constructor(readonly response: HttpErrorResponse) {\n    this.messages = ((response.error || {}).errors || []).map((e: any) => e.message);\n  }\n}\n\nexport class ProductKindsBadRequest {\n  messages: string[];\n  kind: 'ProductKindsBadRequest' = 'ProductKindsBadRequest';\n  constructor(readonly response: HttpErrorResponse) {\n    this.messages = ((response.error || {}).errors || []).map((e: any) => e.message);\n  }\n}\n\nexport class ProductKindsUnknownError {\n  messages: string[];\n  kind: 'ProductKindsUnknownError' = 'ProductKindsUnknownError';\n  constructor(readonly response: HttpErrorResponse) {\n    this.messages = [response.message];\n  }\n}\nexport type ProductKindsError = ProductKindsAccessDenied | ProductKindsBadRequest | ProductKindsUnknownError;\n\nexport const parseError = (error: HttpErrorResponse): ProductKindsError => {\n  if (error.error instanceof ErrorEvent) {\n    return new ProductKindsUnknownError(error);\n  } else {\n    switch (error.status) {\n      case 400:\n        return new ProductKindsBadRequest(error);\n      case 401:\n        return new ProductKindsAccessDenied(error);\n      case 403:\n        return new ProductKindsAccessDenied(error);\n      default:\n        return new ProductKindsUnknownError(error);\n    }\n  }\n};\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GetProductSummaryRequestParams } from '@backbase/arrangement-manager-http-ang';\nimport { AdditionalProperties } from '@backbase/product-summary-common-ang';\n\nimport { ProductKindsError } from './product-summary-error';\nimport { ProductKind, TotalBalance } from './product-summary.service';\n\nexport interface ProductKinds extends AdditionalProperties {\n  total?: TotalBalance;\n  productKinds: Array<ProductKind>;\n}\n\n/**\n * Service for fetching and storing product kinds\n *\n * This service relies on providers from `ProductSummaryListWidgetModule`.\n *\n * @see ProductSummaryListWidgetModule\n *\n * @usageNotes\n *\n * ### Ensure the ProductSummaryListWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ProductSummaryListWidgetModule,\n *   ],\n * })\n * export class MyWidgetModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ProductSummaryService],\n * })\n *  export class MyComponent {\n * ```\n */\n@Injectable()\nexport abstract class ProductSummaryBaseService implements OnDestroy {\n  protected readonly listParams = new BehaviorSubject<GetProductSummaryRequestParams>({});\n  protected productKindsRefresh = new BehaviorSubject<boolean>(false);\n  /**\n   * Used to store the error occured during loading of accounts\n   */\n  readonly error = new BehaviorSubject<ProductKindsError | undefined>(undefined);\n  /**\n   * List of accounts fetched from the server\n   */\n  readonly isLoading = new BehaviorSubject<boolean>(false);\n  /**\n   * List of product kinds (accounts) fetched from the server\n   */\n  abstract readonly productKinds: Observable<ProductKinds | undefined>;\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this.error.complete();\n    this.productKindsRefresh.complete();\n  }\n\n  /**\n   * Refreshes the list of product kinds\n   * Causes refetching data\n   */\n  refreshProductKinds() {\n    this.productKindsRefresh.next(true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { catchError, distinctUntilChanged, map, tap } from 'rxjs/operators';\nimport {\n  BaseProduct,\n  CreditCardProductKinds,\n  CurrentAccountProductKinds,\n  CustomProductKind,\n  DebitCardProductKinds,\n  InvestmentAccountProductKinds,\n  LoanProductKinds,\n  ProductSummary,\n  SavingsAccountProductKinds,\n  SummaryAggregatedBalance,\n  TermDepositProductKinds,\n  ProductSummaryHttpService,\n} from '@backbase/arrangement-manager-http-ang';\nimport {\n  AdditionalProperties,\n  cacheRequest,\n  isProductVisible,\n  Product,\n  ProductKindUri,\n} from '@backbase/product-summary-common-ang';\n\nimport { parseError } from './product-summary-error';\nimport { ProductKinds, ProductSummaryBaseService } from './product-summary-base.service';\n\ntype ProductKindResponse =\n  | CurrentAccountProductKinds\n  | SavingsAccountProductKinds\n  | TermDepositProductKinds\n  | LoanProductKinds\n  | CreditCardProductKinds\n  | DebitCardProductKinds\n  | InvestmentAccountProductKinds\n  | CustomProductKind;\n\nexport interface TotalBalance extends AdditionalProperties {\n  aggregatedBalance: string;\n  currency: string;\n}\n\nexport interface ProductKind extends AdditionalProperties {\n  id: string;\n  name?: string;\n  aggregatedBalance?: string;\n  currency?: string;\n  products?: Array<Product>;\n}\n\nconst clearUndefinedProperties = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\nconst aggregatedToTotalBalance = (aggregatedBalance: SummaryAggregatedBalance): TotalBalance => ({\n  aggregatedBalance: aggregatedBalance.value || '',\n  currency: aggregatedBalance.currency || '',\n});\n\nconst hasVisibleProducts = (products: Product[]): boolean =>\n  products.some(product => product && isProductVisible(product));\n\nconst getProductKind = (kind: string): string => {\n  switch (kind) {\n    case 'currentAccounts':\n      return ProductKindUri.CURRENT_ACCOUNT;\n    case 'savingsAccounts':\n      return ProductKindUri.SAVINGS_ACCOUNT;\n    case 'termDeposits':\n      return ProductKindUri.TERM_DEPOSIT;\n    case 'loans':\n      return ProductKindUri.LOAN;\n    case 'creditCards':\n      return ProductKindUri.CREDIT_CARD;\n    case 'debitCards':\n      return ProductKindUri.DEBIT_CARD;\n    case 'investmentAccounts':\n      return ProductKindUri.INVESTMENT_ACCOUNT;\n    default:\n      return kind;\n  }\n};\n\nconst objectToProductKind = (kind: string, productKind: ProductKindResponse): ProductKind | undefined => {\n  const hasProducts = productKind && productKind.products && productKind.products.length > 0;\n  if (hasProducts && hasVisibleProducts(productKind.products)) {\n    const products = productKind.products as BaseProduct[];\n    return {\n      id: kind,\n      name: productKind.name,\n      aggregatedBalance: productKind.aggregatedBalance ? productKind.aggregatedBalance.value : undefined,\n      currency: productKind.aggregatedBalance ? productKind.aggregatedBalance.currency : undefined,\n      products: products\n        .filter(isProductVisible)\n        .map((product: Product) => ({ ...product, kind, productKindUri: getProductKind(kind) })),\n      ...(productKind.additions ? { additions: productKind.additions } : {}),\n    };\n  }\n  return undefined;\n};\n\nconst arrayToProductKindList = (obj: any): ProductKind[] =>\n  obj.map((element: any) => element && objectToProductKind(element.name, element)).filter(Boolean);\n\nconst flattenArray = (arr: any): any => [].concat(...arr);\n\nconst toProductKindList = (res: ProductSummary): ProductKind[] => {\n  const products = Object.entries(res)\n    .filter(([key]) => key !== 'aggregatedBalance')\n    .map(([kind, value]) => {\n      if (!Array.isArray(value)) {\n        return objectToProductKind(kind, value);\n      }\n\n      return arrayToProductKindList(value);\n    })\n    .filter(Boolean);\n\n  return flattenArray(products);\n};\n\nconst responseToProductKinds = (res: ProductSummary): ProductKinds =>\n  clearUndefinedProperties({\n    total: res && res.aggregatedBalance ? aggregatedToTotalBalance(res.aggregatedBalance) : undefined,\n    productKinds: res ? toProductKindList(res) : [],\n    ...(res && res.additions ? { additions: res.additions } : {}),\n  });\n\n/**\n * Service for fetching and storing product kinds\n *\n * This service relies on providers from `ProductSummaryListWidgetModule`.\n *\n * @see ProductSummaryListWidgetModule\n *\n * @usageNotes\n *\n * ### Ensure the ProductSummaryListWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ProductSummaryListWidgetModule,\n *   ],\n * })\n * export class MyWidgetModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ProductSummaryService],\n * })\n *  export class MyComponent {\n * ```\n */\n@Injectable()\nexport class ProductSummaryService extends ProductSummaryBaseService {\n  constructor(private readonly productSummaryDataService: ProductSummaryHttpService) {\n    super();\n  }\n\n  readonly productKinds: Observable<ProductKinds | undefined> = combineLatest(\n    this.listParams.pipe(distinctUntilChanged()), // [NOTE] This may require a compare function if `ListParams` isn't a primitive\n    this.productKindsRefresh,\n  ).pipe(\n    tap(() => {\n      this.isLoading.next(true);\n    }),\n    cacheRequest(([params]) =>\n      this.productSummaryDataService.getProductSummary(params).pipe(\n        map((res: ProductSummary) => responseToProductKinds(res)),\n        catchError((error: HttpErrorResponse) => {\n          this.error.next(parseError(error));\n          return of(undefined);\n        }),\n      ),\n    ),\n    tap(() => {\n      this.isLoading.next(false);\n    }),\n  );\n}\n","export const WidgetProperty = {\n  SHOW_ICONS: 'showIcons',\n  EVENT_REFRESH_ACCOUNT_LIST: 'event.refreshAccountsList',\n  OUTPUT_SELECTED_ACCOUNT: 'output.selectedAccount',\n};\n","import { OnDestroy, Output, EventEmitter, Directive, Inject, Input } from '@angular/core';\nimport { ProductKindsError } from '../product-summary-error';\nimport { WidgetProperty } from '../model/constants';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  processErrorMessages,\n  ProductsExternalInfoService,\n  Product,\n  hasExternalInfo,\n} from '@backbase/product-summary-common-ang';\nimport { PUBSUB, Pubsub, PubsubListener } from '@backbase/foundation-ang/web-sdk';\nimport { map } from 'rxjs/operators';\nimport { ProductKinds, ProductSummaryBaseService } from '../product-summary-base.service';\n\n/**\n * A widget for displaying a list of accounts\n *\n * @usageNotes\n *\n * ### Include this widget in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryListWidgetModule,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n *\n * ### Include this widget (standalone model)\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'product-summary-account-details-widget-ang',\n *           properties: {\n *            classId: 'ProductSummaryListWidgetComponent',\n *            showIcons: true,\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n */\n// Temporary template. TODO: This component is to be broken down into atomic components\n@Directive()\nexport class ProductSummaryListBaseComponent implements OnDestroy {\n  /**\n   * @internal\n   */\n  readonly hostRef: ProductSummaryListBaseComponent = this;\n  /**\n   * If the fetching of the product kinds failed, this property\n   * holds the errors coming from the server\n   */\n  readonly error: Observable<ProductKindsError | undefined> = this.service.error;\n  /**\n   * Product kinds fetched from the server\n   */\n  readonly items: Observable<ProductKinds | undefined> = new Observable(subscriber => {\n    const subscriptions: Subscription[] = [];\n    subscriptions.push(\n      this.service.productKinds.subscribe(productKinds => {\n        const products = this.getProductsFromProductKinds(productKinds);\n        subscriber.next(productKinds);\n\n        if (products.some(hasExternalInfo)) {\n          subscriptions.push(\n            this.productsExternalInfoService\n              .getProductsWithExternalInfo(products)\n              .pipe(map(items => this.addProductsToProductKinds(items, productKinds as ProductKinds)))\n              .subscribe(subscriber),\n          );\n        }\n      }, subscriber.error),\n    );\n    return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n  });\n  /**\n   * Defines the loading state during the loading of data.\n   */\n  readonly isLoading: Observable<boolean> = this.service.isLoading;\n\n  private readonly widgetPropertiesSubscription = new Subscription();\n  /**\n   * Indicates whether the product kind card is expanded or collapsed.\n   */\n  readonly isExpanded: {\n    [key: string]: boolean;\n  } = {};\n  /**\n   * Defines whether to show product kind icons.\n   */\n  readonly showIcons = new BehaviorSubject<boolean>(true);\n  @Input(WidgetProperty.SHOW_ICONS) set showIconsValue(value: boolean) {\n    this.showIcons.next(value);\n  }\n  /**\n   * Comma separated list of event names to subscribe to perform accounts refresh\n   */\n  @Input(WidgetProperty.EVENT_REFRESH_ACCOUNT_LIST) set refreshAccountListEvent(value: string) {\n    if (value && typeof value === 'string') {\n      this.refreshAccountsEventNames = value.replace(/ /g, '').split(',');\n      this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler, false);\n      this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler);\n    }\n  }\n  /**\n   * Output emits id from selected account as string\n   */\n  @Output() selectedAccount = new EventEmitter<string>();\n  /**\n   * Output emits selected product\n   */\n  @Output() selectProduct = new EventEmitter<Product>();\n\n  private refreshAccountsEventNames: string[] = [];\n  private refreshAccountsHandler = this.refreshAccounts.bind(this);\n  /**\n   * Joins the specified error messages to display on the template\n   *\n   * @param messages\n   */\n  processErrorMessages: (messages: string[] | undefined) => string | undefined = processErrorMessages;\n\n  private getProductsFromProductKinds = (productKinds?: ProductKinds): Product[] =>\n    productKinds\n      ? productKinds.productKinds.reduce((products, kind) => products.concat(kind.products || []), [] as Product[])\n      : [];\n\n  private addProductsToProductKinds = (products: Product[], productKinds: ProductKinds): ProductKinds => ({\n    ...productKinds,\n    productKinds: productKinds.productKinds.map(account => ({\n      ...account,\n      products: account.products?.map(product => ({\n        ...product,\n        ...(products.find(item => item.id === product.id) || {}),\n      })),\n    })),\n  });\n  // Temporary template. TODO: This component is to be broken down into atomic components\n  /**\n   * Constructor\n   *\n   * @param service\n   * @param productsExternalInfoService\n   * @param eventBusService\n   */\n  constructor(\n    protected readonly service: ProductSummaryBaseService,\n    protected readonly productsExternalInfoService: ProductsExternalInfoService,\n    @Inject(PUBSUB) protected readonly eventBusService: Pubsub,\n  ) {}\n  /**\n   * @internal\n   */\n  ngOnDestroy() {\n    this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler, false);\n    this.showIcons.unsubscribe();\n  }\n  /**\n   * Emit the passed `id` to the `selectedAccount` output\n   *\n   * @param id\n   */\n  selectAccount(id: string) {\n    this.selectedAccount.emit(id);\n  }\n  /**\n   * Refreshes list of accounts\n   */\n  refreshAccounts() {\n    this.service.refreshProductKinds();\n  }\n  /**\n   * Subscribes or Unsubscribes on the passed eventNames.\n   *\n   * @param eventNames list of events.\n   * @param listener PubsubListener to be invoced on the events.\n   * @param subscribe defines whether the function subscribes or unsubscribes (default: true).\n   */\n  private handleEvents(eventNames: string[], listener: () => void, subscribe = true) {\n    eventNames.forEach((event: string) => {\n      if (subscribe) {\n        this.eventBusService.subscribe(event, listener as PubsubListener<any>);\n      } else {\n        this.eventBusService.unsubscribe(event, listener as PubsubListener<any>);\n      }\n    });\n  }\n}\n\n/**\n * This is an extension slot to be used for customizing the entire view\n *\n * @usageNotes\n *\n * ### Customize the entire view\n *\n * ```html\n * <ng-template\n *   bbProductSummaryCustomizable\n *   let-hostRef\n *   let-items=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryCustomizable]',\n})\nexport class ProductSummaryCustomizableDirective extends BbTemplate<ProductSummaryListBaseComponent, ProductKinds> {}\n\n/**\n * This is an extension slot to be used for customizing the header of the view\n *\n * @usageNotes\n *\n * ### Customize the header\n *\n * ```html\n * <ng-template\n *   bbProductSummaryHeaderCustomizable\n *   let-hostRef\n *   let-items=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryHeaderCustomizable]',\n})\nexport class ProductSummaryHeaderCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing the body of the view\n *\n * @usageNotes\n *\n * ### Customize the body\n *\n * ```html\n * <ng-template\n *   bbProductSummaryBodyCustomizable\n *   let-hostRef\n *   let-items=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryBodyCustomizable]',\n})\nexport class ProductSummaryBodyCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing every item in the list\n *\n * @usageNotes\n *\n * ### Customize items\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemCustomizable]',\n})\nexport class ProductSummaryListItemCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing items with the `currentAccounts` productKind\n *\n * @usageNotes\n *\n * ### Customize `Current Accounts`\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemCurrentAccountCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemCurrentAccountCustomizable]',\n})\nexport class ProductSummaryListItemCurrentAccountCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing items with the `savingsAccounts` productKind\n *\n * @usageNotes\n *\n * ### Customize `Savings Accounts`\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemSavingsAccountCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemSavingsAccountCustomizable]',\n})\nexport class ProductSummaryListItemSavingsAccountCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing items with the `termDeposits` productKind\n *\n * @usageNotes\n *\n * ### Customize `Term Deposits`\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemTermDepositCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemTermDepositCustomizable]',\n})\nexport class ProductSummaryListItemTermDepositCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing items with the `loans` productKind\n *\n * @usageNotes\n *\n * ### Customize `Loans`\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemLoanCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemLoanCustomizable]',\n})\nexport class ProductSummaryListItemLoanCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing items with the `creditCards` productKind\n *\n * @usageNotes\n *\n * ### Customize `Credit Cards`\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemCreditCardCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemCreditCardCustomizable]',\n})\nexport class ProductSummaryListItemCreditCardCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing items with the `debitCards` productKind\n *\n * @usageNotes\n *\n * ### Customize `Debit Cards`\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemDebitCardCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemDebitCardCustomizable]',\n})\nexport class ProductSummaryListItemDebitCardCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing items with the `investmentAccounts` productKind\n *\n * @usageNotes\n *\n * ### Customize `Investment Accounts`\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemInvestmentAccountCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemInvestmentAccountCustomizable]',\n})\nexport class ProductSummaryListItemInvestmentAccountCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing items with a custom (default) productKind\n *\n * @usageNotes\n *\n * ### Customize custom product kinds\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemOtherProductKindsCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemOtherProductKindsCustomizable]',\n})\nexport class ProductSummaryListItemOtherProductKindsCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n\n/**\n * This is an extension slot to be used for customizing the loading view\n *\n * @usageNotes\n *\n * ### Customize the loading view\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListLoadingCustomizable\n *   let-hostRef>\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListLoadingCustomizable]',\n})\nexport class ProductSummaryListLoadingCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  undefined\n> {}\n","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { ProductSummaryService } from '../product-summary.service';\nimport { ProductsExternalInfoService } from '@backbase/product-summary-common-ang';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { ProductSummaryListBaseComponent } from '../product-summary-list-base/product-summary-list-base.component';\n\n/**\n * A widget for displaying a list of accounts\n *\n * @usageNotes\n *\n * ### Include this widget in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryListWidgetModule,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n *\n * ### Include this widget (standalone model)\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'product-summary-account-details-widget-ang',\n *           properties: {\n *            classId: 'ProductSummaryListWidgetComponent',\n *            showIcons: true,\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n */\n// Temporary template. TODO: This component is to be broken down into atomic components\n@Component({\n  selector: 'bb-product-summary-list-widget',\n  templateUrl: 'product-summary-list-widget.component.html',\n  providers: [ProductSummaryService],\n})\nexport class ProductSummaryListWidgetComponent extends ProductSummaryListBaseComponent implements OnDestroy {\n  /**\n   * Constructor\n   *\n   * @param service\n   * @param productsExternalInfoService\n   * @param eventBusService\n   */\n  constructor(\n    protected readonly service: ProductSummaryService,\n    protected readonly productsExternalInfoService: ProductsExternalInfoService,\n    @Inject(PUBSUB) protected readonly eventBusService: Pubsub,\n  ) {\n    super(service, productsExternalInfoService, eventBusService);\n  }\n}\n","<ng-container *ngIf=\"((isLoading | async) === false) && (items | async) as items; else loadingTemplate\">\n  <ng-container\n    bbProductSummaryCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n</ng-container>\n\n<!-- Product summary wrapper template -->\n<ng-template\n  bbProductSummaryCustomizable\n  let-hostRef\n  let-items=\"context\">\n  <ng-container\n    bbProductSummaryHeaderCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n\n  <ng-container\n    bbProductSummaryBodyCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n</ng-template>\n\n<!-- Product summary header template -->\n<ng-template\n  bbProductSummaryHeaderCustomizable\n  let-hostRef\n  let-items=\"context\">\n  <div\n    *ngIf=\"items.total\"\n    class=\"bb-product-summary-balance\">\n    <div class=\"bb-product-summary-balance__tooltip\">\n      <span\n        class=\"bb-product-summary-balance__title\"\n        data-role=\"label-total-validation\"\n        i18n=\"Total balance label|product summary header label@@product.summary.header.label.total.balance\"\n      >\n        Total balance\n      </span>\n      <bb-icon-ui\n        class=\"bb-text-support\"\n        data-role=\"toggle-tooltip-icon\"\n        tabindex=\"0\"\n        size=\"sm\"\n        name=\"info\"\n        aria-label=\"Toggle tooltip for Total balance\"\n        i18n-aria-label=\"Toggle tooltip for Total balance|@@product.summary.header.account.consumedAmount.aria.label.openclose\"\n        bbTooltip=\"Total balance\"\n        i18n-bbTooltip=\"Total balance|Total balance label@@product.summary.header.account.tooltip.consumedAmount\"\n        triggers=\"focus hover\"\n      ></bb-icon-ui>\n    </div>\n    <bb-amount-ui\n      data-role=\"total-validation-amount\"\n      class=\"bb-product-summary-balance__amount\"\n      [currency]=\"items.total.currency\"\n      [amount]=\"items.total.aggregatedBalance\"\n      >\n    </bb-amount-ui>\n  </div>\n</ng-template>\n\n<!-- Product summary body template -->\n<ng-template\n  bbProductSummaryBodyCustomizable\n  let-hostRef\n  let-items=\"context\"\n>\n  <ng-container *ngFor=\"let productKind of items.productKinds\">\n    <ng-container\n      *ngIf=\"productKind\"\n      bbProductSummaryListItemCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\"\n    ></ng-container>\n  </ng-container>\n</ng-template>\n\n<!-- Product summary item -->\n<ng-template\n  bbProductSummaryListItemCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <ng-container\n    [ngSwitch]=\"productKind.id\">\n\n    <!-- Current Account -->\n    <ng-container\n      *ngSwitchCase=\"'currentAccounts'\"\n      bbProductSummaryListItemCurrentAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Savings Account -->\n    <ng-container\n      *ngSwitchCase=\"'savingsAccounts'\"\n      bbProductSummaryListItemSavingsAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Term Deposit -->\n    <ng-container\n      *ngSwitchCase=\"'termDeposits'\"\n      bbProductSummaryListItemTermDepositCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Loan -->\n    <ng-container\n      *ngSwitchCase=\"'loans'\"\n      bbProductSummaryListItemLoanCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Credit Card -->\n    <ng-container\n      *ngSwitchCase=\"'creditCards'\"\n      bbProductSummaryListItemCreditCardCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Debit Card -->\n    <ng-container\n      *ngSwitchCase=\"'debitCards'\"\n      bbProductSummaryListItemDebitCardCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Investment Account -->\n    <ng-container\n      *ngSwitchCase=\"'investmentAccounts'\"\n      bbProductSummaryListItemInvestmentAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!--\n      Other (Default):\n      This template can be used to add more custom productKinds.\n      The productKind is passed to the template so a customer can add\n      additional switch/if statements to determine what product template should be displayed\n    -->\n    <ng-container\n      *ngSwitchDefault\n      bbProductSummaryListItemOtherProductKindsCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n  </ng-container>\n</ng-template>\n\n<!-- Product summary card: Current Account -->\n<ng-template\n  bbProductSummaryListItemCurrentAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"current-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Savings Account -->\n<ng-template\n  bbProductSummaryListItemSavingsAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"savings-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Term Deposit -->\n<ng-template\n  bbProductSummaryListItemTermDepositCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"term-deposits\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Loan -->\n<ng-template\n  bbProductSummaryListItemLoanCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"loans\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Credit Card -->\n<ng-template\n  bbProductSummaryListItemCreditCardCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"credit-cards\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Debit Card -->\n<ng-template\n  bbProductSummaryListItemDebitCardCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"debit-cards\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Investment Account -->\n<ng-template\n  bbProductSummaryListItemInvestmentAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"investment-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Other Product Kinds -->\n<ng-template\n  bbProductSummaryListItemOtherProductKindsCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"custom-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary details loading template -->\n<ng-template #loadingTemplate>\n  <ng-container bbProductSummaryListLoadingCustomizable\n    [bbHostRef]=\"hostRef\">\n  </ng-container>\n</ng-template>\n\n<ng-template\n  bbProductSummaryListLoadingCustomizable\n  let-hostRef>\n  <ng-container *ngIf=\"hostRef.error | async as error; else loading\">\n    <bb-empty-state-ui\n      title=\"\"\n      [subtitle]=\"hostRef.processErrorMessages(error.messages)\"\n      iconModifier=\"error\"\n      iconSize=\"xxl\"\n      iconColor=\"gray\"\n      iconClasses=\"text-muted\"\n    ></bb-empty-state-ui>\n  </ng-container>\n  <ng-template #loading>\n    <bb-loading-indicator-ui\n      i18n-text=\"@@product.details.loadingAccounts\"\n      [text]=\"'Loading Accounts...'\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\nimport { ArrangementGroupItem, ArrangementViewsHttpService } from '@backbase/arrangement-manager-http-ang';\n\nimport { parseError } from './product-summary-error';\nimport { ArrangementViewResponse } from '@backbase/arrangement-manager-http-ang/model/arrangementViewResponse';\nimport { ArrangementGroupResponse } from '@backbase/arrangement-manager-http-ang/model/arrangementGroupResponse';\nimport { Variant } from '@backbase/arrangement-manager-http-ang/model/variant';\nimport { ProductKind, TotalBalance } from './product-summary.service';\nimport { ProductKinds, ProductSummaryBaseService } from './product-summary-base.service';\nimport { ViewBalanceAggregation } from '@backbase/arrangement-manager-http-ang/model/viewBalanceAggregation';\nimport { Product, ProductKindNames, ProductKindUri } from '@backbase/product-summary-common-ang';\n\ninterface BalanceAggregation {\n  [key: string]: {\n    [key: string]: ViewBalanceAggregation;\n  };\n}\n\nconst clearUndefinedProperties = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\nconst getBalanceFromBalanceAggregation = (\n  balanceAggregation: BalanceAggregation,\n  groupName: string,\n): TotalBalance | undefined => {\n  if (balanceAggregation[groupName] === undefined) return undefined;\n\n  const [currency, { amount }] = Object.entries(balanceAggregation[groupName])[0];\n\n  return {\n    aggregatedBalance: amount || '',\n    currency,\n  };\n};\n\nconst isProductVisible = (element: ArrangementGroupItem) =>\n  element.attributes.visible === undefined || element.attributes.visible.value === 'true';\n\nconst hasVisibleProducts = (elements: Array<ArrangementGroupItem> = []): boolean => elements.some(isProductVisible);\n\nconst mapArrangementGroupAttributes = (arrangementGroupAttributes: { [key: string]: Variant }): Partial<Product> => {\n  const mappedAttributes: Partial<Product> = {};\n\n  (Object.entries(arrangementGroupAttributes) as [keyof Product, Variant][]).forEach(([key, variant]) => {\n    switch (variant.type) {\n      case 'BOOLEAN':\n        mappedAttributes[key] = variant.value === 'true';\n        break;\n      case 'DECIMAL':\n        mappedAttributes[key] = Number(variant.value);\n        break;\n      case 'NUMBER':\n        mappedAttributes[key] = Number(variant.value);\n        break;\n      case 'INTEGER':\n        mappedAttributes[key] = Number(variant.value);\n        break;\n      default:\n        mappedAttributes[key] = variant.value;\n    }\n  });\n\n  return mappedAttributes;\n};\n\nconst getProductKindName = (kindUri: string): string => {\n  switch (kindUri) {\n    case ProductKindUri.CURRENT_ACCOUNT:\n      return ProductKindNames.CURRENT_ACCOUNT;\n    case ProductKindUri.SAVINGS_ACCOUNT:\n      return ProductKindNames.SAVINGS_ACCOUNT;\n    case ProductKindUri.TERM_DEPOSIT:\n      return ProductKindNames.TERM_DEPOSIT;\n    case ProductKindUri.LOAN:\n      return ProductKindNames.LOAN;\n    case ProductKindUri.CREDIT_CARD:\n      return ProductKindNames.CREDIT_CARD;\n    case ProductKindUri.DEBIT_CARD:\n      return ProductKindNames.DEBIT_CARD;\n    case ProductKindUri.INVESTMENT_ACCOUNT:\n      return ProductKindNames.INVESTMENT_ACCOUNT;\n    default:\n      return kindUri;\n  }\n};\n\nconst objectToProductKind = (\n  groupName: string,\n  group: ArrangementGroupResponse,\n  balanceAggregation?: BalanceAggregation,\n): ProductKind | undefined => {\n  const hasProducts = group && group.elements && group.elements.length > 0;\n  const balance = balanceAggregation ? getBalanceFromBalanceAggregation(balanceAggregation, groupName) : undefined;\n\n  if (hasProducts && hasVisibleProducts(group.elements)) {\n    return {\n      id: groupName,\n      name: groupName,\n      aggregatedBalance: balance?.aggregatedBalance,\n      currency: balance?.currency,\n      products: group.elements?.filter(isProductVisible).map((element: ArrangementGroupItem) => {\n        const product = mapArrangementGroupAttributes(element.attributes);\n\n        return {\n          ...product,\n          id: element.id,\n          kind: groupName,\n          bookedBalance: (product.bookedBalance ?? product.primaryBalance)?.toString(),\n          principalAmount: product.principalAmount ?? product.primaryBalance,\n          currentInvestmentValue: (product.currentInvestmentValue ?? product.primaryBalance)?.toString(),\n          availableBalance: (product.availableBalance ?? product.secondaryBalance)?.toString(),\n          accruedInterest: product.accruedInterest ?? product.secondaryBalance,\n          creditLimitUsage: product.creditLimitUsage ?? product.tertiaryBalance,\n          productKindName: product.productKindUri ? getProductKindName(product.productKindUri) : undefined,\n          state: product.state ? { state: product.state } : undefined,\n        } as Product;\n      }),\n    };\n  }\n  return undefined;\n};\n\nconst toProductKindList = (\n  groups: { [key: string]: ArrangementGroupResponse },\n  balanceAggregation?: BalanceAggregation,\n): ProductKind[] => {\n  let product = Object.entries(groups)\n    .filter(([groupName]) => groupName !== 'overdueAccounts')\n    .map(([groupName, group]) => objectToProductKind(groupName, group, balanceAggregation))\n    .filter(Boolean);\n\n  const overdueProductKind = objectToProductKind('overdueAccounts', groups['overdueAccounts'], balanceAggregation);\n\n  if (overdueProductKind) {\n    product = [overdueProductKind, ...product];\n  }\n\n  return product as ProductKind[];\n};\n\nconst responseToProductKinds = (res: ArrangementViewResponse): ProductKinds =>\n  clearUndefinedProperties({\n    total: res.metadata?.balanceAggregations\n      ? getBalanceFromBalanceAggregation(res.metadata?.balanceAggregations, 'all')\n      : undefined,\n    productKinds: res && res.groups ? toProductKindList(res.groups, res.metadata?.balanceAggregations) : [],\n  });\n\n/**\n * Service for fetching and storing product kinds\n *\n * This service relies on providers from `ProductSummaryListWidgetModule`.\n *\n * @see ProductSummaryListWidgetModule\n *\n * @usageNotes\n *\n * ### Ensure the ProductSummaryListWidgetModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ProductSummaryListWidgetModule,\n *   ],\n * })\n * export class MyWidgetModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ProductSummaryService],\n * })\n *  export class MyComponent {\n * ```\n */\n@Injectable()\nexport class ArrangementsService extends ProductSummaryBaseService {\n  private readonly viewNameSubject = new ReplaySubject<string>();\n\n  constructor(private readonly arrangementViewsHttpService: ArrangementViewsHttpService) {\n    super();\n  }\n\n  readonly productKinds: Observable<ProductKinds | undefined> = combineLatest([\n    this.viewNameSubject,\n    this.productKindsRefresh,\n  ]).pipe(\n    tap(() => {\n      this.isLoading.next(true);\n    }),\n    switchMap(([viewName]) =>\n      this.arrangementViewsHttpService.getArrangementView({ viewName }).pipe(\n        map(res => responseToProductKinds(res)),\n        catchError((error: HttpErrorResponse) => {\n          this.error.next(parseError(error));\n          return of(undefined);\n        }),\n      ),\n    ),\n    tap(() => {\n      this.isLoading.next(false);\n    }),\n  );\n\n  setViewName(viewName: string) {\n    this.viewNameSubject.next(viewName);\n  }\n}\n","import { Component, Directive, EventEmitter, Inject, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { ProductsExternalInfoService } from '@backbase/product-summary-common-ang';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { ArrangementsService } from '../arrangements.service';\nimport { ProductSummaryListBaseComponent } from '../product-summary-list-base/product-summary-list-base.component';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ProductKinds } from '../product-summary-base.service';\n\n/**\n * A widget for displaying a list of accounts\n *\n * @usageNotes\n *\n * ### Include this widget in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ArrangementsListWidgetComponent,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n *\n * ### Include this widget (standalone model)\n *\n * ```typescript\n * export const environment: Environment = {\n *   ...\n *   bootstrap: {\n *     pageModel: {\n *       name: 'root',\n *       properties: {},\n *       children: [\n *         {\n *           name: 'product-summary-account-details-widget-ang',\n *           properties: {\n *            classId: 'ArrangementsListWidgetComponent',\n *            showIcons: true,\n *           },\n *         },\n *       ],\n *     },\n *   },\n * };\n * ```\n */\n@Component({\n  selector: 'bb-arrangements-list-widget',\n  templateUrl: 'arrangements-list-widget.component.html',\n  providers: [ArrangementsService],\n})\nexport class ArrangementsListWidgetComponent extends ProductSummaryListBaseComponent implements OnInit, OnDestroy {\n  /**\n   * Input for setting `viewName` property\n   */\n  @Input('viewName') viewName?: string;\n\n  /**\n   * Emits arrangement id when pay now is clicked\n   */\n  @Output() payNowClick: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Constructor\n   *\n   * @param service\n   * @param productsExternalInfoService\n   * @param eventBusService\n   */\n  constructor(\n    protected readonly service: ArrangementsService,\n    protected readonly productsExternalInfoService: ProductsExternalInfoService,\n    @Inject(PUBSUB) protected readonly eventBusService: Pubsub,\n  ) {\n    super(service, productsExternalInfoService, eventBusService);\n  }\n\n  ngOnInit(): void {\n    if (this.viewName === undefined) {\n      throw new Error('viewName is required');\n    } else {\n      this.service.setViewName(this.viewName);\n    }\n  }\n}\n\n/**\n * This is an extension slot to be used for customizing items with the `overdueAccounts` productKind\n *\n * @usageNotes\n *\n * ### Customize `Needs Your Attention`\n *\n * ```html\n * <ng-template\n *   bbProductSummaryListItemNeedsAttentionAccountsCustomizable\n *   let-hostRef\n *   let-productKind=\"context\">\n *   Your custom template here\n * </ng-template>\n * ```\n *\n * @NgModule ProductSummaryListWidgetModule\n */\n@Directive({\n  selector: '[bbProductSummaryListItemNeedsAttentionAccountsCustomizable]',\n})\nexport class ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective extends BbTemplate<\n  ProductSummaryListBaseComponent,\n  ProductKinds\n> {}\n","<ng-container *ngIf=\"((isLoading | async) === false) && (items | async) as items; else loadingTemplate\">\n  <ng-container\n    bbProductSummaryCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n</ng-container>\n\n<!-- Product summary wrapper template -->\n<ng-template\n  bbProductSummaryCustomizable\n  let-hostRef\n  let-items=\"context\">\n  <ng-container\n    bbProductSummaryHeaderCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n\n  <ng-container\n    bbProductSummaryBodyCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n</ng-template>\n\n<!-- Product summary header template -->\n<ng-template\n  bbProductSummaryHeaderCustomizable\n  let-hostRef\n  let-items=\"context\">\n  <div\n    *ngIf=\"items.total\"\n    class=\"bb-product-summary-balance\">\n    <div class=\"bb-product-summary-balance__tooltip\">\n      <span\n        class=\"bb-product-summary-balance__title\"\n        data-role=\"label-total-validation\"\n        i18n=\"Total balance label|product summary header label@@product.summary.header.label.total.balance\"\n      >\n        Total balance\n      </span>\n      <bb-icon-ui\n        class=\"bb-text-support\"\n        data-role=\"toggle-tooltip-icon\"\n        tabindex=\"0\"\n        size=\"sm\"\n        name=\"info\"\n        aria-label=\"Toggle tooltip for Total balance\"\n        i18n-aria-label=\"Toggle tooltip for Total balance|@@product.summary.header.account.consumedAmount.aria.label.openclose\"\n        bbTooltip=\"Total balance\"\n        i18n-bbTooltip=\"Total balance|Total balance label@@product.summary.header.account.tooltip.consumedAmount\"\n        triggers=\"focus hover\"\n      ></bb-icon-ui>\n    </div>\n    <bb-amount-ui\n      data-role=\"total-validation-amount\"\n      class=\"bb-product-summary-balance__amount\"\n      [currency]=\"items.total.currency\"\n      [amount]=\"items.total.aggregatedBalance\"\n      >\n    </bb-amount-ui>\n  </div>\n</ng-template>\n\n<!-- Product summary body template -->\n<ng-template\n  bbProductSummaryBodyCustomizable\n  let-hostRef\n  let-items=\"context\"\n>\n  <ng-container *ngFor=\"let productKind of items.productKinds\">\n    <ng-container\n      *ngIf=\"productKind\"\n      bbProductSummaryListItemCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\"\n    ></ng-container>\n  </ng-container>\n</ng-template>\n\n<!-- Product summary item -->\n<ng-template\n  bbProductSummaryListItemCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <ng-container\n    [ngSwitch]=\"productKind.id\">\n\n    <!-- Needs Attention Accounts -->\n    <ng-container\n      bbProductSummaryListItemNeedsAttentionAccountsCustomizable\n      *ngSwitchCase=\"'overdueAccounts'\"\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Current Account -->\n    <ng-container\n      *ngSwitchCase=\"'currentAccounts'\"\n      bbProductSummaryListItemCurrentAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Savings Account -->\n    <ng-container\n      *ngSwitchCase=\"'savingsAccounts'\"\n      bbProductSummaryListItemSavingsAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Term Deposit -->\n    <ng-container\n      *ngSwitchCase=\"'termDeposits'\"\n      bbProductSummaryListItemTermDepositCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Loan -->\n    <ng-container\n      *ngSwitchCase=\"'loans'\"\n      bbProductSummaryListItemLoanCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Credit Card -->\n    <ng-container\n      *ngSwitchCase=\"'creditCards'\"\n      bbProductSummaryListItemCreditCardCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Debit Card -->\n    <ng-container\n      *ngSwitchCase=\"'debitCards'\"\n      bbProductSummaryListItemDebitCardCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Investment Account -->\n    <ng-container\n      *ngSwitchCase=\"'investmentAccounts'\"\n      bbProductSummaryListItemInvestmentAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!--\n      Other (Default):\n      This template can be used to add more custom productKinds.\n      The productKind is passed to the template so a customer can add\n      additional switch/if statements to determine what product template should be displayed\n    -->\n    <ng-container\n      *ngSwitchDefault\n      bbProductSummaryListItemOtherProductKindsCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n  </ng-container>\n</ng-template>\n\n\n<!-- Product summary card: Needs Attention Accounts -->\n<ng-template\n  bbProductSummaryListItemNeedsAttentionAccountsCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-needs-attention-ui\n    data-role=\"overdue-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n    (payNowClick)=\"hostRef.payNowClick.emit($event)\"\n  ></bb-product-needs-attention-ui>\n</ng-template>\n\n<!-- Product summary card: Current Account -->\n<ng-template\n  bbProductSummaryListItemCurrentAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"current-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Savings Account -->\n<ng-template\n  bbProductSummaryListItemSavingsAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"savings-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Term Deposit -->\n<ng-template\n  bbProductSummaryListItemTermDepositCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"term-deposits\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Loan -->\n<ng-template\n  bbProductSummaryListItemLoanCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"loans\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Credit Card -->\n<ng-template\n  bbProductSummaryListItemCreditCardCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"credit-cards\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Debit Card -->\n<ng-template\n  bbProductSummaryListItemDebitCardCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"debit-cards\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Investment Account -->\n<ng-template\n  bbProductSummaryListItemInvestmentAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"investment-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Other Product Kinds -->\n<ng-template\n  bbProductSummaryListItemOtherProductKindsCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"custom-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary details loading template -->\n<ng-template #loadingTemplate>\n  <ng-container bbProductSummaryListLoadingCustomizable\n    [bbHostRef]=\"hostRef\">\n  </ng-container>\n</ng-template>\n\n<ng-template\n  bbProductSummaryListLoadingCustomizable\n  let-hostRef>\n  <ng-container *ngIf=\"hostRef.error | async as error; else loading\">\n    <bb-empty-state-ui\n      title=\"\"\n      [subtitle]=\"hostRef.processErrorMessages(error.messages)\"\n      iconModifier=\"error\"\n      iconSize=\"xxl\"\n      iconColor=\"gray\"\n      iconClasses=\"text-muted\"\n    ></bb-empty-state-ui>\n  </ng-container>\n  <ng-template #loading>\n    <bb-loading-indicator-ui\n      i18n-text=\"@@product.details.loadingAccounts\"\n      [text]=\"'Loading Accounts...'\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport {\n  ProductKindModule,\n  ProductKindCollapsibleModule,\n  ProductNeedsAttentionModule,\n} from '@backbase/product-summary-ui';\nimport { ProductsExternalInfoService } from '@backbase/product-summary-common-ang';\n\nimport { ProductSummaryListWidgetComponent } from './product-summary-list/product-summary-list-widget.component';\nimport {\n  ArrangementsListWidgetComponent,\n  ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective,\n} from './arrangements-list/arrangements-list-widget.component';\nimport {\n  ProductSummaryBodyCustomizableDirective,\n  ProductSummaryCustomizableDirective,\n  ProductSummaryHeaderCustomizableDirective,\n  ProductSummaryListItemCreditCardCustomizableDirective,\n  ProductSummaryListItemCurrentAccountCustomizableDirective,\n  ProductSummaryListItemCustomizableDirective,\n  ProductSummaryListItemDebitCardCustomizableDirective,\n  ProductSummaryListItemInvestmentAccountCustomizableDirective,\n  ProductSummaryListItemLoanCustomizableDirective,\n  ProductSummaryListItemOtherProductKindsCustomizableDirective,\n  ProductSummaryListItemSavingsAccountCustomizableDirective,\n  ProductSummaryListItemTermDepositCustomizableDirective,\n  ProductSummaryListLoadingCustomizableDirective,\n} from './product-summary-list-base/product-summary-list-base.component';\n\nconst components = [ProductSummaryListWidgetComponent, ArrangementsListWidgetComponent];\n\nconst directives = [\n  ProductSummaryCustomizableDirective,\n  ProductSummaryHeaderCustomizableDirective,\n  ProductSummaryBodyCustomizableDirective,\n  ProductSummaryListItemCustomizableDirective,\n  ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective,\n  ProductSummaryListItemCurrentAccountCustomizableDirective,\n  ProductSummaryListItemSavingsAccountCustomizableDirective,\n  ProductSummaryListItemTermDepositCustomizableDirective,\n  ProductSummaryListItemLoanCustomizableDirective,\n  ProductSummaryListItemCreditCardCustomizableDirective,\n  ProductSummaryListItemDebitCardCustomizableDirective,\n  ProductSummaryListItemInvestmentAccountCustomizableDirective,\n  ProductSummaryListItemOtherProductKindsCustomizableDirective,\n  ProductSummaryListLoadingCustomizableDirective,\n];\n\nconst uiModules = [\n  ProductKindModule,\n  ProductKindCollapsibleModule,\n  IconModule,\n  AmountModule,\n  EmptyStateModule,\n  LoadingIndicatorModule,\n  TooltipModule,\n  ProductNeedsAttentionModule,\n];\n\n/**\n * Exports the Widgets and UI components for showing a list of accounts\n *\n * The following widgets are included in this module:\n *  - `ProductSummaryListWidgetComponent`\n *  - `ArrangementsViewWidgetComponent`\n *\n * @see ProductSummaryListWidgetComponent\n * @see ArrangementsListWidgetComponent\n *\n * @usageNotes\n *\n * ### Include the exported widgets in your `AppModule`:\n *\n * ```typescript\n * @NgModule({\n *   imports: [\n *     ProductSummaryListWidgetModule,\n *   ],\n *   ...\n * })\n * export class AppModule {}\n * ```\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ...uiModules,\n    BackbaseCoreModule.withConfig({\n      classMap: {\n        ProductSummaryListWidgetComponent,\n        ArrangementsListWidgetComponent,\n      },\n    }),\n  ],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules],\n  providers: [ProductsExternalInfoService],\n})\nexport class ProductSummaryListWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["clearUndefinedProperties","hasVisibleProducts","isProductVisible","objectToProductKind","toProductKindList","responseToProductKinds","i9.ProductSummaryCustomizableDirective","i9.ProductSummaryHeaderCustomizableDirective","i9.ProductSummaryBodyCustomizableDirective","i9.ProductSummaryListItemCustomizableDirective","i9.ProductSummaryListItemCurrentAccountCustomizableDirective","i9.ProductSummaryListItemSavingsAccountCustomizableDirective","i9.ProductSummaryListItemTermDepositCustomizableDirective","i9.ProductSummaryListItemLoanCustomizableDirective","i9.ProductSummaryListItemCreditCardCustomizableDirective","i9.ProductSummaryListItemDebitCardCustomizableDirective","i9.ProductSummaryListItemInvestmentAccountCustomizableDirective","i9.ProductSummaryListItemOtherProductKindsCustomizableDirective","i9.ProductSummaryListLoadingCustomizableDirective","i1"],"mappings":"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"}