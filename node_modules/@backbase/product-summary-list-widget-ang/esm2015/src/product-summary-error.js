export class ProductKindsAccessDenied {
    constructor(response) {
        this.response = response;
        this.kind = 'ProductKindsAccessDenied';
        this.messages = ((response.error || {}).errors || []).map((e) => e.message);
    }
}
export class ProductKindsBadRequest {
    constructor(response) {
        this.response = response;
        this.kind = 'ProductKindsBadRequest';
        this.messages = ((response.error || {}).errors || []).map((e) => e.message);
    }
}
export class ProductKindsUnknownError {
    constructor(response) {
        this.response = response;
        this.kind = 'ProductKindsUnknownError';
        this.messages = [response.message];
    }
}
export const parseError = (error) => {
    if (error.error instanceof ErrorEvent) {
        return new ProductKindsUnknownError(error);
    }
    else {
        switch (error.status) {
            case 400:
                return new ProductKindsBadRequest(error);
            case 401:
                return new ProductKindsAccessDenied(error);
            case 403:
                return new ProductKindsAccessDenied(error);
            default:
                return new ProductKindsUnknownError(error);
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1zdW1tYXJ5LWVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9wcm9kdWN0LXN1bW1hcnktbGlzdC13aWRnZXQtYW5nL3NyYy9wcm9kdWN0LXN1bW1hcnktZXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxPQUFPLHdCQUF3QjtJQUduQyxZQUFxQixRQUEyQjtRQUEzQixhQUFRLEdBQVIsUUFBUSxDQUFtQjtRQURoRCxTQUFJLEdBQStCLDBCQUEwQixDQUFDO1FBRTVELElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25GLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxzQkFBc0I7SUFHakMsWUFBcUIsUUFBMkI7UUFBM0IsYUFBUSxHQUFSLFFBQVEsQ0FBbUI7UUFEaEQsU0FBSSxHQUE2Qix3QkFBd0IsQ0FBQztRQUV4RCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuRixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sd0JBQXdCO0lBR25DLFlBQXFCLFFBQTJCO1FBQTNCLGFBQVEsR0FBUixRQUFRLENBQW1CO1FBRGhELFNBQUksR0FBK0IsMEJBQTBCLENBQUM7UUFFNUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBQ0Y7QUFHRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxLQUF3QixFQUFxQixFQUFFO0lBQ3hFLElBQUksS0FBSyxDQUFDLEtBQUssWUFBWSxVQUFVLEVBQUU7UUFDckMsT0FBTyxJQUFJLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQzVDO1NBQU07UUFDTCxRQUFRLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDcEIsS0FBSyxHQUFHO2dCQUNOLE9BQU8sSUFBSSxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMzQyxLQUFLLEdBQUc7Z0JBQ04sT0FBTyxJQUFJLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzdDLEtBQUssR0FBRztnQkFDTixPQUFPLElBQUksd0JBQXdCLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDN0M7Z0JBQ0UsT0FBTyxJQUFJLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzlDO0tBQ0Y7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwRXJyb3JSZXNwb25zZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcblxuZXhwb3J0IGNsYXNzIFByb2R1Y3RLaW5kc0FjY2Vzc0RlbmllZCB7XG4gIG1lc3NhZ2VzOiBzdHJpbmdbXTtcbiAga2luZDogJ1Byb2R1Y3RLaW5kc0FjY2Vzc0RlbmllZCcgPSAnUHJvZHVjdEtpbmRzQWNjZXNzRGVuaWVkJztcbiAgY29uc3RydWN0b3IocmVhZG9ubHkgcmVzcG9uc2U6IEh0dHBFcnJvclJlc3BvbnNlKSB7XG4gICAgdGhpcy5tZXNzYWdlcyA9ICgocmVzcG9uc2UuZXJyb3IgfHwge30pLmVycm9ycyB8fCBbXSkubWFwKChlOiBhbnkpID0+IGUubWVzc2FnZSk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFByb2R1Y3RLaW5kc0JhZFJlcXVlc3Qge1xuICBtZXNzYWdlczogc3RyaW5nW107XG4gIGtpbmQ6ICdQcm9kdWN0S2luZHNCYWRSZXF1ZXN0JyA9ICdQcm9kdWN0S2luZHNCYWRSZXF1ZXN0JztcbiAgY29uc3RydWN0b3IocmVhZG9ubHkgcmVzcG9uc2U6IEh0dHBFcnJvclJlc3BvbnNlKSB7XG4gICAgdGhpcy5tZXNzYWdlcyA9ICgocmVzcG9uc2UuZXJyb3IgfHwge30pLmVycm9ycyB8fCBbXSkubWFwKChlOiBhbnkpID0+IGUubWVzc2FnZSk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFByb2R1Y3RLaW5kc1Vua25vd25FcnJvciB7XG4gIG1lc3NhZ2VzOiBzdHJpbmdbXTtcbiAga2luZDogJ1Byb2R1Y3RLaW5kc1Vua25vd25FcnJvcicgPSAnUHJvZHVjdEtpbmRzVW5rbm93bkVycm9yJztcbiAgY29uc3RydWN0b3IocmVhZG9ubHkgcmVzcG9uc2U6IEh0dHBFcnJvclJlc3BvbnNlKSB7XG4gICAgdGhpcy5tZXNzYWdlcyA9IFtyZXNwb25zZS5tZXNzYWdlXTtcbiAgfVxufVxuZXhwb3J0IHR5cGUgUHJvZHVjdEtpbmRzRXJyb3IgPSBQcm9kdWN0S2luZHNBY2Nlc3NEZW5pZWQgfCBQcm9kdWN0S2luZHNCYWRSZXF1ZXN0IHwgUHJvZHVjdEtpbmRzVW5rbm93bkVycm9yO1xuXG5leHBvcnQgY29uc3QgcGFyc2VFcnJvciA9IChlcnJvcjogSHR0cEVycm9yUmVzcG9uc2UpOiBQcm9kdWN0S2luZHNFcnJvciA9PiB7XG4gIGlmIChlcnJvci5lcnJvciBpbnN0YW5jZW9mIEVycm9yRXZlbnQpIHtcbiAgICByZXR1cm4gbmV3IFByb2R1Y3RLaW5kc1Vua25vd25FcnJvcihlcnJvcik7XG4gIH0gZWxzZSB7XG4gICAgc3dpdGNoIChlcnJvci5zdGF0dXMpIHtcbiAgICAgIGNhc2UgNDAwOlxuICAgICAgICByZXR1cm4gbmV3IFByb2R1Y3RLaW5kc0JhZFJlcXVlc3QoZXJyb3IpO1xuICAgICAgY2FzZSA0MDE6XG4gICAgICAgIHJldHVybiBuZXcgUHJvZHVjdEtpbmRzQWNjZXNzRGVuaWVkKGVycm9yKTtcbiAgICAgIGNhc2UgNDAzOlxuICAgICAgICByZXR1cm4gbmV3IFByb2R1Y3RLaW5kc0FjY2Vzc0RlbmllZChlcnJvcik7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gbmV3IFByb2R1Y3RLaW5kc1Vua25vd25FcnJvcihlcnJvcik7XG4gICAgfVxuICB9XG59O1xuIl19