import { Output, EventEmitter, Directive, Inject, Input } from '@angular/core';
import { WidgetProperty } from '../model/constants';
import { BehaviorSubject, Observable, Subscription } from 'rxjs';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { processErrorMessages, hasExternalInfo, } from '@backbase/product-summary-common-ang';
import { PUBSUB } from '@backbase/foundation-ang/web-sdk';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../product-summary-base.service";
import * as i2 from "@backbase/product-summary-common-ang";
/**
 * A widget for displaying a list of accounts
 *
 * @usageNotes
 *
 * ### Include this widget in your `AppModule`:
 *
 * ```typescript
 * @NgModule({
 *   imports: [
 *     ProductSummaryListWidgetModule,
 *   ],
 *   ...
 * })
 * export class AppModule {}
 * ```
 *
 * ### Include this widget (standalone model)
 *
 * ```typescript
 * export const environment: Environment = {
 *   ...
 *   bootstrap: {
 *     pageModel: {
 *       name: 'root',
 *       properties: {},
 *       children: [
 *         {
 *           name: 'product-summary-account-details-widget-ang',
 *           properties: {
 *            classId: 'ProductSummaryListWidgetComponent',
 *            showIcons: true,
 *           },
 *         },
 *       ],
 *     },
 *   },
 * };
 * ```
 */
// Temporary template. TODO: This component is to be broken down into atomic components
export class ProductSummaryListBaseComponent {
    // Temporary template. TODO: This component is to be broken down into atomic components
    /**
     * Constructor
     *
     * @param service
     * @param productsExternalInfoService
     * @param eventBusService
     */
    constructor(service, productsExternalInfoService, eventBusService) {
        this.service = service;
        this.productsExternalInfoService = productsExternalInfoService;
        this.eventBusService = eventBusService;
        /**
         * @internal
         */
        this.hostRef = this;
        /**
         * If the fetching of the product kinds failed, this property
         * holds the errors coming from the server
         */
        this.error = this.service.error;
        /**
         * Product kinds fetched from the server
         */
        this.items = new Observable(subscriber => {
            const subscriptions = [];
            subscriptions.push(this.service.productKinds.subscribe(productKinds => {
                const products = this.getProductsFromProductKinds(productKinds);
                subscriber.next(productKinds);
                if (products.some(hasExternalInfo)) {
                    subscriptions.push(this.productsExternalInfoService
                        .getProductsWithExternalInfo(products)
                        .pipe(map(items => this.addProductsToProductKinds(items, productKinds)))
                        .subscribe(subscriber));
                }
            }, subscriber.error));
            return () => subscriptions.forEach(subscription => subscription.unsubscribe());
        });
        /**
         * Defines the loading state during the loading of data.
         */
        this.isLoading = this.service.isLoading;
        this.widgetPropertiesSubscription = new Subscription();
        /**
         * Indicates whether the product kind card is expanded or collapsed.
         */
        this.isExpanded = {};
        /**
         * Defines whether to show product kind icons.
         */
        this.showIcons = new BehaviorSubject(true);
        /**
         * Output emits id from selected account as string
         */
        this.selectedAccount = new EventEmitter();
        /**
         * Output emits selected product
         */
        this.selectProduct = new EventEmitter();
        this.refreshAccountsEventNames = [];
        this.refreshAccountsHandler = this.refreshAccounts.bind(this);
        /**
         * Joins the specified error messages to display on the template
         *
         * @param messages
         */
        this.processErrorMessages = processErrorMessages;
        this.getProductsFromProductKinds = (productKinds) => productKinds
            ? productKinds.productKinds.reduce((products, kind) => products.concat(kind.products || []), [])
            : [];
        this.addProductsToProductKinds = (products, productKinds) => (Object.assign(Object.assign({}, productKinds), { productKinds: productKinds.productKinds.map(account => {
                var _a;
                return (Object.assign(Object.assign({}, account), { products: (_a = account.products) === null || _a === void 0 ? void 0 : _a.map(product => (Object.assign(Object.assign({}, product), (products.find(item => item.id === product.id) || {})))) }));
            }) }));
    }
    set showIconsValue(value) {
        this.showIcons.next(value);
    }
    /**
     * Comma separated list of event names to subscribe to perform accounts refresh
     */
    set refreshAccountListEvent(value) {
        if (value && typeof value === 'string') {
            this.refreshAccountsEventNames = value.replace(/ /g, '').split(',');
            this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler, false);
            this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler);
        }
    }
    /**
     * @internal
     */
    ngOnDestroy() {
        this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler, false);
        this.showIcons.unsubscribe();
    }
    /**
     * Emit the passed `id` to the `selectedAccount` output
     *
     * @param id
     */
    selectAccount(id) {
        this.selectedAccount.emit(id);
    }
    /**
     * Refreshes list of accounts
     */
    refreshAccounts() {
        this.service.refreshProductKinds();
    }
    /**
     * Subscribes or Unsubscribes on the passed eventNames.
     *
     * @param eventNames list of events.
     * @param listener PubsubListener to be invoced on the events.
     * @param subscribe defines whether the function subscribes or unsubscribes (default: true).
     */
    handleEvents(eventNames, listener, subscribe = true) {
        eventNames.forEach((event) => {
            if (subscribe) {
                this.eventBusService.subscribe(event, listener);
            }
            else {
                this.eventBusService.unsubscribe(event, listener);
            }
        });
    }
}
ProductSummaryListBaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListBaseComponent, deps: [{ token: i1.ProductSummaryBaseService }, { token: i2.ProductsExternalInfoService }, { token: PUBSUB }], target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListBaseComponent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListBaseComponent, inputs: { showIconsValue: ["showIcons", "showIconsValue"], refreshAccountListEvent: ["event.refreshAccountsList", "refreshAccountListEvent"] }, outputs: { selectedAccount: "selectedAccount", selectProduct: "selectProduct" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListBaseComponent, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i1.ProductSummaryBaseService }, { type: i2.ProductsExternalInfoService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [PUBSUB]
                }] }]; }, propDecorators: { showIconsValue: [{
                type: Input,
                args: [WidgetProperty.SHOW_ICONS]
            }], refreshAccountListEvent: [{
                type: Input,
                args: [WidgetProperty.EVENT_REFRESH_ACCOUNT_LIST]
            }], selectedAccount: [{
                type: Output
            }], selectProduct: [{
                type: Output
            }] } });
/**
 * This is an extension slot to be used for customizing the entire view
 *
 * @usageNotes
 *
 * ### Customize the entire view
 *
 * ```html
 * <ng-template
 *   bbProductSummaryCustomizable
 *   let-hostRef
 *   let-items="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryCustomizableDirective extends BbTemplate {
}
ProductSummaryCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryCustomizableDirective, selector: "[bbProductSummaryCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing the header of the view
 *
 * @usageNotes
 *
 * ### Customize the header
 *
 * ```html
 * <ng-template
 *   bbProductSummaryHeaderCustomizable
 *   let-hostRef
 *   let-items="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryHeaderCustomizableDirective extends BbTemplate {
}
ProductSummaryHeaderCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryHeaderCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryHeaderCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryHeaderCustomizableDirective, selector: "[bbProductSummaryHeaderCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryHeaderCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryHeaderCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing the body of the view
 *
 * @usageNotes
 *
 * ### Customize the body
 *
 * ```html
 * <ng-template
 *   bbProductSummaryBodyCustomizable
 *   let-hostRef
 *   let-items="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryBodyCustomizableDirective extends BbTemplate {
}
ProductSummaryBodyCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryBodyCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryBodyCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryBodyCustomizableDirective, selector: "[bbProductSummaryBodyCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryBodyCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryBodyCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing every item in the list
 *
 * @usageNotes
 *
 * ### Customize items
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemCustomizableDirective, selector: "[bbProductSummaryListItemCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing items with the `currentAccounts` productKind
 *
 * @usageNotes
 *
 * ### Customize `Current Accounts`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemCurrentAccountCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemCurrentAccountCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemCurrentAccountCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemCurrentAccountCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemCurrentAccountCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemCurrentAccountCustomizableDirective, selector: "[bbProductSummaryListItemCurrentAccountCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemCurrentAccountCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemCurrentAccountCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing items with the `savingsAccounts` productKind
 *
 * @usageNotes
 *
 * ### Customize `Savings Accounts`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemSavingsAccountCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemSavingsAccountCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemSavingsAccountCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemSavingsAccountCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemSavingsAccountCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemSavingsAccountCustomizableDirective, selector: "[bbProductSummaryListItemSavingsAccountCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemSavingsAccountCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemSavingsAccountCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing items with the `termDeposits` productKind
 *
 * @usageNotes
 *
 * ### Customize `Term Deposits`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemTermDepositCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemTermDepositCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemTermDepositCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemTermDepositCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemTermDepositCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemTermDepositCustomizableDirective, selector: "[bbProductSummaryListItemTermDepositCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemTermDepositCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemTermDepositCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing items with the `loans` productKind
 *
 * @usageNotes
 *
 * ### Customize `Loans`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemLoanCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemLoanCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemLoanCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemLoanCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemLoanCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemLoanCustomizableDirective, selector: "[bbProductSummaryListItemLoanCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemLoanCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemLoanCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing items with the `creditCards` productKind
 *
 * @usageNotes
 *
 * ### Customize `Credit Cards`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemCreditCardCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemCreditCardCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemCreditCardCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemCreditCardCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemCreditCardCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemCreditCardCustomizableDirective, selector: "[bbProductSummaryListItemCreditCardCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemCreditCardCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemCreditCardCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing items with the `debitCards` productKind
 *
 * @usageNotes
 *
 * ### Customize `Debit Cards`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemDebitCardCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemDebitCardCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemDebitCardCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemDebitCardCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemDebitCardCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemDebitCardCustomizableDirective, selector: "[bbProductSummaryListItemDebitCardCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemDebitCardCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemDebitCardCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing items with the `investmentAccounts` productKind
 *
 * @usageNotes
 *
 * ### Customize `Investment Accounts`
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemInvestmentAccountCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemInvestmentAccountCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemInvestmentAccountCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemInvestmentAccountCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemInvestmentAccountCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemInvestmentAccountCustomizableDirective, selector: "[bbProductSummaryListItemInvestmentAccountCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemInvestmentAccountCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemInvestmentAccountCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing items with a custom (default) productKind
 *
 * @usageNotes
 *
 * ### Customize custom product kinds
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListItemOtherProductKindsCustomizable
 *   let-hostRef
 *   let-productKind="context">
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListItemOtherProductKindsCustomizableDirective extends BbTemplate {
}
ProductSummaryListItemOtherProductKindsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemOtherProductKindsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListItemOtherProductKindsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemOtherProductKindsCustomizableDirective, selector: "[bbProductSummaryListItemOtherProductKindsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListItemOtherProductKindsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListItemOtherProductKindsCustomizable]',
                }]
        }] });
/**
 * This is an extension slot to be used for customizing the loading view
 *
 * @usageNotes
 *
 * ### Customize the loading view
 *
 * ```html
 * <ng-template
 *   bbProductSummaryListLoadingCustomizable
 *   let-hostRef>
 *   Your custom template here
 * </ng-template>
 * ```
 *
 * @NgModule ProductSummaryListWidgetModule
 */
export class ProductSummaryListLoadingCustomizableDirective extends BbTemplate {
}
ProductSummaryListLoadingCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListLoadingCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ProductSummaryListLoadingCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListLoadingCustomizableDirective, selector: "[bbProductSummaryListLoadingCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryListLoadingCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbProductSummaryListLoadingCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,