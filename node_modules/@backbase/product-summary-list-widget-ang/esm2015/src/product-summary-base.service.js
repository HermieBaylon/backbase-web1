import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
/**
 * Service for fetching and storing product kinds
 *
 * This service relies on providers from `ProductSummaryListWidgetModule`.
 *
 * @see ProductSummaryListWidgetModule
 *
 * @usageNotes
 *
 * ### Ensure the ProductSummaryListWidgetModule is imported to your component module
 *
 * ```ts
 * @NgModule({
 *   ...
 *   imports: [
 *     ...
 *     ProductSummaryListWidgetModule,
 *   ],
 * })
 * export class MyWidgetModule {}
 * ```
 *
 * ### Inject this service into your component
 *
 * ```ts
 * @Component({
 *   ...
 *   providers: [ProductSummaryService],
 * })
 *  export class MyComponent {
 * ```
 */
export class ProductSummaryBaseService {
    constructor() {
        this.listParams = new BehaviorSubject({});
        this.productKindsRefresh = new BehaviorSubject(false);
        /**
         * Used to store the error occured during loading of accounts
         */
        this.error = new BehaviorSubject(undefined);
        /**
         * List of accounts fetched from the server
         */
        this.isLoading = new BehaviorSubject(false);
    }
    /**
     * @internal
     */
    ngOnDestroy() {
        this.error.complete();
        this.productKindsRefresh.complete();
    }
    /**
     * Refreshes the list of product kinds
     * Causes refetching data
     */
    refreshProductKinds() {
        this.productKindsRefresh.next(true);
    }
}
ProductSummaryBaseService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryBaseService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
ProductSummaryBaseService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryBaseService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ProductSummaryBaseService, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1zdW1tYXJ5LWJhc2Uuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvcHJvZHVjdC1zdW1tYXJ5LWxpc3Qtd2lkZ2V0LWFuZy9zcmMvcHJvZHVjdC1zdW1tYXJ5LWJhc2Uuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBRXRELE9BQU8sRUFBRSxlQUFlLEVBQWMsTUFBTSxNQUFNLENBQUM7O0FBWW5EOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBK0JHO0FBRUgsTUFBTSxPQUFnQix5QkFBeUI7SUFEL0M7UUFFcUIsZUFBVSxHQUFHLElBQUksZUFBZSxDQUFpQyxFQUFFLENBQUMsQ0FBQztRQUM5RSx3QkFBbUIsR0FBRyxJQUFJLGVBQWUsQ0FBVSxLQUFLLENBQUMsQ0FBQztRQUNwRTs7V0FFRztRQUNNLFVBQUssR0FBRyxJQUFJLGVBQWUsQ0FBZ0MsU0FBUyxDQUFDLENBQUM7UUFDL0U7O1dBRUc7UUFDTSxjQUFTLEdBQUcsSUFBSSxlQUFlLENBQVUsS0FBSyxDQUFDLENBQUM7S0FvQjFEO0lBZkM7O09BRUc7SUFDSCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDdEMsQ0FBQztJQUVEOzs7T0FHRztJQUNILG1CQUFtQjtRQUNqQixJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RDLENBQUM7O3VIQTdCbUIseUJBQXlCOzJIQUF6Qix5QkFBeUI7NEZBQXpCLHlCQUF5QjtrQkFEOUMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEdldFByb2R1Y3RTdW1tYXJ5UmVxdWVzdFBhcmFtcyB9IGZyb20gJ0BiYWNrYmFzZS9hcnJhbmdlbWVudC1tYW5hZ2VyLWh0dHAtYW5nJztcbmltcG9ydCB7IEFkZGl0aW9uYWxQcm9wZXJ0aWVzIH0gZnJvbSAnQGJhY2tiYXNlL3Byb2R1Y3Qtc3VtbWFyeS1jb21tb24tYW5nJztcblxuaW1wb3J0IHsgUHJvZHVjdEtpbmRzRXJyb3IgfSBmcm9tICcuL3Byb2R1Y3Qtc3VtbWFyeS1lcnJvcic7XG5pbXBvcnQgeyBQcm9kdWN0S2luZCwgVG90YWxCYWxhbmNlIH0gZnJvbSAnLi9wcm9kdWN0LXN1bW1hcnkuc2VydmljZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvZHVjdEtpbmRzIGV4dGVuZHMgQWRkaXRpb25hbFByb3BlcnRpZXMge1xuICB0b3RhbD86IFRvdGFsQmFsYW5jZTtcbiAgcHJvZHVjdEtpbmRzOiBBcnJheTxQcm9kdWN0S2luZD47XG59XG5cbi8qKlxuICogU2VydmljZSBmb3IgZmV0Y2hpbmcgYW5kIHN0b3JpbmcgcHJvZHVjdCBraW5kc1xuICpcbiAqIFRoaXMgc2VydmljZSByZWxpZXMgb24gcHJvdmlkZXJzIGZyb20gYFByb2R1Y3RTdW1tYXJ5TGlzdFdpZGdldE1vZHVsZWAuXG4gKlxuICogQHNlZSBQcm9kdWN0U3VtbWFyeUxpc3RXaWRnZXRNb2R1bGVcbiAqXG4gKiBAdXNhZ2VOb3Rlc1xuICpcbiAqICMjIyBFbnN1cmUgdGhlIFByb2R1Y3RTdW1tYXJ5TGlzdFdpZGdldE1vZHVsZSBpcyBpbXBvcnRlZCB0byB5b3VyIGNvbXBvbmVudCBtb2R1bGVcbiAqXG4gKiBgYGB0c1xuICogQE5nTW9kdWxlKHtcbiAqICAgLi4uXG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICAuLi5cbiAqICAgICBQcm9kdWN0U3VtbWFyeUxpc3RXaWRnZXRNb2R1bGUsXG4gKiAgIF0sXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIE15V2lkZ2V0TW9kdWxlIHt9XG4gKiBgYGBcbiAqXG4gKiAjIyMgSW5qZWN0IHRoaXMgc2VydmljZSBpbnRvIHlvdXIgY29tcG9uZW50XG4gKlxuICogYGBgdHNcbiAqIEBDb21wb25lbnQoe1xuICogICAuLi5cbiAqICAgcHJvdmlkZXJzOiBbUHJvZHVjdFN1bW1hcnlTZXJ2aWNlXSxcbiAqIH0pXG4gKiAgZXhwb3J0IGNsYXNzIE15Q29tcG9uZW50IHtcbiAqIGBgYFxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUHJvZHVjdFN1bW1hcnlCYXNlU2VydmljZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIHByb3RlY3RlZCByZWFkb25seSBsaXN0UGFyYW1zID0gbmV3IEJlaGF2aW9yU3ViamVjdDxHZXRQcm9kdWN0U3VtbWFyeVJlcXVlc3RQYXJhbXM+KHt9KTtcbiAgcHJvdGVjdGVkIHByb2R1Y3RLaW5kc1JlZnJlc2ggPSBuZXcgQmVoYXZpb3JTdWJqZWN0PGJvb2xlYW4+KGZhbHNlKTtcbiAgLyoqXG4gICAqIFVzZWQgdG8gc3RvcmUgdGhlIGVycm9yIG9jY3VyZWQgZHVyaW5nIGxvYWRpbmcgb2YgYWNjb3VudHNcbiAgICovXG4gIHJlYWRvbmx5IGVycm9yID0gbmV3IEJlaGF2aW9yU3ViamVjdDxQcm9kdWN0S2luZHNFcnJvciB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcbiAgLyoqXG4gICAqIExpc3Qgb2YgYWNjb3VudHMgZmV0Y2hlZCBmcm9tIHRoZSBzZXJ2ZXJcbiAgICovXG4gIHJlYWRvbmx5IGlzTG9hZGluZyA9IG5ldyBCZWhhdmlvclN1YmplY3Q8Ym9vbGVhbj4oZmFsc2UpO1xuICAvKipcbiAgICogTGlzdCBvZiBwcm9kdWN0IGtpbmRzIChhY2NvdW50cykgZmV0Y2hlZCBmcm9tIHRoZSBzZXJ2ZXJcbiAgICovXG4gIGFic3RyYWN0IHJlYWRvbmx5IHByb2R1Y3RLaW5kczogT2JzZXJ2YWJsZTxQcm9kdWN0S2luZHMgfCB1bmRlZmluZWQ+O1xuICAvKipcbiAgICogQGludGVybmFsXG4gICAqL1xuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmVycm9yLmNvbXBsZXRlKCk7XG4gICAgdGhpcy5wcm9kdWN0S2luZHNSZWZyZXNoLmNvbXBsZXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogUmVmcmVzaGVzIHRoZSBsaXN0IG9mIHByb2R1Y3Qga2luZHNcbiAgICogQ2F1c2VzIHJlZmV0Y2hpbmcgZGF0YVxuICAgKi9cbiAgcmVmcmVzaFByb2R1Y3RLaW5kcygpIHtcbiAgICB0aGlzLnByb2R1Y3RLaW5kc1JlZnJlc2gubmV4dCh0cnVlKTtcbiAgfVxufVxuIl19