(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/amount'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/tooltip-directive'), require('@backbase/foundation-ang/core'), require('@backbase/product-summary-ui'), require('@backbase/product-summary-common-ang'), require('rxjs'), require('rxjs/operators'), require('@backbase/arrangement-manager-http-ang'), require('@backbase/foundation-ang/web-sdk')) :
    typeof define === 'function' && define.amd ? define('@backbase/product-summary-list-widget-ang', ['exports', '@angular/common', '@angular/core', '@backbase/ui-ang/icon', '@backbase/ui-ang/amount', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/tooltip-directive', '@backbase/foundation-ang/core', '@backbase/product-summary-ui', '@backbase/product-summary-common-ang', 'rxjs', 'rxjs/operators', '@backbase/arrangement-manager-http-ang', '@backbase/foundation-ang/web-sdk'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["product-summary-list-widget-ang"] = {}), global.ng.common, global.ng.core, global.i3, global.i4, global.i6, global.i7, global.i10, global.i1$1, global.i5, global.i2, global.rxjs, global.rxjs.operators, global.i1, global.webSdk));
})(this, (function (exports, i8, i0, i3, i4, i6, i7, i10, i1$1, i5, i2, rxjs, operators, i1, webSdk) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i10__namespace = /*#__PURE__*/_interopNamespace(i10);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var ProductKindsAccessDenied = /** @class */ (function () {
        function ProductKindsAccessDenied(response) {
            this.response = response;
            this.kind = 'ProductKindsAccessDenied';
            this.messages = ((response.error || {}).errors || []).map(function (e) { return e.message; });
        }
        return ProductKindsAccessDenied;
    }());
    var ProductKindsBadRequest = /** @class */ (function () {
        function ProductKindsBadRequest(response) {
            this.response = response;
            this.kind = 'ProductKindsBadRequest';
            this.messages = ((response.error || {}).errors || []).map(function (e) { return e.message; });
        }
        return ProductKindsBadRequest;
    }());
    var ProductKindsUnknownError = /** @class */ (function () {
        function ProductKindsUnknownError(response) {
            this.response = response;
            this.kind = 'ProductKindsUnknownError';
            this.messages = [response.message];
        }
        return ProductKindsUnknownError;
    }());
    var parseError = function (error) {
        if (error.error instanceof ErrorEvent) {
            return new ProductKindsUnknownError(error);
        }
        else {
            switch (error.status) {
                case 400:
                    return new ProductKindsBadRequest(error);
                case 401:
                    return new ProductKindsAccessDenied(error);
                case 403:
                    return new ProductKindsAccessDenied(error);
                default:
                    return new ProductKindsUnknownError(error);
            }
        }
    };

    /**
     * Service for fetching and storing product kinds
     *
     * This service relies on providers from `ProductSummaryListWidgetModule`.
     *
     * @see ProductSummaryListWidgetModule
     *
     * @usageNotes
     *
     * ### Ensure the ProductSummaryListWidgetModule is imported to your component module
     *
     * ```ts
     * @NgModule({
     *   ...
     *   imports: [
     *     ...
     *     ProductSummaryListWidgetModule,
     *   ],
     * })
     * export class MyWidgetModule {}
     * ```
     *
     * ### Inject this service into your component
     *
     * ```ts
     * @Component({
     *   ...
     *   providers: [ProductSummaryService],
     * })
     *  export class MyComponent {
     * ```
     */
    var ProductSummaryBaseService = /** @class */ (function () {
        function ProductSummaryBaseService() {
            this.listParams = new rxjs.BehaviorSubject({});
            this.productKindsRefresh = new rxjs.BehaviorSubject(false);
            /**
             * Used to store the error occured during loading of accounts
             */
            this.error = new rxjs.BehaviorSubject(undefined);
            /**
             * List of accounts fetched from the server
             */
            this.isLoading = new rxjs.BehaviorSubject(false);
        }
        /**
         * @internal
         */
        ProductSummaryBaseService.prototype.ngOnDestroy = function () {
            this.error.complete();
            this.productKindsRefresh.complete();
        };
        /**
         * Refreshes the list of product kinds
         * Causes refetching data
         */
        ProductSummaryBaseService.prototype.refreshProductKinds = function () {
            this.productKindsRefresh.next(true);
        };
        return ProductSummaryBaseService;
    }());
    ProductSummaryBaseService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryBaseService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ProductSummaryBaseService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryBaseService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryBaseService, decorators: [{
                type: i0.Injectable
            }] });

    var clearUndefinedProperties$1 = function (obj) { return JSON.parse(JSON.stringify(obj)); };
    var aggregatedToTotalBalance = function (aggregatedBalance) { return ({
        aggregatedBalance: aggregatedBalance.value || '',
        currency: aggregatedBalance.currency || '',
    }); };
    var hasVisibleProducts$1 = function (products) { return products.some(function (product) { return product && i2.isProductVisible(product); }); };
    var getProductKind = function (kind) {
        switch (kind) {
            case 'currentAccounts':
                return i2.ProductKindUri.CURRENT_ACCOUNT;
            case 'savingsAccounts':
                return i2.ProductKindUri.SAVINGS_ACCOUNT;
            case 'termDeposits':
                return i2.ProductKindUri.TERM_DEPOSIT;
            case 'loans':
                return i2.ProductKindUri.LOAN;
            case 'creditCards':
                return i2.ProductKindUri.CREDIT_CARD;
            case 'debitCards':
                return i2.ProductKindUri.DEBIT_CARD;
            case 'investmentAccounts':
                return i2.ProductKindUri.INVESTMENT_ACCOUNT;
            default:
                return kind;
        }
    };
    var objectToProductKind$1 = function (kind, productKind) {
        var hasProducts = productKind && productKind.products && productKind.products.length > 0;
        if (hasProducts && hasVisibleProducts$1(productKind.products)) {
            var products = productKind.products;
            return Object.assign({ id: kind, name: productKind.name, aggregatedBalance: productKind.aggregatedBalance ? productKind.aggregatedBalance.value : undefined, currency: productKind.aggregatedBalance ? productKind.aggregatedBalance.currency : undefined, products: products
                    .filter(i2.isProductVisible)
                    .map(function (product) { return (Object.assign(Object.assign({}, product), { kind: kind, productKindUri: getProductKind(kind) })); }) }, (productKind.additions ? { additions: productKind.additions } : {}));
        }
        return undefined;
    };
    var arrayToProductKindList = function (obj) { return obj.map(function (element) { return element && objectToProductKind$1(element.name, element); }).filter(Boolean); };
    var flattenArray = function (arr) { return [].concat.apply([], __spreadArray([], __read(arr))); };
    var toProductKindList$1 = function (res) {
        var products = Object.entries(res)
            .filter(function (_a) {
            var _b = __read(_a, 1), key = _b[0];
            return key !== 'aggregatedBalance';
        })
            .map(function (_a) {
            var _b = __read(_a, 2), kind = _b[0], value = _b[1];
            if (!Array.isArray(value)) {
                return objectToProductKind$1(kind, value);
            }
            return arrayToProductKindList(value);
        })
            .filter(Boolean);
        return flattenArray(products);
    };
    var responseToProductKinds$1 = function (res) { return clearUndefinedProperties$1(Object.assign({ total: res && res.aggregatedBalance ? aggregatedToTotalBalance(res.aggregatedBalance) : undefined, productKinds: res ? toProductKindList$1(res) : [] }, (res && res.additions ? { additions: res.additions } : {}))); };
    /**
     * Service for fetching and storing product kinds
     *
     * This service relies on providers from `ProductSummaryListWidgetModule`.
     *
     * @see ProductSummaryListWidgetModule
     *
     * @usageNotes
     *
     * ### Ensure the ProductSummaryListWidgetModule is imported to your component module
     *
     * ```ts
     * @NgModule({
     *   ...
     *   imports: [
     *     ...
     *     ProductSummaryListWidgetModule,
     *   ],
     * })
     * export class MyWidgetModule {}
     * ```
     *
     * ### Inject this service into your component
     *
     * ```ts
     * @Component({
     *   ...
     *   providers: [ProductSummaryService],
     * })
     *  export class MyComponent {
     * ```
     */
    var ProductSummaryService = /** @class */ (function (_super) {
        __extends(ProductSummaryService, _super);
        function ProductSummaryService(productSummaryDataService) {
            var _this = _super.call(this) || this;
            _this.productSummaryDataService = productSummaryDataService;
            _this.productKinds = rxjs.combineLatest(_this.listParams.pipe(operators.distinctUntilChanged()), // [NOTE] This may require a compare function if `ListParams` isn't a primitive
            _this.productKindsRefresh).pipe(operators.tap(function () {
                _this.isLoading.next(true);
            }), i2.cacheRequest(function (_a) {
                var _b = __read(_a, 1), params = _b[0];
                return _this.productSummaryDataService.getProductSummary(params).pipe(operators.map(function (res) { return responseToProductKinds$1(res); }), operators.catchError(function (error) {
                    _this.error.next(parseError(error));
                    return rxjs.of(undefined);
                }));
            }), operators.tap(function () {
                _this.isLoading.next(false);
            }));
            return _this;
        }
        return ProductSummaryService;
    }(ProductSummaryBaseService));
    ProductSummaryService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryService, deps: [{ token: i1__namespace.ProductSummaryHttpService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ProductSummaryService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.ProductSummaryHttpService }]; } });

    var WidgetProperty = {
        SHOW_ICONS: 'showIcons',
        EVENT_REFRESH_ACCOUNT_LIST: 'event.refreshAccountsList',
        OUTPUT_SELECTED_ACCOUNT: 'output.selectedAccount',
    };

    /**
     * A widget for displaying a list of accounts
     *
     * @usageNotes
     *
     * ### Include this widget in your `AppModule`:
     *
     * ```typescript
     * @NgModule({
     *   imports: [
     *     ProductSummaryListWidgetModule,
     *   ],
     *   ...
     * })
     * export class AppModule {}
     * ```
     *
     * ### Include this widget (standalone model)
     *
     * ```typescript
     * export const environment: Environment = {
     *   ...
     *   bootstrap: {
     *     pageModel: {
     *       name: 'root',
     *       properties: {},
     *       children: [
     *         {
     *           name: 'product-summary-account-details-widget-ang',
     *           properties: {
     *            classId: 'ProductSummaryListWidgetComponent',
     *            showIcons: true,
     *           },
     *         },
     *       ],
     *     },
     *   },
     * };
     * ```
     */
    // Temporary template. TODO: This component is to be broken down into atomic components
    var ProductSummaryListBaseComponent = /** @class */ (function () {
        // Temporary template. TODO: This component is to be broken down into atomic components
        /**
         * Constructor
         *
         * @param service
         * @param productsExternalInfoService
         * @param eventBusService
         */
        function ProductSummaryListBaseComponent(service, productsExternalInfoService, eventBusService) {
            var _this = this;
            this.service = service;
            this.productsExternalInfoService = productsExternalInfoService;
            this.eventBusService = eventBusService;
            /**
             * @internal
             */
            this.hostRef = this;
            /**
             * If the fetching of the product kinds failed, this property
             * holds the errors coming from the server
             */
            this.error = this.service.error;
            /**
             * Product kinds fetched from the server
             */
            this.items = new rxjs.Observable(function (subscriber) {
                var subscriptions = [];
                subscriptions.push(_this.service.productKinds.subscribe(function (productKinds) {
                    var products = _this.getProductsFromProductKinds(productKinds);
                    subscriber.next(productKinds);
                    if (products.some(i2.hasExternalInfo)) {
                        subscriptions.push(_this.productsExternalInfoService
                            .getProductsWithExternalInfo(products)
                            .pipe(operators.map(function (items) { return _this.addProductsToProductKinds(items, productKinds); }))
                            .subscribe(subscriber));
                    }
                }, subscriber.error));
                return function () { return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); }); };
            });
            /**
             * Defines the loading state during the loading of data.
             */
            this.isLoading = this.service.isLoading;
            this.widgetPropertiesSubscription = new rxjs.Subscription();
            /**
             * Indicates whether the product kind card is expanded or collapsed.
             */
            this.isExpanded = {};
            /**
             * Defines whether to show product kind icons.
             */
            this.showIcons = new rxjs.BehaviorSubject(true);
            /**
             * Output emits id from selected account as string
             */
            this.selectedAccount = new i0.EventEmitter();
            /**
             * Output emits selected product
             */
            this.selectProduct = new i0.EventEmitter();
            this.refreshAccountsEventNames = [];
            this.refreshAccountsHandler = this.refreshAccounts.bind(this);
            /**
             * Joins the specified error messages to display on the template
             *
             * @param messages
             */
            this.processErrorMessages = i2.processErrorMessages;
            this.getProductsFromProductKinds = function (productKinds) { return productKinds
                ? productKinds.productKinds.reduce(function (products, kind) { return products.concat(kind.products || []); }, [])
                : []; };
            this.addProductsToProductKinds = function (products, productKinds) { return (Object.assign(Object.assign({}, productKinds), { productKinds: productKinds.productKinds.map(function (account) {
                    var _a;
                    return (Object.assign(Object.assign({}, account), { products: (_a = account.products) === null || _a === void 0 ? void 0 : _a.map(function (product) { return (Object.assign(Object.assign({}, product), (products.find(function (item) { return item.id === product.id; }) || {}))); }) }));
                }) })); };
        }
        Object.defineProperty(ProductSummaryListBaseComponent.prototype, "showIconsValue", {
            set: function (value) {
                this.showIcons.next(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ProductSummaryListBaseComponent.prototype, "refreshAccountListEvent", {
            /**
             * Comma separated list of event names to subscribe to perform accounts refresh
             */
            set: function (value) {
                if (value && typeof value === 'string') {
                    this.refreshAccountsEventNames = value.replace(/ /g, '').split(',');
                    this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler, false);
                    this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler);
                }
            },
            enumerable: false,
            configurable: true
        });
        /**
         * @internal
         */
        ProductSummaryListBaseComponent.prototype.ngOnDestroy = function () {
            this.handleEvents(this.refreshAccountsEventNames, this.refreshAccountsHandler, false);
            this.showIcons.unsubscribe();
        };
        /**
         * Emit the passed `id` to the `selectedAccount` output
         *
         * @param id
         */
        ProductSummaryListBaseComponent.prototype.selectAccount = function (id) {
            this.selectedAccount.emit(id);
        };
        /**
         * Refreshes list of accounts
         */
        ProductSummaryListBaseComponent.prototype.refreshAccounts = function () {
            this.service.refreshProductKinds();
        };
        /**
         * Subscribes or Unsubscribes on the passed eventNames.
         *
         * @param eventNames list of events.
         * @param listener PubsubListener to be invoced on the events.
         * @param subscribe defines whether the function subscribes or unsubscribes (default: true).
         */
        ProductSummaryListBaseComponent.prototype.handleEvents = function (eventNames, listener, subscribe) {
            var _this = this;
            if (subscribe === void 0) { subscribe = true; }
            eventNames.forEach(function (event) {
                if (subscribe) {
                    _this.eventBusService.subscribe(event, listener);
                }
                else {
                    _this.eventBusService.unsubscribe(event, listener);
                }
            });
        };
        return ProductSummaryListBaseComponent;
    }());
    ProductSummaryListBaseComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListBaseComponent, deps: [{ token: ProductSummaryBaseService }, { token: i2__namespace.ProductsExternalInfoService }, { token: webSdk.PUBSUB }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListBaseComponent.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListBaseComponent, inputs: { showIconsValue: ["showIcons", "showIconsValue"], refreshAccountListEvent: ["event.refreshAccountsList", "refreshAccountListEvent"] }, outputs: { selectedAccount: "selectedAccount", selectProduct: "selectProduct" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListBaseComponent, decorators: [{
                type: i0.Directive
            }], ctorParameters: function () {
            return [{ type: ProductSummaryBaseService }, { type: i2__namespace.ProductsExternalInfoService }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [webSdk.PUBSUB]
                        }] }];
        }, propDecorators: { showIconsValue: [{
                    type: i0.Input,
                    args: [WidgetProperty.SHOW_ICONS]
                }], refreshAccountListEvent: [{
                    type: i0.Input,
                    args: [WidgetProperty.EVENT_REFRESH_ACCOUNT_LIST]
                }], selectedAccount: [{
                    type: i0.Output
                }], selectProduct: [{
                    type: i0.Output
                }] } });
    /**
     * This is an extension slot to be used for customizing the entire view
     *
     * @usageNotes
     *
     * ### Customize the entire view
     *
     * ```html
     * <ng-template
     *   bbProductSummaryCustomizable
     *   let-hostRef
     *   let-items="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryCustomizableDirective, _super);
        function ProductSummaryCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryCustomizableDirective, selector: "[bbProductSummaryCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing the header of the view
     *
     * @usageNotes
     *
     * ### Customize the header
     *
     * ```html
     * <ng-template
     *   bbProductSummaryHeaderCustomizable
     *   let-hostRef
     *   let-items="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryHeaderCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryHeaderCustomizableDirective, _super);
        function ProductSummaryHeaderCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryHeaderCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryHeaderCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryHeaderCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryHeaderCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryHeaderCustomizableDirective, selector: "[bbProductSummaryHeaderCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryHeaderCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryHeaderCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing the body of the view
     *
     * @usageNotes
     *
     * ### Customize the body
     *
     * ```html
     * <ng-template
     *   bbProductSummaryBodyCustomizable
     *   let-hostRef
     *   let-items="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryBodyCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryBodyCustomizableDirective, _super);
        function ProductSummaryBodyCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryBodyCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryBodyCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryBodyCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryBodyCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryBodyCustomizableDirective, selector: "[bbProductSummaryBodyCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryBodyCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryBodyCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing every item in the list
     *
     * @usageNotes
     *
     * ### Customize items
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemCustomizableDirective, _super);
        function ProductSummaryListItemCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemCustomizableDirective, selector: "[bbProductSummaryListItemCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing items with the `currentAccounts` productKind
     *
     * @usageNotes
     *
     * ### Customize `Current Accounts`
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemCurrentAccountCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemCurrentAccountCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemCurrentAccountCustomizableDirective, _super);
        function ProductSummaryListItemCurrentAccountCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemCurrentAccountCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemCurrentAccountCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemCurrentAccountCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemCurrentAccountCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemCurrentAccountCustomizableDirective, selector: "[bbProductSummaryListItemCurrentAccountCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemCurrentAccountCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemCurrentAccountCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing items with the `savingsAccounts` productKind
     *
     * @usageNotes
     *
     * ### Customize `Savings Accounts`
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemSavingsAccountCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemSavingsAccountCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemSavingsAccountCustomizableDirective, _super);
        function ProductSummaryListItemSavingsAccountCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemSavingsAccountCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemSavingsAccountCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemSavingsAccountCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemSavingsAccountCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemSavingsAccountCustomizableDirective, selector: "[bbProductSummaryListItemSavingsAccountCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemSavingsAccountCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemSavingsAccountCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing items with the `termDeposits` productKind
     *
     * @usageNotes
     *
     * ### Customize `Term Deposits`
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemTermDepositCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemTermDepositCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemTermDepositCustomizableDirective, _super);
        function ProductSummaryListItemTermDepositCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemTermDepositCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemTermDepositCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemTermDepositCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemTermDepositCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemTermDepositCustomizableDirective, selector: "[bbProductSummaryListItemTermDepositCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemTermDepositCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemTermDepositCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing items with the `loans` productKind
     *
     * @usageNotes
     *
     * ### Customize `Loans`
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemLoanCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemLoanCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemLoanCustomizableDirective, _super);
        function ProductSummaryListItemLoanCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemLoanCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemLoanCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemLoanCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemLoanCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemLoanCustomizableDirective, selector: "[bbProductSummaryListItemLoanCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemLoanCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemLoanCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing items with the `creditCards` productKind
     *
     * @usageNotes
     *
     * ### Customize `Credit Cards`
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemCreditCardCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemCreditCardCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemCreditCardCustomizableDirective, _super);
        function ProductSummaryListItemCreditCardCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemCreditCardCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemCreditCardCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemCreditCardCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemCreditCardCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemCreditCardCustomizableDirective, selector: "[bbProductSummaryListItemCreditCardCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemCreditCardCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemCreditCardCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing items with the `debitCards` productKind
     *
     * @usageNotes
     *
     * ### Customize `Debit Cards`
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemDebitCardCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemDebitCardCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemDebitCardCustomizableDirective, _super);
        function ProductSummaryListItemDebitCardCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemDebitCardCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemDebitCardCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemDebitCardCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemDebitCardCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemDebitCardCustomizableDirective, selector: "[bbProductSummaryListItemDebitCardCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemDebitCardCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemDebitCardCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing items with the `investmentAccounts` productKind
     *
     * @usageNotes
     *
     * ### Customize `Investment Accounts`
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemInvestmentAccountCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemInvestmentAccountCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemInvestmentAccountCustomizableDirective, _super);
        function ProductSummaryListItemInvestmentAccountCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemInvestmentAccountCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemInvestmentAccountCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemInvestmentAccountCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemInvestmentAccountCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemInvestmentAccountCustomizableDirective, selector: "[bbProductSummaryListItemInvestmentAccountCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemInvestmentAccountCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemInvestmentAccountCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing items with a custom (default) productKind
     *
     * @usageNotes
     *
     * ### Customize custom product kinds
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemOtherProductKindsCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemOtherProductKindsCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemOtherProductKindsCustomizableDirective, _super);
        function ProductSummaryListItemOtherProductKindsCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemOtherProductKindsCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemOtherProductKindsCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemOtherProductKindsCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemOtherProductKindsCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemOtherProductKindsCustomizableDirective, selector: "[bbProductSummaryListItemOtherProductKindsCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemOtherProductKindsCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemOtherProductKindsCustomizable]',
                    }]
            }] });
    /**
     * This is an extension slot to be used for customizing the loading view
     *
     * @usageNotes
     *
     * ### Customize the loading view
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListLoadingCustomizable
     *   let-hostRef>
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListLoadingCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListLoadingCustomizableDirective, _super);
        function ProductSummaryListLoadingCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListLoadingCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListLoadingCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListLoadingCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListLoadingCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListLoadingCustomizableDirective, selector: "[bbProductSummaryListLoadingCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListLoadingCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListLoadingCustomizable]',
                    }]
            }] });

    /**
     * A widget for displaying a list of accounts
     *
     * @usageNotes
     *
     * ### Include this widget in your `AppModule`:
     *
     * ```typescript
     * @NgModule({
     *   imports: [
     *     ProductSummaryListWidgetModule,
     *   ],
     *   ...
     * })
     * export class AppModule {}
     * ```
     *
     * ### Include this widget (standalone model)
     *
     * ```typescript
     * export const environment: Environment = {
     *   ...
     *   bootstrap: {
     *     pageModel: {
     *       name: 'root',
     *       properties: {},
     *       children: [
     *         {
     *           name: 'product-summary-account-details-widget-ang',
     *           properties: {
     *            classId: 'ProductSummaryListWidgetComponent',
     *            showIcons: true,
     *           },
     *         },
     *       ],
     *     },
     *   },
     * };
     * ```
     */
    // Temporary template. TODO: This component is to be broken down into atomic components
    var ProductSummaryListWidgetComponent = /** @class */ (function (_super) {
        __extends(ProductSummaryListWidgetComponent, _super);
        /**
         * Constructor
         *
         * @param service
         * @param productsExternalInfoService
         * @param eventBusService
         */
        function ProductSummaryListWidgetComponent(service, productsExternalInfoService, eventBusService) {
            var _this = _super.call(this, service, productsExternalInfoService, eventBusService) || this;
            _this.service = service;
            _this.productsExternalInfoService = productsExternalInfoService;
            _this.eventBusService = eventBusService;
            return _this;
        }
        return ProductSummaryListWidgetComponent;
    }(ProductSummaryListBaseComponent));
    ProductSummaryListWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListWidgetComponent, deps: [{ token: ProductSummaryService }, { token: i2__namespace.ProductsExternalInfoService }, { token: webSdk.PUBSUB }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductSummaryListWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListWidgetComponent, selector: "bb-product-summary-list-widget", providers: [ProductSummaryService], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"((isLoading | async) === false) && (items | async) as items; else loadingTemplate\">\n  <ng-container\n    bbProductSummaryCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n</ng-container>\n\n<!-- Product summary wrapper template -->\n<ng-template\n  bbProductSummaryCustomizable\n  let-hostRef\n  let-items=\"context\">\n  <ng-container\n    bbProductSummaryHeaderCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n\n  <ng-container\n    bbProductSummaryBodyCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n</ng-template>\n\n<!-- Product summary header template -->\n<ng-template\n  bbProductSummaryHeaderCustomizable\n  let-hostRef\n  let-items=\"context\">\n  <div\n    *ngIf=\"items.total\"\n    class=\"bb-product-summary-balance\">\n    <div class=\"bb-product-summary-balance__tooltip\">\n      <span\n        class=\"bb-product-summary-balance__title\"\n        data-role=\"label-total-validation\"\n        i18n=\"Total balance label|product summary header label@@product.summary.header.label.total.balance\"\n      >\n        Total balance\n      </span>\n      <bb-icon-ui\n        class=\"bb-text-support\"\n        data-role=\"toggle-tooltip-icon\"\n        tabindex=\"0\"\n        size=\"sm\"\n        name=\"info\"\n        aria-label=\"Toggle tooltip for Total balance\"\n        i18n-aria-label=\"Toggle tooltip for Total balance|@@product.summary.header.account.consumedAmount.aria.label.openclose\"\n        bbTooltip=\"Total balance\"\n        i18n-bbTooltip=\"Total balance|Total balance label@@product.summary.header.account.tooltip.consumedAmount\"\n        triggers=\"focus hover\"\n      ></bb-icon-ui>\n    </div>\n    <bb-amount-ui\n      data-role=\"total-validation-amount\"\n      class=\"bb-product-summary-balance__amount\"\n      [currency]=\"items.total.currency\"\n      [amount]=\"items.total.aggregatedBalance\"\n      >\n    </bb-amount-ui>\n  </div>\n</ng-template>\n\n<!-- Product summary body template -->\n<ng-template\n  bbProductSummaryBodyCustomizable\n  let-hostRef\n  let-items=\"context\"\n>\n  <ng-container *ngFor=\"let productKind of items.productKinds\">\n    <ng-container\n      *ngIf=\"productKind\"\n      bbProductSummaryListItemCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\"\n    ></ng-container>\n  </ng-container>\n</ng-template>\n\n<!-- Product summary item -->\n<ng-template\n  bbProductSummaryListItemCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <ng-container\n    [ngSwitch]=\"productKind.id\">\n\n    <!-- Current Account -->\n    <ng-container\n      *ngSwitchCase=\"'currentAccounts'\"\n      bbProductSummaryListItemCurrentAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Savings Account -->\n    <ng-container\n      *ngSwitchCase=\"'savingsAccounts'\"\n      bbProductSummaryListItemSavingsAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Term Deposit -->\n    <ng-container\n      *ngSwitchCase=\"'termDeposits'\"\n      bbProductSummaryListItemTermDepositCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Loan -->\n    <ng-container\n      *ngSwitchCase=\"'loans'\"\n      bbProductSummaryListItemLoanCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Credit Card -->\n    <ng-container\n      *ngSwitchCase=\"'creditCards'\"\n      bbProductSummaryListItemCreditCardCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Debit Card -->\n    <ng-container\n      *ngSwitchCase=\"'debitCards'\"\n      bbProductSummaryListItemDebitCardCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Investment Account -->\n    <ng-container\n      *ngSwitchCase=\"'investmentAccounts'\"\n      bbProductSummaryListItemInvestmentAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!--\n      Other (Default):\n      This template can be used to add more custom productKinds.\n      The productKind is passed to the template so a customer can add\n      additional switch/if statements to determine what product template should be displayed\n    -->\n    <ng-container\n      *ngSwitchDefault\n      bbProductSummaryListItemOtherProductKindsCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n  </ng-container>\n</ng-template>\n\n<!-- Product summary card: Current Account -->\n<ng-template\n  bbProductSummaryListItemCurrentAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"current-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Savings Account -->\n<ng-template\n  bbProductSummaryListItemSavingsAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"savings-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Term Deposit -->\n<ng-template\n  bbProductSummaryListItemTermDepositCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"term-deposits\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Loan -->\n<ng-template\n  bbProductSummaryListItemLoanCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"loans\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Credit Card -->\n<ng-template\n  bbProductSummaryListItemCreditCardCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"credit-cards\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Debit Card -->\n<ng-template\n  bbProductSummaryListItemDebitCardCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"debit-cards\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Investment Account -->\n<ng-template\n  bbProductSummaryListItemInvestmentAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"investment-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Other Product Kinds -->\n<ng-template\n  bbProductSummaryListItemOtherProductKindsCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"custom-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary details loading template -->\n<ng-template #loadingTemplate>\n  <ng-container bbProductSummaryListLoadingCustomizable\n    [bbHostRef]=\"hostRef\">\n  </ng-container>\n</ng-template>\n\n<ng-template\n  bbProductSummaryListLoadingCustomizable\n  let-hostRef>\n  <ng-container *ngIf=\"hostRef.error | async as error; else loading\">\n    <bb-empty-state-ui\n      title=\"\"\n      [subtitle]=\"hostRef.processErrorMessages(error.messages)\"\n      iconModifier=\"error\"\n      iconSize=\"xxl\"\n      iconColor=\"gray\"\n      iconClasses=\"text-muted\"\n    ></bb-empty-state-ui>\n  </ng-container>\n  <ng-template #loading>\n    <bb-loading-indicator-ui\n      i18n-text=\"@@product.details.loadingAccounts\"\n      [text]=\"'Loading Accounts...'\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n", components: [{ type: i3__namespace.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i4__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i5__namespace.ProductKindCollapsibleComponent, selector: "bb-product-kind-collapsible-ui", inputs: ["isExpanded", "showIcons", "iconName", "productKind"], outputs: ["selectAccount", "selectProduct", "isExpandedChange"] }, { type: i6__namespace.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i7__namespace.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i8__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: ProductSummaryCustomizableDirective, selector: "[bbProductSummaryCustomizable]" }, { type: ProductSummaryHeaderCustomizableDirective, selector: "[bbProductSummaryHeaderCustomizable]" }, { type: ProductSummaryBodyCustomizableDirective, selector: "[bbProductSummaryBodyCustomizable]" }, { type: i10__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i8__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: ProductSummaryListItemCustomizableDirective, selector: "[bbProductSummaryListItemCustomizable]" }, { type: i8__namespace.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i8__namespace.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: ProductSummaryListItemCurrentAccountCustomizableDirective, selector: "[bbProductSummaryListItemCurrentAccountCustomizable]" }, { type: ProductSummaryListItemSavingsAccountCustomizableDirective, selector: "[bbProductSummaryListItemSavingsAccountCustomizable]" }, { type: ProductSummaryListItemTermDepositCustomizableDirective, selector: "[bbProductSummaryListItemTermDepositCustomizable]" }, { type: ProductSummaryListItemLoanCustomizableDirective, selector: "[bbProductSummaryListItemLoanCustomizable]" }, { type: ProductSummaryListItemCreditCardCustomizableDirective, selector: "[bbProductSummaryListItemCreditCardCustomizable]" }, { type: ProductSummaryListItemDebitCardCustomizableDirective, selector: "[bbProductSummaryListItemDebitCardCustomizable]" }, { type: ProductSummaryListItemInvestmentAccountCustomizableDirective, selector: "[bbProductSummaryListItemInvestmentAccountCustomizable]" }, { type: i8__namespace.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { type: ProductSummaryListItemOtherProductKindsCustomizableDirective, selector: "[bbProductSummaryListItemOtherProductKindsCustomizable]" }, { type: ProductSummaryListLoadingCustomizableDirective, selector: "[bbProductSummaryListLoadingCustomizable]" }], pipes: { "async": i8__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-summary-list-widget',
                        templateUrl: 'product-summary-list-widget.component.html',
                        providers: [ProductSummaryService],
                    }]
            }], ctorParameters: function () {
            return [{ type: ProductSummaryService }, { type: i2__namespace.ProductsExternalInfoService }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [webSdk.PUBSUB]
                        }] }];
        } });

    var clearUndefinedProperties = function (obj) { return JSON.parse(JSON.stringify(obj)); };
    var getBalanceFromBalanceAggregation = function (balanceAggregation, groupName) {
        if (balanceAggregation[groupName] === undefined)
            return undefined;
        var _k = __read(Object.entries(balanceAggregation[groupName])[0], 2), currency = _k[0], amount = _k[1].amount;
        return {
            aggregatedBalance: amount || '',
            currency: currency,
        };
    };
    var isProductVisible = function (element) { return element.attributes.visible === undefined || element.attributes.visible.value === 'true'; };
    var hasVisibleProducts = function (elements) {
        if (elements === void 0) { elements = []; }
        return elements.some(isProductVisible);
    };
    var mapArrangementGroupAttributes = function (arrangementGroupAttributes) {
        var mappedAttributes = {};
        Object.entries(arrangementGroupAttributes).forEach(function (_k) {
            var _l = __read(_k, 2), key = _l[0], variant = _l[1];
            switch (variant.type) {
                case 'BOOLEAN':
                    mappedAttributes[key] = variant.value === 'true';
                    break;
                case 'DECIMAL':
                    mappedAttributes[key] = Number(variant.value);
                    break;
                case 'NUMBER':
                    mappedAttributes[key] = Number(variant.value);
                    break;
                case 'INTEGER':
                    mappedAttributes[key] = Number(variant.value);
                    break;
                default:
                    mappedAttributes[key] = variant.value;
            }
        });
        return mappedAttributes;
    };
    var getProductKindName = function (kindUri) {
        switch (kindUri) {
            case i2.ProductKindUri.CURRENT_ACCOUNT:
                return i2.ProductKindNames.CURRENT_ACCOUNT;
            case i2.ProductKindUri.SAVINGS_ACCOUNT:
                return i2.ProductKindNames.SAVINGS_ACCOUNT;
            case i2.ProductKindUri.TERM_DEPOSIT:
                return i2.ProductKindNames.TERM_DEPOSIT;
            case i2.ProductKindUri.LOAN:
                return i2.ProductKindNames.LOAN;
            case i2.ProductKindUri.CREDIT_CARD:
                return i2.ProductKindNames.CREDIT_CARD;
            case i2.ProductKindUri.DEBIT_CARD:
                return i2.ProductKindNames.DEBIT_CARD;
            case i2.ProductKindUri.INVESTMENT_ACCOUNT:
                return i2.ProductKindNames.INVESTMENT_ACCOUNT;
            default:
                return kindUri;
        }
    };
    var objectToProductKind = function (groupName, group, balanceAggregation) {
        var _a;
        var hasProducts = group && group.elements && group.elements.length > 0;
        var balance = balanceAggregation ? getBalanceFromBalanceAggregation(balanceAggregation, groupName) : undefined;
        if (hasProducts && hasVisibleProducts(group.elements)) {
            return {
                id: groupName,
                name: groupName,
                aggregatedBalance: balance === null || balance === void 0 ? void 0 : balance.aggregatedBalance,
                currency: balance === null || balance === void 0 ? void 0 : balance.currency,
                products: (_a = group.elements) === null || _a === void 0 ? void 0 : _a.filter(isProductVisible).map(function (element) {
                    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
                    var product = mapArrangementGroupAttributes(element.attributes);
                    return Object.assign(Object.assign({}, product), { id: element.id, kind: groupName, bookedBalance: (_b = ((_a = product.bookedBalance) !== null && _a !== void 0 ? _a : product.primaryBalance)) === null || _b === void 0 ? void 0 : _b.toString(), principalAmount: (_c = product.principalAmount) !== null && _c !== void 0 ? _c : product.primaryBalance, currentInvestmentValue: (_e = ((_d = product.currentInvestmentValue) !== null && _d !== void 0 ? _d : product.primaryBalance)) === null || _e === void 0 ? void 0 : _e.toString(), availableBalance: (_g = ((_f = product.availableBalance) !== null && _f !== void 0 ? _f : product.secondaryBalance)) === null || _g === void 0 ? void 0 : _g.toString(), accruedInterest: (_h = product.accruedInterest) !== null && _h !== void 0 ? _h : product.secondaryBalance, creditLimitUsage: (_j = product.creditLimitUsage) !== null && _j !== void 0 ? _j : product.tertiaryBalance, productKindName: product.productKindUri ? getProductKindName(product.productKindUri) : undefined, state: product.state ? { state: product.state } : undefined });
                }),
            };
        }
        return undefined;
    };
    var toProductKindList = function (groups, balanceAggregation) {
        var product = Object.entries(groups)
            .filter(function (_k) {
            var _l = __read(_k, 1), groupName = _l[0];
            return groupName !== 'overdueAccounts';
        })
            .map(function (_k) {
            var _l = __read(_k, 2), groupName = _l[0], group = _l[1];
            return objectToProductKind(groupName, group, balanceAggregation);
        })
            .filter(Boolean);
        var overdueProductKind = objectToProductKind('overdueAccounts', groups['overdueAccounts'], balanceAggregation);
        if (overdueProductKind) {
            product = __spreadArray([overdueProductKind], __read(product));
        }
        return product;
    };
    var responseToProductKinds = function (res) {
        var _a, _b, _c;
        return clearUndefinedProperties({
            total: ((_a = res.metadata) === null || _a === void 0 ? void 0 : _a.balanceAggregations)
                ? getBalanceFromBalanceAggregation((_b = res.metadata) === null || _b === void 0 ? void 0 : _b.balanceAggregations, 'all')
                : undefined,
            productKinds: res && res.groups ? toProductKindList(res.groups, (_c = res.metadata) === null || _c === void 0 ? void 0 : _c.balanceAggregations) : [],
        });
    };
    /**
     * Service for fetching and storing product kinds
     *
     * This service relies on providers from `ProductSummaryListWidgetModule`.
     *
     * @see ProductSummaryListWidgetModule
     *
     * @usageNotes
     *
     * ### Ensure the ProductSummaryListWidgetModule is imported to your component module
     *
     * ```ts
     * @NgModule({
     *   ...
     *   imports: [
     *     ...
     *     ProductSummaryListWidgetModule,
     *   ],
     * })
     * export class MyWidgetModule {}
     * ```
     *
     * ### Inject this service into your component
     *
     * ```ts
     * @Component({
     *   ...
     *   providers: [ProductSummaryService],
     * })
     *  export class MyComponent {
     * ```
     */
    var ArrangementsService = /** @class */ (function (_super) {
        __extends(ArrangementsService, _super);
        function ArrangementsService(arrangementViewsHttpService) {
            var _this = _super.call(this) || this;
            _this.arrangementViewsHttpService = arrangementViewsHttpService;
            _this.viewNameSubject = new rxjs.ReplaySubject();
            _this.productKinds = rxjs.combineLatest([
                _this.viewNameSubject,
                _this.productKindsRefresh,
            ]).pipe(operators.tap(function () {
                _this.isLoading.next(true);
            }), operators.switchMap(function (_k) {
                var _l = __read(_k, 1), viewName = _l[0];
                return _this.arrangementViewsHttpService.getArrangementView({ viewName: viewName }).pipe(operators.map(function (res) { return responseToProductKinds(res); }), operators.catchError(function (error) {
                    _this.error.next(parseError(error));
                    return rxjs.of(undefined);
                }));
            }), operators.tap(function () {
                _this.isLoading.next(false);
            }));
            return _this;
        }
        ArrangementsService.prototype.setViewName = function (viewName) {
            this.viewNameSubject.next(viewName);
        };
        return ArrangementsService;
    }(ProductSummaryBaseService));
    ArrangementsService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementsService, deps: [{ token: i1__namespace.ArrangementViewsHttpService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ArrangementsService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementsService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementsService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.ArrangementViewsHttpService }]; } });

    /**
     * A widget for displaying a list of accounts
     *
     * @usageNotes
     *
     * ### Include this widget in your `AppModule`:
     *
     * ```typescript
     * @NgModule({
     *   imports: [
     *     ArrangementsListWidgetComponent,
     *   ],
     *   ...
     * })
     * export class AppModule {}
     * ```
     *
     * ### Include this widget (standalone model)
     *
     * ```typescript
     * export const environment: Environment = {
     *   ...
     *   bootstrap: {
     *     pageModel: {
     *       name: 'root',
     *       properties: {},
     *       children: [
     *         {
     *           name: 'product-summary-account-details-widget-ang',
     *           properties: {
     *            classId: 'ArrangementsListWidgetComponent',
     *            showIcons: true,
     *           },
     *         },
     *       ],
     *     },
     *   },
     * };
     * ```
     */
    var ArrangementsListWidgetComponent = /** @class */ (function (_super) {
        __extends(ArrangementsListWidgetComponent, _super);
        /**
         * Constructor
         *
         * @param service
         * @param productsExternalInfoService
         * @param eventBusService
         */
        function ArrangementsListWidgetComponent(service, productsExternalInfoService, eventBusService) {
            var _this = _super.call(this, service, productsExternalInfoService, eventBusService) || this;
            _this.service = service;
            _this.productsExternalInfoService = productsExternalInfoService;
            _this.eventBusService = eventBusService;
            /**
             * Emits arrangement id when pay now is clicked
             */
            _this.payNowClick = new i0.EventEmitter();
            return _this;
        }
        ArrangementsListWidgetComponent.prototype.ngOnInit = function () {
            if (this.viewName === undefined) {
                throw new Error('viewName is required');
            }
            else {
                this.service.setViewName(this.viewName);
            }
        };
        return ArrangementsListWidgetComponent;
    }(ProductSummaryListBaseComponent));
    ArrangementsListWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementsListWidgetComponent, deps: [{ token: ArrangementsService }, { token: i2__namespace.ProductsExternalInfoService }, { token: webSdk.PUBSUB }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ArrangementsListWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ArrangementsListWidgetComponent, selector: "bb-arrangements-list-widget", inputs: { viewName: "viewName" }, outputs: { payNowClick: "payNowClick" }, providers: [ArrangementsService], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"((isLoading | async) === false) && (items | async) as items; else loadingTemplate\">\n  <ng-container\n    bbProductSummaryCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n</ng-container>\n\n<!-- Product summary wrapper template -->\n<ng-template\n  bbProductSummaryCustomizable\n  let-hostRef\n  let-items=\"context\">\n  <ng-container\n    bbProductSummaryHeaderCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n\n  <ng-container\n    bbProductSummaryBodyCustomizable\n    [bbHostRef]=\"hostRef\"\n    [bbTemplateContext]=\"items\">\n  </ng-container>\n</ng-template>\n\n<!-- Product summary header template -->\n<ng-template\n  bbProductSummaryHeaderCustomizable\n  let-hostRef\n  let-items=\"context\">\n  <div\n    *ngIf=\"items.total\"\n    class=\"bb-product-summary-balance\">\n    <div class=\"bb-product-summary-balance__tooltip\">\n      <span\n        class=\"bb-product-summary-balance__title\"\n        data-role=\"label-total-validation\"\n        i18n=\"Total balance label|product summary header label@@product.summary.header.label.total.balance\"\n      >\n        Total balance\n      </span>\n      <bb-icon-ui\n        class=\"bb-text-support\"\n        data-role=\"toggle-tooltip-icon\"\n        tabindex=\"0\"\n        size=\"sm\"\n        name=\"info\"\n        aria-label=\"Toggle tooltip for Total balance\"\n        i18n-aria-label=\"Toggle tooltip for Total balance|@@product.summary.header.account.consumedAmount.aria.label.openclose\"\n        bbTooltip=\"Total balance\"\n        i18n-bbTooltip=\"Total balance|Total balance label@@product.summary.header.account.tooltip.consumedAmount\"\n        triggers=\"focus hover\"\n      ></bb-icon-ui>\n    </div>\n    <bb-amount-ui\n      data-role=\"total-validation-amount\"\n      class=\"bb-product-summary-balance__amount\"\n      [currency]=\"items.total.currency\"\n      [amount]=\"items.total.aggregatedBalance\"\n      >\n    </bb-amount-ui>\n  </div>\n</ng-template>\n\n<!-- Product summary body template -->\n<ng-template\n  bbProductSummaryBodyCustomizable\n  let-hostRef\n  let-items=\"context\"\n>\n  <ng-container *ngFor=\"let productKind of items.productKinds\">\n    <ng-container\n      *ngIf=\"productKind\"\n      bbProductSummaryListItemCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\"\n    ></ng-container>\n  </ng-container>\n</ng-template>\n\n<!-- Product summary item -->\n<ng-template\n  bbProductSummaryListItemCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <ng-container\n    [ngSwitch]=\"productKind.id\">\n\n    <!-- Needs Attention Accounts -->\n    <ng-container\n      bbProductSummaryListItemNeedsAttentionAccountsCustomizable\n      *ngSwitchCase=\"'overdueAccounts'\"\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Current Account -->\n    <ng-container\n      *ngSwitchCase=\"'currentAccounts'\"\n      bbProductSummaryListItemCurrentAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Savings Account -->\n    <ng-container\n      *ngSwitchCase=\"'savingsAccounts'\"\n      bbProductSummaryListItemSavingsAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Term Deposit -->\n    <ng-container\n      *ngSwitchCase=\"'termDeposits'\"\n      bbProductSummaryListItemTermDepositCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Loan -->\n    <ng-container\n      *ngSwitchCase=\"'loans'\"\n      bbProductSummaryListItemLoanCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Credit Card -->\n    <ng-container\n      *ngSwitchCase=\"'creditCards'\"\n      bbProductSummaryListItemCreditCardCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Debit Card -->\n    <ng-container\n      *ngSwitchCase=\"'debitCards'\"\n      bbProductSummaryListItemDebitCardCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!-- Investment Account -->\n    <ng-container\n      *ngSwitchCase=\"'investmentAccounts'\"\n      bbProductSummaryListItemInvestmentAccountCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n    <!--\n      Other (Default):\n      This template can be used to add more custom productKinds.\n      The productKind is passed to the template so a customer can add\n      additional switch/if statements to determine what product template should be displayed\n    -->\n    <ng-container\n      *ngSwitchDefault\n      bbProductSummaryListItemOtherProductKindsCustomizable\n      [bbHostRef]=\"hostRef\"\n      [bbTemplateContext]=\"productKind\">\n    </ng-container>\n\n  </ng-container>\n</ng-template>\n\n\n<!-- Product summary card: Needs Attention Accounts -->\n<ng-template\n  bbProductSummaryListItemNeedsAttentionAccountsCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-needs-attention-ui\n    data-role=\"overdue-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n    (payNowClick)=\"hostRef.payNowClick.emit($event)\"\n  ></bb-product-needs-attention-ui>\n</ng-template>\n\n<!-- Product summary card: Current Account -->\n<ng-template\n  bbProductSummaryListItemCurrentAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"current-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Savings Account -->\n<ng-template\n  bbProductSummaryListItemSavingsAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"savings-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Term Deposit -->\n<ng-template\n  bbProductSummaryListItemTermDepositCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"term-deposits\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Loan -->\n<ng-template\n  bbProductSummaryListItemLoanCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"loans\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Credit Card -->\n<ng-template\n  bbProductSummaryListItemCreditCardCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"credit-cards\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Debit Card -->\n<ng-template\n  bbProductSummaryListItemDebitCardCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"debit-cards\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Investment Account -->\n<ng-template\n  bbProductSummaryListItemInvestmentAccountCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"investment-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary card: Other Product Kinds -->\n<ng-template\n  bbProductSummaryListItemOtherProductKindsCustomizable\n  let-hostRef\n  let-productKind=\"context\">\n  <bb-product-kind-collapsible-ui *ngIf=\"productKind.products.length\"\n    data-role=\"custom-accounts\"\n    [(isExpanded)]=\"hostRef.isExpanded[productKind.name]\"\n    [showIcons]=\"hostRef.showIcons | async\"\n    [productKind]=\"productKind\"\n    (selectAccount)=\"hostRef.selectAccount($event)\"\n    (selectProduct)=\"hostRef.selectProduct.emit($event)\"\n  ></bb-product-kind-collapsible-ui>\n</ng-template>\n\n<!-- Product summary details loading template -->\n<ng-template #loadingTemplate>\n  <ng-container bbProductSummaryListLoadingCustomizable\n    [bbHostRef]=\"hostRef\">\n  </ng-container>\n</ng-template>\n\n<ng-template\n  bbProductSummaryListLoadingCustomizable\n  let-hostRef>\n  <ng-container *ngIf=\"hostRef.error | async as error; else loading\">\n    <bb-empty-state-ui\n      title=\"\"\n      [subtitle]=\"hostRef.processErrorMessages(error.messages)\"\n      iconModifier=\"error\"\n      iconSize=\"xxl\"\n      iconColor=\"gray\"\n      iconClasses=\"text-muted\"\n    ></bb-empty-state-ui>\n  </ng-container>\n  <ng-template #loading>\n    <bb-loading-indicator-ui\n      i18n-text=\"@@product.details.loadingAccounts\"\n      [text]=\"'Loading Accounts...'\"\n    ></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i3__namespace.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.ProductNeedsAttentionComponent; }), selector: "bb-product-needs-attention-ui", inputs: ["isExpanded", "showIcons", "iconName", "productKind"], outputs: ["selectAccount", "selectProduct", "isExpandedChange", "payNowClick"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.ProductKindCollapsibleComponent; }), selector: "bb-product-kind-collapsible-ui", inputs: ["isExpanded", "showIcons", "iconName", "productKind"], outputs: ["selectAccount", "selectProduct", "isExpandedChange"] }, { type: i0__namespace.forwardRef(function () { return i6__namespace.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i0__namespace.forwardRef(function () { return i8__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return ProductSummaryCustomizableDirective; }), selector: "[bbProductSummaryCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryHeaderCustomizableDirective; }), selector: "[bbProductSummaryHeaderCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryBodyCustomizableDirective; }), selector: "[bbProductSummaryBodyCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i10__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i0__namespace.forwardRef(function () { return i8__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemCustomizableDirective; }), selector: "[bbProductSummaryListItemCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i8__namespace.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0__namespace.forwardRef(function () { return i8__namespace.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective; }), selector: "[bbProductSummaryListItemNeedsAttentionAccountsCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemCurrentAccountCustomizableDirective; }), selector: "[bbProductSummaryListItemCurrentAccountCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemSavingsAccountCustomizableDirective; }), selector: "[bbProductSummaryListItemSavingsAccountCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemTermDepositCustomizableDirective; }), selector: "[bbProductSummaryListItemTermDepositCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemLoanCustomizableDirective; }), selector: "[bbProductSummaryListItemLoanCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemCreditCardCustomizableDirective; }), selector: "[bbProductSummaryListItemCreditCardCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemDebitCardCustomizableDirective; }), selector: "[bbProductSummaryListItemDebitCardCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemInvestmentAccountCustomizableDirective; }), selector: "[bbProductSummaryListItemInvestmentAccountCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i8__namespace.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListItemOtherProductKindsCustomizableDirective; }), selector: "[bbProductSummaryListItemOtherProductKindsCustomizable]" }, { type: i0__namespace.forwardRef(function () { return ProductSummaryListLoadingCustomizableDirective; }), selector: "[bbProductSummaryListLoadingCustomizable]" }], pipes: { "async": i0__namespace.forwardRef(function () { return i8__namespace.AsyncPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ArrangementsListWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-arrangements-list-widget',
                        templateUrl: 'arrangements-list-widget.component.html',
                        providers: [ArrangementsService],
                    }]
            }], ctorParameters: function () {
            return [{ type: ArrangementsService }, { type: i2__namespace.ProductsExternalInfoService }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [webSdk.PUBSUB]
                        }] }];
        }, propDecorators: { viewName: [{
                    type: i0.Input,
                    args: ['viewName']
                }], payNowClick: [{
                    type: i0.Output
                }] } });
    /**
     * This is an extension slot to be used for customizing items with the `overdueAccounts` productKind
     *
     * @usageNotes
     *
     * ### Customize `Needs Your Attention`
     *
     * ```html
     * <ng-template
     *   bbProductSummaryListItemNeedsAttentionAccountsCustomizable
     *   let-hostRef
     *   let-productKind="context">
     *   Your custom template here
     * </ng-template>
     * ```
     *
     * @NgModule ProductSummaryListWidgetModule
     */
    var ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective = /** @class */ (function (_super) {
        __extends(ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective, _super);
        function ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective;
    }(i1$1.BbTemplate));
    ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective, selector: "[bbProductSummaryListItemNeedsAttentionAccountsCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbProductSummaryListItemNeedsAttentionAccountsCustomizable]',
                    }]
            }] });

    var components = [ProductSummaryListWidgetComponent, ArrangementsListWidgetComponent];
    var directives = [
        ProductSummaryCustomizableDirective,
        ProductSummaryHeaderCustomizableDirective,
        ProductSummaryBodyCustomizableDirective,
        ProductSummaryListItemCustomizableDirective,
        ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective,
        ProductSummaryListItemCurrentAccountCustomizableDirective,
        ProductSummaryListItemSavingsAccountCustomizableDirective,
        ProductSummaryListItemTermDepositCustomizableDirective,
        ProductSummaryListItemLoanCustomizableDirective,
        ProductSummaryListItemCreditCardCustomizableDirective,
        ProductSummaryListItemDebitCardCustomizableDirective,
        ProductSummaryListItemInvestmentAccountCustomizableDirective,
        ProductSummaryListItemOtherProductKindsCustomizableDirective,
        ProductSummaryListLoadingCustomizableDirective,
    ];
    var uiModules = [
        i5.ProductKindModule,
        i5.ProductKindCollapsibleModule,
        i3.IconModule,
        i4.AmountModule,
        i6.EmptyStateModule,
        i7.LoadingIndicatorModule,
        i10.TooltipModule,
        i5.ProductNeedsAttentionModule,
    ];
    /**
     * Exports the Widgets and UI components for showing a list of accounts
     *
     * The following widgets are included in this module:
     *  - `ProductSummaryListWidgetComponent`
     *  - `ArrangementsViewWidgetComponent`
     *
     * @see ProductSummaryListWidgetComponent
     * @see ArrangementsListWidgetComponent
     *
     * @usageNotes
     *
     * ### Include the exported widgets in your `AppModule`:
     *
     * ```typescript
     * @NgModule({
     *   imports: [
     *     ProductSummaryListWidgetModule,
     *   ],
     *   ...
     * })
     * export class AppModule {}
     * ```
     */
    var ProductSummaryListWidgetModule = /** @class */ (function () {
        function ProductSummaryListWidgetModule() {
        }
        return ProductSummaryListWidgetModule;
    }());
    ProductSummaryListWidgetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListWidgetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductSummaryListWidgetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListWidgetModule, declarations: [ProductSummaryListWidgetComponent, ArrangementsListWidgetComponent, ProductSummaryCustomizableDirective,
            ProductSummaryHeaderCustomizableDirective,
            ProductSummaryBodyCustomizableDirective,
            ProductSummaryListItemCustomizableDirective,
            ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective,
            ProductSummaryListItemCurrentAccountCustomizableDirective,
            ProductSummaryListItemSavingsAccountCustomizableDirective,
            ProductSummaryListItemTermDepositCustomizableDirective,
            ProductSummaryListItemLoanCustomizableDirective,
            ProductSummaryListItemCreditCardCustomizableDirective,
            ProductSummaryListItemDebitCardCustomizableDirective,
            ProductSummaryListItemInvestmentAccountCustomizableDirective,
            ProductSummaryListItemOtherProductKindsCustomizableDirective,
            ProductSummaryListLoadingCustomizableDirective], imports: [i8.CommonModule, i5.ProductKindModule,
            i5.ProductKindCollapsibleModule,
            i3.IconModule,
            i4.AmountModule,
            i6.EmptyStateModule,
            i7.LoadingIndicatorModule,
            i10.TooltipModule,
            i5.ProductNeedsAttentionModule, i1__namespace$1.BackbaseCoreModule], exports: [ProductSummaryListWidgetComponent, ArrangementsListWidgetComponent, ProductSummaryCustomizableDirective,
            ProductSummaryHeaderCustomizableDirective,
            ProductSummaryBodyCustomizableDirective,
            ProductSummaryListItemCustomizableDirective,
            ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective,
            ProductSummaryListItemCurrentAccountCustomizableDirective,
            ProductSummaryListItemSavingsAccountCustomizableDirective,
            ProductSummaryListItemTermDepositCustomizableDirective,
            ProductSummaryListItemLoanCustomizableDirective,
            ProductSummaryListItemCreditCardCustomizableDirective,
            ProductSummaryListItemDebitCardCustomizableDirective,
            ProductSummaryListItemInvestmentAccountCustomizableDirective,
            ProductSummaryListItemOtherProductKindsCustomizableDirective,
            ProductSummaryListLoadingCustomizableDirective, i5.ProductKindModule,
            i5.ProductKindCollapsibleModule,
            i3.IconModule,
            i4.AmountModule,
            i6.EmptyStateModule,
            i7.LoadingIndicatorModule,
            i10.TooltipModule,
            i5.ProductNeedsAttentionModule] });
    ProductSummaryListWidgetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListWidgetModule, providers: [i2.ProductsExternalInfoService], imports: [__spreadArray(__spreadArray([
                i8.CommonModule
            ], __read(uiModules)), [
                i1$1.BackbaseCoreModule.withConfig({
                    classMap: {
                        ProductSummaryListWidgetComponent: ProductSummaryListWidgetComponent,
                        ArrangementsListWidgetComponent: ArrangementsListWidgetComponent,
                    },
                }),
            ]), i5.ProductKindModule,
            i5.ProductKindCollapsibleModule,
            i3.IconModule,
            i4.AmountModule,
            i6.EmptyStateModule,
            i7.LoadingIndicatorModule,
            i10.TooltipModule,
            i5.ProductNeedsAttentionModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ProductSummaryListWidgetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray(__spreadArray([
                            i8.CommonModule
                        ], __read(uiModules)), [
                            i1$1.BackbaseCoreModule.withConfig({
                                classMap: {
                                    ProductSummaryListWidgetComponent: ProductSummaryListWidgetComponent,
                                    ArrangementsListWidgetComponent: ArrangementsListWidgetComponent,
                                },
                            }),
                        ]),
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(directives)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components)), __read(directives)), __read(uiModules)),
                        providers: [i2.ProductsExternalInfoService],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ArrangementsListWidgetComponent = ArrangementsListWidgetComponent;
    exports.ArrangementsService = ArrangementsService;
    exports.ProductKindsAccessDenied = ProductKindsAccessDenied;
    exports.ProductKindsBadRequest = ProductKindsBadRequest;
    exports.ProductKindsUnknownError = ProductKindsUnknownError;
    exports.ProductSummaryBaseService = ProductSummaryBaseService;
    exports.ProductSummaryBodyCustomizableDirective = ProductSummaryBodyCustomizableDirective;
    exports.ProductSummaryCustomizableDirective = ProductSummaryCustomizableDirective;
    exports.ProductSummaryHeaderCustomizableDirective = ProductSummaryHeaderCustomizableDirective;
    exports.ProductSummaryListBaseComponent = ProductSummaryListBaseComponent;
    exports.ProductSummaryListItemCreditCardCustomizableDirective = ProductSummaryListItemCreditCardCustomizableDirective;
    exports.ProductSummaryListItemCurrentAccountCustomizableDirective = ProductSummaryListItemCurrentAccountCustomizableDirective;
    exports.ProductSummaryListItemCustomizableDirective = ProductSummaryListItemCustomizableDirective;
    exports.ProductSummaryListItemDebitCardCustomizableDirective = ProductSummaryListItemDebitCardCustomizableDirective;
    exports.ProductSummaryListItemInvestmentAccountCustomizableDirective = ProductSummaryListItemInvestmentAccountCustomizableDirective;
    exports.ProductSummaryListItemLoanCustomizableDirective = ProductSummaryListItemLoanCustomizableDirective;
    exports.ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective = ProductSummaryListItemNeedsAttentionAccountsCustomizableDirective;
    exports.ProductSummaryListItemOtherProductKindsCustomizableDirective = ProductSummaryListItemOtherProductKindsCustomizableDirective;
    exports.ProductSummaryListItemSavingsAccountCustomizableDirective = ProductSummaryListItemSavingsAccountCustomizableDirective;
    exports.ProductSummaryListItemTermDepositCustomizableDirective = ProductSummaryListItemTermDepositCustomizableDirective;
    exports.ProductSummaryListLoadingCustomizableDirective = ProductSummaryListLoadingCustomizableDirective;
    exports.ProductSummaryListWidgetComponent = ProductSummaryListWidgetComponent;
    exports.ProductSummaryListWidgetModule = ProductSummaryListWidgetModule;
    exports.ProductSummaryService = ProductSummaryService;
    exports.WidgetProperty = WidgetProperty;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-product-summary-list-widget-ang.umd.js.map
