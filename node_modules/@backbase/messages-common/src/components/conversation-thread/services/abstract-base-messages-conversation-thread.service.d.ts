import { Observable } from 'rxjs';
import { DraftPostResponseBody, ConversationMessageDraftPostRequestBody, ConversationMessageDraftPutRequestBody, MarkAsReadUnreadPutRequestBody, MarkAsReadUnreadPutResponseBody } from '@backbase/messages-v5-http-ang';
import { Attachment } from '../models/conversations.model';
export declare abstract class AbstractBaseMessagesConversationThreadService {
    abstract markConversationsAsReadUnread(params: MarkAsReadUnreadPutRequestBody): Observable<MarkAsReadUnreadPutResponseBody | null>;
    abstract getDownloadAttachmentUrl(id: string): string;
    abstract downloadFile(id: string): Observable<ArrayBuffer>;
    /**
     * Creat message draft
     *
     * @param conversationId Conversation id
     * @param body Request body
     * @returns Create draft stream
     */
    createDraft?(conversationId: string, body: ConversationMessageDraftPostRequestBody): Observable<DraftPostResponseBody | null>;
    /**
     * Update message draft
     *
     * @param conversationId Conversation id
     * @param body Request body
     * @returns Update draft stream
     */
    updateDraft?(conversationId: string, body: ConversationMessageDraftPutRequestBody): Observable<any>;
    /**
     * Delete message draft
     *
     * @param draftId Draft id
     * @returns Delete draft stream
     */
    deleteDraft?(draftId: string): Observable<any>;
    /**
     * Map attachments
     *
     * @param attachments Attachments list
     * @returns Mapped attachments list with linkStream update
     */
    attachmentsMapper(attachments: Attachment[]): Attachment[];
}
