import { ItemModel } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare const DefaultWidgetProperties: {
    createMessageOpenEventName: string;
    createMessageClosedEventName: string;
    itemsPerPage: number;
    mailboxType: string;
    customerServiceTitle: string;
    viewType: string;
    hideAssignedToColumn: boolean;
    showMailboxTypes: boolean;
};
export declare class BaseConversationsListPropertiesService {
    private readonly itemModel?;
    constructor(itemModel?: ItemModel | undefined);
    /**
     * Quantity of items to show per page/to add per request, used for Client and Employee widget
     */
    get itemsPerPage(): Observable<number>;
    /**
     * Event published to open Create message modal widget, used for Client and Employee widget
     */
    get createMessageOpenEventName(): Observable<string>;
    /**
     * Event published when Create message modal widget was closed,
     * used for Client and Employee widget to update list of conversations
     */
    get createMessageClosedEventName(): Observable<string>;
    /**
     * Mailbox type property, used for Client widget
     */
    get mailboxType(): Observable<string>;
    /**
     * Customer service title, localizable, used for Client widget
     */
    get customerServiceTitle(): Observable<string>;
    /**
     * View type for conversations list (all, assigned, unassigned, resolved, my-resolved, drafts),
     * used for Employee widget
     */
    get viewType(): Observable<string>;
    /**
     * Property to hide `Assigned to` column, used for Employee widget
     */
    get hideAssignedToColumn(): Observable<boolean>;
    /**
     * Property to show mailbox types (inbox and sent), used for Employee widget
     */
    get showMailboxTypes(): Observable<boolean>;
    static ɵfac: i0.ɵɵFactoryDeclaration<BaseConversationsListPropertiesService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BaseConversationsListPropertiesService>;
}
