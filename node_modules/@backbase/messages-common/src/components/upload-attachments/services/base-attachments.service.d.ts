import { Observable, Subject } from 'rxjs';
import { DeleteResponseBody, Metadata } from '@backbase/messages-v5-http-ang';
import { FileObject } from '../model/messages-upload-attachments.model';
export declare abstract class BaseUploadAttachmentsService {
    abstract deleteAttachments(ids: Array<string>): Observable<DeleteResponseBody | null>;
    abstract uploadAttachment(attachment: Blob): Observable<Metadata | null>;
}
export interface FileAttachmentInterface {
    loading: boolean;
    name: string | undefined;
    size: number | undefined;
    onDelete: Subject<number>;
    deleteAttachment(id: string, index: number): void;
    uploadAttachment(): Observable<Metadata | null>;
    setLoading(flag: boolean): void;
}
export declare class FileAttachment implements FileAttachmentInterface {
    protected service: BaseUploadAttachmentsService;
    /**
     * The loading flag.
     */
    loading: boolean;
    /**
     * Attachment name
     */
    name: string | undefined;
    /**
     * Attachment size
     */
    size: number | undefined;
    /**
     * Delete attachment subject that holds index
     */
    onDelete: Subject<number>;
    private readonly cancelSubject;
    private readonly file;
    private id;
    constructor(file: File | FileObject, service: BaseUploadAttachmentsService);
    /**
     * Delete attachment
     *
     * @param id Attachment id
     * @param index Attachment index
     */
    deleteAttachment(id: string, index: number): void;
    /**
     * Upload attachments
     */
    uploadAttachment(): Observable<Metadata | null>;
    /**
     * Set loading flag
     *
     * @param flag Loaging status flag
     */
    setLoading(flag: boolean): void;
}
