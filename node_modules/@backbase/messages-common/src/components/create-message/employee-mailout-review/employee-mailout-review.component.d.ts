import { OnInit, EventEmitter, TemplateRef } from '@angular/core';
import { MessagesEmployeeMailoutReviewService } from './employee-mailout-review.service';
import { Observable } from 'rxjs';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';
import { EmployeeCreateMailoutFormModel } from '../../../models/employee-create-mailout-form.model';
import { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';
import { ManipulationType, MessagesConfirmationModalModel } from '../../messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';
import { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';
import * as i0 from "@angular/core";
export declare class MessagesEmployeeMailoutReviewComponent implements OnInit {
    private readonly encodingService;
    private readonly dataService;
    private readonly confirmModalService;
    private readonly sharedService;
    /**
     * The input with the create mailout form data.
     */
    mailout: EmployeeCreateMailoutFormModel;
    /**
     * The cancel mailout output.
     */
    cancel: EventEmitter<any>;
    /**
     * The confirm operation output.
     */
    confirm: EventEmitter<any>;
    /**
     * The edit mailout output.
     */
    edit: EventEmitter<any>;
    /**
     * The notification for the successful create mailout operation.
     */
    mailoutCreateSuccessTpl: TemplateRef<any> | undefined;
    /**
     * The notification for the create mailout error.
     */
    mailoutCreateErrorTpl: TemplateRef<any> | undefined;
    /**
     * The sanitize error flag.
     */
    sanitizeError: boolean;
    /**
     * The sanitize loading flag.
     */
    sanitizeLoading: boolean;
    /**
     * The sanitized mailout body.
     */
    sanitizedBody$?: Observable<string | null>;
    /**
     * The manipulation types enum: `resolve`, `unresolve`, `assign`, `unassign`, `discard`,
     * `discardDraft`, `discardPreview`, `deleteTopic`, `deleteMailout`.
     */
    readonly manipulationTypes: typeof ManipulationType;
    /**
     * The confirmation modal model.
     */
    readonly confirmationModal$: Observable<MessagesConfirmationModalModel>;
    constructor(encodingService: MessagesEncodingService, dataService: MessagesEmployeeMailoutReviewService, confirmModalService: MessagesManipulationConfirmModalService, sharedService: SharedMethodsService);
    ngOnInit(): void;
    private sanitizeBody;
    /**
     * The method to switch from the preview to the editing state.
     */
    onEdit(): void;
    /**
     * The method to discard the modal.
     *
     * @param discardParam Should open modal flag
     */
    onDiscardModal(discardParam: boolean): void;
    /**
     * The method to confirm the discard action.
     */
    onConfirmModal(): void;
    /**
     * The method to save the mailout.
     *
     * @param employeeCreateMailoutFormModel Create mailout form model data
     */
    createMailout({ body, subject, topic, attachments, notDeletable, recipientsDataId, template, important, ...rest }: EmployeeCreateMailoutFormModel): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MessagesEmployeeMailoutReviewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MessagesEmployeeMailoutReviewComponent, "bb-messages-employee-mailout-review", never, { "mailout": "mailout"; }, { "cancel": "cancel"; "confirm": "confirm"; "edit": "edit"; }, never, never>;
}
export declare class MessagesEmployeeMailoutReviewCustomizableDirective extends BbTemplate<MessagesEmployeeMailoutReviewComponent, {
    sanitizedBody: string | null;
    confirmationModal: MessagesConfirmationModalModel;
}> {
    static ɵfac: i0.ɵɵFactoryDeclaration<MessagesEmployeeMailoutReviewCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MessagesEmployeeMailoutReviewCustomizableDirective, "[bbMessagesEmployeeMailoutReviewCustomizable]", never, {}, {}, never>;
}
export declare class MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective extends BbTemplate<MessagesEmployeeMailoutReviewComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective, "[bbMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizable]", never, {}, {}, never>;
}
export declare class MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective extends BbTemplate<MessagesEmployeeMailoutReviewComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective, "[bbMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizable]", never, {}, {}, never>;
}
