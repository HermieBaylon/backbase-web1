import { ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { MailoutPostRequestBody, TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';
import { BaseCreateMessageFormComponent } from '../base-form/base-create-message-form.component';
import { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';
import { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';
import { BaseCreateMessageFormService } from '../base-form/base-create-message-form.service';
import { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';
import { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';
import { EmployeeCreateMailoutFormModel } from '../../../models/employee-create-mailout-form.model';
import * as i0 from "@angular/core";
export declare class EmployeeCreateMailoutFormComponent extends BaseCreateMessageFormComponent<any> implements OnInit {
    readonly encodingService: MessagesEncodingService;
    readonly sharedService: SharedMethodsService;
    readonly fb: FormBuilder;
    readonly cd: ChangeDetectorRef;
    readonly createMessageFormService: BaseCreateMessageFormService<MailoutPostRequestBody>;
    readonly confirmModalService: MessagesManipulationConfirmModalService;
    readonly uploadService: MessagesUploadAttachmentsService;
    readonly hostRef: this;
    /**
     * Configs for topic selector placeholder
     */
    readonly topicPlaceholderConfig: {
        selectTopicPlaceholder: string;
        noTopicsPlaceholder: string;
    };
    /**
     * The output with the mailout preview data.
     */
    review: EventEmitter<EmployeeCreateMailoutFormModel>;
    /**
     * The input with the default create mailout form data.
     */
    defaultMailout?: EmployeeCreateMailoutFormModel;
    /**
     * The input with the sender display name.
     */
    set senderDisplayName(value: string | undefined);
    private defaultSenderName;
    constructor(encodingService: MessagesEncodingService, sharedService: SharedMethodsService, fb: FormBuilder, cd: ChangeDetectorRef, createMessageFormService: BaseCreateMessageFormService<MailoutPostRequestBody>, confirmModalService: MessagesManipulationConfirmModalService, uploadService: MessagesUploadAttachmentsService);
    ngOnInit(): void;
    private setDefaultMailoutFormValue;
    /**
     * The method to load and parse the mailout template file.
     */
    onAddTemplateFile(input: HTMLInputElement): void;
    /**
     * The method to clear the template file.
     */
    onClearTemplateFile(): void;
    /**
     * The method to save the mailout.
     */
    onConfirm(): void;
    /**
     * The method to discard the mailout.
     *
     * @param discardParam Should open modal flag
     */
    onDiscard(discardParam: boolean): void;
    protected resetToInit(isFormDiscard?: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<EmployeeCreateMailoutFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<EmployeeCreateMailoutFormComponent, "bb-messages-employee-create-mailout-form", never, { "defaultMailout": "defaultMailout"; "senderDisplayName": "senderDisplayName"; }, { "review": "review"; }, never, never>;
}
export declare class EmployeeCreateMailoutFormCustomizableDirective extends BbTemplate<EmployeeCreateMailoutFormComponent, {
    topics: TopicsGetResponseBody | null | undefined;
    maxAttachmentSize: string | undefined;
    maxSubjectLength: number | undefined;
    maxMailoutNameLength: number | undefined;
}> {
    static ɵfac: i0.ɵɵFactoryDeclaration<EmployeeCreateMailoutFormCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<EmployeeCreateMailoutFormCustomizableDirective, "[bbEmployeeCreateMailoutFormCustomizable]", never, {}, {}, never>;
}
export declare class EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective extends BbTemplate<EmployeeCreateMailoutFormComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective, "[bbEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizable]", never, {}, {}, never>;
}
export declare class EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective extends BbTemplate<EmployeeCreateMailoutFormComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective, "[bbEmployeeCreateMailoutFormErrorNotificationHeaderCustomizable]", never, {}, {}, never>;
}
