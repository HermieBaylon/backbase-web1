import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { EmployeeMailoutStatus } from '../../models/employee-mailouts-statuses.model';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/badge";
import * as i2 from "@angular/common";
import * as i3 from "@backbase/ui-ang/tooltip-directive";
export class MessagesMailoutStatusComponent {
    constructor() {
        /**
         * Input that toggles between shortened and full status title text
         */
        this.shortTitle = false;
        /**
         * Mailout statuses enum: Created = `CREATED`, Preparing = `PREPARING`, Ready = `READY`,
         * Processing = `PROCESSING`, Done = `DONE`, Error = `ERROR`, Cancelled = `CANCELLED`, WIP = `CANCELLATION_IN_PROCESS`
         */
        this.employeeMailoutStatus = EmployeeMailoutStatus;
    }
}
MessagesMailoutStatusComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesMailoutStatusComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MessagesMailoutStatusComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: MessagesMailoutStatusComponent, selector: "bb-messages-mailout-status", inputs: { mailoutStatus: "mailoutStatus", shortTitle: "shortTitle" }, ngImport: i0, template: "<ng-container bbMessagesMailoutStatusCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbMessagesMailoutStatusCustomizable let-hostRef>\n  <ng-container [ngSwitch]=\"hostRef.mailoutStatus\">\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Done\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Com\"\n        i18n-text=\"\n          Com|Badge text if mailout status is 'Completed' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.completed.short\"\n        color=\"success\"\n        bbTooltip=\"Completed\"\n        i18n-bbTooltip=\"\n          Completed|Tooltip text if mailout status is 'Completed'@@messages.mailoutStatus.statusTooltip.completed\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Completed\"\n          i18n-text=\"\n            Completed|Badge text if mailout status is 'Completed'@@messages.mailoutStatus.statusBadge.completed\"\n          color=\"success\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Error\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Err\"\n        i18n-text=\"\n          Err|Badge text if mailout status is 'Error' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.error.short\"\n        color=\"warning\"\n        bbTooltip=\"Error\"\n        i18n-bbTooltip=\"Error|Tooltip text if mailout status is 'Error'@@messages.mailoutStatus.statusTooltip.error\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Error\"\n          i18n-text=\"Error|Badge text if mailout status is 'Error'@@messages.mailoutStatus.statusBadge.error\"\n          color=\"warning\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Cancelled\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Del\"\n        i18n-text=\"\n          Del|Badge text if mailout status is 'Deleted' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.deleted.short\"\n        color=\"danger\"\n        bbTooltip=\"Deleted\"\n        i18n-bbTooltip=\"\n          Deleted|Tooltip text if mailout status is 'Deleted'@@messages.mailoutStatus.statusTooltip.deleted\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Deleted\"\n          i18n-text=\"Deleted|Badge text if mailout status is 'Deleted'@@messages.mailoutStatus.statusBadge.deleted\"\n          color=\"danger\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.WIP\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"WIP\"\n        i18n-text=\"\n          WIP|Badge text if mailout status is 'Deletion in progress' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.wip.short\"\n        color=\"danger\"\n        bbTooltip=\"Deletion in progress\"\n        i18n-bbTooltip=\"\n          Deletion in progress|Tooltip text if mailout status is 'Deletion in\n          progress'@@messages.mailoutStatus.statusTooltip.wip\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Deletion in progress\"\n          i18n-text=\"\n            Deletion in progress|Badge text if mailout status is 'Deletion in\n            progress'@@messages.mailoutStatus.statusBadge.wip\"\n          color=\"danger\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchDefault>\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Pro\"\n        i18n-text=\"\n          Pro|Badge text if mailout status is 'Processing' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.processing.short\"\n        color=\"primary\"\n        bbTooltip=\"Processing\"\n        i18n-bbTooltip=\"\n          Processing|Tooltip text if mailout status is 'Processing'@@messages.mailoutStatus.statusTooltip.processing\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      ></bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Processing\"\n          i18n-text=\"\n            Processing|Badge text if mailout status is 'Processing'@@messages.mailoutStatus.statusBadge.processing\"\n          color=\"primary\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n  </ng-container>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.BadgeComponent; }), selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i0.forwardRef(function () { return MessagesMailoutStatusCustomizableDirective; }), selector: "[bbMessagesMailoutStatusCustomizable]" }, { type: i0.forwardRef(function () { return i2.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0.forwardRef(function () { return i2.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0.forwardRef(function () { return i2.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i0.forwardRef(function () { return i2.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesMailoutStatusComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-messages-mailout-status',
                    templateUrl: './messages-mailout-status.component.html',
                }]
        }], propDecorators: { mailoutStatus: [{
                type: Input
            }], shortTitle: [{
                type: Input
            }] } });
export class MessagesMailoutStatusCustomizableDirective extends BbTemplate {
}
MessagesMailoutStatusCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesMailoutStatusCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
MessagesMailoutStatusCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: MessagesMailoutStatusCustomizableDirective, selector: "[bbMessagesMailoutStatusCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesMailoutStatusCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbMessagesMailoutStatusCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,