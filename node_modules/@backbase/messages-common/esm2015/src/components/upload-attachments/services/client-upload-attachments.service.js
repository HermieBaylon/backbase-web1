import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/messages-v5-http-ang";
export class MessagesClientUploadAttachmentsService {
    constructor(service) {
        this.service = service;
    }
    /**
     * Delete attachments by ids
     *
     * @param ids Attachments list
     * @returns Delete attachments stream
     */
    deleteAttachments(ids) {
        return this.service.deleteMessageAttachments({ ids });
    }
    /**
     * Upload attachments
     *
     * @param attachment Attachment
     * @returns Post message attachments stream
     */
    uploadAttachment(attachment) {
        return this.service.postMessageAttachments({ attachment });
    }
}
MessagesClientUploadAttachmentsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesClientUploadAttachmentsService, deps: [{ token: i1.MessagecenterHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
MessagesClientUploadAttachmentsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesClientUploadAttachmentsService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesClientUploadAttachmentsService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.MessagecenterHttpService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LXVwbG9hZC1hdHRhY2htZW50cy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9tZXNzYWdlcy1jb21tb24vc3JjL2NvbXBvbmVudHMvdXBsb2FkLWF0dGFjaG1lbnRzL3NlcnZpY2VzL2NsaWVudC11cGxvYWQtYXR0YWNobWVudHMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFNM0MsTUFBTSxPQUFPLHNDQUFzQztJQUNqRCxZQUE2QixPQUFpQztRQUFqQyxZQUFPLEdBQVAsT0FBTyxDQUEwQjtJQUFHLENBQUM7SUFFbEU7Ozs7O09BS0c7SUFDSCxpQkFBaUIsQ0FBQyxHQUFrQjtRQUNsQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILGdCQUFnQixDQUFDLFVBQWdCO1FBQy9CLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDN0QsQ0FBQzs7b0lBckJVLHNDQUFzQzt3SUFBdEMsc0NBQXNDOzRGQUF0QyxzQ0FBc0M7a0JBRGxELFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBNZXNzYWdlY2VudGVySHR0cFNlcnZpY2UsIERlbGV0ZVJlc3BvbnNlQm9keSwgTWV0YWRhdGEgfSBmcm9tICdAYmFja2Jhc2UvbWVzc2FnZXMtdjUtaHR0cC1hbmcnO1xuaW1wb3J0IHsgQmFzZVVwbG9hZEF0dGFjaG1lbnRzU2VydmljZSB9IGZyb20gJy4vYmFzZS1hdHRhY2htZW50cy5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VzQ2xpZW50VXBsb2FkQXR0YWNobWVudHNTZXJ2aWNlIGltcGxlbWVudHMgQmFzZVVwbG9hZEF0dGFjaG1lbnRzU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgc2VydmljZTogTWVzc2FnZWNlbnRlckh0dHBTZXJ2aWNlKSB7fVxuXG4gIC8qKlxuICAgKiBEZWxldGUgYXR0YWNobWVudHMgYnkgaWRzXG4gICAqXG4gICAqIEBwYXJhbSBpZHMgQXR0YWNobWVudHMgbGlzdFxuICAgKiBAcmV0dXJucyBEZWxldGUgYXR0YWNobWVudHMgc3RyZWFtXG4gICAqL1xuICBkZWxldGVBdHRhY2htZW50cyhpZHM6IEFycmF5PHN0cmluZz4pOiBPYnNlcnZhYmxlPERlbGV0ZVJlc3BvbnNlQm9keSB8IG51bGw+IHtcbiAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmRlbGV0ZU1lc3NhZ2VBdHRhY2htZW50cyh7IGlkcyB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGxvYWQgYXR0YWNobWVudHNcbiAgICpcbiAgICogQHBhcmFtIGF0dGFjaG1lbnQgQXR0YWNobWVudFxuICAgKiBAcmV0dXJucyBQb3N0IG1lc3NhZ2UgYXR0YWNobWVudHMgc3RyZWFtXG4gICAqL1xuICB1cGxvYWRBdHRhY2htZW50KGF0dGFjaG1lbnQ6IEJsb2IpOiBPYnNlcnZhYmxlPE1ldGFkYXRhIHwgbnVsbD4ge1xuICAgIHJldHVybiB0aGlzLnNlcnZpY2UucG9zdE1lc3NhZ2VBdHRhY2htZW50cyh7IGF0dGFjaG1lbnQgfSk7XG4gIH1cbn1cbiJdfQ==