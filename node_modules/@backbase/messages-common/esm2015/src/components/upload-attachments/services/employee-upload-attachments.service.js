import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/messages-v5-http-ang";
export class MessagesEmployeeUploadAttachmentsService {
    constructor(service) {
        this.service = service;
    }
    /**
     * Delete attachments by ids
     *
     * @param ids attachments ids
     * @returns Delete attachments stream
     */
    deleteAttachments(ids) {
        return this.service.deleteMessageAttachmentsEmployee({ ids });
    }
    /**
     * Upload attachment
     *
     * @param attachment Attachment data
     * @returns Upload attachment stream
     */
    uploadAttachment(attachment) {
        return this.service.postMessageAttachmentsEmployee({ attachment });
    }
}
MessagesEmployeeUploadAttachmentsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesEmployeeUploadAttachmentsService, deps: [{ token: i1.EmployeeHttpService }], target: i0.ɵɵFactoryTarget.Injectable });
MessagesEmployeeUploadAttachmentsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesEmployeeUploadAttachmentsService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesEmployeeUploadAttachmentsService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.EmployeeHttpService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wbG95ZWUtdXBsb2FkLWF0dGFjaG1lbnRzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21lc3NhZ2VzLWNvbW1vbi9zcmMvY29tcG9uZW50cy91cGxvYWQtYXR0YWNobWVudHMvc2VydmljZXMvZW1wbG95ZWUtdXBsb2FkLWF0dGFjaG1lbnRzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBTTNDLE1BQU0sT0FBTyx3Q0FBd0M7SUFDbkQsWUFBNkIsT0FBNEI7UUFBNUIsWUFBTyxHQUFQLE9BQU8sQ0FBcUI7SUFBRyxDQUFDO0lBRTdEOzs7OztPQUtHO0lBQ0gsaUJBQWlCLENBQUMsR0FBYTtRQUM3QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsZ0NBQWdDLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILGdCQUFnQixDQUFDLFVBQWdCO1FBQy9CLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDckUsQ0FBQzs7c0lBckJVLHdDQUF3QzswSUFBeEMsd0NBQXdDOzRGQUF4Qyx3Q0FBd0M7a0JBRHBELFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBEZWxldGVSZXNwb25zZUJvZHksIEVtcGxveWVlSHR0cFNlcnZpY2UsIE1ldGFkYXRhIH0gZnJvbSAnQGJhY2tiYXNlL21lc3NhZ2VzLXY1LWh0dHAtYW5nJztcbmltcG9ydCB7IEJhc2VVcGxvYWRBdHRhY2htZW50c1NlcnZpY2UgfSBmcm9tICcuL2Jhc2UtYXR0YWNobWVudHMuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBNZXNzYWdlc0VtcGxveWVlVXBsb2FkQXR0YWNobWVudHNTZXJ2aWNlIGltcGxlbWVudHMgQmFzZVVwbG9hZEF0dGFjaG1lbnRzU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgc2VydmljZTogRW1wbG95ZWVIdHRwU2VydmljZSkge31cblxuICAvKipcbiAgICogRGVsZXRlIGF0dGFjaG1lbnRzIGJ5IGlkc1xuICAgKlxuICAgKiBAcGFyYW0gaWRzIGF0dGFjaG1lbnRzIGlkc1xuICAgKiBAcmV0dXJucyBEZWxldGUgYXR0YWNobWVudHMgc3RyZWFtXG4gICAqL1xuICBkZWxldGVBdHRhY2htZW50cyhpZHM6IHN0cmluZ1tdKTogT2JzZXJ2YWJsZTxEZWxldGVSZXNwb25zZUJvZHkgfCBudWxsPiB7XG4gICAgcmV0dXJuIHRoaXMuc2VydmljZS5kZWxldGVNZXNzYWdlQXR0YWNobWVudHNFbXBsb3llZSh7IGlkcyB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGxvYWQgYXR0YWNobWVudFxuICAgKlxuICAgKiBAcGFyYW0gYXR0YWNobWVudCBBdHRhY2htZW50IGRhdGFcbiAgICogQHJldHVybnMgVXBsb2FkIGF0dGFjaG1lbnQgc3RyZWFtXG4gICAqL1xuICB1cGxvYWRBdHRhY2htZW50KGF0dGFjaG1lbnQ6IEJsb2IpOiBPYnNlcnZhYmxlPE1ldGFkYXRhIHwgbnVsbD4ge1xuICAgIHJldHVybiB0aGlzLnNlcnZpY2UucG9zdE1lc3NhZ2VBdHRhY2htZW50c0VtcGxveWVlKHsgYXR0YWNobWVudCB9KTtcbiAgfVxufVxuIl19