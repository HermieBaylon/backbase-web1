import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ButtonModule } from '@backbase/ui-ang/button';
import { HeaderModule } from '@backbase/ui-ang/header';
import { ModalModule } from '@backbase/ui-ang/modal';
import { MessagesManipulationConfirmModalService } from './messages-manipulation-confirm-modal.service';
import { MessagesManipulationConfirmModalComponent, MessagesManipulationConfirmModalCustomizableDirective, } from './messages-manipulation-confirm-modal.component';
import { BaseModalComponent } from '../base-modal/base-modal.component';
import * as i0 from "@angular/core";
const components = [MessagesManipulationConfirmModalComponent];
const directives = [MessagesManipulationConfirmModalCustomizableDirective];
const uiModule = [ModalModule, HeaderModule, ButtonModule];
export class MessagesManipulationConfirmModalModule {
}
MessagesManipulationConfirmModalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesManipulationConfirmModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MessagesManipulationConfirmModalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesManipulationConfirmModalModule, declarations: [BaseModalComponent, MessagesManipulationConfirmModalComponent, MessagesManipulationConfirmModalCustomizableDirective], imports: [CommonModule, ModalModule, HeaderModule, ButtonModule], exports: [MessagesManipulationConfirmModalComponent, MessagesManipulationConfirmModalCustomizableDirective] });
MessagesManipulationConfirmModalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesManipulationConfirmModalModule, providers: [MessagesManipulationConfirmModalService, ...uiModule], imports: [[CommonModule, ...uiModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesManipulationConfirmModalModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [BaseModalComponent, ...components, ...directives],
                    exports: [...components, ...directives],
                    imports: [CommonModule, ...uiModule],
                    providers: [MessagesManipulationConfirmModalService, ...uiModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMtbWFuaXB1bGF0aW9uLWNvbmZpcm0tbW9kYWwubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9tZXNzYWdlcy1jb21tb24vc3JjL2NvbXBvbmVudHMvbWVzc2FnZXMtbWFuaXB1bGF0aW9uLWNvbmZpcm0tbW9kYWwvbWVzc2FnZXMtbWFuaXB1bGF0aW9uLWNvbmZpcm0tbW9kYWwubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXJELE9BQU8sRUFBRSx1Q0FBdUMsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ3hHLE9BQU8sRUFDTCx5Q0FBeUMsRUFDekMscURBQXFELEdBQ3RELE1BQU0saURBQWlELENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7O0FBRXhFLE1BQU0sVUFBVSxHQUFHLENBQUMseUNBQXlDLENBQUMsQ0FBQztBQUMvRCxNQUFNLFVBQVUsR0FBRyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7QUFDM0UsTUFBTSxRQUFRLEdBQUcsQ0FBQyxXQUFXLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBTzNELE1BQU0sT0FBTyxzQ0FBc0M7O29JQUF0QyxzQ0FBc0M7cUlBQXRDLHNDQUFzQyxpQkFMbEMsa0JBQWtCLEVBSmYseUNBQXlDLEVBQ3pDLHFEQUFxRCxhQUs3RCxZQUFZLEVBSk4sV0FBVyxFQUFFLFlBQVksRUFBRSxZQUFZLGFBRnJDLHlDQUF5QyxFQUN6QyxxREFBcUQ7cUlBUTVELHNDQUFzQyxhQUZ0QyxDQUFDLHVDQUF1QyxFQUFFLEdBQUcsUUFBUSxDQUFDLFlBRHhELENBQUMsWUFBWSxFQUFFLEdBQUcsUUFBUSxDQUFDOzRGQUd6QixzQ0FBc0M7a0JBTmxELFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxVQUFVLEVBQUUsR0FBRyxVQUFVLENBQUM7b0JBQ2hFLE9BQU8sRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLEdBQUcsVUFBVSxDQUFDO29CQUN2QyxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsR0FBRyxRQUFRLENBQUM7b0JBQ3BDLFNBQVMsRUFBRSxDQUFDLHVDQUF1QyxFQUFFLEdBQUcsUUFBUSxDQUFDO2lCQUNsRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBCdXR0b25Nb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2J1dHRvbic7XG5pbXBvcnQgeyBIZWFkZXJNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2hlYWRlcic7XG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvbW9kYWwnO1xuXG5pbXBvcnQgeyBNZXNzYWdlc01hbmlwdWxhdGlvbkNvbmZpcm1Nb2RhbFNlcnZpY2UgfSBmcm9tICcuL21lc3NhZ2VzLW1hbmlwdWxhdGlvbi1jb25maXJtLW1vZGFsLnNlcnZpY2UnO1xuaW1wb3J0IHtcbiAgTWVzc2FnZXNNYW5pcHVsYXRpb25Db25maXJtTW9kYWxDb21wb25lbnQsXG4gIE1lc3NhZ2VzTWFuaXB1bGF0aW9uQ29uZmlybU1vZGFsQ3VzdG9taXphYmxlRGlyZWN0aXZlLFxufSBmcm9tICcuL21lc3NhZ2VzLW1hbmlwdWxhdGlvbi1jb25maXJtLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCYXNlTW9kYWxDb21wb25lbnQgfSBmcm9tICcuLi9iYXNlLW1vZGFsL2Jhc2UtbW9kYWwuY29tcG9uZW50JztcblxuY29uc3QgY29tcG9uZW50cyA9IFtNZXNzYWdlc01hbmlwdWxhdGlvbkNvbmZpcm1Nb2RhbENvbXBvbmVudF07XG5jb25zdCBkaXJlY3RpdmVzID0gW01lc3NhZ2VzTWFuaXB1bGF0aW9uQ29uZmlybU1vZGFsQ3VzdG9taXphYmxlRGlyZWN0aXZlXTtcbmNvbnN0IHVpTW9kdWxlID0gW01vZGFsTW9kdWxlLCBIZWFkZXJNb2R1bGUsIEJ1dHRvbk1vZHVsZV07XG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtCYXNlTW9kYWxDb21wb25lbnQsIC4uLmNvbXBvbmVudHMsIC4uLmRpcmVjdGl2ZXNdLFxuICBleHBvcnRzOiBbLi4uY29tcG9uZW50cywgLi4uZGlyZWN0aXZlc10sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIC4uLnVpTW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbTWVzc2FnZXNNYW5pcHVsYXRpb25Db25maXJtTW9kYWxTZXJ2aWNlLCAuLi51aU1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VzTWFuaXB1bGF0aW9uQ29uZmlybU1vZGFsTW9kdWxlIHt9XG4iXX0=