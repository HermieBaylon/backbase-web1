import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { ManipulationType } from './manipulation-confirm-modal-types.model';
import { BaseModalComponent } from '../base-modal/base-modal.component';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "@angular/common";
import * as i4 from "@backbase/ui-ang/button";
export class MessagesManipulationConfirmModalComponent extends BaseModalComponent {
    constructor() {
        super();
        /**
         * The `resolve` manipulation type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.resolveType = ManipulationType.resolve;
        /**
         * The unresolve `manipulation` type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.unresolveType = ManipulationType.unresolve;
        /**
         * The assign `manipulation` type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.assignType = ManipulationType.assign;
        /**
         * The unassign `manipulation` type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.unassignType = ManipulationType.unassign;
        /**
         * The discard `manipulation` type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.discardType = ManipulationType.discard;
        /**
         * The discardDraft `manipulation` type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.discardDraftType = ManipulationType.discardDraft;
        /**
         * The discardPreview `manipulation` type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.discardPreviewType = ManipulationType.discardPreview;
        /**
         * The deleteTopicType `manipulation` type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.deleteTopicType = ManipulationType.deleteTopic;
        /**
         * The deleteMailoutType `manipulation` type. Extracted from the `ManipulationType` enum into a separate property
         * to be used in the template for localization purposes.
         */
        this.deleteMailoutType = ManipulationType.deleteMailout;
    }
}
MessagesManipulationConfirmModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesManipulationConfirmModalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MessagesManipulationConfirmModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: MessagesManipulationConfirmModalComponent, selector: "bb-messages-manipulation-confirm-modal", inputs: { type: "type" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbMessagesManipulationConfirmModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbMessagesManipulationConfirmModalCustomizable let-host>\n  <bb-modal-ui [isOpen]=\"host.isOpen\" (cancel)=\"host.onCancel()\" aria-describedby=\"manipulation-modal-content\">\n    <div id=\"manipulation-modal-content\">\n      <ng-container [ngSwitch]=\"host.type\">\n        <ng-container *ngSwitchCase=\"host.resolveType\">\n          <ng-container *ngTemplateOutlet=\"resolveConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.unresolveType\">\n          <ng-container *ngTemplateOutlet=\"unresolveConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.assignType\">\n          <ng-container *ngTemplateOutlet=\"assignConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.unassignType\">\n          <ng-container *ngTemplateOutlet=\"unassignConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardType\">\n          <ng-container *ngTemplateOutlet=\"discardConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardPreviewType\">\n          <ng-container *ngTemplateOutlet=\"discardConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardDraftType\">\n          <ng-container *ngTemplateOutlet=\"discardDraftConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.deleteTopicType\">\n          <ng-container *ngTemplateOutlet=\"deleteTopicConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.deleteMailoutType\">\n          <ng-container *ngTemplateOutlet=\"deleteMailoutConfirmTemplate\"></ng-container>\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <ng-container [ngSwitch]=\"host.type\">\n            <button\n              *ngSwitchCase=\"host.discardType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard button text@@messages.manipulationConfirmModalComponent.discardButton\">Discard</span>\n            </button>\n            <button\n              *ngSwitchCase=\"host.discardPreviewType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard button text@@messages.manipulationConfirmModalComponent.discardButton\">Discard</span>\n            </button>\n\n            <button\n              *ngSwitchCase=\"host.discardDraftType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-draft-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard draft button text@@messages.manipulationConfirmModalComponent.discardDraftButton\"\n                >Delete</span\n              >\n            </button>\n\n            <ng-container *ngSwitchCase=\"host.deleteTopicType\">\n              <ng-container *ngTemplateOutlet=\"deleteButton\"></ng-container>\n            </ng-container>\n\n            <ng-container *ngSwitchCase=\"host.deleteMailoutType\">\n              <ng-container *ngTemplateOutlet=\"deleteButton\"></ng-container>\n            </ng-container>\n\n            <button\n              *ngSwitchDefault\n              bbButton\n              class=\"bb-button-bar__button\"\n              data-role=\"confirm-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Submit button text@@messages.manipulationConfirmModalComponent.submitButton\">Submit</span>\n            </button>\n\n            <ng-template #deleteButton>\n              <button\n                bbButton\n                class=\"bb-button-bar__button\"\n                color=\"danger\"\n                data-role=\"delete-manipulation\"\n                (click)=\"host.onConfirm()\"\n              >\n                <span i18n=\"Delete button text@@messages.manipulationConfirmModalComponent.deleteButton\">Delete</span>\n              </button>\n            </ng-template>\n          </ng-container>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"secondary\"\n            data-role=\"cancel-manipulation\"\n            (click)=\"host.onCancel()\"\n          >\n            <span i18n=\"Cancel button text@@messages.manipulationConfirmModalComponent.cancelButton\">Cancel</span>\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n\n  <ng-template #resolveConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Mark this conversation as resolved?\"\n          i18n-heading=\"\n            Mark this conversation as\n            resolved?@@messages.manipulationConfirmModalComponent.resolveConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to mark this conversation as\n            resolved?@@messages.manipulationConfirmModalComponent.resolveConfirmTemplate.modalBody\"\n          >Are you sure you want to mark this conversation as resolved?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #unresolveConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Renew this conversation from resolved?\"\n          i18n-heading=\"\n            Renew this conversation from\n            resolved?@@messages.manipulationConfirmModalComponent.unresolveConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to renew this conversation from resolved? This conversation will be automaticaly\n            assigned to you.@@messages.manipulationConfirmModalComponent.unresolveConfirmTemplate.modalBody\"\n          >Are you sure you want to renew this conversation from resolved? This conversation will be automaticaly\n          assigned to you.</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #assignConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Assign conversation?\"\n          i18n-heading=\"\n            Assign conversation?@@messages.manipulationConfirmModalComponent.assignConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to assign this\n            conversation?@@messages.manipulationConfirmModalComponent.assignConfirmTemplate.modalBody\"\n          >Are you sure you want to assign this conversation?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #unassignConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Unassign conversation?\"\n          i18n-heading=\"\n            Unassign conversation?@@messages.manipulationConfirmModalComponent.unassignConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to unassign this\n            conversation?@@messages.manipulationConfirmModalComponent.unassignConfirmTemplate.modalBody\"\n          >Are you sure you want to unassign this conversation?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #discardConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Discard message?\"\n          data-role=\"discard-message-header\"\n          i18n-heading=\"Discard message?@@messages.manipulationConfirmModalComponent.discardConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          data-role=\"discard-message-body\"\n          i18n=\"\n            Are you sure you want to discard this message? All filled data will be\n            lost@@messages.manipulationConfirmModalComponent.discardConfirmTemplate.modalBody\"\n          >Are you sure you want to discard this message? All filled data will be lost</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #discardDraftConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Discard message and delete draft?\"\n          i18n-heading=\"\n            Discard message and delete\n            draft?@@messages.manipulationConfirmModalComponent.discardDraftConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to discard this message and delete draft? All filled data will be\n            lost@@messages.manipulationConfirmModalComponent.discardDraftConfirmTemplate.modalBody\"\n          >Are you sure you want to discard this message and delete draft? All filled data will be lost</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #deleteTopicConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Delete topic?\"\n          i18n-heading=\"\n            Delete topic?@@messages.manipulationConfirmModalComponent.deleteTopicConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            This action will unsubscribe all users from this topic. Are you sure you want to delete\n            it?@@messages.manipulationConfirmModalComponent.deleteTopicConfirmTemplate.modalBody\"\n          >This action will unsubscribe all users from this topic. Are you sure you want to delete it?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #deleteMailoutConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Delete mailout?\"\n          i18n-heading=\"\n            Delete mailout modal\n            header@@messages.manipulationConfirmModalComponent.deleteMailoutConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Delete mailout modal body@@messages.manipulationConfirmModalComponent.deleteMailoutConfirmTemplate.modalBody\"\n          >Are you sure to delete a mailout? This action can not be undone.</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i1.ModalFooterComponent; }), selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }, { type: i0.forwardRef(function () { return i1.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i2.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i1.ModalBodyComponent; }), selector: "bb-modal-body-ui" }], directives: [{ type: i0.forwardRef(function () { return MessagesManipulationConfirmModalCustomizableDirective; }), selector: "[bbMessagesManipulationConfirmModalCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgSwitch; }), selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i0.forwardRef(function () { return i3.NgSwitchCase; }), selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i0.forwardRef(function () { return i3.NgTemplateOutlet; }), selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i0.forwardRef(function () { return i1.CustomModalFooterDirective; }), selector: "ng-template[bbCustomModalFooter]" }, { type: i0.forwardRef(function () { return i4.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0.forwardRef(function () { return i3.NgSwitchDefault; }), selector: "[ngSwitchDefault]" }, { type: i0.forwardRef(function () { return i1.CustomModalHeaderDirective; }), selector: "ng-template[bbCustomModalHeader]" }, { type: i0.forwardRef(function () { return i1.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesManipulationConfirmModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-messages-manipulation-confirm-modal',
                    templateUrl: './messages-manipulation-confirm-modal.component.html',
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { type: [{
                type: Input
            }] } });
export class MessagesManipulationConfirmModalCustomizableDirective extends BbTemplate {
}
MessagesManipulationConfirmModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesManipulationConfirmModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
MessagesManipulationConfirmModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: MessagesManipulationConfirmModalCustomizableDirective, selector: "[bbMessagesManipulationConfirmModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesManipulationConfirmModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbMessagesManipulationConfirmModalCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,