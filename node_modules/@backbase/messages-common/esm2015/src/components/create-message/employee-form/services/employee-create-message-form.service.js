import { Injectable } from '@angular/core';
import { catchError, map } from 'rxjs/operators';
import { of } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/user";
export class EmployeeCreateMessageFormService {
    constructor(userService) {
        this.userService = userService;
    }
    getUsers(externalId) {
        return this.userService.getIdentities({ externalId }).pipe(map((usersData) => usersData.identities), catchError(() => of({})));
    }
    getUserById(internalId) {
        return this.userService.getIdentity({ internalId });
    }
}
EmployeeCreateMessageFormService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: EmployeeCreateMessageFormService, deps: [{ token: i1.IdentityManagementService }], target: i0.ɵɵFactoryTarget.Injectable });
EmployeeCreateMessageFormService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: EmployeeCreateMessageFormService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: EmployeeCreateMessageFormService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.IdentityManagementService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wbG95ZWUtY3JlYXRlLW1lc3NhZ2UtZm9ybS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9tZXNzYWdlcy1jb21tb24vc3JjL2NvbXBvbmVudHMvY3JlYXRlLW1lc3NhZ2UvZW1wbG95ZWUtZm9ybS9zZXJ2aWNlcy9lbXBsb3llZS1jcmVhdGUtbWVzc2FnZS1mb3JtLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2pELE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7OztBQUd0QyxNQUFNLE9BQU8sZ0NBQWdDO0lBQzNDLFlBQTZCLFdBQXNDO1FBQXRDLGdCQUFXLEdBQVgsV0FBVyxDQUEyQjtJQUFHLENBQUM7SUFFdkUsUUFBUSxDQUFDLFVBQWtCO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FDeEQsR0FBRyxDQUFDLENBQUMsU0FBd0IsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxFQUN2RCxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQ3pCLENBQUM7SUFDSixDQUFDO0lBRUQsV0FBVyxDQUFDLFVBQWtCO1FBQzVCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQ3RELENBQUM7OzhIQVpVLGdDQUFnQztrSUFBaEMsZ0NBQWdDOzRGQUFoQyxnQ0FBZ0M7a0JBRDVDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHZXRJZGVudGl0aWVzLCBHZXRJZGVudGl0eSwgSWRlbnRpdHlMaXN0ZWRJdGVtLCBJZGVudGl0eU1hbmFnZW1lbnRTZXJ2aWNlIH0gZnJvbSAnQGJhY2tiYXNlL2RhdGEtYW5nL3VzZXInO1xuaW1wb3J0IHsgY2F0Y2hFcnJvciwgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEVtcGxveWVlQ3JlYXRlTWVzc2FnZUZvcm1TZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSB1c2VyU2VydmljZTogSWRlbnRpdHlNYW5hZ2VtZW50U2VydmljZSkge31cblxuICBnZXRVc2VycyhleHRlcm5hbElkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPElkZW50aXR5TGlzdGVkSXRlbVtdIHwgUmVjb3JkPHN0cmluZywgbmV2ZXI+PiB7XG4gICAgcmV0dXJuIHRoaXMudXNlclNlcnZpY2UuZ2V0SWRlbnRpdGllcyh7IGV4dGVybmFsSWQgfSkucGlwZShcbiAgICAgIG1hcCgodXNlcnNEYXRhOiBHZXRJZGVudGl0aWVzKSA9PiB1c2Vyc0RhdGEuaWRlbnRpdGllcyksXG4gICAgICBjYXRjaEVycm9yKCgpID0+IG9mKHt9KSksXG4gICAgKTtcbiAgfVxuXG4gIGdldFVzZXJCeUlkKGludGVybmFsSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8R2V0SWRlbnRpdHk+IHtcbiAgICByZXR1cm4gdGhpcy51c2VyU2VydmljZS5nZXRJZGVudGl0eSh7IGludGVybmFsSWQgfSk7XG4gIH1cbn1cbiJdfQ==