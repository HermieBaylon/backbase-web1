import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { PUBSUB } from '@backbase/foundation-ang/web-sdk';
import { EmployeeHttpService } from '@backbase/messages-v5-http-ang';
import { MessagesEmployeeConversationCountersService } from './messages-employee-conversation-counters.service';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
export class MessagesEmployeeConversationCountersModule {
}
MessagesEmployeeConversationCountersModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesEmployeeConversationCountersModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MessagesEmployeeConversationCountersModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesEmployeeConversationCountersModule, imports: [CommonModule, i1.BackbaseCoreModule] });
MessagesEmployeeConversationCountersModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesEmployeeConversationCountersModule, providers: [MessagesEmployeeConversationCountersService], imports: [[
            CommonModule,
            BackbaseCoreModule.withConfig({
                pipelineProcessors: [
                    {
                        name: 'tab-counters-badge',
                        provider: {
                            provide: MessagesEmployeeConversationCountersService,
                            useClass: MessagesEmployeeConversationCountersService,
                            deps: [EmployeeHttpService, PUBSUB],
                        },
                    },
                ],
            }),
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: MessagesEmployeeConversationCountersModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        BackbaseCoreModule.withConfig({
                            pipelineProcessors: [
                                {
                                    name: 'tab-counters-badge',
                                    provider: {
                                        provide: MessagesEmployeeConversationCountersService,
                                        useClass: MessagesEmployeeConversationCountersService,
                                        deps: [EmployeeHttpService, PUBSUB],
                                    },
                                },
                            ],
                        }),
                    ],
                    providers: [MessagesEmployeeConversationCountersService],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMtZW1wbG95ZWUtY29udmVyc2F0aW9uLWNvdW50ZXJzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWVzc2FnZXMtY29tbW9uL3NyYy9zZXJ2aWNlcy9tZXNzYWdlcy1lbXBsb3llZS1jb252ZXJzYXRpb24tY291bnRlcnMvbWVzc2FnZXMtZW1wbG95ZWUtY29udmVyc2F0aW9uLWNvdW50ZXJzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDMUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDckUsT0FBTyxFQUFFLDJDQUEyQyxFQUFFLE1BQU0sbURBQW1ELENBQUM7OztBQW9CaEgsTUFBTSxPQUFPLDBDQUEwQzs7d0lBQTFDLDBDQUEwQzt5SUFBMUMsMENBQTBDLFlBaEJuRCxZQUFZO3lJQWdCSCwwQ0FBMEMsYUFGMUMsQ0FBQywyQ0FBMkMsQ0FBQyxZQWYvQztZQUNQLFlBQVk7WUFDWixrQkFBa0IsQ0FBQyxVQUFVLENBQUM7Z0JBQzVCLGtCQUFrQixFQUFFO29CQUNsQjt3QkFDRSxJQUFJLEVBQUUsb0JBQW9CO3dCQUMxQixRQUFRLEVBQUU7NEJBQ1IsT0FBTyxFQUFFLDJDQUEyQzs0QkFDcEQsUUFBUSxFQUFFLDJDQUEyQzs0QkFDckQsSUFBSSxFQUFFLENBQUMsbUJBQW1CLEVBQUUsTUFBTSxDQUFDO3lCQUNwQztxQkFDRjtpQkFDRjthQUNGLENBQUM7U0FDSDs0RkFHVSwwQ0FBMEM7a0JBbEJ0RCxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLGtCQUFrQixDQUFDLFVBQVUsQ0FBQzs0QkFDNUIsa0JBQWtCLEVBQUU7Z0NBQ2xCO29DQUNFLElBQUksRUFBRSxvQkFBb0I7b0NBQzFCLFFBQVEsRUFBRTt3Q0FDUixPQUFPLEVBQUUsMkNBQTJDO3dDQUNwRCxRQUFRLEVBQUUsMkNBQTJDO3dDQUNyRCxJQUFJLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxNQUFNLENBQUM7cUNBQ3BDO2lDQUNGOzZCQUNGO3lCQUNGLENBQUM7cUJBQ0g7b0JBQ0QsU0FBUyxFQUFFLENBQUMsMkNBQTJDLENBQUM7aUJBQ3pEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBCYWNrYmFzZUNvcmVNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5pbXBvcnQgeyBQVUJTVUIgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvd2ViLXNkayc7XG5pbXBvcnQgeyBFbXBsb3llZUh0dHBTZXJ2aWNlIH0gZnJvbSAnQGJhY2tiYXNlL21lc3NhZ2VzLXY1LWh0dHAtYW5nJztcbmltcG9ydCB7IE1lc3NhZ2VzRW1wbG95ZWVDb252ZXJzYXRpb25Db3VudGVyc1NlcnZpY2UgfSBmcm9tICcuL21lc3NhZ2VzLWVtcGxveWVlLWNvbnZlcnNhdGlvbi1jb3VudGVycy5zZXJ2aWNlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBCYWNrYmFzZUNvcmVNb2R1bGUud2l0aENvbmZpZyh7XG4gICAgICBwaXBlbGluZVByb2Nlc3NvcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6ICd0YWItY291bnRlcnMtYmFkZ2UnLFxuICAgICAgICAgIHByb3ZpZGVyOiB7XG4gICAgICAgICAgICBwcm92aWRlOiBNZXNzYWdlc0VtcGxveWVlQ29udmVyc2F0aW9uQ291bnRlcnNTZXJ2aWNlLFxuICAgICAgICAgICAgdXNlQ2xhc3M6IE1lc3NhZ2VzRW1wbG95ZWVDb252ZXJzYXRpb25Db3VudGVyc1NlcnZpY2UsXG4gICAgICAgICAgICBkZXBzOiBbRW1wbG95ZWVIdHRwU2VydmljZSwgUFVCU1VCXSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9KSxcbiAgXSxcbiAgcHJvdmlkZXJzOiBbTWVzc2FnZXNFbXBsb3llZUNvbnZlcnNhdGlvbkNvdW50ZXJzU2VydmljZV0sXG59KVxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VzRW1wbG95ZWVDb252ZXJzYXRpb25Db3VudGVyc01vZHVsZSB7fVxuIl19