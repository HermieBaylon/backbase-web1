{"version":3,"file":"backbase-messages-common.js","sources":["../../../../libs/messages-common/src/services/messages-encoding/messages-encoding.service.ts","../../../../libs/messages-common/src/directives/prevent-bubble-down/prevent-bubble-down.directive.ts","../../../../libs/messages-common/src/directives/prevent-bubble-down/prevent-bubble-down.module.ts","../../../../libs/messages-common/src/services/messages-unread-conversation-count/messages-unread-conversation-count.service.ts","../../../../libs/messages-common/src/services/messages-unread-conversation-count/messages-unread-conversation-count.module.ts","../../../../libs/messages-common/src/services/messages-employee-conversation-counters/messages-employee-conversation-counters.service.ts","../../../../libs/messages-common/src/services/messages-employee-conversation-counters/messages-employee-conversation-counters.module.ts","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model.ts","../../../../libs/messages-common/src/services/shared-methods/shared-methods.service.ts","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service.ts","../../../../libs/messages-common/src/components/upload-attachments/services/messages-upload-attachments.service.ts","../../../../libs/messages-common/src/components/create-message/base-form/base-create-message-form.service.ts","../../../../libs/messages-common/src/components/create-message/base-form/base-create-message-form.component.ts","../../../../libs/messages-common/src/components/create-message/base-form/base-create-message-form.module.ts","../../../../libs/messages-common/src/utils/snapshot.ts","../../../../libs/messages-common/src/utils/item-model-property.ts","../../../../libs/messages-common/src/utils/type-helpers.ts","../../../../libs/messages-common/src/components/create-message/base-create-message-modal/base-create-message-modal-properties.service.ts","../../../../libs/messages-common/src/components/create-message/base-create-message-modal/base-create-message-modal.component.ts","../../../../libs/messages-common/src/components/create-message/base-create-message-modal/base-create-message-modal.module.ts","../../../../libs/messages-common/src/components/base-modal/base-modal.component.ts","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.component.ts","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.component.html","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module.ts","../../../../libs/messages-common/src/components/upload-attachments/services/base-attachments.service.ts","../../../../libs/messages-common/src/components/upload-attachments/messages-upload-attachments.component.ts","../../../../libs/messages-common/src/components/upload-attachments/messages-upload-attachments.component.html","../../../../libs/messages-common/src/services/shared-methods/shared-methods.module.ts","../../../../libs/messages-common/src/components/upload-attachments/messages-upload-attachments.module.ts","../../../../libs/messages-common/src/components/create-message/employee-form/services/create-message-form-implementation.service.ts","../../../../libs/messages-common/src/components/upload-attachments/services/employee-upload-attachments.service.ts","../../../../libs/messages-common/src/utils/topic-placeholder-text-helper.ts","../../../../libs/messages-common/src/components/create-message/employee-form/services/employee-create-message-form.service.ts","../../../../libs/messages-common/src/components/create-message/employee-form/employee-create-message-form.component.ts","../../../../libs/messages-common/src/components/create-message/employee-form/employee-create-message-form.component.html","../../../../libs/messages-common/src/components/create-message/employee-form/employee-create-message-form.module.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-form/employee-create-mailout-form.service.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-form/employee-create-mailout-form.component.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-form/employee-create-mailout-form.component.html","../../../../libs/messages-common/src/components/create-message/employee-mailout-form/employee-create-mailout-form.module.ts","../../../../libs/messages-common/src/components/messages-preview/messages-preview.component.ts","../../../../libs/messages-common/src/components/messages-preview/messages-preview.component.html","../../../../libs/messages-common/src/components/messages-conversation-message/messages-conversation-message.component.ts","../../../../libs/messages-common/src/components/messages-conversation-message/messages-conversation-message.component.html","../../../../libs/messages-common/src/components/messages-preview/messages-preview.module.ts","../../../../libs/messages-common/src/components/messages-conversation-message/messages-conversation-message.module.ts","../../../../libs/messages-common/src/helpers/rxjs-operators.ts","../../../../libs/messages-common/src/utils/unknown-id-error.ts","../../../../libs/messages-common/src/components/messages-request-error/messages-request-error.component.ts","../../../../libs/messages-common/src/components/messages-request-error/messages-request-error.component.html","../../../../libs/messages-common/src/components/messages-request-error/messages-request-error.module.ts","../../../../libs/messages-common/src/components/upload-attachments/services/client-upload-attachments.service.ts","../../../../libs/messages-common/src/components/conversations-list/base-conversations-list-properties.service.ts","../../../../libs/messages-common/src/components/conversations-list/base-conversations-list-widget.component.ts","../../../../libs/messages-common/src/components/conversations-list/model/filter-service.model.ts","../../../../libs/messages-common/src/components/conversations-list/filter-conversations-list/filter-conversations-list.component.ts","../../../../libs/messages-common/src/components/conversations-list/filter-conversations-list/filter-conversations-list.component.html","../../../../libs/messages-common/src/components/conversations-list/base-conversations-list-widget.module.ts","../../../../libs/messages-common/src/components/conversations-list/model/params.model.ts","../../../../libs/messages-common/src/components/conversation-thread/models/conversations.model.ts","../../../../libs/messages-common/src/components/conversation-thread/services/abstract-base-messages-conversation-thread.service.ts","../../../../libs/messages-common/src/components/conversation-thread/component/base-conversation-thread-drafts.component.ts","../../../../libs/messages-common/src/components/conversation-thread/component/base-conversation-thread.component.ts","../../../../libs/messages-common/src/components/conversation-thread/base-messages-conversation-thread.module.ts","../../../../libs/messages-common/src/models/employee-mailouts-statuses.model.ts","../../../../libs/messages-common/src/components/messages-mailout-status/messages-mailout-status.component.ts","../../../../libs/messages-common/src/components/messages-mailout-status/messages-mailout-status.component.html","../../../../libs/messages-common/src/components/messages-mailout-status/messages-mailout-status.module.ts","../../../../libs/messages-common/src/models/employee-mailouts-status-labels.model.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-review/employee-mailout-review.service.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-review/employee-mailout-review.component.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-review/employee-mailout-review.component.html","../../../../libs/messages-common/src/components/create-message/employee-mailout-review/employee-mailout-review.module.ts","../../../../libs/messages-common/public_api.ts","../../../../libs/messages-common/backbase-messages-common.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessagesEncodingService {\n  /**\n   * Message base64 decode\n   *\n   * @param str Encoded string\n   */\n  b64Decode(str: string) {\n    return decodeURIComponent(\n      atob(str)\n        .split('')\n        .map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join(''),\n    );\n  }\n\n  /**\n   * Message base64 encode\n   *\n   * @param str Decoded string\n   */\n  b64Encode(str: string) {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (_match, p1) {\n        return String.fromCharCode(parseInt(p1, 16));\n      }),\n    );\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbPreventBubbleDown]',\n})\nexport class PreventBubbleDownDirective {\n  @HostListener('mousedown', ['$event']) onMouseDown($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PreventBubbleDownDirective } from './prevent-bubble-down.directive';\n\n@NgModule({\n  declarations: [PreventBubbleDownDirective],\n  imports: [CommonModule],\n  exports: [PreventBubbleDownDirective],\n})\nexport class PreventBubbleDownModule {}\n","import { Inject, Injectable } from '@angular/core';\nimport { merge, Observable, of, Subject, timer } from 'rxjs';\nimport { concatMap, map, switchMap } from 'rxjs/operators';\nimport { MessagecenterHttpService, UnreadConversationsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\n\nexport interface Badges {\n  token: string;\n  count: number;\n}\n\nconst MessagesToken = 'messages';\nconst MessagesPollPeriod = 5000;\nconst bbEventUnreadConversationCountUpdate = 'bb.event.unread-conversation-count.update';\n\n@Injectable()\nexport class MessagesUnreadConversationCountService {\n  private readonly resetSubject = new Subject();\n  private readonly subscriptionHandler = this.reset.bind(this);\n\n  constructor(\n    private readonly messagecenterService: MessagecenterHttpService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {\n    this.pubSub.subscribe(bbEventUnreadConversationCountUpdate, this.subscriptionHandler);\n  }\n\n  /**\n   * Conversations count poll source\n   */\n  source() {\n    return (): Observable<Badges> =>\n      merge(this.resetSubject, of(undefined)).pipe(\n        switchMap(() =>\n          timer(0, MessagesPollPeriod).pipe(\n            concatMap(() => this.getUnreadConversationCount()),\n            map(body => ({ token: MessagesToken, count: body ? body.unreadCount : 0 })),\n          ),\n        ),\n      );\n  }\n\n  /**\n   * Get conversations count\n   *\n   * @returns Get conversations count stream\n   */\n  getUnreadConversationCount(): Observable<UnreadConversationsGetResponseBody | null> {\n    return this.messagecenterService.getUnreadConversationsCount();\n  }\n\n  private reset() {\n    this.resetSubject.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { MessagesUnreadConversationCountService } from './messages-unread-conversation-count.service';\nimport { MessagecenterHttpService } from '@backbase/messages-v5-http-ang';\nimport { PUBSUB } from '@backbase/foundation-ang/web-sdk';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      pipelineProcessors: [\n        {\n          name: 'counters-badge',\n          provider: {\n            provide: MessagesUnreadConversationCountService,\n            useClass: MessagesUnreadConversationCountService,\n            deps: [MessagecenterHttpService, PUBSUB],\n          },\n        },\n      ],\n    }),\n  ],\n  providers: [MessagesUnreadConversationCountService],\n})\nexport class MessagesUnreadConversationCountModule {}\n","import { Inject, Injectable } from '@angular/core';\nimport { merge, Observable, of, Subject, timer } from 'rxjs';\nimport { concatMap, switchMap } from 'rxjs/operators';\nimport { ConversationCounterResponseBody, EmployeeHttpService } from '@backbase/messages-v5-http-ang';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\n\nconst MessagesPollPeriod = 5000;\nconst bbEventUnreadConversationCountUpdate = 'bb.event.unread-conversation-count.update';\n\n@Injectable()\nexport class MessagesEmployeeConversationCountersService {\n  private readonly resetSubject = new Subject();\n  private readonly subscriptionHandler = this.reset.bind(this);\n\n  constructor(private readonly service: EmployeeHttpService, @Inject(PUBSUB) private readonly pubSub: Pubsub) {\n    this.pubSub.subscribe(bbEventUnreadConversationCountUpdate, this.subscriptionHandler);\n  }\n\n  /**\n   * Conversations count poll source\n   */\n  source() {\n    return (): Observable<ConversationCounterResponseBody | null> =>\n      merge(this.resetSubject, of(undefined)).pipe(\n        switchMap(() => timer(0, MessagesPollPeriod).pipe(concatMap(() => this.getConversationCounters()))),\n      );\n  }\n\n  /**\n   * Get conversations count\n   *\n   * @returns Get conversation counters stream\n   */\n  getConversationCounters(): Observable<ConversationCounterResponseBody | null> {\n    return this.service.getConversationsCounter();\n  }\n\n  private reset() {\n    this.resetSubject.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport { EmployeeHttpService } from '@backbase/messages-v5-http-ang';\nimport { MessagesEmployeeConversationCountersService } from './messages-employee-conversation-counters.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      pipelineProcessors: [\n        {\n          name: 'tab-counters-badge',\n          provider: {\n            provide: MessagesEmployeeConversationCountersService,\n            useClass: MessagesEmployeeConversationCountersService,\n            deps: [EmployeeHttpService, PUBSUB],\n          },\n        },\n      ],\n    }),\n  ],\n  providers: [MessagesEmployeeConversationCountersService],\n})\nexport class MessagesEmployeeConversationCountersModule {}\n","export enum ManipulationType {\n  resolve = 'resolve',\n  unresolve = 'unresolve',\n  assign = 'assign',\n  unassign = 'unassign',\n  discard = 'discard',\n  discardDraft = 'discardDraft',\n  discardPreview = 'discardPreview',\n  deleteTopic = 'deleteTopic',\n  deleteMailout = 'deleteMailout',\n}\n\nexport interface MessagesConfirmationModalModel {\n  opened: boolean;\n  type?: ManipulationType;\n}\n\nexport interface TopicsConfirmationModalModel extends MessagesConfirmationModalModel {\n  topicId?: string | null;\n}\n\nexport interface MailoutConfirmationModal extends MessagesConfirmationModalModel {\n  mailoutId?: string;\n}\n","import { Inject, Injectable, TemplateRef } from '@angular/core';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\n\n@Injectable()\nexport class SharedMethodsService {\n  constructor(\n    private readonly notificationService: NotificationService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {}\n\n  /**\n   * Check is form valid\n   *\n   * @param form Form object\n   * @param prevValue Previous value\n   * @returns Is form valid flag\n   */\n  isFormInvalid(form: FormGroup | undefined, prevValue?: { [key: string]: any }): boolean {\n    if (form && form.dirty) {\n      const formVal = form.value || {};\n      const keys = Object.keys(formVal);\n\n      for (const field of keys) {\n        if (prevValue) {\n          if (prevValue[field] !== formVal[field]) {\n            return true;\n          }\n        } else if (formVal[field]) {\n          return Array.isArray(formVal[field]) ? formVal[field].length > 0 : true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if form has value\n   *\n   * @param form Form object\n   * @returns Has form value flag\n   */\n  hasFormValue(form: FormGroup | undefined): boolean {\n    const formVal = (form && form.value) || {};\n    const keys = Object.keys(formVal);\n\n    for (const field of keys) {\n      if (formVal[field]) {\n        return Array.isArray(formVal[field]) ? formVal[field].length > 0 : true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles a given event\n   *\n   * @param eventName Event name\n   */\n  eventBusFactory(eventName: string): Observable<any> {\n    return new Observable(observer => {\n      const handler = (data: any) => observer.next(data);\n      this.pubSub.subscribe(eventName, handler);\n\n      return () => {\n        this.pubSub.unsubscribe(eventName, handler);\n      };\n    });\n  }\n\n  /**\n   * Publish a given event\n   *\n   * @template T\n   * @param eventName Event name\n   * @param body Event data\n   */\n  eventBusPublish<T>(eventName: string, body: T) {\n    this.pubSub.publish(eventName, body);\n  }\n\n  /**\n   * Get error message from error body\n   *\n   * @param error Error value\n   * @returns Error message\n   */\n  getErrorMessage(error: HttpErrorResponse | string): string {\n    return typeof error !== 'string' ? (error.error && error.error.message) || error.message : error;\n  }\n\n  /**\n   * Open notification\n   *\n   * @param header Notification header\n   * @param modifier Notification type\n   * @param message Notification message\n   */\n  openNotification(header: TemplateRef<any> | string | undefined, modifier = 'success' as any, message = '') {\n    if (!header) return;\n    this.notificationService.showNotification({\n      header,\n      message,\n      modifier,\n      dismissible: false,\n    });\n  }\n\n  /**\n   * Map response to take body and total count\n   *\n   * @template T\n   * @param rawData Response data\n   * @returns Response body and total count\n   */\n  processData<T>(rawData: HttpResponse<T>): { data: T | []; totalCount: number } {\n    const totalCount: number = (rawData && parseInt(String(rawData.headers.get('x-total-count')), 10)) || 0;\n\n    return {\n      data: (rawData && rawData.body) || [],\n      totalCount,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ManipulationType, MessagesConfirmationModalModel } from './manipulation-confirm-modal-types.model';\nimport { SharedMethodsService } from '../../services/shared-methods/shared-methods.service';\n\n@Injectable()\nexport class MessagesManipulationConfirmModalService {\n  private readonly initialModalVal: MessagesConfirmationModalModel = {\n    opened: false,\n    type: undefined,\n  };\n  private readonly emitToggleModal = new BehaviorSubject(this.initialModalVal);\n\n  /**\n   * Toggle modal event emitter\n   */\n  public emitToggleModal$: Observable<MessagesConfirmationModalModel> = this.emitToggleModal.asObservable();\n\n  constructor(private readonly shared: SharedMethodsService) {}\n\n  /**\n   * Toggle confirm modal\n   *\n   * @param shouldOpen Should open modal flag\n   * @param type Manipulation type\n   * @param form Form data\n   * @param prevValue Previous value\n   */\n  toggleModal(\n    shouldOpen: boolean,\n    type?: ManipulationType | undefined,\n    form?: FormGroup | undefined,\n    prevValue?: { [key: string]: any },\n  ) {\n    let opened = shouldOpen;\n    if (type === ManipulationType.discard) {\n      opened = this.shared.isFormInvalid(form, prevValue);\n    }\n\n    this.emitToggleModal.next({ opened, type });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class MessagesUploadAttachmentsService {\n  readonly reset$ = new Subject<boolean>();\n\n  reset(discard = false) {\n    this.reset$.next(discard);\n  }\n}\n","import { Observable } from 'rxjs';\nimport {\n  DraftPostResponseBody,\n  MessageDraftGetResponseBody,\n  MessageDraftPutRequestBody,\n  PresentationMessagePostResponseBody,\n  TopicsGetResponseBody,\n} from '@backbase/messages-v5-http-ang';\n\nexport abstract class BaseCreateMessageFormService<T> {\n  abstract getTopics(): Observable<TopicsGetResponseBody[] | null>;\n  abstract createMessage(params: T): Observable<PresentationMessagePostResponseBody | null>;\n  abstract saveDraft?(params: T): Observable<DraftPostResponseBody | null>;\n  abstract getDraft?(id: string): Observable<MessageDraftGetResponseBody | null>;\n  abstract deleteDraft?(id: string): Observable<any>;\n  abstract updateDraft?(id: string, body: MessageDraftPutRequestBody): Observable<any>;\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject, EMPTY, Observable, of, PartialObserver, Subject } from 'rxjs';\nimport { filter, finalize, first, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport {\n  ManipulationType,\n  MessagesConfirmationModalModel,\n} from '../../messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { BaseCreateMessageFormService } from './base-create-message-form.service';\nimport { MessageDraftGetResponseBody, TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { SimpleFormModel } from '../../../models/simple-form.model';\nimport { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';\nimport { FileObject } from '../../upload-attachments/model/messages-upload-attachments.model';\n\n@Component({\n  template: '',\n  providers: [MessagesManipulationConfirmModalService, MessagesUploadAttachmentsService],\n})\nexport class BaseCreateMessageFormComponent<T> implements OnInit, OnDestroy {\n  /**\n   * Input stream of reset signals that will trigger form reset.\n   */\n  @Input() reset: Observable<void> | undefined;\n\n  /**\n   * Input for maximum file attachment size in megabytes\n   */\n  @Input() maxAttachmentSize: string | undefined;\n\n  /**\n   * Input for maximum characters length for name field value\n   */\n  @Input() maxMailoutNameLength: number | undefined;\n\n  /**\n   * Input for maximum characters length for subject field value\n   */\n  @Input() maxSubjectLength: number | undefined;\n\n  /**\n   * Input for maximum characters length for message field value\n   */\n  @Input() maxMessageLength: number | undefined;\n\n  /**\n   * The parent modal open/closed state.\n   */\n  @Input() readonly isModalOpen: boolean | undefined;\n  /**\n   * Input draft id to get draft and prefill compose form with it\n   */\n  @Input()\n  set draftId(value: string | undefined) {\n    this.draftId$.next(value);\n  }\n\n  /**\n   * The draft ID getter.\n   */\n  get draftId() {\n    return this.draftId$.getValue();\n  }\n\n  /**\n   * The event that's fired after confirm button is pressed.\n   */\n  @Output() confirm = new EventEmitter<string | null>();\n\n  /**\n   * The event that's fired after cancel button is pressed.\n   */\n  @Output() cancel = new EventEmitter<void>();\n\n  /**\n   * The notification for the successful compose message operation.\n   */\n  @ViewChild('messageComposeSuccess') messageComposeSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the successfully saved draft.\n   */\n  @ViewChild('messageSaveDraftSuccess') messageSaveDraftSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the successfully saved draft.\n   */\n  @ViewChild('messageUpdateDraftSuccess') messageUpdateDraftSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the compose message error.\n   */\n  @ViewChild('messageComposeError') messageComposeErrorTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the save draft error.\n   */\n  @ViewChild('messageSaveDraftError') messageSaveDraftErrorTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the update draft error.\n   */\n  @ViewChild('messageUpdateDraftError') messageUpdateDraftErrorTpl: TemplateRef<any> | undefined;\n\n  readonly hostRef = this;\n\n  /**\n   * The file attachments array.\n   */\n  attachments: Array<FileObject> | undefined;\n\n  /**\n   * The blank new message form with the initial values.\n   */\n  newMessageFormGroup: FormGroup;\n\n  /**\n   * The draft form value.\n   */\n  draftFormValue: { [key: string]: any } | undefined;\n\n  /**\n   * Confirmation modal parameters.\n   */\n  confirmationModal: MessagesConfirmationModalModel = {\n    opened: false,\n    type: undefined,\n  };\n\n  /**\n   * The flag indicating if the form is loading.\n   */\n  formLoading = false;\n\n  private readonly topics$ = new BehaviorSubject<TopicsGetResponseBody[] | null | undefined>(undefined);\n\n  /**\n   * The stream with topics.\n   */\n  readonly topics: Observable<TopicsGetResponseBody[] | null | undefined> = this.topics$.asObservable();\n\n  /**\n   * The manipulationType enum ( `resolve`, `unresolve`, `assign`, `unassign`, `discard`,\n   * `discardDraft`, `discardPreview`, `deleteTopic`, `deleteMailout`)\n   */\n  readonly manipulationTypes = ManipulationType;\n  private readonly unsubscribe$ = new Subject<undefined>();\n  private readonly draftId$ = new BehaviorSubject<string | undefined>(undefined);\n\n  constructor(\n    readonly sharedService: SharedMethodsService,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    readonly cd: ChangeDetectorRef,\n    readonly createMessageFormService: BaseCreateMessageFormService<T>,\n    readonly fb: FormBuilder,\n    readonly encodingService: MessagesEncodingService,\n    readonly uploadService: MessagesUploadAttachmentsService,\n  ) {\n    this.newMessageFormGroup = this.fb.group({\n      topic: ['', Validators.required],\n      subject: ['', Validators.required],\n      body: ['', Validators.required],\n      attachments: [],\n    });\n  }\n\n  ngOnInit() {\n    if (this.reset) {\n      this.reset.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n        this.confirmModalService.toggleModal(\n          true,\n          this.manipulationTypes.discard,\n          this.newMessageFormGroup,\n          this.draftFormValue,\n        );\n      });\n    }\n\n    this.createMessageFormService.getTopics().subscribe(res => {\n      this.restoreTopicSelection(res);\n      this.topics$.next(res);\n    });\n\n    this.draftId$\n      .pipe(\n        filter(id => !!(id && id.length)),\n        switchMap(id => this.getDrafts(id)),\n      )\n      .subscribe();\n\n    this.confirmModalService.emitToggleModal$.pipe(takeUntil(this.unsubscribe$)).subscribe(({ opened, type }) => {\n      this.confirmationModal = { opened, type };\n      if (!opened && type === ManipulationType.discard) {\n        this.onCancel();\n      }\n      this.cd.detectChanges();\n    });\n  }\n\n  /**\n   * The method to get a simple value from the form.\n   *\n   * @param simpleFormModel Message data\n   */\n  getSimpleFormVal({ body, subject, topic, attachments }: SimpleFormModel) {\n    return {\n      ...(body && body.length && { body: this.encodingService.b64Encode(body) }),\n      ...(subject && subject.length && { subject }),\n      ...(topic && topic.id && { topic: topic.id }),\n      ...(attachments && attachments.length && { attachments: attachments.map(item => item.id) }),\n    };\n  }\n\n  resetFormOnElementBlur() {\n    if (!this.isModalOpen) {\n      setTimeout(() => {\n        this.newMessageFormGroup.reset();\n      }, 0);\n    }\n  }\n\n  /**\n   * The method to create a message.\n   *\n   * @param value Message data\n   */\n  createMessage(value: T) {\n    this.formLoading = true;\n    this.newMessageFormGroup.disable();\n\n    this.createMessageFormService\n      .createMessage(value)\n      .pipe(\n        first(),\n        switchMap(() => {\n          if (this.createMessageFormService.deleteDraft && this.draftId) {\n            return this.createMessageFormService.deleteDraft(this.draftId);\n          }\n\n          return of(undefined);\n        }),\n        finalize(() => {\n          this.formLoading = false;\n        }),\n      )\n      .subscribe(this.responseHandler(this.messageComposeSuccessTpl, this.messageComposeErrorTpl));\n  }\n\n  /**\n   * The method to save a message as a draft.\n   *\n   * @param value Draft data\n   */\n  onSave(value: T) {\n    this.newMessageFormGroup.disable();\n\n    if (\n      this.sharedService.hasFormValue(this.newMessageFormGroup) &&\n      this.sharedService.isFormInvalid(this.newMessageFormGroup, this.draftFormValue)\n    ) {\n      if (this.draftId) {\n        this.updateDraft(this.draftId, value);\n      } else {\n        this.saveDraft(value);\n      }\n    } else {\n      this.onCancel();\n    }\n  }\n\n  /**\n   * The method to get the draft and prefill the compose form with it.\n   *\n   * @param id Draft id\n   */\n  getDrafts(id?: string): Observable<MessageDraftGetResponseBody | null> {\n    if (this.createMessageFormService.getDraft && id) {\n      return this.createMessageFormService.getDraft(id).pipe(\n        map(res => {\n          const drafts = res || {};\n          const formValue: any = {};\n          const topics = this.topics$.getValue();\n\n          for (const [key, value] of Object.entries(drafts)) {\n            formValue[key] = value;\n\n            if (this.newMessageFormGroup.controls.hasOwnProperty(key)) {\n              formValue[key] = this.handleFormValues(key, value, topics);\n\n              if (formValue[key]) {\n                this.newMessageFormGroup.controls[key].setValue(formValue[key]);\n              }\n            }\n          }\n\n          this.draftFormValue = formValue;\n          this.newMessageFormGroup.markAsPristine();\n\n          return res;\n        }),\n      );\n    }\n\n    return EMPTY;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  /**\n   * The method to resolve the confirmation modal.\n   */\n  confirmConfirmationModal() {\n    if (this.confirmationModal && this.confirmationModal.type === ManipulationType.discard) {\n      this.onCancel();\n    }\n\n    this.confirmModalService.toggleModal(false);\n  }\n\n  /**\n   * The method to cancel the confirmation modal.\n   */\n  onCancel() {\n    this.resetToInit(true);\n    this.cancel.emit();\n  }\n\n  /**\n   * The method to get any errors generated by failing validation, or null if there are no errors.\n   *\n   * @param field Field name\n   * @param type Error type\n   */\n  hasError(field: string, type: string): boolean {\n    const control = this.getControl(field);\n\n    return control?.errors?.[type];\n  }\n\n  /**\n   * The method that defines whether the control is valid or not.\n   *\n   * @param field Field name\n   * @returns Is form field valid flag\n   */\n  isInvalidControl(field: string): boolean {\n    const control = this.getControl(field);\n\n    return !!control && control.touched && control.invalid;\n  }\n\n  private saveDraft(value: T) {\n    if (this.createMessageFormService.saveDraft) {\n      this.createMessageFormService\n        .saveDraft(value)\n        .pipe(first())\n        .subscribe(this.responseHandler(this.messageSaveDraftSuccessTpl, this.messageSaveDraftErrorTpl));\n    }\n  }\n\n  private updateDraft(draftId: string, value: T) {\n    if (this.createMessageFormService.updateDraft) {\n      this.createMessageFormService\n        .updateDraft(draftId, value)\n        .pipe(first())\n        .subscribe(this.responseHandler(this.messageUpdateDraftSuccessTpl, this.messageUpdateDraftErrorTpl));\n    }\n  }\n\n  private handleFormValues(key: string, value: any, topics?: TopicsGetResponseBody[] | null) {\n    if (key === 'body') {\n      return this.encodingService.b64Decode(value as string);\n    }\n\n    if (key === 'topic' && topics) {\n      const existingTopic = topics.find(topic => topic.id === value.id);\n\n      return existingTopic ? existingTopic : '';\n    }\n\n    if (key === 'attachments') {\n      this.attachments = [...value];\n    }\n\n    return value;\n  }\n\n  private responseHandler(successTpl: any, errorTpl: any): PartialObserver<any> {\n    return {\n      next: res => {\n        this.sharedService.openNotification(successTpl ? successTpl : '');\n\n        this.confirm.emit(res && res.id);\n      },\n      error: error => {\n        const errorMessage = this.sharedService.getErrorMessage(error) || errorTpl;\n        this.sharedService.openNotification(errorMessage, 'error');\n        this.newMessageFormGroup.enable();\n      },\n      complete: () => this.resetToInit(),\n    };\n  }\n\n  protected resetToInit(isFormDiscard = false) {\n    this.newMessageFormGroup.enable();\n    this.newMessageFormGroup.reset();\n    this.draftFormValue = undefined;\n    this.uploadService.reset(isFormDiscard);\n  }\n\n  private getControl(field: string): AbstractControl | undefined {\n    return this.newMessageFormGroup && this.newMessageFormGroup.controls[field];\n  }\n\n  private restoreTopicSelection(topics: TopicsGetResponseBody[] | null) {\n    topics?.map(topic => {\n      if (topic.id === this.newMessageFormGroup.controls['topic']?.value?.id) {\n        this.newMessageFormGroup.controls['topic'].setValue(topic);\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseCreateMessageFormComponent } from './base-create-message-form.component';\n\n@NgModule({\n  declarations: [BaseCreateMessageFormComponent],\n  imports: [CommonModule],\n})\nexport class BaseCreateMessageFormModule {}\n","import { Observable } from 'rxjs';\n\nexport function snapshot<T>(source: Observable<T>): T | undefined {\n  let result: T | undefined;\n\n  const subscr = source.subscribe((res: T) => {\n    result = res;\n  });\n  subscr.unsubscribe();\n\n  return result;\n}\n","import { combineLatest, defer, Observable, of } from 'rxjs';\nimport { map, publishReplay, refCount } from 'rxjs/operators';\n\nexport const getPropertyValue = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n\nexport const defaultModelObservable = <T>(value: T): Observable<T> =>\n  defer(() => of(value)).pipe(publishReplay(1), refCount());\n","export const modelItemToBoolean = (value: string | boolean): boolean => {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n\n  return value.trim() === 'true';\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { defaultModelObservable } from '../../../utils/item-model-property';\nimport { Observable } from 'rxjs';\n\nexport const DefaultWidgetProperties = {\n  debounceTime: 500,\n  maxAttachmentSize: '10',\n  maxMailoutNameLength: 255,\n  maxSubjectLength: 100,\n  maxMessageLength: 300,\n  minSearchLength: 1,\n  modalHeader: 'New message',\n  hideComposeButton: false,\n  createMessageOpenEventName: 'bb.event.messages.create.message.open',\n  createMessageClosedEventName: 'bb.event.messages.create.message.close',\n  senderDisplayName: 'Backbase',\n  shouldPreDefineUser: false,\n  isPreDefinedUserReadonly: false,\n};\n\n@Injectable()\nexport class BaseCreateMessageModalPropertiesService {\n  constructor(@Optional() private readonly itemModel?: ItemModel) {}\n\n  /**\n   * Max attachment size\n   */\n  get maxAttachmentSize(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxAttachmentSize);\n    }\n\n    return this.itemModel.property('maxAttachmentSize', DefaultWidgetProperties.maxAttachmentSize);\n  }\n\n  /**\n   * Max message length\n   */\n  get maxMessageLength(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxMessageLength);\n    }\n\n    return this.itemModel.property('maxMessageLength', DefaultWidgetProperties.maxMessageLength);\n  }\n\n  /**\n   * Max mailout name length\n   */\n  get maxMailoutNameLength(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxMailoutNameLength);\n    }\n\n    return this.itemModel.property('maxMailoutNameLength', DefaultWidgetProperties.maxMailoutNameLength);\n  }\n\n  /**\n   * Max subject length\n   */\n  get maxSubjectLength(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxSubjectLength);\n    }\n\n    return this.itemModel.property('maxSubjectLength', DefaultWidgetProperties.maxSubjectLength);\n  }\n\n  /**\n   * Modal header\n   */\n  get modalHeader(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.modalHeader);\n    }\n\n    return this.itemModel.property('modalHeader', DefaultWidgetProperties.modalHeader);\n  }\n\n  /**\n   * Debounce time\n   */\n  get debounceTime(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.debounceTime);\n    }\n\n    return this.itemModel.property('debounceTime', DefaultWidgetProperties.debounceTime);\n  }\n\n  /**\n   * Min search length\n   */\n  get minSearchLength(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.minSearchLength);\n    }\n\n    return this.itemModel.property('minSearchLength', DefaultWidgetProperties.minSearchLength);\n  }\n\n  /**\n   * Flag to hide or show compose button\n   */\n  get hideComposeButton(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.hideComposeButton);\n    }\n\n    return this.itemModel.property('hideComposeButton', DefaultWidgetProperties.hideComposeButton);\n  }\n\n  /**\n   * Open event for create message modal\n   */\n  get createMessageOpenEventName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.createMessageOpenEventName);\n    }\n\n    return this.itemModel.property('createMessageOpenEventName', DefaultWidgetProperties.createMessageOpenEventName);\n  }\n\n  /**\n   * Close event for create message modal\n   */\n  get createMessageClosedEventName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.createMessageClosedEventName);\n    }\n\n    return this.itemModel.property(\n      'createMessageClosedEventName',\n      DefaultWidgetProperties.createMessageClosedEventName,\n    );\n  }\n\n  /**\n   * Flag to show or hide sender name\n   */\n  get senderDisplayName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.senderDisplayName);\n    }\n\n    return this.itemModel.property('senderDisplayName', DefaultWidgetProperties.senderDisplayName);\n  }\n\n  /**\n   * Flag to predefine or not user input\n   */\n  get shouldPreDefineUser(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.shouldPreDefineUser);\n    }\n\n    return this.itemModel.property('shouldPreDefineUser', DefaultWidgetProperties.shouldPreDefineUser);\n  }\n\n  /**\n   * Flag to disable predefined user input\n   */\n  get isPreDefinedUserReadonly(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.isPreDefinedUserReadonly);\n    }\n\n    return this.itemModel.property('isPreDefinedUserReadonly', DefaultWidgetProperties.isPreDefinedUserReadonly);\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { BaseCreateMessageModalPropertiesService } from './base-create-message-modal-properties.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { snapshot } from '../../../utils/snapshot';\nimport { getPropertyValue } from '../../../utils/item-model-property';\nimport { modelItemToBoolean } from '../../../utils/type-helpers';\n\n@Component({\n  template: '',\n})\nexport class BaseCreateMessageModalComponent implements OnDestroy {\n  static counter = 0;\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `base-create-message-modal-${BaseCreateMessageModalComponent.counter++}`;\n  private readonly resetSubject = new Subject<undefined>();\n\n  /**\n   * The stream with the form reset triggers.\n   */\n  readonly resetStream = this.resetSubject.asObservable();\n  readonly hostRef = this;\n\n  /**\n   * The stream with the maximum attachment size.\n   */\n  @Input('maxAttachmentSize') set maxAttachmentSizeValue(value: string | number) {\n    this.maxAttachmentSize$$.next(String(value));\n  }\n\n  /**\n   * The stream with the maximum name length.\n   */\n  @Input('maxMailoutNameLength') set maxMailoutNameLengthValue(value: string | number) {\n    this.maxMailoutNameLength$$.next(Number(value));\n  }\n\n  /**\n   * The stream with the maximum subject length.\n   */\n  @Input('maxSubjectLength') set maxSubjectLengthValue(value: string | number) {\n    this.maxSubjectLength$$.next(Number(value));\n  }\n\n  /**\n   * The stream with the maximum message length.\n   */\n  @Input('maxMessageLength') set maxMessageLengthValue(value: string | number) {\n    this.maxMessageLength$$.next(Number(value));\n  }\n\n  /**\n   * The stream with the modal header.\n   */\n  @Input('modalHeader') set modalHeaderValue(value: string) {\n    this.modalHeader$$.next(value);\n  }\n\n  /**\n   * The stream with a flag indicating if the Compose button is hidden.\n   */\n  @Input('hideComposeButton') set hideComposeButtonValue(value: string | boolean) {\n    this.hideComposeButton$$.next(modelItemToBoolean(value));\n  }\n\n  /**\n   * Event published to open Create message modal\n   */\n  @Input('createMessageOpenEventName') set createMessageOpenEventNameValue(value: string) {\n    this.createMessageOpenEventName$$.next(value);\n  }\n\n  /**\n   * Event published when Create message modal widget was closed\n   */\n  @Input('createMessageClosedEventName') set createMessageClosedEventNameValue(value: string) {\n    this.createMessageClosedEventName$$.next(value);\n  }\n\n  /**\n   * The draft ID.\n   */\n  draftId: string | undefined;\n\n  /**\n   * The flag indicating if the modal is opened or closed.\n   */\n  modalOpened = false;\n\n  /**\n   * The modal options.\n   */\n  modalOptions = {\n    size: 'md',\n    beforeDismiss: () => {\n      this.resetSubject.next();\n\n      return false;\n    },\n  };\n\n  private readonly maxAttachmentSize$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly maxMailoutNameLength$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxSubjectLength$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxMessageLength$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly modalHeader$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly hideComposeButton$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly createMessageOpenEventName$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly createMessageClosedEventName$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  private readonly destroy$ = new Subject<void>();\n\n  /**\n   * The stream with the maximum name size.\n   */\n  readonly maxMailoutNameLength: Observable<number> = getPropertyValue(\n    this.maxMailoutNameLength$$,\n    this.properties.maxMailoutNameLength,\n  );\n\n  /**\n   * The stream with the maximum subject size.\n   */\n  readonly maxSubjectLength: Observable<number> = getPropertyValue(\n    this.maxSubjectLength$$,\n    this.properties.maxSubjectLength,\n  );\n\n  /**\n   * The stream with the maximum attachment size.\n   */\n  readonly maxAttachmentSize: Observable<string> = getPropertyValue(\n    this.maxAttachmentSize$$,\n    this.properties.maxAttachmentSize,\n  );\n\n  /**\n   * The stream with the maximum message length.\n   */\n  readonly maxMessageLength: Observable<number> = getPropertyValue(\n    this.maxMessageLength$$,\n    this.properties.maxMessageLength,\n  );\n\n  /**\n   * The stream with the modal header text.\n   */\n  readonly modalHeader: Observable<string> = getPropertyValue(this.modalHeader$$, this.properties.modalHeader);\n\n  /**\n   * The stream with a flag indicating if the Compose button is hidden.\n   */\n  readonly hideComposeButton: Observable<boolean> = getPropertyValue(\n    this.hideComposeButton$$,\n    this.properties.hideComposeButton,\n  );\n\n  /**\n   * Event published to open Create message modal\n   */\n  readonly createMessageOpenEventName: Observable<string> = getPropertyValue(\n    this.createMessageOpenEventName$$,\n    this.properties.createMessageOpenEventName,\n  );\n\n  /**\n   * Event published when Create message modal widget was closed\n   */\n  readonly createMessageClosedEventName: Observable<string> = getPropertyValue(\n    this.createMessageClosedEventName$$,\n    this.properties.createMessageClosedEventName,\n  );\n\n  constructor(protected properties: BaseCreateMessageModalPropertiesService, protected shared: SharedMethodsService) {\n    this.createMessageOpenEventName\n      .pipe(\n        switchMap(eventName => this.shared.eventBusFactory(eventName)),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(obj => this.openModal(obj && obj.draftId));\n  }\n\n  /**\n   * The method to open the modal.\n   *\n   * @param id\n   */\n  openModal(id?: string) {\n    this.modalOpened = true;\n    this.draftId = id;\n  }\n\n  /**\n   * The method to close the modal.\n   */\n  closeModal() {\n    this.modalOpened = false;\n\n    const eventName = snapshot(this.createMessageClosedEventName) as string;\n    this.shared.eventBusPublish<Record<string, unknown>>(eventName, {});\n    this.draftId = undefined;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseCreateMessageModalComponent } from './base-create-message-modal.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BaseCreateMessageModalComponent],\n})\nexport class BaseCreateMessageModalModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  template: '',\n})\nexport class BaseModalComponent {\n  static counter = 0;\n\n  /**\n   * Input that toggles opening/closing the modal\n   */\n  @Input() isOpen = false;\n  /**\n   * Event emitted when modal was resolved\n   */\n  @Output() confirm = new EventEmitter<string | undefined>();\n  /**\n   * Event emitted when modal was dismissed\n   */\n  @Output() cancel = new EventEmitter<void>();\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `base-modal-component-${BaseModalComponent.counter++}`;\n  readonly hostRef = this;\n\n  /**\n   * The method to reset the form and the cancellation modal.\n   */\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  /**\n   * The method to confirm the value change.\n   *\n   * @param value Changed value\n   */\n  onConfirm(value?: string) {\n    this.confirm.emit(value);\n  }\n}\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ManipulationType } from './manipulation-confirm-modal-types.model';\nimport { BaseModalComponent } from '../base-modal/base-modal.component';\n\n@Component({\n  selector: 'bb-messages-manipulation-confirm-modal',\n  templateUrl: './messages-manipulation-confirm-modal.component.html',\n})\nexport class MessagesManipulationConfirmModalComponent extends BaseModalComponent {\n  /**\n   * Input type that represents appropriate header with message in confirm modal window\n   */\n  @Input() type: ManipulationType | undefined;\n\n  /**\n   * The `resolve` manipulation type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  resolveType = ManipulationType.resolve;\n\n  /**\n   * The unresolve `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  unresolveType = ManipulationType.unresolve;\n\n  /**\n   * The assign `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  assignType = ManipulationType.assign;\n\n  /**\n   * The unassign `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  unassignType = ManipulationType.unassign;\n\n  /**\n   * The discard `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  discardType = ManipulationType.discard;\n\n  /**\n   * The discardDraft `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  discardDraftType = ManipulationType.discardDraft;\n\n  /**\n   * The discardPreview `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  discardPreviewType = ManipulationType.discardPreview;\n\n  /**\n   * The deleteTopicType `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  deleteTopicType = ManipulationType.deleteTopic;\n\n  /**\n   * The deleteMailoutType `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  deleteMailoutType = ManipulationType.deleteMailout;\n\n  constructor() {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesManipulationConfirmModalCustomizable]',\n})\nexport class MessagesManipulationConfirmModalCustomizableDirective extends BbTemplate<\n  MessagesManipulationConfirmModalComponent,\n  undefined\n> {}\n","<ng-container bbMessagesManipulationConfirmModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbMessagesManipulationConfirmModalCustomizable let-host>\n  <bb-modal-ui [isOpen]=\"host.isOpen\" (cancel)=\"host.onCancel()\" aria-describedby=\"manipulation-modal-content\">\n    <div id=\"manipulation-modal-content\">\n      <ng-container [ngSwitch]=\"host.type\">\n        <ng-container *ngSwitchCase=\"host.resolveType\">\n          <ng-container *ngTemplateOutlet=\"resolveConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.unresolveType\">\n          <ng-container *ngTemplateOutlet=\"unresolveConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.assignType\">\n          <ng-container *ngTemplateOutlet=\"assignConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.unassignType\">\n          <ng-container *ngTemplateOutlet=\"unassignConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardType\">\n          <ng-container *ngTemplateOutlet=\"discardConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardPreviewType\">\n          <ng-container *ngTemplateOutlet=\"discardConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardDraftType\">\n          <ng-container *ngTemplateOutlet=\"discardDraftConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.deleteTopicType\">\n          <ng-container *ngTemplateOutlet=\"deleteTopicConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.deleteMailoutType\">\n          <ng-container *ngTemplateOutlet=\"deleteMailoutConfirmTemplate\"></ng-container>\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <ng-container [ngSwitch]=\"host.type\">\n            <button\n              *ngSwitchCase=\"host.discardType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard button text@@messages.manipulationConfirmModalComponent.discardButton\">Discard</span>\n            </button>\n            <button\n              *ngSwitchCase=\"host.discardPreviewType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard button text@@messages.manipulationConfirmModalComponent.discardButton\">Discard</span>\n            </button>\n\n            <button\n              *ngSwitchCase=\"host.discardDraftType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-draft-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard draft button text@@messages.manipulationConfirmModalComponent.discardDraftButton\"\n                >Delete</span\n              >\n            </button>\n\n            <ng-container *ngSwitchCase=\"host.deleteTopicType\">\n              <ng-container *ngTemplateOutlet=\"deleteButton\"></ng-container>\n            </ng-container>\n\n            <ng-container *ngSwitchCase=\"host.deleteMailoutType\">\n              <ng-container *ngTemplateOutlet=\"deleteButton\"></ng-container>\n            </ng-container>\n\n            <button\n              *ngSwitchDefault\n              bbButton\n              class=\"bb-button-bar__button\"\n              data-role=\"confirm-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Submit button text@@messages.manipulationConfirmModalComponent.submitButton\">Submit</span>\n            </button>\n\n            <ng-template #deleteButton>\n              <button\n                bbButton\n                class=\"bb-button-bar__button\"\n                color=\"danger\"\n                data-role=\"delete-manipulation\"\n                (click)=\"host.onConfirm()\"\n              >\n                <span i18n=\"Delete button text@@messages.manipulationConfirmModalComponent.deleteButton\">Delete</span>\n              </button>\n            </ng-template>\n          </ng-container>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"secondary\"\n            data-role=\"cancel-manipulation\"\n            (click)=\"host.onCancel()\"\n          >\n            <span i18n=\"Cancel button text@@messages.manipulationConfirmModalComponent.cancelButton\">Cancel</span>\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n\n  <ng-template #resolveConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Mark this conversation as resolved?\"\n          i18n-heading=\"\n            Mark this conversation as\n            resolved?@@messages.manipulationConfirmModalComponent.resolveConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to mark this conversation as\n            resolved?@@messages.manipulationConfirmModalComponent.resolveConfirmTemplate.modalBody\"\n          >Are you sure you want to mark this conversation as resolved?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #unresolveConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Renew this conversation from resolved?\"\n          i18n-heading=\"\n            Renew this conversation from\n            resolved?@@messages.manipulationConfirmModalComponent.unresolveConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to renew this conversation from resolved? This conversation will be automaticaly\n            assigned to you.@@messages.manipulationConfirmModalComponent.unresolveConfirmTemplate.modalBody\"\n          >Are you sure you want to renew this conversation from resolved? This conversation will be automaticaly\n          assigned to you.</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #assignConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Assign conversation?\"\n          i18n-heading=\"\n            Assign conversation?@@messages.manipulationConfirmModalComponent.assignConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to assign this\n            conversation?@@messages.manipulationConfirmModalComponent.assignConfirmTemplate.modalBody\"\n          >Are you sure you want to assign this conversation?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #unassignConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Unassign conversation?\"\n          i18n-heading=\"\n            Unassign conversation?@@messages.manipulationConfirmModalComponent.unassignConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to unassign this\n            conversation?@@messages.manipulationConfirmModalComponent.unassignConfirmTemplate.modalBody\"\n          >Are you sure you want to unassign this conversation?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #discardConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Discard message?\"\n          data-role=\"discard-message-header\"\n          i18n-heading=\"Discard message?@@messages.manipulationConfirmModalComponent.discardConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          data-role=\"discard-message-body\"\n          i18n=\"\n            Are you sure you want to discard this message? All filled data will be\n            lost@@messages.manipulationConfirmModalComponent.discardConfirmTemplate.modalBody\"\n          >Are you sure you want to discard this message? All filled data will be lost</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #discardDraftConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Discard message and delete draft?\"\n          i18n-heading=\"\n            Discard message and delete\n            draft?@@messages.manipulationConfirmModalComponent.discardDraftConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to discard this message and delete draft? All filled data will be\n            lost@@messages.manipulationConfirmModalComponent.discardDraftConfirmTemplate.modalBody\"\n          >Are you sure you want to discard this message and delete draft? All filled data will be lost</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #deleteTopicConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Delete topic?\"\n          i18n-heading=\"\n            Delete topic?@@messages.manipulationConfirmModalComponent.deleteTopicConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            This action will unsubscribe all users from this topic. Are you sure you want to delete\n            it?@@messages.manipulationConfirmModalComponent.deleteTopicConfirmTemplate.modalBody\"\n          >This action will unsubscribe all users from this topic. Are you sure you want to delete it?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #deleteMailoutConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Delete mailout?\"\n          i18n-heading=\"\n            Delete mailout modal\n            header@@messages.manipulationConfirmModalComponent.deleteMailoutConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Delete mailout modal body@@messages.manipulationConfirmModalComponent.deleteMailoutConfirmTemplate.modalBody\"\n          >Are you sure to delete a mailout? This action can not be undone.</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ModalModule } from '@backbase/ui-ang/modal';\n\nimport { MessagesManipulationConfirmModalService } from './messages-manipulation-confirm-modal.service';\nimport {\n  MessagesManipulationConfirmModalComponent,\n  MessagesManipulationConfirmModalCustomizableDirective,\n} from './messages-manipulation-confirm-modal.component';\nimport { BaseModalComponent } from '../base-modal/base-modal.component';\n\nconst components = [MessagesManipulationConfirmModalComponent];\nconst directives = [MessagesManipulationConfirmModalCustomizableDirective];\nconst uiModule = [ModalModule, HeaderModule, ButtonModule];\n@NgModule({\n  declarations: [BaseModalComponent, ...components, ...directives],\n  exports: [...components, ...directives],\n  imports: [CommonModule, ...uiModule],\n  providers: [MessagesManipulationConfirmModalService, ...uiModule],\n})\nexport class MessagesManipulationConfirmModalModule {}\n","import { Observable, Subject } from 'rxjs';\nimport { DeleteResponseBody, Metadata } from '@backbase/messages-v5-http-ang';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { FileObject } from '../model/messages-upload-attachments.model';\n\nexport abstract class BaseUploadAttachmentsService {\n  abstract deleteAttachments(ids: Array<string>): Observable<DeleteResponseBody | null>;\n  abstract uploadAttachment(attachment: Blob): Observable<Metadata | null>;\n}\n\nexport interface FileAttachmentInterface {\n  loading: boolean;\n  name: string | undefined;\n  size: number | undefined;\n  onDelete: Subject<number>;\n  deleteAttachment(id: string, index: number): void;\n  uploadAttachment(): Observable<Metadata | null>;\n  setLoading(flag: boolean): void;\n}\n\nexport class FileAttachment implements FileAttachmentInterface {\n  /**\n   * The loading flag.\n   */\n  loading = false;\n\n  /**\n   * Attachment name\n   */\n  name: string | undefined;\n\n  /**\n   * Attachment size\n   */\n  size: number | undefined;\n\n  /**\n   * Delete attachment subject that holds index\n   */\n  onDelete = new Subject<number>();\n\n  private readonly cancelSubject = new Subject<void>();\n  private readonly file: File | FileObject | undefined;\n  private id: string | undefined;\n\n  constructor(file: File | FileObject, protected service: BaseUploadAttachmentsService) {\n    this.file = file;\n    this.size = file.size;\n\n    if ((file as FileObject).id) {\n      this.id = (file as FileObject).id;\n      this.name = (file as FileObject).filename;\n    } else {\n      this.name = (file as File).name;\n    }\n  }\n\n  /**\n   * Delete attachment\n   *\n   * @param id Attachment id\n   * @param index Attachment index\n   */\n  deleteAttachment(id: string, index: number) {\n    if (this.id && this.id === id) {\n      this.service.deleteAttachments([id]).subscribe();\n    } else {\n      this.cancelSubject.next();\n    }\n\n    this.onDelete.next(index);\n  }\n\n  /**\n   * Upload attachments\n   */\n  uploadAttachment() {\n    this.setLoading(true);\n\n    return this.service.uploadAttachment(this.file as Blob).pipe(\n      takeUntil(this.cancelSubject),\n      tap(value => {\n        this.id = value ? value.id : undefined;\n        this.setLoading(false);\n      }),\n    );\n  }\n\n  /**\n   * Set loading flag\n   *\n   * @param flag Loaging status flag\n   */\n  setLoading(flag: boolean) {\n    this.loading = flag;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, EMPTY, Observable, Subject } from 'rxjs';\nimport { catchError, filter, finalize, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport {\n  BaseUploadAttachmentsService,\n  FileAttachment,\n  FileAttachmentInterface,\n} from './services/base-attachments.service';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { SharedMethodsService } from '../../services/shared-methods/shared-methods.service';\nimport { MessagesUploadAttachmentsService } from './services/messages-upload-attachments.service';\nimport { DeleteResponseBody, Metadata } from '@backbase/messages-v5-http-ang';\n\n@Component({\n  selector: 'bb-messages-upload-attachments-ui, bb-messages-upload-attachments',\n  templateUrl: './messages-upload-attachments.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MessagesUploadAttachmentsComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => MessagesUploadAttachmentsComponent),\n      multi: true,\n    },\n  ],\n})\nexport class MessagesUploadAttachmentsComponent implements ControlValueAccessor, Validator, OnInit, OnDestroy {\n  /**\n   * Maximum size for file upload in megabytes\n   */\n  @Input() set maxSize(value: number | string | undefined) {\n    if (value) {\n      const number = Number(value);\n      this.maxSizeMegabytesValue = number;\n      this.maxSizeBytesValue = number * 1024 * 1024;\n    }\n  }\n\n  /**\n   * Array of attachments objects\n   */\n  @Input()\n  set initAttachments(value: Array<Metadata> | undefined) {\n    this.initAttachments$.next(value);\n  }\n\n  /**\n   * Disabled state flag\n   */\n  @Input() disabled = false;\n\n  /**\n   * Input to define adding file multiple times\n   * True by defaults\n   */\n  @Input() multiple = true;\n\n  /**\n   * The attachment button text.\n   */\n  @Input() attachmentButtonText: string | undefined;\n\n  /**\n   * The accepted file formats.\n   */\n  @Input() accept = '*';\n\n  /**\n   * The notification for the maximum attachment size exceeded error.\n   */\n  @ViewChild('maxAttachmentSizeError') maxAttachmentSizeErrorTpl: TemplateRef<any> | undefined;\n\n  private readonly initAttachments$ = new BehaviorSubject<Array<Metadata> | undefined>(undefined);\n\n  /**\n   * The file attachments array.\n   */\n  attachments: Array<FileAttachmentInterface> = [];\n\n  /**\n   * The file attachments array.\n   */\n  maxSizeMegabytesValue: number | undefined;\n\n  readonly hostRef = this;\n  private maxSizeBytesValue = 0;\n  private value: Array<Metadata> = [];\n  private newlyAddedAttachments: Array<Metadata> = [];\n  private loading = 0;\n  private readonly unsubscribe = new Subject();\n\n  constructor(\n    protected cd: ChangeDetectorRef,\n    protected service: BaseUploadAttachmentsService,\n    protected sharedService: SharedMethodsService,\n    protected uploadService: MessagesUploadAttachmentsService,\n  ) {}\n\n  /**\n   * The method to upload a file attachment.\n   *\n   * @param input\n   */\n  onFileAdded(input: HTMLInputElement) {\n    const file = input && input.files && input.files[0];\n\n    this.onTouched();\n\n    if (file) {\n      input.value = '';\n\n      if (this.maxSizeBytesValue && file.size > this.maxSizeBytesValue) {\n        this.sharedService.openNotification(this.maxAttachmentSizeErrorTpl, 'error');\n\n        return;\n      }\n\n      const attachment = new FileAttachment(file, this.service);\n      const index = this.attachments.push(attachment);\n\n      this.loading++;\n      this.onValidationChange();\n\n      attachment\n        .uploadAttachment()\n        .pipe(\n          take(1),\n          tap(value => this.onValueChanged(value || undefined)),\n          catchError(error => {\n            this.removeRedundantAttachment(index - 1);\n\n            return this.showErrorNotification(error);\n          }),\n          finalize(() => {\n            this.loading--;\n            this.onValidationChange();\n\n            this.cd.markForCheck();\n          }),\n          takeUntil(this.uploadService.reset$),\n        )\n        .subscribe();\n\n      attachment.onDelete.pipe(takeUntil(this.unsubscribe)).subscribe(i => this.removeRedundantAttachment(i));\n    }\n  }\n\n  ngOnInit() {\n    this.uploadService.reset$\n      .pipe(\n        map(type => {\n          const value = type ? [...this.newlyAddedAttachments].map(({ id }) => id) : [];\n\n          this.attachments = [];\n          this.value = [];\n          this.newlyAddedAttachments = [];\n          this.cd.markForCheck();\n\n          return { value, type };\n        }),\n        filter(({ value, type }) => !!(value.length && type)),\n        switchMap(({ value }) => this.deleteAttachments(value)),\n        takeUntil(this.unsubscribe),\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next(true);\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * The method from the ControlValueAccessor interface for setting the initial value (previously uploaded attachments)\n   * for file attachments input.\n   *\n   * @param value Previously uploaded attachments\n   */\n  writeValue(value: Array<Metadata> | null | undefined) {\n    if (value && value.length) {\n      this.value = [...value];\n      this.initAttachments$.pipe(takeUntil(this.uploadService.reset$)).subscribe(attachments => {\n        if (attachments) {\n          this.attachments = attachments.reduce((acc, item) => {\n            const attachment: FileAttachment = new FileAttachment(item, this.service);\n\n            // @ts-ignore\n            acc.push(attachment);\n\n            attachment.onDelete.pipe(takeUntil(this.unsubscribe)).subscribe(i => this.removeRedundantAttachment(i));\n\n            return acc;\n          }, []);\n        }\n      });\n    }\n    this.cd.markForCheck();\n  }\n\n  /**\n   * The method from the ControlValueAccessor interface for responding to the value change.\n   * Implemented through the registerOnChange method.\n   */\n  onChange: (newValue: Array<Metadata>) => void = () => {};\n\n  /**\n   * The method from the ControlValueAccessor interface for responding to the change of the untouched state.\n   * Implemented through the registerOnTouched method.\n   */\n  onTouched: () => void = () => {};\n\n  /**\n   * The method for responding to the validation change. Implemented through the registerOnValidatorChange method.\n   */\n  onValidationChange: () => void = () => {};\n\n  /**\n   * The method from the ControlValueAccessor interface for setting the onChange function implementation.\n   */\n  registerOnChange(fn: () => void) {\n    this.onChange = fn;\n  }\n\n  /**\n   * The method from the ControlValueAccessor interface for setting the onTouched function implementation.\n   */\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * The method from the Validator interface. Registers a callback function to call when the validator inputs change.\n   */\n  registerOnValidatorChange(fn: () => void) {\n    this.onValidationChange = fn;\n  }\n\n  /**\n   * The method from the ControlValueAccessor interface for setting the disabled state.\n   *\n   * @param isDisabled Is disabled flag\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this.cd.markForCheck();\n  }\n\n  /**\n   * The method from the Validator interface. This method performs synchronous validation against the provided control.\n   *\n   * @returns Validation errors\n   */\n  validate(): ValidationErrors | null {\n    return this.loading ? { loading: true } : null;\n  }\n\n  private deleteAttachments(ids: Array<string>): Observable<DeleteResponseBody | null | undefined> {\n    return this.service.deleteAttachments(ids).pipe(catchError(error => this.showErrorNotification(error)));\n  }\n\n  private removeRedundantAttachment(index: number) {\n    this.value.splice(index, 1);\n    this.attachments.splice(index, 1);\n    this.onChange(this.value);\n  }\n\n  private onValueChanged(value?: Metadata) {\n    if (value) {\n      this.value.push(value);\n      this.newlyAddedAttachments.push(value);\n      this.onChange(this.value);\n    }\n  }\n\n  private showErrorNotification(error: HttpErrorResponse) {\n    this.sharedService.openNotification(this.sharedService.getErrorMessage(error), 'error');\n\n    return EMPTY;\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesEmployeeUploadAttachmentsCustomizable],[bbMessagesUploadAttachmentsCustomizable]',\n})\nexport class MessagesUploadAttachmentsCustomizableDirective extends BbTemplate<\n  MessagesUploadAttachmentsComponent,\n  undefined\n> {}\n","<ng-container bbMessagesUploadAttachmentsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbMessagesUploadAttachmentsCustomizable let-host>\n  <bb-input-file-ui\n    [buttonText]=\"host.attachmentButtonText ? host.attachmentButtonText : attachFile.elementRef.nativeElement.innerText\"\n    [disabled]=\"host.disabled\"\n    [accept]=\"host.accept\"\n    *ngIf=\"!(!host.multiple && host.attachments.length)\"\n    (change)=\"host.onFileAdded($event.target)\"\n  ></bb-input-file-ui>\n\n  <div class=\"row\">\n    <div class=\"col-auto\" *ngFor=\"let attachment of host.attachments; let i = index\">\n      <div class=\"bb-block bb-block--md\">\n        <bb-file-attachment-ui\n          [name]=\"attachment.name\"\n          [size]=\"attachment.size\"\n          [loading]=\"attachment.loading\"\n          [deletable]=\"true\"\n          [disabled]=\"true\"\n          (delete)=\"attachment.deleteAttachment(attachment.id, i)\"\n        ></bb-file-attachment-ui>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #attachFile i18n=\"Attach file@@messages.messagesEmployeeUploadAttachments.attachFile\"\n    >Attach file</ng-template\n  >\n</ng-template>\n\n<ng-template #maxAttachmentSizeError>\n  <span\n    i18n=\"\n      Uploaded file exceeds the maximum allowed size@@messages.messagesEmployeeUploadAttachments.maxAttachmentSizeError\"\n    >The file you are trying to upload exceeds the maximum attachment size of\n  </span>\n  <span>{{ maxSizeMegabytesValue }}</span>\n  <span i18n=\"Mb|Megabytes@@messages.messagesEmployeeUploadAttachments.maxAttachmentSizeError.megabytes\">Mb</span>.\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedMethodsService } from './shared-methods.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [SharedMethodsService],\n})\nexport class SharedMethodsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputFileModule } from '@backbase/ui-ang/input-file';\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\n\nimport {\n  MessagesUploadAttachmentsComponent,\n  MessagesUploadAttachmentsCustomizableDirective,\n} from './messages-upload-attachments.component';\nimport { SharedMethodsModule } from '../../services/shared-methods/shared-methods.module';\nimport { MessagesUploadAttachmentsService } from './services/messages-upload-attachments.service';\n\nconst components = [MessagesUploadAttachmentsComponent];\nconst directives = [MessagesUploadAttachmentsCustomizableDirective];\nconst uiModules = [ButtonModule, FileAttachmentModule, IconModule, InputFileModule];\nconst innerModules = [SharedMethodsModule];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n  providers: [MessagesUploadAttachmentsService],\n})\nexport class MessagesUploadAttachmentsModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  EmployeeHttpService,\n  TopicsGetResponseBody,\n  PresentationMessageEmployeePostRequestBody,\n  PresentationMessagePostResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { BaseCreateMessageFormService } from '../../base-form/base-create-message-form.service';\n\n@Injectable()\nexport class CreateMessageFormImplementationService\n  implements BaseCreateMessageFormService<PresentationMessageEmployeePostRequestBody>\n{\n  private readonly maxPaginationItemsNum = 65535;\n\n  constructor(private readonly employeeService: EmployeeHttpService) {}\n\n  /**\n   * Get topics\n   *\n   * @returns Employee topics stream\n   */\n  getTopics(): Observable<TopicsGetResponseBody[] | null> {\n    return this.employeeService\n      .getTopicsEmployee({ size: this.maxPaginationItemsNum, subscribed: true })\n      .pipe(catchError(() => of([])));\n  }\n\n  /**\n   * Create message\n   *\n   * @param params Create message request params\n   * @returns Create message stream\n   */\n  createMessage(\n    params: PresentationMessageEmployeePostRequestBody,\n  ): Observable<PresentationMessagePostResponseBody | null> {\n    return this.employeeService.postMessagesEmployee({ presentationMessageEmployeePostRequestBody: params });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeleteResponseBody, EmployeeHttpService, Metadata } from '@backbase/messages-v5-http-ang';\nimport { BaseUploadAttachmentsService } from './base-attachments.service';\n\n@Injectable()\nexport class MessagesEmployeeUploadAttachmentsService implements BaseUploadAttachmentsService {\n  constructor(private readonly service: EmployeeHttpService) {}\n\n  /**\n   * Delete attachments by ids\n   *\n   * @param ids attachments ids\n   * @returns Delete attachments stream\n   */\n  deleteAttachments(ids: string[]): Observable<DeleteResponseBody | null> {\n    return this.service.deleteMessageAttachmentsEmployee({ ids });\n  }\n\n  /**\n   * Upload attachment\n   *\n   * @param attachment Attachment data\n   * @returns Upload attachment stream\n   */\n  uploadAttachment(attachment: Blob): Observable<Metadata | null> {\n    return this.service.postMessageAttachmentsEmployee({ attachment });\n  }\n}\n","import '@angular/localize/init';\n\nexport const topicPlaceholderConfig = {\n  selectTopicPlaceholder: $localize`:Select topic placeholder@@messages.selectTopicPlaceholder:Select topic`,\n  // eslint-disable-next-line max-len\n  noTopicsPlaceholder: $localize`:There are no topics available@@messages.noTopicsPlaceholder:There are no topics available`,\n};\n","import { Injectable } from '@angular/core';\nimport { GetIdentities, GetIdentity, IdentityListedItem, IdentityManagementService } from '@backbase/data-ang/user';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class EmployeeCreateMessageFormService {\n  constructor(private readonly userService: IdentityManagementService) {}\n\n  getUsers(externalId: string): Observable<IdentityListedItem[] | Record<string, never>> {\n    return this.userService.getIdentities({ externalId }).pipe(\n      map((usersData: GetIdentities) => usersData.identities),\n      catchError(() => of({})),\n    );\n  }\n\n  getUserById(internalId: string): Observable<GetIdentity> {\n    return this.userService.getIdentity({ internalId });\n  }\n}\n","import { ChangeDetectorRef, Component, Directive, Input } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, ValidationErrors } from '@angular/forms';\nimport { catchError, debounceTime, distinctUntilChanged, filter, switchMap, tap } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { GetIdentity, IdentityListedItem } from '@backbase/data-ang/user';\nimport {\n  PresentationMessageEmployeePostRequestBody,\n  TopicsGetEmployeeResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { BaseCreateMessageFormComponent } from '../base-form/base-create-message-form.component';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { BaseCreateMessageFormService } from '../base-form/base-create-message-form.service';\nimport { EmployeeCreateMessageFormService } from './services/employee-create-message-form.service';\nimport { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';\nimport { CreateMessageFormImplementationService } from './services/create-message-form-implementation.service';\nimport { BaseUploadAttachmentsService } from '../../upload-attachments/services/base-attachments.service';\nimport { MessagesEmployeeUploadAttachmentsService } from '../../upload-attachments/services/employee-upload-attachments.service';\nimport { topicPlaceholderConfig } from '../../../utils/topic-placeholder-text-helper';\n\n@Component({\n  selector: 'bb-messages-employee-create-message-form',\n  templateUrl: './employee-create-message-form.component.html',\n  providers: [\n    {\n      provide: BaseCreateMessageFormService,\n      useClass: CreateMessageFormImplementationService,\n    },\n    {\n      provide: BaseUploadAttachmentsService,\n      useClass: MessagesEmployeeUploadAttachmentsService,\n    },\n  ],\n})\nexport class EmployeeCreateMessageFormComponent extends BaseCreateMessageFormComponent<PresentationMessageEmployeePostRequestBody> {\n  /**\n   * Debounce time for input search requests\n   */\n  @Input() debounceTime = 500;\n\n  /**\n   * Minimum length value for input search request\n   */\n  @Input() minSearchLength = 1;\n\n  /**\n   * Predefine form\n   */\n  @Input() set preDefineForm(val: Partial<PresentationMessageEmployeePostRequestBody>) {\n    if (val.recipient) {\n      this.getUserName(val.recipient);\n    }\n  }\n\n  /**\n   * Make predefined user field readonly\n   */\n  @Input() isPreDefinedUserReadonly = false;\n\n  /**\n   * Configs for topic selector placeholder\n   */\n  public readonly topicPlaceholderConfig = topicPlaceholderConfig;\n\n  /**\n   * Typeahead options.\n   */\n  readonly typeaheadOptions = {\n    ngbTypeahead: this.search.bind(this),\n    resultFormatter: (item: IdentityListedItem) => item.fullName,\n    inputFormatter: (item: IdentityListedItem) => item.fullName,\n  };\n\n  /**\n   * Additional form fields.\n   */\n  readonly additionalFormFields: { [key: string]: boolean | string } = {\n    recipient: '',\n    important: false,\n    notDeletable: false,\n    'read-only': false,\n  };\n\n  constructor(\n    private readonly employeeService: EmployeeCreateMessageFormService,\n    readonly encodingService: MessagesEncodingService,\n    readonly sharedService: SharedMethodsService,\n    readonly fb: FormBuilder,\n    readonly cd: ChangeDetectorRef,\n    readonly createMessageFormService: BaseCreateMessageFormService<PresentationMessageEmployeePostRequestBody>,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    readonly uploadService: MessagesUploadAttachmentsService,\n  ) {\n    super(sharedService, confirmModalService, cd, createMessageFormService, fb, encodingService, uploadService);\n    Object.keys(this.additionalFormFields).forEach(key => {\n      const validator = key === 'recipient' ? this.customRequiredValidator : undefined;\n      this.newMessageFormGroup.addControl(key, new FormControl(this.additionalFormFields[key], validator));\n    });\n\n    this.newMessageFormGroup.updateValueAndValidity();\n  }\n\n  /**\n   * The method upon creation of the message form submission.\n   */\n  onConfirm() {\n    this.newMessageFormGroup.markAsDirty();\n    this.newMessageFormGroup.markAllAsTouched();\n\n    const { valid } = this.newMessageFormGroup;\n    const value = this.newMessageFormGroup.getRawValue();\n    if (valid) {\n      const finalValue: PresentationMessageEmployeePostRequestBody = {\n        subject: '',\n        body: '',\n        topic: '',\n        recipient: value.recipient.id,\n        important: value.important,\n        deletable: !value.notDeletable,\n        'read-only': value['read-only'],\n        ...this.getSimpleFormVal(value),\n      };\n      this.createMessage(finalValue);\n    }\n  }\n\n  /**\n   * The method to search for typeahead options.\n   *\n   * @param text Search query\n   * @returns Search stream\n   */\n  search(text: Observable<string>): Observable<IdentityListedItem[] | Record<string, never>> {\n    return text.pipe(\n      debounceTime(this.debounceTime),\n      distinctUntilChanged(),\n      filter(value => value.length > this.minSearchLength),\n      switchMap(value => this.employeeService.getUsers(value)),\n    );\n  }\n\n  protected resetToInit() {\n    super.resetToInit();\n    this.resetAdditionalFields();\n  }\n\n  private customRequiredValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    const isSelected = value && typeof value !== 'string';\n\n    return !isSelected ? { required: true } : null;\n  }\n\n  private getUserName(userId: string) {\n    this.employeeService\n      .getUserById(userId)\n      .pipe(\n        tap(user => this.setUserName(user, userId)),\n        catchError(err => {\n          this.sharedService.openNotification(this.sharedService.getErrorMessage(err), 'error');\n\n          return EMPTY;\n        }),\n      )\n      .subscribe();\n  }\n\n  private setUserName(user: GetIdentity, userId: string) {\n    this.newMessageFormGroup.controls['recipient'].setValue({ ...user, id: userId });\n    if (this.isPreDefinedUserReadonly) {\n      this.newMessageFormGroup.controls['recipient'].disable();\n    }\n  }\n\n  private resetAdditionalFields() {\n    Object.keys(this.additionalFormFields).forEach(key => {\n      this.newMessageFormGroup.controls[key].setValue(this.additionalFormFields[key]);\n    });\n  }\n}\n\n@Directive({\n  selector: '[bbEmployeeCreateMessageFormCustomizable]',\n})\nexport class EmployeeCreateMessageFormCustomizableDirective extends BbTemplate<\n  EmployeeCreateMessageFormComponent,\n  { topics: TopicsGetEmployeeResponseBody[] }\n> {}\n","<ng-container\n  bbEmployeeCreateMessageFormCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    topics: topics | async,\n    maxAttachmentSize: maxAttachmentSize\n  }\"\n></ng-container>\n\n<ng-template\n  bbEmployeeCreateMessageFormCustomizable\n  let-host\n  let-topics=\"context.topics\"\n  let-maxAttachmentSize=\"context.maxAttachmentSize\"\n>\n  <form [formGroup]=\"host.newMessageFormGroup\" data-role=\"form\" (submit)=\"host.onConfirm()\">\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        *ngIf=\"\n          topics?.length\n            ? topicPlaceholderConfig.selectTopicPlaceholder\n            : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n        \"\n        [options]=\"topics\"\n        displayAttributePath=\"name\"\n        formControlName=\"topic\"\n        label=\"Topic\"\n        i18n-label=\"Topic label text@@messages.employeeCreateMessage.composeMessageForm.topicLabel\"\n        aria-label=\"Topic\"\n        [aria-invalid]=\"host.isInvalidControl('topic')\"\n        data-role=\"topics\"\n        aria-describedby=\"compose-message-topic-error-message\"\n        i18n-aria-label=\"Topic aria-label text@@messages.employeeCreateMessage.composeMessageForm.topicAriaLabel\"\n        labelClasses=\"form-label\"\n        [attr.placeholder]=\"topicPlaceholder\"\n        [placeholder]=\"topicPlaceholder\"\n        (blur)=\"host.resetFormOnElementBlur()\"\n      ></bb-dropdown-single-select-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-message-topic-error-message\"\n        [showErrors]=\"host.isInvalidControl('topic')\"\n      >\n        <span\n          *ngIf=\"host.hasError('topic', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            required@@messages.employeeCreateMessage.composeMessageForm.errors.subjectRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <label i18n=\"User label text@@messages.employeeCreateMessage.composeMessageForm.recipientLabel\">User</label>\n      <bb-search-box-ui\n        formControlName=\"recipient\"\n        aria-label=\"Select user\"\n        i18n-aria-label=\"\n          Select user aria-label text@@messages.employeeCreateMessage.composeMessageForm.subjectAriaLabel\"\n        [attr.aria-invalid]=\"host.isInvalidControl('recipient')\"\n        aria-describedby=\"compose-message-recipient-error-message\"\n        placeholder=\"Select user\"\n        i18n-placeholder=\"Select user@@messages.employeeCreateMessage.composeMessageForm.selectRecipientPlaceholder\"\n        [typeaheadOptions]=\"host.typeaheadOptions\"\n        [required]=\"true\"\n      ></bb-search-box-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-message-recipient-error-message\"\n        [showErrors]=\"host.isInvalidControl('recipient')\"\n      >\n        <span\n          *ngIf=\"host.hasError('recipient', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            empty@@messages.employeeCreateMessage.composeMessageForm.errors.recipientRequired\"\n          >Field is required</span\n        >\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"subject\"\n        label=\"Subject\"\n        i18n-label=\"Subject label text@@messages.employeeCreateMessage.composeMessageForm.subjectLabel\"\n        aria-label=\"Subject\"\n        i18n-aria-label=\"Subject aria-label text@@messages.employeeCreateMessage.composeMessageForm.subjectAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('subject')\"\n        aria-describedby=\"compose-message-subject-error-message\"\n        placeholder=\"Write subject\"\n        i18n-placeholder=\"\n          Subject placeholder text@@messages.employeeCreateMessage.composeMessageForm.subjectPlaceholder\"\n        labelClasses=\"form-label\"\n        formControlName=\"subject\"\n        [maxlength]=\"host.maxSubjectLength\"\n        [required]=\"true\"\n      >\n      </bb-input-text-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-message-subject-error-message\"\n        [showErrors]=\"host.isInvalidControl('subject')\"\n      >\n        <span\n          *ngIf=\"host.hasError('subject', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            empty@@messages.employeeCreateMessage.composeMessageForm.errors.subjectRequired\"\n          >Field is required</span\n        >\n        <span\n          *ngIf=\"host.hasError('subject', 'maxlength')\"\n          i18n=\"\n            Error message if subject value is more then maxlength\n            value@@messages.employeeCreateMessage.composeMessageForm.errors.subjectMaxlength\"\n          >Your input of {{ newMessageFormGroup?.get('subject')?.value?.length }} characters exceeds the limit of\n          {{ host.maxSubjectLength }}. Please rephrase.</span\n        >\n      </bb-input-validation-message-ui>\n    </div>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <div class=\"bb-stack\">\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"read-only\"\n          aria-label=\"Read only\"\n          data-role=\"readonly\"\n          i18n-aria-label=\"\n            checkbox read-only aria-label@@messages.employeeCreateMessage.composeMessageForm.readonlyCheckboxAriaLabel\"\n          label=\"Read only\"\n          i18n-label=\"\n            read only checkbox label text@@messages.employeeCreateMessage.composeMessageForm.readonlyCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"notDeletable\"\n          aria-label=\"Can't be deleted\"\n          data-role=\"deletable\"\n          i18n-aria-label=\"\n            checkbox deletable aria-label@@messages.employeeCreateMessage.composeMessageForm.deletableCheckboxAriaLabel\"\n          label=\"Can't be deleted\"\n          i18n-label=\"\n            deletable checkbox label text@@messages.employeeCreateMessage.composeMessageForm.deletableCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"important\"\n          aria-label=\"important\"\n          data-role=\"important\"\n          i18n-aria-label=\"\n            checkbox important aria-label@@messages.employeeCreateMessage.composeMessageForm.importantCheckboxAriaLabel\"\n          label=\"Important\"\n          i18n-label=\"\n            important checkbox label text@@messages.employeeCreateMessage.composeMessageForm.importantCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <bb-rich-text-editor-ui\n        label=\"Message\"\n        i18n-label=\"Message label text@@messages.employeeCreateMessage.composeMessageForm.messageLabel\"\n        aria-label=\"Message\"\n        i18n-aria-label=\"Message aria-label text@@messages.employeeCreateMessage.composeMessageForm.messageAriaLabel\"\n        placeholder=\"Write some text\"\n        i18n-placeholder=\"\n          Message placeholder text@@messages.employeeCreateMessage.composeMessageForm.messagePlaceholder\"\n        [attr.aria-invalid]=\"host.isInvalidControl('body')\"\n        [attr.aria-describedby]=\"'compose-message-body-error-message'\"\n        formControlName=\"body\"\n        [counter]=\"true\"\n        [maxLength]=\"host.maxMessageLength\"\n        [required]=\"true\"\n      >\n        <ng-template #actions bbRichTextEditorActions>\n          <bb-rich-text-editor-bold-action></bb-rich-text-editor-bold-action>\n          <bb-rich-text-editor-italic-action></bb-rich-text-editor-italic-action>\n          <bb-rich-text-editor-underline-action></bb-rich-text-editor-underline-action>\n          <bb-rich-text-editor-strikethrough-action> </bb-rich-text-editor-strikethrough-action>\n          <bb-rich-text-editor-olist-action></bb-rich-text-editor-olist-action>\n          <bb-rich-text-editor-ulist-action> </bb-rich-text-editor-ulist-action>\n          <bb-rich-text-editor-link-action></bb-rich-text-editor-link-action>\n        </ng-template>\n      </bb-rich-text-editor-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-message-body-error-message\"\n        [showErrors]=\"host.isInvalidControl('body')\"\n      >\n        <span\n          *ngIf=\"host.hasError('body', 'required')\"\n          i18n=\"Error message if field is required@@messages.createMessage.composeMessageForm.errors.messageRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-messages-upload-attachments\n        [maxSize]=\"maxAttachmentSize\"\n        formControlName=\"attachments\"\n      ></bb-messages-upload-attachments>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        class=\"bb-button-bar__button\"\n        type=\"submit\"\n        data-role=\"submit\"\n        aria-label=\"Send\"\n        i18n-aria-label=\"\n          Submit button aria-label text@@messages.employeeCreateMessage.composeMessageForm.submitButtonAriaLabel\"\n        i18n=\"Submit button text@@messages.employeeCreateMessage.composeMessageForm.submitButton\"\n        [isLoading]=\"host.formLoading\"\n      >\n        Send\n      </bb-load-button-ui>\n      <button\n        bbButton\n        bbPreventBubbleDown\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        data-role=\"discard\"\n        aria-label=\"Discard\"\n        i18n-aria-label=\"\n          Discard button aria-label text@@messages.employeeCreateMessage.composeMessageForm.discardButtonAriaLabel\"\n        i18n=\"Discard button text@@messages.employeeCreateMessage.composeMessageForm.discardButton\"\n        (click)=\"host.confirmModalService.toggleModal(true, host.manipulationTypes.discard, host.newMessageFormGroup)\"\n      >\n        Discard\n      </button>\n    </div>\n  </form>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"host.confirmationModal.opened\"\n    [type]=\"host.confirmationModal.type\"\n    (cancel)=\"host.confirmModalService.toggleModal(false)\"\n    (confirm)=\"host.confirmConfirmationModal()\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #messageComposeSuccess>\n  <span\n    i18n=\"\n      Your message has been successfully sent.|Text of successful conversation\n      compose@@messages.employeeCreateMessage.composeMessageForm.messageSuccessCompose\"\n    >Your message has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #messageComposeError>\n  <span\n    i18n=\"\n      There is an error sending message.|Text of failed conversation\n      compose@@messages.employeeCreateMessage.composeMessageForm.messageErrorCompose\"\n    >There is an error sending message.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { MessagesManipulationConfirmModalModule } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module';\nimport { MessagesUploadAttachmentsModule } from '../../upload-attachments/messages-upload-attachments.module';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { BaseCreateMessageFormModule } from '../base-form/base-create-message-form.module';\nimport {\n  EmployeeCreateMessageFormComponent,\n  EmployeeCreateMessageFormCustomizableDirective,\n} from './employee-create-message-form.component';\nimport { EmployeeCreateMessageFormService } from './services/employee-create-message-form.service';\nimport { PreventBubbleDownModule } from '../../../directives/prevent-bubble-down/prevent-bubble-down.module';\n\nconst components = [EmployeeCreateMessageFormComponent];\nconst directives = [EmployeeCreateMessageFormCustomizableDirective];\nconst uiModules = [\n  DropdownSingleSelectModule,\n  InputValidationMessageModule,\n  SearchBoxModule,\n  InputTextModule,\n  RichTextEditorModule,\n  ButtonModule,\n  InputCheckboxModule,\n  LoadButtonModule,\n];\nconst innerModules = [\n  MessagesManipulationConfirmModalModule,\n  MessagesUploadAttachmentsModule,\n  BaseCreateMessageFormModule,\n];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, PreventBubbleDownModule, ...uiModules, ...innerModules],\n  exports: [ReactiveFormsModule, ...components, ...directives, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  providers: [EmployeeCreateMessageFormService, MessagesEncodingService],\n})\nexport class EmployeeCreateMessageFormModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  EmployeeHttpService,\n  MailoutHttpService,\n  MailoutPostRequestBody,\n  MailoutPostResponseBody,\n  TopicsGetEmployeeResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { BaseCreateMessageFormService } from '../base-form/base-create-message-form.service';\n\n@Injectable()\nexport class EmployeeCreateMailoutFormService implements BaseCreateMessageFormService<MailoutPostRequestBody> {\n  private readonly maxPaginationItemsNum = 65535;\n\n  constructor(\n    private readonly messagesService: MailoutHttpService,\n    private readonly employeeService: EmployeeHttpService,\n  ) {}\n\n  /**\n   * Get topics\n   *\n   * @returns Get topics stream\n   */\n  getTopics(): Observable<TopicsGetEmployeeResponseBody[] | null> {\n    return this.employeeService\n      .getTopicsEmployee({ size: this.maxPaginationItemsNum, subscribed: true })\n      .pipe(catchError(() => of([])));\n  }\n\n  /**\n   * Create message\n   *\n   * @param body Create message request body\n   * @returns Create message stream\n   */\n  createMessage(body: MailoutPostRequestBody): Observable<MailoutPostResponseBody | null> {\n    return this.messagesService.postMailout({ mailoutPostRequestBody: body });\n  }\n}\n","import { ChangeDetectorRef, Component, Directive, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { MailoutPostRequestBody, TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { BaseCreateMessageFormComponent } from '../base-form/base-create-message-form.component';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { BaseCreateMessageFormService } from '../base-form/base-create-message-form.service';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';\nimport { BaseUploadAttachmentsService } from '../../upload-attachments/services/base-attachments.service';\nimport { MessagesEmployeeUploadAttachmentsService } from '../../upload-attachments/services/employee-upload-attachments.service';\nimport { EmployeeCreateMailoutFormService } from './employee-create-mailout-form.service';\nimport { TemplateFileReaderModel } from '../../../models/template-filereader.model';\nimport { EmployeeCreateMailoutFormModel } from '../../../models/employee-create-mailout-form.model';\nimport { topicPlaceholderConfig } from '../../../utils/topic-placeholder-text-helper';\n\n@Component({\n  selector: 'bb-messages-employee-create-mailout-form',\n  templateUrl: './employee-create-mailout-form.component.html',\n  providers: [\n    {\n      provide: BaseCreateMessageFormService,\n      useClass: EmployeeCreateMailoutFormService,\n    },\n    {\n      provide: BaseUploadAttachmentsService,\n      useClass: MessagesEmployeeUploadAttachmentsService,\n    },\n  ],\n})\nexport class EmployeeCreateMailoutFormComponent extends BaseCreateMessageFormComponent<any> implements OnInit {\n  readonly hostRef = this;\n\n  /**\n   * Configs for topic selector placeholder\n   */\n  public readonly topicPlaceholderConfig = topicPlaceholderConfig;\n\n  /**\n   * The output with the mailout preview data.\n   */\n  @Output() review = new EventEmitter<EmployeeCreateMailoutFormModel>();\n\n  /**\n   * The input with the default create mailout form data.\n   */\n  @Input() defaultMailout?: EmployeeCreateMailoutFormModel;\n\n  /**\n   * The input with the sender display name.\n   */\n  @Input()\n  set senderDisplayName(value: string | undefined) {\n    if (value) {\n      const senderNameControl = this.newMessageFormGroup.controls['senderDisplayName'];\n      senderNameControl.setValue(value);\n      this.newMessageFormGroup.markAsPristine();\n      this.defaultSenderName = value;\n    }\n  }\n  private defaultSenderName = '';\n\n  constructor(\n    readonly encodingService: MessagesEncodingService,\n    readonly sharedService: SharedMethodsService,\n    readonly fb: FormBuilder,\n    readonly cd: ChangeDetectorRef,\n    readonly createMessageFormService: BaseCreateMessageFormService<MailoutPostRequestBody>,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    readonly uploadService: MessagesUploadAttachmentsService,\n  ) {\n    super(sharedService, confirmModalService, cd, createMessageFormService, fb, encodingService, uploadService);\n    this.newMessageFormGroup.addControl('important', this.fb.control(false));\n    this.newMessageFormGroup.addControl('notDeletable', this.fb.control(false));\n    this.newMessageFormGroup.addControl('mailoutName', this.fb.control(''));\n    this.newMessageFormGroup.addControl('recipientsDataId', this.fb.control('', Validators.required));\n    this.newMessageFormGroup.addControl('senderDisplayName', this.fb.control('', Validators.required));\n    this.newMessageFormGroup.addControl('isBodyHtml', this.fb.control(false));\n    this.newMessageFormGroup.addControl('template', this.fb.control(''));\n    this.newMessageFormGroup.updateValueAndValidity();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.setDefaultMailoutFormValue();\n  }\n\n  private setDefaultMailoutFormValue() {\n    if (this.defaultMailout) {\n      this.newMessageFormGroup.patchValue({\n        ...this.defaultMailout,\n      });\n\n      const bodyControl = this.newMessageFormGroup.controls['body'];\n      if (this.defaultMailout.isBodyHtml) {\n        bodyControl.setValue('');\n        bodyControl.disable();\n      }\n      this.newMessageFormGroup.updateValueAndValidity();\n      this.newMessageFormGroup.markAsDirty();\n    }\n  }\n\n  /**\n   * The method to load and parse the mailout template file.\n   */\n  onAddTemplateFile(input: HTMLInputElement) {\n    if (input.files && input.files[0]) {\n      const file: File = input.files[0];\n      const bodyInput = this.newMessageFormGroup.controls['body'];\n      const templateInput = this.newMessageFormGroup.controls['template'];\n      const fileReader = new FileReader();\n\n      fileReader.onload = () => {\n        templateInput.setValue({\n          body: fileReader.result,\n          name: file.name,\n          size: file.size,\n        } as TemplateFileReaderModel);\n        this.newMessageFormGroup.controls['isBodyHtml'].setValue(true);\n        templateInput.markAsTouched();\n\n        bodyInput.clearValidators();\n        bodyInput.disable();\n      };\n\n      fileReader.readAsText(file);\n    }\n  }\n\n  /**\n   * The method to clear the template file.\n   */\n  onClearTemplateFile() {\n    const body = this.newMessageFormGroup.controls['body'];\n    this.newMessageFormGroup.controls['template'].setValue(undefined);\n    this.newMessageFormGroup.controls['isBodyHtml'].setValue(false);\n\n    body.setValidators([Validators.required]);\n    body.enable();\n  }\n\n  /**\n   * The method to save the mailout.\n   */\n  onConfirm() {\n    this.newMessageFormGroup.markAllAsTouched();\n    this.newMessageFormGroup.markAsDirty();\n\n    const { value, valid } = this.newMessageFormGroup;\n    if (valid) {\n      if (value.template && value.template.body) {\n        value.body = value.template.body;\n      }\n\n      const finalValue: MailoutPostRequestBody = {\n        subject: '',\n        topic: '',\n        body: '',\n        mailoutName: value.mailoutName,\n        recipientsData: {\n          id: value.recipientsDataId[0].id,\n        },\n        senderDisplayName: this.defaultSenderName,\n        isBodyHtml: value.isBodyHtml,\n        important: !!value.important,\n        deletable: !value.notDeletable,\n        ...this.getSimpleFormVal(value),\n      };\n\n      if (value.isBodyHtml) {\n        this.review.emit({ ...value, senderDisplayName: this.defaultSenderName });\n      } else {\n        this.createMessage(finalValue);\n      }\n    }\n  }\n\n  /**\n   * The method to discard the mailout.\n   *\n   * @param discardParam Should open modal flag\n   */\n  onDiscard(discardParam: boolean) {\n    if (discardParam) {\n      this.confirmModalService.toggleModal(discardParam, this.manipulationTypes.discard, this.newMessageFormGroup);\n    } else {\n      this.confirmModalService.toggleModal(discardParam);\n    }\n  }\n\n  protected resetToInit(isFormDiscard = false) {\n    super.resetToInit(isFormDiscard);\n    this.onClearTemplateFile();\n  }\n}\n\n@Directive({\n  selector: '[bbEmployeeCreateMailoutFormCustomizable]',\n})\nexport class EmployeeCreateMailoutFormCustomizableDirective extends BbTemplate<\n  EmployeeCreateMailoutFormComponent,\n  {\n    topics: TopicsGetResponseBody | null | undefined;\n    maxAttachmentSize: string | undefined;\n    maxSubjectLength: number | undefined;\n    maxMailoutNameLength: number | undefined;\n  }\n> {}\n\n@Directive({\n  selector: '[bbEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizable]',\n})\nexport class EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective extends BbTemplate<\n  EmployeeCreateMailoutFormComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbEmployeeCreateMailoutFormErrorNotificationHeaderCustomizable]',\n})\nexport class EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective extends BbTemplate<\n  EmployeeCreateMailoutFormComponent,\n  void\n> {}\n","<ng-container\n  bbEmployeeCreateMailoutFormCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    topics: topics | async,\n    maxAttachmentSize: maxAttachmentSize,\n    maxSubjectLength: maxSubjectLength\n  }\"\n></ng-container>\n\n<ng-template\n  bbEmployeeCreateMailoutFormCustomizable\n  let-host\n  let-topics=\"context.topics\"\n  let-maxAttachmentSize=\"context.maxAttachmentSize\"\n>\n  <form [formGroup]=\"host.newMessageFormGroup\" data-role=\"form\" (submit)=\"host.onConfirm()\">\n    <div class=\"form-group\">\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--fill bb-stack__item--align-top\">\n          <label\n            data-role=\"recipients-label\"\n            for=\"recipientsDataId\"\n            i18n=\"\n              Recipients|Recipients label text@@messages.employeeCreateMailout.composeMailoutForm.recipientsLabelText\"\n            >Recipients</label\n          >\n          <bb-messages-upload-attachments\n            data-role=\"import-recipients\"\n            accept=\"text/csv\"\n            id=\"recipientsDataId\"\n            [maxSize]=\"maxAttachmentSize\"\n            [multiple]=\"false\"\n            [initAttachments]=\"host.defaultMailout?.recipientsDataId\"\n            formControlName=\"recipientsDataId\"\n            i18n-attachmentButtonText=\"\n              Import recipients|Upload recipients attachment button\n              text@@messages.employeeCreateMailout.composeMailoutForm.uploadRecipientsAttachmentButtonText\"\n            attachmentButtonText=\"Import recipients\"\n          ></bb-messages-upload-attachments>\n          <bb-input-validation-message-ui\n            id=\"compose-mailout-sender-name-error\"\n            [showErrors]=\"host.isInvalidControl('recipientsDataId')\"\n          >\n            <span\n              *ngIf=\"host.hasError('recipientsDataId', 'required')\"\n              i18n=\"\n                Error message if recipient field is\n                required@@messages.employeeCreateMailout.composeMailoutForm.errors.recipientsDataIdRequired\"\n            >\n              Recipient is required\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill bb-stack__item--align-top\">\n          <label\n            data-role=\"html-template\"\n            for=\"templateFile\"\n            i18n=\"Recipients|Recipients label text@@messages.employeeCreateMailout.composeMailoutForm.htmpTemplateLabel\"\n            >HTML Template</label\n          >\n          <div>\n            <bb-input-file-ui\n              *ngIf=\"!host.newMessageFormGroup.controls['template']?.value\"\n              accept=\".html\"\n              data-role=\"import-template\"\n              buttonText=\"Import template\"\n              i18n-buttonText=\"Import template@@messages.employeeCreateMailout.composeMailoutForm.attachFile\"\n              id=\"templateFile\"\n              (change)=\"host.onAddTemplateFile($event.target)\"\n            ></bb-input-file-ui>\n            <div class=\"row\">\n              <div class=\"col-auto\" *ngIf=\"host.newMessageFormGroup.controls['template']?.value as templateValue\">\n                <bb-file-attachment-ui\n                  [name]=\"templateValue.name\"\n                  [size]=\"templateValue.size\"\n                  [deletable]=\"true\"\n                  [disabled]=\"true\"\n                  (delete)=\"host.onClearTemplateFile()\"\n                ></bb-file-attachment-ui>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"mailout-name-label\"\n        label=\"Mailout name\"\n        i18n-label=\"Mailout name text@@messages.employeeCreateMailout.composeMailoutForm.mailoutNameLabel\"\n        aria-label=\"Mailout name\"\n        i18n-aria-label=\"\n          Subject aria-label text@@messages.employeeCreateMailout.composeMailoutForm.mailoutNametAriaLabel\"\n        placeholder=\"Write mailout name\"\n        i18n-placeholder=\"\n          Mailout name placeholder text@@messages.employeeCreateMailout.composeMailoutForm.mailoutNamePlaceholder\"\n        labelClasses=\"form-label\"\n        formControlName=\"mailoutName\"\n        [maxlength]=\"host.maxMailoutNameLength\"\n      >\n      </bb-input-text-ui>\n      <bb-input-validation-message-ui [showErrors]=\"host.isInvalidControl('mailoutName')\">\n        <span\n          *ngIf=\"host.hasError('mailoutName', 'maxlength')\"\n          i18n=\"\n            Error message if mailout name value is more then maxlength\n            value@@messages.employeeCreateMailout.composeMailoutForm.errors.mailoutNameMaxlength\"\n          >Your input of {{ newMessageFormGroup?.get('name')?.value?.length }} characters exceeds the limit of\n          {{ host.maxMailoutNameLength }}. Please rephrase.</span\n        >\n      </bb-input-validation-message-ui>\n      <p\n        class=\"bb-text-support bb-subtitle\"\n        data-role=\"mailout-name-subtitle\"\n        i18n=\"\n          Name exist for internal purposes only. It will not be displayed to\n          users@@messages.employeeCreateMailout.composeMailoutForm.mailoutNameSubtitleText\"\n      >\n        Name exist for internal purposes only. It will not be displayed to users\n      </p>\n    </div>\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        label=\"Sender name\"\n        data-role=\"sender-name\"\n        i18n-label=\"Sender name text@@messages.employeeCreateMailout.composeMailoutForm.senderNameLabel\"\n        aria-label=\"Sender name\"\n        i18n-aria-label=\"\n          Sender name aria-label text@@messages.employeeCreateMailout.composeMailoutForm.senderNameAriaLabel\"\n        aria-invalid=\"host.isInvalidControl('senderDisplayName')\"\n        [readonly]=\"host.defaultSenderName\"\n        aria-describedby=\"compose-mailout-sender-name-error\"\n        placeholder=\"Write sender name\"\n        i18n-placeholder=\"\n          Sender name placeholder text@@messages.employeeCreateMailout.composeMailoutForm.senderNamePlaceholder\"\n        labelClasses=\"form-label\"\n        formControlName=\"senderDisplayName\"\n      >\n      </bb-input-text-ui>\n      <p\n        class=\"bb-text-support bb-subtitle\"\n        data-role=\"sender-name-subtitle\"\n        i18n=\"\n          Employee name will be replaced for the\n          recipient@@messages.employeeCreateMailout.composeMailoutForm.senderDisplayNameSubtitleText\"\n      >\n        Employee name will be replaced for the recipient\n      </p>\n      <bb-input-validation-message-ui\n        id=\"compose-mailout-sender-name-error\"\n        [showErrors]=\"host.isInvalidControl('senderDisplayName')\"\n      >\n        <span\n          *ngIf=\"host.hasError('senderDisplayName', 'required')\"\n          i18n=\"\n            Error message if field is\n            required@@messages.createMessage.composeMessageForm.errors.senderDisplayNameMessageRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        *ngIf=\"\n          topics?.length\n            ? topicPlaceholderConfig.selectTopicPlaceholder\n            : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n        \"\n        data-role=\"topics\"\n        [options]=\"topics\"\n        displayAttributePath=\"name\"\n        formControlName=\"topic\"\n        label=\"Topic\"\n        i18n-label=\"Topic label text@@messages.employeeCreateMailout.composeMailoutForm.topicLabel\"\n        aria-label=\"Topic\"\n        i18n-aria-label=\"Topic aria-label text@@messages.employeeCreateMailout.composeMailoutForm.topicAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('topic')\"\n        aria-describedby=\"compose-mailout-topic-error\"\n        labelClasses=\"form-label\"\n        [attr.placeholder]=\"topicPlaceholder\"\n        [placeholder]=\"topicPlaceholder\"\n        (blur)=\"host.resetFormOnElementBlur()\"\n      ></bb-dropdown-single-select-ui>\n      <bb-input-validation-message-ui id=\"compose-mailout-topic-error\" [showErrors]=\"host.isInvalidControl('topic')\">\n        <span\n          *ngIf=\"host.hasError('topic', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            required@@messages.employeeCreateMailout.composeMailoutForm.errors.subjectRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"subject\"\n        label=\"Subject\"\n        i18n-label=\"Subject label text@@messages.employeeCreateMailout.composeMailoutForm.subjectLabel\"\n        aria-label=\"Subject\"\n        i18n-aria-label=\"Subject aria-label text@@messages.employeeCreateMailout.composeMailoutForm.subjectAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('subject')\"\n        aria-describedby=\"compose-mailout-subject-error\"\n        placeholder=\"Write subject\"\n        i18n-placeholder=\"\n          Subject placeholder text@@messages.employeeCreateMailout.composeMailoutForm.subjectPlaceholder\"\n        labelClasses=\"form-label\"\n        formControlName=\"subject\"\n        [maxlength]=\"host.maxSubjectLength\"\n      >\n      </bb-input-text-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-mailout-subject-error\"\n        [showErrors]=\"host.isInvalidControl('subject')\"\n      >\n        <span\n          *ngIf=\"host.hasError('subject', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            empty@@messages.employeeCreateMailout.composeMailoutForm.errors.subjectRequired\"\n          >Field is required</span\n        >\n        <span\n          *ngIf=\"host.hasError('subject', 'maxlength')\"\n          i18n=\"\n            Error message if subject value is more then maxlength\n            value@@messages.employeeCreateMailout.composeMailoutForm.errors.subjectMaxlength\"\n          >Your input of {{ newMessageFormGroup?.get('subject')?.value?.length }} characters exceeds the limit of\n          {{ host.maxSubjectLength }}. Please rephrase.</span\n        >\n      </bb-input-validation-message-ui>\n    </div>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <div class=\"bb-stack\">\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"notDeletable\"\n          aria-label=\"Can't be deleted\"\n          data-role=\"deletable\"\n          i18n-aria-label=\"\n            checkbox deletable aria-label@@messages.employeeCreateMailout.composeMailoutForm.deletableCheckboxAriaLabel\"\n          label=\"Can't be deleted\"\n          i18n-label=\"\n            deletable checkbox label text@@messages.employeeCreateMailout.composeMailoutForm.deletableCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"important\"\n          aria-label=\"important\"\n          data-role=\"important\"\n          i18n-aria-label=\"\n            checkbox important aria-label@@messages.employeeCreateMailout.composeMailoutForm.importantCheckboxAriaLabel\"\n          label=\"Important\"\n          i18n-label=\"\n            important checkbox label text@@messages.employeeCreateMailout.composeMailoutForm.importantCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <bb-rich-text-editor-ui\n        label=\"Message\"\n        data-role=\"message-body\"\n        i18n-label=\"Message label text@@messages.employeeCreateMailout.composeMailoutForm.messageLabel\"\n        aria-label=\"Message\"\n        i18n-aria-label=\"Message aria-label text@@messages.employeeCreateMailout.composeMailoutForm.messageAriaLabel\"\n        [attr.aria-invalid]=\"host.isInvalidControl('body')\"\n        [attr.aria-describedby]=\"'compose-mailout-body-error'\"\n        placeholder=\"Write some text\"\n        i18n-placeholder=\"\n          Message placeholder text@@messages.employeeCreateMailout.composeMailoutForm.messagePlaceholder\"\n        formControlName=\"body\"\n        [counter]=\"true\"\n        [maxLength]=\"host.maxMessageLength\"\n        [required]=\"!host.templateFile\"\n      >\n        <ng-template #actions bbRichTextEditorActions>\n          <bb-rich-text-editor-bold-action></bb-rich-text-editor-bold-action>\n          <bb-rich-text-editor-italic-action></bb-rich-text-editor-italic-action>\n          <bb-rich-text-editor-underline-action></bb-rich-text-editor-underline-action>\n          <bb-rich-text-editor-strikethrough-action> </bb-rich-text-editor-strikethrough-action>\n          <bb-rich-text-editor-olist-action></bb-rich-text-editor-olist-action>\n          <bb-rich-text-editor-ulist-action> </bb-rich-text-editor-ulist-action>\n          <bb-rich-text-editor-link-action></bb-rich-text-editor-link-action>\n        </ng-template>\n      </bb-rich-text-editor-ui>\n      <bb-input-validation-message-ui id=\"compose-mailout-body-error\" [showErrors]=\"host.isInvalidControl('body')\">\n        <span\n          *ngIf=\"host.hasError('body', 'required')\"\n          i18n=\"\n            Error message if field is required@@messages.employeeCreateMailout.composeMailoutForm.errors.messageRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-messages-upload-attachments\n        [initAttachments]=\"host.defaultMailout?.attachments\"\n        [maxSize]=\"maxAttachmentSize\"\n        formControlName=\"attachments\"\n      ></bb-messages-upload-attachments>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        class=\"bb-button-bar__button\"\n        type=\"submit\"\n        data-role=\"submit\"\n        aria-label=\"Continue\"\n        i18n-aria-label=\"\n          Submit button aria-label text@@messages.employeeCreateMailout.composeMailoutForm.submitButtonAriaLabel\"\n        i18n=\"Submit button text@@messages.employeeCreateMailout.composeMailoutForm.submitButton\"\n        [isLoading]=\"host.formLoading\"\n      >\n        Continue\n      </bb-load-button-ui>\n      <button\n        bbButton\n        bbPreventBubbleDown\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        data-role=\"discard\"\n        aria-label=\"Discard\"\n        i18n-aria-label=\"\n          Discard button aria-label text@@messages.employeeCreateMailout.composeMailoutForm.discardButtonAriaLabel\"\n        i18n=\"Discard button text@@messages.employeeCreateMailout.composeMailoutForm.discardButton\"\n        (click)=\"host.onDiscard(true)\"\n      >\n        Discard\n      </button>\n    </div>\n  </form>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"host.confirmationModal.opened\"\n    [type]=\"host.confirmationModal.type\"\n    (cancel)=\"host.onDiscard(false)\"\n    (confirm)=\"host.confirmConfirmationModal()\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #messageComposeSuccess>\n  <ng-container bbEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>\n\n<ng-template bbEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizable let-host>\n  <span\n    i18n=\"\n      Your mailout has been successfully sent.|Text of successful conversation\n      compose@@messages.employeeCreateMailout.composeMailoutForm.messageSuccessCompose\"\n    >Your mailout has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #messageComposeError>\n  <ng-container bbEmployeeCreateMailoutFormErrorNotificationHeaderCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>\n\n<ng-template bbEmployeeCreateMailoutFormErrorNotificationHeaderCustomizable let-host>\n  <span\n    i18n=\"\n      There is an error sending mailout.|Text of failed conversation\n      compose@@messages.employeeCreateMailout.composeMailoutForm.messageErrorCompose\"\n    >There is an error sending mailout.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { InputFileModule } from '@backbase/ui-ang/input-file';\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\nimport { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';\nimport {\n  EmployeeCreateMailoutFormComponent,\n  EmployeeCreateMailoutFormCustomizableDirective,\n  EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective,\n  EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective,\n} from './employee-create-mailout-form.component';\nimport { EmployeeCreateMailoutFormService } from './employee-create-mailout-form.service';\nimport { MessagesManipulationConfirmModalModule } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module';\nimport { MessagesUploadAttachmentsModule } from '../../upload-attachments/messages-upload-attachments.module';\nimport { PreventBubbleDownModule } from '../../../directives/prevent-bubble-down/prevent-bubble-down.module';\n\nconst components = [EmployeeCreateMailoutFormComponent];\nconst directives = [\n  EmployeeCreateMailoutFormCustomizableDirective,\n  EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective,\n  EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective,\n];\nconst uiModules = [\n  DropdownSingleSelectModule,\n  FileAttachmentModule,\n  InputFileModule,\n  InputValidationMessageModule,\n  InputTextModule,\n  RichTextEditorModule,\n  ButtonModule,\n  InputCheckboxModule,\n  LoadButtonModule,\n];\nconst innerModules = [ReactiveFormsModule, MessagesManipulationConfirmModalModule, MessagesUploadAttachmentsModule];\n\n@NgModule({\n  imports: [CommonModule, PreventBubbleDownModule, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  providers: [EmployeeCreateMailoutFormService],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n})\nexport class EmployeeCreateMailoutFormModule {}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { delay, filter, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-messages-body-preview, bb-message-preview',\n  templateUrl: './messages-preview.component.html',\n})\nexport class MessagesBodyPreviewComponent implements OnDestroy {\n  /**\n   * Body from body message\n   */\n  @Input()\n  set body(val: string) {\n    this.iframeContext.next(val);\n  }\n\n  /**\n   * Flag to control visibility\n   */\n  isVisible = false;\n\n  private readonly iframeContext = new BehaviorSubject<string | undefined>(undefined);\n  private readonly destroy = new Subject<void>();\n\n  /**\n   * Message preview\n   */\n  @ViewChild('iframeRef', { static: true }) iframeRef!: ElementRef<HTMLIFrameElement>;\n\n  constructor(private readonly renderer: Renderer2, private readonly cd: ChangeDetectorRef) {}\n\n  ngOnDestroy() {\n    this.destroy.next();\n  }\n\n  /**\n   * Load preview iframe\n   */\n  iframeLoad() {\n    const iframeElement = this.iframeRef.nativeElement;\n    const iframeBody = (iframeElement.contentDocument as Document).body;\n\n    this.renderer.setStyle(iframeElement, 'width', '100%');\n    this.renderer.setStyle(iframeElement, 'border', '0');\n    this.renderer.setStyle(iframeBody, 'margin', '0');\n\n    this.iframeContext\n      .pipe(\n        filter(Boolean),\n        tap(content => this.renderer.setProperty(iframeBody, 'innerHTML', content)),\n        delay(300),\n        takeUntil(this.destroy),\n      )\n      .subscribe(() => {\n        let currentHeight = iframeBody.scrollHeight;\n        let previousHeight = 0;\n        let counter = 0;\n\n        /* Several iterations are needed to set iframe height after recalculating template body height\n        that contains elements with height or size set in relative units. */\n        do {\n          this.renderer.setStyle(iframeElement, 'height', `${currentHeight}px`);\n          previousHeight = currentHeight;\n          currentHeight = iframeBody.scrollHeight;\n          counter++;\n        } while (previousHeight !== currentHeight && counter < 5);\n\n        this.isVisible = true;\n        this.cd.detectChanges();\n      });\n  }\n}\n","<iframe\n  #iframeRef\n  title=\"Message preview\"\n  i18n-title=\"Message preview title@@messages.message-preview-title\"\n  [style.visibility]=\"isVisible ? 'visible' : 'hidden'\"\n  (load)=\"iframeLoad()\"\n></iframe>\n","import { Component, Directive, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Attachment } from '../../models/attachment.model';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n/**\n * @name MessagesConversationMessageComponent\n *\n * @description\n * Component displays conversation message.\n */\n@Component({\n  selector: 'bb-messages-conversation-message, bb-message-ui',\n  templateUrl: './messages-conversation-message.component.html',\n})\nexport class MessagesConversationMessageComponent implements OnInit {\n  private static counter = 0;\n\n  /**\n   * Datetime of the message creation, format date-time\n   */\n  @Input() created: string | undefined;\n\n  /**\n   * Text of the message, could have HTML-tags\n   */\n  @Input('message')\n  set message(value: string | undefined) {\n    this.messageText = value;\n    this.messageTextWithoutTags = value ? this.replaceTags(value) : undefined;\n  }\n\n  /**\n   * Senders name or templateRef\n   */\n  @Input() sender: string | TemplateRef<any> | undefined;\n  /**\n   * Toggles message collapse (text-truncate and replacement HTML-tags)\n   */\n  @Input() opened = false;\n  /**\n   * Array of the attached files\n   */\n  @Input() attachments: Attachment[] | undefined;\n\n  /**\n   * Is message body contains html\n   */\n  @Input() isBodyHtml = false;\n\n  /**\n   * Default sender template\n   */\n  @ViewChild('defaultSenderTemplate', { static: true }) defaultSenderTemplate: TemplateRef<any> | undefined;\n\n  /**\n   * Message text\n   */\n  messageText: string | undefined;\n\n  /**\n   * Message text without tags\n   */\n  messageTextWithoutTags: string | undefined;\n\n  /**\n   * The unique ID HTML property for each widget component instance.\n   */\n  messageId = `messages-conversation-message-${MessagesConversationMessageComponent.counter++}`;\n\n  /**\n   * Toggle message on click\n   *\n   * @param event Click event\n   */\n  onClick(event: any) {\n    const selection = document.getSelection();\n\n    if (\n      (selection && selection.toString().length) ||\n      (event.target.tagName.toLowerCase() === 'a' && event.target.href)\n    ) {\n      return;\n    }\n\n    this.opened = !this.opened;\n  }\n\n  /**\n   * Get sender template\n   *\n   * @returns Sender template\n   */\n  getSenderTemplate(): TemplateRef<any> | undefined {\n    if (this.sender instanceof TemplateRef) {\n      return this.sender;\n    }\n\n    return this.defaultSenderTemplate;\n  }\n\n  ngOnInit() {\n    if (typeof this.messageText === 'undefined') {\n      throw new Error(`\"message\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  private readonly replaceTags = (content: string) => (content ? content.replace(/<[^>]+>/gi, '') : '');\n}\n\n@Directive({\n  selector: '[bbMessagesConversationMessageCustomizable]',\n})\nexport class MessagesConversationMessageCustomizableDirective extends BbTemplate<\n  MessagesConversationMessageComponent,\n  undefined\n> {}\n","<ng-container bbMessagesConversationMessageCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbMessagesConversationMessageCustomizable let-host>\n  <div\n    class=\"bb-message-ui card-body\"\n    [attr.role]=\"host.isBodyHtml ? null : 'button'\"\n    (bbKeyboardClick)=\"!host.isBodyHtml && host.onClick($event)\"\n    tabindex=\"0\"\n    data-role=\"conversation-message\"\n    [attr.aria-controls]=\"host.messageId\"\n    [attr.aria-expanded]=\"host.opened\"\n  >\n    <div class=\"bb-stack bb-block--md\">\n      <span class=\"sr-only\" i18n=\"Message from|Before sender name@@messages.messagesCommon.messageFrom\"\n        >Message from</span\n      >\n      <span class=\"bb-text-semi-bold\" data-role=\"sender-name\">\n        <ng-container *ngTemplateOutlet=\"host.getSenderTemplate()\"></ng-container>\n      </span>\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <div class=\"bb-stack\">\n          <bb-icon-ui\n            class=\"bb-stack__item bb-text-support\"\n            *ngIf=\"host.attachments && host.attachments.length\"\n            name=\"attachment\"\n            data-role=\"messages-attachment\"\n            aria-label=\"Contains attachments\"\n            i18n-aria-label=\"\n              Contains attachments|Message contains attachments@@messages.messagesCommon.containsAttachments\"\n            bbTooltip=\"Contains attachments\"\n            i18n-bbTooltip=\"@@messages.messagesCommon.containsAttachments\"\n            triggers=\"hover\"\n            placement=\"top\"\n            container=\"body\"\n          ></bb-icon-ui>\n          <div *ngIf=\"host.created\" data-role=\"messages-creation-date\">\n            <span\n              class=\"sr-only\"\n              i18n=\"Date|'Date:' word that precedes message creation date@@messages.messagesCommon.labelForDate\"\n              >Date:</span\n            >\n            <span>{{ host.created | date: 'fullDate' }} </span>\n            <span\n              i18n=\"At|To bridge date and time (Monday March 28th, 2018 at 9:15 AM)@@messages.messagesCommon.createdAt\"\n              >at</span\n            >\n            <span> {{ host.created | date: 'shortTime' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\" [ngClass]=\"{ 'col-md-8': !host.opened }\" [attr.id]=\"host.messageId\">\n        <div\n          data-role=\"message-content\"\n          *ngIf=\"!host.isBodyHtml; else htmlViewTmpl\"\n          [innerHtml]=\"host.opened ? host.messageText : host.messageTextWithoutTags\"\n          [ngClass]=\"{\n            'text-truncate': !host.opened,\n            'bb-block--md': host.opened && host.attachments\n          }\"\n        ></div>\n        <div data-role=\"attachments-wrapper\" class=\"row\" *ngIf=\"host.opened && host.attachments?.length\">\n          <div class=\"col-4\" *ngFor=\"let attachment of host.attachments\">\n            <bb-file-attachment-ui\n              [name]=\"attachment.filename\"\n              [size]=\"attachment.size\"\n              [fileContent]=\"attachment.linkStream\"\n            ></bb-file-attachment-ui>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #htmlViewTmpl>\n    <bb-messages-body-preview [body]=\"host.messageText\"></bb-messages-body-preview>\n  </ng-template>\n</ng-template>\n\n<ng-template #defaultSenderTemplate>\n  {{ sender }}\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesBodyPreviewComponent } from './messages-preview.component';\n\n@NgModule({\n  declarations: [MessagesBodyPreviewComponent],\n  exports: [MessagesBodyPreviewComponent],\n  imports: [CommonModule],\n})\nexport class MessagesBodyPreviewModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n\nimport {\n  MessagesConversationMessageComponent,\n  MessagesConversationMessageCustomizableDirective,\n} from './messages-conversation-message.component';\nimport { MessagesBodyPreviewModule } from '../messages-preview/messages-preview.module';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nconst uiModules = [FileAttachmentModule, IconModule, KeyboardClickModule, TooltipModule];\nconst innerModules = [MessagesBodyPreviewModule];\n\n@NgModule({\n  declarations: [MessagesConversationMessageComponent, MessagesConversationMessageCustomizableDirective],\n  exports: [\n    MessagesConversationMessageComponent,\n    MessagesConversationMessageCustomizableDirective,\n    ...uiModules,\n    ...innerModules,\n  ],\n  imports: [CommonModule, ...uiModules, ...innerModules],\n})\nexport class MessagesConversationMessageModule {}\n","import { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\nexport const shareReplayOnce = () =>\n  function <T>(source: Observable<T>) {\n    // use refCount: true to prevent memory leaks issue with shareReplay\n    return source.pipe(shareReplay({ refCount: true, bufferSize: 1 }));\n  };\n","export class UnknownIdError extends Error {\n  readonly name = 'UnknownIdError';\n  constructor() {\n    super();\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UnknownIdError } from '../../utils/unknown-id-error';\n\nexport declare type MessagesErrorKind =\n  | 'MessagesRequestConnectivityError'\n  | 'MessagesRequestBadRequest'\n  | 'MessagesRequestAccessDenied'\n  | 'MessagesRequestNotFound'\n  | 'MessagesRequestUnknownIdError'\n  | 'MessagesRequestUnknownError';\n\n@Component({\n  selector: 'bb-messages-request-error, bb-messages-request-error-ui',\n  templateUrl: './messages-request-error.component.html',\n})\nexport class MessagesRequestErrorComponent {\n  /**\n   * The input that set errorKind from `MessagesErrorKind`\n   */\n  @Input()\n  set error(error: HttpErrorResponse | UnknownIdError) {\n    if (error instanceof UnknownIdError) {\n      this.errorKind = 'MessagesRequestUnknownIdError';\n    } else if (error.error instanceof ErrorEvent) {\n      this.errorKind = 'MessagesRequestUnknownError';\n    } else {\n      switch (error.status) {\n        case 0:\n          this.errorKind = 'MessagesRequestConnectivityError';\n          break;\n        case 400:\n          this.errorKind = 'MessagesRequestBadRequest';\n          break;\n        case 401:\n          this.errorKind = 'MessagesRequestAccessDenied';\n          break;\n        case 403:\n          this.errorKind = 'MessagesRequestAccessDenied';\n          break;\n        case 404:\n          this.errorKind = 'MessagesRequestNotFound';\n          break;\n        default:\n          this.errorKind = 'MessagesRequestUnknownError';\n      }\n    }\n  }\n\n  /**\n   * Error type\n   */\n  errorKind: MessagesErrorKind | undefined;\n}\n","<ng-container [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'MessagesRequestAccessDenied'\"\n    class=\"bb-state-container\"\n    title=\"No Permissions\"\n    i18n-title=\"\n      No Permissions|Error state label when user does not have permissions to view messages\n      request@@messages-request.error.accessDenied.title\"\n    subtitle=\"You can't access this widget. Contact system administrator for details.\"\n    i18n-subtitle=\"\n      No permissions subtitle|Error state subtitle label when user does not have permissions to view messages\n      requests@@messages-request.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"\n    iconSize=\"xxl\"\n  ></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'MessagesRequestConnectivityError'\"\n    class=\"bb-state-container\"\n    title=\"Page couldn’t load\"\n    i18n-title=\"\n      Page couldn’t load|Empty state label when there is connectivity error@@messages-request.error.connectivity.title\"\n    subtitle=\"Try to reload the page or contact the system administrator.\"\n    i18n-subtitle=\"\n      Not found error subtitle|Empty state subtitle label when there is connectivity\n      error@@messages-request.error.connectivity.subtitle\"\n    iconModifier=\"error-outline\"\n    iconSize=\"xxl\"\n  ></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'MessagesRequestUnknownIdError'\"\n    class=\"bb-state-container\"\n    title=\"Unknown ID\"\n    i18n-title=\"Unknown ID|Empty state label when there is unknown ID error@@messages-request.error.unknown-id.title\"\n    subtitle=\"There is no ID passed with URL. For more information contact your system administrator.\"\n    i18n-subtitle=\"\n      Unknown ID Error subtitle|Empty state subtitle label when there is unknown id\n      error@@messages-request.error.unknown-id.subtitle\"\n    iconModifier=\"error\"\n  ></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'MessagesRequestNotFound'\"\n    class=\"bb-state-container\"\n    title=\"This item cannot be found\"\n    i18n-title=\"\n      This item cannot be found|Empty state label when there is not found error@@messages-request.error.not-found.title\"\n    subtitle=\"It may have been deleted. For more info please contact your bank.\"\n    i18n-subtitle=\"\n      Not found error subtitle|Empty state subtitle label when there is not found\n      error@@messages-request.error.not-found.subtitle\"\n    iconModifier=\"error-outline\"\n    iconSize=\"xxl\"\n  ></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    class=\"bb-state-container\"\n    title=\"Unexpected Error\"\n    i18n-title=\"\n      Unexpected Error title|Empty state label when there is an unexpected\n      error@@messages-request.error.unexpected.title\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n    i18n-subtitle=\"\n      Unexpected error subtitle|Empty state subtitle label when there is an unexpected\n      error@@messages-request.error.unexpected.subtitle\"\n    iconModifier=\"error-outline\"\n    iconSize=\"xxl\"\n  ></bb-empty-state-ui>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\n\nimport { MessagesRequestErrorComponent } from './messages-request-error.component';\n\nconst uiModules = [EmptyStateModule];\n\n@NgModule({\n  declarations: [MessagesRequestErrorComponent],\n  exports: [MessagesRequestErrorComponent, ...uiModules],\n  imports: [CommonModule, ...uiModules],\n})\nexport class MessagesRequestErrorModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MessagecenterHttpService, DeleteResponseBody, Metadata } from '@backbase/messages-v5-http-ang';\nimport { BaseUploadAttachmentsService } from './base-attachments.service';\n\n@Injectable()\nexport class MessagesClientUploadAttachmentsService implements BaseUploadAttachmentsService {\n  constructor(private readonly service: MessagecenterHttpService) {}\n\n  /**\n   * Delete attachments by ids\n   *\n   * @param ids Attachments list\n   * @returns Delete attachments stream\n   */\n  deleteAttachments(ids: Array<string>): Observable<DeleteResponseBody | null> {\n    return this.service.deleteMessageAttachments({ ids });\n  }\n\n  /**\n   * Upload attachments\n   *\n   * @param attachment Attachment\n   * @returns Post message attachments stream\n   */\n  uploadAttachment(attachment: Blob): Observable<Metadata | null> {\n    return this.service.postMessageAttachments({ attachment });\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { defaultModelObservable } from '../../utils/item-model-property';\n\nexport const DefaultWidgetProperties = {\n  createMessageOpenEventName: 'bb.event.messages.create.message.open',\n  createMessageClosedEventName: 'bb.event.messages.create.message.close',\n  itemsPerPage: 10,\n  mailboxType: '',\n  customerServiceTitle: 'Customer Service',\n  viewType: 'all',\n  hideAssignedToColumn: false,\n  showMailboxTypes: true,\n};\n\n@Injectable()\nexport class BaseConversationsListPropertiesService {\n  constructor(@Optional() private readonly itemModel?: ItemModel) {}\n\n  /**\n   * Quantity of items to show per page/to add per request, used for Client and Employee widget\n   */\n  get itemsPerPage(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.itemsPerPage);\n    }\n\n    return this.itemModel.property('itemsPerPage', DefaultWidgetProperties.itemsPerPage);\n  }\n\n  /**\n   * Event published to open Create message modal widget, used for Client and Employee widget\n   */\n  get createMessageOpenEventName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.createMessageOpenEventName);\n    }\n\n    return this.itemModel.property('createMessageOpenEventName', DefaultWidgetProperties.createMessageOpenEventName);\n  }\n\n  /**\n   * Event published when Create message modal widget was closed,\n   * used for Client and Employee widget to update list of conversations\n   */\n  get createMessageClosedEventName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.createMessageClosedEventName);\n    }\n\n    return this.itemModel.property(\n      'createMessageClosedEventName',\n      DefaultWidgetProperties.createMessageClosedEventName,\n    );\n  }\n\n  /**\n   * Mailbox type property, used for Client widget\n   */\n  get mailboxType(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.mailboxType);\n    }\n\n    return this.itemModel.property('mailboxType', DefaultWidgetProperties.mailboxType);\n  }\n\n  /**\n   * Customer service title, localizable, used for Client widget\n   */\n  get customerServiceTitle(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.customerServiceTitle);\n    }\n\n    return this.itemModel.property('customerServiceTitle', DefaultWidgetProperties.customerServiceTitle);\n  }\n\n  /**\n   * View type for conversations list (all, assigned, unassigned, resolved, my-resolved, drafts),\n   * used for Employee widget\n   */\n  get viewType(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.viewType);\n    }\n\n    return this.itemModel.property('viewType', DefaultWidgetProperties.viewType);\n  }\n\n  /**\n   * Property to hide `Assigned to` column, used for Employee widget\n   */\n  get hideAssignedToColumn(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.hideAssignedToColumn);\n    }\n\n    return this.itemModel.property('hideAssignedToColumn', DefaultWidgetProperties.hideAssignedToColumn);\n  }\n\n  /**\n   * Property to show mailbox types (inbox and sent), used for Employee widget\n   */\n  get showMailboxTypes(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.showMailboxTypes);\n    }\n\n    return this.itemModel.property('showMailboxTypes', DefaultWidgetProperties.showMailboxTypes);\n  }\n}\n","import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, Subject } from 'rxjs';\nimport { map, pluck, takeUntil } from 'rxjs/operators';\nimport { ConversationThread, MessageDraftsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { SharedMethodsService } from '../../services/shared-methods/shared-methods.service';\nimport { ApplyFilterParams, FilterParams, MailboxType } from './model/params.model';\nimport { BaseConversationsListPropertiesService } from './base-conversations-list-properties.service';\n@Component({\n  template: '',\n})\nexport class BaseConversationsListWidgetComponent implements OnDestroy {\n  /**\n   * Emits id of the selected conversation\n   */\n  @Output() conversationId = new EventEmitter();\n\n  /**\n   * Emits filter object to keep widget filter params\n   */\n  @Output() filter = new EventEmitter<string>();\n\n  /**\n   * The error response information.\n   */\n  errorResponse: HttpErrorResponse | undefined;\n\n  /**\n   * The `Unsubscribe` subject.\n   */\n  readonly unsubscribe$ = new Subject<boolean>();\n\n  /**\n   * The loading parameter indicating the starting page for the data to be loaded from.\n   */\n  readonly from$ = new BehaviorSubject(0);\n\n  /**\n   * The parameters object with the starting page number.\n   */\n  filterParams: FilterParams = {\n    from: 0,\n  };\n\n  /**\n   * The parameters subject with applied filters.\n   */\n  readonly filterParams$: Observable<FilterParams> = this.getRouteParam(this.activatedRoute, 'filter').pipe(\n    takeUntil(this.unsubscribe$),\n    map(params => {\n      if (params) {\n        try {\n          return JSON.parse(params);\n        } catch (err) {}\n      }\n\n      return {};\n    }),\n  );\n\n  constructor(\n    readonly shared: SharedMethodsService,\n    readonly activatedRoute: ActivatedRoute,\n    readonly properties: BaseConversationsListPropertiesService,\n  ) {}\n\n  /**\n   * The method to change the page and load conversations corresponding to that page.\n   *\n   * @param page Page number\n   */\n  onPageChange(page?: number) {\n    if (page || page === 0) {\n      this.from$.next(page);\n      this.filterParams.from = page;\n      this.emitFilterParams(this.filterParams);\n    }\n  }\n\n  /**\n   * The method to switch to another mailbox type and load corresponding data.\n   *\n   * @param mailbox Mailbox type\n   */\n  onMailboxApply(mailbox: MailboxType) {\n    this.from$.next(0);\n    this.filterParams = this.setMailboxTypedParams(mailbox);\n    this.emitFilterParams(this.filterParams);\n  }\n\n  /**\n   * The method to fetch conversation list according to the applied filter parameters.\n   *\n   * @param obj Filter params\n   */\n  onFilterFormApply(obj: ApplyFilterParams) {\n    this.from$.next(0);\n    this.filterParams = this.setFilterFormParams(obj);\n    this.emitFilterParams(this.filterParams);\n  }\n\n  /**\n   * The method to open the draft thread.\n   *\n   * @param draft Draft data\n   */\n  openDraft(draft: ConversationThread | MessageDraftsGetResponseBody) {\n    if ('conversationId' in draft) {\n      this.conversationId.emit(draft.conversationId);\n    } else {\n      this.properties.createMessageOpenEventName\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(eventName => this.shared.eventBusPublish(eventName, { draftId: draft.id }));\n    }\n  }\n\n  /**\n   * The method to open the conversation thread.\n   *\n   * @param conversation Conversation data\n   */\n  openConversation(conversation: ConversationThread | string) {\n    this.conversationId.emit(typeof conversation === 'string' ? conversation : conversation.id);\n  }\n\n  /**\n   * The method to open the error notification.\n   *\n   * @param error Http error response\n   */\n  showErrorNotification(error: HttpErrorResponse) {\n    this.shared.openNotification(this.shared.getErrorMessage(error), 'error');\n\n    return EMPTY;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  /**\n   * The method to emit the filtering parameters.\n   *\n   * @param filterParams Filter params data\n   */\n  emitFilterParams(filterParams: FilterParams) {\n    const params = JSON.stringify(filterParams);\n\n    this.filter.emit(params);\n  }\n\n  private setMailboxTypedParams(mailboxType: string) {\n    return {\n      from: 0,\n      mailboxType,\n    };\n  }\n\n  private setFilterFormParams(filterParams: ApplyFilterParams) {\n    return {\n      from: 0,\n      ...filterParams,\n    };\n  }\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map(params => params[0] || params[1]),\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { GetIdentities, GetIdentity } from '@backbase/data-ang/user';\nimport { TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\n\nexport abstract class FilterService {\n  abstract getTopics(): Observable<TopicsGetResponseBody[] | null>;\n  abstract getUsers?(text: string): Observable<GetIdentities | null>;\n  abstract getUserById?(id: string): Observable<GetIdentity | null>;\n}\n","import { Component, Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { IdentityListedItem } from '@backbase/data-ang/user';\nimport { TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { FilterService } from '../model/filter-service.model';\nimport { ApplyFilterParams } from '../model/params.model';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { topicPlaceholderConfig } from '../../../utils/topic-placeholder-text-helper';\n\n@Component({\n  selector: 'bb-messages-filter-conversation-list',\n  templateUrl: './filter-conversations-list.component.html',\n})\nexport class FilterConversationsListComponent implements OnDestroy, OnInit {\n  /**\n   * Css classes for header block\n   */\n  @Input() headerClass: string | undefined;\n  /**\n   * Css classes for body block\n   */\n  @Input() bodyClass: string | undefined;\n\n  /**\n   * Observable filter params to init component with\n   */\n  @Input() set filterParams(value: ApplyFilterParams | undefined) {\n    if (value && this.checkFilterParams(this.filterParams$.getValue(), value)) {\n      this.applied = true;\n      this.filterParams$.next(value);\n    }\n  }\n  /**\n   * Configs for topic selector placeholder\n   */\n  public readonly topicPlaceholderConfig = topicPlaceholderConfig;\n\n  /**\n   * Event emitter for apply action\n   */\n  @Output() apply = new EventEmitter<ApplyFilterParams>();\n  /**\n   * Event emitter for clear action\n   */\n  @Output() clear = new EventEmitter<void>();\n\n  /**\n   * The filters form reference.\n   */\n  filterForm = this.fb.group({\n    date: [''],\n    topic: [''],\n    user: [''],\n  });\n\n  /**\n   * The applied flag.\n   */\n  applied = false;\n\n  /**\n   * The opened flag.\n   */\n  opened = false;\n\n  /**\n   * The stream with the topic list.\n   */\n  readonly topics$ = new Subject<TopicsGetResponseBody[] | null>();\n\n  /**\n   * The method to get the typeahead options.\n   */\n  readonly typeaheadOptions = {\n    ngbTypeahead: this.searchUsers.bind(this),\n    resultFormatter: (item: IdentityListedItem) => item.fullName,\n    inputFormatter: (item: IdentityListedItem) => item.fullName,\n  };\n\n  private readonly filterParams$ = new BehaviorSubject<ApplyFilterParams>({});\n  private readonly unsubscribe$ = new Subject<void>();\n\n  constructor(\n    private readonly service: FilterService,\n    private readonly fb: FormBuilder,\n    private readonly shared: SharedMethodsService,\n  ) {}\n\n  ngOnInit() {\n    combineLatest([this.filterParams$, this.topics$])\n      .pipe(\n        switchMap(([params, topics]) => {\n          const { topicId, endDate, startDate, userId } = params;\n\n          if (topics && topicId) {\n            this.filterForm.controls['topic'].setValue(\n              topics.find((topic: TopicsGetResponseBody) => topic.id === topicId),\n            );\n          }\n\n          if (startDate && endDate) {\n            this.filterForm.controls['date'].setValue({\n              from: new Date(startDate).toISOString(),\n              to: new Date(endDate).toISOString(),\n            });\n          }\n\n          if (userId && this.service.getUserById) {\n            return this.service\n              .getUserById(userId)\n              .pipe(tap(user => user && this.filterForm.controls['user'].setValue({ ...user, id: params.userId })));\n          }\n\n          return EMPTY;\n        }),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe();\n\n    this.service\n      .getTopics()\n      .pipe(take(1))\n      .subscribe(topics => {\n        this.topics$.next(topics);\n        this.topics$.complete();\n      });\n  }\n\n  /**\n   * The method to submit the form.\n   */\n  submit() {\n    const applyObject: ApplyFilterParams = this.convertToFilterParams(this.filterForm);\n\n    this.applied = !!Object.keys(applyObject).length;\n    this.opened = false;\n    this.apply.emit(applyObject);\n  }\n\n  /**\n   * The method to reset the form.\n   *\n   * @param apply Flag to submit or not the form\n   */\n  reset(apply = false) {\n    if (apply) {\n      this.filterForm.valueChanges.pipe(take(1)).subscribe(() => {\n        this.submit();\n      });\n    }\n\n    this.filterForm.reset();\n  }\n\n  /**\n   * The method to open or close the filter form.\n   */\n  triggerOpened() {\n    this.opened = !this.opened;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  private convertToFilterParams(form: FormGroup): ApplyFilterParams {\n    return {\n      ...(form.value.topic && { topicId: form.value.topic.id }),\n      ...(form.value.user && { userId: form.value.user.id }),\n      ...(form.value.date && {\n        startDate: this.formatDate(form.value.date.from),\n        endDate: this.formatDate(form.value.date.to),\n      }),\n    };\n  }\n\n  private formatDate(date: Date): string {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const dt = d.getDate();\n    const finalDt = dt < 10 ? `0${dt}` : dt.toString();\n    const finalMonth = month < 10 ? `0${month}` : month.toString();\n\n    return `${year}-${finalMonth}-${finalDt}`;\n  }\n\n  private checkFilterParams(curr: Record<string, any>, next: Record<string, any>): boolean {\n    if (!Object.keys(next).length || !(next && (next.userId || next.topicId || (next.startDate && next.endDate)))) {\n      return false;\n    }\n\n    for (const key in next) {\n      if (curr[key] && curr[key] === next[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private searchUsers(text: Observable<string>): Observable<IdentityListedItem[] | null | undefined> {\n    return text.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(value => {\n        if (!this.service.getUsers || !value.length) {\n          return EMPTY;\n        } else {\n          return this.service.getUsers(value).pipe(\n            map(response => response && response.identities),\n            catchError(err => {\n              this.shared.openNotification(this.shared.getErrorMessage(err), 'error');\n\n              return EMPTY;\n            }),\n          );\n        }\n      }),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbFilterConversationsListCustomizable]',\n})\nexport class FilterConversationsListCustomizableDirective extends BbTemplate<\n  FilterConversationsListComponent,\n  { topics: TopicsGetResponseBody[] }\n> {}\n","<ng-container\n  bbFilterConversationsListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    topics: topics$ | async\n  }\"\n></ng-container>\n\n<ng-template bbFilterConversationsListCustomizable let-host let-topics=\"context.topics\">\n  <div [ngClass]=\"host.headerClass\" data-role=\"filters-header\">\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item\">\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            class=\"bb-button-bar__button\"\n            bbButton\n            [color]=\"host.applied ? 'primary' : 'secondary'\"\n            [ngClass]=\"{ active: host.opened }\"\n            (click)=\"host.triggerOpened()\"\n            data-role=\"filter-button\"\n          >\n            <bb-icon-ui [cropped]=\"true\" name=\"filter\"></bb-icon-ui>\n            <span\n              *ngIf=\"host.applied; else filtersTextDefault\"\n              i18n=\"\n                Filters applied|Text for filter button if filter was\n                applied@@messages.messagesCommon.conversationsListFilterConversation.filtersAppliedText\"\n              >Filters applied</span\n            >\n          </button>\n          <button\n            class=\"bb-button-bar__button\"\n            bbButton\n            color=\"link\"\n            *ngIf=\"host.applied\"\n            i18n=\"Clear filters@@messages.messagesCommon.conversationsListFilterConversation.clearFilterssButtonText\"\n            (click)=\"host.reset(true)\"\n            data-role=\"clear-header-button\"\n          >\n            Clear filters\n          </button>\n        </div>\n      </div>\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"host.opened\" [ngClass]=\"host.bodyClass\" data-role=\"filters-form-container\">\n    <form [formGroup]=\"host.filterForm\" (submit)=\"host.submit()\">\n      <div class=\"form-row form-group\">\n        <div class=\"col-4\">\n          <bb-dropdown-single-select-ui\n            *ngIf=\"\n              topics?.length\n                ? topicPlaceholderConfig.selectTopicPlaceholder\n                : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n            \"\n            label=\"Topic\"\n            data-role=\"topics\"\n            i18n-label=\"Topic label@@messages.messagesCommon.conversationsListFilterConversation.topicLabel\"\n            [options]=\"topics\"\n            displayAttributePath=\"name\"\n            [attr.placeholder]=\"topicPlaceholder\"\n            [placeholder]=\"topicPlaceholder\"\n            formControlName=\"topic\"\n          ></bb-dropdown-single-select-ui>\n        </div>\n        <div class=\"col-4\">\n          <bb-search-box-ui\n            label=\"Customer\"\n            i18n-label=\"\n              Customer label text@@messages.messagesCommon.conversationsListFilterConversation.customerLabelText\"\n            formControlName=\"user\"\n            placeholder=\"Search by name\"\n            i18n-placeholder=\"\n              Search by name\n              placeholder@@messages.messagesCommon.conversationsListFilterConversation.searchByNamePlaceholderText\"\n            [typeaheadOptions]=\"host.typeaheadOptions\"\n          ></bb-search-box-ui>\n        </div>\n        <div class=\"col-4\">\n          <bb-input-datepicker-ui\n            label=\"Date\"\n            i18n-label=\"Date label text@@messages.messagesCommon.conversationsListFilterConversation.dateLabelText\"\n            formControlName=\"date\"\n            [rangeSelection]=\"true\"\n          ></bb-input-datepicker-ui>\n        </div>\n      </div>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          i18n=\"Close@@messages.messagesCommon.conversationsListFilterConversation.closeButtonText\"\n          (click)=\"host.triggerOpened()\"\n          data-role=\"close-filter\"\n        >\n          Close\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          i18n=\"Apply@@messages.messagesCommon.conversationsListFilterConversation.applyButtonText\"\n          data-role=\"apply-filter\"\n        >\n          Apply\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          i18n=\"Clear All@@messages.messagesCommon.conversationsListFilterConversation.clearAllButtonText\"\n          (click)=\"host.reset()\"\n          data-role=\"clear-filter\"\n        >\n          Clear All\n        </button>\n      </div>\n    </form>\n  </div>\n\n  <ng-template #filtersTextDefault>\n    <span\n      i18n=\"\n        Filters|Text for filter button if filter was\n        applied@@messages.messagesCommon.conversationsListFilterConversation.filtersText\"\n      >Filters</span\n    >\n  </ng-template>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { BaseConversationsListWidgetComponent } from './base-conversations-list-widget.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\n\nimport {\n  FilterConversationsListComponent,\n  FilterConversationsListCustomizableDirective,\n} from './filter-conversations-list/filter-conversations-list.component';\n\nconst components = [BaseConversationsListWidgetComponent, FilterConversationsListComponent];\nconst directives = [FilterConversationsListCustomizableDirective];\nconst uiModules = [ButtonModule, IconModule, DropdownSingleSelectModule, SearchBoxModule, InputDatepickerModule];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, ...uiModules],\n  declarations: [...components, ...directives],\n  exports: [...uiModules, ...components, ...directives],\n})\nexport class BaseConversationsListWidgetModule {}\n","export interface ApplyFilterParams {\n  userId?: string;\n  topicId?: string;\n  startDate?: string;\n  endDate?: string;\n}\n\nexport interface FilterParams extends ApplyFilterParams {\n  mailboxType?: string;\n  from: number;\n}\n\nexport enum MailboxType {\n  inbox = 'inbox',\n  outbox = 'outbox',\n  all = 'all',\n}\n","import { Observable } from 'rxjs';\n\nexport interface Attachment {\n  id: string;\n  filename: string;\n  size: number;\n  createdAt: string;\n  readonly link?: string;\n  readonly linkStream?: Observable<ArrayBuffer>;\n}\nexport enum ReadUnreadStatusType {\n  READ = 'READ',\n  UNREAD = 'UNREAD',\n}\n\nexport interface Draft {\n  id: string;\n  body?: string;\n  createdAt: string;\n  attachments?: Array<{\n    id: string;\n    filename: string;\n    size: number;\n    createdAt: string;\n  }>;\n}\n","import { Observable } from 'rxjs';\nimport {\n  DraftPostResponseBody,\n  ConversationMessageDraftPostRequestBody,\n  ConversationMessageDraftPutRequestBody,\n  MarkAsReadUnreadPutRequestBody,\n  MarkAsReadUnreadPutResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { Attachment } from '../models/conversations.model';\n\nexport abstract class AbstractBaseMessagesConversationThreadService {\n  abstract markConversationsAsReadUnread(\n    params: MarkAsReadUnreadPutRequestBody,\n  ): Observable<MarkAsReadUnreadPutResponseBody | null>;\n  abstract getDownloadAttachmentUrl(id: string): string;\n  abstract downloadFile(id: string): Observable<ArrayBuffer>;\n\n  /**\n   * Creat message draft\n   *\n   * @param conversationId Conversation id\n   * @param body Request body\n   * @returns Create draft stream\n   */\n  createDraft?(\n    conversationId: string,\n    body: ConversationMessageDraftPostRequestBody,\n  ): Observable<DraftPostResponseBody | null>;\n\n  /**\n   * Update message draft\n   *\n   * @param conversationId Conversation id\n   * @param body Request body\n   * @returns Update draft stream\n   */\n  updateDraft?(conversationId: string, body: ConversationMessageDraftPutRequestBody): Observable<any>;\n\n  /**\n   * Delete message draft\n   *\n   * @param draftId Draft id\n   * @returns Delete draft stream\n   */\n  deleteDraft?(draftId: string): Observable<any>;\n\n  /**\n   * Map attachments\n   *\n   * @param attachments Attachments list\n   * @returns Mapped attachments list with linkStream update\n   */\n  attachmentsMapper(attachments: Attachment[]): Attachment[] {\n    return attachments.map(attachment => ({\n      ...attachment,\n      linkStream: this.downloadFile(attachment.id),\n    }));\n  }\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\n\nimport { MessageReplyPostRequestBody } from '@backbase/messages-v5-http-ang';\n\nimport { Draft } from '../models/conversations.model';\nimport { AbstractBaseMessagesConversationThreadService } from '../services/abstract-base-messages-conversation-thread.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\n\n@Component({\n  template: '',\n})\nexport class BaseConversationThreadDraftsComponent {\n  @ViewChild('draftSaveSuccess') draftSaveSuccessTpl: TemplateRef<any> | undefined;\n  @ViewChild('draftDeleteSuccess') draftDeleteSuccessTpl: TemplateRef<any> | undefined;\n\n  draftResponse: Draft | undefined;\n\n  constructor(\n    protected readonly apiThreadService: AbstractBaseMessagesConversationThreadService,\n    protected readonly shared: SharedMethodsService,\n  ) {}\n\n  saveDraft(conversationId: string, body: MessageReplyPostRequestBody): Observable<any> {\n    return of(this.draftResponse).pipe(\n      switchMap(draft => (draft ? this.updateDraft(conversationId, body) : this.createDraft(conversationId, body))),\n      tap(() => this.shared.openNotification(this.draftSaveSuccessTpl, 'success')),\n      catchError(error => {\n        this.shared.openNotification(this.shared.getErrorMessage(error), 'error');\n\n        return EMPTY;\n      }),\n    );\n  }\n\n  deleteDraft(): Observable<any> {\n    if (this.apiThreadService.deleteDraft && this.draftResponse) {\n      return this.apiThreadService.deleteDraft(this.draftResponse.id).pipe(\n        tap(() => {\n          this.draftResponse = undefined;\n          this.shared.openNotification(this.draftDeleteSuccessTpl, 'success');\n        }),\n        catchError(error => {\n          this.shared.openNotification(this.shared.getErrorMessage(error), 'error');\n\n          return EMPTY;\n        }),\n      );\n    }\n\n    return of(undefined);\n  }\n\n  private createDraft(conversationId: string, body: MessageReplyPostRequestBody): Observable<any | null | undefined> {\n    if (this.apiThreadService.createDraft) {\n      return this.apiThreadService.createDraft(conversationId, body).pipe(\n        tap(\n          res =>\n            (this.draftResponse = {\n              id: res ? res.id : '',\n              createdAt: new Date().toString(),\n            }),\n        ),\n      );\n    }\n\n    return of(undefined);\n  }\n\n  private updateDraft(conversationId: string, body: MessageReplyPostRequestBody): Observable<any> {\n    if (this.apiThreadService.updateDraft) {\n      return this.apiThreadService.updateDraft(conversationId, body);\n    }\n\n    return of(undefined);\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, Subject, of } from 'rxjs';\nimport { catchError, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { Metadata, MessageReplyPostRequestBody, MarkAsReadUnreadPutResponseBody } from '@backbase/messages-v5-http-ang';\n\nimport { RichTextEditorComponent } from '@backbase/ui-ang/rich-text-editor';\n\nimport {\n  ManipulationType,\n  MessagesConfirmationModalModel,\n} from '../../messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';\nimport { AbstractBaseMessagesConversationThreadService } from '../services/abstract-base-messages-conversation-thread.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { ReadUnreadStatusType } from '../models/conversations.model';\nimport { BaseConversationThreadDraftsComponent } from './base-conversation-thread-drafts.component';\nimport { UnknownIdError } from '../../../utils/unknown-id-error';\nimport { shareReplayOnce } from '../../../helpers/rxjs-operators';\n\n@Component({\n  template: '',\n})\nexport class BaseConversationThreadComponent extends BaseConversationThreadDraftsComponent implements OnDestroy {\n  static counter = 0;\n\n  /**\n   * Event emitted when this thread should be closed or navigation should be changed to previous or another widget\n   */\n  @Output() back = new EventEmitter();\n\n  /**\n   * Selected conversation id setter\n   */\n  @Input() set selectedConversationId(value: string | undefined) {\n    this.conversationId$.next(value);\n  }\n\n  /**\n   * The notification for the reply success.\n   */\n  @ViewChild('conversationReplySuccess,messageReplySuccess') replySuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the delete success.\n   */\n  @ViewChild('conversationDeleteSuccess,messageDeleteSuccess') deleteSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The message text editor.\n   */\n  @ViewChild('richTextEditor') richTextEditor: RichTextEditorComponent | undefined;\n\n  /**\n   * The conversation thread ID.\n   */\n  readonly id = `base-conversation-thread-component-${BaseConversationThreadComponent.counter++}`;\n\n  /**\n   * The manipulation types enum (`resolve`, `unresolve`, `assign`, `unassign`, `discard`,\n   * `discardDraft`, `discardPreview`, `deleteTopic`, `deleteMailout`).\n   */\n  readonly manipulationTypes = ManipulationType;\n\n  protected readonly unsubscribe = new Subject();\n  protected readonly replyPressed = new Subject<MessageReplyPostRequestBody>();\n  private readonly conversationId$ = new BehaviorSubject<string | undefined>(undefined);\n\n  /**\n   * The error information.\n   */\n  errorResponse: HttpErrorResponse | UnknownIdError | undefined;\n\n  /**\n   * The loading flag for the data fetched through the HTTP request.\n   */\n  loading = true;\n\n  /**\n   * The flag defining if the reply is opened or not.\n   */\n  replyOpened = false;\n\n  /**\n   * The flag defining if the topic alert is closed or not.\n   */\n  topicAlertClosed = false;\n\n  /**\n   * The modal for action confirmation.\n   */\n  confirmationModal: MessagesConfirmationModalModel = {\n    opened: false,\n    type: undefined,\n  };\n\n  /**\n   * The reply form.\n   */\n  replyFormGroup = new FormGroup({\n    body: new FormControl(),\n    attachments: new FormControl(),\n  });\n\n  /**\n   * The form loading flag.\n   */\n  formLoading = false;\n\n  protected readonly conversationId: Observable<string> = this.getConversationId();\n  protected readonly markAsReadUnreadSubject = new BehaviorSubject<ReadUnreadStatusType>(ReadUnreadStatusType.READ);\n  protected readonly markAsReadUnreadStream: Observable<MarkAsReadUnreadPutResponseBody | null> =\n    this.getMarkAsReadUnreadStream();\n\n  constructor(\n    protected readonly apiThreadService: AbstractBaseMessagesConversationThreadService,\n    protected readonly activatedRoute: ActivatedRoute,\n    protected readonly shared: SharedMethodsService,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    protected readonly uploadService: MessagesUploadAttachmentsService,\n    protected readonly encodingService: MessagesEncodingService,\n  ) {\n    super(apiThreadService, shared);\n  }\n\n  /**\n   * Conversation id getter\n   */\n  get conversationIdValue() {\n    return this.conversationId$.getValue();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * The method to save the draft.\n   */\n  onSaveDraft() {\n    if (this.replyFormGroup.valid) {\n      this.saveDraft(this.conversationIdValue ? this.conversationIdValue : '', this.convertFormValue())\n        .pipe(takeUntil(this.unsubscribe))\n        .subscribe();\n    }\n  }\n\n  /**\n   * The method that is used for component initialization to subscribe for the read-unread status and\n   * to toggle the reply form updates.\n   */\n  initSubscriptions() {\n    this.markAsReadUnreadStream.pipe(takeUntil(this.unsubscribe)).subscribe();\n\n    this.confirmModalService.emitToggleModal$.pipe(takeUntil(this.unsubscribe)).subscribe(({ opened, type }) => {\n      this.confirmationModal = { opened, type };\n\n      if (!opened && (type === ManipulationType.discard || type === ManipulationType.discardDraft)) {\n        this.toggleReplyForm(false);\n      }\n    });\n  }\n\n  /**\n   * The method to navigate back.\n   */\n  navigateBack() {\n    this.back.emit();\n  }\n\n  /**\n   * The method to toggle the reply form.\n   *\n   * @param flag Toggle status\n   */\n  toggleReplyForm(flag: boolean) {\n    this.replyOpened = flag;\n\n    if (!flag) {\n      this.uploadService.reset(true);\n      this.replyFormGroup.reset();\n    } else {\n      setTimeout(() => this.richTextEditor && this.richTextEditor.labelClick());\n    }\n  }\n\n  /**\n   * The method to submit the reply.\n   */\n  reply() {\n    this.replyFormGroup.markAsDirty();\n    this.replyFormGroup.markAllAsTouched();\n    if (this.replyFormGroup.valid) {\n      this.replyPressed.next(this.convertFormValue());\n    }\n  }\n\n  /**\n   * The method that defines whether the control is valid or not.\n   *\n   * @param field Field name\n   * @returns Is form field valid flag\n   */\n  isInvalidControl(field: string): boolean {\n    const control = this.getControl(field);\n\n    return !!control && control.touched && control.invalid;\n  }\n\n  /**\n   * The method to get any errors generated by failing validation, or null if there are no errors.\n   *\n   * @param field Field name\n   * @param type Error type\n   */\n  hasError(field: string, type: string): boolean {\n    const control = this.getControl(field);\n\n    return control && control.errors && control.errors[type];\n  }\n\n  private getConversationId(): Observable<string> {\n    return this.conversationId$.pipe(\n      switchMap(id => {\n        if (!id) {\n          this.errorResponse = new UnknownIdError();\n\n          return EMPTY;\n        }\n\n        return of(id);\n      }),\n      shareReplayOnce(),\n    );\n  }\n\n  private getMarkAsReadUnreadStream(): Observable<MarkAsReadUnreadPutResponseBody | null> {\n    return combineLatest([this.markAsReadUnreadSubject, this.conversationId]).pipe(\n      switchMap(([status, conversationId]) =>\n        this.apiThreadService.markConversationsAsReadUnread({ status, ids: [conversationId] }).pipe(\n          tap(() => status === ReadUnreadStatusType.UNREAD && this.navigateBack()),\n          catchError(error => {\n            this.shared.openNotification(this.shared.getErrorMessage(error), 'error');\n\n            return EMPTY;\n          }),\n        ),\n      ),\n    );\n  }\n\n  private convertFormValue(): MessageReplyPostRequestBody {\n    const { body, attachments } = this.replyFormGroup.value;\n\n    return {\n      body: this.encodingService.b64Encode(body),\n      ...(attachments?.length && { attachments: (attachments as Metadata[]).map(item => item.id) }),\n    };\n  }\n\n  private getControl(field: string): AbstractControl | undefined {\n    return this.replyFormGroup?.controls[field];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseConversationThreadComponent } from './component/base-conversation-thread.component';\nimport { BaseConversationThreadDraftsComponent } from './component/base-conversation-thread-drafts.component';\n\n@NgModule({\n  declarations: [BaseConversationThreadComponent, BaseConversationThreadDraftsComponent],\n  imports: [CommonModule],\n  exports: [BaseConversationThreadComponent, BaseConversationThreadDraftsComponent],\n})\nexport class BaseMessagesConversationThreadModule {}\n","export enum EmployeeMailoutStatus {\n  Created = 'CREATED',\n  Preparing = 'PREPARING',\n  Ready = 'READY',\n  Processing = 'PROCESSING',\n  Done = 'DONE',\n  Error = 'ERROR',\n  Cancelled = 'CANCELLED',\n  WIP = 'CANCELLATION_IN_PROCESS',\n}\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { EmployeeMailoutStatus } from '../../models/employee-mailouts-statuses.model';\n\n@Component({\n  selector: 'bb-messages-mailout-status',\n  templateUrl: './messages-mailout-status.component.html',\n})\nexport class MessagesMailoutStatusComponent {\n  /**\n   * Mailout status title from model\n   */\n  @Input() mailoutStatus: string | undefined;\n  /**\n   * Input that toggles between shortened and full status title text\n   */\n  @Input() shortTitle = false;\n\n  /**\n   * Mailout statuses enum: Created = `CREATED`, Preparing = `PREPARING`, Ready = `READY`,\n   * Processing = `PROCESSING`, Done = `DONE`, Error = `ERROR`, Cancelled = `CANCELLED`, WIP = `CANCELLATION_IN_PROCESS`\n   */\n  readonly employeeMailoutStatus = EmployeeMailoutStatus;\n}\n\n@Directive({\n  selector: '[bbMessagesMailoutStatusCustomizable]',\n})\nexport class MessagesMailoutStatusCustomizableDirective extends BbTemplate<MessagesMailoutStatusComponent, undefined> {}\n","<ng-container bbMessagesMailoutStatusCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbMessagesMailoutStatusCustomizable let-hostRef>\n  <ng-container [ngSwitch]=\"hostRef.mailoutStatus\">\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Done\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Com\"\n        i18n-text=\"\n          Com|Badge text if mailout status is 'Completed' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.completed.short\"\n        color=\"success\"\n        bbTooltip=\"Completed\"\n        i18n-bbTooltip=\"\n          Completed|Tooltip text if mailout status is 'Completed'@@messages.mailoutStatus.statusTooltip.completed\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Completed\"\n          i18n-text=\"\n            Completed|Badge text if mailout status is 'Completed'@@messages.mailoutStatus.statusBadge.completed\"\n          color=\"success\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Error\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Err\"\n        i18n-text=\"\n          Err|Badge text if mailout status is 'Error' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.error.short\"\n        color=\"warning\"\n        bbTooltip=\"Error\"\n        i18n-bbTooltip=\"Error|Tooltip text if mailout status is 'Error'@@messages.mailoutStatus.statusTooltip.error\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Error\"\n          i18n-text=\"Error|Badge text if mailout status is 'Error'@@messages.mailoutStatus.statusBadge.error\"\n          color=\"warning\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Cancelled\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Del\"\n        i18n-text=\"\n          Del|Badge text if mailout status is 'Deleted' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.deleted.short\"\n        color=\"danger\"\n        bbTooltip=\"Deleted\"\n        i18n-bbTooltip=\"\n          Deleted|Tooltip text if mailout status is 'Deleted'@@messages.mailoutStatus.statusTooltip.deleted\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Deleted\"\n          i18n-text=\"Deleted|Badge text if mailout status is 'Deleted'@@messages.mailoutStatus.statusBadge.deleted\"\n          color=\"danger\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.WIP\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"WIP\"\n        i18n-text=\"\n          WIP|Badge text if mailout status is 'Deletion in progress' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.wip.short\"\n        color=\"danger\"\n        bbTooltip=\"Deletion in progress\"\n        i18n-bbTooltip=\"\n          Deletion in progress|Tooltip text if mailout status is 'Deletion in\n          progress'@@messages.mailoutStatus.statusTooltip.wip\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Deletion in progress\"\n          i18n-text=\"\n            Deletion in progress|Badge text if mailout status is 'Deletion in\n            progress'@@messages.mailoutStatus.statusBadge.wip\"\n          color=\"danger\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchDefault>\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Pro\"\n        i18n-text=\"\n          Pro|Badge text if mailout status is 'Processing' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.processing.short\"\n        color=\"primary\"\n        bbTooltip=\"Processing\"\n        i18n-bbTooltip=\"\n          Processing|Tooltip text if mailout status is 'Processing'@@messages.mailoutStatus.statusTooltip.processing\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      ></bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Processing\"\n          i18n-text=\"\n            Processing|Badge text if mailout status is 'Processing'@@messages.mailoutStatus.statusBadge.processing\"\n          color=\"primary\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n  </ng-container>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nimport {\n  MessagesMailoutStatusComponent,\n  MessagesMailoutStatusCustomizableDirective,\n} from './messages-mailout-status.component';\n\nconst components = [MessagesMailoutStatusComponent];\nconst directives = [MessagesMailoutStatusCustomizableDirective];\nconst uiModules = [BadgeModule, TooltipModule];\n\n@NgModule({\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules],\n  imports: [CommonModule, ...uiModules],\n})\nexport class MessagesMailoutStatusModule {}\n","export enum EmployeeMailoutStatusLabels {\n  CREATED = 'Processing',\n  PREPARING = 'Processing',\n  READY = 'Processing',\n  PROCESSING = 'Processing',\n  DONE = 'Completed',\n  ERROR = 'Error',\n  CANCELLED = 'Deleted',\n  CANCELLATION_IN_PROCESS = 'Deletion in progress',\n}\n","import { Injectable } from '@angular/core';\nimport {\n  MailoutHttpService,\n  MailoutPostRequestBody,\n  MailoutPostResponseBody,\n  MailoutPreviewResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class MessagesEmployeeMailoutReviewService {\n  constructor(private readonly mailoutService: MailoutHttpService) {}\n\n  /**\n   * Create mailout\n   *\n   * @param bodyRequest Create mailout request body\n   * @returns Create mailout stream\n   */\n  createMailout(bodyRequest: MailoutPostRequestBody): Observable<MailoutPostResponseBody | null> {\n    return this.mailoutService.postMailout({ mailoutPostRequestBody: bodyRequest });\n  }\n\n  /**\n   * Sanitize message body\n   *\n   * @param message Message body\n   * @returns Mailout preview response stream\n   */\n  sanitizeMessageBody(message: string): Observable<MailoutPreviewResponseBody | null> {\n    return this.mailoutService.postMailoutPreview({ mailoutPreviewRequestBody: { body: message } });\n  }\n}\n","import { Component, Input, OnInit, Directive, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\nimport { MessagesEmployeeMailoutReviewService } from './employee-mailout-review.service';\nimport { catchError, map, finalize } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { MailoutPostRequestBody } from '@backbase/messages-v5-http-ang';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { EmployeeCreateMailoutFormModel } from '../../../models/employee-create-mailout-form.model';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport {\n  ManipulationType,\n  MessagesConfirmationModalModel,\n} from '../../messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\n\n@Component({\n  selector: 'bb-messages-employee-mailout-review',\n  templateUrl: './employee-mailout-review.component.html',\n})\nexport class MessagesEmployeeMailoutReviewComponent implements OnInit {\n  /**\n   * The input with the create mailout form data.\n   */\n  @Input() mailout!: EmployeeCreateMailoutFormModel;\n\n  /**\n   * The cancel mailout output.\n   */\n  @Output() cancel = new EventEmitter();\n\n  /**\n   * The confirm operation output.\n   */\n  @Output() confirm = new EventEmitter();\n\n  /**\n   * The edit mailout output.\n   */\n  @Output() edit = new EventEmitter();\n\n  /**\n   * The notification for the successful create mailout operation.\n   */\n  @ViewChild('mailoutCreateSuccess') mailoutCreateSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the create mailout error.\n   */\n  @ViewChild('mailoutCreateError') mailoutCreateErrorTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The sanitize error flag.\n   */\n  sanitizeError = false;\n\n  /**\n   * The sanitize loading flag.\n   */\n  sanitizeLoading = false;\n\n  /**\n   * The sanitized mailout body.\n   */\n  sanitizedBody$?: Observable<string | null>;\n\n  /**\n   * The manipulation types enum: `resolve`, `unresolve`, `assign`, `unassign`, `discard`,\n   * `discardDraft`, `discardPreview`, `deleteTopic`, `deleteMailout`.\n   */\n  readonly manipulationTypes = ManipulationType;\n\n  /**\n   * The confirmation modal model.\n   */\n  readonly confirmationModal$: Observable<MessagesConfirmationModalModel> = this.confirmModalService.emitToggleModal$;\n\n  constructor(\n    private readonly encodingService: MessagesEncodingService,\n    private readonly dataService: MessagesEmployeeMailoutReviewService,\n    private readonly confirmModalService: MessagesManipulationConfirmModalService,\n    private readonly sharedService: SharedMethodsService,\n  ) {}\n\n  ngOnInit() {\n    if (this.mailout) {\n      this.sanitizedBody$ = this.sanitizeBody(this.encodingService.b64Encode(this.mailout.body || ''));\n    }\n  }\n\n  private sanitizeBody(body: string): Observable<string | null> {\n    this.sanitizeLoading = true;\n\n    return this.dataService.sanitizeMessageBody(body).pipe(\n      map(data => data && this.encodingService.b64Decode(data.body)),\n      catchError(() => {\n        this.sanitizeError = true;\n\n        return EMPTY;\n      }),\n      finalize(() => (this.sanitizeLoading = false)),\n    );\n  }\n\n  /**\n   * The method to switch from the preview to the editing state.\n   */\n  onEdit() {\n    this.edit.emit();\n  }\n\n  /**\n   * The method to discard the modal.\n   *\n   * @param discardParam Should open modal flag\n   */\n  onDiscardModal(discardParam: boolean) {\n    this.confirmModalService.toggleModal(\n      discardParam,\n      (discardParam && this.manipulationTypes.discardPreview) || undefined,\n    );\n  }\n\n  /**\n   * The method to confirm the discard action.\n   */\n  onConfirmModal() {\n    this.confirmModalService.toggleModal(false);\n    this.cancel.emit();\n  }\n\n  /**\n   * The method to save the mailout.\n   *\n   * @param employeeCreateMailoutFormModel Create mailout form model data\n   */\n  createMailout({\n    body,\n    subject,\n    topic,\n    attachments,\n    notDeletable,\n    recipientsDataId,\n    template,\n    important,\n    ...rest\n  }: EmployeeCreateMailoutFormModel) {\n    const finalValue: MailoutPostRequestBody = {\n      ...rest,\n      subject: '',\n      topic: '',\n      body: '',\n      deletable: !notDeletable,\n      important: !!important,\n      recipientsData: {\n        id: recipientsDataId[0].id,\n      },\n      ...(body && body.length && { body: this.encodingService.b64Encode(body) }),\n      ...(subject && subject.length && { subject: subject }),\n      ...(topic && topic.id && { topic: topic.id }),\n      ...(attachments && attachments.length && { attachments: attachments.map(({ id }) => id) }),\n    };\n\n    this.dataService.createMailout(finalValue).subscribe(\n      () => this.sharedService.openNotification(this.mailoutCreateSuccessTpl),\n      () => this.sharedService.openNotification(this.mailoutCreateErrorTpl, 'error'),\n      () => this.confirm.emit(),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesEmployeeMailoutReviewCustomizable]',\n})\nexport class MessagesEmployeeMailoutReviewCustomizableDirective extends BbTemplate<\n  MessagesEmployeeMailoutReviewComponent,\n  {\n    sanitizedBody: string | null;\n    confirmationModal: MessagesConfirmationModalModel;\n  }\n> {}\n\n@Directive({\n  selector: '[bbMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizable]',\n})\nexport class MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective extends BbTemplate<\n  MessagesEmployeeMailoutReviewComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizable]',\n})\nexport class MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective extends BbTemplate<\n  MessagesEmployeeMailoutReviewComponent,\n  void\n> {}\n","<ng-container\n  bbMessagesEmployeeMailoutReviewCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    sanitizedBody: sanitizedBody$ | async,\n    confirmationModal: confirmationModal$ | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbMessagesEmployeeMailoutReviewCustomizable\n  let-host\n  let-sanitizedBody=\"context.sanitizedBody\"\n  let-confirmationModal=\"context.confirmationModal\"\n>\n  <div class=\"row bb-block bb-block--md\">\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review name label text@@messages.employeeCreateMailout.mailoutReview.name\"\n        data-role=\"mailout-name\"\n      >\n        Name\n      </div>\n      <p data-role=\"mailout-name-content\">{{ host.mailout?.mailoutName }}</p>\n    </div>\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review topic label text@@messages.employeeCreateMailout.mailoutReview.topic\"\n        data-role=\"mailout-topic\"\n      >\n        Topic\n      </div>\n      <p data-role=\"mailout-topic-content\">{{ host.mailout.topic?.name }}</p>\n    </div>\n    <div class=\"col-12\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review subject label text@@messages.employeeCreateMailout.mailoutReview.subject\"\n        data-role=\"mailout-subject\"\n      >\n        Subject\n      </div>\n      <p data-role=\"mailout-subject-content\">{{ host.mailout.subject }}</p>\n    </div>\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review read-only label text@@messages.employeeCreateMailout.mailoutReview.readOnly\"\n        data-role=\"mailout-readonly\"\n      >\n        Read only\n      </div>\n      <p\n        i18n=\"Review read-only label text@@messages.employeeCreateMailout.mailoutReview.readOnly.value\"\n        data-role=\"mailout-readonly-content\"\n      >\n        { host.mailout['read-only'] + '', select, true {Yes} other {No} }\n      </p>\n    </div>\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review delete label text@@messages.employeeCreateMailout.mailoutReview.delete\"\n        data-role=\"mailout-deletable\"\n      >\n        Users able to delete\n      </div>\n      <p\n        i18n=\"Review delete label text@@messages.employeeCreateMailout.mailoutReview.delete.value\"\n        data-role=\"mailout-deletable-content\"\n      >\n        { !!host.mailout?.notDeletable + '', select, true {Yes} other {No} }\n      </p>\n    </div>\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review important label text@@messages.employeeCreateMailout.mailoutReview.important\"\n        data-role=\"mailout-important\"\n      >\n        Important\n      </div>\n      <p\n        i18n=\"Review important label text@@messages.employeeCreateMailout.mailoutReview.important.value\"\n        data-role=\"mailout-important-content\"\n      >\n        { !!host.mailout?.important + '', select, true {Yes} other {No} }\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row bb-block bb-block--md\">\n    <div\n      class=\"col-12 bb-text-semi-bold bb-block bb-block--md\"\n      i18n=\"Review body label text@@messages.employeeCreateMailout.mailoutReview.body\"\n    >\n      Custom HTML body preview\n    </div>\n    <div class=\"col-12\">\n      <ng-container *ngIf=\"!host.sanitizeLoading; else sanitizeLoader\">\n        <ng-container *ngIf=\"!host.sanitizeError; else sanitizeError\">\n          <bb-messages-body-preview [body]=\"sanitizedBody\" data-role=\"mailout-body-preview\"></bb-messages-body-preview>\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"row bb-block bb-block--md\">\n    <div\n      class=\"col-12 bb-text-semi-bold bb-block bb-block--md\"\n      i18n=\"Review attachments label text@@messages.employeeCreateMailout.mailoutReview.attachments\"\n      data-role=\"mailout-attachments\"\n    >\n      Attachments\n    </div>\n    <div class=\"col-auto\" *ngFor=\"let attachment of host.mailout.attachments; index as i\">\n      <div class=\"bb-block bb-block--md\">\n        <bb-file-attachment-ui\n          [name]=\"attachment.filename\"\n          [size]=\"attachment.size\"\n          [loading]=\"attachment.loading\"\n          [disabled]=\"true\"\n          data-role=\"mailout-attachments-content\"\n        ></bb-file-attachment-ui>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-button-bar\">\n    <bb-load-button-ui\n      class=\"bb-button-bar__button\"\n      data-role=\"send\"\n      aria-label=\"Send\"\n      i18n-aria-label=\"Send button aria-label text@@messages.employeeCreateMailout.mailoutReview.submitButtonAriaLabel\"\n      i18n=\"Send button text@@messages.employeeCreateMailout.mailoutReview.submitButton\"\n      (click)=\"host.createMailout(host.mailout)\"\n    >\n      Send\n    </bb-load-button-ui>\n    <button\n      bbButton\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n      data-role=\"discard\"\n      aria-label=\"Discard\"\n      i18n-aria-label=\"\n        Discard button aria-label text@@messages.employeeCreateMailout.mailoutReview.discardButtonAriaLabel\"\n      i18n=\"Discard button text@@messages.employeeCreateMailout.mailoutReview.discardButton\"\n      (click)=\"host.onDiscardModal(true)\"\n    >\n      Discard\n    </button>\n    <button\n      bbButton\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n      data-role=\"back\"\n      aria-label=\"Back to edit\"\n      i18n-aria-label=\"\n        Back to edit button aria-label text@@messages.employeeCreateMailout.mailoutReview.editButtonAriaLabel\"\n      i18n=\"Back to edit button text@@messages.employeeCreateMailout.mailoutReview.editButton\"\n      (click)=\"host.onEdit(host.mailout)\"\n    >\n      Back to edit\n    </button>\n  </div>\n\n  <ng-template #sanitizeError>\n    <bb-alert-ui\n      data-role=\"sanitize-error\"\n      title=\"We couldn't generate preview. Please contact support for more information\"\n      modifier=\"warning\"\n      [dismissible]=\"false\"\n    ></bb-alert-ui>\n  </ng-template>\n\n  <ng-template #sanitizeLoader>\n    <bb-loading-indicator-ui data-role=\"sanitize-loading\" loaderSize=\"md\" text=\"Loading...\"></bb-loading-indicator-ui>\n  </ng-template>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"confirmationModal.opened\"\n    [type]=\"confirmationModal.type\"\n    (cancel)=\"host.onDiscardModal(false)\"\n    (confirm)=\"host.onConfirmModal()\"\n    data-role=\"discard-modal\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #mailoutCreateSuccess>\n  <ng-container bbMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizable [bbHostRef]=\"this\"></ng-container>\n</ng-template>\n\n<ng-template bbMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizable let-host>\n  <span\n    i18n=\"\n      Your mailout has been successfully sent.|Text of successful mailout\n      create@@messages.employeeCreateMailout.mailoutReview.messageSuccessCompose\"\n    >Your mailout has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #mailoutCreateError>\n  <ng-container bbMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizable [bbHostRef]=\"this\"></ng-container>\n</ng-template>\n\n<ng-template bbMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizable let-host>\n  <span\n    i18n=\"\n      There is an error sending mailout.|Text of failed mailout\n      create@@messages.employeeCreateMailout.mailoutReview.messageErrorCompose\"\n    >There is an error sending mailout.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\n\nimport {\n  MessagesEmployeeMailoutReviewComponent,\n  MessagesEmployeeMailoutReviewCustomizableDirective,\n  MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective,\n  MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective,\n} from './employee-mailout-review.component';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { MessagesBodyPreviewModule } from '../../messages-preview/messages-preview.module';\nimport { MessagesEmployeeMailoutReviewService } from './employee-mailout-review.service';\nimport { MessagesManipulationConfirmModalModule } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\n\nconst components = [MessagesEmployeeMailoutReviewComponent];\nconst directives = [\n  MessagesEmployeeMailoutReviewCustomizableDirective,\n  MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective,\n  MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective,\n];\nconst uiModules = [ButtonModule, FileAttachmentModule, LoadButtonModule, AlertModule, LoadingIndicatorModule];\nconst innerModules = [MessagesBodyPreviewModule, MessagesManipulationConfirmModalModule];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  providers: [\n    MessagesEncodingService,\n    MessagesEmployeeMailoutReviewService,\n    MessagesManipulationConfirmModalService,\n    SharedMethodsService,\n  ],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n})\nexport class MessagesEmployeeMailoutReviewModule {}\n","// General\nexport { MessagesEncodingService } from './src/services/messages-encoding/messages-encoding.service';\nexport { PreventBubbleDownModule } from './src/directives/prevent-bubble-down/prevent-bubble-down.module';\nexport { PreventBubbleDownDirective } from './src/directives/prevent-bubble-down/prevent-bubble-down.directive';\n\n// Counter Services\nexport { MessagesUnreadConversationCountModule } from './src/services/messages-unread-conversation-count/messages-unread-conversation-count.module';\nexport { MessagesUnreadConversationCountService } from './src/services/messages-unread-conversation-count/messages-unread-conversation-count.service';\nexport { MessagesEmployeeConversationCountersModule } from './src/services/messages-employee-conversation-counters/messages-employee-conversation-counters.module';\nexport { MessagesEmployeeConversationCountersService } from './src/services/messages-employee-conversation-counters/messages-employee-conversation-counters.service';\n\n// Create Message\n// - Create Message Modal\n\nexport { BaseCreateMessageFormModule } from './src/components/create-message/base-form/base-create-message-form.module';\nexport { BaseCreateMessageModalModule } from './src/components/create-message/base-create-message-modal/base-create-message-modal.module';\nexport { BaseCreateMessageModalComponent } from './src/components/create-message/base-create-message-modal/base-create-message-modal.component';\nexport { BaseCreateMessageModalPropertiesService } from './src/components/create-message/base-create-message-modal/base-create-message-modal-properties.service';\n\n// - Create Message Form\nexport { BaseCreateMessageFormComponent } from './src/components/create-message/base-form/base-create-message-form.component';\nexport { EmployeeCreateMessageFormModule } from './src/components/create-message/employee-form/employee-create-message-form.module';\nexport { BaseCreateMessageFormService } from './src/components/create-message/base-form/base-create-message-form.service';\nexport { EmployeeCreateMailoutFormModule } from './src/components/create-message/employee-mailout-form/employee-create-mailout-form.module';\n\n// Conversation Message component\nexport { MessagesConversationMessageModule } from './src/components/messages-conversation-message/messages-conversation-message.module';\nexport {\n  MessagesConversationMessageComponent,\n  MessagesConversationMessageCustomizableDirective as ӨMessagesConversationMessageCustomizableDirective,\n} from './src/components/messages-conversation-message/messages-conversation-message.component';\n\n// Shared Services\nexport { SharedMethodsService } from './src/services/shared-methods/shared-methods.service';\nexport { SharedMethodsModule } from './src/services/shared-methods/shared-methods.module';\n\n// Rxjs operatorss\nexport { shareReplayOnce } from './src/helpers/rxjs-operators';\n\n// Request error\nexport { MessagesRequestErrorModule } from './src/components/messages-request-error/messages-request-error.module';\nexport { MessagesRequestErrorComponent } from './src/components/messages-request-error/messages-request-error.component';\n\n// Modals\nexport { BaseModalComponent } from './src/components/base-modal/base-modal.component';\n\n// Manipulation Confirm Modal\nexport { MessagesManipulationConfirmModalModule } from './src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module';\n\nexport { MessagesManipulationConfirmModalService } from './src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nexport {\n  MessagesConfirmationModalModel,\n  TopicsConfirmationModalModel,\n  MailoutConfirmationModal,\n  ManipulationType,\n} from './src/components/messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';\nexport {\n  MessagesManipulationConfirmModalCustomizableDirective as ӨMessagesManipulationConfirmModalCustomizableDirective,\n  MessagesManipulationConfirmModalComponent as ӨMessagesManipulationConfirmModalComponent,\n} from './src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.component';\n\n// Attachments\nexport { MessagesUploadAttachmentsModule } from './src/components/upload-attachments/messages-upload-attachments.module';\nexport {\n  MessagesUploadAttachmentsComponent,\n  MessagesUploadAttachmentsCustomizableDirective,\n} from './src/components/upload-attachments/messages-upload-attachments.component';\nexport * from './src/components/upload-attachments/model/messages-upload-attachments.model';\n\nexport { MessagesClientUploadAttachmentsService } from './src/components/upload-attachments/services/client-upload-attachments.service';\nexport { BaseUploadAttachmentsService } from './src/components/upload-attachments/services/base-attachments.service';\nexport { MessagesEmployeeUploadAttachmentsService } from './src/components/upload-attachments/services/employee-upload-attachments.service';\nexport { MessagesUploadAttachmentsService } from './src/components/upload-attachments/services/messages-upload-attachments.service';\n\n// Conversations list\nexport { BaseConversationsListWidgetModule } from './src/components/conversations-list/base-conversations-list-widget.module';\nexport { BaseConversationsListWidgetComponent } from './src/components/conversations-list/base-conversations-list-widget.component';\nexport {\n  BaseConversationsListPropertiesService,\n  DefaultWidgetProperties,\n} from './src/components/conversations-list/base-conversations-list-properties.service';\nexport {\n  FilterConversationsListComponent as ӨFilterConversationsListComponent,\n  FilterConversationsListCustomizableDirective as ӨFilterConversationsListCustomizableDirective,\n} from './src/components/conversations-list/filter-conversations-list/filter-conversations-list.component';\nexport * from './src/components/conversations-list/model/filter-service.model';\nexport * from './src/components/conversations-list/model/params.model';\n\n// Utils\nexport { snapshot } from './src/utils/snapshot';\nexport { UnknownIdError } from './src/utils/unknown-id-error';\nexport { getPropertyValue, defaultModelObservable } from './src/utils/item-model-property';\nexport { modelItemToBoolean } from './src/utils/type-helpers';\nexport { topicPlaceholderConfig } from './src/utils/topic-placeholder-text-helper';\n\n// Conversation thread\nexport { BaseMessagesConversationThreadModule } from './src/components/conversation-thread/base-messages-conversation-thread.module';\nexport { BaseConversationThreadComponent } from './src/components/conversation-thread/component/base-conversation-thread.component';\nexport { AbstractBaseMessagesConversationThreadService } from './src/components/conversation-thread/services/abstract-base-messages-conversation-thread.service';\nexport { BaseConversationThreadDraftsComponent as ӨBaseConversationThreadDraftsComponent } from './src/components/conversation-thread/component/base-conversation-thread-drafts.component';\nexport * from './src/components/conversation-thread/models/conversations.model';\n\n// Mailout statuses\nexport { MessagesMailoutStatusModule } from './src/components/messages-mailout-status/messages-mailout-status.module';\nexport {\n  MessagesMailoutStatusComponent,\n  MessagesMailoutStatusCustomizableDirective as ӨMessagesMailoutStatusCustomizableDirective,\n} from './src/components/messages-mailout-status/messages-mailout-status.component';\nexport { EmployeeMailoutStatus } from './src/models/employee-mailouts-statuses.model';\nexport { EmployeeMailoutStatusLabels } from './src/models/employee-mailouts-status-labels.model';\n\n// Mailout review\nexport { MessagesEmployeeMailoutReviewModule } from './src/components/create-message/employee-mailout-review/employee-mailout-review.module';\nexport {\n  MessagesEmployeeMailoutReviewComponent,\n  MessagesEmployeeMailoutReviewCustomizableDirective as ӨMessagesEmployeeMailoutReviewCustomizableDirective,\n  // eslint-disable-next-line max-len\n  MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective as ӨMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective,\n  // eslint-disable-next-line max-len\n  MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective as ӨMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective,\n} from './src/components/create-message/employee-mailout-review/employee-mailout-review.component';\nexport { EmployeeCreateMailoutFormModel } from './src/models/employee-create-mailout-form.model';\nexport {\n  EmployeeCreateMailoutFormComponent as ӨEmployeeCreateMailoutFormComponent,\n  EmployeeCreateMailoutFormCustomizableDirective as ӨEmployeeCreateMailoutFormCustomizableDirective,\n  // eslint-disable-next-line max-len\n  EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective as ӨEmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective,\n  // eslint-disable-next-line max-len\n  EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective as ӨEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective,\n} from './src/components/create-message/employee-mailout-form/employee-create-mailout-form.component';\nexport {\n  EmployeeCreateMessageFormComponent as ӨEmployeeCreateMessageFormComponent,\n  EmployeeCreateMessageFormCustomizableDirective as ӨEmployeeCreateMessageFormCustomizableDirective,\n} from './src/components/create-message/employee-form/employee-create-message-form.component';\n\n// Message preview\nexport { MessagesBodyPreviewComponent as ӨMessagesBodyPreviewComponent } from './src/components/messages-preview/messages-preview.component';\nexport { MessagesBodyPreviewModule as ӨMessagesBodyPreviewModule } from './src/components/messages-preview/messages-preview.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["MessagesPollPeriod","bbEventUnreadConversationCountUpdate","DefaultWidgetProperties","components","directives","uiModules","innerModules"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAGa,uBAAuB;;;;;;IAMlC,SAAS,CAAC,GAAW;QACnB,OAAO,kBAAkB,CACvB,IAAI,CAAC,GAAG,CAAC;aACN,KAAK,CAAC,EAAE,CAAC;aACT,GAAG,CAAC,UAAU,CAAC;YACd,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9D,CAAC;aACD,IAAI,CAAC,EAAE,CAAC,CACZ,CAAC;KACH;;;;;;IAOD,SAAS,CAAC,GAAW;QACnB,OAAO,IAAI,CACT,kBAAkB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAU,MAAM,EAAE,EAAE;YACrE,OAAO,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SAC9C,CAAC,CACH,CAAC;KACH;;qHA5BU,uBAAuB;yHAAvB,uBAAuB;4FAAvB,uBAAuB;kBADnC,UAAU;;;MCGE,0BAA0B;IACE,WAAW,CAAC,MAAkB;QACnE,MAAM,CAAC,cAAc,EAAE,CAAC;KACzB;;wHAHU,0BAA0B;4GAA1B,0BAA0B;4FAA1B,0BAA0B;kBAHtC,SAAS;mBAAC;oBACT,QAAQ,EAAE,uBAAuB;iBAClC;8BAEwC,WAAW;sBAAjD,YAAY;uBAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;;;MCG1B,uBAAuB;;qHAAvB,uBAAuB;sHAAvB,uBAAuB,iBAJnB,0BAA0B,aAC/B,YAAY,aACZ,0BAA0B;sHAEzB,uBAAuB,YAHzB,CAAC,YAAY,CAAC;4FAGZ,uBAAuB;kBALnC,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,0BAA0B,CAAC;iBACtC;;;ACGD,MAAM,aAAa,GAAG,UAAU,CAAC;AACjC,MAAMA,oBAAkB,GAAG,IAAI,CAAC;AAChC,MAAMC,sCAAoC,GAAG,2CAA2C,CAAC;MAG5E,sCAAsC;IAIjD,YACmB,oBAA8C,EAC9B,MAAc;QAD9B,yBAAoB,GAApB,oBAAoB,CAA0B;QAC9B,WAAM,GAAN,MAAM,CAAQ;QALhC,iBAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QAC7B,wBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAM3D,IAAI,CAAC,MAAM,CAAC,SAAS,CAACA,sCAAoC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;KACvF;;;;IAKD,MAAM;QACJ,OAAO,MACL,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAC1C,SAAS,CAAC,MACR,KAAK,CAAC,CAAC,EAAED,oBAAkB,CAAC,CAAC,IAAI,CAC/B,SAAS,CAAC,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC,EAClD,GAAG,CAAC,IAAI,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAC5E,CACF,CACF,CAAC;KACL;;;;;;IAOD,0BAA0B;QACxB,OAAO,IAAI,CAAC,oBAAoB,CAAC,2BAA2B,EAAE,CAAC;KAChE;IAEO,KAAK;QACX,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;;oIArCU,sCAAsC,0DAMvC,MAAM;wIANL,sCAAsC;4FAAtC,sCAAsC;kBADlD,UAAU;;0BAON,MAAM;2BAAC,MAAM;;;MCGL,qCAAqC;;mIAArC,qCAAqC;oIAArC,qCAAqC,YAhB9C,YAAY;oIAgBH,qCAAqC,aAFrC,CAAC,sCAAsC,CAAC,YAf1C;YACP,YAAY;YACZ,kBAAkB,CAAC,UAAU,CAAC;gBAC5B,kBAAkB,EAAE;oBAClB;wBACE,IAAI,EAAE,gBAAgB;wBACtB,QAAQ,EAAE;4BACR,OAAO,EAAE,sCAAsC;4BAC/C,QAAQ,EAAE,sCAAsC;4BAChD,IAAI,EAAE,CAAC,wBAAwB,EAAE,MAAM,CAAC;yBACzC;qBACF;iBACF;aACF,CAAC;SACH;4FAGU,qCAAqC;kBAlBjD,QAAQ;mBAAC;oBACR,OAAO,EAAE;wBACP,YAAY;wBACZ,kBAAkB,CAAC,UAAU,CAAC;4BAC5B,kBAAkB,EAAE;gCAClB;oCACE,IAAI,EAAE,gBAAgB;oCACtB,QAAQ,EAAE;wCACR,OAAO,EAAE,sCAAsC;wCAC/C,QAAQ,EAAE,sCAAsC;wCAChD,IAAI,EAAE,CAAC,wBAAwB,EAAE,MAAM,CAAC;qCACzC;iCACF;6BACF;yBACF,CAAC;qBACH;oBACD,SAAS,EAAE,CAAC,sCAAsC,CAAC;iBACpD;;;AClBD,MAAM,kBAAkB,GAAG,IAAI,CAAC;AAChC,MAAM,oCAAoC,GAAG,2CAA2C,CAAC;MAG5E,2CAA2C;IAItD,YAA6B,OAA4B,EAAmC,MAAc;QAA7E,YAAO,GAAP,OAAO,CAAqB;QAAmC,WAAM,GAAN,MAAM,CAAQ;QAHzF,iBAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QAC7B,wBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAG3D,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,oCAAoC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;KACvF;;;;IAKD,MAAM;QACJ,OAAO,MACL,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAC1C,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,CACpG,CAAC;KACL;;;;;;IAOD,uBAAuB;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAAC;KAC/C;IAEO,KAAK;QACX,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;;yIA7BU,2CAA2C,qDAIa,MAAM;6IAJ9D,2CAA2C;4FAA3C,2CAA2C;kBADvD,UAAU;;0BAKmD,MAAM;2BAAC,MAAM;;;MCW9D,0CAA0C;;wIAA1C,0CAA0C;yIAA1C,0CAA0C,YAhBnD,YAAY;yIAgBH,0CAA0C,aAF1C,CAAC,2CAA2C,CAAC,YAf/C;YACP,YAAY;YACZ,kBAAkB,CAAC,UAAU,CAAC;gBAC5B,kBAAkB,EAAE;oBAClB;wBACE,IAAI,EAAE,oBAAoB;wBAC1B,QAAQ,EAAE;4BACR,OAAO,EAAE,2CAA2C;4BACpD,QAAQ,EAAE,2CAA2C;4BACrD,IAAI,EAAE,CAAC,mBAAmB,EAAE,MAAM,CAAC;yBACpC;qBACF;iBACF;aACF,CAAC;SACH;4FAGU,0CAA0C;kBAlBtD,QAAQ;mBAAC;oBACR,OAAO,EAAE;wBACP,YAAY;wBACZ,kBAAkB,CAAC,UAAU,CAAC;4BAC5B,kBAAkB,EAAE;gCAClB;oCACE,IAAI,EAAE,oBAAoB;oCAC1B,QAAQ,EAAE;wCACR,OAAO,EAAE,2CAA2C;wCACpD,QAAQ,EAAE,2CAA2C;wCACrD,IAAI,EAAE,CAAC,mBAAmB,EAAE,MAAM,CAAC;qCACpC;iCACF;6BACF;yBACF,CAAC;qBACH;oBACD,SAAS,EAAE,CAAC,2CAA2C,CAAC;iBACzD;;;ICxBW;AAAZ,WAAY,gBAAgB;IAC1B,uCAAmB,CAAA;IACnB,2CAAuB,CAAA;IACvB,qCAAiB,CAAA;IACjB,yCAAqB,CAAA;IACrB,uCAAmB,CAAA;IACnB,iDAA6B,CAAA;IAC7B,qDAAiC,CAAA;IACjC,+CAA2B,CAAA;IAC3B,mDAA+B,CAAA;AACjC,CAAC,EAVW,gBAAgB,KAAhB,gBAAgB;;MCSf,oBAAoB;IAC/B,YACmB,mBAAwC,EACxB,MAAc;QAD9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxB,WAAM,GAAN,MAAM,CAAQ;KAC7C;;;;;;;;IASJ,aAAa,CAAC,IAA2B,EAAE,SAAkC;QAC3E,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YACtB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACjC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAElC,KAAK,MAAM,KAAK,IAAI,IAAI,EAAE;gBACxB,IAAI,SAAS,EAAE;oBACb,IAAI,SAAS,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,EAAE;wBACvC,OAAO,IAAI,CAAC;qBACb;iBACF;qBAAM,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;oBACzB,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC;iBACzE;aACF;SACF;QAED,OAAO,KAAK,CAAC;KACd;;;;;;;IAQD,YAAY,CAAC,IAA2B;QACtC,MAAM,OAAO,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;QAC3C,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAElC,KAAK,MAAM,KAAK,IAAI,IAAI,EAAE;YACxB,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;gBAClB,OAAO,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC;aACzE;SACF;QAED,OAAO,KAAK,CAAC;KACd;;;;;;IAOD,eAAe,CAAC,SAAiB;QAC/B,OAAO,IAAI,UAAU,CAAC,QAAQ;YAC5B,MAAM,OAAO,GAAG,CAAC,IAAS,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YAE1C,OAAO;gBACL,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;aAC7C,CAAC;SACH,CAAC,CAAC;KACJ;;;;;;;;IASD,eAAe,CAAI,SAAiB,EAAE,IAAO;QAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACtC;;;;;;;IAQD,eAAe,CAAC,KAAiC;QAC/C,OAAO,OAAO,KAAK,KAAK,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;KAClG;;;;;;;;IASD,gBAAgB,CAAC,MAA6C,EAAE,WAAW,SAAgB,EAAE,OAAO,GAAG,EAAE;QACvG,IAAI,CAAC,MAAM;YAAE,OAAO;QACpB,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;YACxC,MAAM;YACN,OAAO;YACP,QAAQ;YACR,WAAW,EAAE,KAAK;SACnB,CAAC,CAAC;KACJ;;;;;;;;IASD,WAAW,CAAI,OAAwB;QACrC,MAAM,UAAU,GAAW,CAAC,OAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;QAExG,OAAO;YACL,IAAI,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,EAAE;YACrC,UAAU;SACX,CAAC;KACH;;kHAvHU,oBAAoB,uDAGrB,MAAM;sHAHL,oBAAoB;4FAApB,oBAAoB;kBADhC,UAAU;;0BAIN,MAAM;2BAAC,MAAM;;;MCLL,uCAAuC;IAYlD,YAA6B,MAA4B;QAA5B,WAAM,GAAN,MAAM,CAAsB;QAXxC,oBAAe,GAAmC;YACjE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,SAAS;SAChB,CAAC;QACe,oBAAe,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;;;QAKtE,qBAAgB,GAA+C,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;KAE7C;;;;;;;;;IAU7D,WAAW,CACT,UAAmB,EACnB,IAAmC,EACnC,IAA4B,EAC5B,SAAkC;QAElC,IAAI,MAAM,GAAG,UAAU,CAAC;QACxB,IAAI,IAAI,KAAK,gBAAgB,CAAC,OAAO,EAAE;YACrC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;KAC7C;;qIAlCU,uCAAuC;yIAAvC,uCAAuC;4FAAvC,uCAAuC;kBADnD,UAAU;;;MCFE,gCAAgC;IAD7C;QAEW,WAAM,GAAG,IAAI,OAAO,EAAW,CAAC;KAK1C;IAHC,KAAK,CAAC,OAAO,GAAG,KAAK;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC3B;;8HALU,gCAAgC;kIAAhC,gCAAgC;4FAAhC,gCAAgC;kBAD5C,UAAU;;;MCMW,4BAA4B;;;MCsBrC,8BAA8B;IAkIzC,YACW,aAAmC,EACnC,mBAA4D,EAC5D,EAAqB,EACrB,wBAAyD,EACzD,EAAe,EACf,eAAwC,EACxC,aAA+C;QAN/C,kBAAa,GAAb,aAAa,CAAsB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAyC;QAC5D,OAAE,GAAF,EAAE,CAAmB;QACrB,6BAAwB,GAAxB,wBAAwB,CAAiC;QACzD,OAAE,GAAF,EAAE,CAAa;QACf,oBAAe,GAAf,eAAe,CAAyB;QACxC,kBAAa,GAAb,aAAa,CAAkC;;;;QAzFhD,YAAO,GAAG,IAAI,YAAY,EAAiB,CAAC;;;;QAK5C,WAAM,GAAG,IAAI,YAAY,EAAQ,CAAC;QAgCnC,YAAO,GAAG,IAAI,CAAC;;;;QAoBxB,sBAAiB,GAAmC;YAClD,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,SAAS;SAChB,CAAC;;;;QAKF,gBAAW,GAAG,KAAK,CAAC;QAEH,YAAO,GAAG,IAAI,eAAe,CAA6C,SAAS,CAAC,CAAC;;;;QAK7F,WAAM,GAA2D,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;;;;;QAM7F,sBAAiB,GAAG,gBAAgB,CAAC;QAC7B,iBAAY,GAAG,IAAI,OAAO,EAAa,CAAC;QACxC,aAAQ,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QAW7E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAChC,OAAO,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAC/B,WAAW,EAAE,EAAE;SAChB,CAAC,CAAC;KACJ;;;;IAhHD,IACI,OAAO,CAAC,KAAyB;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;;;;IAKD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KACjC;IAwGD,QAAQ;QACN,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC;gBACtD,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAClC,IAAI,EACJ,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAC9B,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,cAAc,CACpB,CAAC;aACH,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,GAAG;YACrD,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ;aACV,IAAI,CACH,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,EACjC,SAAS,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CACpC;aACA,SAAS,EAAE,CAAC;QAEf,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;YACtG,IAAI,CAAC,iBAAiB,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;YAC1C,IAAI,CAAC,MAAM,IAAI,IAAI,KAAK,gBAAgB,CAAC,OAAO,EAAE;gBAChD,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;SACzB,CAAC,CAAC;KACJ;;;;;;IAOD,gBAAgB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAmB;QACrE,oEACM,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KACrE,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,EAAE,OAAO,EAAE,KACxC,KAAK,IAAI,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,KACxC,WAAW,IAAI,WAAW,CAAC,MAAM,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,GAC1F;KACH;IAED,sBAAsB;QACpB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,UAAU,CAAC;gBACT,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;aAClC,EAAE,CAAC,CAAC,CAAC;SACP;KACF;;;;;;IAOD,aAAa,CAAC,KAAQ;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QAEnC,IAAI,CAAC,wBAAwB;aAC1B,aAAa,CAAC,KAAK,CAAC;aACpB,IAAI,CACH,KAAK,EAAE,EACP,SAAS,CAAC;YACR,IAAI,IAAI,CAAC,wBAAwB,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC7D,OAAO,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAChE;YAED,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;SACtB,CAAC,EACF,QAAQ,CAAC;YACP,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B,CAAC,CACH;aACA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;KAChG;;;;;;IAOD,MAAM,CAAC,KAAQ;QACb,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;QAEnC,IACE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC;YACzD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,cAAc,CAAC,EAC/E;YACA,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aACvC;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACvB;SACF;aAAM;YACL,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;KACF;;;;;;IAOD,SAAS,CAAC,EAAW;QACnB,IAAI,IAAI,CAAC,wBAAwB,CAAC,QAAQ,IAAI,EAAE,EAAE;YAChD,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CACpD,GAAG,CAAC,GAAG;gBACL,MAAM,MAAM,GAAG,GAAG,IAAI,EAAE,CAAC;gBACzB,MAAM,SAAS,GAAQ,EAAE,CAAC;gBAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBAEvC,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACjD,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;oBAEvB,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;wBACzD,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;wBAE3D,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;4BAClB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;yBACjE;qBACF;iBACF;gBAED,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;gBAChC,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;gBAE1C,OAAO,GAAG,CAAC;aACZ,CAAC,CACH,CAAC;SACH;QAED,OAAO,KAAK,CAAC;KACd;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;;;;IAKD,wBAAwB;QACtB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,KAAK,gBAAgB,CAAC,OAAO,EAAE;YACtF,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;QAED,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC7C;;;;IAKD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;;;;;;;IAQD,QAAQ,CAAC,KAAa,EAAE,IAAY;;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEvC,OAAO,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAG,IAAI,CAAC,CAAC;KAChC;;;;;;;IAQD,gBAAgB,CAAC,KAAa;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEvC,OAAO,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC;KACxD;IAEO,SAAS,CAAC,KAAQ;QACxB,IAAI,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE;YAC3C,IAAI,CAAC,wBAAwB;iBAC1B,SAAS,CAAC,KAAK,CAAC;iBAChB,IAAI,CAAC,KAAK,EAAE,CAAC;iBACb,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;SACpG;KACF;IAEO,WAAW,CAAC,OAAe,EAAE,KAAQ;QAC3C,IAAI,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE;YAC7C,IAAI,CAAC,wBAAwB;iBAC1B,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC;iBAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;iBACb,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC;SACxG;KACF;IAEO,gBAAgB,CAAC,GAAW,EAAE,KAAU,EAAE,MAAuC;QACvF,IAAI,GAAG,KAAK,MAAM,EAAE;YAClB,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAe,CAAC,CAAC;SACxD;QAED,IAAI,GAAG,KAAK,OAAO,IAAI,MAAM,EAAE;YAC7B,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC;YAElE,OAAO,aAAa,GAAG,aAAa,GAAG,EAAE,CAAC;SAC3C;QAED,IAAI,GAAG,KAAK,aAAa,EAAE;YACzB,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;SAC/B;QAED,OAAO,KAAK,CAAC;KACd;IAEO,eAAe,CAAC,UAAe,EAAE,QAAa;QACpD,OAAO;YACL,IAAI,EAAE,GAAG;gBACP,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,GAAG,UAAU,GAAG,EAAE,CAAC,CAAC;gBAElE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;aAClC;YACD,KAAK,EAAE,KAAK;gBACV,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC;gBAC3E,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBAC3D,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;aACnC;YACD,QAAQ,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE;SACnC,CAAC;KACH;IAES,WAAW,CAAC,aAAa,GAAG,KAAK;QACzC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;KACzC;IAEO,UAAU,CAAC,KAAa;QAC9B,OAAO,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC7E;IAEO,qBAAqB,CAAC,MAAsC;QAClE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,GAAG,CAAC,KAAK;;YACf,IAAI,KAAK,CAAC,EAAE,MAAK,MAAA,MAAA,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,0CAAE,KAAK,0CAAE,EAAE,CAAA,EAAE;gBACtE,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC5D;SACF,CAAC,CAAC;KACJ;;4HApZU,8BAA8B;gHAA9B,8BAA8B,wUAF9B,CAAC,uCAAuC,EAAE,gCAAgC,CAAC,6uBAD5E,EAAE;4FAGD,8BAA8B;kBAJ1C,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;oBACZ,SAAS,EAAE,CAAC,uCAAuC,EAAE,gCAAgC,CAAC;iBACvF;4UAKU,KAAK;sBAAb,KAAK;gBAKG,iBAAiB;sBAAzB,KAAK;gBAKG,oBAAoB;sBAA5B,KAAK;gBAKG,gBAAgB;sBAAxB,KAAK;gBAKG,gBAAgB;sBAAxB,KAAK;gBAKY,WAAW;sBAA5B,KAAK;gBAKF,OAAO;sBADV,KAAK;gBAeI,OAAO;sBAAhB,MAAM;gBAKG,MAAM;sBAAf,MAAM;gBAK6B,wBAAwB;sBAA3D,SAAS;uBAAC,uBAAuB;gBAKI,0BAA0B;sBAA/D,SAAS;uBAAC,yBAAyB;gBAKI,4BAA4B;sBAAnE,SAAS;uBAAC,2BAA2B;gBAKJ,sBAAsB;sBAAvD,SAAS;uBAAC,qBAAqB;gBAKI,wBAAwB;sBAA3D,SAAS;uBAAC,uBAAuB;gBAKI,0BAA0B;sBAA/D,SAAS;uBAAC,yBAAyB;;;MC1GzB,2BAA2B;;yHAA3B,2BAA2B;0HAA3B,2BAA2B,iBAHvB,8BAA8B,aACnC,YAAY;0HAEX,2BAA2B,YAF7B,CAAC,YAAY,CAAC;4FAEZ,2BAA2B;kBAJvC,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,8BAA8B,CAAC;oBAC9C,OAAO,EAAE,CAAC,YAAY,CAAC;iBACxB;;;SCLe,QAAQ,CAAI,MAAqB;IAC/C,IAAI,MAAqB,CAAC;IAE1B,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,GAAM;QACrC,MAAM,GAAG,GAAG,CAAC;KACd,CAAC,CAAC;IACH,MAAM,CAAC,WAAW,EAAE,CAAC;IAErB,OAAO,MAAM,CAAC;AAChB;;MCRa,gBAAgB,GAAG,CAAI,KAAgC,EAAE,IAAmB,KACvF,aAAa,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,OAAO,CAAC,CAAC,EAAE;MAEpG,sBAAsB,GAAG,CAAI,KAAQ,KAChD,KAAK,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE;;MCP7C,kBAAkB,GAAG,CAAC,KAAuB;IACxD,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;QAC9B,OAAO,KAAK,CAAC;KACd;IAED,OAAO,KAAK,CAAC,IAAI,EAAE,KAAK,MAAM,CAAC;AACjC;;ACDO,MAAME,yBAAuB,GAAG;IACrC,YAAY,EAAE,GAAG;IACjB,iBAAiB,EAAE,IAAI;IACvB,oBAAoB,EAAE,GAAG;IACzB,gBAAgB,EAAE,GAAG;IACrB,gBAAgB,EAAE,GAAG;IACrB,eAAe,EAAE,CAAC;IAClB,WAAW,EAAE,aAAa;IAC1B,iBAAiB,EAAE,KAAK;IACxB,0BAA0B,EAAE,uCAAuC;IACnE,4BAA4B,EAAE,wCAAwC;IACtE,iBAAiB,EAAE,UAAU;IAC7B,mBAAmB,EAAE,KAAK;IAC1B,wBAAwB,EAAE,KAAK;CAChC,CAAC;MAGW,uCAAuC;IAClD,YAAyC,SAAqB;QAArB,cAAS,GAAT,SAAS,CAAY;KAAI;;;;IAKlE,IAAI,iBAAiB;QACnB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,iBAAiB,CAAC,CAAC;SAC1E;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAEA,yBAAuB,CAAC,iBAAiB,CAAC,CAAC;KAChG;;;;IAKD,IAAI,gBAAgB;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,gBAAgB,CAAC,CAAC;SACzE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,EAAEA,yBAAuB,CAAC,gBAAgB,CAAC,CAAC;KAC9F;;;;IAKD,IAAI,oBAAoB;QACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,oBAAoB,CAAC,CAAC;SAC7E;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAsB,EAAEA,yBAAuB,CAAC,oBAAoB,CAAC,CAAC;KACtG;;;;IAKD,IAAI,gBAAgB;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,gBAAgB,CAAC,CAAC;SACzE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,EAAEA,yBAAuB,CAAC,gBAAgB,CAAC,CAAC;KAC9F;;;;IAKD,IAAI,WAAW;QACb,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,WAAW,CAAC,CAAC;SACpE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAEA,yBAAuB,CAAC,WAAW,CAAC,CAAC;KACpF;;;;IAKD,IAAI,YAAY;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,YAAY,CAAC,CAAC;SACrE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAEA,yBAAuB,CAAC,YAAY,CAAC,CAAC;KACtF;;;;IAKD,IAAI,eAAe;QACjB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,eAAe,CAAC,CAAC;SACxE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,EAAEA,yBAAuB,CAAC,eAAe,CAAC,CAAC;KAC5F;;;;IAKD,IAAI,iBAAiB;QACnB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,iBAAiB,CAAC,CAAC;SAC1E;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAEA,yBAAuB,CAAC,iBAAiB,CAAC,CAAC;KAChG;;;;IAKD,IAAI,0BAA0B;QAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,0BAA0B,CAAC,CAAC;SACnF;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,4BAA4B,EAAEA,yBAAuB,CAAC,0BAA0B,CAAC,CAAC;KAClH;;;;IAKD,IAAI,4BAA4B;QAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,4BAA4B,CAAC,CAAC;SACrF;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAC5B,8BAA8B,EAC9BA,yBAAuB,CAAC,4BAA4B,CACrD,CAAC;KACH;;;;IAKD,IAAI,iBAAiB;QACnB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,iBAAiB,CAAC,CAAC;SAC1E;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAEA,yBAAuB,CAAC,iBAAiB,CAAC,CAAC;KAChG;;;;IAKD,IAAI,mBAAmB;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,mBAAmB,CAAC,CAAC;SAC5E;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,EAAEA,yBAAuB,CAAC,mBAAmB,CAAC,CAAC;KACpG;;;;IAKD,IAAI,wBAAwB;QAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAACA,yBAAuB,CAAC,wBAAwB,CAAC,CAAC;SACjF;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,0BAA0B,EAAEA,yBAAuB,CAAC,wBAAwB,CAAC,CAAC;KAC9G;;qIAnJU,uCAAuC;yIAAvC,uCAAuC;4FAAvC,uCAAuC;kBADnD,UAAU;;0BAEI,QAAQ;;;MCXV,+BAA+B;IAqK1C,YAAsB,UAAmD,EAAY,MAA4B;QAA3F,eAAU,GAAV,UAAU,CAAyC;QAAY,WAAM,GAAN,MAAM,CAAsB;;;;QA/JxG,OAAE,GAAG,6BAA6B,+BAA+B,CAAC,OAAO,EAAE,EAAE,CAAC;QACtE,iBAAY,GAAG,IAAI,OAAO,EAAa,CAAC;;;;QAKhD,gBAAW,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAC/C,YAAO,GAAG,IAAI,CAAC;;;;QAkExB,gBAAW,GAAG,KAAK,CAAC;;;;QAKpB,iBAAY,GAAG;YACb,IAAI,EAAE,IAAI;YACV,aAAa,EAAE;gBACb,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBAEzB,OAAO,KAAK,CAAC;aACd;SACF,CAAC;QAEe,wBAAmB,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QACzE,2BAAsB,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QAC5E,uBAAkB,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QACxE,uBAAkB,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QACxE,kBAAa,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QACnE,wBAAmB,GAAG,IAAI,eAAe,CAAsB,SAAS,CAAC,CAAC;QAC1E,iCAA4B,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QAClF,mCAA8B,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QAEpF,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;;;;QAKvC,yBAAoB,GAAuB,gBAAgB,CAClE,IAAI,CAAC,sBAAsB,EAC3B,IAAI,CAAC,UAAU,CAAC,oBAAoB,CACrC,CAAC;;;;QAKO,qBAAgB,GAAuB,gBAAgB,CAC9D,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CACjC,CAAC;;;;QAKO,sBAAiB,GAAuB,gBAAgB,CAC/D,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAClC,CAAC;;;;QAKO,qBAAgB,GAAuB,gBAAgB,CAC9D,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CACjC,CAAC;;;;QAKO,gBAAW,GAAuB,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;;;;QAKpG,sBAAiB,GAAwB,gBAAgB,CAChE,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAClC,CAAC;;;;QAKO,+BAA0B,GAAuB,gBAAgB,CACxE,IAAI,CAAC,4BAA4B,EACjC,IAAI,CAAC,UAAU,CAAC,0BAA0B,CAC3C,CAAC;;;;QAKO,iCAA4B,GAAuB,gBAAgB,CAC1E,IAAI,CAAC,8BAA8B,EACnC,IAAI,CAAC,UAAU,CAAC,4BAA4B,CAC7C,CAAC;QAGA,IAAI,CAAC,0BAA0B;aAC5B,IAAI,CACH,SAAS,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,EAC9D,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;aACA,SAAS,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;KACzD;;;;IA1JD,IAAgC,sBAAsB,CAAC,KAAsB;QAC3E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KAC9C;;;;IAKD,IAAmC,yBAAyB,CAAC,KAAsB;QACjF,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KACjD;;;;IAKD,IAA+B,qBAAqB,CAAC,KAAsB;QACzE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KAC7C;;;;IAKD,IAA+B,qBAAqB,CAAC,KAAsB;QACzE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KAC7C;;;;IAKD,IAA0B,gBAAgB,CAAC,KAAa;QACtD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;;;;IAKD,IAAgC,sBAAsB,CAAC,KAAuB;QAC5E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC1D;;;;IAKD,IAAyC,+BAA+B,CAAC,KAAa;QACpF,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/C;;;;IAKD,IAA2C,iCAAiC,CAAC,KAAa;QACxF,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjD;;;;;;IA8GD,SAAS,CAAC,EAAW;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACnB;;;;IAKD,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,4BAA4B,CAAW,CAAC;QACxE,IAAI,CAAC,MAAM,CAAC,eAAe,CAA0B,SAAS,EAAE,EAAE,CAAC,CAAC;QACpE,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;KAC1B;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;;AArMM,uCAAO,GAAG,CAAC,CAAC;6HADR,+BAA+B;iHAA/B,+BAA+B,qrBAFhC,EAAE;4FAED,+BAA+B;kBAH3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;2JAmBiC,sBAAsB;sBAArD,KAAK;uBAAC,mBAAmB;gBAOS,yBAAyB;sBAA3D,KAAK;uBAAC,sBAAsB;gBAOE,qBAAqB;sBAAnD,KAAK;uBAAC,kBAAkB;gBAOM,qBAAqB;sBAAnD,KAAK;uBAAC,kBAAkB;gBAOC,gBAAgB;sBAAzC,KAAK;uBAAC,aAAa;gBAOY,sBAAsB;sBAArD,KAAK;uBAAC,mBAAmB;gBAOe,+BAA+B;sBAAvE,KAAK;uBAAC,4BAA4B;gBAOQ,iCAAiC;sBAA3E,KAAK;uBAAC,8BAA8B;;;MCvE1B,4BAA4B;;0HAA5B,4BAA4B;2HAA5B,4BAA4B,iBAFxB,+BAA+B,aADpC,YAAY;2HAGX,4BAA4B,YAH9B,CAAC,YAAY,CAAC;4FAGZ,4BAA4B;kBAJxC,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,+BAA+B,CAAC;iBAChD;;;MCFY,kBAAkB;IAH/B;;;;QASW,WAAM,GAAG,KAAK,CAAC;;;;QAId,YAAO,GAAG,IAAI,YAAY,EAAsB,CAAC;;;;QAIjD,WAAM,GAAG,IAAI,YAAY,EAAQ,CAAC;;;;QAKnC,OAAE,GAAG,wBAAwB,kBAAkB,CAAC,OAAO,EAAE,EAAE,CAAC;QAC5D,YAAO,GAAG,IAAI,CAAC;KAiBzB;;;;IAZC,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;;;;;;IAOD,SAAS,CAAC,KAAc;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1B;;AAnCM,0BAAO,GAAG,CAAC,CAAC;gHADR,kBAAkB;oGAAlB,kBAAkB,qIAFnB,EAAE;4FAED,kBAAkB;kBAH9B,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;8BAOU,MAAM;sBAAd,KAAK;gBAII,OAAO;sBAAhB,MAAM;gBAIG,MAAM;sBAAf,MAAM;;;MCVI,yCAA0C,SAAQ,kBAAkB;IA4D/E;QACE,KAAK,EAAE,CAAC;;;;;QAnDV,gBAAW,GAAG,gBAAgB,CAAC,OAAO,CAAC;;;;;QAMvC,kBAAa,GAAG,gBAAgB,CAAC,SAAS,CAAC;;;;;QAM3C,eAAU,GAAG,gBAAgB,CAAC,MAAM,CAAC;;;;;QAMrC,iBAAY,GAAG,gBAAgB,CAAC,QAAQ,CAAC;;;;;QAMzC,gBAAW,GAAG,gBAAgB,CAAC,OAAO,CAAC;;;;;QAMvC,qBAAgB,GAAG,gBAAgB,CAAC,YAAY,CAAC;;;;;QAMjD,uBAAkB,GAAG,gBAAgB,CAAC,cAAc,CAAC;;;;;QAMrD,oBAAe,GAAG,gBAAgB,CAAC,WAAW,CAAC;;;;;QAM/C,sBAAiB,GAAG,gBAAgB,CAAC,aAAa,CAAC;KAIlD;;uIA9DU,yCAAyC;2HAAzC,yCAAyC,+HCTtD,umYAoTA,q2BDvOa,qDAAqD;4FApErD,yCAAyC;kBAJrD,SAAS;mBAAC;oBACT,QAAQ,EAAE,wCAAwC;oBAClD,WAAW,EAAE,sDAAsD;iBACpE;0EAKU,IAAI;sBAAZ,KAAK;;MAgEK,qDAAsD,SAAQ,UAG1E;;mJAHY,qDAAqD;uIAArD,qDAAqD;4FAArD,qDAAqD;kBAHjE,SAAS;mBAAC;oBACT,QAAQ,EAAE,kDAAkD;iBAC7D;;;AE9DD,MAAMC,YAAU,GAAG,CAAC,yCAAyC,CAAC,CAAC;AAC/D,MAAMC,YAAU,GAAG,CAAC,qDAAqD,CAAC,CAAC;AAC3E,MAAM,QAAQ,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;MAO9C,sCAAsC;;oIAAtC,sCAAsC;qIAAtC,sCAAsC,iBALlC,kBAAkB,EAJf,yCAAyC,EACzC,qDAAqD,aAK7D,YAAY,EAJN,WAAW,EAAE,YAAY,EAAE,YAAY,aAFrC,yCAAyC,EACzC,qDAAqD;qIAQ5D,sCAAsC,aAFtC,CAAC,uCAAuC,EAAE,GAAG,QAAQ,CAAC,YADxD,CAAC,YAAY,EAAE,GAAG,QAAQ,CAAC;4FAGzB,sCAAsC;kBANlD,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,kBAAkB,EAAE,GAAGD,YAAU,EAAE,GAAGC,YAAU,CAAC;oBAChE,OAAO,EAAE,CAAC,GAAGD,YAAU,EAAE,GAAGC,YAAU,CAAC;oBACvC,OAAO,EAAE,CAAC,YAAY,EAAE,GAAG,QAAQ,CAAC;oBACpC,SAAS,EAAE,CAAC,uCAAuC,EAAE,GAAG,QAAQ,CAAC;iBAClE;;;MCjBqB,4BAA4B;CAGjD;MAYY,cAAc;IAyBzB,YAAY,IAAuB,EAAY,OAAqC;QAArC,YAAO,GAAP,OAAO,CAA8B;;;;QArBpF,YAAO,GAAG,KAAK,CAAC;;;;QAehB,aAAQ,GAAG,IAAI,OAAO,EAAU,CAAC;QAEhB,kBAAa,GAAG,IAAI,OAAO,EAAQ,CAAC;QAKnD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEtB,IAAK,IAAmB,CAAC,EAAE,EAAE;YAC3B,IAAI,CAAC,EAAE,GAAI,IAAmB,CAAC,EAAE,CAAC;YAClC,IAAI,CAAC,IAAI,GAAI,IAAmB,CAAC,QAAQ,CAAC;SAC3C;aAAM;YACL,IAAI,CAAC,IAAI,GAAI,IAAa,CAAC,IAAI,CAAC;SACjC;KACF;;;;;;;IAQD,gBAAgB,CAAC,EAAU,EAAE,KAAa;QACxC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;;;;IAKD,gBAAgB;QACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEtB,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAY,CAAC,CAAC,IAAI,CAC1D,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,EAC7B,GAAG,CAAC,KAAK;YACP,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC,EAAE,GAAG,SAAS,CAAC;YACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB,CAAC,CACH,CAAC;KACH;;;;;;IAOD,UAAU,CAAC,IAAa;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;;;MCpDU,kCAAkC;IAiE7C,YACY,EAAqB,EACrB,OAAqC,EACrC,aAAmC,EACnC,aAA+C;QAH/C,OAAE,GAAF,EAAE,CAAmB;QACrB,YAAO,GAAP,OAAO,CAA8B;QACrC,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAkC;;;;QA9ClD,aAAQ,GAAG,KAAK,CAAC;;;;;QAMjB,aAAQ,GAAG,IAAI,CAAC;;;;QAUhB,WAAM,GAAG,GAAG,CAAC;QAOL,qBAAgB,GAAG,IAAI,eAAe,CAA8B,SAAS,CAAC,CAAC;;;;QAKhG,gBAAW,GAAmC,EAAE,CAAC;QAOxC,YAAO,GAAG,IAAI,CAAC;QAChB,sBAAiB,GAAG,CAAC,CAAC;QACtB,UAAK,GAAoB,EAAE,CAAC;QAC5B,0BAAqB,GAAoB,EAAE,CAAC;QAC5C,YAAO,GAAG,CAAC,CAAC;QACH,gBAAW,GAAG,IAAI,OAAO,EAAE,CAAC;;;;;QAkH7C,aAAQ,GAAwC,SAAQ,CAAC;;;;;QAMzD,cAAS,GAAe,SAAQ,CAAC;;;;QAKjC,uBAAkB,GAAe,SAAQ,CAAC;KAtHtC;;;;IAlEJ,IAAa,OAAO,CAAC,KAAkC;QACrD,IAAI,KAAK,EAAE;YACT,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC;YACpC,IAAI,CAAC,iBAAiB,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;SAC/C;KACF;;;;IAKD,IACI,eAAe,CAAC,KAAkC;QACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnC;;;;;;IA2DD,WAAW,CAAC,KAAuB;QACjC,MAAM,IAAI,GAAG,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,IAAI,IAAI,EAAE;YACR,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;YAEjB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE;gBAChE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;gBAE7E,OAAO;aACR;YAED,MAAM,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAEhD,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,UAAU;iBACP,gBAAgB,EAAE;iBAClB,IAAI,CACH,IAAI,CAAC,CAAC,CAAC,EACP,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,EACrD,UAAU,CAAC,KAAK;gBACd,IAAI,CAAC,yBAAyB,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAE1C,OAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;aAC1C,CAAC,EACF,QAAQ,CAAC;gBACP,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAE1B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;aACxB,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CACrC;iBACA,SAAS,EAAE,CAAC;YAEf,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;SACzG;KACF;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,MAAM;aACtB,IAAI,CACH,GAAG,CAAC,IAAI;YACN,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC;YAE9E,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;YAChC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;YAEvB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SACxB,CAAC,EACF,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,EACrD,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EACvD,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAC5B;aACA,SAAS,EAAE,CAAC;KAChB;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;KAC7B;;;;;;;IAQD,UAAU,CAAC,KAAyC;QAClD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW;gBACpF,IAAI,WAAW,EAAE;oBACf,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI;wBAC9C,MAAM,UAAU,GAAmB,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;wBAG1E,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAErB,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;wBAExG,OAAO,GAAG,CAAC;qBACZ,EAAE,EAAE,CAAC,CAAC;iBACR;aACF,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KACxB;;;;IAsBD,gBAAgB,CAAC,EAAc;QAC7B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;;;;IAKD,iBAAiB,CAAC,EAAc;QAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;;;;IAKD,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;KAC9B;;;;;;IAOD,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KACxB;;;;;;IAOD,QAAQ;QACN,OAAO,IAAI,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;KAChD;IAEO,iBAAiB,CAAC,GAAkB;QAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACzG;IAEO,yBAAyB,CAAC,KAAa;QAC7C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;IAEO,cAAc,CAAC,KAAgB;QACrC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3B;KACF;IAEO,qBAAqB,CAAC,KAAwB;QACpD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;QAExF,OAAO,KAAK,CAAC;KACd;;gIA5PU,kCAAkC;oHAAlC,kCAAkC,4QAblC;QACT;YACE,OAAO,EAAE,iBAAiB;YAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,kCAAkC,CAAC;YACjE,KAAK,EAAE,IAAI;SACZ;QACD;YACE,OAAO,EAAE,aAAa;YACtB,WAAW,EAAE,UAAU,CAAC,MAAM,kCAAkC,CAAC;YACjE,KAAK,EAAE,IAAI;SACZ;KACF,+JCzCH,omDAwCA,wfDqQa,8CAA8C;4FAlQ9C,kCAAkC;kBAjB9C,SAAS;mBAAC;oBACT,QAAQ,EAAE,mEAAmE;oBAC7E,WAAW,EAAE,8CAA8C;oBAC3D,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU,CAAC,wCAAwC,CAAC;4BACjE,KAAK,EAAE,IAAI;yBACZ;wBACD;4BACE,OAAO,EAAE,aAAa;4BACtB,WAAW,EAAE,UAAU,CAAC,wCAAwC,CAAC;4BACjE,KAAK,EAAE,IAAI;yBACZ;qBACF;iBACF;4NAKc,OAAO;sBAAnB,KAAK;gBAYF,eAAe;sBADlB,KAAK;gBAQG,QAAQ;sBAAhB,KAAK;gBAMG,QAAQ;sBAAhB,KAAK;gBAKG,oBAAoB;sBAA5B,KAAK;gBAKG,MAAM;sBAAd,KAAK;gBAK+B,yBAAyB;sBAA7D,SAAS;uBAAC,wBAAwB;;MAsNxB,8CAA+C,SAAQ,UAGnE;;4IAHY,8CAA8C;gIAA9C,8CAA8C;4FAA9C,8CAA8C;kBAH1D,SAAS;mBAAC;oBACT,QAAQ,EAAE,6FAA6F;iBACxG;;;MEpSY,mBAAmB;;iHAAnB,mBAAmB;kHAAnB,mBAAmB,YAHpB,YAAY;kHAGX,mBAAmB,aAFnB,CAAC,oBAAoB,CAAC,YADxB,CAAC,YAAY,CAAC;4FAGZ,mBAAmB;kBAJ/B,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,SAAS,EAAE,CAAC,oBAAoB,CAAC;iBAClC;;;ACQD,MAAMD,YAAU,GAAG,CAAC,kCAAkC,CAAC,CAAC;AACxD,MAAMC,YAAU,GAAG,CAAC,8CAA8C,CAAC,CAAC;AACpE,MAAMC,WAAS,GAAG,CAAC,YAAY,EAAE,oBAAoB,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;AACpF,MAAMC,cAAY,GAAG,CAAC,mBAAmB,CAAC,CAAC;MAQ9B,+BAA+B;;6HAA/B,+BAA+B;8HAA/B,+BAA+B,iBAXxB,kCAAkC,EAClC,8CAA8C,aAKtD,YAAY,EAJL,YAAY,EAAE,oBAAoB,EAAE,UAAU,EAAE,eAAe,EAC5D,mBAAmB,aAHrB,kCAAkC,EAClC,8CAA8C,EAC/C,YAAY,EAAE,oBAAoB,EAAE,UAAU,EAAE,eAAe,EAC5D,mBAAmB;8HAQ5B,+BAA+B,aAF/B,CAAC,gCAAgC,CAAC,YAHpC,CAAC,YAAY,EAAE,GAAGD,WAAS,EAAE,GAAGC,cAAY,CAAC,EAJrC,YAAY,EAAE,oBAAoB,EAAE,UAAU,EAAE,eAAe,EAC5D,mBAAmB;4FAQ5B,+BAA+B;kBAN3C,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,GAAGD,WAAS,EAAE,GAAGC,cAAY,CAAC;oBACtD,YAAY,EAAE,CAAC,GAAGH,YAAU,EAAE,GAAGC,YAAU,CAAC;oBAC5C,OAAO,EAAE,CAAC,GAAGD,YAAU,EAAE,GAAGC,YAAU,EAAE,GAAGC,WAAS,EAAE,GAAGC,cAAY,CAAC;oBACtE,SAAS,EAAE,CAAC,gCAAgC,CAAC;iBAC9C;;;MCbY,sCAAsC;IAKjD,YAA6B,eAAoC;QAApC,oBAAe,GAAf,eAAe,CAAqB;QAFhD,0BAAqB,GAAG,KAAK,CAAC;KAEsB;;;;;;IAOrE,SAAS;QACP,OAAO,IAAI,CAAC,eAAe;aACxB,iBAAiB,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,qBAAqB,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;aACzE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACnC;;;;;;;IAQD,aAAa,CACX,MAAkD;QAElD,OAAO,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,EAAE,0CAA0C,EAAE,MAAM,EAAE,CAAC,CAAC;KAC1G;;oIA5BU,sCAAsC;wIAAtC,sCAAsC;4FAAtC,sCAAsC;kBADlD,UAAU;;;MCLE,wCAAwC;IACnD,YAA6B,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;KAAI;;;;;;;IAQ7D,iBAAiB,CAAC,GAAa;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;KAC/D;;;;;;;IAQD,gBAAgB,CAAC,UAAgB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,8BAA8B,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;KACpE;;sIArBU,wCAAwC;0IAAxC,wCAAwC;4FAAxC,wCAAwC;kBADpD,UAAU;;;MCHE,sBAAsB,GAAG;IACpC,sBAAsB,EAAE,SAAS,CAAA,yEAAyE;;IAE1G,mBAAmB,EAAE,SAAS,CAAA,4FAA4F;;;MCC/G,gCAAgC;IAC3C,YAA6B,WAAsC;QAAtC,gBAAW,GAAX,WAAW,CAA2B;KAAI;IAEvE,QAAQ,CAAC,UAAkB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,CACxD,GAAG,CAAC,CAAC,SAAwB,KAAK,SAAS,CAAC,UAAU,CAAC,EACvD,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;KACH;IAED,WAAW,CAAC,UAAkB;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;KACrD;;8HAZU,gCAAgC;kIAAhC,gCAAgC;4FAAhC,gCAAgC;kBAD5C,UAAU;;;MC+BE,kCAAmC,SAAQ,8BAA0E;IAiDhI,YACmB,eAAiD,EACzD,eAAwC,EACxC,aAAmC,EACnC,EAAe,EACf,EAAqB,EACrB,wBAAkG,EAClG,mBAA4D,EAC5D,aAA+C;QAExD,KAAK,CAAC,aAAa,EAAE,mBAAmB,EAAE,EAAE,EAAE,wBAAwB,EAAE,EAAE,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;QAT3F,oBAAe,GAAf,eAAe,CAAkC;QACzD,oBAAe,GAAf,eAAe,CAAyB;QACxC,kBAAa,GAAb,aAAa,CAAsB;QACnC,OAAE,GAAF,EAAE,CAAa;QACf,OAAE,GAAF,EAAE,CAAmB;QACrB,6BAAwB,GAAxB,wBAAwB,CAA0E;QAClG,wBAAmB,GAAnB,mBAAmB,CAAyC;QAC5D,kBAAa,GAAb,aAAa,CAAkC;;;;QArDjD,iBAAY,GAAG,GAAG,CAAC;;;;QAKnB,oBAAe,GAAG,CAAC,CAAC;;;;QAcpB,6BAAwB,GAAG,KAAK,CAAC;;;;QAK1B,2BAAsB,GAAG,sBAAsB,CAAC;;;;QAKvD,qBAAgB,GAAG;YAC1B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YACpC,eAAe,EAAE,CAAC,IAAwB,KAAK,IAAI,CAAC,QAAQ;YAC5D,cAAc,EAAE,CAAC,IAAwB,KAAK,IAAI,CAAC,QAAQ;SAC5D,CAAC;;;;QAKO,yBAAoB,GAAwC;YACnE,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,KAAK;YACnB,WAAW,EAAE,KAAK;SACnB,CAAC;QAaA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,GAAG;YAChD,MAAM,SAAS,GAAG,GAAG,KAAK,WAAW,GAAG,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;YACjF,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;SACtG,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,CAAC;KACnD;;;;IApDD,IAAa,aAAa,CAAC,GAAwD;QACjF,IAAI,GAAG,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SACjC;KACF;;;;IAqDD,SAAS;QACP,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;QAE5C,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACrD,IAAI,KAAK,EAAE;YACT,MAAM,UAAU,mBACd,OAAO,EAAE,EAAE,EACX,IAAI,EAAE,EAAE,EACR,KAAK,EAAE,EAAE,EACT,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,EAC7B,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,SAAS,EAAE,CAAC,KAAK,CAAC,YAAY,EAC9B,WAAW,EAAE,KAAK,CAAC,WAAW,CAAC,IAC5B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAChC,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;KACF;;;;;;;IAQD,MAAM,CAAC,IAAwB;QAC7B,OAAO,IAAI,CAAC,IAAI,CACd,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAC/B,oBAAoB,EAAE,EACtB,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,EACpD,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CACzD,CAAC;KACH;IAES,WAAW;QACnB,KAAK,CAAC,WAAW,EAAE,CAAC;QACpB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAEO,uBAAuB,CAAC,OAAwB;QACtD,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC5B,MAAM,UAAU,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC;QAEtD,OAAO,CAAC,UAAU,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;KAChD;IAEO,WAAW,CAAC,MAAc;QAChC,IAAI,CAAC,eAAe;aACjB,WAAW,CAAC,MAAM,CAAC;aACnB,IAAI,CACH,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EAC3C,UAAU,CAAC,GAAG;YACZ,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;YAEtF,OAAO,KAAK,CAAC;SACd,CAAC,CACH;aACA,SAAS,EAAE,CAAC;KAChB;IAEO,WAAW,CAAC,IAAiB,EAAE,MAAc;QACnD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,iCAAM,IAAI,KAAE,EAAE,EAAE,MAAM,IAAG,CAAC;QACjF,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;SAC1D;KACF;IAEO,qBAAqB;QAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,GAAG;YAChD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;SACjF,CAAC,CAAC;KACJ;;gIAhJU,kCAAkC;oHAAlC,kCAAkC,uOAXlC;QACT;YACE,OAAO,EAAE,4BAA4B;YACrC,QAAQ,EAAE,sCAAsC;SACjD;QACD;YACE,OAAO,EAAE,4BAA4B;YACrC,QAAQ,EAAE,wCAAwC;SACnD;KACF,iDClCH,24VAqQA,++FD3Ea,8CAA8C;4FAtJ9C,kCAAkC;kBAd9C,SAAS;mBAAC;oBACT,QAAQ,EAAE,0CAA0C;oBACpD,WAAW,EAAE,+CAA+C;oBAC5D,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,4BAA4B;4BACrC,QAAQ,EAAE,sCAAsC;yBACjD;wBACD;4BACE,OAAO,EAAE,4BAA4B;4BACrC,QAAQ,EAAE,wCAAwC;yBACnD;qBACF;iBACF;wXAKU,YAAY;sBAApB,KAAK;gBAKG,eAAe;sBAAvB,KAAK;gBAKO,aAAa;sBAAzB,KAAK;gBASG,wBAAwB;sBAAhC,KAAK;;MA+HK,8CAA+C,SAAQ,UAGnE;;4IAHY,8CAA8C;gIAA9C,8CAA8C;4FAA9C,8CAA8C;kBAH1D,SAAS;mBAAC;oBACT,QAAQ,EAAE,2CAA2C;iBACtD;;;AElKD,MAAMH,YAAU,GAAG,CAAC,kCAAkC,CAAC,CAAC;AACxD,MAAMC,YAAU,GAAG,CAAC,8CAA8C,CAAC,CAAC;AACpE,MAAMC,WAAS,GAAG;IAChB,0BAA0B;IAC1B,4BAA4B;IAC5B,eAAe;IACf,eAAe;IACf,oBAAoB;IACpB,YAAY;IACZ,mBAAmB;IACnB,gBAAgB;CACjB,CAAC;AACF,MAAMC,cAAY,GAAG;IACnB,sCAAsC;IACtC,+BAA+B;IAC/B,2BAA2B;CAC5B,CAAC;MAQW,+BAA+B;;6HAA/B,+BAA+B;8HAA/B,+BAA+B,iBAxBxB,kCAAkC,EAClC,8CAA8C,aAkBtD,YAAY,EAAE,mBAAmB,EAAE,uBAAuB,EAhBpE,0BAA0B;QAC1B,4BAA4B;QAC5B,eAAe;QACf,eAAe;QACf,oBAAoB;QACpB,YAAY;QACZ,mBAAmB;QACnB,gBAAgB,EAGhB,sCAAsC;QACtC,+BAA+B;QAC/B,2BAA2B,aAKjB,mBAAmB,EApBX,kCAAkC,EAClC,8CAA8C,EAEhE,0BAA0B;QAC1B,4BAA4B;QAC5B,eAAe;QACf,eAAe;QACf,oBAAoB;QACpB,YAAY;QACZ,mBAAmB;QACnB,gBAAgB,EAGhB,sCAAsC;QACtC,+BAA+B;QAC/B,2BAA2B;8HAShB,+BAA+B,aAF/B,CAAC,gCAAgC,EAAE,uBAAuB,CAAC,YAH7D,CAAC,YAAY,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,GAAGD,WAAS,EAAE,GAAGC,cAAY,CAAC,EAC1F,mBAAmB,EAjB7B,0BAA0B;QAC1B,4BAA4B;QAC5B,eAAe;QACf,eAAe;QACf,oBAAoB;QACpB,YAAY;QACZ,mBAAmB;QACnB,gBAAgB,EAGhB,sCAAsC;QACtC,+BAA+B;QAC/B,2BAA2B;4FAShB,+BAA+B;kBAN3C,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,GAAGD,WAAS,EAAE,GAAGC,cAAY,CAAC;oBACpG,OAAO,EAAE,CAAC,mBAAmB,EAAE,GAAGH,YAAU,EAAE,GAAGC,YAAU,EAAE,GAAGC,WAAS,EAAE,GAAGC,cAAY,CAAC;oBAC3F,YAAY,EAAE,CAAC,GAAGH,YAAU,EAAE,GAAGC,YAAU,CAAC;oBAC5C,SAAS,EAAE,CAAC,gCAAgC,EAAE,uBAAuB,CAAC;iBACvE;;;MCjCY,gCAAgC;IAG3C,YACmB,eAAmC,EACnC,eAAoC;QADpC,oBAAe,GAAf,eAAe,CAAoB;QACnC,oBAAe,GAAf,eAAe,CAAqB;QAJtC,0BAAqB,GAAG,KAAK,CAAC;KAK3C;;;;;;IAOJ,SAAS;QACP,OAAO,IAAI,CAAC,eAAe;aACxB,iBAAiB,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,qBAAqB,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;aACzE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACnC;;;;;;;IAQD,aAAa,CAAC,IAA4B;QACxC,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,sBAAsB,EAAE,IAAI,EAAE,CAAC,CAAC;KAC3E;;8HA3BU,gCAAgC;kIAAhC,gCAAgC;4FAAhC,gCAAgC;kBAD5C,UAAU;;;MCmBE,kCAAmC,SAAQ,8BAAmC;IAgCzF,YACW,eAAwC,EACxC,aAAmC,EACnC,EAAe,EACf,EAAqB,EACrB,wBAA8E,EAC9E,mBAA4D,EAC5D,aAA+C;QAExD,KAAK,CAAC,aAAa,EAAE,mBAAmB,EAAE,EAAE,EAAE,wBAAwB,EAAE,EAAE,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;QARnG,oBAAe,GAAf,eAAe,CAAyB;QACxC,kBAAa,GAAb,aAAa,CAAsB;QACnC,OAAE,GAAF,EAAE,CAAa;QACf,OAAE,GAAF,EAAE,CAAmB;QACrB,6BAAwB,GAAxB,wBAAwB,CAAsD;QAC9E,wBAAmB,GAAnB,mBAAmB,CAAyC;QAC5D,kBAAa,GAAb,aAAa,CAAkC;QAtCjD,YAAO,GAAG,IAAI,CAAC;;;;QAKR,2BAAsB,GAAG,sBAAsB,CAAC;;;;QAKtD,WAAM,GAAG,IAAI,YAAY,EAAkC,CAAC;QAmB9D,sBAAiB,GAAG,EAAE,CAAC;QAY7B,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,kBAAkB,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,CAAC;KACnD;;;;IA7BD,IACI,iBAAiB,CAAC,KAAyB;QAC7C,IAAI,KAAK,EAAE;YACT,MAAM,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;YACjF,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;YAC1C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;KACF;IAuBD,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,0BAA0B,EAAE,CAAC;KACnC;IAEO,0BAA0B;QAChC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,mBAAmB,CAAC,UAAU,mBAC9B,IAAI,CAAC,cAAc,EACtB,CAAC;YAEH,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC9D,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;gBAClC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBACzB,WAAW,CAAC,OAAO,EAAE,CAAC;aACvB;YACD,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,CAAC;YAClD,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;SACxC;KACF;;;;IAKD,iBAAiB,CAAC,KAAuB;QACvC,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACjC,MAAM,IAAI,GAAS,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC5D,MAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACpE,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YAEpC,UAAU,CAAC,MAAM,GAAG;gBAClB,aAAa,CAAC,QAAQ,CAAC;oBACrB,IAAI,EAAE,UAAU,CAAC,MAAM;oBACvB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,IAAI,EAAE,IAAI,CAAC,IAAI;iBACW,CAAC,CAAC;gBAC9B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC/D,aAAa,CAAC,aAAa,EAAE,CAAC;gBAE9B,SAAS,CAAC,eAAe,EAAE,CAAC;gBAC5B,SAAS,CAAC,OAAO,EAAE,CAAC;aACrB,CAAC;YAEF,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC7B;KACF;;;;IAKD,mBAAmB;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClE,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEhE,IAAI,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;;;;IAKD,SAAS;QACP,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;QAC5C,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QAEvC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAClD,IAAI,KAAK,EAAE;YACT,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACzC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;aAClC;YAED,MAAM,UAAU,mBACd,OAAO,EAAE,EAAE,EACX,KAAK,EAAE,EAAE,EACT,IAAI,EAAE,EAAE,EACR,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,cAAc,EAAE;oBACd,EAAE,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE;iBACjC,EACD,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EACzC,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,EAC5B,SAAS,EAAE,CAAC,KAAK,CAAC,YAAY,IAC3B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAChC,CAAC;YAEF,IAAI,KAAK,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,iCAAM,KAAK,KAAE,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,IAAG,CAAC;aAC3E;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;aAChC;SACF;KACF;;;;;;IAOD,SAAS,CAAC,YAAqB;QAC7B,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC9G;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;SACpD;KACF;IAES,WAAW,CAAC,aAAa,GAAG,KAAK;QACzC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;gIApKU,kCAAkC;oHAAlC,kCAAkC,wLAXlC;QACT;YACE,OAAO,EAAE,4BAA4B;YACrC,QAAQ,EAAE,gCAAgC;SAC3C;QACD;YACE,OAAO,EAAE,4BAA4B;YACrC,QAAQ,EAAE,wCAAwC;SACnD;KACF,iDC7BH,2ggBAyXA,ynGDhLa,8CAA8C,qyDAa9C,uEAAuE,mIAQvE,qEAAqE;4FA/LrE,kCAAkC;kBAd9C,SAAS;mBAAC;oBACT,QAAQ,EAAE,0CAA0C;oBACpD,WAAW,EAAE,+CAA+C;oBAC5D,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,4BAA4B;4BACrC,QAAQ,EAAE,gCAAgC;yBAC3C;wBACD;4BACE,OAAO,EAAE,4BAA4B;4BACrC,QAAQ,EAAE,wCAAwC;yBACnD;qBACF;iBACF;4UAYW,MAAM;sBAAf,MAAM;gBAKE,cAAc;sBAAtB,KAAK;gBAMF,iBAAiB;sBADpB,KAAK;;MAqJK,8CAA+C,SAAQ,UAQnE;;4IARY,8CAA8C;gIAA9C,8CAA8C;4FAA9C,8CAA8C;kBAH1D,SAAS;mBAAC;oBACT,QAAQ,EAAE,2CAA2C;iBACtD;;MAcY,uEAAwE,SAAQ,UAG5F;;qKAHY,uEAAuE;yJAAvE,uEAAuE;4FAAvE,uEAAuE;kBAHnF,SAAS;mBAAC;oBACT,QAAQ,EAAE,oEAAoE;iBAC/E;;MASY,qEAAsE,SAAQ,UAG1F;;mKAHY,qEAAqE;uJAArE,qEAAqE;4FAArE,qEAAqE;kBAHjF,SAAS;mBAAC;oBACT,QAAQ,EAAE,kEAAkE;iBAC7E;;;AErMD,MAAMD,YAAU,GAAG,CAAC,kCAAkC,CAAC,CAAC;AACxD,MAAMC,YAAU,GAAG;IACjB,8CAA8C;IAC9C,qEAAqE;IACrE,uEAAuE;CACxE,CAAC;AACF,MAAMC,WAAS,GAAG;IAChB,0BAA0B;IAC1B,oBAAoB;IACpB,eAAe;IACf,4BAA4B;IAC5B,eAAe;IACf,oBAAoB;IACpB,YAAY;IACZ,mBAAmB;IACnB,gBAAgB;CACjB,CAAC;AACF,MAAMC,cAAY,GAAG,CAAC,mBAAmB,EAAE,sCAAsC,EAAE,+BAA+B,CAAC,CAAC;MAQvG,+BAA+B;;6HAA/B,+BAA+B;8HAA/B,+BAA+B,iBAzBxB,kCAAkC,EAEpD,8CAA8C;QAC9C,qEAAqE;QACrE,uEAAuE,aAgB7D,YAAY,EAAE,uBAAuB,EAb/C,0BAA0B;QAC1B,oBAAoB;QACpB,eAAe;QACf,4BAA4B;QAC5B,eAAe;QACf,oBAAoB;QACpB,YAAY;QACZ,mBAAmB;QACnB,gBAAgB,EAEI,mBAAmB,EAAE,sCAAsC,EAAE,+BAA+B,aAjB9F,kCAAkC,EAEpD,8CAA8C;QAC9C,qEAAqE;QACrE,uEAAuE,EAGvE,0BAA0B;QAC1B,oBAAoB;QACpB,eAAe;QACf,4BAA4B;QAC5B,eAAe;QACf,oBAAoB;QACpB,YAAY;QACZ,mBAAmB;QACnB,gBAAgB,EAEI,mBAAmB,EAAE,sCAAsC,EAAE,+BAA+B;8HAQrG,+BAA+B,aAH/B,CAAC,gCAAgC,CAAC,YAFpC,CAAC,YAAY,EAAE,uBAAuB,EAAE,GAAGD,WAAS,EAAE,GAAGC,cAAY,CAAC,EAb/E,0BAA0B;QAC1B,oBAAoB;QACpB,eAAe;QACf,4BAA4B;QAC5B,eAAe;QACf,oBAAoB;QACpB,YAAY;QACZ,mBAAmB;QACnB,gBAAgB,EAEI,mBAAmB,EAAE,sCAAsC,EAAE,+BAA+B;4FAQrG,+BAA+B;kBAN3C,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,uBAAuB,EAAE,GAAGD,WAAS,EAAE,GAAGC,cAAY,CAAC;oBAC/E,YAAY,EAAE,CAAC,GAAGH,YAAU,EAAE,GAAGC,YAAU,CAAC;oBAC5C,SAAS,EAAE,CAAC,gCAAgC,CAAC;oBAC7C,OAAO,EAAE,CAAC,GAAGD,YAAU,EAAE,GAAGC,YAAU,EAAE,GAAGC,WAAS,EAAE,GAAGC,cAAY,CAAC;iBACvE;;;MCxCY,4BAA4B;IAsBvC,YAA6B,QAAmB,EAAmB,EAAqB;QAA3D,aAAQ,GAAR,QAAQ,CAAW;QAAmB,OAAE,GAAF,EAAE,CAAmB;;;;QAVxF,cAAS,GAAG,KAAK,CAAC;QAED,kBAAa,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;QACnE,YAAO,GAAG,IAAI,OAAO,EAAQ,CAAC;KAO6C;;;;IAlB5F,IACI,IAAI,CAAC,GAAW;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC9B;IAiBD,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;;;;IAKD,UAAU;QACR,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QACnD,MAAM,UAAU,GAAI,aAAa,CAAC,eAA4B,CAAC,IAAI,CAAC;QAEpE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;QAElD,IAAI,CAAC,aAAa;aACf,IAAI,CACH,MAAM,CAAC,OAAO,CAAC,EACf,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC,EAC3E,KAAK,CAAC,GAAG,CAAC,EACV,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CACxB;aACA,SAAS,CAAC;YACT,IAAI,aAAa,GAAG,UAAU,CAAC,YAAY,CAAC;YAC5C,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,IAAI,OAAO,GAAG,CAAC,CAAC;;;YAIhB,GAAG;gBACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,GAAG,aAAa,IAAI,CAAC,CAAC;gBACtE,cAAc,GAAG,aAAa,CAAC;gBAC/B,aAAa,GAAG,UAAU,CAAC,YAAY,CAAC;gBACxC,OAAO,EAAE,CAAC;aACX,QAAQ,cAAc,KAAK,aAAa,IAAI,OAAO,GAAG,CAAC,EAAE;YAE1D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;SACzB,CAAC,CAAC;KACN;;0HA/DU,4BAA4B;8GAA5B,4BAA4B,oOCRzC,gOAOA;4FDCa,4BAA4B;kBAJxC,SAAS;mBAAC;oBACT,QAAQ,EAAE,8CAA8C;oBACxD,WAAW,EAAE,mCAAmC;iBACjD;gIAMK,IAAI;sBADP,KAAK;gBAgBoC,SAAS;sBAAlD,SAAS;uBAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;AExB1C;;;;;;MAUa,oCAAoC;IAJjD;;;;QA4BW,WAAM,GAAG,KAAK,CAAC;;;;QASf,eAAU,GAAG,KAAK,CAAC;;;;QAoB5B,cAAS,GAAG,iCAAiC,oCAAoC,CAAC,OAAO,EAAE,EAAE,CAAC;QAuC7E,gBAAW,GAAG,CAAC,OAAe,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;KACvG;;;;IAlFC,IACI,OAAO,CAAC,KAAyB;QACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,sBAAsB,GAAG,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;KAC3E;;;;;;IA6CD,OAAO,CAAC,KAAU;QAChB,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAE1C,IACE,CAAC,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC,MAAM;aACxC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EACjE;YACA,OAAO;SACR;QAED,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KAC5B;;;;;;IAOD,iBAAiB;QACf,IAAI,IAAI,CAAC,MAAM,YAAY,WAAW,EAAE;YACtC,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;QAED,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;IAED,QAAQ;QACN,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,EAAE;YAC3C,MAAM,IAAI,KAAK,CAAC,mCAAmC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC;SAC9E;KACF;;AAzFc,4CAAO,GAAG,CAAC,CAAC;kIADhB,oCAAoC;sHAApC,oCAAoC,mXCdjD,w4GAmFA,+nBD6Ba,gDAAgD;4FAlGhD,oCAAoC;kBAJhD,SAAS;mBAAC;oBACT,QAAQ,EAAE,iDAAiD;oBAC3D,WAAW,EAAE,gDAAgD;iBAC9D;8BAOU,OAAO;sBAAf,KAAK;gBAMF,OAAO;sBADV,KAAK;uBAAC,SAAS;gBASP,MAAM;sBAAd,KAAK;gBAIG,MAAM;sBAAd,KAAK;gBAIG,WAAW;sBAAnB,KAAK;gBAKG,UAAU;sBAAlB,KAAK;gBAKgD,qBAAqB;sBAA1E,SAAS;uBAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;MA4DzC,gDAAiD,SAAQ,UAGrE;;8IAHY,gDAAgD;kIAAhD,gDAAgD;4FAAhD,gDAAgD;kBAH5D,SAAS;mBAAC;oBACT,QAAQ,EAAE,6CAA6C;iBACxD;;;MEtGY,yBAAyB;;uHAAzB,yBAAyB;wHAAzB,yBAAyB,iBAJrB,4BAA4B,aAEjC,YAAY,aADZ,4BAA4B;wHAG3B,yBAAyB,YAF3B,CAAC,YAAY,CAAC;4FAEZ,yBAAyB;kBALrC,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,4BAA4B,CAAC;oBAC5C,OAAO,EAAE,CAAC,4BAA4B,CAAC;oBACvC,OAAO,EAAE,CAAC,YAAY,CAAC;iBACxB;;;ACMD,MAAMD,WAAS,GAAG,CAAC,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,EAAE,aAAa,CAAC,CAAC;AACzF,MAAMC,cAAY,GAAG,CAAC,yBAAyB,CAAC,CAAC;MAYpC,iCAAiC;;+HAAjC,iCAAiC;gIAAjC,iCAAiC,iBAT7B,oCAAoC,EAAE,gDAAgD,aAO3F,YAAY,EAXL,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,EAAE,aAAa,EACjE,yBAAyB,aAK3C,oCAAoC;QACpC,gDAAgD,EAPjC,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,EAAE,aAAa,EACjE,yBAAyB;gIAYlC,iCAAiC,YAFnC,CAAC,YAAY,EAAE,GAAGD,WAAS,EAAE,GAAGC,cAAY,CAAC,EAXrC,oBAAoB,EAAE,UAAU,EAAE,mBAAmB,EAAE,aAAa,EACjE,yBAAyB;4FAYlC,iCAAiC;kBAV7C,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,oCAAoC,EAAE,gDAAgD,CAAC;oBACtG,OAAO,EAAE;wBACP,oCAAoC;wBACpC,gDAAgD;wBAChD,GAAGD,WAAS;wBACZ,GAAGC,cAAY;qBAChB;oBACD,OAAO,EAAE,CAAC,YAAY,EAAE,GAAGD,WAAS,EAAE,GAAGC,cAAY,CAAC;iBACvD;;;MCvBY,eAAe,GAAG,MAC7B,UAAa,MAAqB;;IAEhC,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACrE;;MCPW,cAAe,SAAQ,KAAK;IAEvC;QACE,KAAK,EAAE,CAAC;QAFD,SAAI,GAAG,gBAAgB,CAAC;QAG/B,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KACnD;;;MCWU,6BAA6B;;;;IAIxC,IACI,KAAK,CAAC,KAAyC;QACjD,IAAI,KAAK,YAAY,cAAc,EAAE;YACnC,IAAI,CAAC,SAAS,GAAG,+BAA+B,CAAC;SAClD;aAAM,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YAC5C,IAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;SAChD;aAAM;YACL,QAAQ,KAAK,CAAC,MAAM;gBAClB,KAAK,CAAC;oBACJ,IAAI,CAAC,SAAS,GAAG,kCAAkC,CAAC;oBACpD,MAAM;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,SAAS,GAAG,2BAA2B,CAAC;oBAC7C,MAAM;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;oBAC/C,MAAM;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;oBAC/C,MAAM;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC;oBAC3C,MAAM;gBACR;oBACE,IAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;aAClD;SACF;KACF;;2HA/BU,6BAA6B;+GAA7B,6BAA6B,2HChB1C,6lGAuEA;4FDvDa,6BAA6B;kBAJzC,SAAS;mBAAC;oBACT,QAAQ,EAAE,yDAAyD;oBACnE,WAAW,EAAE,yCAAyC;iBACvD;8BAMK,KAAK;sBADR,KAAK;;;AEbR,MAAMD,WAAS,GAAG,CAAC,gBAAgB,CAAC,CAAC;MAOxB,0BAA0B;;wHAA1B,0BAA0B;yHAA1B,0BAA0B,iBAJtB,6BAA6B,aAElC,YAAY,EALL,gBAAgB,aAIvB,6BAA6B,EAJtB,gBAAgB;yHAOtB,0BAA0B,YAF5B,CAAC,YAAY,EAAE,GAAGA,WAAS,CAAC,EALpB,gBAAgB;4FAOtB,0BAA0B;kBALtC,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,6BAA6B,CAAC;oBAC7C,OAAO,EAAE,CAAC,6BAA6B,EAAE,GAAGA,WAAS,CAAC;oBACtD,OAAO,EAAE,CAAC,YAAY,EAAE,GAAGA,WAAS,CAAC;iBACtC;;;MCPY,sCAAsC;IACjD,YAA6B,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;KAAI;;;;;;;IAQlE,iBAAiB,CAAC,GAAkB;QAClC,OAAO,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;KACvD;;;;;;;IAQD,gBAAgB,CAAC,UAAgB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;KAC5D;;oIArBU,sCAAsC;wIAAtC,sCAAsC;4FAAtC,sCAAsC;kBADlD,UAAU;;;MCAE,uBAAuB,GAAG;IACrC,0BAA0B,EAAE,uCAAuC;IACnE,4BAA4B,EAAE,wCAAwC;IACtE,YAAY,EAAE,EAAE;IAChB,WAAW,EAAE,EAAE;IACf,oBAAoB,EAAE,kBAAkB;IACxC,QAAQ,EAAE,KAAK;IACf,oBAAoB,EAAE,KAAK;IAC3B,gBAAgB,EAAE,IAAI;EACtB;MAGW,sCAAsC;IACjD,YAAyC,SAAqB;QAArB,cAAS,GAAT,SAAS,CAAY;KAAI;;;;IAKlE,IAAI,YAAY;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;SACrE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAE,uBAAuB,CAAC,YAAY,CAAC,CAAC;KACtF;;;;IAKD,IAAI,0BAA0B;QAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAAC,uBAAuB,CAAC,0BAA0B,CAAC,CAAC;SACnF;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,4BAA4B,EAAE,uBAAuB,CAAC,0BAA0B,CAAC,CAAC;KAClH;;;;;IAMD,IAAI,4BAA4B;QAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAAC,uBAAuB,CAAC,4BAA4B,CAAC,CAAC;SACrF;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAC5B,8BAA8B,EAC9B,uBAAuB,CAAC,4BAA4B,CACrD,CAAC;KACH;;;;IAKD,IAAI,WAAW;QACb,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;SACpE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,uBAAuB,CAAC,WAAW,CAAC,CAAC;KACpF;;;;IAKD,IAAI,oBAAoB;QACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;SAC7E;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAsB,EAAE,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;KACtG;;;;;IAMD,IAAI,QAAQ;QACV,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;SACjE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,uBAAuB,CAAC,QAAQ,CAAC,CAAC;KAC9E;;;;IAKD,IAAI,oBAAoB;QACtB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;SAC7E;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,sBAAsB,EAAE,uBAAuB,CAAC,oBAAoB,CAAC,CAAC;KACtG;;;;IAKD,IAAI,gBAAgB;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,sBAAsB,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;SACzE;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,EAAE,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;KAC9F;;oIA9FU,sCAAsC;wIAAtC,sCAAsC;4FAAtC,sCAAsC;kBADlD,UAAU;;0BAEI,QAAQ;;;MCNV,oCAAoC;IAiD/C,YACW,MAA4B,EAC5B,cAA8B,EAC9B,UAAkD;QAFlD,WAAM,GAAN,MAAM,CAAsB;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAwC;;;;QAhDnD,mBAAc,GAAG,IAAI,YAAY,EAAE,CAAC;;;;QAKpC,WAAM,GAAG,IAAI,YAAY,EAAU,CAAC;;;;QAUrC,iBAAY,GAAG,IAAI,OAAO,EAAW,CAAC;;;;QAKtC,UAAK,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC;;;;QAKxC,iBAAY,GAAiB;YAC3B,IAAI,EAAE,CAAC;SACR,CAAC;;;;QAKO,kBAAa,GAA6B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC,IAAI,CACvG,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,EAC5B,GAAG,CAAC,MAAM;YACR,IAAI,MAAM,EAAE;gBACV,IAAI;oBACF,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBAC3B;gBAAC,OAAO,GAAG,EAAE,GAAE;aACjB;YAED,OAAO,EAAE,CAAC;SACX,CAAC,CACH,CAAC;KAME;;;;;;IAOJ,YAAY,CAAC,IAAa;QACxB,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC1C;KACF;;;;;;IAOD,cAAc,CAAC,OAAoB;QACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC1C;;;;;;IAOD,iBAAiB,CAAC,GAAsB;QACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC1C;;;;;;IAOD,SAAS,CAAC,KAAwD;QAChE,IAAI,gBAAgB,IAAI,KAAK,EAAE;YAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;SAChD;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,0BAA0B;iBACvC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAClC,SAAS,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SAC1F;KACF;;;;;;IAOD,gBAAgB,CAAC,YAAyC;QACxD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,YAAY,KAAK,QAAQ,GAAG,YAAY,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC;KAC7F;;;;;;IAOD,qBAAqB,CAAC,KAAwB;QAC5C,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;QAE1E,OAAO,KAAK,CAAC;KACd;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;;;;;;IAOD,gBAAgB,CAAC,YAA0B;QACzC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAE5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1B;IAEO,qBAAqB,CAAC,WAAmB;QAC/C,OAAO;YACL,IAAI,EAAE,CAAC;YACP,WAAW;SACZ,CAAC;KACH;IAEO,mBAAmB,CAAC,YAA+B;QACzD,uBACE,IAAI,EAAE,CAAC,IACJ,YAAY,EACf;KACH;IAEO,aAAa,CAAC,KAAqB,EAAE,KAAa;QACxD,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAA0B,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;QAExF,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjB,OAAO,UAAU,CAAC;SACnB;QAED,OAAO,aAAa,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAC9E,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CACtC,CAAC;KACH;;kIArKU,oCAAoC;sHAApC,oCAAoC,qHAFrC,EAAE;4FAED,oCAAoC;kBAHhD,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;yLAKW,cAAc;sBAAvB,MAAM;gBAKG,MAAM;sBAAf,MAAM;;;MCjBa,aAAa;;;MCYtB,gCAAgC;IAqE3C,YACmB,OAAsB,EACtB,EAAe,EACf,MAA4B;QAF5B,YAAO,GAAP,OAAO,CAAe;QACtB,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAsB;;;;QAlD/B,2BAAsB,GAAG,sBAAsB,CAAC;;;;QAKtD,UAAK,GAAG,IAAI,YAAY,EAAqB,CAAC;;;;QAI9C,UAAK,GAAG,IAAI,YAAY,EAAQ,CAAC;;;;QAK3C,eAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,IAAI,EAAE,CAAC,EAAE,CAAC;SACX,CAAC,CAAC;;;;QAKH,YAAO,GAAG,KAAK,CAAC;;;;QAKhB,WAAM,GAAG,KAAK,CAAC;;;;QAKN,YAAO,GAAG,IAAI,OAAO,EAAkC,CAAC;;;;QAKxD,qBAAgB,GAAG;YAC1B,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;YACzC,eAAe,EAAE,CAAC,IAAwB,KAAK,IAAI,CAAC,QAAQ;YAC5D,cAAc,EAAE,CAAC,IAAwB,KAAK,IAAI,CAAC,QAAQ;SAC5D,CAAC;QAEe,kBAAa,GAAG,IAAI,eAAe,CAAoB,EAAE,CAAC,CAAC;QAC3D,iBAAY,GAAG,IAAI,OAAO,EAAQ,CAAC;KAMhD;;;;IA5DJ,IAAa,YAAY,CAAC,KAAoC;QAC5D,IAAI,KAAK,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,EAAE;YACzE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChC;KACF;IAyDD,QAAQ;QACN,aAAa,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9C,IAAI,CACH,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;YACzB,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;YAEvD,IAAI,MAAM,IAAI,OAAO,EAAE;gBACrB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CACxC,MAAM,CAAC,IAAI,CAAC,CAAC,KAA4B,KAAK,KAAK,CAAC,EAAE,KAAK,OAAO,CAAC,CACpE,CAAC;aACH;YAED,IAAI,SAAS,IAAI,OAAO,EAAE;gBACxB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;oBACxC,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE;oBACvC,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE;iBACpC,CAAC,CAAC;aACJ;YAED,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBACtC,OAAO,IAAI,CAAC,OAAO;qBAChB,WAAW,CAAC,MAAM,CAAC;qBACnB,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,iCAAM,IAAI,KAAE,EAAE,EAAE,MAAM,CAAC,MAAM,IAAG,CAAC,CAAC,CAAC;aACzG;YAED,OAAO,KAAK,CAAC;SACd,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B;aACA,SAAS,EAAE,CAAC;QAEf,IAAI,CAAC,OAAO;aACT,SAAS,EAAE;aACX,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,MAAM;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SACzB,CAAC,CAAC;KACN;;;;IAKD,MAAM;QACJ,MAAM,WAAW,GAAsB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEnF,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC9B;;;;;;IAOD,KAAK,CAAC,KAAK,GAAG,KAAK;QACjB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBACnD,IAAI,CAAC,MAAM,EAAE,CAAC;aACf,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;KACzB;;;;IAKD,aAAa;QACX,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KAC5B;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;IAEO,qBAAqB,CAAC,IAAe;QAC3C,sDACM,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,KACpD,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,KACjD,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI;YACrB,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;SAC7C,GACD;KACH;IAEO,UAAU,CAAC,IAAU;QAC3B,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,MAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,MAAM,KAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC/B,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QACvB,MAAM,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;QACnD,MAAM,UAAU,GAAG,KAAK,GAAG,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAE/D,OAAO,GAAG,IAAI,IAAI,UAAU,IAAI,OAAO,EAAE,CAAC;KAC3C;IAEO,iBAAiB,CAAC,IAAyB,EAAE,IAAyB;QAC5E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,EAAE,IAAI,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC7G,OAAO,KAAK,CAAC;SACd;QAED,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE;gBACxC,OAAO,KAAK,CAAC;aACd;SACF;QAED,OAAO,IAAI,CAAC;KACb;IAEO,WAAW,CAAC,IAAwB;QAC1C,OAAO,IAAI,CAAC,IAAI,CACd,YAAY,CAAC,GAAG,CAAC,EACjB,oBAAoB,EAAE,EACtB,SAAS,CAAC,KAAK;YACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC3C,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CACtC,GAAG,CAAC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,CAAC,EAChD,UAAU,CAAC,GAAG;oBACZ,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;oBAExE,OAAO,KAAK,CAAC;iBACd,CAAC,CACH,CAAC;aACH;SACF,CAAC,CACH,CAAC;KACH;;8HAhNU,gCAAgC;kHAAhC,gCAAgC,uNChB7C,q5JAqIA,8vCDiGa,4CAA4C;4FAtN5C,gCAAgC;kBAJ5C,SAAS;mBAAC;oBACT,QAAQ,EAAE,sCAAsC;oBAChD,WAAW,EAAE,4CAA4C;iBAC1D;2JAKU,WAAW;sBAAnB,KAAK;gBAIG,SAAS;sBAAjB,KAAK;gBAKO,YAAY;sBAAxB,KAAK;gBAcI,KAAK;sBAAd,MAAM;gBAIG,KAAK;sBAAd,MAAM;;MAuLI,4CAA6C,SAAQ,UAGjE;;0IAHY,4CAA4C;8HAA5C,4CAA4C;4FAA5C,4CAA4C;kBAHxD,SAAS;mBAAC;oBACT,QAAQ,EAAE,yCAAyC;iBACpD;;;AErND,MAAMF,YAAU,GAAG,CAAC,oCAAoC,EAAE,gCAAgC,CAAC,CAAC;AAC5F,MAAMC,YAAU,GAAG,CAAC,4CAA4C,CAAC,CAAC;AAClE,MAAMC,WAAS,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,0BAA0B,EAAE,eAAe,EAAE,qBAAqB,CAAC,CAAC;MAOpG,iCAAiC;;+HAAjC,iCAAiC;gIAAjC,iCAAiC,iBAT1B,oCAAoC,EAAE,gCAAgC,EACtE,4CAA4C,aAIpD,YAAY,EAAE,mBAAmB,EAH1B,YAAY,EAAE,UAAU,EAAE,0BAA0B,EAAE,eAAe,EAAE,qBAAqB,aAA5F,YAAY,EAAE,UAAU,EAAE,0BAA0B,EAAE,eAAe,EAAE,qBAAqB,EAF3F,oCAAoC,EAAE,gCAAgC,EACtE,4CAA4C;gIAQnD,iCAAiC,YAJnC,CAAC,YAAY,EAAE,mBAAmB,EAAE,GAAGA,WAAS,CAAC,EAHzC,YAAY,EAAE,UAAU,EAAE,0BAA0B,EAAE,eAAe,EAAE,qBAAqB;4FAOlG,iCAAiC;kBAL7C,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,GAAGA,WAAS,CAAC;oBAC1D,YAAY,EAAE,CAAC,GAAGF,YAAU,EAAE,GAAGC,YAAU,CAAC;oBAC5C,OAAO,EAAE,CAAC,GAAGC,WAAS,EAAE,GAAGF,YAAU,EAAE,GAAGC,YAAU,CAAC;iBACtD;;;ICZW;AAAZ,WAAY,WAAW;IACrB,8BAAe,CAAA;IACf,gCAAiB,CAAA;IACjB,0BAAW,CAAA;AACb,CAAC,EAJW,WAAW,KAAX,WAAW;;ICFX;AAAZ,WAAY,oBAAoB;IAC9B,qCAAa,CAAA;IACb,yCAAiB,CAAA;AACnB,CAAC,EAHW,oBAAoB,KAApB,oBAAoB;;MCAV,6CAA6C;;;;;;;IA0CjE,iBAAiB,CAAC,WAAyB;QACzC,OAAO,WAAW,CAAC,GAAG,CAAC,UAAU,qCAC5B,UAAU,KACb,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,IAC5C,CAAC,CAAC;KACL;;;MC5CU,qCAAqC;IAMhD,YACqB,gBAA+D,EAC/D,MAA4B;QAD5B,qBAAgB,GAAhB,gBAAgB,CAA+C;QAC/D,WAAM,GAAN,MAAM,CAAsB;KAC7C;IAEJ,SAAS,CAAC,cAAsB,EAAE,IAAiC;QACjE,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAChC,SAAS,CAAC,KAAK,KAAK,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC,EAC7G,GAAG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,mBAAmB,EAAE,SAAS,CAAC,CAAC,EAC5E,UAAU,CAAC,KAAK;YACd,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;YAE1E,OAAO,KAAK,CAAC;SACd,CAAC,CACH,CAAC;KACH;IAED,WAAW;QACT,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3D,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAClE,GAAG,CAAC;gBACF,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC;aACrE,CAAC,EACF,UAAU,CAAC,KAAK;gBACd,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;gBAE1E,OAAO,KAAK,CAAC;aACd,CAAC,CACH,CAAC;SACH;QAED,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;KACtB;IAEO,WAAW,CAAC,cAAsB,EAAE,IAAiC;QAC3E,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;YACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,IAAI,CACjE,GAAG,CACD,GAAG,KACA,IAAI,CAAC,aAAa,GAAG;gBACpB,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE;gBACrB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE;aACjC,CAAC,CACL,CACF,CAAC;SACH;QAED,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;KACtB;IAEO,WAAW,CAAC,cAAsB,EAAE,IAAiC;QAC3E,IAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;YACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;SAChE;QAED,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;KACtB;;mIA/DU,qCAAqC;uHAArC,qCAAqC,2RAFtC,EAAE;4FAED,qCAAqC;kBAHjD,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;iKAEgC,mBAAmB;sBAAjD,SAAS;uBAAC,kBAAkB;gBACI,qBAAqB;sBAArD,SAAS;uBAAC,oBAAoB;;;MCapB,+BAAgC,SAAQ,qCAAqC;IA2FxF,YACqB,gBAA+D,EAC/D,cAA8B,EAC9B,MAA4B,EACtC,mBAA4D,EAClD,aAA+C,EAC/C,eAAwC;QAE3D,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAPb,qBAAgB,GAAhB,gBAAgB,CAA+C;QAC/D,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAsB;QACtC,wBAAmB,GAAnB,mBAAmB,CAAyC;QAClD,kBAAa,GAAb,aAAa,CAAkC;QAC/C,oBAAe,GAAf,eAAe,CAAyB;;;;QA3FnD,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;;;;QA2B3B,OAAE,GAAG,sCAAsC,+BAA+B,CAAC,OAAO,EAAE,EAAE,CAAC;;;;;QAMvF,sBAAiB,GAAG,gBAAgB,CAAC;QAE3B,gBAAW,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,iBAAY,GAAG,IAAI,OAAO,EAA+B,CAAC;QAC5D,oBAAe,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;;;;QAUtF,YAAO,GAAG,IAAI,CAAC;;;;QAKf,gBAAW,GAAG,KAAK,CAAC;;;;QAKpB,qBAAgB,GAAG,KAAK,CAAC;;;;QAKzB,sBAAiB,GAAmC;YAClD,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,SAAS;SAChB,CAAC;;;;QAKF,mBAAc,GAAG,IAAI,SAAS,CAAC;YAC7B,IAAI,EAAE,IAAI,WAAW,EAAE;YACvB,WAAW,EAAE,IAAI,WAAW,EAAE;SAC/B,CAAC,CAAC;;;;QAKH,gBAAW,GAAG,KAAK,CAAC;QAED,mBAAc,GAAuB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC9D,4BAAuB,GAAG,IAAI,eAAe,CAAuB,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAC/F,2BAAsB,GACvC,IAAI,CAAC,yBAAyB,EAAE,CAAC;KAWlC;;;;IAzFD,IAAa,sBAAsB,CAAC,KAAyB;QAC3D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClC;;;;IA4FD,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;KACxC;IAED,WAAW;QACT,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;KAC7B;;;;IAKD,WAAW;QACT,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBAC9F,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACjC,SAAS,EAAE,CAAC;SAChB;KACF;;;;;IAMD,iBAAiB;QACf,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAE1E,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;YACrG,IAAI,CAAC,iBAAiB,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;YAE1C,IAAI,CAAC,MAAM,KAAK,IAAI,KAAK,gBAAgB,CAAC,OAAO,IAAI,IAAI,KAAK,gBAAgB,CAAC,YAAY,CAAC,EAAE;gBAC5F,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC7B;SACF,CAAC,CAAC;KACJ;;;;IAKD,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;;;;;;IAOD,eAAe,CAAC,IAAa;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;SAC7B;aAAM;YACL,UAAU,CAAC,MAAM,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC;SAC3E;KACF;;;;IAKD,KAAK;QACH,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACvC,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;SACjD;KACF;;;;;;;IAQD,gBAAgB,CAAC,KAAa;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEvC,OAAO,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC;KACxD;;;;;;;IAQD,QAAQ,CAAC,KAAa,EAAE,IAAY;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEvC,OAAO,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC1D;IAEO,iBAAiB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAC9B,SAAS,CAAC,EAAE;YACV,IAAI,CAAC,EAAE,EAAE;gBACP,IAAI,CAAC,aAAa,GAAG,IAAI,cAAc,EAAE,CAAC;gBAE1C,OAAO,KAAK,CAAC;aACd;YAED,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,EACF,eAAe,EAAE,CAClB,CAAC;KACH;IAEO,yBAAyB;QAC/B,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAC5E,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,cAAc,CAAC,KACjC,IAAI,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CACzF,GAAG,CAAC,MAAM,MAAM,KAAK,oBAAoB,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC,EACxE,UAAU,CAAC,KAAK;YACd,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;YAE1E,OAAO,KAAK,CAAC;SACd,CAAC,CACH,CACF,CACF,CAAC;KACH;IAEO,gBAAgB;QACtB,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QAExD,uBACE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,KACtC,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,KAAI,EAAE,WAAW,EAAG,WAA0B,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,GAC5F;KACH;IAEO,UAAU,CAAC,KAAa;;QAC9B,OAAO,MAAA,IAAI,CAAC,cAAc,0CAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC7C;;AA/OM,uCAAO,GAAG,CAAC,CAAC;6HADR,+BAA+B;iHAA/B,+BAA+B,6hBAFhC,EAAE;4FAED,+BAA+B;kBAH3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;kUAOW,IAAI;sBAAb,MAAM;gBAKM,sBAAsB;sBAAlC,KAAK;gBAOqD,eAAe;sBAAzE,SAAS;uBAAC,8CAA8C;gBAKI,gBAAgB;sBAA5E,SAAS;uBAAC,gDAAgD;gBAK9B,cAAc;sBAA1C,SAAS;uBAAC,gBAAgB;;;MC9ChB,oCAAoC;;kIAApC,oCAAoC;mIAApC,oCAAoC,iBAJhC,+BAA+B,EAAE,qCAAqC,aAC3E,YAAY,aACZ,+BAA+B,EAAE,qCAAqC;mIAErE,oCAAoC,YAHtC,CAAC,YAAY,CAAC;4FAGZ,oCAAoC;kBALhD,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,+BAA+B,EAAE,qCAAqC,CAAC;oBACtF,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,+BAA+B,EAAE,qCAAqC,CAAC;iBAClF;;;ICTW;AAAZ,WAAY,qBAAqB;IAC/B,4CAAmB,CAAA;IACnB,gDAAuB,CAAA;IACvB,wCAAe,CAAA;IACf,kDAAyB,CAAA;IACzB,sCAAa,CAAA;IACb,wCAAe,CAAA;IACf,gDAAuB,CAAA;IACvB,wDAA+B,CAAA;AACjC,CAAC,EATW,qBAAqB,KAArB,qBAAqB;;MCQpB,8BAA8B;IAJ3C;;;;QAYW,eAAU,GAAG,KAAK,CAAC;;;;;QAMnB,0BAAqB,GAAG,qBAAqB,CAAC;KACxD;;4HAfY,8BAA8B;gHAA9B,8BAA8B,wICR3C,+oKA+IA,yODnHa,0CAA0C;4FApB1C,8BAA8B;kBAJ1C,SAAS;mBAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE,0CAA0C;iBACxD;8BAKU,aAAa;sBAArB,KAAK;gBAIG,UAAU;sBAAlB,KAAK;;MAYK,0CAA2C,SAAQ,UAAqD;;wIAAxG,0CAA0C;4HAA1C,0CAA0C;4FAA1C,0CAA0C;kBAHtD,SAAS;mBAAC;oBACT,QAAQ,EAAE,uCAAuC;iBAClD;;;AEhBD,MAAMD,YAAU,GAAG,CAAC,8BAA8B,CAAC,CAAC;AACpD,MAAMC,YAAU,GAAG,CAAC,0CAA0C,CAAC,CAAC;AAChE,MAAMC,WAAS,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;MAOlC,2BAA2B;;yHAA3B,2BAA2B;0HAA3B,2BAA2B,iBATpB,8BAA8B,EAC9B,0CAA0C,aAMlD,YAAY,EALL,WAAW,EAAE,aAAa,aAFzB,8BAA8B,EAC9B,0CAA0C,EAC3C,WAAW,EAAE,aAAa;0HAOhC,2BAA2B,YAF7B,CAAC,YAAY,EAAE,GAAGA,WAAS,CAAC,EALpB,WAAW,EAAE,aAAa;4FAOhC,2BAA2B;kBALvC,QAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,GAAGF,YAAU,EAAE,GAAGC,YAAU,CAAC;oBAC5C,OAAO,EAAE,CAAC,GAAGD,YAAU,EAAE,GAAGC,YAAU,EAAE,GAAGC,WAAS,CAAC;oBACrD,OAAO,EAAE,CAAC,YAAY,EAAE,GAAGA,WAAS,CAAC;iBACtC;;;ICnBW;AAAZ,WAAY,2BAA2B;IACrC,qDAAsB,CAAA;IACtB,uDAAwB,CAAA;IACxB,mDAAoB,CAAA;IACpB,wDAAyB,CAAA;IACzB,iDAAkB,CAAA;IAClB,8CAAe,CAAA;IACf,oDAAqB,CAAA;IACrB,+EAAgD,CAAA;AAClD,CAAC,EATW,2BAA2B,KAA3B,2BAA2B;;MCU1B,oCAAoC;IAC/C,YAA6B,cAAkC;QAAlC,mBAAc,GAAd,cAAc,CAAoB;KAAI;;;;;;;IAQnE,aAAa,CAAC,WAAmC;QAC/C,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,sBAAsB,EAAE,WAAW,EAAE,CAAC,CAAC;KACjF;;;;;;;IAQD,mBAAmB,CAAC,OAAe;QACjC,OAAO,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE,yBAAyB,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;KACjG;;kIArBU,oCAAoC;sIAApC,oCAAoC;4FAApC,oCAAoC;kBADhD,UAAU;;;MCUE,sCAAsC;IAyDjD,YACmB,eAAwC,EACxC,WAAiD,EACjD,mBAA4D,EAC5D,aAAmC;QAHnC,oBAAe,GAAf,eAAe,CAAyB;QACxC,gBAAW,GAAX,WAAW,CAAsC;QACjD,wBAAmB,GAAnB,mBAAmB,CAAyC;QAC5D,kBAAa,GAAb,aAAa,CAAsB;;;;QApD5C,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;;;;QAK5B,YAAO,GAAG,IAAI,YAAY,EAAE,CAAC;;;;QAK7B,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;;;;QAepC,kBAAa,GAAG,KAAK,CAAC;;;;QAKtB,oBAAe,GAAG,KAAK,CAAC;;;;;QAWf,sBAAiB,GAAG,gBAAgB,CAAC;;;;QAKrC,uBAAkB,GAA+C,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC;KAOhH;IAEJ,QAAQ;QACN,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;SAClG;KACF;IAEO,YAAY,CAAC,IAAY;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,OAAO,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CACpD,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAC9D,UAAU,CAAC;YACT,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,OAAO,KAAK,CAAC;SACd,CAAC,EACF,QAAQ,CAAC,OAAO,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC,CAC/C,CAAC;KACH;;;;IAKD,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;;;;;;IAOD,cAAc,CAAC,YAAqB;QAClC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAClC,YAAY,EACZ,CAAC,YAAY,IAAI,IAAI,CAAC,iBAAiB,CAAC,cAAc,KAAK,SAAS,CACrE,CAAC;KACH;;;;IAKD,cAAc;QACZ,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;;;;;;IAOD,aAAa,CAAC,EAUmB;YAVnB,EACZ,IAAI,EACJ,OAAO,EACP,KAAK,EACL,WAAW,EACX,YAAY,EACZ,gBAAgB,EAChB,QAAQ,EACR,SAAS,OAEsB,EAD5B,IAAI,cATK,wGAUb,CADQ;QAEP,MAAM,UAAU,2FACX,IAAI,KACP,OAAO,EAAE,EAAE,EACX,KAAK,EAAE,EAAE,EACT,IAAI,EAAE,EAAE,EACR,SAAS,EAAE,CAAC,YAAY,EACxB,SAAS,EAAE,CAAC,CAAC,SAAS,EACtB,cAAc,EAAE;gBACd,EAAE,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE;aAC3B,MACG,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KACrE,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KACjD,KAAK,IAAI,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,KACxC,WAAW,IAAI,WAAW,CAAC,MAAM,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAC1F,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,SAAS,CAClD,MAAM,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,uBAAuB,CAAC,EACvE,MAAM,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,EAAE,OAAO,CAAC,EAC9E,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAC1B,CAAC;KACH;;oIApJU,sCAAsC;wHAAtC,sCAAsC,2ZCnBnD,krPAwNA,4oCD3Ca,kDAAkD,2hBAWlD,2EAA2E,uIAQ3E,yEAAyE;4FA7KzE,sCAAsC;kBAJlD,SAAS;mBAAC;oBACT,QAAQ,EAAE,qCAAqC;oBAC/C,WAAW,EAAE,0CAA0C;iBACxD;8OAKU,OAAO;sBAAf,KAAK;gBAKI,MAAM;sBAAf,MAAM;gBAKG,OAAO;sBAAhB,MAAM;gBAKG,IAAI;sBAAb,MAAM;gBAK4B,uBAAuB;sBAAzD,SAAS;uBAAC,sBAAsB;gBAKA,qBAAqB;sBAArD,SAAS;uBAAC,oBAAoB;;MA6HpB,kDAAmD,SAAQ,UAMvE;;gJANY,kDAAkD;oIAAlD,kDAAkD;4FAAlD,kDAAkD;kBAH9D,SAAS;mBAAC;oBACT,QAAQ,EAAE,+CAA+C;iBAC1D;;MAYY,2EAA4E,SAAQ,UAGhG;;yKAHY,2EAA2E;6JAA3E,2EAA2E;4FAA3E,2EAA2E;kBAHvF,SAAS;mBAAC;oBACT,QAAQ,EAAE,wEAAwE;iBACnF;;MASY,yEAA0E,SAAQ,UAG9F;;uKAHY,yEAAyE;2JAAzE,yEAAyE;4FAAzE,yEAAyE;kBAHrF,SAAS;mBAAC;oBACT,QAAQ,EAAE,sEAAsE;iBACjF;;;AEzKD,MAAM,UAAU,GAAG,CAAC,sCAAsC,CAAC,CAAC;AAC5D,MAAM,UAAU,GAAG;IACjB,kDAAkD;IAClD,2EAA2E;IAC3E,yEAAyE;CAC1E,CAAC;AACF,MAAM,SAAS,GAAG,CAAC,YAAY,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,WAAW,EAAE,sBAAsB,CAAC,CAAC;AAC9G,MAAM,YAAY,GAAG,CAAC,yBAAyB,EAAE,sCAAsC,CAAC,CAAC;MAa5E,mCAAmC;;iIAAnC,mCAAmC;kIAAnC,mCAAmC,iBApB5B,sCAAsC,EAExD,kDAAkD;QAClD,2EAA2E;QAC3E,yEAAyE,aAM/D,YAAY,EAJL,YAAY,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,WAAW,EAAE,sBAAsB,EACtF,yBAAyB,EAAE,sCAAsC,aAPnE,sCAAsC,EAExD,kDAAkD;QAClD,2EAA2E;QAC3E,yEAAyE,EAExD,YAAY,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,WAAW,EAAE,sBAAsB,EACtF,yBAAyB,EAAE,sCAAsC;kIAa1E,mCAAmC,aARnC;QACT,uBAAuB;QACvB,oCAAoC;QACpC,uCAAuC;QACvC,oBAAoB;KACrB,YAPQ,CAAC,YAAY,EAAE,GAAG,SAAS,EAAE,GAAG,YAAY,CAAC,EAJrC,YAAY,EAAE,oBAAoB,EAAE,gBAAgB,EAAE,WAAW,EAAE,sBAAsB,EACtF,yBAAyB,EAAE,sCAAsC;4FAa1E,mCAAmC;kBAX/C,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,GAAG,SAAS,EAAE,GAAG,YAAY,CAAC;oBACtD,YAAY,EAAE,CAAC,GAAG,UAAU,EAAE,GAAG,UAAU,CAAC;oBAC5C,SAAS,EAAE;wBACT,uBAAuB;wBACvB,oCAAoC;wBACpC,uCAAuC;wBACvC,oBAAoB;qBACrB;oBACD,OAAO,EAAE,CAAC,GAAG,UAAU,EAAE,GAAG,UAAU,EAAE,GAAG,SAAS,EAAE,GAAG,YAAY,CAAC;iBACvE;;;ACzCD;;ACAA;;;;;;"}