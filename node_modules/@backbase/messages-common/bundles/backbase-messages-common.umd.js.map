{"version":3,"file":"backbase-messages-common.umd.js","sources":["../../../../libs/messages-common/src/services/messages-encoding/messages-encoding.service.ts","../../../../libs/messages-common/src/directives/prevent-bubble-down/prevent-bubble-down.directive.ts","../../../../libs/messages-common/src/directives/prevent-bubble-down/prevent-bubble-down.module.ts","../../../../libs/messages-common/src/services/messages-unread-conversation-count/messages-unread-conversation-count.service.ts","../../../../libs/messages-common/src/services/messages-unread-conversation-count/messages-unread-conversation-count.module.ts","../../../../libs/messages-common/src/services/messages-employee-conversation-counters/messages-employee-conversation-counters.service.ts","../../../../libs/messages-common/src/services/messages-employee-conversation-counters/messages-employee-conversation-counters.module.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model.ts","../../../../libs/messages-common/src/services/shared-methods/shared-methods.service.ts","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service.ts","../../../../libs/messages-common/src/components/upload-attachments/services/messages-upload-attachments.service.ts","../../../../libs/messages-common/src/components/create-message/base-form/base-create-message-form.service.ts","../../../../libs/messages-common/src/components/create-message/base-form/base-create-message-form.component.ts","../../../../libs/messages-common/src/components/create-message/base-form/base-create-message-form.module.ts","../../../../libs/messages-common/src/utils/snapshot.ts","../../../../libs/messages-common/src/utils/item-model-property.ts","../../../../libs/messages-common/src/utils/type-helpers.ts","../../../../libs/messages-common/src/components/create-message/base-create-message-modal/base-create-message-modal-properties.service.ts","../../../../libs/messages-common/src/components/create-message/base-create-message-modal/base-create-message-modal.component.ts","../../../../libs/messages-common/src/components/create-message/base-create-message-modal/base-create-message-modal.module.ts","../../../../libs/messages-common/src/components/base-modal/base-modal.component.ts","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.component.ts","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.component.html","../../../../libs/messages-common/src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module.ts","../../../../libs/messages-common/src/components/upload-attachments/services/base-attachments.service.ts","../../../../libs/messages-common/src/components/upload-attachments/messages-upload-attachments.component.ts","../../../../libs/messages-common/src/components/upload-attachments/messages-upload-attachments.component.html","../../../../libs/messages-common/src/services/shared-methods/shared-methods.module.ts","../../../../libs/messages-common/src/components/upload-attachments/messages-upload-attachments.module.ts","../../../../libs/messages-common/src/components/create-message/employee-form/services/create-message-form-implementation.service.ts","../../../../libs/messages-common/src/components/upload-attachments/services/employee-upload-attachments.service.ts","../../../../libs/messages-common/src/utils/topic-placeholder-text-helper.ts","../../../../libs/messages-common/src/components/create-message/employee-form/services/employee-create-message-form.service.ts","../../../../libs/messages-common/src/components/create-message/employee-form/employee-create-message-form.component.ts","../../../../libs/messages-common/src/components/create-message/employee-form/employee-create-message-form.component.html","../../../../libs/messages-common/src/components/create-message/employee-form/employee-create-message-form.module.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-form/employee-create-mailout-form.service.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-form/employee-create-mailout-form.component.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-form/employee-create-mailout-form.component.html","../../../../libs/messages-common/src/components/create-message/employee-mailout-form/employee-create-mailout-form.module.ts","../../../../libs/messages-common/src/components/messages-preview/messages-preview.component.ts","../../../../libs/messages-common/src/components/messages-preview/messages-preview.component.html","../../../../libs/messages-common/src/components/messages-conversation-message/messages-conversation-message.component.ts","../../../../libs/messages-common/src/components/messages-conversation-message/messages-conversation-message.component.html","../../../../libs/messages-common/src/components/messages-preview/messages-preview.module.ts","../../../../libs/messages-common/src/components/messages-conversation-message/messages-conversation-message.module.ts","../../../../libs/messages-common/src/helpers/rxjs-operators.ts","../../../../libs/messages-common/src/utils/unknown-id-error.ts","../../../../libs/messages-common/src/components/messages-request-error/messages-request-error.component.ts","../../../../libs/messages-common/src/components/messages-request-error/messages-request-error.component.html","../../../../libs/messages-common/src/components/messages-request-error/messages-request-error.module.ts","../../../../libs/messages-common/src/components/upload-attachments/services/client-upload-attachments.service.ts","../../../../libs/messages-common/src/components/conversations-list/base-conversations-list-properties.service.ts","../../../../libs/messages-common/src/components/conversations-list/base-conversations-list-widget.component.ts","../../../../libs/messages-common/src/components/conversations-list/model/filter-service.model.ts","../../../../libs/messages-common/src/components/conversations-list/filter-conversations-list/filter-conversations-list.component.ts","../../../../libs/messages-common/src/components/conversations-list/filter-conversations-list/filter-conversations-list.component.html","../../../../libs/messages-common/src/components/conversations-list/base-conversations-list-widget.module.ts","../../../../libs/messages-common/src/components/conversations-list/model/params.model.ts","../../../../libs/messages-common/src/components/conversation-thread/models/conversations.model.ts","../../../../libs/messages-common/src/components/conversation-thread/services/abstract-base-messages-conversation-thread.service.ts","../../../../libs/messages-common/src/components/conversation-thread/component/base-conversation-thread-drafts.component.ts","../../../../libs/messages-common/src/components/conversation-thread/component/base-conversation-thread.component.ts","../../../../libs/messages-common/src/components/conversation-thread/base-messages-conversation-thread.module.ts","../../../../libs/messages-common/src/models/employee-mailouts-statuses.model.ts","../../../../libs/messages-common/src/components/messages-mailout-status/messages-mailout-status.component.ts","../../../../libs/messages-common/src/components/messages-mailout-status/messages-mailout-status.component.html","../../../../libs/messages-common/src/components/messages-mailout-status/messages-mailout-status.module.ts","../../../../libs/messages-common/src/models/employee-mailouts-status-labels.model.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-review/employee-mailout-review.service.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-review/employee-mailout-review.component.ts","../../../../libs/messages-common/src/components/create-message/employee-mailout-review/employee-mailout-review.component.html","../../../../libs/messages-common/src/components/create-message/employee-mailout-review/employee-mailout-review.module.ts","../../../../libs/messages-common/public_api.ts","../../../../libs/messages-common/backbase-messages-common.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessagesEncodingService {\n  /**\n   * Message base64 decode\n   *\n   * @param str Encoded string\n   */\n  b64Decode(str: string) {\n    return decodeURIComponent(\n      atob(str)\n        .split('')\n        .map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join(''),\n    );\n  }\n\n  /**\n   * Message base64 encode\n   *\n   * @param str Decoded string\n   */\n  b64Encode(str: string) {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (_match, p1) {\n        return String.fromCharCode(parseInt(p1, 16));\n      }),\n    );\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbPreventBubbleDown]',\n})\nexport class PreventBubbleDownDirective {\n  @HostListener('mousedown', ['$event']) onMouseDown($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PreventBubbleDownDirective } from './prevent-bubble-down.directive';\n\n@NgModule({\n  declarations: [PreventBubbleDownDirective],\n  imports: [CommonModule],\n  exports: [PreventBubbleDownDirective],\n})\nexport class PreventBubbleDownModule {}\n","import { Inject, Injectable } from '@angular/core';\nimport { merge, Observable, of, Subject, timer } from 'rxjs';\nimport { concatMap, map, switchMap } from 'rxjs/operators';\nimport { MessagecenterHttpService, UnreadConversationsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\n\nexport interface Badges {\n  token: string;\n  count: number;\n}\n\nconst MessagesToken = 'messages';\nconst MessagesPollPeriod = 5000;\nconst bbEventUnreadConversationCountUpdate = 'bb.event.unread-conversation-count.update';\n\n@Injectable()\nexport class MessagesUnreadConversationCountService {\n  private readonly resetSubject = new Subject();\n  private readonly subscriptionHandler = this.reset.bind(this);\n\n  constructor(\n    private readonly messagecenterService: MessagecenterHttpService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {\n    this.pubSub.subscribe(bbEventUnreadConversationCountUpdate, this.subscriptionHandler);\n  }\n\n  /**\n   * Conversations count poll source\n   */\n  source() {\n    return (): Observable<Badges> =>\n      merge(this.resetSubject, of(undefined)).pipe(\n        switchMap(() =>\n          timer(0, MessagesPollPeriod).pipe(\n            concatMap(() => this.getUnreadConversationCount()),\n            map(body => ({ token: MessagesToken, count: body ? body.unreadCount : 0 })),\n          ),\n        ),\n      );\n  }\n\n  /**\n   * Get conversations count\n   *\n   * @returns Get conversations count stream\n   */\n  getUnreadConversationCount(): Observable<UnreadConversationsGetResponseBody | null> {\n    return this.messagecenterService.getUnreadConversationsCount();\n  }\n\n  private reset() {\n    this.resetSubject.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { MessagesUnreadConversationCountService } from './messages-unread-conversation-count.service';\nimport { MessagecenterHttpService } from '@backbase/messages-v5-http-ang';\nimport { PUBSUB } from '@backbase/foundation-ang/web-sdk';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      pipelineProcessors: [\n        {\n          name: 'counters-badge',\n          provider: {\n            provide: MessagesUnreadConversationCountService,\n            useClass: MessagesUnreadConversationCountService,\n            deps: [MessagecenterHttpService, PUBSUB],\n          },\n        },\n      ],\n    }),\n  ],\n  providers: [MessagesUnreadConversationCountService],\n})\nexport class MessagesUnreadConversationCountModule {}\n","import { Inject, Injectable } from '@angular/core';\nimport { merge, Observable, of, Subject, timer } from 'rxjs';\nimport { concatMap, switchMap } from 'rxjs/operators';\nimport { ConversationCounterResponseBody, EmployeeHttpService } from '@backbase/messages-v5-http-ang';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\n\nconst MessagesPollPeriod = 5000;\nconst bbEventUnreadConversationCountUpdate = 'bb.event.unread-conversation-count.update';\n\n@Injectable()\nexport class MessagesEmployeeConversationCountersService {\n  private readonly resetSubject = new Subject();\n  private readonly subscriptionHandler = this.reset.bind(this);\n\n  constructor(private readonly service: EmployeeHttpService, @Inject(PUBSUB) private readonly pubSub: Pubsub) {\n    this.pubSub.subscribe(bbEventUnreadConversationCountUpdate, this.subscriptionHandler);\n  }\n\n  /**\n   * Conversations count poll source\n   */\n  source() {\n    return (): Observable<ConversationCounterResponseBody | null> =>\n      merge(this.resetSubject, of(undefined)).pipe(\n        switchMap(() => timer(0, MessagesPollPeriod).pipe(concatMap(() => this.getConversationCounters()))),\n      );\n  }\n\n  /**\n   * Get conversations count\n   *\n   * @returns Get conversation counters stream\n   */\n  getConversationCounters(): Observable<ConversationCounterResponseBody | null> {\n    return this.service.getConversationsCounter();\n  }\n\n  private reset() {\n    this.resetSubject.next();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport { EmployeeHttpService } from '@backbase/messages-v5-http-ang';\nimport { MessagesEmployeeConversationCountersService } from './messages-employee-conversation-counters.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      pipelineProcessors: [\n        {\n          name: 'tab-counters-badge',\n          provider: {\n            provide: MessagesEmployeeConversationCountersService,\n            useClass: MessagesEmployeeConversationCountersService,\n            deps: [EmployeeHttpService, PUBSUB],\n          },\n        },\n      ],\n    }),\n  ],\n  providers: [MessagesEmployeeConversationCountersService],\n})\nexport class MessagesEmployeeConversationCountersModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export enum ManipulationType {\n  resolve = 'resolve',\n  unresolve = 'unresolve',\n  assign = 'assign',\n  unassign = 'unassign',\n  discard = 'discard',\n  discardDraft = 'discardDraft',\n  discardPreview = 'discardPreview',\n  deleteTopic = 'deleteTopic',\n  deleteMailout = 'deleteMailout',\n}\n\nexport interface MessagesConfirmationModalModel {\n  opened: boolean;\n  type?: ManipulationType;\n}\n\nexport interface TopicsConfirmationModalModel extends MessagesConfirmationModalModel {\n  topicId?: string | null;\n}\n\nexport interface MailoutConfirmationModal extends MessagesConfirmationModalModel {\n  mailoutId?: string;\n}\n","import { Inject, Injectable, TemplateRef } from '@angular/core';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\n\n@Injectable()\nexport class SharedMethodsService {\n  constructor(\n    private readonly notificationService: NotificationService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {}\n\n  /**\n   * Check is form valid\n   *\n   * @param form Form object\n   * @param prevValue Previous value\n   * @returns Is form valid flag\n   */\n  isFormInvalid(form: FormGroup | undefined, prevValue?: { [key: string]: any }): boolean {\n    if (form && form.dirty) {\n      const formVal = form.value || {};\n      const keys = Object.keys(formVal);\n\n      for (const field of keys) {\n        if (prevValue) {\n          if (prevValue[field] !== formVal[field]) {\n            return true;\n          }\n        } else if (formVal[field]) {\n          return Array.isArray(formVal[field]) ? formVal[field].length > 0 : true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if form has value\n   *\n   * @param form Form object\n   * @returns Has form value flag\n   */\n  hasFormValue(form: FormGroup | undefined): boolean {\n    const formVal = (form && form.value) || {};\n    const keys = Object.keys(formVal);\n\n    for (const field of keys) {\n      if (formVal[field]) {\n        return Array.isArray(formVal[field]) ? formVal[field].length > 0 : true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles a given event\n   *\n   * @param eventName Event name\n   */\n  eventBusFactory(eventName: string): Observable<any> {\n    return new Observable(observer => {\n      const handler = (data: any) => observer.next(data);\n      this.pubSub.subscribe(eventName, handler);\n\n      return () => {\n        this.pubSub.unsubscribe(eventName, handler);\n      };\n    });\n  }\n\n  /**\n   * Publish a given event\n   *\n   * @template T\n   * @param eventName Event name\n   * @param body Event data\n   */\n  eventBusPublish<T>(eventName: string, body: T) {\n    this.pubSub.publish(eventName, body);\n  }\n\n  /**\n   * Get error message from error body\n   *\n   * @param error Error value\n   * @returns Error message\n   */\n  getErrorMessage(error: HttpErrorResponse | string): string {\n    return typeof error !== 'string' ? (error.error && error.error.message) || error.message : error;\n  }\n\n  /**\n   * Open notification\n   *\n   * @param header Notification header\n   * @param modifier Notification type\n   * @param message Notification message\n   */\n  openNotification(header: TemplateRef<any> | string | undefined, modifier = 'success' as any, message = '') {\n    if (!header) return;\n    this.notificationService.showNotification({\n      header,\n      message,\n      modifier,\n      dismissible: false,\n    });\n  }\n\n  /**\n   * Map response to take body and total count\n   *\n   * @template T\n   * @param rawData Response data\n   * @returns Response body and total count\n   */\n  processData<T>(rawData: HttpResponse<T>): { data: T | []; totalCount: number } {\n    const totalCount: number = (rawData && parseInt(String(rawData.headers.get('x-total-count')), 10)) || 0;\n\n    return {\n      data: (rawData && rawData.body) || [],\n      totalCount,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ManipulationType, MessagesConfirmationModalModel } from './manipulation-confirm-modal-types.model';\nimport { SharedMethodsService } from '../../services/shared-methods/shared-methods.service';\n\n@Injectable()\nexport class MessagesManipulationConfirmModalService {\n  private readonly initialModalVal: MessagesConfirmationModalModel = {\n    opened: false,\n    type: undefined,\n  };\n  private readonly emitToggleModal = new BehaviorSubject(this.initialModalVal);\n\n  /**\n   * Toggle modal event emitter\n   */\n  public emitToggleModal$: Observable<MessagesConfirmationModalModel> = this.emitToggleModal.asObservable();\n\n  constructor(private readonly shared: SharedMethodsService) {}\n\n  /**\n   * Toggle confirm modal\n   *\n   * @param shouldOpen Should open modal flag\n   * @param type Manipulation type\n   * @param form Form data\n   * @param prevValue Previous value\n   */\n  toggleModal(\n    shouldOpen: boolean,\n    type?: ManipulationType | undefined,\n    form?: FormGroup | undefined,\n    prevValue?: { [key: string]: any },\n  ) {\n    let opened = shouldOpen;\n    if (type === ManipulationType.discard) {\n      opened = this.shared.isFormInvalid(form, prevValue);\n    }\n\n    this.emitToggleModal.next({ opened, type });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class MessagesUploadAttachmentsService {\n  readonly reset$ = new Subject<boolean>();\n\n  reset(discard = false) {\n    this.reset$.next(discard);\n  }\n}\n","import { Observable } from 'rxjs';\nimport {\n  DraftPostResponseBody,\n  MessageDraftGetResponseBody,\n  MessageDraftPutRequestBody,\n  PresentationMessagePostResponseBody,\n  TopicsGetResponseBody,\n} from '@backbase/messages-v5-http-ang';\n\nexport abstract class BaseCreateMessageFormService<T> {\n  abstract getTopics(): Observable<TopicsGetResponseBody[] | null>;\n  abstract createMessage(params: T): Observable<PresentationMessagePostResponseBody | null>;\n  abstract saveDraft?(params: T): Observable<DraftPostResponseBody | null>;\n  abstract getDraft?(id: string): Observable<MessageDraftGetResponseBody | null>;\n  abstract deleteDraft?(id: string): Observable<any>;\n  abstract updateDraft?(id: string, body: MessageDraftPutRequestBody): Observable<any>;\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject, EMPTY, Observable, of, PartialObserver, Subject } from 'rxjs';\nimport { filter, finalize, first, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport {\n  ManipulationType,\n  MessagesConfirmationModalModel,\n} from '../../messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { BaseCreateMessageFormService } from './base-create-message-form.service';\nimport { MessageDraftGetResponseBody, TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { SimpleFormModel } from '../../../models/simple-form.model';\nimport { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';\nimport { FileObject } from '../../upload-attachments/model/messages-upload-attachments.model';\n\n@Component({\n  template: '',\n  providers: [MessagesManipulationConfirmModalService, MessagesUploadAttachmentsService],\n})\nexport class BaseCreateMessageFormComponent<T> implements OnInit, OnDestroy {\n  /**\n   * Input stream of reset signals that will trigger form reset.\n   */\n  @Input() reset: Observable<void> | undefined;\n\n  /**\n   * Input for maximum file attachment size in megabytes\n   */\n  @Input() maxAttachmentSize: string | undefined;\n\n  /**\n   * Input for maximum characters length for name field value\n   */\n  @Input() maxMailoutNameLength: number | undefined;\n\n  /**\n   * Input for maximum characters length for subject field value\n   */\n  @Input() maxSubjectLength: number | undefined;\n\n  /**\n   * Input for maximum characters length for message field value\n   */\n  @Input() maxMessageLength: number | undefined;\n\n  /**\n   * The parent modal open/closed state.\n   */\n  @Input() readonly isModalOpen: boolean | undefined;\n  /**\n   * Input draft id to get draft and prefill compose form with it\n   */\n  @Input()\n  set draftId(value: string | undefined) {\n    this.draftId$.next(value);\n  }\n\n  /**\n   * The draft ID getter.\n   */\n  get draftId() {\n    return this.draftId$.getValue();\n  }\n\n  /**\n   * The event that's fired after confirm button is pressed.\n   */\n  @Output() confirm = new EventEmitter<string | null>();\n\n  /**\n   * The event that's fired after cancel button is pressed.\n   */\n  @Output() cancel = new EventEmitter<void>();\n\n  /**\n   * The notification for the successful compose message operation.\n   */\n  @ViewChild('messageComposeSuccess') messageComposeSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the successfully saved draft.\n   */\n  @ViewChild('messageSaveDraftSuccess') messageSaveDraftSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the successfully saved draft.\n   */\n  @ViewChild('messageUpdateDraftSuccess') messageUpdateDraftSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the compose message error.\n   */\n  @ViewChild('messageComposeError') messageComposeErrorTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the save draft error.\n   */\n  @ViewChild('messageSaveDraftError') messageSaveDraftErrorTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the update draft error.\n   */\n  @ViewChild('messageUpdateDraftError') messageUpdateDraftErrorTpl: TemplateRef<any> | undefined;\n\n  readonly hostRef = this;\n\n  /**\n   * The file attachments array.\n   */\n  attachments: Array<FileObject> | undefined;\n\n  /**\n   * The blank new message form with the initial values.\n   */\n  newMessageFormGroup: FormGroup;\n\n  /**\n   * The draft form value.\n   */\n  draftFormValue: { [key: string]: any } | undefined;\n\n  /**\n   * Confirmation modal parameters.\n   */\n  confirmationModal: MessagesConfirmationModalModel = {\n    opened: false,\n    type: undefined,\n  };\n\n  /**\n   * The flag indicating if the form is loading.\n   */\n  formLoading = false;\n\n  private readonly topics$ = new BehaviorSubject<TopicsGetResponseBody[] | null | undefined>(undefined);\n\n  /**\n   * The stream with topics.\n   */\n  readonly topics: Observable<TopicsGetResponseBody[] | null | undefined> = this.topics$.asObservable();\n\n  /**\n   * The manipulationType enum ( `resolve`, `unresolve`, `assign`, `unassign`, `discard`,\n   * `discardDraft`, `discardPreview`, `deleteTopic`, `deleteMailout`)\n   */\n  readonly manipulationTypes = ManipulationType;\n  private readonly unsubscribe$ = new Subject<undefined>();\n  private readonly draftId$ = new BehaviorSubject<string | undefined>(undefined);\n\n  constructor(\n    readonly sharedService: SharedMethodsService,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    readonly cd: ChangeDetectorRef,\n    readonly createMessageFormService: BaseCreateMessageFormService<T>,\n    readonly fb: FormBuilder,\n    readonly encodingService: MessagesEncodingService,\n    readonly uploadService: MessagesUploadAttachmentsService,\n  ) {\n    this.newMessageFormGroup = this.fb.group({\n      topic: ['', Validators.required],\n      subject: ['', Validators.required],\n      body: ['', Validators.required],\n      attachments: [],\n    });\n  }\n\n  ngOnInit() {\n    if (this.reset) {\n      this.reset.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n        this.confirmModalService.toggleModal(\n          true,\n          this.manipulationTypes.discard,\n          this.newMessageFormGroup,\n          this.draftFormValue,\n        );\n      });\n    }\n\n    this.createMessageFormService.getTopics().subscribe(res => {\n      this.restoreTopicSelection(res);\n      this.topics$.next(res);\n    });\n\n    this.draftId$\n      .pipe(\n        filter(id => !!(id && id.length)),\n        switchMap(id => this.getDrafts(id)),\n      )\n      .subscribe();\n\n    this.confirmModalService.emitToggleModal$.pipe(takeUntil(this.unsubscribe$)).subscribe(({ opened, type }) => {\n      this.confirmationModal = { opened, type };\n      if (!opened && type === ManipulationType.discard) {\n        this.onCancel();\n      }\n      this.cd.detectChanges();\n    });\n  }\n\n  /**\n   * The method to get a simple value from the form.\n   *\n   * @param simpleFormModel Message data\n   */\n  getSimpleFormVal({ body, subject, topic, attachments }: SimpleFormModel) {\n    return {\n      ...(body && body.length && { body: this.encodingService.b64Encode(body) }),\n      ...(subject && subject.length && { subject }),\n      ...(topic && topic.id && { topic: topic.id }),\n      ...(attachments && attachments.length && { attachments: attachments.map(item => item.id) }),\n    };\n  }\n\n  resetFormOnElementBlur() {\n    if (!this.isModalOpen) {\n      setTimeout(() => {\n        this.newMessageFormGroup.reset();\n      }, 0);\n    }\n  }\n\n  /**\n   * The method to create a message.\n   *\n   * @param value Message data\n   */\n  createMessage(value: T) {\n    this.formLoading = true;\n    this.newMessageFormGroup.disable();\n\n    this.createMessageFormService\n      .createMessage(value)\n      .pipe(\n        first(),\n        switchMap(() => {\n          if (this.createMessageFormService.deleteDraft && this.draftId) {\n            return this.createMessageFormService.deleteDraft(this.draftId);\n          }\n\n          return of(undefined);\n        }),\n        finalize(() => {\n          this.formLoading = false;\n        }),\n      )\n      .subscribe(this.responseHandler(this.messageComposeSuccessTpl, this.messageComposeErrorTpl));\n  }\n\n  /**\n   * The method to save a message as a draft.\n   *\n   * @param value Draft data\n   */\n  onSave(value: T) {\n    this.newMessageFormGroup.disable();\n\n    if (\n      this.sharedService.hasFormValue(this.newMessageFormGroup) &&\n      this.sharedService.isFormInvalid(this.newMessageFormGroup, this.draftFormValue)\n    ) {\n      if (this.draftId) {\n        this.updateDraft(this.draftId, value);\n      } else {\n        this.saveDraft(value);\n      }\n    } else {\n      this.onCancel();\n    }\n  }\n\n  /**\n   * The method to get the draft and prefill the compose form with it.\n   *\n   * @param id Draft id\n   */\n  getDrafts(id?: string): Observable<MessageDraftGetResponseBody | null> {\n    if (this.createMessageFormService.getDraft && id) {\n      return this.createMessageFormService.getDraft(id).pipe(\n        map(res => {\n          const drafts = res || {};\n          const formValue: any = {};\n          const topics = this.topics$.getValue();\n\n          for (const [key, value] of Object.entries(drafts)) {\n            formValue[key] = value;\n\n            if (this.newMessageFormGroup.controls.hasOwnProperty(key)) {\n              formValue[key] = this.handleFormValues(key, value, topics);\n\n              if (formValue[key]) {\n                this.newMessageFormGroup.controls[key].setValue(formValue[key]);\n              }\n            }\n          }\n\n          this.draftFormValue = formValue;\n          this.newMessageFormGroup.markAsPristine();\n\n          return res;\n        }),\n      );\n    }\n\n    return EMPTY;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  /**\n   * The method to resolve the confirmation modal.\n   */\n  confirmConfirmationModal() {\n    if (this.confirmationModal && this.confirmationModal.type === ManipulationType.discard) {\n      this.onCancel();\n    }\n\n    this.confirmModalService.toggleModal(false);\n  }\n\n  /**\n   * The method to cancel the confirmation modal.\n   */\n  onCancel() {\n    this.resetToInit(true);\n    this.cancel.emit();\n  }\n\n  /**\n   * The method to get any errors generated by failing validation, or null if there are no errors.\n   *\n   * @param field Field name\n   * @param type Error type\n   */\n  hasError(field: string, type: string): boolean {\n    const control = this.getControl(field);\n\n    return control?.errors?.[type];\n  }\n\n  /**\n   * The method that defines whether the control is valid or not.\n   *\n   * @param field Field name\n   * @returns Is form field valid flag\n   */\n  isInvalidControl(field: string): boolean {\n    const control = this.getControl(field);\n\n    return !!control && control.touched && control.invalid;\n  }\n\n  private saveDraft(value: T) {\n    if (this.createMessageFormService.saveDraft) {\n      this.createMessageFormService\n        .saveDraft(value)\n        .pipe(first())\n        .subscribe(this.responseHandler(this.messageSaveDraftSuccessTpl, this.messageSaveDraftErrorTpl));\n    }\n  }\n\n  private updateDraft(draftId: string, value: T) {\n    if (this.createMessageFormService.updateDraft) {\n      this.createMessageFormService\n        .updateDraft(draftId, value)\n        .pipe(first())\n        .subscribe(this.responseHandler(this.messageUpdateDraftSuccessTpl, this.messageUpdateDraftErrorTpl));\n    }\n  }\n\n  private handleFormValues(key: string, value: any, topics?: TopicsGetResponseBody[] | null) {\n    if (key === 'body') {\n      return this.encodingService.b64Decode(value as string);\n    }\n\n    if (key === 'topic' && topics) {\n      const existingTopic = topics.find(topic => topic.id === value.id);\n\n      return existingTopic ? existingTopic : '';\n    }\n\n    if (key === 'attachments') {\n      this.attachments = [...value];\n    }\n\n    return value;\n  }\n\n  private responseHandler(successTpl: any, errorTpl: any): PartialObserver<any> {\n    return {\n      next: res => {\n        this.sharedService.openNotification(successTpl ? successTpl : '');\n\n        this.confirm.emit(res && res.id);\n      },\n      error: error => {\n        const errorMessage = this.sharedService.getErrorMessage(error) || errorTpl;\n        this.sharedService.openNotification(errorMessage, 'error');\n        this.newMessageFormGroup.enable();\n      },\n      complete: () => this.resetToInit(),\n    };\n  }\n\n  protected resetToInit(isFormDiscard = false) {\n    this.newMessageFormGroup.enable();\n    this.newMessageFormGroup.reset();\n    this.draftFormValue = undefined;\n    this.uploadService.reset(isFormDiscard);\n  }\n\n  private getControl(field: string): AbstractControl | undefined {\n    return this.newMessageFormGroup && this.newMessageFormGroup.controls[field];\n  }\n\n  private restoreTopicSelection(topics: TopicsGetResponseBody[] | null) {\n    topics?.map(topic => {\n      if (topic.id === this.newMessageFormGroup.controls['topic']?.value?.id) {\n        this.newMessageFormGroup.controls['topic'].setValue(topic);\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseCreateMessageFormComponent } from './base-create-message-form.component';\n\n@NgModule({\n  declarations: [BaseCreateMessageFormComponent],\n  imports: [CommonModule],\n})\nexport class BaseCreateMessageFormModule {}\n","import { Observable } from 'rxjs';\n\nexport function snapshot<T>(source: Observable<T>): T | undefined {\n  let result: T | undefined;\n\n  const subscr = source.subscribe((res: T) => {\n    result = res;\n  });\n  subscr.unsubscribe();\n\n  return result;\n}\n","import { combineLatest, defer, Observable, of } from 'rxjs';\nimport { map, publishReplay, refCount } from 'rxjs/operators';\n\nexport const getPropertyValue = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n\nexport const defaultModelObservable = <T>(value: T): Observable<T> =>\n  defer(() => of(value)).pipe(publishReplay(1), refCount());\n","export const modelItemToBoolean = (value: string | boolean): boolean => {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n\n  return value.trim() === 'true';\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { defaultModelObservable } from '../../../utils/item-model-property';\nimport { Observable } from 'rxjs';\n\nexport const DefaultWidgetProperties = {\n  debounceTime: 500,\n  maxAttachmentSize: '10',\n  maxMailoutNameLength: 255,\n  maxSubjectLength: 100,\n  maxMessageLength: 300,\n  minSearchLength: 1,\n  modalHeader: 'New message',\n  hideComposeButton: false,\n  createMessageOpenEventName: 'bb.event.messages.create.message.open',\n  createMessageClosedEventName: 'bb.event.messages.create.message.close',\n  senderDisplayName: 'Backbase',\n  shouldPreDefineUser: false,\n  isPreDefinedUserReadonly: false,\n};\n\n@Injectable()\nexport class BaseCreateMessageModalPropertiesService {\n  constructor(@Optional() private readonly itemModel?: ItemModel) {}\n\n  /**\n   * Max attachment size\n   */\n  get maxAttachmentSize(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxAttachmentSize);\n    }\n\n    return this.itemModel.property('maxAttachmentSize', DefaultWidgetProperties.maxAttachmentSize);\n  }\n\n  /**\n   * Max message length\n   */\n  get maxMessageLength(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxMessageLength);\n    }\n\n    return this.itemModel.property('maxMessageLength', DefaultWidgetProperties.maxMessageLength);\n  }\n\n  /**\n   * Max mailout name length\n   */\n  get maxMailoutNameLength(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxMailoutNameLength);\n    }\n\n    return this.itemModel.property('maxMailoutNameLength', DefaultWidgetProperties.maxMailoutNameLength);\n  }\n\n  /**\n   * Max subject length\n   */\n  get maxSubjectLength(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.maxSubjectLength);\n    }\n\n    return this.itemModel.property('maxSubjectLength', DefaultWidgetProperties.maxSubjectLength);\n  }\n\n  /**\n   * Modal header\n   */\n  get modalHeader(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.modalHeader);\n    }\n\n    return this.itemModel.property('modalHeader', DefaultWidgetProperties.modalHeader);\n  }\n\n  /**\n   * Debounce time\n   */\n  get debounceTime(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.debounceTime);\n    }\n\n    return this.itemModel.property('debounceTime', DefaultWidgetProperties.debounceTime);\n  }\n\n  /**\n   * Min search length\n   */\n  get minSearchLength(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.minSearchLength);\n    }\n\n    return this.itemModel.property('minSearchLength', DefaultWidgetProperties.minSearchLength);\n  }\n\n  /**\n   * Flag to hide or show compose button\n   */\n  get hideComposeButton(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.hideComposeButton);\n    }\n\n    return this.itemModel.property('hideComposeButton', DefaultWidgetProperties.hideComposeButton);\n  }\n\n  /**\n   * Open event for create message modal\n   */\n  get createMessageOpenEventName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.createMessageOpenEventName);\n    }\n\n    return this.itemModel.property('createMessageOpenEventName', DefaultWidgetProperties.createMessageOpenEventName);\n  }\n\n  /**\n   * Close event for create message modal\n   */\n  get createMessageClosedEventName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.createMessageClosedEventName);\n    }\n\n    return this.itemModel.property(\n      'createMessageClosedEventName',\n      DefaultWidgetProperties.createMessageClosedEventName,\n    );\n  }\n\n  /**\n   * Flag to show or hide sender name\n   */\n  get senderDisplayName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.senderDisplayName);\n    }\n\n    return this.itemModel.property('senderDisplayName', DefaultWidgetProperties.senderDisplayName);\n  }\n\n  /**\n   * Flag to predefine or not user input\n   */\n  get shouldPreDefineUser(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.shouldPreDefineUser);\n    }\n\n    return this.itemModel.property('shouldPreDefineUser', DefaultWidgetProperties.shouldPreDefineUser);\n  }\n\n  /**\n   * Flag to disable predefined user input\n   */\n  get isPreDefinedUserReadonly(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.isPreDefinedUserReadonly);\n    }\n\n    return this.itemModel.property('isPreDefinedUserReadonly', DefaultWidgetProperties.isPreDefinedUserReadonly);\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { BaseCreateMessageModalPropertiesService } from './base-create-message-modal-properties.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { snapshot } from '../../../utils/snapshot';\nimport { getPropertyValue } from '../../../utils/item-model-property';\nimport { modelItemToBoolean } from '../../../utils/type-helpers';\n\n@Component({\n  template: '',\n})\nexport class BaseCreateMessageModalComponent implements OnDestroy {\n  static counter = 0;\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `base-create-message-modal-${BaseCreateMessageModalComponent.counter++}`;\n  private readonly resetSubject = new Subject<undefined>();\n\n  /**\n   * The stream with the form reset triggers.\n   */\n  readonly resetStream = this.resetSubject.asObservable();\n  readonly hostRef = this;\n\n  /**\n   * The stream with the maximum attachment size.\n   */\n  @Input('maxAttachmentSize') set maxAttachmentSizeValue(value: string | number) {\n    this.maxAttachmentSize$$.next(String(value));\n  }\n\n  /**\n   * The stream with the maximum name length.\n   */\n  @Input('maxMailoutNameLength') set maxMailoutNameLengthValue(value: string | number) {\n    this.maxMailoutNameLength$$.next(Number(value));\n  }\n\n  /**\n   * The stream with the maximum subject length.\n   */\n  @Input('maxSubjectLength') set maxSubjectLengthValue(value: string | number) {\n    this.maxSubjectLength$$.next(Number(value));\n  }\n\n  /**\n   * The stream with the maximum message length.\n   */\n  @Input('maxMessageLength') set maxMessageLengthValue(value: string | number) {\n    this.maxMessageLength$$.next(Number(value));\n  }\n\n  /**\n   * The stream with the modal header.\n   */\n  @Input('modalHeader') set modalHeaderValue(value: string) {\n    this.modalHeader$$.next(value);\n  }\n\n  /**\n   * The stream with a flag indicating if the Compose button is hidden.\n   */\n  @Input('hideComposeButton') set hideComposeButtonValue(value: string | boolean) {\n    this.hideComposeButton$$.next(modelItemToBoolean(value));\n  }\n\n  /**\n   * Event published to open Create message modal\n   */\n  @Input('createMessageOpenEventName') set createMessageOpenEventNameValue(value: string) {\n    this.createMessageOpenEventName$$.next(value);\n  }\n\n  /**\n   * Event published when Create message modal widget was closed\n   */\n  @Input('createMessageClosedEventName') set createMessageClosedEventNameValue(value: string) {\n    this.createMessageClosedEventName$$.next(value);\n  }\n\n  /**\n   * The draft ID.\n   */\n  draftId: string | undefined;\n\n  /**\n   * The flag indicating if the modal is opened or closed.\n   */\n  modalOpened = false;\n\n  /**\n   * The modal options.\n   */\n  modalOptions = {\n    size: 'md',\n    beforeDismiss: () => {\n      this.resetSubject.next();\n\n      return false;\n    },\n  };\n\n  private readonly maxAttachmentSize$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly maxMailoutNameLength$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxSubjectLength$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxMessageLength$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly modalHeader$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly hideComposeButton$$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly createMessageOpenEventName$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly createMessageClosedEventName$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  private readonly destroy$ = new Subject<void>();\n\n  /**\n   * The stream with the maximum name size.\n   */\n  readonly maxMailoutNameLength: Observable<number> = getPropertyValue(\n    this.maxMailoutNameLength$$,\n    this.properties.maxMailoutNameLength,\n  );\n\n  /**\n   * The stream with the maximum subject size.\n   */\n  readonly maxSubjectLength: Observable<number> = getPropertyValue(\n    this.maxSubjectLength$$,\n    this.properties.maxSubjectLength,\n  );\n\n  /**\n   * The stream with the maximum attachment size.\n   */\n  readonly maxAttachmentSize: Observable<string> = getPropertyValue(\n    this.maxAttachmentSize$$,\n    this.properties.maxAttachmentSize,\n  );\n\n  /**\n   * The stream with the maximum message length.\n   */\n  readonly maxMessageLength: Observable<number> = getPropertyValue(\n    this.maxMessageLength$$,\n    this.properties.maxMessageLength,\n  );\n\n  /**\n   * The stream with the modal header text.\n   */\n  readonly modalHeader: Observable<string> = getPropertyValue(this.modalHeader$$, this.properties.modalHeader);\n\n  /**\n   * The stream with a flag indicating if the Compose button is hidden.\n   */\n  readonly hideComposeButton: Observable<boolean> = getPropertyValue(\n    this.hideComposeButton$$,\n    this.properties.hideComposeButton,\n  );\n\n  /**\n   * Event published to open Create message modal\n   */\n  readonly createMessageOpenEventName: Observable<string> = getPropertyValue(\n    this.createMessageOpenEventName$$,\n    this.properties.createMessageOpenEventName,\n  );\n\n  /**\n   * Event published when Create message modal widget was closed\n   */\n  readonly createMessageClosedEventName: Observable<string> = getPropertyValue(\n    this.createMessageClosedEventName$$,\n    this.properties.createMessageClosedEventName,\n  );\n\n  constructor(protected properties: BaseCreateMessageModalPropertiesService, protected shared: SharedMethodsService) {\n    this.createMessageOpenEventName\n      .pipe(\n        switchMap(eventName => this.shared.eventBusFactory(eventName)),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(obj => this.openModal(obj && obj.draftId));\n  }\n\n  /**\n   * The method to open the modal.\n   *\n   * @param id\n   */\n  openModal(id?: string) {\n    this.modalOpened = true;\n    this.draftId = id;\n  }\n\n  /**\n   * The method to close the modal.\n   */\n  closeModal() {\n    this.modalOpened = false;\n\n    const eventName = snapshot(this.createMessageClosedEventName) as string;\n    this.shared.eventBusPublish<Record<string, unknown>>(eventName, {});\n    this.draftId = undefined;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseCreateMessageModalComponent } from './base-create-message-modal.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BaseCreateMessageModalComponent],\n})\nexport class BaseCreateMessageModalModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  template: '',\n})\nexport class BaseModalComponent {\n  static counter = 0;\n\n  /**\n   * Input that toggles opening/closing the modal\n   */\n  @Input() isOpen = false;\n  /**\n   * Event emitted when modal was resolved\n   */\n  @Output() confirm = new EventEmitter<string | undefined>();\n  /**\n   * Event emitted when modal was dismissed\n   */\n  @Output() cancel = new EventEmitter<void>();\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `base-modal-component-${BaseModalComponent.counter++}`;\n  readonly hostRef = this;\n\n  /**\n   * The method to reset the form and the cancellation modal.\n   */\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  /**\n   * The method to confirm the value change.\n   *\n   * @param value Changed value\n   */\n  onConfirm(value?: string) {\n    this.confirm.emit(value);\n  }\n}\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ManipulationType } from './manipulation-confirm-modal-types.model';\nimport { BaseModalComponent } from '../base-modal/base-modal.component';\n\n@Component({\n  selector: 'bb-messages-manipulation-confirm-modal',\n  templateUrl: './messages-manipulation-confirm-modal.component.html',\n})\nexport class MessagesManipulationConfirmModalComponent extends BaseModalComponent {\n  /**\n   * Input type that represents appropriate header with message in confirm modal window\n   */\n  @Input() type: ManipulationType | undefined;\n\n  /**\n   * The `resolve` manipulation type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  resolveType = ManipulationType.resolve;\n\n  /**\n   * The unresolve `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  unresolveType = ManipulationType.unresolve;\n\n  /**\n   * The assign `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  assignType = ManipulationType.assign;\n\n  /**\n   * The unassign `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  unassignType = ManipulationType.unassign;\n\n  /**\n   * The discard `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  discardType = ManipulationType.discard;\n\n  /**\n   * The discardDraft `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  discardDraftType = ManipulationType.discardDraft;\n\n  /**\n   * The discardPreview `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  discardPreviewType = ManipulationType.discardPreview;\n\n  /**\n   * The deleteTopicType `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  deleteTopicType = ManipulationType.deleteTopic;\n\n  /**\n   * The deleteMailoutType `manipulation` type. Extracted from the `ManipulationType` enum into a separate property\n   * to be used in the template for localization purposes.\n   */\n  deleteMailoutType = ManipulationType.deleteMailout;\n\n  constructor() {\n    super();\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesManipulationConfirmModalCustomizable]',\n})\nexport class MessagesManipulationConfirmModalCustomizableDirective extends BbTemplate<\n  MessagesManipulationConfirmModalComponent,\n  undefined\n> {}\n","<ng-container bbMessagesManipulationConfirmModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbMessagesManipulationConfirmModalCustomizable let-host>\n  <bb-modal-ui [isOpen]=\"host.isOpen\" (cancel)=\"host.onCancel()\" aria-describedby=\"manipulation-modal-content\">\n    <div id=\"manipulation-modal-content\">\n      <ng-container [ngSwitch]=\"host.type\">\n        <ng-container *ngSwitchCase=\"host.resolveType\">\n          <ng-container *ngTemplateOutlet=\"resolveConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.unresolveType\">\n          <ng-container *ngTemplateOutlet=\"unresolveConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.assignType\">\n          <ng-container *ngTemplateOutlet=\"assignConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.unassignType\">\n          <ng-container *ngTemplateOutlet=\"unassignConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardType\">\n          <ng-container *ngTemplateOutlet=\"discardConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardPreviewType\">\n          <ng-container *ngTemplateOutlet=\"discardConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.discardDraftType\">\n          <ng-container *ngTemplateOutlet=\"discardDraftConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.deleteTopicType\">\n          <ng-container *ngTemplateOutlet=\"deleteTopicConfirmTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.deleteMailoutType\">\n          <ng-container *ngTemplateOutlet=\"deleteMailoutConfirmTemplate\"></ng-container>\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <ng-container [ngSwitch]=\"host.type\">\n            <button\n              *ngSwitchCase=\"host.discardType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard button text@@messages.manipulationConfirmModalComponent.discardButton\">Discard</span>\n            </button>\n            <button\n              *ngSwitchCase=\"host.discardPreviewType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard button text@@messages.manipulationConfirmModalComponent.discardButton\">Discard</span>\n            </button>\n\n            <button\n              *ngSwitchCase=\"host.discardDraftType\"\n              bbButton\n              class=\"bb-button-bar__button\"\n              color=\"danger\"\n              data-role=\"discard-draft-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Discard draft button text@@messages.manipulationConfirmModalComponent.discardDraftButton\"\n                >Delete</span\n              >\n            </button>\n\n            <ng-container *ngSwitchCase=\"host.deleteTopicType\">\n              <ng-container *ngTemplateOutlet=\"deleteButton\"></ng-container>\n            </ng-container>\n\n            <ng-container *ngSwitchCase=\"host.deleteMailoutType\">\n              <ng-container *ngTemplateOutlet=\"deleteButton\"></ng-container>\n            </ng-container>\n\n            <button\n              *ngSwitchDefault\n              bbButton\n              class=\"bb-button-bar__button\"\n              data-role=\"confirm-manipulation\"\n              (click)=\"host.onConfirm()\"\n            >\n              <span i18n=\"Submit button text@@messages.manipulationConfirmModalComponent.submitButton\">Submit</span>\n            </button>\n\n            <ng-template #deleteButton>\n              <button\n                bbButton\n                class=\"bb-button-bar__button\"\n                color=\"danger\"\n                data-role=\"delete-manipulation\"\n                (click)=\"host.onConfirm()\"\n              >\n                <span i18n=\"Delete button text@@messages.manipulationConfirmModalComponent.deleteButton\">Delete</span>\n              </button>\n            </ng-template>\n          </ng-container>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"secondary\"\n            data-role=\"cancel-manipulation\"\n            (click)=\"host.onCancel()\"\n          >\n            <span i18n=\"Cancel button text@@messages.manipulationConfirmModalComponent.cancelButton\">Cancel</span>\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n\n  <ng-template #resolveConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Mark this conversation as resolved?\"\n          i18n-heading=\"\n            Mark this conversation as\n            resolved?@@messages.manipulationConfirmModalComponent.resolveConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to mark this conversation as\n            resolved?@@messages.manipulationConfirmModalComponent.resolveConfirmTemplate.modalBody\"\n          >Are you sure you want to mark this conversation as resolved?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #unresolveConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Renew this conversation from resolved?\"\n          i18n-heading=\"\n            Renew this conversation from\n            resolved?@@messages.manipulationConfirmModalComponent.unresolveConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to renew this conversation from resolved? This conversation will be automaticaly\n            assigned to you.@@messages.manipulationConfirmModalComponent.unresolveConfirmTemplate.modalBody\"\n          >Are you sure you want to renew this conversation from resolved? This conversation will be automaticaly\n          assigned to you.</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #assignConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Assign conversation?\"\n          i18n-heading=\"\n            Assign conversation?@@messages.manipulationConfirmModalComponent.assignConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to assign this\n            conversation?@@messages.manipulationConfirmModalComponent.assignConfirmTemplate.modalBody\"\n          >Are you sure you want to assign this conversation?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #unassignConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Unassign conversation?\"\n          i18n-heading=\"\n            Unassign conversation?@@messages.manipulationConfirmModalComponent.unassignConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to unassign this\n            conversation?@@messages.manipulationConfirmModalComponent.unassignConfirmTemplate.modalBody\"\n          >Are you sure you want to unassign this conversation?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #discardConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Discard message?\"\n          data-role=\"discard-message-header\"\n          i18n-heading=\"Discard message?@@messages.manipulationConfirmModalComponent.discardConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          data-role=\"discard-message-body\"\n          i18n=\"\n            Are you sure you want to discard this message? All filled data will be\n            lost@@messages.manipulationConfirmModalComponent.discardConfirmTemplate.modalBody\"\n          >Are you sure you want to discard this message? All filled data will be lost</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #discardDraftConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Discard message and delete draft?\"\n          i18n-heading=\"\n            Discard message and delete\n            draft?@@messages.manipulationConfirmModalComponent.discardDraftConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Are you sure you want to discard this message and delete draft? All filled data will be\n            lost@@messages.manipulationConfirmModalComponent.discardDraftConfirmTemplate.modalBody\"\n          >Are you sure you want to discard this message and delete draft? All filled data will be lost</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #deleteTopicConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Delete topic?\"\n          i18n-heading=\"\n            Delete topic?@@messages.manipulationConfirmModalComponent.deleteTopicConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            This action will unsubscribe all users from this topic. Are you sure you want to delete\n            it?@@messages.manipulationConfirmModalComponent.deleteTopicConfirmTemplate.modalBody\"\n          >This action will unsubscribe all users from this topic. Are you sure you want to delete it?</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n\n  <ng-template #deleteMailoutConfirmTemplate>\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          heading=\"Delete mailout?\"\n          i18n-heading=\"\n            Delete mailout modal\n            header@@messages.manipulationConfirmModalComponent.deleteMailoutConfirmTemplate.modalHeader\"\n        ></bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span\n          i18n=\"\n            Delete mailout modal body@@messages.manipulationConfirmModalComponent.deleteMailoutConfirmTemplate.modalBody\"\n          >Are you sure to delete a mailout? This action can not be undone.</span\n        >\n      </ng-template>\n    </bb-modal-body-ui>\n  </ng-template>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ModalModule } from '@backbase/ui-ang/modal';\n\nimport { MessagesManipulationConfirmModalService } from './messages-manipulation-confirm-modal.service';\nimport {\n  MessagesManipulationConfirmModalComponent,\n  MessagesManipulationConfirmModalCustomizableDirective,\n} from './messages-manipulation-confirm-modal.component';\nimport { BaseModalComponent } from '../base-modal/base-modal.component';\n\nconst components = [MessagesManipulationConfirmModalComponent];\nconst directives = [MessagesManipulationConfirmModalCustomizableDirective];\nconst uiModule = [ModalModule, HeaderModule, ButtonModule];\n@NgModule({\n  declarations: [BaseModalComponent, ...components, ...directives],\n  exports: [...components, ...directives],\n  imports: [CommonModule, ...uiModule],\n  providers: [MessagesManipulationConfirmModalService, ...uiModule],\n})\nexport class MessagesManipulationConfirmModalModule {}\n","import { Observable, Subject } from 'rxjs';\nimport { DeleteResponseBody, Metadata } from '@backbase/messages-v5-http-ang';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { FileObject } from '../model/messages-upload-attachments.model';\n\nexport abstract class BaseUploadAttachmentsService {\n  abstract deleteAttachments(ids: Array<string>): Observable<DeleteResponseBody | null>;\n  abstract uploadAttachment(attachment: Blob): Observable<Metadata | null>;\n}\n\nexport interface FileAttachmentInterface {\n  loading: boolean;\n  name: string | undefined;\n  size: number | undefined;\n  onDelete: Subject<number>;\n  deleteAttachment(id: string, index: number): void;\n  uploadAttachment(): Observable<Metadata | null>;\n  setLoading(flag: boolean): void;\n}\n\nexport class FileAttachment implements FileAttachmentInterface {\n  /**\n   * The loading flag.\n   */\n  loading = false;\n\n  /**\n   * Attachment name\n   */\n  name: string | undefined;\n\n  /**\n   * Attachment size\n   */\n  size: number | undefined;\n\n  /**\n   * Delete attachment subject that holds index\n   */\n  onDelete = new Subject<number>();\n\n  private readonly cancelSubject = new Subject<void>();\n  private readonly file: File | FileObject | undefined;\n  private id: string | undefined;\n\n  constructor(file: File | FileObject, protected service: BaseUploadAttachmentsService) {\n    this.file = file;\n    this.size = file.size;\n\n    if ((file as FileObject).id) {\n      this.id = (file as FileObject).id;\n      this.name = (file as FileObject).filename;\n    } else {\n      this.name = (file as File).name;\n    }\n  }\n\n  /**\n   * Delete attachment\n   *\n   * @param id Attachment id\n   * @param index Attachment index\n   */\n  deleteAttachment(id: string, index: number) {\n    if (this.id && this.id === id) {\n      this.service.deleteAttachments([id]).subscribe();\n    } else {\n      this.cancelSubject.next();\n    }\n\n    this.onDelete.next(index);\n  }\n\n  /**\n   * Upload attachments\n   */\n  uploadAttachment() {\n    this.setLoading(true);\n\n    return this.service.uploadAttachment(this.file as Blob).pipe(\n      takeUntil(this.cancelSubject),\n      tap(value => {\n        this.id = value ? value.id : undefined;\n        this.setLoading(false);\n      }),\n    );\n  }\n\n  /**\n   * Set loading flag\n   *\n   * @param flag Loaging status flag\n   */\n  setLoading(flag: boolean) {\n    this.loading = flag;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, EMPTY, Observable, Subject } from 'rxjs';\nimport { catchError, filter, finalize, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport {\n  BaseUploadAttachmentsService,\n  FileAttachment,\n  FileAttachmentInterface,\n} from './services/base-attachments.service';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { SharedMethodsService } from '../../services/shared-methods/shared-methods.service';\nimport { MessagesUploadAttachmentsService } from './services/messages-upload-attachments.service';\nimport { DeleteResponseBody, Metadata } from '@backbase/messages-v5-http-ang';\n\n@Component({\n  selector: 'bb-messages-upload-attachments-ui, bb-messages-upload-attachments',\n  templateUrl: './messages-upload-attachments.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MessagesUploadAttachmentsComponent),\n      multi: true,\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => MessagesUploadAttachmentsComponent),\n      multi: true,\n    },\n  ],\n})\nexport class MessagesUploadAttachmentsComponent implements ControlValueAccessor, Validator, OnInit, OnDestroy {\n  /**\n   * Maximum size for file upload in megabytes\n   */\n  @Input() set maxSize(value: number | string | undefined) {\n    if (value) {\n      const number = Number(value);\n      this.maxSizeMegabytesValue = number;\n      this.maxSizeBytesValue = number * 1024 * 1024;\n    }\n  }\n\n  /**\n   * Array of attachments objects\n   */\n  @Input()\n  set initAttachments(value: Array<Metadata> | undefined) {\n    this.initAttachments$.next(value);\n  }\n\n  /**\n   * Disabled state flag\n   */\n  @Input() disabled = false;\n\n  /**\n   * Input to define adding file multiple times\n   * True by defaults\n   */\n  @Input() multiple = true;\n\n  /**\n   * The attachment button text.\n   */\n  @Input() attachmentButtonText: string | undefined;\n\n  /**\n   * The accepted file formats.\n   */\n  @Input() accept = '*';\n\n  /**\n   * The notification for the maximum attachment size exceeded error.\n   */\n  @ViewChild('maxAttachmentSizeError') maxAttachmentSizeErrorTpl: TemplateRef<any> | undefined;\n\n  private readonly initAttachments$ = new BehaviorSubject<Array<Metadata> | undefined>(undefined);\n\n  /**\n   * The file attachments array.\n   */\n  attachments: Array<FileAttachmentInterface> = [];\n\n  /**\n   * The file attachments array.\n   */\n  maxSizeMegabytesValue: number | undefined;\n\n  readonly hostRef = this;\n  private maxSizeBytesValue = 0;\n  private value: Array<Metadata> = [];\n  private newlyAddedAttachments: Array<Metadata> = [];\n  private loading = 0;\n  private readonly unsubscribe = new Subject();\n\n  constructor(\n    protected cd: ChangeDetectorRef,\n    protected service: BaseUploadAttachmentsService,\n    protected sharedService: SharedMethodsService,\n    protected uploadService: MessagesUploadAttachmentsService,\n  ) {}\n\n  /**\n   * The method to upload a file attachment.\n   *\n   * @param input\n   */\n  onFileAdded(input: HTMLInputElement) {\n    const file = input && input.files && input.files[0];\n\n    this.onTouched();\n\n    if (file) {\n      input.value = '';\n\n      if (this.maxSizeBytesValue && file.size > this.maxSizeBytesValue) {\n        this.sharedService.openNotification(this.maxAttachmentSizeErrorTpl, 'error');\n\n        return;\n      }\n\n      const attachment = new FileAttachment(file, this.service);\n      const index = this.attachments.push(attachment);\n\n      this.loading++;\n      this.onValidationChange();\n\n      attachment\n        .uploadAttachment()\n        .pipe(\n          take(1),\n          tap(value => this.onValueChanged(value || undefined)),\n          catchError(error => {\n            this.removeRedundantAttachment(index - 1);\n\n            return this.showErrorNotification(error);\n          }),\n          finalize(() => {\n            this.loading--;\n            this.onValidationChange();\n\n            this.cd.markForCheck();\n          }),\n          takeUntil(this.uploadService.reset$),\n        )\n        .subscribe();\n\n      attachment.onDelete.pipe(takeUntil(this.unsubscribe)).subscribe(i => this.removeRedundantAttachment(i));\n    }\n  }\n\n  ngOnInit() {\n    this.uploadService.reset$\n      .pipe(\n        map(type => {\n          const value = type ? [...this.newlyAddedAttachments].map(({ id }) => id) : [];\n\n          this.attachments = [];\n          this.value = [];\n          this.newlyAddedAttachments = [];\n          this.cd.markForCheck();\n\n          return { value, type };\n        }),\n        filter(({ value, type }) => !!(value.length && type)),\n        switchMap(({ value }) => this.deleteAttachments(value)),\n        takeUntil(this.unsubscribe),\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next(true);\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * The method from the ControlValueAccessor interface for setting the initial value (previously uploaded attachments)\n   * for file attachments input.\n   *\n   * @param value Previously uploaded attachments\n   */\n  writeValue(value: Array<Metadata> | null | undefined) {\n    if (value && value.length) {\n      this.value = [...value];\n      this.initAttachments$.pipe(takeUntil(this.uploadService.reset$)).subscribe(attachments => {\n        if (attachments) {\n          this.attachments = attachments.reduce((acc, item) => {\n            const attachment: FileAttachment = new FileAttachment(item, this.service);\n\n            // @ts-ignore\n            acc.push(attachment);\n\n            attachment.onDelete.pipe(takeUntil(this.unsubscribe)).subscribe(i => this.removeRedundantAttachment(i));\n\n            return acc;\n          }, []);\n        }\n      });\n    }\n    this.cd.markForCheck();\n  }\n\n  /**\n   * The method from the ControlValueAccessor interface for responding to the value change.\n   * Implemented through the registerOnChange method.\n   */\n  onChange: (newValue: Array<Metadata>) => void = () => {};\n\n  /**\n   * The method from the ControlValueAccessor interface for responding to the change of the untouched state.\n   * Implemented through the registerOnTouched method.\n   */\n  onTouched: () => void = () => {};\n\n  /**\n   * The method for responding to the validation change. Implemented through the registerOnValidatorChange method.\n   */\n  onValidationChange: () => void = () => {};\n\n  /**\n   * The method from the ControlValueAccessor interface for setting the onChange function implementation.\n   */\n  registerOnChange(fn: () => void) {\n    this.onChange = fn;\n  }\n\n  /**\n   * The method from the ControlValueAccessor interface for setting the onTouched function implementation.\n   */\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * The method from the Validator interface. Registers a callback function to call when the validator inputs change.\n   */\n  registerOnValidatorChange(fn: () => void) {\n    this.onValidationChange = fn;\n  }\n\n  /**\n   * The method from the ControlValueAccessor interface for setting the disabled state.\n   *\n   * @param isDisabled Is disabled flag\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this.cd.markForCheck();\n  }\n\n  /**\n   * The method from the Validator interface. This method performs synchronous validation against the provided control.\n   *\n   * @returns Validation errors\n   */\n  validate(): ValidationErrors | null {\n    return this.loading ? { loading: true } : null;\n  }\n\n  private deleteAttachments(ids: Array<string>): Observable<DeleteResponseBody | null | undefined> {\n    return this.service.deleteAttachments(ids).pipe(catchError(error => this.showErrorNotification(error)));\n  }\n\n  private removeRedundantAttachment(index: number) {\n    this.value.splice(index, 1);\n    this.attachments.splice(index, 1);\n    this.onChange(this.value);\n  }\n\n  private onValueChanged(value?: Metadata) {\n    if (value) {\n      this.value.push(value);\n      this.newlyAddedAttachments.push(value);\n      this.onChange(this.value);\n    }\n  }\n\n  private showErrorNotification(error: HttpErrorResponse) {\n    this.sharedService.openNotification(this.sharedService.getErrorMessage(error), 'error');\n\n    return EMPTY;\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesEmployeeUploadAttachmentsCustomizable],[bbMessagesUploadAttachmentsCustomizable]',\n})\nexport class MessagesUploadAttachmentsCustomizableDirective extends BbTemplate<\n  MessagesUploadAttachmentsComponent,\n  undefined\n> {}\n","<ng-container bbMessagesUploadAttachmentsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbMessagesUploadAttachmentsCustomizable let-host>\n  <bb-input-file-ui\n    [buttonText]=\"host.attachmentButtonText ? host.attachmentButtonText : attachFile.elementRef.nativeElement.innerText\"\n    [disabled]=\"host.disabled\"\n    [accept]=\"host.accept\"\n    *ngIf=\"!(!host.multiple && host.attachments.length)\"\n    (change)=\"host.onFileAdded($event.target)\"\n  ></bb-input-file-ui>\n\n  <div class=\"row\">\n    <div class=\"col-auto\" *ngFor=\"let attachment of host.attachments; let i = index\">\n      <div class=\"bb-block bb-block--md\">\n        <bb-file-attachment-ui\n          [name]=\"attachment.name\"\n          [size]=\"attachment.size\"\n          [loading]=\"attachment.loading\"\n          [deletable]=\"true\"\n          [disabled]=\"true\"\n          (delete)=\"attachment.deleteAttachment(attachment.id, i)\"\n        ></bb-file-attachment-ui>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #attachFile i18n=\"Attach file@@messages.messagesEmployeeUploadAttachments.attachFile\"\n    >Attach file</ng-template\n  >\n</ng-template>\n\n<ng-template #maxAttachmentSizeError>\n  <span\n    i18n=\"\n      Uploaded file exceeds the maximum allowed size@@messages.messagesEmployeeUploadAttachments.maxAttachmentSizeError\"\n    >The file you are trying to upload exceeds the maximum attachment size of\n  </span>\n  <span>{{ maxSizeMegabytesValue }}</span>\n  <span i18n=\"Mb|Megabytes@@messages.messagesEmployeeUploadAttachments.maxAttachmentSizeError.megabytes\">Mb</span>.\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedMethodsService } from './shared-methods.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [SharedMethodsService],\n})\nexport class SharedMethodsModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputFileModule } from '@backbase/ui-ang/input-file';\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\n\nimport {\n  MessagesUploadAttachmentsComponent,\n  MessagesUploadAttachmentsCustomizableDirective,\n} from './messages-upload-attachments.component';\nimport { SharedMethodsModule } from '../../services/shared-methods/shared-methods.module';\nimport { MessagesUploadAttachmentsService } from './services/messages-upload-attachments.service';\n\nconst components = [MessagesUploadAttachmentsComponent];\nconst directives = [MessagesUploadAttachmentsCustomizableDirective];\nconst uiModules = [ButtonModule, FileAttachmentModule, IconModule, InputFileModule];\nconst innerModules = [SharedMethodsModule];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n  providers: [MessagesUploadAttachmentsService],\n})\nexport class MessagesUploadAttachmentsModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  EmployeeHttpService,\n  TopicsGetResponseBody,\n  PresentationMessageEmployeePostRequestBody,\n  PresentationMessagePostResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { BaseCreateMessageFormService } from '../../base-form/base-create-message-form.service';\n\n@Injectable()\nexport class CreateMessageFormImplementationService\n  implements BaseCreateMessageFormService<PresentationMessageEmployeePostRequestBody>\n{\n  private readonly maxPaginationItemsNum = 65535;\n\n  constructor(private readonly employeeService: EmployeeHttpService) {}\n\n  /**\n   * Get topics\n   *\n   * @returns Employee topics stream\n   */\n  getTopics(): Observable<TopicsGetResponseBody[] | null> {\n    return this.employeeService\n      .getTopicsEmployee({ size: this.maxPaginationItemsNum, subscribed: true })\n      .pipe(catchError(() => of([])));\n  }\n\n  /**\n   * Create message\n   *\n   * @param params Create message request params\n   * @returns Create message stream\n   */\n  createMessage(\n    params: PresentationMessageEmployeePostRequestBody,\n  ): Observable<PresentationMessagePostResponseBody | null> {\n    return this.employeeService.postMessagesEmployee({ presentationMessageEmployeePostRequestBody: params });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DeleteResponseBody, EmployeeHttpService, Metadata } from '@backbase/messages-v5-http-ang';\nimport { BaseUploadAttachmentsService } from './base-attachments.service';\n\n@Injectable()\nexport class MessagesEmployeeUploadAttachmentsService implements BaseUploadAttachmentsService {\n  constructor(private readonly service: EmployeeHttpService) {}\n\n  /**\n   * Delete attachments by ids\n   *\n   * @param ids attachments ids\n   * @returns Delete attachments stream\n   */\n  deleteAttachments(ids: string[]): Observable<DeleteResponseBody | null> {\n    return this.service.deleteMessageAttachmentsEmployee({ ids });\n  }\n\n  /**\n   * Upload attachment\n   *\n   * @param attachment Attachment data\n   * @returns Upload attachment stream\n   */\n  uploadAttachment(attachment: Blob): Observable<Metadata | null> {\n    return this.service.postMessageAttachmentsEmployee({ attachment });\n  }\n}\n","import '@angular/localize/init';\n\nexport const topicPlaceholderConfig = {\n  selectTopicPlaceholder: $localize`:Select topic placeholder@@messages.selectTopicPlaceholder:Select topic`,\n  // eslint-disable-next-line max-len\n  noTopicsPlaceholder: $localize`:There are no topics available@@messages.noTopicsPlaceholder:There are no topics available`,\n};\n","import { Injectable } from '@angular/core';\nimport { GetIdentities, GetIdentity, IdentityListedItem, IdentityManagementService } from '@backbase/data-ang/user';\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class EmployeeCreateMessageFormService {\n  constructor(private readonly userService: IdentityManagementService) {}\n\n  getUsers(externalId: string): Observable<IdentityListedItem[] | Record<string, never>> {\n    return this.userService.getIdentities({ externalId }).pipe(\n      map((usersData: GetIdentities) => usersData.identities),\n      catchError(() => of({})),\n    );\n  }\n\n  getUserById(internalId: string): Observable<GetIdentity> {\n    return this.userService.getIdentity({ internalId });\n  }\n}\n","import { ChangeDetectorRef, Component, Directive, Input } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, ValidationErrors } from '@angular/forms';\nimport { catchError, debounceTime, distinctUntilChanged, filter, switchMap, tap } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { GetIdentity, IdentityListedItem } from '@backbase/data-ang/user';\nimport {\n  PresentationMessageEmployeePostRequestBody,\n  TopicsGetEmployeeResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { BaseCreateMessageFormComponent } from '../base-form/base-create-message-form.component';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { BaseCreateMessageFormService } from '../base-form/base-create-message-form.service';\nimport { EmployeeCreateMessageFormService } from './services/employee-create-message-form.service';\nimport { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';\nimport { CreateMessageFormImplementationService } from './services/create-message-form-implementation.service';\nimport { BaseUploadAttachmentsService } from '../../upload-attachments/services/base-attachments.service';\nimport { MessagesEmployeeUploadAttachmentsService } from '../../upload-attachments/services/employee-upload-attachments.service';\nimport { topicPlaceholderConfig } from '../../../utils/topic-placeholder-text-helper';\n\n@Component({\n  selector: 'bb-messages-employee-create-message-form',\n  templateUrl: './employee-create-message-form.component.html',\n  providers: [\n    {\n      provide: BaseCreateMessageFormService,\n      useClass: CreateMessageFormImplementationService,\n    },\n    {\n      provide: BaseUploadAttachmentsService,\n      useClass: MessagesEmployeeUploadAttachmentsService,\n    },\n  ],\n})\nexport class EmployeeCreateMessageFormComponent extends BaseCreateMessageFormComponent<PresentationMessageEmployeePostRequestBody> {\n  /**\n   * Debounce time for input search requests\n   */\n  @Input() debounceTime = 500;\n\n  /**\n   * Minimum length value for input search request\n   */\n  @Input() minSearchLength = 1;\n\n  /**\n   * Predefine form\n   */\n  @Input() set preDefineForm(val: Partial<PresentationMessageEmployeePostRequestBody>) {\n    if (val.recipient) {\n      this.getUserName(val.recipient);\n    }\n  }\n\n  /**\n   * Make predefined user field readonly\n   */\n  @Input() isPreDefinedUserReadonly = false;\n\n  /**\n   * Configs for topic selector placeholder\n   */\n  public readonly topicPlaceholderConfig = topicPlaceholderConfig;\n\n  /**\n   * Typeahead options.\n   */\n  readonly typeaheadOptions = {\n    ngbTypeahead: this.search.bind(this),\n    resultFormatter: (item: IdentityListedItem) => item.fullName,\n    inputFormatter: (item: IdentityListedItem) => item.fullName,\n  };\n\n  /**\n   * Additional form fields.\n   */\n  readonly additionalFormFields: { [key: string]: boolean | string } = {\n    recipient: '',\n    important: false,\n    notDeletable: false,\n    'read-only': false,\n  };\n\n  constructor(\n    private readonly employeeService: EmployeeCreateMessageFormService,\n    readonly encodingService: MessagesEncodingService,\n    readonly sharedService: SharedMethodsService,\n    readonly fb: FormBuilder,\n    readonly cd: ChangeDetectorRef,\n    readonly createMessageFormService: BaseCreateMessageFormService<PresentationMessageEmployeePostRequestBody>,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    readonly uploadService: MessagesUploadAttachmentsService,\n  ) {\n    super(sharedService, confirmModalService, cd, createMessageFormService, fb, encodingService, uploadService);\n    Object.keys(this.additionalFormFields).forEach(key => {\n      const validator = key === 'recipient' ? this.customRequiredValidator : undefined;\n      this.newMessageFormGroup.addControl(key, new FormControl(this.additionalFormFields[key], validator));\n    });\n\n    this.newMessageFormGroup.updateValueAndValidity();\n  }\n\n  /**\n   * The method upon creation of the message form submission.\n   */\n  onConfirm() {\n    this.newMessageFormGroup.markAsDirty();\n    this.newMessageFormGroup.markAllAsTouched();\n\n    const { valid } = this.newMessageFormGroup;\n    const value = this.newMessageFormGroup.getRawValue();\n    if (valid) {\n      const finalValue: PresentationMessageEmployeePostRequestBody = {\n        subject: '',\n        body: '',\n        topic: '',\n        recipient: value.recipient.id,\n        important: value.important,\n        deletable: !value.notDeletable,\n        'read-only': value['read-only'],\n        ...this.getSimpleFormVal(value),\n      };\n      this.createMessage(finalValue);\n    }\n  }\n\n  /**\n   * The method to search for typeahead options.\n   *\n   * @param text Search query\n   * @returns Search stream\n   */\n  search(text: Observable<string>): Observable<IdentityListedItem[] | Record<string, never>> {\n    return text.pipe(\n      debounceTime(this.debounceTime),\n      distinctUntilChanged(),\n      filter(value => value.length > this.minSearchLength),\n      switchMap(value => this.employeeService.getUsers(value)),\n    );\n  }\n\n  protected resetToInit() {\n    super.resetToInit();\n    this.resetAdditionalFields();\n  }\n\n  private customRequiredValidator(control: AbstractControl): ValidationErrors | null {\n    const value = control.value;\n    const isSelected = value && typeof value !== 'string';\n\n    return !isSelected ? { required: true } : null;\n  }\n\n  private getUserName(userId: string) {\n    this.employeeService\n      .getUserById(userId)\n      .pipe(\n        tap(user => this.setUserName(user, userId)),\n        catchError(err => {\n          this.sharedService.openNotification(this.sharedService.getErrorMessage(err), 'error');\n\n          return EMPTY;\n        }),\n      )\n      .subscribe();\n  }\n\n  private setUserName(user: GetIdentity, userId: string) {\n    this.newMessageFormGroup.controls['recipient'].setValue({ ...user, id: userId });\n    if (this.isPreDefinedUserReadonly) {\n      this.newMessageFormGroup.controls['recipient'].disable();\n    }\n  }\n\n  private resetAdditionalFields() {\n    Object.keys(this.additionalFormFields).forEach(key => {\n      this.newMessageFormGroup.controls[key].setValue(this.additionalFormFields[key]);\n    });\n  }\n}\n\n@Directive({\n  selector: '[bbEmployeeCreateMessageFormCustomizable]',\n})\nexport class EmployeeCreateMessageFormCustomizableDirective extends BbTemplate<\n  EmployeeCreateMessageFormComponent,\n  { topics: TopicsGetEmployeeResponseBody[] }\n> {}\n","<ng-container\n  bbEmployeeCreateMessageFormCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    topics: topics | async,\n    maxAttachmentSize: maxAttachmentSize\n  }\"\n></ng-container>\n\n<ng-template\n  bbEmployeeCreateMessageFormCustomizable\n  let-host\n  let-topics=\"context.topics\"\n  let-maxAttachmentSize=\"context.maxAttachmentSize\"\n>\n  <form [formGroup]=\"host.newMessageFormGroup\" data-role=\"form\" (submit)=\"host.onConfirm()\">\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        *ngIf=\"\n          topics?.length\n            ? topicPlaceholderConfig.selectTopicPlaceholder\n            : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n        \"\n        [options]=\"topics\"\n        displayAttributePath=\"name\"\n        formControlName=\"topic\"\n        label=\"Topic\"\n        i18n-label=\"Topic label text@@messages.employeeCreateMessage.composeMessageForm.topicLabel\"\n        aria-label=\"Topic\"\n        [aria-invalid]=\"host.isInvalidControl('topic')\"\n        data-role=\"topics\"\n        aria-describedby=\"compose-message-topic-error-message\"\n        i18n-aria-label=\"Topic aria-label text@@messages.employeeCreateMessage.composeMessageForm.topicAriaLabel\"\n        labelClasses=\"form-label\"\n        [attr.placeholder]=\"topicPlaceholder\"\n        [placeholder]=\"topicPlaceholder\"\n        (blur)=\"host.resetFormOnElementBlur()\"\n      ></bb-dropdown-single-select-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-message-topic-error-message\"\n        [showErrors]=\"host.isInvalidControl('topic')\"\n      >\n        <span\n          *ngIf=\"host.hasError('topic', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            required@@messages.employeeCreateMessage.composeMessageForm.errors.subjectRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <label i18n=\"User label text@@messages.employeeCreateMessage.composeMessageForm.recipientLabel\">User</label>\n      <bb-search-box-ui\n        formControlName=\"recipient\"\n        aria-label=\"Select user\"\n        i18n-aria-label=\"\n          Select user aria-label text@@messages.employeeCreateMessage.composeMessageForm.subjectAriaLabel\"\n        [attr.aria-invalid]=\"host.isInvalidControl('recipient')\"\n        aria-describedby=\"compose-message-recipient-error-message\"\n        placeholder=\"Select user\"\n        i18n-placeholder=\"Select user@@messages.employeeCreateMessage.composeMessageForm.selectRecipientPlaceholder\"\n        [typeaheadOptions]=\"host.typeaheadOptions\"\n        [required]=\"true\"\n      ></bb-search-box-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-message-recipient-error-message\"\n        [showErrors]=\"host.isInvalidControl('recipient')\"\n      >\n        <span\n          *ngIf=\"host.hasError('recipient', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            empty@@messages.employeeCreateMessage.composeMessageForm.errors.recipientRequired\"\n          >Field is required</span\n        >\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"subject\"\n        label=\"Subject\"\n        i18n-label=\"Subject label text@@messages.employeeCreateMessage.composeMessageForm.subjectLabel\"\n        aria-label=\"Subject\"\n        i18n-aria-label=\"Subject aria-label text@@messages.employeeCreateMessage.composeMessageForm.subjectAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('subject')\"\n        aria-describedby=\"compose-message-subject-error-message\"\n        placeholder=\"Write subject\"\n        i18n-placeholder=\"\n          Subject placeholder text@@messages.employeeCreateMessage.composeMessageForm.subjectPlaceholder\"\n        labelClasses=\"form-label\"\n        formControlName=\"subject\"\n        [maxlength]=\"host.maxSubjectLength\"\n        [required]=\"true\"\n      >\n      </bb-input-text-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-message-subject-error-message\"\n        [showErrors]=\"host.isInvalidControl('subject')\"\n      >\n        <span\n          *ngIf=\"host.hasError('subject', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            empty@@messages.employeeCreateMessage.composeMessageForm.errors.subjectRequired\"\n          >Field is required</span\n        >\n        <span\n          *ngIf=\"host.hasError('subject', 'maxlength')\"\n          i18n=\"\n            Error message if subject value is more then maxlength\n            value@@messages.employeeCreateMessage.composeMessageForm.errors.subjectMaxlength\"\n          >Your input of {{ newMessageFormGroup?.get('subject')?.value?.length }} characters exceeds the limit of\n          {{ host.maxSubjectLength }}. Please rephrase.</span\n        >\n      </bb-input-validation-message-ui>\n    </div>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <div class=\"bb-stack\">\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"read-only\"\n          aria-label=\"Read only\"\n          data-role=\"readonly\"\n          i18n-aria-label=\"\n            checkbox read-only aria-label@@messages.employeeCreateMessage.composeMessageForm.readonlyCheckboxAriaLabel\"\n          label=\"Read only\"\n          i18n-label=\"\n            read only checkbox label text@@messages.employeeCreateMessage.composeMessageForm.readonlyCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"notDeletable\"\n          aria-label=\"Can't be deleted\"\n          data-role=\"deletable\"\n          i18n-aria-label=\"\n            checkbox deletable aria-label@@messages.employeeCreateMessage.composeMessageForm.deletableCheckboxAriaLabel\"\n          label=\"Can't be deleted\"\n          i18n-label=\"\n            deletable checkbox label text@@messages.employeeCreateMessage.composeMessageForm.deletableCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"important\"\n          aria-label=\"important\"\n          data-role=\"important\"\n          i18n-aria-label=\"\n            checkbox important aria-label@@messages.employeeCreateMessage.composeMessageForm.importantCheckboxAriaLabel\"\n          label=\"Important\"\n          i18n-label=\"\n            important checkbox label text@@messages.employeeCreateMessage.composeMessageForm.importantCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <bb-rich-text-editor-ui\n        label=\"Message\"\n        i18n-label=\"Message label text@@messages.employeeCreateMessage.composeMessageForm.messageLabel\"\n        aria-label=\"Message\"\n        i18n-aria-label=\"Message aria-label text@@messages.employeeCreateMessage.composeMessageForm.messageAriaLabel\"\n        placeholder=\"Write some text\"\n        i18n-placeholder=\"\n          Message placeholder text@@messages.employeeCreateMessage.composeMessageForm.messagePlaceholder\"\n        [attr.aria-invalid]=\"host.isInvalidControl('body')\"\n        [attr.aria-describedby]=\"'compose-message-body-error-message'\"\n        formControlName=\"body\"\n        [counter]=\"true\"\n        [maxLength]=\"host.maxMessageLength\"\n        [required]=\"true\"\n      >\n        <ng-template #actions bbRichTextEditorActions>\n          <bb-rich-text-editor-bold-action></bb-rich-text-editor-bold-action>\n          <bb-rich-text-editor-italic-action></bb-rich-text-editor-italic-action>\n          <bb-rich-text-editor-underline-action></bb-rich-text-editor-underline-action>\n          <bb-rich-text-editor-strikethrough-action> </bb-rich-text-editor-strikethrough-action>\n          <bb-rich-text-editor-olist-action></bb-rich-text-editor-olist-action>\n          <bb-rich-text-editor-ulist-action> </bb-rich-text-editor-ulist-action>\n          <bb-rich-text-editor-link-action></bb-rich-text-editor-link-action>\n        </ng-template>\n      </bb-rich-text-editor-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-message-body-error-message\"\n        [showErrors]=\"host.isInvalidControl('body')\"\n      >\n        <span\n          *ngIf=\"host.hasError('body', 'required')\"\n          i18n=\"Error message if field is required@@messages.createMessage.composeMessageForm.errors.messageRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-messages-upload-attachments\n        [maxSize]=\"maxAttachmentSize\"\n        formControlName=\"attachments\"\n      ></bb-messages-upload-attachments>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        class=\"bb-button-bar__button\"\n        type=\"submit\"\n        data-role=\"submit\"\n        aria-label=\"Send\"\n        i18n-aria-label=\"\n          Submit button aria-label text@@messages.employeeCreateMessage.composeMessageForm.submitButtonAriaLabel\"\n        i18n=\"Submit button text@@messages.employeeCreateMessage.composeMessageForm.submitButton\"\n        [isLoading]=\"host.formLoading\"\n      >\n        Send\n      </bb-load-button-ui>\n      <button\n        bbButton\n        bbPreventBubbleDown\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        data-role=\"discard\"\n        aria-label=\"Discard\"\n        i18n-aria-label=\"\n          Discard button aria-label text@@messages.employeeCreateMessage.composeMessageForm.discardButtonAriaLabel\"\n        i18n=\"Discard button text@@messages.employeeCreateMessage.composeMessageForm.discardButton\"\n        (click)=\"host.confirmModalService.toggleModal(true, host.manipulationTypes.discard, host.newMessageFormGroup)\"\n      >\n        Discard\n      </button>\n    </div>\n  </form>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"host.confirmationModal.opened\"\n    [type]=\"host.confirmationModal.type\"\n    (cancel)=\"host.confirmModalService.toggleModal(false)\"\n    (confirm)=\"host.confirmConfirmationModal()\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #messageComposeSuccess>\n  <span\n    i18n=\"\n      Your message has been successfully sent.|Text of successful conversation\n      compose@@messages.employeeCreateMessage.composeMessageForm.messageSuccessCompose\"\n    >Your message has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #messageComposeError>\n  <span\n    i18n=\"\n      There is an error sending message.|Text of failed conversation\n      compose@@messages.employeeCreateMessage.composeMessageForm.messageErrorCompose\"\n    >There is an error sending message.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { MessagesManipulationConfirmModalModule } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module';\nimport { MessagesUploadAttachmentsModule } from '../../upload-attachments/messages-upload-attachments.module';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { BaseCreateMessageFormModule } from '../base-form/base-create-message-form.module';\nimport {\n  EmployeeCreateMessageFormComponent,\n  EmployeeCreateMessageFormCustomizableDirective,\n} from './employee-create-message-form.component';\nimport { EmployeeCreateMessageFormService } from './services/employee-create-message-form.service';\nimport { PreventBubbleDownModule } from '../../../directives/prevent-bubble-down/prevent-bubble-down.module';\n\nconst components = [EmployeeCreateMessageFormComponent];\nconst directives = [EmployeeCreateMessageFormCustomizableDirective];\nconst uiModules = [\n  DropdownSingleSelectModule,\n  InputValidationMessageModule,\n  SearchBoxModule,\n  InputTextModule,\n  RichTextEditorModule,\n  ButtonModule,\n  InputCheckboxModule,\n  LoadButtonModule,\n];\nconst innerModules = [\n  MessagesManipulationConfirmModalModule,\n  MessagesUploadAttachmentsModule,\n  BaseCreateMessageFormModule,\n];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, PreventBubbleDownModule, ...uiModules, ...innerModules],\n  exports: [ReactiveFormsModule, ...components, ...directives, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  providers: [EmployeeCreateMessageFormService, MessagesEncodingService],\n})\nexport class EmployeeCreateMessageFormModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  EmployeeHttpService,\n  MailoutHttpService,\n  MailoutPostRequestBody,\n  MailoutPostResponseBody,\n  TopicsGetEmployeeResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { BaseCreateMessageFormService } from '../base-form/base-create-message-form.service';\n\n@Injectable()\nexport class EmployeeCreateMailoutFormService implements BaseCreateMessageFormService<MailoutPostRequestBody> {\n  private readonly maxPaginationItemsNum = 65535;\n\n  constructor(\n    private readonly messagesService: MailoutHttpService,\n    private readonly employeeService: EmployeeHttpService,\n  ) {}\n\n  /**\n   * Get topics\n   *\n   * @returns Get topics stream\n   */\n  getTopics(): Observable<TopicsGetEmployeeResponseBody[] | null> {\n    return this.employeeService\n      .getTopicsEmployee({ size: this.maxPaginationItemsNum, subscribed: true })\n      .pipe(catchError(() => of([])));\n  }\n\n  /**\n   * Create message\n   *\n   * @param body Create message request body\n   * @returns Create message stream\n   */\n  createMessage(body: MailoutPostRequestBody): Observable<MailoutPostResponseBody | null> {\n    return this.messagesService.postMailout({ mailoutPostRequestBody: body });\n  }\n}\n","import { ChangeDetectorRef, Component, Directive, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { MailoutPostRequestBody, TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { BaseCreateMessageFormComponent } from '../base-form/base-create-message-form.component';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { BaseCreateMessageFormService } from '../base-form/base-create-message-form.service';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';\nimport { BaseUploadAttachmentsService } from '../../upload-attachments/services/base-attachments.service';\nimport { MessagesEmployeeUploadAttachmentsService } from '../../upload-attachments/services/employee-upload-attachments.service';\nimport { EmployeeCreateMailoutFormService } from './employee-create-mailout-form.service';\nimport { TemplateFileReaderModel } from '../../../models/template-filereader.model';\nimport { EmployeeCreateMailoutFormModel } from '../../../models/employee-create-mailout-form.model';\nimport { topicPlaceholderConfig } from '../../../utils/topic-placeholder-text-helper';\n\n@Component({\n  selector: 'bb-messages-employee-create-mailout-form',\n  templateUrl: './employee-create-mailout-form.component.html',\n  providers: [\n    {\n      provide: BaseCreateMessageFormService,\n      useClass: EmployeeCreateMailoutFormService,\n    },\n    {\n      provide: BaseUploadAttachmentsService,\n      useClass: MessagesEmployeeUploadAttachmentsService,\n    },\n  ],\n})\nexport class EmployeeCreateMailoutFormComponent extends BaseCreateMessageFormComponent<any> implements OnInit {\n  readonly hostRef = this;\n\n  /**\n   * Configs for topic selector placeholder\n   */\n  public readonly topicPlaceholderConfig = topicPlaceholderConfig;\n\n  /**\n   * The output with the mailout preview data.\n   */\n  @Output() review = new EventEmitter<EmployeeCreateMailoutFormModel>();\n\n  /**\n   * The input with the default create mailout form data.\n   */\n  @Input() defaultMailout?: EmployeeCreateMailoutFormModel;\n\n  /**\n   * The input with the sender display name.\n   */\n  @Input()\n  set senderDisplayName(value: string | undefined) {\n    if (value) {\n      const senderNameControl = this.newMessageFormGroup.controls['senderDisplayName'];\n      senderNameControl.setValue(value);\n      this.newMessageFormGroup.markAsPristine();\n      this.defaultSenderName = value;\n    }\n  }\n  private defaultSenderName = '';\n\n  constructor(\n    readonly encodingService: MessagesEncodingService,\n    readonly sharedService: SharedMethodsService,\n    readonly fb: FormBuilder,\n    readonly cd: ChangeDetectorRef,\n    readonly createMessageFormService: BaseCreateMessageFormService<MailoutPostRequestBody>,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    readonly uploadService: MessagesUploadAttachmentsService,\n  ) {\n    super(sharedService, confirmModalService, cd, createMessageFormService, fb, encodingService, uploadService);\n    this.newMessageFormGroup.addControl('important', this.fb.control(false));\n    this.newMessageFormGroup.addControl('notDeletable', this.fb.control(false));\n    this.newMessageFormGroup.addControl('mailoutName', this.fb.control(''));\n    this.newMessageFormGroup.addControl('recipientsDataId', this.fb.control('', Validators.required));\n    this.newMessageFormGroup.addControl('senderDisplayName', this.fb.control('', Validators.required));\n    this.newMessageFormGroup.addControl('isBodyHtml', this.fb.control(false));\n    this.newMessageFormGroup.addControl('template', this.fb.control(''));\n    this.newMessageFormGroup.updateValueAndValidity();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.setDefaultMailoutFormValue();\n  }\n\n  private setDefaultMailoutFormValue() {\n    if (this.defaultMailout) {\n      this.newMessageFormGroup.patchValue({\n        ...this.defaultMailout,\n      });\n\n      const bodyControl = this.newMessageFormGroup.controls['body'];\n      if (this.defaultMailout.isBodyHtml) {\n        bodyControl.setValue('');\n        bodyControl.disable();\n      }\n      this.newMessageFormGroup.updateValueAndValidity();\n      this.newMessageFormGroup.markAsDirty();\n    }\n  }\n\n  /**\n   * The method to load and parse the mailout template file.\n   */\n  onAddTemplateFile(input: HTMLInputElement) {\n    if (input.files && input.files[0]) {\n      const file: File = input.files[0];\n      const bodyInput = this.newMessageFormGroup.controls['body'];\n      const templateInput = this.newMessageFormGroup.controls['template'];\n      const fileReader = new FileReader();\n\n      fileReader.onload = () => {\n        templateInput.setValue({\n          body: fileReader.result,\n          name: file.name,\n          size: file.size,\n        } as TemplateFileReaderModel);\n        this.newMessageFormGroup.controls['isBodyHtml'].setValue(true);\n        templateInput.markAsTouched();\n\n        bodyInput.clearValidators();\n        bodyInput.disable();\n      };\n\n      fileReader.readAsText(file);\n    }\n  }\n\n  /**\n   * The method to clear the template file.\n   */\n  onClearTemplateFile() {\n    const body = this.newMessageFormGroup.controls['body'];\n    this.newMessageFormGroup.controls['template'].setValue(undefined);\n    this.newMessageFormGroup.controls['isBodyHtml'].setValue(false);\n\n    body.setValidators([Validators.required]);\n    body.enable();\n  }\n\n  /**\n   * The method to save the mailout.\n   */\n  onConfirm() {\n    this.newMessageFormGroup.markAllAsTouched();\n    this.newMessageFormGroup.markAsDirty();\n\n    const { value, valid } = this.newMessageFormGroup;\n    if (valid) {\n      if (value.template && value.template.body) {\n        value.body = value.template.body;\n      }\n\n      const finalValue: MailoutPostRequestBody = {\n        subject: '',\n        topic: '',\n        body: '',\n        mailoutName: value.mailoutName,\n        recipientsData: {\n          id: value.recipientsDataId[0].id,\n        },\n        senderDisplayName: this.defaultSenderName,\n        isBodyHtml: value.isBodyHtml,\n        important: !!value.important,\n        deletable: !value.notDeletable,\n        ...this.getSimpleFormVal(value),\n      };\n\n      if (value.isBodyHtml) {\n        this.review.emit({ ...value, senderDisplayName: this.defaultSenderName });\n      } else {\n        this.createMessage(finalValue);\n      }\n    }\n  }\n\n  /**\n   * The method to discard the mailout.\n   *\n   * @param discardParam Should open modal flag\n   */\n  onDiscard(discardParam: boolean) {\n    if (discardParam) {\n      this.confirmModalService.toggleModal(discardParam, this.manipulationTypes.discard, this.newMessageFormGroup);\n    } else {\n      this.confirmModalService.toggleModal(discardParam);\n    }\n  }\n\n  protected resetToInit(isFormDiscard = false) {\n    super.resetToInit(isFormDiscard);\n    this.onClearTemplateFile();\n  }\n}\n\n@Directive({\n  selector: '[bbEmployeeCreateMailoutFormCustomizable]',\n})\nexport class EmployeeCreateMailoutFormCustomizableDirective extends BbTemplate<\n  EmployeeCreateMailoutFormComponent,\n  {\n    topics: TopicsGetResponseBody | null | undefined;\n    maxAttachmentSize: string | undefined;\n    maxSubjectLength: number | undefined;\n    maxMailoutNameLength: number | undefined;\n  }\n> {}\n\n@Directive({\n  selector: '[bbEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizable]',\n})\nexport class EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective extends BbTemplate<\n  EmployeeCreateMailoutFormComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbEmployeeCreateMailoutFormErrorNotificationHeaderCustomizable]',\n})\nexport class EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective extends BbTemplate<\n  EmployeeCreateMailoutFormComponent,\n  void\n> {}\n","<ng-container\n  bbEmployeeCreateMailoutFormCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    topics: topics | async,\n    maxAttachmentSize: maxAttachmentSize,\n    maxSubjectLength: maxSubjectLength\n  }\"\n></ng-container>\n\n<ng-template\n  bbEmployeeCreateMailoutFormCustomizable\n  let-host\n  let-topics=\"context.topics\"\n  let-maxAttachmentSize=\"context.maxAttachmentSize\"\n>\n  <form [formGroup]=\"host.newMessageFormGroup\" data-role=\"form\" (submit)=\"host.onConfirm()\">\n    <div class=\"form-group\">\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item bb-stack__item--fill bb-stack__item--align-top\">\n          <label\n            data-role=\"recipients-label\"\n            for=\"recipientsDataId\"\n            i18n=\"\n              Recipients|Recipients label text@@messages.employeeCreateMailout.composeMailoutForm.recipientsLabelText\"\n            >Recipients</label\n          >\n          <bb-messages-upload-attachments\n            data-role=\"import-recipients\"\n            accept=\"text/csv\"\n            id=\"recipientsDataId\"\n            [maxSize]=\"maxAttachmentSize\"\n            [multiple]=\"false\"\n            [initAttachments]=\"host.defaultMailout?.recipientsDataId\"\n            formControlName=\"recipientsDataId\"\n            i18n-attachmentButtonText=\"\n              Import recipients|Upload recipients attachment button\n              text@@messages.employeeCreateMailout.composeMailoutForm.uploadRecipientsAttachmentButtonText\"\n            attachmentButtonText=\"Import recipients\"\n          ></bb-messages-upload-attachments>\n          <bb-input-validation-message-ui\n            id=\"compose-mailout-sender-name-error\"\n            [showErrors]=\"host.isInvalidControl('recipientsDataId')\"\n          >\n            <span\n              *ngIf=\"host.hasError('recipientsDataId', 'required')\"\n              i18n=\"\n                Error message if recipient field is\n                required@@messages.employeeCreateMailout.composeMailoutForm.errors.recipientsDataIdRequired\"\n            >\n              Recipient is required\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n\n        <div class=\"bb-stack__item bb-stack__item--fill bb-stack__item--align-top\">\n          <label\n            data-role=\"html-template\"\n            for=\"templateFile\"\n            i18n=\"Recipients|Recipients label text@@messages.employeeCreateMailout.composeMailoutForm.htmpTemplateLabel\"\n            >HTML Template</label\n          >\n          <div>\n            <bb-input-file-ui\n              *ngIf=\"!host.newMessageFormGroup.controls['template']?.value\"\n              accept=\".html\"\n              data-role=\"import-template\"\n              buttonText=\"Import template\"\n              i18n-buttonText=\"Import template@@messages.employeeCreateMailout.composeMailoutForm.attachFile\"\n              id=\"templateFile\"\n              (change)=\"host.onAddTemplateFile($event.target)\"\n            ></bb-input-file-ui>\n            <div class=\"row\">\n              <div class=\"col-auto\" *ngIf=\"host.newMessageFormGroup.controls['template']?.value as templateValue\">\n                <bb-file-attachment-ui\n                  [name]=\"templateValue.name\"\n                  [size]=\"templateValue.size\"\n                  [deletable]=\"true\"\n                  [disabled]=\"true\"\n                  (delete)=\"host.onClearTemplateFile()\"\n                ></bb-file-attachment-ui>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"mailout-name-label\"\n        label=\"Mailout name\"\n        i18n-label=\"Mailout name text@@messages.employeeCreateMailout.composeMailoutForm.mailoutNameLabel\"\n        aria-label=\"Mailout name\"\n        i18n-aria-label=\"\n          Subject aria-label text@@messages.employeeCreateMailout.composeMailoutForm.mailoutNametAriaLabel\"\n        placeholder=\"Write mailout name\"\n        i18n-placeholder=\"\n          Mailout name placeholder text@@messages.employeeCreateMailout.composeMailoutForm.mailoutNamePlaceholder\"\n        labelClasses=\"form-label\"\n        formControlName=\"mailoutName\"\n        [maxlength]=\"host.maxMailoutNameLength\"\n      >\n      </bb-input-text-ui>\n      <bb-input-validation-message-ui [showErrors]=\"host.isInvalidControl('mailoutName')\">\n        <span\n          *ngIf=\"host.hasError('mailoutName', 'maxlength')\"\n          i18n=\"\n            Error message if mailout name value is more then maxlength\n            value@@messages.employeeCreateMailout.composeMailoutForm.errors.mailoutNameMaxlength\"\n          >Your input of {{ newMessageFormGroup?.get('name')?.value?.length }} characters exceeds the limit of\n          {{ host.maxMailoutNameLength }}. Please rephrase.</span\n        >\n      </bb-input-validation-message-ui>\n      <p\n        class=\"bb-text-support bb-subtitle\"\n        data-role=\"mailout-name-subtitle\"\n        i18n=\"\n          Name exist for internal purposes only. It will not be displayed to\n          users@@messages.employeeCreateMailout.composeMailoutForm.mailoutNameSubtitleText\"\n      >\n        Name exist for internal purposes only. It will not be displayed to users\n      </p>\n    </div>\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        label=\"Sender name\"\n        data-role=\"sender-name\"\n        i18n-label=\"Sender name text@@messages.employeeCreateMailout.composeMailoutForm.senderNameLabel\"\n        aria-label=\"Sender name\"\n        i18n-aria-label=\"\n          Sender name aria-label text@@messages.employeeCreateMailout.composeMailoutForm.senderNameAriaLabel\"\n        aria-invalid=\"host.isInvalidControl('senderDisplayName')\"\n        [readonly]=\"host.defaultSenderName\"\n        aria-describedby=\"compose-mailout-sender-name-error\"\n        placeholder=\"Write sender name\"\n        i18n-placeholder=\"\n          Sender name placeholder text@@messages.employeeCreateMailout.composeMailoutForm.senderNamePlaceholder\"\n        labelClasses=\"form-label\"\n        formControlName=\"senderDisplayName\"\n      >\n      </bb-input-text-ui>\n      <p\n        class=\"bb-text-support bb-subtitle\"\n        data-role=\"sender-name-subtitle\"\n        i18n=\"\n          Employee name will be replaced for the\n          recipient@@messages.employeeCreateMailout.composeMailoutForm.senderDisplayNameSubtitleText\"\n      >\n        Employee name will be replaced for the recipient\n      </p>\n      <bb-input-validation-message-ui\n        id=\"compose-mailout-sender-name-error\"\n        [showErrors]=\"host.isInvalidControl('senderDisplayName')\"\n      >\n        <span\n          *ngIf=\"host.hasError('senderDisplayName', 'required')\"\n          i18n=\"\n            Error message if field is\n            required@@messages.createMessage.composeMessageForm.errors.senderDisplayNameMessageRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-dropdown-single-select-ui\n        *ngIf=\"\n          topics?.length\n            ? topicPlaceholderConfig.selectTopicPlaceholder\n            : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n        \"\n        data-role=\"topics\"\n        [options]=\"topics\"\n        displayAttributePath=\"name\"\n        formControlName=\"topic\"\n        label=\"Topic\"\n        i18n-label=\"Topic label text@@messages.employeeCreateMailout.composeMailoutForm.topicLabel\"\n        aria-label=\"Topic\"\n        i18n-aria-label=\"Topic aria-label text@@messages.employeeCreateMailout.composeMailoutForm.topicAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('topic')\"\n        aria-describedby=\"compose-mailout-topic-error\"\n        labelClasses=\"form-label\"\n        [attr.placeholder]=\"topicPlaceholder\"\n        [placeholder]=\"topicPlaceholder\"\n        (blur)=\"host.resetFormOnElementBlur()\"\n      ></bb-dropdown-single-select-ui>\n      <bb-input-validation-message-ui id=\"compose-mailout-topic-error\" [showErrors]=\"host.isInvalidControl('topic')\">\n        <span\n          *ngIf=\"host.hasError('topic', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            required@@messages.employeeCreateMailout.composeMailoutForm.errors.subjectRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"form-group\">\n      <bb-input-text-ui\n        data-role=\"subject\"\n        label=\"Subject\"\n        i18n-label=\"Subject label text@@messages.employeeCreateMailout.composeMailoutForm.subjectLabel\"\n        aria-label=\"Subject\"\n        i18n-aria-label=\"Subject aria-label text@@messages.employeeCreateMailout.composeMailoutForm.subjectAriaLabel\"\n        [aria-invalid]=\"host.isInvalidControl('subject')\"\n        aria-describedby=\"compose-mailout-subject-error\"\n        placeholder=\"Write subject\"\n        i18n-placeholder=\"\n          Subject placeholder text@@messages.employeeCreateMailout.composeMailoutForm.subjectPlaceholder\"\n        labelClasses=\"form-label\"\n        formControlName=\"subject\"\n        [maxlength]=\"host.maxSubjectLength\"\n      >\n      </bb-input-text-ui>\n      <bb-input-validation-message-ui\n        id=\"compose-mailout-subject-error\"\n        [showErrors]=\"host.isInvalidControl('subject')\"\n      >\n        <span\n          *ngIf=\"host.hasError('subject', 'required')\"\n          i18n=\"\n            Error message if subject field is\n            empty@@messages.employeeCreateMailout.composeMailoutForm.errors.subjectRequired\"\n          >Field is required</span\n        >\n        <span\n          *ngIf=\"host.hasError('subject', 'maxlength')\"\n          i18n=\"\n            Error message if subject value is more then maxlength\n            value@@messages.employeeCreateMailout.composeMailoutForm.errors.subjectMaxlength\"\n          >Your input of {{ newMessageFormGroup?.get('subject')?.value?.length }} characters exceeds the limit of\n          {{ host.maxSubjectLength }}. Please rephrase.</span\n        >\n      </bb-input-validation-message-ui>\n    </div>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <div class=\"bb-stack\">\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"notDeletable\"\n          aria-label=\"Can't be deleted\"\n          data-role=\"deletable\"\n          i18n-aria-label=\"\n            checkbox deletable aria-label@@messages.employeeCreateMailout.composeMailoutForm.deletableCheckboxAriaLabel\"\n          label=\"Can't be deleted\"\n          i18n-label=\"\n            deletable checkbox label text@@messages.employeeCreateMailout.composeMailoutForm.deletableCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n\n        <bb-input-checkbox-ui\n          class=\"bb-stack__item bb-stack__item--fill\"\n          formControlName=\"important\"\n          aria-label=\"important\"\n          data-role=\"important\"\n          i18n-aria-label=\"\n            checkbox important aria-label@@messages.employeeCreateMailout.composeMailoutForm.importantCheckboxAriaLabel\"\n          label=\"Important\"\n          i18n-label=\"\n            important checkbox label text@@messages.employeeCreateMailout.composeMailoutForm.importantCheckboxLabel\"\n        ></bb-input-checkbox-ui>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <bb-rich-text-editor-ui\n        label=\"Message\"\n        data-role=\"message-body\"\n        i18n-label=\"Message label text@@messages.employeeCreateMailout.composeMailoutForm.messageLabel\"\n        aria-label=\"Message\"\n        i18n-aria-label=\"Message aria-label text@@messages.employeeCreateMailout.composeMailoutForm.messageAriaLabel\"\n        [attr.aria-invalid]=\"host.isInvalidControl('body')\"\n        [attr.aria-describedby]=\"'compose-mailout-body-error'\"\n        placeholder=\"Write some text\"\n        i18n-placeholder=\"\n          Message placeholder text@@messages.employeeCreateMailout.composeMailoutForm.messagePlaceholder\"\n        formControlName=\"body\"\n        [counter]=\"true\"\n        [maxLength]=\"host.maxMessageLength\"\n        [required]=\"!host.templateFile\"\n      >\n        <ng-template #actions bbRichTextEditorActions>\n          <bb-rich-text-editor-bold-action></bb-rich-text-editor-bold-action>\n          <bb-rich-text-editor-italic-action></bb-rich-text-editor-italic-action>\n          <bb-rich-text-editor-underline-action></bb-rich-text-editor-underline-action>\n          <bb-rich-text-editor-strikethrough-action> </bb-rich-text-editor-strikethrough-action>\n          <bb-rich-text-editor-olist-action></bb-rich-text-editor-olist-action>\n          <bb-rich-text-editor-ulist-action> </bb-rich-text-editor-ulist-action>\n          <bb-rich-text-editor-link-action></bb-rich-text-editor-link-action>\n        </ng-template>\n      </bb-rich-text-editor-ui>\n      <bb-input-validation-message-ui id=\"compose-mailout-body-error\" [showErrors]=\"host.isInvalidControl('body')\">\n        <span\n          *ngIf=\"host.hasError('body', 'required')\"\n          i18n=\"\n            Error message if field is required@@messages.employeeCreateMailout.composeMailoutForm.errors.messageRequired\"\n        >\n          Field is required\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n    <div class=\"form-group\">\n      <bb-messages-upload-attachments\n        [initAttachments]=\"host.defaultMailout?.attachments\"\n        [maxSize]=\"maxAttachmentSize\"\n        formControlName=\"attachments\"\n      ></bb-messages-upload-attachments>\n    </div>\n    <div class=\"bb-button-bar\">\n      <bb-load-button-ui\n        class=\"bb-button-bar__button\"\n        type=\"submit\"\n        data-role=\"submit\"\n        aria-label=\"Continue\"\n        i18n-aria-label=\"\n          Submit button aria-label text@@messages.employeeCreateMailout.composeMailoutForm.submitButtonAriaLabel\"\n        i18n=\"Submit button text@@messages.employeeCreateMailout.composeMailoutForm.submitButton\"\n        [isLoading]=\"host.formLoading\"\n      >\n        Continue\n      </bb-load-button-ui>\n      <button\n        bbButton\n        bbPreventBubbleDown\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        data-role=\"discard\"\n        aria-label=\"Discard\"\n        i18n-aria-label=\"\n          Discard button aria-label text@@messages.employeeCreateMailout.composeMailoutForm.discardButtonAriaLabel\"\n        i18n=\"Discard button text@@messages.employeeCreateMailout.composeMailoutForm.discardButton\"\n        (click)=\"host.onDiscard(true)\"\n      >\n        Discard\n      </button>\n    </div>\n  </form>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"host.confirmationModal.opened\"\n    [type]=\"host.confirmationModal.type\"\n    (cancel)=\"host.onDiscard(false)\"\n    (confirm)=\"host.confirmConfirmationModal()\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #messageComposeSuccess>\n  <ng-container bbEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>\n\n<ng-template bbEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizable let-host>\n  <span\n    i18n=\"\n      Your mailout has been successfully sent.|Text of successful conversation\n      compose@@messages.employeeCreateMailout.composeMailoutForm.messageSuccessCompose\"\n    >Your mailout has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #messageComposeError>\n  <ng-container bbEmployeeCreateMailoutFormErrorNotificationHeaderCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>\n\n<ng-template bbEmployeeCreateMailoutFormErrorNotificationHeaderCustomizable let-host>\n  <span\n    i18n=\"\n      There is an error sending mailout.|Text of failed conversation\n      compose@@messages.employeeCreateMailout.composeMailoutForm.messageErrorCompose\"\n    >There is an error sending mailout.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { InputFileModule } from '@backbase/ui-ang/input-file';\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\nimport { RichTextEditorModule } from '@backbase/ui-ang/rich-text-editor';\nimport {\n  EmployeeCreateMailoutFormComponent,\n  EmployeeCreateMailoutFormCustomizableDirective,\n  EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective,\n  EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective,\n} from './employee-create-mailout-form.component';\nimport { EmployeeCreateMailoutFormService } from './employee-create-mailout-form.service';\nimport { MessagesManipulationConfirmModalModule } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module';\nimport { MessagesUploadAttachmentsModule } from '../../upload-attachments/messages-upload-attachments.module';\nimport { PreventBubbleDownModule } from '../../../directives/prevent-bubble-down/prevent-bubble-down.module';\n\nconst components = [EmployeeCreateMailoutFormComponent];\nconst directives = [\n  EmployeeCreateMailoutFormCustomizableDirective,\n  EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective,\n  EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective,\n];\nconst uiModules = [\n  DropdownSingleSelectModule,\n  FileAttachmentModule,\n  InputFileModule,\n  InputValidationMessageModule,\n  InputTextModule,\n  RichTextEditorModule,\n  ButtonModule,\n  InputCheckboxModule,\n  LoadButtonModule,\n];\nconst innerModules = [ReactiveFormsModule, MessagesManipulationConfirmModalModule, MessagesUploadAttachmentsModule];\n\n@NgModule({\n  imports: [CommonModule, PreventBubbleDownModule, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  providers: [EmployeeCreateMailoutFormService],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n})\nexport class EmployeeCreateMailoutFormModule {}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { delay, filter, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-messages-body-preview, bb-message-preview',\n  templateUrl: './messages-preview.component.html',\n})\nexport class MessagesBodyPreviewComponent implements OnDestroy {\n  /**\n   * Body from body message\n   */\n  @Input()\n  set body(val: string) {\n    this.iframeContext.next(val);\n  }\n\n  /**\n   * Flag to control visibility\n   */\n  isVisible = false;\n\n  private readonly iframeContext = new BehaviorSubject<string | undefined>(undefined);\n  private readonly destroy = new Subject<void>();\n\n  /**\n   * Message preview\n   */\n  @ViewChild('iframeRef', { static: true }) iframeRef!: ElementRef<HTMLIFrameElement>;\n\n  constructor(private readonly renderer: Renderer2, private readonly cd: ChangeDetectorRef) {}\n\n  ngOnDestroy() {\n    this.destroy.next();\n  }\n\n  /**\n   * Load preview iframe\n   */\n  iframeLoad() {\n    const iframeElement = this.iframeRef.nativeElement;\n    const iframeBody = (iframeElement.contentDocument as Document).body;\n\n    this.renderer.setStyle(iframeElement, 'width', '100%');\n    this.renderer.setStyle(iframeElement, 'border', '0');\n    this.renderer.setStyle(iframeBody, 'margin', '0');\n\n    this.iframeContext\n      .pipe(\n        filter(Boolean),\n        tap(content => this.renderer.setProperty(iframeBody, 'innerHTML', content)),\n        delay(300),\n        takeUntil(this.destroy),\n      )\n      .subscribe(() => {\n        let currentHeight = iframeBody.scrollHeight;\n        let previousHeight = 0;\n        let counter = 0;\n\n        /* Several iterations are needed to set iframe height after recalculating template body height\n        that contains elements with height or size set in relative units. */\n        do {\n          this.renderer.setStyle(iframeElement, 'height', `${currentHeight}px`);\n          previousHeight = currentHeight;\n          currentHeight = iframeBody.scrollHeight;\n          counter++;\n        } while (previousHeight !== currentHeight && counter < 5);\n\n        this.isVisible = true;\n        this.cd.detectChanges();\n      });\n  }\n}\n","<iframe\n  #iframeRef\n  title=\"Message preview\"\n  i18n-title=\"Message preview title@@messages.message-preview-title\"\n  [style.visibility]=\"isVisible ? 'visible' : 'hidden'\"\n  (load)=\"iframeLoad()\"\n></iframe>\n","import { Component, Directive, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { Attachment } from '../../models/attachment.model';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n/**\n * @name MessagesConversationMessageComponent\n *\n * @description\n * Component displays conversation message.\n */\n@Component({\n  selector: 'bb-messages-conversation-message, bb-message-ui',\n  templateUrl: './messages-conversation-message.component.html',\n})\nexport class MessagesConversationMessageComponent implements OnInit {\n  private static counter = 0;\n\n  /**\n   * Datetime of the message creation, format date-time\n   */\n  @Input() created: string | undefined;\n\n  /**\n   * Text of the message, could have HTML-tags\n   */\n  @Input('message')\n  set message(value: string | undefined) {\n    this.messageText = value;\n    this.messageTextWithoutTags = value ? this.replaceTags(value) : undefined;\n  }\n\n  /**\n   * Senders name or templateRef\n   */\n  @Input() sender: string | TemplateRef<any> | undefined;\n  /**\n   * Toggles message collapse (text-truncate and replacement HTML-tags)\n   */\n  @Input() opened = false;\n  /**\n   * Array of the attached files\n   */\n  @Input() attachments: Attachment[] | undefined;\n\n  /**\n   * Is message body contains html\n   */\n  @Input() isBodyHtml = false;\n\n  /**\n   * Default sender template\n   */\n  @ViewChild('defaultSenderTemplate', { static: true }) defaultSenderTemplate: TemplateRef<any> | undefined;\n\n  /**\n   * Message text\n   */\n  messageText: string | undefined;\n\n  /**\n   * Message text without tags\n   */\n  messageTextWithoutTags: string | undefined;\n\n  /**\n   * The unique ID HTML property for each widget component instance.\n   */\n  messageId = `messages-conversation-message-${MessagesConversationMessageComponent.counter++}`;\n\n  /**\n   * Toggle message on click\n   *\n   * @param event Click event\n   */\n  onClick(event: any) {\n    const selection = document.getSelection();\n\n    if (\n      (selection && selection.toString().length) ||\n      (event.target.tagName.toLowerCase() === 'a' && event.target.href)\n    ) {\n      return;\n    }\n\n    this.opened = !this.opened;\n  }\n\n  /**\n   * Get sender template\n   *\n   * @returns Sender template\n   */\n  getSenderTemplate(): TemplateRef<any> | undefined {\n    if (this.sender instanceof TemplateRef) {\n      return this.sender;\n    }\n\n    return this.defaultSenderTemplate;\n  }\n\n  ngOnInit() {\n    if (typeof this.messageText === 'undefined') {\n      throw new Error(`\"message\" input is required in \"${this.constructor.name}\"`);\n    }\n  }\n\n  private readonly replaceTags = (content: string) => (content ? content.replace(/<[^>]+>/gi, '') : '');\n}\n\n@Directive({\n  selector: '[bbMessagesConversationMessageCustomizable]',\n})\nexport class MessagesConversationMessageCustomizableDirective extends BbTemplate<\n  MessagesConversationMessageComponent,\n  undefined\n> {}\n","<ng-container bbMessagesConversationMessageCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbMessagesConversationMessageCustomizable let-host>\n  <div\n    class=\"bb-message-ui card-body\"\n    [attr.role]=\"host.isBodyHtml ? null : 'button'\"\n    (bbKeyboardClick)=\"!host.isBodyHtml && host.onClick($event)\"\n    tabindex=\"0\"\n    data-role=\"conversation-message\"\n    [attr.aria-controls]=\"host.messageId\"\n    [attr.aria-expanded]=\"host.opened\"\n  >\n    <div class=\"bb-stack bb-block--md\">\n      <span class=\"sr-only\" i18n=\"Message from|Before sender name@@messages.messagesCommon.messageFrom\"\n        >Message from</span\n      >\n      <span class=\"bb-text-semi-bold\" data-role=\"sender-name\">\n        <ng-container *ngTemplateOutlet=\"host.getSenderTemplate()\"></ng-container>\n      </span>\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <div class=\"bb-stack\">\n          <bb-icon-ui\n            class=\"bb-stack__item bb-text-support\"\n            *ngIf=\"host.attachments && host.attachments.length\"\n            name=\"attachment\"\n            data-role=\"messages-attachment\"\n            aria-label=\"Contains attachments\"\n            i18n-aria-label=\"\n              Contains attachments|Message contains attachments@@messages.messagesCommon.containsAttachments\"\n            bbTooltip=\"Contains attachments\"\n            i18n-bbTooltip=\"@@messages.messagesCommon.containsAttachments\"\n            triggers=\"hover\"\n            placement=\"top\"\n            container=\"body\"\n          ></bb-icon-ui>\n          <div *ngIf=\"host.created\" data-role=\"messages-creation-date\">\n            <span\n              class=\"sr-only\"\n              i18n=\"Date|'Date:' word that precedes message creation date@@messages.messagesCommon.labelForDate\"\n              >Date:</span\n            >\n            <span>{{ host.created | date: 'fullDate' }} </span>\n            <span\n              i18n=\"At|To bridge date and time (Monday March 28th, 2018 at 9:15 AM)@@messages.messagesCommon.createdAt\"\n              >at</span\n            >\n            <span> {{ host.created | date: 'shortTime' }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\" [ngClass]=\"{ 'col-md-8': !host.opened }\" [attr.id]=\"host.messageId\">\n        <div\n          data-role=\"message-content\"\n          *ngIf=\"!host.isBodyHtml; else htmlViewTmpl\"\n          [innerHtml]=\"host.opened ? host.messageText : host.messageTextWithoutTags\"\n          [ngClass]=\"{\n            'text-truncate': !host.opened,\n            'bb-block--md': host.opened && host.attachments\n          }\"\n        ></div>\n        <div data-role=\"attachments-wrapper\" class=\"row\" *ngIf=\"host.opened && host.attachments?.length\">\n          <div class=\"col-4\" *ngFor=\"let attachment of host.attachments\">\n            <bb-file-attachment-ui\n              [name]=\"attachment.filename\"\n              [size]=\"attachment.size\"\n              [fileContent]=\"attachment.linkStream\"\n            ></bb-file-attachment-ui>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #htmlViewTmpl>\n    <bb-messages-body-preview [body]=\"host.messageText\"></bb-messages-body-preview>\n  </ng-template>\n</ng-template>\n\n<ng-template #defaultSenderTemplate>\n  {{ sender }}\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MessagesBodyPreviewComponent } from './messages-preview.component';\n\n@NgModule({\n  declarations: [MessagesBodyPreviewComponent],\n  exports: [MessagesBodyPreviewComponent],\n  imports: [CommonModule],\n})\nexport class MessagesBodyPreviewModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n\nimport {\n  MessagesConversationMessageComponent,\n  MessagesConversationMessageCustomizableDirective,\n} from './messages-conversation-message.component';\nimport { MessagesBodyPreviewModule } from '../messages-preview/messages-preview.module';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nconst uiModules = [FileAttachmentModule, IconModule, KeyboardClickModule, TooltipModule];\nconst innerModules = [MessagesBodyPreviewModule];\n\n@NgModule({\n  declarations: [MessagesConversationMessageComponent, MessagesConversationMessageCustomizableDirective],\n  exports: [\n    MessagesConversationMessageComponent,\n    MessagesConversationMessageCustomizableDirective,\n    ...uiModules,\n    ...innerModules,\n  ],\n  imports: [CommonModule, ...uiModules, ...innerModules],\n})\nexport class MessagesConversationMessageModule {}\n","import { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\nexport const shareReplayOnce = () =>\n  function <T>(source: Observable<T>) {\n    // use refCount: true to prevent memory leaks issue with shareReplay\n    return source.pipe(shareReplay({ refCount: true, bufferSize: 1 }));\n  };\n","export class UnknownIdError extends Error {\n  readonly name = 'UnknownIdError';\n  constructor() {\n    super();\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UnknownIdError } from '../../utils/unknown-id-error';\n\nexport declare type MessagesErrorKind =\n  | 'MessagesRequestConnectivityError'\n  | 'MessagesRequestBadRequest'\n  | 'MessagesRequestAccessDenied'\n  | 'MessagesRequestNotFound'\n  | 'MessagesRequestUnknownIdError'\n  | 'MessagesRequestUnknownError';\n\n@Component({\n  selector: 'bb-messages-request-error, bb-messages-request-error-ui',\n  templateUrl: './messages-request-error.component.html',\n})\nexport class MessagesRequestErrorComponent {\n  /**\n   * The input that set errorKind from `MessagesErrorKind`\n   */\n  @Input()\n  set error(error: HttpErrorResponse | UnknownIdError) {\n    if (error instanceof UnknownIdError) {\n      this.errorKind = 'MessagesRequestUnknownIdError';\n    } else if (error.error instanceof ErrorEvent) {\n      this.errorKind = 'MessagesRequestUnknownError';\n    } else {\n      switch (error.status) {\n        case 0:\n          this.errorKind = 'MessagesRequestConnectivityError';\n          break;\n        case 400:\n          this.errorKind = 'MessagesRequestBadRequest';\n          break;\n        case 401:\n          this.errorKind = 'MessagesRequestAccessDenied';\n          break;\n        case 403:\n          this.errorKind = 'MessagesRequestAccessDenied';\n          break;\n        case 404:\n          this.errorKind = 'MessagesRequestNotFound';\n          break;\n        default:\n          this.errorKind = 'MessagesRequestUnknownError';\n      }\n    }\n  }\n\n  /**\n   * Error type\n   */\n  errorKind: MessagesErrorKind | undefined;\n}\n","<ng-container [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'MessagesRequestAccessDenied'\"\n    class=\"bb-state-container\"\n    title=\"No Permissions\"\n    i18n-title=\"\n      No Permissions|Error state label when user does not have permissions to view messages\n      request@@messages-request.error.accessDenied.title\"\n    subtitle=\"You can't access this widget. Contact system administrator for details.\"\n    i18n-subtitle=\"\n      No permissions subtitle|Error state subtitle label when user does not have permissions to view messages\n      requests@@messages-request.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"\n    iconSize=\"xxl\"\n  ></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'MessagesRequestConnectivityError'\"\n    class=\"bb-state-container\"\n    title=\"Page couldn’t load\"\n    i18n-title=\"\n      Page couldn’t load|Empty state label when there is connectivity error@@messages-request.error.connectivity.title\"\n    subtitle=\"Try to reload the page or contact the system administrator.\"\n    i18n-subtitle=\"\n      Not found error subtitle|Empty state subtitle label when there is connectivity\n      error@@messages-request.error.connectivity.subtitle\"\n    iconModifier=\"error-outline\"\n    iconSize=\"xxl\"\n  ></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'MessagesRequestUnknownIdError'\"\n    class=\"bb-state-container\"\n    title=\"Unknown ID\"\n    i18n-title=\"Unknown ID|Empty state label when there is unknown ID error@@messages-request.error.unknown-id.title\"\n    subtitle=\"There is no ID passed with URL. For more information contact your system administrator.\"\n    i18n-subtitle=\"\n      Unknown ID Error subtitle|Empty state subtitle label when there is unknown id\n      error@@messages-request.error.unknown-id.subtitle\"\n    iconModifier=\"error\"\n  ></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'MessagesRequestNotFound'\"\n    class=\"bb-state-container\"\n    title=\"This item cannot be found\"\n    i18n-title=\"\n      This item cannot be found|Empty state label when there is not found error@@messages-request.error.not-found.title\"\n    subtitle=\"It may have been deleted. For more info please contact your bank.\"\n    i18n-subtitle=\"\n      Not found error subtitle|Empty state subtitle label when there is not found\n      error@@messages-request.error.not-found.subtitle\"\n    iconModifier=\"error-outline\"\n    iconSize=\"xxl\"\n  ></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    class=\"bb-state-container\"\n    title=\"Unexpected Error\"\n    i18n-title=\"\n      Unexpected Error title|Empty state label when there is an unexpected\n      error@@messages-request.error.unexpected.title\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n    i18n-subtitle=\"\n      Unexpected error subtitle|Empty state subtitle label when there is an unexpected\n      error@@messages-request.error.unexpected.subtitle\"\n    iconModifier=\"error-outline\"\n    iconSize=\"xxl\"\n  ></bb-empty-state-ui>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\n\nimport { MessagesRequestErrorComponent } from './messages-request-error.component';\n\nconst uiModules = [EmptyStateModule];\n\n@NgModule({\n  declarations: [MessagesRequestErrorComponent],\n  exports: [MessagesRequestErrorComponent, ...uiModules],\n  imports: [CommonModule, ...uiModules],\n})\nexport class MessagesRequestErrorModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MessagecenterHttpService, DeleteResponseBody, Metadata } from '@backbase/messages-v5-http-ang';\nimport { BaseUploadAttachmentsService } from './base-attachments.service';\n\n@Injectable()\nexport class MessagesClientUploadAttachmentsService implements BaseUploadAttachmentsService {\n  constructor(private readonly service: MessagecenterHttpService) {}\n\n  /**\n   * Delete attachments by ids\n   *\n   * @param ids Attachments list\n   * @returns Delete attachments stream\n   */\n  deleteAttachments(ids: Array<string>): Observable<DeleteResponseBody | null> {\n    return this.service.deleteMessageAttachments({ ids });\n  }\n\n  /**\n   * Upload attachments\n   *\n   * @param attachment Attachment\n   * @returns Post message attachments stream\n   */\n  uploadAttachment(attachment: Blob): Observable<Metadata | null> {\n    return this.service.postMessageAttachments({ attachment });\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { defaultModelObservable } from '../../utils/item-model-property';\n\nexport const DefaultWidgetProperties = {\n  createMessageOpenEventName: 'bb.event.messages.create.message.open',\n  createMessageClosedEventName: 'bb.event.messages.create.message.close',\n  itemsPerPage: 10,\n  mailboxType: '',\n  customerServiceTitle: 'Customer Service',\n  viewType: 'all',\n  hideAssignedToColumn: false,\n  showMailboxTypes: true,\n};\n\n@Injectable()\nexport class BaseConversationsListPropertiesService {\n  constructor(@Optional() private readonly itemModel?: ItemModel) {}\n\n  /**\n   * Quantity of items to show per page/to add per request, used for Client and Employee widget\n   */\n  get itemsPerPage(): Observable<number> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.itemsPerPage);\n    }\n\n    return this.itemModel.property('itemsPerPage', DefaultWidgetProperties.itemsPerPage);\n  }\n\n  /**\n   * Event published to open Create message modal widget, used for Client and Employee widget\n   */\n  get createMessageOpenEventName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.createMessageOpenEventName);\n    }\n\n    return this.itemModel.property('createMessageOpenEventName', DefaultWidgetProperties.createMessageOpenEventName);\n  }\n\n  /**\n   * Event published when Create message modal widget was closed,\n   * used for Client and Employee widget to update list of conversations\n   */\n  get createMessageClosedEventName(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.createMessageClosedEventName);\n    }\n\n    return this.itemModel.property(\n      'createMessageClosedEventName',\n      DefaultWidgetProperties.createMessageClosedEventName,\n    );\n  }\n\n  /**\n   * Mailbox type property, used for Client widget\n   */\n  get mailboxType(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.mailboxType);\n    }\n\n    return this.itemModel.property('mailboxType', DefaultWidgetProperties.mailboxType);\n  }\n\n  /**\n   * Customer service title, localizable, used for Client widget\n   */\n  get customerServiceTitle(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.customerServiceTitle);\n    }\n\n    return this.itemModel.property('customerServiceTitle', DefaultWidgetProperties.customerServiceTitle);\n  }\n\n  /**\n   * View type for conversations list (all, assigned, unassigned, resolved, my-resolved, drafts),\n   * used for Employee widget\n   */\n  get viewType(): Observable<string> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.viewType);\n    }\n\n    return this.itemModel.property('viewType', DefaultWidgetProperties.viewType);\n  }\n\n  /**\n   * Property to hide `Assigned to` column, used for Employee widget\n   */\n  get hideAssignedToColumn(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.hideAssignedToColumn);\n    }\n\n    return this.itemModel.property('hideAssignedToColumn', DefaultWidgetProperties.hideAssignedToColumn);\n  }\n\n  /**\n   * Property to show mailbox types (inbox and sent), used for Employee widget\n   */\n  get showMailboxTypes(): Observable<boolean> {\n    if (!this.itemModel) {\n      return defaultModelObservable(DefaultWidgetProperties.showMailboxTypes);\n    }\n\n    return this.itemModel.property('showMailboxTypes', DefaultWidgetProperties.showMailboxTypes);\n  }\n}\n","import { Component, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, Subject } from 'rxjs';\nimport { map, pluck, takeUntil } from 'rxjs/operators';\nimport { ConversationThread, MessageDraftsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { SharedMethodsService } from '../../services/shared-methods/shared-methods.service';\nimport { ApplyFilterParams, FilterParams, MailboxType } from './model/params.model';\nimport { BaseConversationsListPropertiesService } from './base-conversations-list-properties.service';\n@Component({\n  template: '',\n})\nexport class BaseConversationsListWidgetComponent implements OnDestroy {\n  /**\n   * Emits id of the selected conversation\n   */\n  @Output() conversationId = new EventEmitter();\n\n  /**\n   * Emits filter object to keep widget filter params\n   */\n  @Output() filter = new EventEmitter<string>();\n\n  /**\n   * The error response information.\n   */\n  errorResponse: HttpErrorResponse | undefined;\n\n  /**\n   * The `Unsubscribe` subject.\n   */\n  readonly unsubscribe$ = new Subject<boolean>();\n\n  /**\n   * The loading parameter indicating the starting page for the data to be loaded from.\n   */\n  readonly from$ = new BehaviorSubject(0);\n\n  /**\n   * The parameters object with the starting page number.\n   */\n  filterParams: FilterParams = {\n    from: 0,\n  };\n\n  /**\n   * The parameters subject with applied filters.\n   */\n  readonly filterParams$: Observable<FilterParams> = this.getRouteParam(this.activatedRoute, 'filter').pipe(\n    takeUntil(this.unsubscribe$),\n    map(params => {\n      if (params) {\n        try {\n          return JSON.parse(params);\n        } catch (err) {}\n      }\n\n      return {};\n    }),\n  );\n\n  constructor(\n    readonly shared: SharedMethodsService,\n    readonly activatedRoute: ActivatedRoute,\n    readonly properties: BaseConversationsListPropertiesService,\n  ) {}\n\n  /**\n   * The method to change the page and load conversations corresponding to that page.\n   *\n   * @param page Page number\n   */\n  onPageChange(page?: number) {\n    if (page || page === 0) {\n      this.from$.next(page);\n      this.filterParams.from = page;\n      this.emitFilterParams(this.filterParams);\n    }\n  }\n\n  /**\n   * The method to switch to another mailbox type and load corresponding data.\n   *\n   * @param mailbox Mailbox type\n   */\n  onMailboxApply(mailbox: MailboxType) {\n    this.from$.next(0);\n    this.filterParams = this.setMailboxTypedParams(mailbox);\n    this.emitFilterParams(this.filterParams);\n  }\n\n  /**\n   * The method to fetch conversation list according to the applied filter parameters.\n   *\n   * @param obj Filter params\n   */\n  onFilterFormApply(obj: ApplyFilterParams) {\n    this.from$.next(0);\n    this.filterParams = this.setFilterFormParams(obj);\n    this.emitFilterParams(this.filterParams);\n  }\n\n  /**\n   * The method to open the draft thread.\n   *\n   * @param draft Draft data\n   */\n  openDraft(draft: ConversationThread | MessageDraftsGetResponseBody) {\n    if ('conversationId' in draft) {\n      this.conversationId.emit(draft.conversationId);\n    } else {\n      this.properties.createMessageOpenEventName\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(eventName => this.shared.eventBusPublish(eventName, { draftId: draft.id }));\n    }\n  }\n\n  /**\n   * The method to open the conversation thread.\n   *\n   * @param conversation Conversation data\n   */\n  openConversation(conversation: ConversationThread | string) {\n    this.conversationId.emit(typeof conversation === 'string' ? conversation : conversation.id);\n  }\n\n  /**\n   * The method to open the error notification.\n   *\n   * @param error Http error response\n   */\n  showErrorNotification(error: HttpErrorResponse) {\n    this.shared.openNotification(this.shared.getErrorMessage(error), 'error');\n\n    return EMPTY;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  /**\n   * The method to emit the filtering parameters.\n   *\n   * @param filterParams Filter params data\n   */\n  emitFilterParams(filterParams: FilterParams) {\n    const params = JSON.stringify(filterParams);\n\n    this.filter.emit(params);\n  }\n\n  private setMailboxTypedParams(mailboxType: string) {\n    return {\n      from: 0,\n      mailboxType,\n    };\n  }\n\n  private setFilterFormParams(filterParams: ApplyFilterParams) {\n    return {\n      from: 0,\n      ...filterParams,\n    };\n  }\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map(params => params[0] || params[1]),\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { GetIdentities, GetIdentity } from '@backbase/data-ang/user';\nimport { TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\n\nexport abstract class FilterService {\n  abstract getTopics(): Observable<TopicsGetResponseBody[] | null>;\n  abstract getUsers?(text: string): Observable<GetIdentities | null>;\n  abstract getUserById?(id: string): Observable<GetIdentity | null>;\n}\n","import { Component, Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { IdentityListedItem } from '@backbase/data-ang/user';\nimport { TopicsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { FilterService } from '../model/filter-service.model';\nimport { ApplyFilterParams } from '../model/params.model';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { topicPlaceholderConfig } from '../../../utils/topic-placeholder-text-helper';\n\n@Component({\n  selector: 'bb-messages-filter-conversation-list',\n  templateUrl: './filter-conversations-list.component.html',\n})\nexport class FilterConversationsListComponent implements OnDestroy, OnInit {\n  /**\n   * Css classes for header block\n   */\n  @Input() headerClass: string | undefined;\n  /**\n   * Css classes for body block\n   */\n  @Input() bodyClass: string | undefined;\n\n  /**\n   * Observable filter params to init component with\n   */\n  @Input() set filterParams(value: ApplyFilterParams | undefined) {\n    if (value && this.checkFilterParams(this.filterParams$.getValue(), value)) {\n      this.applied = true;\n      this.filterParams$.next(value);\n    }\n  }\n  /**\n   * Configs for topic selector placeholder\n   */\n  public readonly topicPlaceholderConfig = topicPlaceholderConfig;\n\n  /**\n   * Event emitter for apply action\n   */\n  @Output() apply = new EventEmitter<ApplyFilterParams>();\n  /**\n   * Event emitter for clear action\n   */\n  @Output() clear = new EventEmitter<void>();\n\n  /**\n   * The filters form reference.\n   */\n  filterForm = this.fb.group({\n    date: [''],\n    topic: [''],\n    user: [''],\n  });\n\n  /**\n   * The applied flag.\n   */\n  applied = false;\n\n  /**\n   * The opened flag.\n   */\n  opened = false;\n\n  /**\n   * The stream with the topic list.\n   */\n  readonly topics$ = new Subject<TopicsGetResponseBody[] | null>();\n\n  /**\n   * The method to get the typeahead options.\n   */\n  readonly typeaheadOptions = {\n    ngbTypeahead: this.searchUsers.bind(this),\n    resultFormatter: (item: IdentityListedItem) => item.fullName,\n    inputFormatter: (item: IdentityListedItem) => item.fullName,\n  };\n\n  private readonly filterParams$ = new BehaviorSubject<ApplyFilterParams>({});\n  private readonly unsubscribe$ = new Subject<void>();\n\n  constructor(\n    private readonly service: FilterService,\n    private readonly fb: FormBuilder,\n    private readonly shared: SharedMethodsService,\n  ) {}\n\n  ngOnInit() {\n    combineLatest([this.filterParams$, this.topics$])\n      .pipe(\n        switchMap(([params, topics]) => {\n          const { topicId, endDate, startDate, userId } = params;\n\n          if (topics && topicId) {\n            this.filterForm.controls['topic'].setValue(\n              topics.find((topic: TopicsGetResponseBody) => topic.id === topicId),\n            );\n          }\n\n          if (startDate && endDate) {\n            this.filterForm.controls['date'].setValue({\n              from: new Date(startDate).toISOString(),\n              to: new Date(endDate).toISOString(),\n            });\n          }\n\n          if (userId && this.service.getUserById) {\n            return this.service\n              .getUserById(userId)\n              .pipe(tap(user => user && this.filterForm.controls['user'].setValue({ ...user, id: params.userId })));\n          }\n\n          return EMPTY;\n        }),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe();\n\n    this.service\n      .getTopics()\n      .pipe(take(1))\n      .subscribe(topics => {\n        this.topics$.next(topics);\n        this.topics$.complete();\n      });\n  }\n\n  /**\n   * The method to submit the form.\n   */\n  submit() {\n    const applyObject: ApplyFilterParams = this.convertToFilterParams(this.filterForm);\n\n    this.applied = !!Object.keys(applyObject).length;\n    this.opened = false;\n    this.apply.emit(applyObject);\n  }\n\n  /**\n   * The method to reset the form.\n   *\n   * @param apply Flag to submit or not the form\n   */\n  reset(apply = false) {\n    if (apply) {\n      this.filterForm.valueChanges.pipe(take(1)).subscribe(() => {\n        this.submit();\n      });\n    }\n\n    this.filterForm.reset();\n  }\n\n  /**\n   * The method to open or close the filter form.\n   */\n  triggerOpened() {\n    this.opened = !this.opened;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  private convertToFilterParams(form: FormGroup): ApplyFilterParams {\n    return {\n      ...(form.value.topic && { topicId: form.value.topic.id }),\n      ...(form.value.user && { userId: form.value.user.id }),\n      ...(form.value.date && {\n        startDate: this.formatDate(form.value.date.from),\n        endDate: this.formatDate(form.value.date.to),\n      }),\n    };\n  }\n\n  private formatDate(date: Date): string {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = d.getMonth() + 1;\n    const dt = d.getDate();\n    const finalDt = dt < 10 ? `0${dt}` : dt.toString();\n    const finalMonth = month < 10 ? `0${month}` : month.toString();\n\n    return `${year}-${finalMonth}-${finalDt}`;\n  }\n\n  private checkFilterParams(curr: Record<string, any>, next: Record<string, any>): boolean {\n    if (!Object.keys(next).length || !(next && (next.userId || next.topicId || (next.startDate && next.endDate)))) {\n      return false;\n    }\n\n    for (const key in next) {\n      if (curr[key] && curr[key] === next[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private searchUsers(text: Observable<string>): Observable<IdentityListedItem[] | null | undefined> {\n    return text.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      switchMap(value => {\n        if (!this.service.getUsers || !value.length) {\n          return EMPTY;\n        } else {\n          return this.service.getUsers(value).pipe(\n            map(response => response && response.identities),\n            catchError(err => {\n              this.shared.openNotification(this.shared.getErrorMessage(err), 'error');\n\n              return EMPTY;\n            }),\n          );\n        }\n      }),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbFilterConversationsListCustomizable]',\n})\nexport class FilterConversationsListCustomizableDirective extends BbTemplate<\n  FilterConversationsListComponent,\n  { topics: TopicsGetResponseBody[] }\n> {}\n","<ng-container\n  bbFilterConversationsListCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    topics: topics$ | async\n  }\"\n></ng-container>\n\n<ng-template bbFilterConversationsListCustomizable let-host let-topics=\"context.topics\">\n  <div [ngClass]=\"host.headerClass\" data-role=\"filters-header\">\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item\">\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            class=\"bb-button-bar__button\"\n            bbButton\n            [color]=\"host.applied ? 'primary' : 'secondary'\"\n            [ngClass]=\"{ active: host.opened }\"\n            (click)=\"host.triggerOpened()\"\n            data-role=\"filter-button\"\n          >\n            <bb-icon-ui [cropped]=\"true\" name=\"filter\"></bb-icon-ui>\n            <span\n              *ngIf=\"host.applied; else filtersTextDefault\"\n              i18n=\"\n                Filters applied|Text for filter button if filter was\n                applied@@messages.messagesCommon.conversationsListFilterConversation.filtersAppliedText\"\n              >Filters applied</span\n            >\n          </button>\n          <button\n            class=\"bb-button-bar__button\"\n            bbButton\n            color=\"link\"\n            *ngIf=\"host.applied\"\n            i18n=\"Clear filters@@messages.messagesCommon.conversationsListFilterConversation.clearFilterssButtonText\"\n            (click)=\"host.reset(true)\"\n            data-role=\"clear-header-button\"\n          >\n            Clear filters\n          </button>\n        </div>\n      </div>\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"host.opened\" [ngClass]=\"host.bodyClass\" data-role=\"filters-form-container\">\n    <form [formGroup]=\"host.filterForm\" (submit)=\"host.submit()\">\n      <div class=\"form-row form-group\">\n        <div class=\"col-4\">\n          <bb-dropdown-single-select-ui\n            *ngIf=\"\n              topics?.length\n                ? topicPlaceholderConfig.selectTopicPlaceholder\n                : topicPlaceholderConfig.noTopicsPlaceholder as topicPlaceholder\n            \"\n            label=\"Topic\"\n            data-role=\"topics\"\n            i18n-label=\"Topic label@@messages.messagesCommon.conversationsListFilterConversation.topicLabel\"\n            [options]=\"topics\"\n            displayAttributePath=\"name\"\n            [attr.placeholder]=\"topicPlaceholder\"\n            [placeholder]=\"topicPlaceholder\"\n            formControlName=\"topic\"\n          ></bb-dropdown-single-select-ui>\n        </div>\n        <div class=\"col-4\">\n          <bb-search-box-ui\n            label=\"Customer\"\n            i18n-label=\"\n              Customer label text@@messages.messagesCommon.conversationsListFilterConversation.customerLabelText\"\n            formControlName=\"user\"\n            placeholder=\"Search by name\"\n            i18n-placeholder=\"\n              Search by name\n              placeholder@@messages.messagesCommon.conversationsListFilterConversation.searchByNamePlaceholderText\"\n            [typeaheadOptions]=\"host.typeaheadOptions\"\n          ></bb-search-box-ui>\n        </div>\n        <div class=\"col-4\">\n          <bb-input-datepicker-ui\n            label=\"Date\"\n            i18n-label=\"Date label text@@messages.messagesCommon.conversationsListFilterConversation.dateLabelText\"\n            formControlName=\"date\"\n            [rangeSelection]=\"true\"\n          ></bb-input-datepicker-ui>\n        </div>\n      </div>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          i18n=\"Close@@messages.messagesCommon.conversationsListFilterConversation.closeButtonText\"\n          (click)=\"host.triggerOpened()\"\n          data-role=\"close-filter\"\n        >\n          Close\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          i18n=\"Apply@@messages.messagesCommon.conversationsListFilterConversation.applyButtonText\"\n          data-role=\"apply-filter\"\n        >\n          Apply\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          i18n=\"Clear All@@messages.messagesCommon.conversationsListFilterConversation.clearAllButtonText\"\n          (click)=\"host.reset()\"\n          data-role=\"clear-filter\"\n        >\n          Clear All\n        </button>\n      </div>\n    </form>\n  </div>\n\n  <ng-template #filtersTextDefault>\n    <span\n      i18n=\"\n        Filters|Text for filter button if filter was\n        applied@@messages.messagesCommon.conversationsListFilterConversation.filtersText\"\n      >Filters</span\n    >\n  </ng-template>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { BaseConversationsListWidgetComponent } from './base-conversations-list-widget.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\n\nimport {\n  FilterConversationsListComponent,\n  FilterConversationsListCustomizableDirective,\n} from './filter-conversations-list/filter-conversations-list.component';\n\nconst components = [BaseConversationsListWidgetComponent, FilterConversationsListComponent];\nconst directives = [FilterConversationsListCustomizableDirective];\nconst uiModules = [ButtonModule, IconModule, DropdownSingleSelectModule, SearchBoxModule, InputDatepickerModule];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, ...uiModules],\n  declarations: [...components, ...directives],\n  exports: [...uiModules, ...components, ...directives],\n})\nexport class BaseConversationsListWidgetModule {}\n","export interface ApplyFilterParams {\n  userId?: string;\n  topicId?: string;\n  startDate?: string;\n  endDate?: string;\n}\n\nexport interface FilterParams extends ApplyFilterParams {\n  mailboxType?: string;\n  from: number;\n}\n\nexport enum MailboxType {\n  inbox = 'inbox',\n  outbox = 'outbox',\n  all = 'all',\n}\n","import { Observable } from 'rxjs';\n\nexport interface Attachment {\n  id: string;\n  filename: string;\n  size: number;\n  createdAt: string;\n  readonly link?: string;\n  readonly linkStream?: Observable<ArrayBuffer>;\n}\nexport enum ReadUnreadStatusType {\n  READ = 'READ',\n  UNREAD = 'UNREAD',\n}\n\nexport interface Draft {\n  id: string;\n  body?: string;\n  createdAt: string;\n  attachments?: Array<{\n    id: string;\n    filename: string;\n    size: number;\n    createdAt: string;\n  }>;\n}\n","import { Observable } from 'rxjs';\nimport {\n  DraftPostResponseBody,\n  ConversationMessageDraftPostRequestBody,\n  ConversationMessageDraftPutRequestBody,\n  MarkAsReadUnreadPutRequestBody,\n  MarkAsReadUnreadPutResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { Attachment } from '../models/conversations.model';\n\nexport abstract class AbstractBaseMessagesConversationThreadService {\n  abstract markConversationsAsReadUnread(\n    params: MarkAsReadUnreadPutRequestBody,\n  ): Observable<MarkAsReadUnreadPutResponseBody | null>;\n  abstract getDownloadAttachmentUrl(id: string): string;\n  abstract downloadFile(id: string): Observable<ArrayBuffer>;\n\n  /**\n   * Creat message draft\n   *\n   * @param conversationId Conversation id\n   * @param body Request body\n   * @returns Create draft stream\n   */\n  createDraft?(\n    conversationId: string,\n    body: ConversationMessageDraftPostRequestBody,\n  ): Observable<DraftPostResponseBody | null>;\n\n  /**\n   * Update message draft\n   *\n   * @param conversationId Conversation id\n   * @param body Request body\n   * @returns Update draft stream\n   */\n  updateDraft?(conversationId: string, body: ConversationMessageDraftPutRequestBody): Observable<any>;\n\n  /**\n   * Delete message draft\n   *\n   * @param draftId Draft id\n   * @returns Delete draft stream\n   */\n  deleteDraft?(draftId: string): Observable<any>;\n\n  /**\n   * Map attachments\n   *\n   * @param attachments Attachments list\n   * @returns Mapped attachments list with linkStream update\n   */\n  attachmentsMapper(attachments: Attachment[]): Attachment[] {\n    return attachments.map(attachment => ({\n      ...attachment,\n      linkStream: this.downloadFile(attachment.id),\n    }));\n  }\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { catchError, switchMap, tap } from 'rxjs/operators';\n\nimport { MessageReplyPostRequestBody } from '@backbase/messages-v5-http-ang';\n\nimport { Draft } from '../models/conversations.model';\nimport { AbstractBaseMessagesConversationThreadService } from '../services/abstract-base-messages-conversation-thread.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\n\n@Component({\n  template: '',\n})\nexport class BaseConversationThreadDraftsComponent {\n  @ViewChild('draftSaveSuccess') draftSaveSuccessTpl: TemplateRef<any> | undefined;\n  @ViewChild('draftDeleteSuccess') draftDeleteSuccessTpl: TemplateRef<any> | undefined;\n\n  draftResponse: Draft | undefined;\n\n  constructor(\n    protected readonly apiThreadService: AbstractBaseMessagesConversationThreadService,\n    protected readonly shared: SharedMethodsService,\n  ) {}\n\n  saveDraft(conversationId: string, body: MessageReplyPostRequestBody): Observable<any> {\n    return of(this.draftResponse).pipe(\n      switchMap(draft => (draft ? this.updateDraft(conversationId, body) : this.createDraft(conversationId, body))),\n      tap(() => this.shared.openNotification(this.draftSaveSuccessTpl, 'success')),\n      catchError(error => {\n        this.shared.openNotification(this.shared.getErrorMessage(error), 'error');\n\n        return EMPTY;\n      }),\n    );\n  }\n\n  deleteDraft(): Observable<any> {\n    if (this.apiThreadService.deleteDraft && this.draftResponse) {\n      return this.apiThreadService.deleteDraft(this.draftResponse.id).pipe(\n        tap(() => {\n          this.draftResponse = undefined;\n          this.shared.openNotification(this.draftDeleteSuccessTpl, 'success');\n        }),\n        catchError(error => {\n          this.shared.openNotification(this.shared.getErrorMessage(error), 'error');\n\n          return EMPTY;\n        }),\n      );\n    }\n\n    return of(undefined);\n  }\n\n  private createDraft(conversationId: string, body: MessageReplyPostRequestBody): Observable<any | null | undefined> {\n    if (this.apiThreadService.createDraft) {\n      return this.apiThreadService.createDraft(conversationId, body).pipe(\n        tap(\n          res =>\n            (this.draftResponse = {\n              id: res ? res.id : '',\n              createdAt: new Date().toString(),\n            }),\n        ),\n      );\n    }\n\n    return of(undefined);\n  }\n\n  private updateDraft(conversationId: string, body: MessageReplyPostRequestBody): Observable<any> {\n    if (this.apiThreadService.updateDraft) {\n      return this.apiThreadService.updateDraft(conversationId, body);\n    }\n\n    return of(undefined);\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, Subject, of } from 'rxjs';\nimport { catchError, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { Metadata, MessageReplyPostRequestBody, MarkAsReadUnreadPutResponseBody } from '@backbase/messages-v5-http-ang';\n\nimport { RichTextEditorComponent } from '@backbase/ui-ang/rich-text-editor';\n\nimport {\n  ManipulationType,\n  MessagesConfirmationModalModel,\n} from '../../messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';\nimport { AbstractBaseMessagesConversationThreadService } from '../services/abstract-base-messages-conversation-thread.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { MessagesUploadAttachmentsService } from '../../upload-attachments/services/messages-upload-attachments.service';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { ReadUnreadStatusType } from '../models/conversations.model';\nimport { BaseConversationThreadDraftsComponent } from './base-conversation-thread-drafts.component';\nimport { UnknownIdError } from '../../../utils/unknown-id-error';\nimport { shareReplayOnce } from '../../../helpers/rxjs-operators';\n\n@Component({\n  template: '',\n})\nexport class BaseConversationThreadComponent extends BaseConversationThreadDraftsComponent implements OnDestroy {\n  static counter = 0;\n\n  /**\n   * Event emitted when this thread should be closed or navigation should be changed to previous or another widget\n   */\n  @Output() back = new EventEmitter();\n\n  /**\n   * Selected conversation id setter\n   */\n  @Input() set selectedConversationId(value: string | undefined) {\n    this.conversationId$.next(value);\n  }\n\n  /**\n   * The notification for the reply success.\n   */\n  @ViewChild('conversationReplySuccess,messageReplySuccess') replySuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the delete success.\n   */\n  @ViewChild('conversationDeleteSuccess,messageDeleteSuccess') deleteSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The message text editor.\n   */\n  @ViewChild('richTextEditor') richTextEditor: RichTextEditorComponent | undefined;\n\n  /**\n   * The conversation thread ID.\n   */\n  readonly id = `base-conversation-thread-component-${BaseConversationThreadComponent.counter++}`;\n\n  /**\n   * The manipulation types enum (`resolve`, `unresolve`, `assign`, `unassign`, `discard`,\n   * `discardDraft`, `discardPreview`, `deleteTopic`, `deleteMailout`).\n   */\n  readonly manipulationTypes = ManipulationType;\n\n  protected readonly unsubscribe = new Subject();\n  protected readonly replyPressed = new Subject<MessageReplyPostRequestBody>();\n  private readonly conversationId$ = new BehaviorSubject<string | undefined>(undefined);\n\n  /**\n   * The error information.\n   */\n  errorResponse: HttpErrorResponse | UnknownIdError | undefined;\n\n  /**\n   * The loading flag for the data fetched through the HTTP request.\n   */\n  loading = true;\n\n  /**\n   * The flag defining if the reply is opened or not.\n   */\n  replyOpened = false;\n\n  /**\n   * The flag defining if the topic alert is closed or not.\n   */\n  topicAlertClosed = false;\n\n  /**\n   * The modal for action confirmation.\n   */\n  confirmationModal: MessagesConfirmationModalModel = {\n    opened: false,\n    type: undefined,\n  };\n\n  /**\n   * The reply form.\n   */\n  replyFormGroup = new FormGroup({\n    body: new FormControl(),\n    attachments: new FormControl(),\n  });\n\n  /**\n   * The form loading flag.\n   */\n  formLoading = false;\n\n  protected readonly conversationId: Observable<string> = this.getConversationId();\n  protected readonly markAsReadUnreadSubject = new BehaviorSubject<ReadUnreadStatusType>(ReadUnreadStatusType.READ);\n  protected readonly markAsReadUnreadStream: Observable<MarkAsReadUnreadPutResponseBody | null> =\n    this.getMarkAsReadUnreadStream();\n\n  constructor(\n    protected readonly apiThreadService: AbstractBaseMessagesConversationThreadService,\n    protected readonly activatedRoute: ActivatedRoute,\n    protected readonly shared: SharedMethodsService,\n    readonly confirmModalService: MessagesManipulationConfirmModalService,\n    protected readonly uploadService: MessagesUploadAttachmentsService,\n    protected readonly encodingService: MessagesEncodingService,\n  ) {\n    super(apiThreadService, shared);\n  }\n\n  /**\n   * Conversation id getter\n   */\n  get conversationIdValue() {\n    return this.conversationId$.getValue();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * The method to save the draft.\n   */\n  onSaveDraft() {\n    if (this.replyFormGroup.valid) {\n      this.saveDraft(this.conversationIdValue ? this.conversationIdValue : '', this.convertFormValue())\n        .pipe(takeUntil(this.unsubscribe))\n        .subscribe();\n    }\n  }\n\n  /**\n   * The method that is used for component initialization to subscribe for the read-unread status and\n   * to toggle the reply form updates.\n   */\n  initSubscriptions() {\n    this.markAsReadUnreadStream.pipe(takeUntil(this.unsubscribe)).subscribe();\n\n    this.confirmModalService.emitToggleModal$.pipe(takeUntil(this.unsubscribe)).subscribe(({ opened, type }) => {\n      this.confirmationModal = { opened, type };\n\n      if (!opened && (type === ManipulationType.discard || type === ManipulationType.discardDraft)) {\n        this.toggleReplyForm(false);\n      }\n    });\n  }\n\n  /**\n   * The method to navigate back.\n   */\n  navigateBack() {\n    this.back.emit();\n  }\n\n  /**\n   * The method to toggle the reply form.\n   *\n   * @param flag Toggle status\n   */\n  toggleReplyForm(flag: boolean) {\n    this.replyOpened = flag;\n\n    if (!flag) {\n      this.uploadService.reset(true);\n      this.replyFormGroup.reset();\n    } else {\n      setTimeout(() => this.richTextEditor && this.richTextEditor.labelClick());\n    }\n  }\n\n  /**\n   * The method to submit the reply.\n   */\n  reply() {\n    this.replyFormGroup.markAsDirty();\n    this.replyFormGroup.markAllAsTouched();\n    if (this.replyFormGroup.valid) {\n      this.replyPressed.next(this.convertFormValue());\n    }\n  }\n\n  /**\n   * The method that defines whether the control is valid or not.\n   *\n   * @param field Field name\n   * @returns Is form field valid flag\n   */\n  isInvalidControl(field: string): boolean {\n    const control = this.getControl(field);\n\n    return !!control && control.touched && control.invalid;\n  }\n\n  /**\n   * The method to get any errors generated by failing validation, or null if there are no errors.\n   *\n   * @param field Field name\n   * @param type Error type\n   */\n  hasError(field: string, type: string): boolean {\n    const control = this.getControl(field);\n\n    return control && control.errors && control.errors[type];\n  }\n\n  private getConversationId(): Observable<string> {\n    return this.conversationId$.pipe(\n      switchMap(id => {\n        if (!id) {\n          this.errorResponse = new UnknownIdError();\n\n          return EMPTY;\n        }\n\n        return of(id);\n      }),\n      shareReplayOnce(),\n    );\n  }\n\n  private getMarkAsReadUnreadStream(): Observable<MarkAsReadUnreadPutResponseBody | null> {\n    return combineLatest([this.markAsReadUnreadSubject, this.conversationId]).pipe(\n      switchMap(([status, conversationId]) =>\n        this.apiThreadService.markConversationsAsReadUnread({ status, ids: [conversationId] }).pipe(\n          tap(() => status === ReadUnreadStatusType.UNREAD && this.navigateBack()),\n          catchError(error => {\n            this.shared.openNotification(this.shared.getErrorMessage(error), 'error');\n\n            return EMPTY;\n          }),\n        ),\n      ),\n    );\n  }\n\n  private convertFormValue(): MessageReplyPostRequestBody {\n    const { body, attachments } = this.replyFormGroup.value;\n\n    return {\n      body: this.encodingService.b64Encode(body),\n      ...(attachments?.length && { attachments: (attachments as Metadata[]).map(item => item.id) }),\n    };\n  }\n\n  private getControl(field: string): AbstractControl | undefined {\n    return this.replyFormGroup?.controls[field];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseConversationThreadComponent } from './component/base-conversation-thread.component';\nimport { BaseConversationThreadDraftsComponent } from './component/base-conversation-thread-drafts.component';\n\n@NgModule({\n  declarations: [BaseConversationThreadComponent, BaseConversationThreadDraftsComponent],\n  imports: [CommonModule],\n  exports: [BaseConversationThreadComponent, BaseConversationThreadDraftsComponent],\n})\nexport class BaseMessagesConversationThreadModule {}\n","export enum EmployeeMailoutStatus {\n  Created = 'CREATED',\n  Preparing = 'PREPARING',\n  Ready = 'READY',\n  Processing = 'PROCESSING',\n  Done = 'DONE',\n  Error = 'ERROR',\n  Cancelled = 'CANCELLED',\n  WIP = 'CANCELLATION_IN_PROCESS',\n}\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { EmployeeMailoutStatus } from '../../models/employee-mailouts-statuses.model';\n\n@Component({\n  selector: 'bb-messages-mailout-status',\n  templateUrl: './messages-mailout-status.component.html',\n})\nexport class MessagesMailoutStatusComponent {\n  /**\n   * Mailout status title from model\n   */\n  @Input() mailoutStatus: string | undefined;\n  /**\n   * Input that toggles between shortened and full status title text\n   */\n  @Input() shortTitle = false;\n\n  /**\n   * Mailout statuses enum: Created = `CREATED`, Preparing = `PREPARING`, Ready = `READY`,\n   * Processing = `PROCESSING`, Done = `DONE`, Error = `ERROR`, Cancelled = `CANCELLED`, WIP = `CANCELLATION_IN_PROCESS`\n   */\n  readonly employeeMailoutStatus = EmployeeMailoutStatus;\n}\n\n@Directive({\n  selector: '[bbMessagesMailoutStatusCustomizable]',\n})\nexport class MessagesMailoutStatusCustomizableDirective extends BbTemplate<MessagesMailoutStatusComponent, undefined> {}\n","<ng-container bbMessagesMailoutStatusCustomizable [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbMessagesMailoutStatusCustomizable let-hostRef>\n  <ng-container [ngSwitch]=\"hostRef.mailoutStatus\">\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Done\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Com\"\n        i18n-text=\"\n          Com|Badge text if mailout status is 'Completed' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.completed.short\"\n        color=\"success\"\n        bbTooltip=\"Completed\"\n        i18n-bbTooltip=\"\n          Completed|Tooltip text if mailout status is 'Completed'@@messages.mailoutStatus.statusTooltip.completed\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Completed\"\n          i18n-text=\"\n            Completed|Badge text if mailout status is 'Completed'@@messages.mailoutStatus.statusBadge.completed\"\n          color=\"success\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Error\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Err\"\n        i18n-text=\"\n          Err|Badge text if mailout status is 'Error' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.error.short\"\n        color=\"warning\"\n        bbTooltip=\"Error\"\n        i18n-bbTooltip=\"Error|Tooltip text if mailout status is 'Error'@@messages.mailoutStatus.statusTooltip.error\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Error\"\n          i18n-text=\"Error|Badge text if mailout status is 'Error'@@messages.mailoutStatus.statusBadge.error\"\n          color=\"warning\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.Cancelled\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Del\"\n        i18n-text=\"\n          Del|Badge text if mailout status is 'Deleted' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.deleted.short\"\n        color=\"danger\"\n        bbTooltip=\"Deleted\"\n        i18n-bbTooltip=\"\n          Deleted|Tooltip text if mailout status is 'Deleted'@@messages.mailoutStatus.statusTooltip.deleted\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Deleted\"\n          i18n-text=\"Deleted|Badge text if mailout status is 'Deleted'@@messages.mailoutStatus.statusBadge.deleted\"\n          color=\"danger\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"hostRef.employeeMailoutStatus.WIP\">\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"WIP\"\n        i18n-text=\"\n          WIP|Badge text if mailout status is 'Deletion in progress' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.wip.short\"\n        color=\"danger\"\n        bbTooltip=\"Deletion in progress\"\n        i18n-bbTooltip=\"\n          Deletion in progress|Tooltip text if mailout status is 'Deletion in\n          progress'@@messages.mailoutStatus.statusTooltip.wip\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n      </bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Deletion in progress\"\n          i18n-text=\"\n            Deletion in progress|Badge text if mailout status is 'Deletion in\n            progress'@@messages.mailoutStatus.statusBadge.wip\"\n          color=\"danger\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n\n    <ng-container *ngSwitchDefault>\n      <bb-badge-ui\n        *ngIf=\"hostRef.shortTitle; else badgeWithoutTooltip\"\n        text=\"Pro\"\n        i18n-text=\"\n          Pro|Badge text if mailout status is 'Processing' shortened to 3 letters\n          @@messages.mailoutStatus.statusBadge.processing.short\"\n        color=\"primary\"\n        bbTooltip=\"Processing\"\n        i18n-bbTooltip=\"\n          Processing|Tooltip text if mailout status is 'Processing'@@messages.mailoutStatus.statusTooltip.processing\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      ></bb-badge-ui>\n\n      <ng-template #badgeWithoutTooltip>\n        <bb-badge-ui\n          text=\"Processing\"\n          i18n-text=\"\n            Processing|Badge text if mailout status is 'Processing'@@messages.mailoutStatus.statusBadge.processing\"\n          color=\"primary\"\n        >\n        </bb-badge-ui>\n      </ng-template>\n    </ng-container>\n  </ng-container>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nimport {\n  MessagesMailoutStatusComponent,\n  MessagesMailoutStatusCustomizableDirective,\n} from './messages-mailout-status.component';\n\nconst components = [MessagesMailoutStatusComponent];\nconst directives = [MessagesMailoutStatusCustomizableDirective];\nconst uiModules = [BadgeModule, TooltipModule];\n\n@NgModule({\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules],\n  imports: [CommonModule, ...uiModules],\n})\nexport class MessagesMailoutStatusModule {}\n","export enum EmployeeMailoutStatusLabels {\n  CREATED = 'Processing',\n  PREPARING = 'Processing',\n  READY = 'Processing',\n  PROCESSING = 'Processing',\n  DONE = 'Completed',\n  ERROR = 'Error',\n  CANCELLED = 'Deleted',\n  CANCELLATION_IN_PROCESS = 'Deletion in progress',\n}\n","import { Injectable } from '@angular/core';\nimport {\n  MailoutHttpService,\n  MailoutPostRequestBody,\n  MailoutPostResponseBody,\n  MailoutPreviewResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class MessagesEmployeeMailoutReviewService {\n  constructor(private readonly mailoutService: MailoutHttpService) {}\n\n  /**\n   * Create mailout\n   *\n   * @param bodyRequest Create mailout request body\n   * @returns Create mailout stream\n   */\n  createMailout(bodyRequest: MailoutPostRequestBody): Observable<MailoutPostResponseBody | null> {\n    return this.mailoutService.postMailout({ mailoutPostRequestBody: bodyRequest });\n  }\n\n  /**\n   * Sanitize message body\n   *\n   * @param message Message body\n   * @returns Mailout preview response stream\n   */\n  sanitizeMessageBody(message: string): Observable<MailoutPreviewResponseBody | null> {\n    return this.mailoutService.postMailoutPreview({ mailoutPreviewRequestBody: { body: message } });\n  }\n}\n","import { Component, Input, OnInit, Directive, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\nimport { MessagesEmployeeMailoutReviewService } from './employee-mailout-review.service';\nimport { catchError, map, finalize } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { MailoutPostRequestBody } from '@backbase/messages-v5-http-ang';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { EmployeeCreateMailoutFormModel } from '../../../models/employee-create-mailout-form.model';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport {\n  ManipulationType,\n  MessagesConfirmationModalModel,\n} from '../../messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\n\n@Component({\n  selector: 'bb-messages-employee-mailout-review',\n  templateUrl: './employee-mailout-review.component.html',\n})\nexport class MessagesEmployeeMailoutReviewComponent implements OnInit {\n  /**\n   * The input with the create mailout form data.\n   */\n  @Input() mailout!: EmployeeCreateMailoutFormModel;\n\n  /**\n   * The cancel mailout output.\n   */\n  @Output() cancel = new EventEmitter();\n\n  /**\n   * The confirm operation output.\n   */\n  @Output() confirm = new EventEmitter();\n\n  /**\n   * The edit mailout output.\n   */\n  @Output() edit = new EventEmitter();\n\n  /**\n   * The notification for the successful create mailout operation.\n   */\n  @ViewChild('mailoutCreateSuccess') mailoutCreateSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the create mailout error.\n   */\n  @ViewChild('mailoutCreateError') mailoutCreateErrorTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The sanitize error flag.\n   */\n  sanitizeError = false;\n\n  /**\n   * The sanitize loading flag.\n   */\n  sanitizeLoading = false;\n\n  /**\n   * The sanitized mailout body.\n   */\n  sanitizedBody$?: Observable<string | null>;\n\n  /**\n   * The manipulation types enum: `resolve`, `unresolve`, `assign`, `unassign`, `discard`,\n   * `discardDraft`, `discardPreview`, `deleteTopic`, `deleteMailout`.\n   */\n  readonly manipulationTypes = ManipulationType;\n\n  /**\n   * The confirmation modal model.\n   */\n  readonly confirmationModal$: Observable<MessagesConfirmationModalModel> = this.confirmModalService.emitToggleModal$;\n\n  constructor(\n    private readonly encodingService: MessagesEncodingService,\n    private readonly dataService: MessagesEmployeeMailoutReviewService,\n    private readonly confirmModalService: MessagesManipulationConfirmModalService,\n    private readonly sharedService: SharedMethodsService,\n  ) {}\n\n  ngOnInit() {\n    if (this.mailout) {\n      this.sanitizedBody$ = this.sanitizeBody(this.encodingService.b64Encode(this.mailout.body || ''));\n    }\n  }\n\n  private sanitizeBody(body: string): Observable<string | null> {\n    this.sanitizeLoading = true;\n\n    return this.dataService.sanitizeMessageBody(body).pipe(\n      map(data => data && this.encodingService.b64Decode(data.body)),\n      catchError(() => {\n        this.sanitizeError = true;\n\n        return EMPTY;\n      }),\n      finalize(() => (this.sanitizeLoading = false)),\n    );\n  }\n\n  /**\n   * The method to switch from the preview to the editing state.\n   */\n  onEdit() {\n    this.edit.emit();\n  }\n\n  /**\n   * The method to discard the modal.\n   *\n   * @param discardParam Should open modal flag\n   */\n  onDiscardModal(discardParam: boolean) {\n    this.confirmModalService.toggleModal(\n      discardParam,\n      (discardParam && this.manipulationTypes.discardPreview) || undefined,\n    );\n  }\n\n  /**\n   * The method to confirm the discard action.\n   */\n  onConfirmModal() {\n    this.confirmModalService.toggleModal(false);\n    this.cancel.emit();\n  }\n\n  /**\n   * The method to save the mailout.\n   *\n   * @param employeeCreateMailoutFormModel Create mailout form model data\n   */\n  createMailout({\n    body,\n    subject,\n    topic,\n    attachments,\n    notDeletable,\n    recipientsDataId,\n    template,\n    important,\n    ...rest\n  }: EmployeeCreateMailoutFormModel) {\n    const finalValue: MailoutPostRequestBody = {\n      ...rest,\n      subject: '',\n      topic: '',\n      body: '',\n      deletable: !notDeletable,\n      important: !!important,\n      recipientsData: {\n        id: recipientsDataId[0].id,\n      },\n      ...(body && body.length && { body: this.encodingService.b64Encode(body) }),\n      ...(subject && subject.length && { subject: subject }),\n      ...(topic && topic.id && { topic: topic.id }),\n      ...(attachments && attachments.length && { attachments: attachments.map(({ id }) => id) }),\n    };\n\n    this.dataService.createMailout(finalValue).subscribe(\n      () => this.sharedService.openNotification(this.mailoutCreateSuccessTpl),\n      () => this.sharedService.openNotification(this.mailoutCreateErrorTpl, 'error'),\n      () => this.confirm.emit(),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesEmployeeMailoutReviewCustomizable]',\n})\nexport class MessagesEmployeeMailoutReviewCustomizableDirective extends BbTemplate<\n  MessagesEmployeeMailoutReviewComponent,\n  {\n    sanitizedBody: string | null;\n    confirmationModal: MessagesConfirmationModalModel;\n  }\n> {}\n\n@Directive({\n  selector: '[bbMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizable]',\n})\nexport class MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective extends BbTemplate<\n  MessagesEmployeeMailoutReviewComponent,\n  void\n> {}\n\n@Directive({\n  selector: '[bbMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizable]',\n})\nexport class MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective extends BbTemplate<\n  MessagesEmployeeMailoutReviewComponent,\n  void\n> {}\n","<ng-container\n  bbMessagesEmployeeMailoutReviewCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    sanitizedBody: sanitizedBody$ | async,\n    confirmationModal: confirmationModal$ | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbMessagesEmployeeMailoutReviewCustomizable\n  let-host\n  let-sanitizedBody=\"context.sanitizedBody\"\n  let-confirmationModal=\"context.confirmationModal\"\n>\n  <div class=\"row bb-block bb-block--md\">\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review name label text@@messages.employeeCreateMailout.mailoutReview.name\"\n        data-role=\"mailout-name\"\n      >\n        Name\n      </div>\n      <p data-role=\"mailout-name-content\">{{ host.mailout?.mailoutName }}</p>\n    </div>\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review topic label text@@messages.employeeCreateMailout.mailoutReview.topic\"\n        data-role=\"mailout-topic\"\n      >\n        Topic\n      </div>\n      <p data-role=\"mailout-topic-content\">{{ host.mailout.topic?.name }}</p>\n    </div>\n    <div class=\"col-12\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review subject label text@@messages.employeeCreateMailout.mailoutReview.subject\"\n        data-role=\"mailout-subject\"\n      >\n        Subject\n      </div>\n      <p data-role=\"mailout-subject-content\">{{ host.mailout.subject }}</p>\n    </div>\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review read-only label text@@messages.employeeCreateMailout.mailoutReview.readOnly\"\n        data-role=\"mailout-readonly\"\n      >\n        Read only\n      </div>\n      <p\n        i18n=\"Review read-only label text@@messages.employeeCreateMailout.mailoutReview.readOnly.value\"\n        data-role=\"mailout-readonly-content\"\n      >\n        { host.mailout['read-only'] + '', select, true {Yes} other {No} }\n      </p>\n    </div>\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review delete label text@@messages.employeeCreateMailout.mailoutReview.delete\"\n        data-role=\"mailout-deletable\"\n      >\n        Users able to delete\n      </div>\n      <p\n        i18n=\"Review delete label text@@messages.employeeCreateMailout.mailoutReview.delete.value\"\n        data-role=\"mailout-deletable-content\"\n      >\n        { !!host.mailout?.notDeletable + '', select, true {Yes} other {No} }\n      </p>\n    </div>\n    <div class=\"col-4\">\n      <div\n        class=\"bb-text-semi-bold bb-block bb-block--md\"\n        i18n=\"Review important label text@@messages.employeeCreateMailout.mailoutReview.important\"\n        data-role=\"mailout-important\"\n      >\n        Important\n      </div>\n      <p\n        i18n=\"Review important label text@@messages.employeeCreateMailout.mailoutReview.important.value\"\n        data-role=\"mailout-important-content\"\n      >\n        { !!host.mailout?.important + '', select, true {Yes} other {No} }\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row bb-block bb-block--md\">\n    <div\n      class=\"col-12 bb-text-semi-bold bb-block bb-block--md\"\n      i18n=\"Review body label text@@messages.employeeCreateMailout.mailoutReview.body\"\n    >\n      Custom HTML body preview\n    </div>\n    <div class=\"col-12\">\n      <ng-container *ngIf=\"!host.sanitizeLoading; else sanitizeLoader\">\n        <ng-container *ngIf=\"!host.sanitizeError; else sanitizeError\">\n          <bb-messages-body-preview [body]=\"sanitizedBody\" data-role=\"mailout-body-preview\"></bb-messages-body-preview>\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n\n  <div class=\"row bb-block bb-block--md\">\n    <div\n      class=\"col-12 bb-text-semi-bold bb-block bb-block--md\"\n      i18n=\"Review attachments label text@@messages.employeeCreateMailout.mailoutReview.attachments\"\n      data-role=\"mailout-attachments\"\n    >\n      Attachments\n    </div>\n    <div class=\"col-auto\" *ngFor=\"let attachment of host.mailout.attachments; index as i\">\n      <div class=\"bb-block bb-block--md\">\n        <bb-file-attachment-ui\n          [name]=\"attachment.filename\"\n          [size]=\"attachment.size\"\n          [loading]=\"attachment.loading\"\n          [disabled]=\"true\"\n          data-role=\"mailout-attachments-content\"\n        ></bb-file-attachment-ui>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-button-bar\">\n    <bb-load-button-ui\n      class=\"bb-button-bar__button\"\n      data-role=\"send\"\n      aria-label=\"Send\"\n      i18n-aria-label=\"Send button aria-label text@@messages.employeeCreateMailout.mailoutReview.submitButtonAriaLabel\"\n      i18n=\"Send button text@@messages.employeeCreateMailout.mailoutReview.submitButton\"\n      (click)=\"host.createMailout(host.mailout)\"\n    >\n      Send\n    </bb-load-button-ui>\n    <button\n      bbButton\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n      data-role=\"discard\"\n      aria-label=\"Discard\"\n      i18n-aria-label=\"\n        Discard button aria-label text@@messages.employeeCreateMailout.mailoutReview.discardButtonAriaLabel\"\n      i18n=\"Discard button text@@messages.employeeCreateMailout.mailoutReview.discardButton\"\n      (click)=\"host.onDiscardModal(true)\"\n    >\n      Discard\n    </button>\n    <button\n      bbButton\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n      data-role=\"back\"\n      aria-label=\"Back to edit\"\n      i18n-aria-label=\"\n        Back to edit button aria-label text@@messages.employeeCreateMailout.mailoutReview.editButtonAriaLabel\"\n      i18n=\"Back to edit button text@@messages.employeeCreateMailout.mailoutReview.editButton\"\n      (click)=\"host.onEdit(host.mailout)\"\n    >\n      Back to edit\n    </button>\n  </div>\n\n  <ng-template #sanitizeError>\n    <bb-alert-ui\n      data-role=\"sanitize-error\"\n      title=\"We couldn't generate preview. Please contact support for more information\"\n      modifier=\"warning\"\n      [dismissible]=\"false\"\n    ></bb-alert-ui>\n  </ng-template>\n\n  <ng-template #sanitizeLoader>\n    <bb-loading-indicator-ui data-role=\"sanitize-loading\" loaderSize=\"md\" text=\"Loading...\"></bb-loading-indicator-ui>\n  </ng-template>\n\n  <bb-messages-manipulation-confirm-modal\n    [isOpen]=\"confirmationModal.opened\"\n    [type]=\"confirmationModal.type\"\n    (cancel)=\"host.onDiscardModal(false)\"\n    (confirm)=\"host.onConfirmModal()\"\n    data-role=\"discard-modal\"\n  ></bb-messages-manipulation-confirm-modal>\n</ng-template>\n\n<ng-template #mailoutCreateSuccess>\n  <ng-container bbMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizable [bbHostRef]=\"this\"></ng-container>\n</ng-template>\n\n<ng-template bbMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizable let-host>\n  <span\n    i18n=\"\n      Your mailout has been successfully sent.|Text of successful mailout\n      create@@messages.employeeCreateMailout.mailoutReview.messageSuccessCompose\"\n    >Your mailout has been successfully sent.</span\n  >\n</ng-template>\n\n<ng-template #mailoutCreateError>\n  <ng-container bbMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizable [bbHostRef]=\"this\"></ng-container>\n</ng-template>\n\n<ng-template bbMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizable let-host>\n  <span\n    i18n=\"\n      There is an error sending mailout.|Text of failed mailout\n      create@@messages.employeeCreateMailout.mailoutReview.messageErrorCompose\"\n    >There is an error sending mailout.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { FileAttachmentModule } from '@backbase/ui-ang/file-attachment';\n\nimport {\n  MessagesEmployeeMailoutReviewComponent,\n  MessagesEmployeeMailoutReviewCustomizableDirective,\n  MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective,\n  MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective,\n} from './employee-mailout-review.component';\nimport { MessagesEncodingService } from '../../../services/messages-encoding/messages-encoding.service';\nimport { MessagesBodyPreviewModule } from '../../messages-preview/messages-preview.module';\nimport { MessagesEmployeeMailoutReviewService } from './employee-mailout-review.service';\nimport { MessagesManipulationConfirmModalModule } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module';\nimport { MessagesManipulationConfirmModalService } from '../../messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nimport { SharedMethodsService } from '../../../services/shared-methods/shared-methods.service';\n\nconst components = [MessagesEmployeeMailoutReviewComponent];\nconst directives = [\n  MessagesEmployeeMailoutReviewCustomizableDirective,\n  MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective,\n  MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective,\n];\nconst uiModules = [ButtonModule, FileAttachmentModule, LoadButtonModule, AlertModule, LoadingIndicatorModule];\nconst innerModules = [MessagesBodyPreviewModule, MessagesManipulationConfirmModalModule];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules, ...innerModules],\n  declarations: [...components, ...directives],\n  providers: [\n    MessagesEncodingService,\n    MessagesEmployeeMailoutReviewService,\n    MessagesManipulationConfirmModalService,\n    SharedMethodsService,\n  ],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n})\nexport class MessagesEmployeeMailoutReviewModule {}\n","// General\nexport { MessagesEncodingService } from './src/services/messages-encoding/messages-encoding.service';\nexport { PreventBubbleDownModule } from './src/directives/prevent-bubble-down/prevent-bubble-down.module';\nexport { PreventBubbleDownDirective } from './src/directives/prevent-bubble-down/prevent-bubble-down.directive';\n\n// Counter Services\nexport { MessagesUnreadConversationCountModule } from './src/services/messages-unread-conversation-count/messages-unread-conversation-count.module';\nexport { MessagesUnreadConversationCountService } from './src/services/messages-unread-conversation-count/messages-unread-conversation-count.service';\nexport { MessagesEmployeeConversationCountersModule } from './src/services/messages-employee-conversation-counters/messages-employee-conversation-counters.module';\nexport { MessagesEmployeeConversationCountersService } from './src/services/messages-employee-conversation-counters/messages-employee-conversation-counters.service';\n\n// Create Message\n// - Create Message Modal\n\nexport { BaseCreateMessageFormModule } from './src/components/create-message/base-form/base-create-message-form.module';\nexport { BaseCreateMessageModalModule } from './src/components/create-message/base-create-message-modal/base-create-message-modal.module';\nexport { BaseCreateMessageModalComponent } from './src/components/create-message/base-create-message-modal/base-create-message-modal.component';\nexport { BaseCreateMessageModalPropertiesService } from './src/components/create-message/base-create-message-modal/base-create-message-modal-properties.service';\n\n// - Create Message Form\nexport { BaseCreateMessageFormComponent } from './src/components/create-message/base-form/base-create-message-form.component';\nexport { EmployeeCreateMessageFormModule } from './src/components/create-message/employee-form/employee-create-message-form.module';\nexport { BaseCreateMessageFormService } from './src/components/create-message/base-form/base-create-message-form.service';\nexport { EmployeeCreateMailoutFormModule } from './src/components/create-message/employee-mailout-form/employee-create-mailout-form.module';\n\n// Conversation Message component\nexport { MessagesConversationMessageModule } from './src/components/messages-conversation-message/messages-conversation-message.module';\nexport {\n  MessagesConversationMessageComponent,\n  MessagesConversationMessageCustomizableDirective as ӨMessagesConversationMessageCustomizableDirective,\n} from './src/components/messages-conversation-message/messages-conversation-message.component';\n\n// Shared Services\nexport { SharedMethodsService } from './src/services/shared-methods/shared-methods.service';\nexport { SharedMethodsModule } from './src/services/shared-methods/shared-methods.module';\n\n// Rxjs operatorss\nexport { shareReplayOnce } from './src/helpers/rxjs-operators';\n\n// Request error\nexport { MessagesRequestErrorModule } from './src/components/messages-request-error/messages-request-error.module';\nexport { MessagesRequestErrorComponent } from './src/components/messages-request-error/messages-request-error.component';\n\n// Modals\nexport { BaseModalComponent } from './src/components/base-modal/base-modal.component';\n\n// Manipulation Confirm Modal\nexport { MessagesManipulationConfirmModalModule } from './src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.module';\n\nexport { MessagesManipulationConfirmModalService } from './src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.service';\nexport {\n  MessagesConfirmationModalModel,\n  TopicsConfirmationModalModel,\n  MailoutConfirmationModal,\n  ManipulationType,\n} from './src/components/messages-manipulation-confirm-modal/manipulation-confirm-modal-types.model';\nexport {\n  MessagesManipulationConfirmModalCustomizableDirective as ӨMessagesManipulationConfirmModalCustomizableDirective,\n  MessagesManipulationConfirmModalComponent as ӨMessagesManipulationConfirmModalComponent,\n} from './src/components/messages-manipulation-confirm-modal/messages-manipulation-confirm-modal.component';\n\n// Attachments\nexport { MessagesUploadAttachmentsModule } from './src/components/upload-attachments/messages-upload-attachments.module';\nexport {\n  MessagesUploadAttachmentsComponent,\n  MessagesUploadAttachmentsCustomizableDirective,\n} from './src/components/upload-attachments/messages-upload-attachments.component';\nexport * from './src/components/upload-attachments/model/messages-upload-attachments.model';\n\nexport { MessagesClientUploadAttachmentsService } from './src/components/upload-attachments/services/client-upload-attachments.service';\nexport { BaseUploadAttachmentsService } from './src/components/upload-attachments/services/base-attachments.service';\nexport { MessagesEmployeeUploadAttachmentsService } from './src/components/upload-attachments/services/employee-upload-attachments.service';\nexport { MessagesUploadAttachmentsService } from './src/components/upload-attachments/services/messages-upload-attachments.service';\n\n// Conversations list\nexport { BaseConversationsListWidgetModule } from './src/components/conversations-list/base-conversations-list-widget.module';\nexport { BaseConversationsListWidgetComponent } from './src/components/conversations-list/base-conversations-list-widget.component';\nexport {\n  BaseConversationsListPropertiesService,\n  DefaultWidgetProperties,\n} from './src/components/conversations-list/base-conversations-list-properties.service';\nexport {\n  FilterConversationsListComponent as ӨFilterConversationsListComponent,\n  FilterConversationsListCustomizableDirective as ӨFilterConversationsListCustomizableDirective,\n} from './src/components/conversations-list/filter-conversations-list/filter-conversations-list.component';\nexport * from './src/components/conversations-list/model/filter-service.model';\nexport * from './src/components/conversations-list/model/params.model';\n\n// Utils\nexport { snapshot } from './src/utils/snapshot';\nexport { UnknownIdError } from './src/utils/unknown-id-error';\nexport { getPropertyValue, defaultModelObservable } from './src/utils/item-model-property';\nexport { modelItemToBoolean } from './src/utils/type-helpers';\nexport { topicPlaceholderConfig } from './src/utils/topic-placeholder-text-helper';\n\n// Conversation thread\nexport { BaseMessagesConversationThreadModule } from './src/components/conversation-thread/base-messages-conversation-thread.module';\nexport { BaseConversationThreadComponent } from './src/components/conversation-thread/component/base-conversation-thread.component';\nexport { AbstractBaseMessagesConversationThreadService } from './src/components/conversation-thread/services/abstract-base-messages-conversation-thread.service';\nexport { BaseConversationThreadDraftsComponent as ӨBaseConversationThreadDraftsComponent } from './src/components/conversation-thread/component/base-conversation-thread-drafts.component';\nexport * from './src/components/conversation-thread/models/conversations.model';\n\n// Mailout statuses\nexport { MessagesMailoutStatusModule } from './src/components/messages-mailout-status/messages-mailout-status.module';\nexport {\n  MessagesMailoutStatusComponent,\n  MessagesMailoutStatusCustomizableDirective as ӨMessagesMailoutStatusCustomizableDirective,\n} from './src/components/messages-mailout-status/messages-mailout-status.component';\nexport { EmployeeMailoutStatus } from './src/models/employee-mailouts-statuses.model';\nexport { EmployeeMailoutStatusLabels } from './src/models/employee-mailouts-status-labels.model';\n\n// Mailout review\nexport { MessagesEmployeeMailoutReviewModule } from './src/components/create-message/employee-mailout-review/employee-mailout-review.module';\nexport {\n  MessagesEmployeeMailoutReviewComponent,\n  MessagesEmployeeMailoutReviewCustomizableDirective as ӨMessagesEmployeeMailoutReviewCustomizableDirective,\n  // eslint-disable-next-line max-len\n  MessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective as ӨMessagesEmployeeMailoutReviewSuccessNotificationHeaderCustomizableDirective,\n  // eslint-disable-next-line max-len\n  MessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective as ӨMessagesEmployeeMailoutReviewErrorNotificationHeaderCustomizableDirective,\n} from './src/components/create-message/employee-mailout-review/employee-mailout-review.component';\nexport { EmployeeCreateMailoutFormModel } from './src/models/employee-create-mailout-form.model';\nexport {\n  EmployeeCreateMailoutFormComponent as ӨEmployeeCreateMailoutFormComponent,\n  EmployeeCreateMailoutFormCustomizableDirective as ӨEmployeeCreateMailoutFormCustomizableDirective,\n  // eslint-disable-next-line max-len\n  EmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective as ӨEmployeeCreateMailoutFormErrorNotificationHeaderCustomizableDirective,\n  // eslint-disable-next-line max-len\n  EmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective as ӨEmployeeCreateMailoutFormSuccessNotificationHeaderCustomizableDirective,\n} from './src/components/create-message/employee-mailout-form/employee-create-mailout-form.component';\nexport {\n  EmployeeCreateMessageFormComponent as ӨEmployeeCreateMessageFormComponent,\n  EmployeeCreateMessageFormCustomizableDirective as ӨEmployeeCreateMessageFormCustomizableDirective,\n} from './src/components/create-message/employee-form/employee-create-message-form.component';\n\n// Message preview\nexport { MessagesBodyPreviewComponent as ӨMessagesBodyPreviewComponent } from './src/components/messages-preview/messages-preview.component';\nexport { MessagesBodyPreviewModule as ӨMessagesBodyPreviewModule } from './src/components/messages-preview/messages-preview.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Injectable","Directive","HostListener","CommonModule","NgModule","MessagesPollPeriod","bbEventUnreadConversationCountUpdate","Subject","merge","of","switchMap","timer","concatMap","map","PUBSUB","Inject","BackbaseCoreModule","MessagecenterHttpService","EmployeeHttpService","ManipulationType","Observable","BehaviorSubject","EventEmitter","Validators","takeUntil","filter","first","finalize","EMPTY","Component","Input","Output","ViewChild","combineLatest","defer","publishReplay","refCount","DefaultWidgetProperties","Optional","BbTemplate","components","directives","ModalModule","HeaderModule","ButtonModule","tap","take","catchError","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","ChangeDetectionStrategy","uiModules","FileAttachmentModule","IconModule","InputFileModule","innerModules","FormControl","debounceTime","distinctUntilChanged","DropdownSingleSelectModule","InputValidationMessageModule","SearchBoxModule","InputTextModule","RichTextEditorModule","InputCheckboxModule","LoadButtonModule","ReactiveFormsModule","delay","TemplateRef","KeyboardClickModule","TooltipModule","shareReplay","EmptyStateModule","pluck","InputDatepickerModule","MailboxType","ReadUnreadStatusType","FormGroup","EmployeeMailoutStatus","BadgeModule","EmployeeMailoutStatusLabels","AlertModule","LoadingIndicatorModule"],"mappings":"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"}