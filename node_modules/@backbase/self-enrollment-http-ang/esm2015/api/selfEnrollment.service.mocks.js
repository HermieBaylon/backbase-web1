import { createMocks } from '@backbase/foundation-ang/data-http';
export const SelfEnrollmentServiceGetStatusMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/status",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "status": "IDENTIFIED"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    }]);
export const SelfEnrollmentServiceGetUsernameByUsernameMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/credentials/existing/username/{username}",
        method: "GET",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const SelfEnrollmentServiceGetVerificationsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/verifications",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "question": {
                            "id": "12ghr44356-54mpkm65",
                            "text": "When did you open your Loan account?"
                        },
                        "answers": [{
                                "id": "wrghr44356-54mpkm65",
                                "text": "January 2017"
                            }, {
                                "id": "ds-0h-903285hb6",
                                "text": "March 2017"
                            }, {
                                "id": "34bkbdfs89sdfnj",
                                "text": "July 2017"
                            }, {
                                "id": "123-3456-nkbjhbdf",
                                "text": "None of the above"
                            }]
                    }, {
                        "question": {
                            "id": "12ghr44356-54mpkerwfvd5",
                            "text": "What state was your SSN issued in?"
                        },
                        "answers": [{
                                "id": "123kbbb43500fds",
                                "text": "New York"
                            }, {
                                "id": "453-65njb453-45657",
                                "text": "Virginia"
                            }, {
                                "id": "csgdf-35436njgf",
                                "text": "Missouri"
                            }, {
                                "id": "aaa-23454363jb634",
                                "text": "None of the above"
                            }]
                    }, {
                        "question": {
                            "id": "18hgdd8756-54botdf8876",
                            "text": "In 2017, your Car Loan was approved by which bank?"
                        },
                        "answers": [{
                                "id": "1mlfjur-i094s",
                                "text": "Bank of America"
                            }, {
                                "id": "473-65iiktnd93-433457",
                                "text": "Wells Fargo"
                            }, {
                                "id": "cujhf-356657ytjgf",
                                "text": "Chase"
                            }, {
                                "id": "abb-236678435jb634",
                                "text": "None of the above"
                            }]
                    }, {
                        "question": {
                            "id": "109jjhbft6-590-ouhgj345",
                            "text": "Which of the following cities has a current or former association to you?"
                        },
                        "answers": [{
                                "id": "19874yhrgsvdr5",
                                "text": "Houston"
                            }, {
                                "id": "4577-8576ijuth-45659",
                                "text": "Los Angeles"
                            }, {
                                "id": "cascadf-3554r66t-uu",
                                "text": "Chicago"
                            }, {
                                "id": "aga-264547789-jb634",
                                "text": "None of the above"
                            }]
                    }]
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const SelfEnrollmentServicePostCredentialsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/credentials",
        method: "POST",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    }]);
export const SelfEnrollmentServicePostEnrollmentsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/enrollments",
        method: "POST",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const SelfEnrollmentServicePostVerificationsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/verifications",
        method: "POST",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const SelfEnrollmentServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/status",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "status": "IDENTIFIED"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/credentials/existing/username/{username}",
        method: "GET",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/verifications",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "question": {
                            "id": "12ghr44356-54mpkm65",
                            "text": "When did you open your Loan account?"
                        },
                        "answers": [{
                                "id": "wrghr44356-54mpkm65",
                                "text": "January 2017"
                            }, {
                                "id": "ds-0h-903285hb6",
                                "text": "March 2017"
                            }, {
                                "id": "34bkbdfs89sdfnj",
                                "text": "July 2017"
                            }, {
                                "id": "123-3456-nkbjhbdf",
                                "text": "None of the above"
                            }]
                    }, {
                        "question": {
                            "id": "12ghr44356-54mpkerwfvd5",
                            "text": "What state was your SSN issued in?"
                        },
                        "answers": [{
                                "id": "123kbbb43500fds",
                                "text": "New York"
                            }, {
                                "id": "453-65njb453-45657",
                                "text": "Virginia"
                            }, {
                                "id": "csgdf-35436njgf",
                                "text": "Missouri"
                            }, {
                                "id": "aaa-23454363jb634",
                                "text": "None of the above"
                            }]
                    }, {
                        "question": {
                            "id": "18hgdd8756-54botdf8876",
                            "text": "In 2017, your Car Loan was approved by which bank?"
                        },
                        "answers": [{
                                "id": "1mlfjur-i094s",
                                "text": "Bank of America"
                            }, {
                                "id": "473-65iiktnd93-433457",
                                "text": "Wells Fargo"
                            }, {
                                "id": "cujhf-356657ytjgf",
                                "text": "Chase"
                            }, {
                                "id": "abb-236678435jb634",
                                "text": "None of the above"
                            }]
                    }, {
                        "question": {
                            "id": "109jjhbft6-590-ouhgj345",
                            "text": "Which of the following cities has a current or former association to you?"
                        },
                        "answers": [{
                                "id": "19874yhrgsvdr5",
                                "text": "Houston"
                            }, {
                                "id": "4577-8576ijuth-45659",
                                "text": "Los Angeles"
                            }, {
                                "id": "cascadf-3554r66t-uu",
                                "text": "Chicago"
                            }, {
                                "id": "aga-264547789-jb634",
                                "text": "None of the above"
                            }]
                    }]
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/credentials",
        method: "POST",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/enrollments",
        method: "POST",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/verifications",
        method: "POST",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,