{"version":3,"file":"backbase-notifications-http-ang.js","sources":["../../model/approvalStatus.ts","../../model/severityLevel.ts","../../model/targetGroup.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/employee.service.ts","../../api/employee.service.mocks.ts","../../api/notifications.service.ts","../../api/notifications.service.mocks.ts"],"sourcesContent":["/**\n * Notifications client\n * Read, delete, mark notifications as read or unread as a bank customer. Create, approve, or reject notifications as a bank employee.\n *\n * The version of the OpenAPI document: 2.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Approval status of created, updated or deleted notification. If `APPROVED` then notification does not need to be approved and is immediately effective.\n */\nexport type ApprovalStatus = 'PENDING' | 'APPROVED' | 'REJECTED' | 'CANCELLED';\n\nexport const ApprovalStatus = {\n    PENDING: 'PENDING' as ApprovalStatus,\n    APPROVED: 'APPROVED' as ApprovalStatus,\n    REJECTED: 'REJECTED' as ApprovalStatus,\n    CANCELLED: 'CANCELLED' as ApprovalStatus\n};\n\n","/**\n * Notifications client\n * Read, delete, mark notifications as read or unread as a bank customer. Create, approve, or reject notifications as a bank employee.\n *\n * The version of the OpenAPI document: 2.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Notification severity level\n */\nexport type SeverityLevel = 'ALERT' | 'WARNING' | 'SUCCESS' | 'INFO';\n\nexport const SeverityLevel = {\n    ALERT: 'ALERT' as SeverityLevel,\n    WARNING: 'WARNING' as SeverityLevel,\n    SUCCESS: 'SUCCESS' as SeverityLevel,\n    INFO: 'INFO' as SeverityLevel\n};\n\n","/**\n * Notifications client\n * Read, delete, mark notifications as read or unread as a bank customer. Create, approve, or reject notifications as a bank employee.\n *\n * The version of the OpenAPI document: 2.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Notification target group\n */\nexport type TargetGroup = 'GLOBAL' | 'CUSTOMER' | 'USER';\n\nexport const TargetGroup = {\n    GLOBAL: 'GLOBAL' as TargetGroup,\n    CUSTOMER: 'CUSTOMER' as TargetGroup,\n    USER: 'USER' as TargetGroup\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const NOTIFICATIONS_BASE_PATH = new InjectionToken<string>('NOTIFICATIONS_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface NotificationsConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class NotificationsConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: NotificationsConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link NotificationsConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link NotificationsConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module NotificationsConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { NotificationsConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class NotificationsApiModule {\n    public static forRoot(configurationFactory: () => NotificationsConfiguration): ModuleWithProviders<NotificationsApiModule> {\n        return {\n            ngModule: NotificationsApiModule,\n            providers: [ { provide: NotificationsConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: NotificationsApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: NotificationsConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('NotificationsApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Notifications client\n * Read, delete, mark notifications as read or unread as a bank customer. Create, approve, or reject notifications as a bank employee.\n *\n * The version of the OpenAPI document: 2.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ApprovableNotification } from '../model/models';\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { NotificationApprovalPutRequestBody } from '../model/models';\nimport { NotificationApprovalPutResponseBody } from '../model/models';\nimport { NotificationsEmployeePostResponseBody } from '../model/models';\nimport { NotificationsPostRequestBody } from '../model/models';\nimport { UnprocessableEntityException } from '../model/models';\n\nimport { NOTIFICATIONS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { NotificationsConfiguration }                                     from '../configuration';\n\n\nexport interface GetApprovableNotificationRequestParams {\n    /** Generated parameter by BOAT. Please specify the URI parameter in RAML */\n    [\"managementId\"]: string;\n}\n\nexport interface PostManageNotificationsRequestParams {\n    [\"notificationsPostRequestBody\"]?: NotificationsPostRequestBody;\n}\n\nexport interface PutApprovableNotificationRequestParams {\n    /** Generated parameter by BOAT. Please specify the URI parameter in RAML */\n    [\"managementId\"]: string;\n    [\"notificationApprovalPutRequestBody\"]?: NotificationApprovalPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new NotificationsConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(NOTIFICATIONS_BASE_PATH) basePath: string, @Optional() configuration: NotificationsConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve the notification that awaits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovableNotification(requestParameters: GetApprovableNotificationRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ApprovableNotification>;\n    /**\n     * Retrieve the notification that awaits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovableNotification(requestParameters: GetApprovableNotificationRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ApprovableNotification>>;\n    /**\n     * Retrieve the notification that awaits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovableNotification(requestParameters: GetApprovableNotificationRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ApprovableNotification>>;\n    /**\n     * Retrieve the notification that awaits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovableNotification(requestParameters: GetApprovableNotificationRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _managementId = requestParameters[\"managementId\"];\n        if (_managementId === null || _managementId === undefined) {\n            throw new Error('Required parameter managementId was null or undefined when calling getApprovableNotification.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ApprovableNotification>(`${this.configuration.basePath}/client-api/v2/employee/notifications/${encodeURIComponent(String(_managementId))}/approvals`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getApprovableNotificationUrl(requestParameters: GetApprovableNotificationRequestParams): string {\n        const _managementId = requestParameters[\"managementId\"];\n        if (_managementId === null || _managementId === undefined) {\n            throw new Error('Required parameter managementId was null or undefined when calling getApprovableNotification.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/employee/notifications/${encodeURIComponent(String(_managementId))}/approvals`;\n    }\n\n    /**\n     * Create one or more notifications. The caller must have the following permissions:   - Privilege: &#x60;create&#x60;  - Resource: &#x60;Notifications&#x60;  - Business function: &#x60;Manage Notifications&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postManageNotifications(requestParameters: PostManageNotificationsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<NotificationsEmployeePostResponseBody>;\n    /**\n     * Create one or more notifications. The caller must have the following permissions:   - Privilege: &#x60;create&#x60;  - Resource: &#x60;Notifications&#x60;  - Business function: &#x60;Manage Notifications&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postManageNotifications(requestParameters: PostManageNotificationsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<NotificationsEmployeePostResponseBody>>;\n    /**\n     * Create one or more notifications. The caller must have the following permissions:   - Privilege: &#x60;create&#x60;  - Resource: &#x60;Notifications&#x60;  - Business function: &#x60;Manage Notifications&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postManageNotifications(requestParameters: PostManageNotificationsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<NotificationsEmployeePostResponseBody>>;\n    /**\n     * Create one or more notifications. The caller must have the following permissions:   - Privilege: &#x60;create&#x60;  - Resource: &#x60;Notifications&#x60;  - Business function: &#x60;Manage Notifications&#x60;\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postManageNotifications(requestParameters: PostManageNotificationsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _notificationsPostRequestBody = requestParameters[\"notificationsPostRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<NotificationsEmployeePostResponseBody>(`${this.configuration.basePath}/client-api/v2/employee/notifications`,\n            _notificationsPostRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postManageNotificationsUrl(requestParameters: PostManageNotificationsRequestParams): string {\n        const _notificationsPostRequestBody = requestParameters[\"notificationsPostRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/employee/notifications`;\n    }\n\n    /**\n     * Approves or rejects the notification that awaits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovableNotification(requestParameters: PutApprovableNotificationRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<NotificationApprovalPutResponseBody>;\n    /**\n     * Approves or rejects the notification that awaits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovableNotification(requestParameters: PutApprovableNotificationRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<NotificationApprovalPutResponseBody>>;\n    /**\n     * Approves or rejects the notification that awaits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovableNotification(requestParameters: PutApprovableNotificationRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<NotificationApprovalPutResponseBody>>;\n    /**\n     * Approves or rejects the notification that awaits approval.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putApprovableNotification(requestParameters: PutApprovableNotificationRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _managementId = requestParameters[\"managementId\"];\n        if (_managementId === null || _managementId === undefined) {\n            throw new Error('Required parameter managementId was null or undefined when calling putApprovableNotification.');\n        }\n        const _notificationApprovalPutRequestBody = requestParameters[\"notificationApprovalPutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<NotificationApprovalPutResponseBody>(`${this.configuration.basePath}/client-api/v2/employee/notifications/${encodeURIComponent(String(_managementId))}/approvals`,\n            _notificationApprovalPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putApprovableNotificationUrl(requestParameters: PutApprovableNotificationRequestParams): string {\n        const _managementId = requestParameters[\"managementId\"];\n        if (_managementId === null || _managementId === undefined) {\n            throw new Error('Required parameter managementId was null or undefined when calling putApprovableNotification.');\n        }\n        const _notificationApprovalPutRequestBody = requestParameters[\"notificationApprovalPutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/employee/notifications/${encodeURIComponent(String(_managementId))}/approvals`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/employee/notifications/{managementId}/approvals URL pattern\n*/\nexport const EmployeeHttpServiceGetApprovableNotificationMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/employee/notifications/{managementId}/approvals\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"recipients\" : [ {\n    \"userId\" : \"3154-611-851\"\n  } ],\n  \"title\" : \"Some title\",\n  \"message\" : \"Everything works pretty well {{link}}\",\n  \"level\" : \"INFO\",\n  \"targetGroup\" : \"USER\",\n  \"link\" : \"http://dashboard.support.backbase.com\",\n  \"validFrom\" : \"2017-10-04T14:54:36.274+0000\",\n  \"expiresOn\" : \"2018-10-04T14:54:36.274+0000\",\n  \"origin\" : \"Transaction\",\n  \"routing\" : {\n    \"where-to\" : \"payments-view\",\n    \"data\" : {\n      \"id\" : \"12345\"\n    }\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/employee/notifications URL pattern\n*/\nexport const EmployeeHttpServicePostManageNotificationsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/employee/notifications\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"managementId\" : \"15fafdcb-8eee-45ec-b10c-6ec6ef4874f3\",\n  \"approvalStatus\" : \"PENDING\",\n  \"notificationIds\" : [ \"1dad5515-ec74-471b-ac93-1d5ef7133ea3\", \"6067499a-0b66-4d8c-9e0e-f98076e8c7f4\", \"dc9be1ae-9134-46d5-a2c0-162f011f4584\" ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 422,\n                    body: {\n  \"message\" : \"Validation error(s) occurred during creation of the notification\",\n  \"errorFields\" : [ {\n    \"fieldName\" : \"message\",\n    \"message\" : \"Message must contain '{{link}}' placeholder to replace presented link. Remove link or insert placeholder into your message text\"\n  }, {\n    \"fieldName\" : \"validFrom\",\n    \"message\" : \"The notification should be valid from some time in future\"\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/employee/notifications/{managementId}/approvals URL pattern\n*/\nexport const EmployeeHttpServicePutApprovableNotificationMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/employee/notifications/{managementId}/approvals\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"approvalStatus\" : \"APPROVED\"\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n\nexport const EmployeeHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/employee/notifications/{managementId}/approvals\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"recipients\" : [ {\n    \"userId\" : \"3154-611-851\"\n  } ],\n  \"title\" : \"Some title\",\n  \"message\" : \"Everything works pretty well {{link}}\",\n  \"level\" : \"INFO\",\n  \"targetGroup\" : \"USER\",\n  \"link\" : \"http://dashboard.support.backbase.com\",\n  \"validFrom\" : \"2017-10-04T14:54:36.274+0000\",\n  \"expiresOn\" : \"2018-10-04T14:54:36.274+0000\",\n  \"origin\" : \"Transaction\",\n  \"routing\" : {\n    \"where-to\" : \"payments-view\",\n    \"data\" : {\n      \"id\" : \"12345\"\n    }\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/employee/notifications\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"managementId\" : \"15fafdcb-8eee-45ec-b10c-6ec6ef4874f3\",\n  \"approvalStatus\" : \"PENDING\",\n  \"notificationIds\" : [ \"1dad5515-ec74-471b-ac93-1d5ef7133ea3\", \"6067499a-0b66-4d8c-9e0e-f98076e8c7f4\", \"dc9be1ae-9134-46d5-a2c0-162f011f4584\" ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 422,\n                body: {\n  \"message\" : \"Validation error(s) occurred during creation of the notification\",\n  \"errorFields\" : [ {\n    \"fieldName\" : \"message\",\n    \"message\" : \"Message must contain '{{link}}' placeholder to replace presented link. Remove link or insert placeholder into your message text\"\n  }, {\n    \"fieldName\" : \"validFrom\",\n    \"message\" : \"The notification should be valid from some time in future\"\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/employee/notifications/{managementId}/approvals\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"approvalStatus\" : \"APPROVED\"\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Notifications client\n * Read, delete, mark notifications as read or unread as a bank customer. Create, approve, or reject notifications as a bank employee.\n *\n * The version of the OpenAPI document: 2.0.15\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { CategoryGetResponseBody } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { MarkAsReadPutRequestBody } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { NotificationsDigestGetResponseBody } from '../model/models';\nimport { NotificationsGetResponseBody } from '../model/models';\nimport { NotificationsStreamGetResponseBody } from '../model/models';\nimport { UnprocessableEntityException } from '../model/models';\nimport { UnreadCountGetResponseBody } from '../model/models';\n\nimport { NOTIFICATIONS_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { NotificationsConfiguration }                                     from '../configuration';\n\n\nexport interface DeleteNotificationRequestParams {\n    /** Notification identifier. */\n    [\"id\"]: string;\n}\n\nexport interface GetNotificationsRequestParams {\n    /** Skip over a page of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response */\n    [\"size\"]?: number;\n    /** Date from which the notifications should be retrieved */\n    [\"fromDate\"]?: string;\n    /** Date to which the notifications should be retrieved */\n    [\"toDate\"]?: string;\n    /** Array of severity levels notifications should be filtered by */\n    [\"levels\"]?: Array<string>;\n    /** Fetch only read or not read notifications */\n    [\"read\"]?: string;\n    /** Array of origins notifications should be filtered by */\n    [\"origins\"]?: Array<string>;\n}\n\nexport interface GetNotificationsStreamRequestParams {\n    /** Age in milliseconds of the notifications to retrieve from the stream. For example, if the client sets the interval to 15000 milliseconds (15 seconds), then the response includes notifications that: * Are created within last 15 seconds for notifications without a &#x60;validFrom&#x60; date * Have a &#x60;validFrom&#x60; date within the last 15 seconds */\n    [\"interval\"]?: number;\n    /** Comma-separated list of notifications severity levels, handy in cases when user doesn\\&#39;t want all notifications to be shown in popups, but rather the most \\&#39;important\\&#39; ones */\n    [\"levels\"]?: string;\n    /** Array of origins notifications should be filtered by */\n    [\"origins\"]?: Array<string>;\n}\n\nexport interface GetUnreadCountRequestParams {\n    /** Array of severity levels notifications should be filtered by */\n    [\"levels\"]?: Array<string>;\n    /** Array of origins notifications should be filtered by */\n    [\"origins\"]?: Array<string>;\n}\n\nexport interface PutMarkAsReadRequestParams {\n    /** Notification identifier. */\n    [\"id\"]: string;\n    [\"markAsReadPutRequestBody\"]?: MarkAsReadPutRequestBody;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new NotificationsConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(NOTIFICATIONS_BASE_PATH) basePath: string, @Optional() configuration: NotificationsConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Delete the notification with the specified ID.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteNotification(requestParameters: DeleteNotificationRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete the notification with the specified ID.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteNotification(requestParameters: DeleteNotificationRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete the notification with the specified ID.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteNotification(requestParameters: DeleteNotificationRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete the notification with the specified ID.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteNotification(requestParameters: DeleteNotificationRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteNotification.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/notifications/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteNotificationUrl(requestParameters: DeleteNotificationRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteNotification.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/notifications/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Get categories of notifications.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategory(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CategoryGetResponseBody>;\n    /**\n     * Get categories of notifications.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategory(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CategoryGetResponseBody>>;\n    /**\n     * Get categories of notifications.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategory(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CategoryGetResponseBody>>;\n    /**\n     * Get categories of notifications.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCategory(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CategoryGetResponseBody>(`${this.configuration.basePath}/client-api/v2/notifications/categories`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getCategoryUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/notifications/categories`;\n    }\n\n    /**\n     * Get all notifications for the current user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotifications(requestParameters: GetNotificationsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<NotificationsGetResponseBody>>;\n    /**\n     * Get all notifications for the current user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotifications(requestParameters: GetNotificationsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<NotificationsGetResponseBody>>>;\n    /**\n     * Get all notifications for the current user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotifications(requestParameters: GetNotificationsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<NotificationsGetResponseBody>>>;\n    /**\n     * Get all notifications for the current user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotifications(requestParameters: GetNotificationsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _fromDate = requestParameters[\"fromDate\"];\n        const _toDate = requestParameters[\"toDate\"];\n        const _levels = requestParameters[\"levels\"];\n        const _read = requestParameters[\"read\"];\n        const _origins = requestParameters[\"origins\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_fromDate !== undefined && _fromDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toDate, 'toDate');\n        }\n        if (_levels) {\n            _levels.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'levels');\n            })\n        }\n        if (_read !== undefined && _read !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_read, 'read');\n        }\n        if (_origins) {\n            _origins.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'origins');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<NotificationsGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/notifications`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getNotificationsUrl(requestParameters: GetNotificationsRequestParams): string {\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _fromDate = requestParameters[\"fromDate\"];\n        const _toDate = requestParameters[\"toDate\"];\n        const _levels = requestParameters[\"levels\"];\n        const _read = requestParameters[\"read\"];\n        const _origins = requestParameters[\"origins\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_fromDate !== undefined && _fromDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toDate, 'toDate');\n        }\n        if (_levels) {\n            _levels.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'levels');\n            })\n        }\n        if (_read !== undefined && _read !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_read, 'read');\n        }\n        if (_origins) {\n            _origins.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'origins');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/notifications${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve the count of unread notifications by categories for the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotificationsDigest(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<NotificationsDigestGetResponseBody>;\n    /**\n     * Retrieve the count of unread notifications by categories for the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotificationsDigest(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<NotificationsDigestGetResponseBody>>;\n    /**\n     * Retrieve the count of unread notifications by categories for the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotificationsDigest(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<NotificationsDigestGetResponseBody>>;\n    /**\n     * Retrieve the count of unread notifications by categories for the current user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotificationsDigest(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<NotificationsDigestGetResponseBody>(`${this.configuration.basePath}/client-api/v2/notifications/stream/digest`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getNotificationsDigestUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/notifications/stream/digest`;\n    }\n\n    /**\n     * Retrieve the latest unread notifications for the current user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotificationsStream(requestParameters: GetNotificationsStreamRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<NotificationsStreamGetResponseBody>>;\n    /**\n     * Retrieve the latest unread notifications for the current user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotificationsStream(requestParameters: GetNotificationsStreamRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<NotificationsStreamGetResponseBody>>>;\n    /**\n     * Retrieve the latest unread notifications for the current user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotificationsStream(requestParameters: GetNotificationsStreamRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<NotificationsStreamGetResponseBody>>>;\n    /**\n     * Retrieve the latest unread notifications for the current user.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getNotificationsStream(requestParameters: GetNotificationsStreamRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _interval = requestParameters[\"interval\"];\n        const _levels = requestParameters[\"levels\"];\n        const _origins = requestParameters[\"origins\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_interval !== undefined && _interval !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_interval, 'interval');\n        }\n        if (_levels !== undefined && _levels !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_levels, 'levels');\n        }\n        if (_origins) {\n            _origins.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'origins');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<NotificationsStreamGetResponseBody>>(`${this.configuration.basePath}/client-api/v2/notifications/stream`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getNotificationsStreamUrl(requestParameters: GetNotificationsStreamRequestParams): string {\n        const _interval = requestParameters[\"interval\"];\n        const _levels = requestParameters[\"levels\"];\n        const _origins = requestParameters[\"origins\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_interval !== undefined && _interval !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_interval, 'interval');\n        }\n        if (_levels !== undefined && _levels !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_levels, 'levels');\n        }\n        if (_origins) {\n            _origins.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'origins');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/notifications/stream${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Count the unread non-sticky notifications.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnreadCount(requestParameters: GetUnreadCountRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UnreadCountGetResponseBody>;\n    /**\n     * Count the unread non-sticky notifications.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnreadCount(requestParameters: GetUnreadCountRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UnreadCountGetResponseBody>>;\n    /**\n     * Count the unread non-sticky notifications.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnreadCount(requestParameters: GetUnreadCountRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UnreadCountGetResponseBody>>;\n    /**\n     * Count the unread non-sticky notifications.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnreadCount(requestParameters: GetUnreadCountRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _levels = requestParameters[\"levels\"];\n        const _origins = requestParameters[\"origins\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_levels) {\n            _levels.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'levels');\n            })\n        }\n        if (_origins) {\n            _origins.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'origins');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<UnreadCountGetResponseBody>(`${this.configuration.basePath}/client-api/v2/notifications/unread-count`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUnreadCountUrl(requestParameters: GetUnreadCountRequestParams): string {\n        const _levels = requestParameters[\"levels\"];\n        const _origins = requestParameters[\"origins\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_levels) {\n            _levels.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'levels');\n            })\n        }\n        if (_origins) {\n            _origins.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'origins');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/notifications/unread-count${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Mark the specified notification as read/unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsRead(requestParameters: PutMarkAsReadRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Mark the specified notification as read/unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsRead(requestParameters: PutMarkAsReadRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Mark the specified notification as read/unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsRead(requestParameters: PutMarkAsReadRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Mark the specified notification as read/unread.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putMarkAsRead(requestParameters: PutMarkAsReadRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putMarkAsRead.');\n        }\n        const _markAsReadPutRequestBody = requestParameters[\"markAsReadPutRequestBody\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/notifications/${encodeURIComponent(String(_id))}/read`,\n            _markAsReadPutRequestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putMarkAsReadUrl(requestParameters: PutMarkAsReadRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling putMarkAsRead.');\n        }\n        const _markAsReadPutRequestBody = requestParameters[\"markAsReadPutRequestBody\"];\n        return `${this.configuration.basePath}/client-api/v2/notifications/${encodeURIComponent(String(_id))}/read`;\n    }\n\n    /**\n     * Mark all notifications as read.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putRead(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Mark all notifications as read.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putRead(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Mark all notifications as read.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putRead(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Mark all notifications as read.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public putRead(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/notifications/read`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public putReadUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/notifications/read`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/notifications/{id} URL pattern\n*/\nexport const NotificationsHttpServiceDeleteNotificationMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/notifications/{id}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/notifications/categories URL pattern\n*/\nexport const NotificationsHttpServiceGetCategoryMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/notifications/categories\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"categories\" : [ \"limits\", \"transactions\", \"actions\" ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/notifications URL pattern\n*/\nexport const NotificationsHttpServiceGetNotificationsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/notifications\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"1234-5678-9021\",\n  \"title\" : \"Account balance changed\",\n  \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-06-16T08:00:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Accounts\",\n  \"routing\" : {\n    \"where-to\" : \"arrangement-view\",\n    \"data\" : {\n      \"id\" : \"2265e96bfd19\",\n      \"arrangementId\" : \"dae9ac97-5765-470f-9fa9-e221505791ee\"\n    }\n  },\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"Account balance changed\",\n      \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"Solde du compte modifié\",\n      \"message\" : \"&#128184; Bonjour John, le solde de votre compte d'épargne est passé sous le seuil. Le solde actuel est de EUR 100.00\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9022\",\n  \"title\" : \"New transaction\",\n  \"message\" : \"&#128184; Paid EUR 100.00 Quickbooks monthly subscription fee.\",\n  \"level\" : \"ALERT\",\n  \"createdOn\" : \"2020-06-15T14:01:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Transaction\",\n  \"routing\" : {\n    \"where-to\" : \"transaction-view\",\n    \"data\" : {\n      \"id\" : \"e4c26f12e4935\",\n      \"arrangementId\" : \"67d5e587-b602-4c3e-a3f2-e339d70bfb4b\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9023\",\n  \"title\" : \"Saving goal\",\n  \"message\" : \"Congrats, you successfully completed your saving goal for Maldives trip.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-06-14T14:07:36.000+0000\",\n  \"expiresOn\" : \"2021-10-06T14:07:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"PFM\"\n}, {\n  \"id\" : \"1234-5678-9024\",\n  \"title\" : \"Pocket Goal &#127881;\",\n  \"message\" : \"Well done! Don't forget to withdraw your money and create a new pocket for more saving goals\",\n  \"level\" : \"SUCCESS\",\n  \"origin\" : \"FinancialInsights\",\n  \"createdOn\" : \"2020-06-13T12:13:36.000+0000\",\n  \"read\" : true,\n  \"routing\" : {\n    \"where-to\" : \"pocket-success-view\",\n    \"data\" : {\n      \"id\" : \"456789123\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9025\",\n  \"title\" : \"Account balance changed\",\n  \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00 \",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-05-27T14:59:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"validFrom\" : \"2020-07-28T14:59:36.000+0000\",\n  \"expiresOn\" : \"2021-09-28T14:59:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Accounts\"\n}, {\n  \"id\" : \"1234-5678-9026\",\n  \"title\" : \"Payment status change\",\n  \"message\" : \"Your payment to Acme Corp of EUR 100.00 has changed to rejected.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-05-26T15:55:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Payment\",\n  \"routing\" : {\n    \"where-to\" : \"payment-view\",\n    \"data\" : {\n      \"id\" : \"d3d3a955-aa94-44ba-a90c-c9eafab81213\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9111\",\n  \"title\" : \"Payments summary\",\n  \"message\" : \"You have 4 payments to approve since 2021-05-05 16:00:00.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Payment\",\n  \"createdOn\" : \"2020-05-05T08:09:27.000+0000\",\n  \"read\" : false,\n  \"routing\" : {\n    \"where-to\" : \"payments-list-view\"\n  }\n}, {\n  \"id\" : \"1234-5678-9027\",\n  \"title\" : \"Contact status change\",\n  \"message\" : \"The status for Contact: Kenya Coffee Beans has changed to rejected.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-05-25T16:53:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"read\" : false,\n  \"origin\" : \"Contact\",\n  \"routing\" : {\n    \"where-to\" : \"party-view\",\n    \"data\" : {\n      \"id\" : \"4b9eb675-65ad-4247-8ff4-d549e3b340c6\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9028\",\n  \"title\" : \"Payment to approve\",\n  \"message\" : \"You have a new payment of EUR 100.00 to approve.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-04-24T17:54:36.000+0000\",\n  \"expiresOn\" : \"2021-09-24T18:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Payment\",\n  \"routing\" : {\n    \"where-to\" : \"payment-approve-view\",\n    \"data\" : {\n      \"id\" : \"d3d3a955-aa94-44ba-a90c-c9eafab81213\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9029\",\n  \"title\" : \"Contact to approve\",\n  \"message\" : \"You have new contact to approve.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-04-15T17:13:36.000+0000\",\n  \"expiresOn\" : \"2021-09-22T18:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Contact\",\n  \"routing\" : {\n    \"where-to\" : \"party-approve-view\",\n    \"data\" : {\n      \"id\" : \"4b9eb675-65ad-4247-8ff4-d549e3b340c6\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9030\",\n  \"title\" : \"Planned maintenance\",\n  \"message\" : \"The server will be down at October 4 due to some problems you should not care about. Sorry for inconvenience. For more information check the {{link}}.\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-04-10T19:54:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"validFrom\" : \"2020-04-17T19:54:36.000+0000\",\n  \"expiresOn\" : \"2021-09-17T19:54:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Maintenance\"\n}, {\n  \"id\" : \"1234-5678-9031\",\n  \"title\" : \"Export complete\",\n  \"message\" : \"The CSV you requested for export is complete and ready to {{link}}\",\n  \"level\" : \"SUCCESS\",\n  \"createdOn\" : \"2020-04-09T21:54:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Audit\",\n  \"link\" : \"http://support.dashboard.backbase.com\"\n}, {\n  \"id\" : \"1234-5678-9032\",\n  \"title\" : \"Export failed\",\n  \"message\" : \"The CSV you requested for export failed to complete\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-03-12T22:54:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"read\" : false,\n  \"origin\" : \"Audit\"\n}, {\n  \"id\" : \"1234-5678-9033\",\n  \"title\" : \"Scheduled payment alert\",\n  \"message\" : \"Don't forget: 50,- will be withdrawn from the account on 2021-10-04\",\n  \"level\" : \"ALERT\",\n  \"createdOn\" : \"2020-03-10T14:54:36.000+0000\",\n  \"expiresOn\" : \"2021-09-10T14:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Security\"\n}, {\n  \"id\" : \"1234-5678-9034\",\n  \"title\" : \"Updates\",\n  \"message\" : \"You are using an old version of application. Please update it as soon as possible. To get the new version click the {{link}}.\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-03-05T13:13:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"expiresOn\" : \"2021-11-22T15:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Security\"\n}, {\n  \"id\" : \"1234-5678-9038\",\n  \"title\" : \"Sticky message\",\n  \"message\" : \"Sticky message\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-02-16T14:42:36.000+0000\",\n  \"expiresOn\" : \"2021-10-04T14:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Security\"\n}, {\n  \"id\" : \"1234-5678-9039\",\n  \"title\" : \"Message shown in future (unless it's past June 2021 :)\",\n  \"message\" : \"Message shown in future (unless it's past June 2021 :)\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-02-14T10:48:36.000+0000\",\n  \"validFrom\" : \"2020-02-15T11:48:36.000+0000\",\n  \"expiresOn\" : \"2021-06-03T11:48:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Maintenance\"\n}, {\n  \"id\" : \"1234-5678-9040\",\n  \"title\" : \"Account statement is ready\",\n  \"message\" : \"Your monthly account statement is ready to download\",\n  \"level\" : \"SUCCESS\",\n  \"createdOn\" : \"2020-02-12T14:01:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"AccountStatement\"\n}, {\n  \"id\" : \"1234-5678-9041\",\n  \"title\" : \"New message - Unassigned\",\n  \"message\" : \"From: J.Smith<br/>Subject: Credit<br/>Topic: Currency\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-02-10T15:30:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"MessageCenter\",\n  \"routing\" : {\n    \"where-to\" : \"conversation-view\",\n    \"data\" : {\n      \"id\" : \"12345\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9042\",\n  \"title\" : \"Saving goal\",\n  \"message\" : \"Congrats, you successfully completed your saving goal for J.Smith\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-02-08T15:30:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"read\" : true,\n  \"origin\" : \"PFM\"\n}, {\n  \"id\" : \"1234-5678-9044\",\n  \"title\" : \"Limit consumption warning\",\n  \"message\" : \"You are getting close to limits threshold. Please contact Administrator\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-02-04T15:30:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Limits\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Description of error\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/notifications/stream/digest URL pattern\n*/\nexport const NotificationsHttpServiceGetNotificationsDigestMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/notifications/stream/digest\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"totalUnreadCount\" : 9,\n  \"countByCategory\" : [ {\n    \"category\" : \"Transactions\",\n    \"unreadCount\" : 3\n  }, {\n    \"category\" : \"Payments\",\n    \"unreadCount\" : 2\n  }, {\n    \"category\" : \"Security\",\n    \"unreadCount\" : 4\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/notifications/stream URL pattern\n*/\nexport const NotificationsHttpServiceGetNotificationsStreamMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/notifications/stream\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"455764c6-aa6f-476d-bf63-89c9fb100878\",\n  \"title\" : \"Unsupported browser\",\n  \"message\" : \"DBS does not support this browser, please choose recommended {{community}}\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-06-16T14:55:36.000+0000\",\n  \"validFrom\" : \"2020-07-04T14:55:36.000+0000\",\n  \"expiresOn\" : \"2021-07-04T14:55:36.000+0000\",\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"Unsupported browser\",\n      \"message\" : \"DBS does not support this browser, please choose recommended {{community}}\",\n      \"link\" : \"https://community.backbase.com/en/\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"Navigateur non supporté\",\n      \"message\" : \"DBS ne supporte pas ce navigateur, veuillez choisir recommandé {{communauté}}.\",\n      \"link\" : \"https://community.backbase.com/fr/\"\n    }\n  }\n}, {\n  \"id\" : \"93bf73c9-aa6f-476d-bf63-89c9fb100878\",\n  \"title\" : \"We found potential security vulnerabilities\",\n  \"message\" : \"Security vulnerability found, {{learn more about security alerts}}\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"ALERT\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-06-15T14:55:36.000+0000\",\n  \"validFrom\" : \"2020-07-03T14:55:36.000+0000\",\n  \"expiresOn\" : \"2021-07-03T14:55:36.000+0000\",\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"We found potential security vulnerabilities\",\n      \"message\" : \"Security vulnerability found, {{learn more about security alerts}}\",\n      \"link\" : \"https://community.backbase.com/en/\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"Nous avons trouvé des vulnérabilités de sécurité potentielles\",\n      \"message\" : \"Vulnérabilité de sécurité trouvée, {{en savoir plus sur les alertes de sécurité}}\",\n      \"link\" : \"https://community.backbase.com/fr/\"\n    }\n  }\n}, {\n  \"id\" : \"29929ef8-aa6f-476d-bf63-89c9fb100878\",\n  \"title\" : \"Please, update your email\",\n  \"message\" : \"Recovery email is not set. To set up, please click {{here}}\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-06-14T14:55:36.000+0000\",\n  \"validFrom\" : \"2020-07-02T14:55:36.000+0000\",\n  \"expiresOn\" : \"2021-07-02T14:55:36.000+0000\",\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"Please, update your email\",\n      \"message\" : \"Recovery email is not set. To set up, please click {{here}}\",\n      \"link\" : \"https://community.backbase.com/en/\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"S'il vous plaît, mettez à jour votre email\",\n      \"message\" : \"Le courrier électronique de récupération n'est pas défini. Pour configurer, s'il vous plaît cliquez sur {{here}}\",\n      \"link\" : \"https://community.backbase.com/fr/\"\n    }\n  }\n}, {\n  \"id\" : \"799c3959-aa6f-476d-bf63-89c9fb100878\",\n  \"title\" : \"Bill Pay available\",\n  \"message\" : \"Ability to add payments to a bill is available on {{bill pay menu tab}}\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"SUCCESS\",\n  \"origin\" : \"BillPay\",\n  \"createdOn\" : \"2020-06-13T14:55:36.000+0000\",\n  \"validFrom\" : \"2020-07-01T14:55:36.000+0000\",\n  \"expiresOn\" : \"2021-07-01T14:55:36.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"transaction-view\",\n    \"data\" : {\n      \"id\" : \"123-456-789\"\n    }\n  },\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"Bill Pay available\",\n      \"message\" : \"Ability to add payments to a bill is available on {{bill pay menu tab}}\",\n      \"link\" : \"https://community.backbase.com/en/\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"Bill Pay disponible\",\n      \"message\" : \"La possibilité d’ajouter des paiements à une facture est disponible à {{facture facture}}\",\n      \"link\" : \"https://community.backbase.com/fr/\"\n    }\n  }\n}, {\n  \"id\" : \"eb4853a9-306f-4a8d-a7be-5093b03e0c32\",\n  \"title\" : \"Account balance changed\",\n  \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Accounts\",\n  \"createdOn\" : \"2020-05-30T06:49:46.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"arrangement-view\",\n    \"data\" : {\n      \"id\" : \"2265e96bfd19\",\n      \"arrangementId\" : \"dae9ac97-5765-470f-9fa9-e221505791ee\"\n    }\n  }\n}, {\n  \"id\" : \"2b39e45f-08f7-4a5f-ac5b-be57772a7482\",\n  \"title\" : \"New transaction\",\n  \"message\" : \"&#128184; Paid EUR 100.00 Quickbooks monthly subscription fee.\",\n  \"level\" : \"ALERT\",\n  \"origin\" : \"PFM\",\n  \"createdOn\" : \"2020-05-28T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"transaction-view\",\n    \"data\" : {\n      \"id\" : \"e4c26f12e4935\",\n      \"arrangementId\" : \"67d5e587-b602-4c3e-a3f2-e339d70bfb4b\"\n    }\n  }\n}, {\n  \"id\" : \"d72f9307-df48-4111-b79e-21402cdf446a\",\n  \"title\" : \"Saving goal\",\n  \"message\" : \"Congrats, you successfully completed your saving goal for Maldives trip.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"PFM\",\n  \"createdOn\" : \"2020-05-26T08:09:27.000+0000\"\n}, {\n  \"id\" : \"da595756-6ef9-40f4-a034-f3f0a695c648\",\n  \"title\" : \"Account balance changed\",\n  \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00 \",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Accounts\",\n  \"createdOn\" : \"2020-05-24T22:55:55.000+0000\"\n}, {\n  \"id\" : \"746d4549-8792-4765-85fe-90fde7d07d95\",\n  \"title\" : \"Payment status change\",\n  \"message\" : \"Your payment to Acme Corp of EUR 100.00 has changed to rejected.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Payment\",\n  \"createdOn\" : \"2020-05-22T08:17:41.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"payment-view\",\n    \"data\" : {\n      \"id\" : \"d3d3a955-aa94-44ba-a90c-c9eafab81213\"\n    }\n  }\n}, {\n  \"id\" : \"19b11619-f8de-49c9-a795-d4746a6a2dcb\",\n  \"title\" : \"Contact status change\",\n  \"message\" : \"The status for Contact: Kenya Coffee Beans has changed to rejected.\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Contact\",\n  \"createdOn\" : \"2020-05-20T19:31:52.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"party-view\",\n    \"data\" : {\n      \"id\" : \"4b9eb675-65ad-4247-8ff4-d549e3b340c6\"\n    }\n  }\n}, {\n  \"id\" : \"e1430d9f-c6e4-4a2a-b26a-4137d0217a9c\",\n  \"title\" : \"Payment to approve\",\n  \"message\" : \"You have a new payment of EUR 100.00 to approve.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Payment\",\n  \"createdOn\" : \"2020-05-18T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"payment-approve-view\",\n    \"data\" : {\n      \"id\" : \"d3d3a955-aa94-44ba-a90c-c9eafab81213\"\n    }\n  }\n}, {\n  \"id\" : \"e1430d9f-c6e4-4a2a-b26a-4137d0217111\",\n  \"title\" : \"Payments summary\",\n  \"message\" : \"You have 4 payments to approve since 2021-05-05 16:00:00.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Payment\",\n  \"createdOn\" : \"2020-05-05T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"payments-list-view\"\n  }\n}, {\n  \"id\" : \"e155c460-bdd6-4371-9cce-0a1189a2125d\",\n  \"title\" : \"Contact to approve\",\n  \"message\" : \"You have new contact to approve.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Contact\",\n  \"createdOn\" : \"2020-05-16T06:04:28.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"party-approve-view\",\n    \"data\" : {\n      \"id\" : \"4b9eb675-65ad-4247-8ff4-d549e3b340c6\"\n    }\n  }\n}, {\n  \"id\" : \"6eb77bed-c571-4cec-bcd5-d21914475ee1\",\n  \"title\" : \"Planned maintenance\",\n  \"message\" : \"The server will be down at October 4 due to some problems you should not care about. Sorry for inconvenience. For more information check the {{link}}.\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Maintenance\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"createdOn\" : \"2020-05-14T08:09:27.000+0000\"\n}, {\n  \"id\" : \"2d534c32-290b-4d7f-a730-90a904140457\",\n  \"title\" : \"Export complete\",\n  \"message\" : \"The CSV you requested for export is complete and ready to {{link}}\",\n  \"level\" : \"SUCCESS\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"origin\" : \"Audit\",\n  \"createdOn\" : \"2020-05-12T18:24:26.000+0000\"\n}, {\n  \"id\" : \"60adeeff-f841-4940-a4bc-d7d3d5850517\",\n  \"title\" : \"Export failed\",\n  \"message\" : \"The CSV you requested for export failed to complete\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Audit\",\n  \"createdOn\" : \"2020-05-10T08:09:27.000+0000\"\n}, {\n  \"id\" : \"788d6a1b-f2ab-4755-8444-acb9d677d3e8\",\n  \"title\" : \"Scheduled payment alert\",\n  \"message\" : \"Don't forget: 50,- will be withdrawn from the account on 2021-10-04\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-05-08T16:37:59.000+0000\"\n}, {\n  \"id\" : \"151b0953-2e09-4421-980a-cb4f5ab213e6\",\n  \"title\" : \"Updates\",\n  \"message\" : \"You are using an old version of application. Please update it as soon as possible. To get the new version click the {{link}}.\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-05-06T08:09:27.000+0000\"\n}, {\n  \"id\" : \"d4ba2576-fd6a-47f8-89fe-16a46d67b5b0\",\n  \"title\" : \"Account statement is ready\",\n  \"message\" : \"Your monthly account statement is ready to download\",\n  \"level\" : \"SUCCESS\",\n  \"origin\" : \"AccountStatement\",\n  \"createdOn\" : \"2020-05-04T08:09:27.000+0000\"\n}, {\n  \"id\" : \"d3c9379e-31e3-45ca-a9a7-2771c1c8b5ff\",\n  \"title\" : \"New message - Unassigned\",\n  \"message\" : \"From: J.Smith<br/>Subject: Credit<br/>Topic: Currency\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"MessageCenter\",\n  \"createdOn\" : \"2020-05-02T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"conversation-view\",\n    \"data\" : {\n      \"id\" : \"11-11-11\"\n    }\n  }\n}, {\n  \"id\" : \"d72f9307-df48-4111-b79e-21402cdf446b\",\n  \"title\" : \"Pocket Goal &#127881;\",\n  \"message\" : \"Well done! Don't forget to withdraw your money and create a new pocket for more saving goals\",\n  \"level\" : \"SUCCESS\",\n  \"origin\" : \"FinancialInsights\",\n  \"createdOn\" : \"2020-01-30T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"pocket-success-view\",\n    \"data\" : {\n      \"id\" : \"456789123\"\n    }\n  }\n}, {\n  \"id\" : \"d4ba2576-fd6a-47f8-89fe-16a46d67b5b0\",\n  \"title\" : \"Saving goal\",\n  \"message\" : \"Congrats, you successfully completed your saving goal for J.Smith\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"PFM\",\n  \"createdOn\" : \"2020-01-29T08:09:27.000+0000\"\n}, {\n  \"id\" : \"d4ba2576-fd6a-47f8-89fe-16a46d67b5b0\",\n  \"title\" : \"Limit consumption warning\",\n  \"message\" : \"You are getting close to limits threshold. Please contact Administrator\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Limits\",\n  \"createdOn\" : \"2020-01-028T08:09:27.000+0000\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/notifications/unread-count URL pattern\n*/\nexport const NotificationsHttpServiceGetUnreadCountMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/notifications/unread-count\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"unread\" : 10\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/notifications/{id}/read URL pattern\n*/\nexport const NotificationsHttpServicePutMarkAsReadMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/notifications/{id}/read\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n                },\n                {\n                    status: 422,\n                    body: {\n  \"message\" : \"Validation error(s) occurred during creation of the notification\",\n  \"errorFields\" : [ {\n    \"fieldName\" : \"message\",\n    \"message\" : \"Message must contain '{{link}}' placeholder to replace presented link. Remove link or insert placeholder into your message text\"\n  }, {\n    \"fieldName\" : \"validFrom\",\n    \"message\" : \"The notification should be valid from some time in future\"\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/notifications/read URL pattern\n*/\nexport const NotificationsHttpServicePutReadMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/notifications/read\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n    ]\n}]);\n\nexport const NotificationsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/notifications/{id}\",\n        method: \"DELETE\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/notifications/categories\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"categories\" : [ \"limits\", \"transactions\", \"actions\" ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/notifications\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"1234-5678-9021\",\n  \"title\" : \"Account balance changed\",\n  \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-06-16T08:00:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Accounts\",\n  \"routing\" : {\n    \"where-to\" : \"arrangement-view\",\n    \"data\" : {\n      \"id\" : \"2265e96bfd19\",\n      \"arrangementId\" : \"dae9ac97-5765-470f-9fa9-e221505791ee\"\n    }\n  },\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"Account balance changed\",\n      \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"Solde du compte modifié\",\n      \"message\" : \"&#128184; Bonjour John, le solde de votre compte d'épargne est passé sous le seuil. Le solde actuel est de EUR 100.00\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9022\",\n  \"title\" : \"New transaction\",\n  \"message\" : \"&#128184; Paid EUR 100.00 Quickbooks monthly subscription fee.\",\n  \"level\" : \"ALERT\",\n  \"createdOn\" : \"2020-06-15T14:01:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Transaction\",\n  \"routing\" : {\n    \"where-to\" : \"transaction-view\",\n    \"data\" : {\n      \"id\" : \"e4c26f12e4935\",\n      \"arrangementId\" : \"67d5e587-b602-4c3e-a3f2-e339d70bfb4b\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9023\",\n  \"title\" : \"Saving goal\",\n  \"message\" : \"Congrats, you successfully completed your saving goal for Maldives trip.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-06-14T14:07:36.000+0000\",\n  \"expiresOn\" : \"2021-10-06T14:07:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"PFM\"\n}, {\n  \"id\" : \"1234-5678-9024\",\n  \"title\" : \"Pocket Goal &#127881;\",\n  \"message\" : \"Well done! Don't forget to withdraw your money and create a new pocket for more saving goals\",\n  \"level\" : \"SUCCESS\",\n  \"origin\" : \"FinancialInsights\",\n  \"createdOn\" : \"2020-06-13T12:13:36.000+0000\",\n  \"read\" : true,\n  \"routing\" : {\n    \"where-to\" : \"pocket-success-view\",\n    \"data\" : {\n      \"id\" : \"456789123\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9025\",\n  \"title\" : \"Account balance changed\",\n  \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00 \",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-05-27T14:59:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"validFrom\" : \"2020-07-28T14:59:36.000+0000\",\n  \"expiresOn\" : \"2021-09-28T14:59:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Accounts\"\n}, {\n  \"id\" : \"1234-5678-9026\",\n  \"title\" : \"Payment status change\",\n  \"message\" : \"Your payment to Acme Corp of EUR 100.00 has changed to rejected.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-05-26T15:55:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Payment\",\n  \"routing\" : {\n    \"where-to\" : \"payment-view\",\n    \"data\" : {\n      \"id\" : \"d3d3a955-aa94-44ba-a90c-c9eafab81213\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9111\",\n  \"title\" : \"Payments summary\",\n  \"message\" : \"You have 4 payments to approve since 2021-05-05 16:00:00.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Payment\",\n  \"createdOn\" : \"2020-05-05T08:09:27.000+0000\",\n  \"read\" : false,\n  \"routing\" : {\n    \"where-to\" : \"payments-list-view\"\n  }\n}, {\n  \"id\" : \"1234-5678-9027\",\n  \"title\" : \"Contact status change\",\n  \"message\" : \"The status for Contact: Kenya Coffee Beans has changed to rejected.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-05-25T16:53:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"read\" : false,\n  \"origin\" : \"Contact\",\n  \"routing\" : {\n    \"where-to\" : \"party-view\",\n    \"data\" : {\n      \"id\" : \"4b9eb675-65ad-4247-8ff4-d549e3b340c6\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9028\",\n  \"title\" : \"Payment to approve\",\n  \"message\" : \"You have a new payment of EUR 100.00 to approve.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-04-24T17:54:36.000+0000\",\n  \"expiresOn\" : \"2021-09-24T18:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Payment\",\n  \"routing\" : {\n    \"where-to\" : \"payment-approve-view\",\n    \"data\" : {\n      \"id\" : \"d3d3a955-aa94-44ba-a90c-c9eafab81213\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9029\",\n  \"title\" : \"Contact to approve\",\n  \"message\" : \"You have new contact to approve.\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-04-15T17:13:36.000+0000\",\n  \"expiresOn\" : \"2021-09-22T18:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Contact\",\n  \"routing\" : {\n    \"where-to\" : \"party-approve-view\",\n    \"data\" : {\n      \"id\" : \"4b9eb675-65ad-4247-8ff4-d549e3b340c6\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9030\",\n  \"title\" : \"Planned maintenance\",\n  \"message\" : \"The server will be down at October 4 due to some problems you should not care about. Sorry for inconvenience. For more information check the {{link}}.\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-04-10T19:54:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"validFrom\" : \"2020-04-17T19:54:36.000+0000\",\n  \"expiresOn\" : \"2021-09-17T19:54:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Maintenance\"\n}, {\n  \"id\" : \"1234-5678-9031\",\n  \"title\" : \"Export complete\",\n  \"message\" : \"The CSV you requested for export is complete and ready to {{link}}\",\n  \"level\" : \"SUCCESS\",\n  \"createdOn\" : \"2020-04-09T21:54:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Audit\",\n  \"link\" : \"http://support.dashboard.backbase.com\"\n}, {\n  \"id\" : \"1234-5678-9032\",\n  \"title\" : \"Export failed\",\n  \"message\" : \"The CSV you requested for export failed to complete\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-03-12T22:54:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"read\" : false,\n  \"origin\" : \"Audit\"\n}, {\n  \"id\" : \"1234-5678-9033\",\n  \"title\" : \"Scheduled payment alert\",\n  \"message\" : \"Don't forget: 50,- will be withdrawn from the account on 2021-10-04\",\n  \"level\" : \"ALERT\",\n  \"createdOn\" : \"2020-03-10T14:54:36.000+0000\",\n  \"expiresOn\" : \"2021-09-10T14:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Security\"\n}, {\n  \"id\" : \"1234-5678-9034\",\n  \"title\" : \"Updates\",\n  \"message\" : \"You are using an old version of application. Please update it as soon as possible. To get the new version click the {{link}}.\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-03-05T13:13:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"expiresOn\" : \"2021-11-22T15:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Security\"\n}, {\n  \"id\" : \"1234-5678-9038\",\n  \"title\" : \"Sticky message\",\n  \"message\" : \"Sticky message\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-02-16T14:42:36.000+0000\",\n  \"expiresOn\" : \"2021-10-04T14:54:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Security\"\n}, {\n  \"id\" : \"1234-5678-9039\",\n  \"title\" : \"Message shown in future (unless it's past June 2021 :)\",\n  \"message\" : \"Message shown in future (unless it's past June 2021 :)\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-02-14T10:48:36.000+0000\",\n  \"validFrom\" : \"2020-02-15T11:48:36.000+0000\",\n  \"expiresOn\" : \"2021-06-03T11:48:36.000+0000\",\n  \"read\" : false,\n  \"origin\" : \"Maintenance\"\n}, {\n  \"id\" : \"1234-5678-9040\",\n  \"title\" : \"Account statement is ready\",\n  \"message\" : \"Your monthly account statement is ready to download\",\n  \"level\" : \"SUCCESS\",\n  \"createdOn\" : \"2020-02-12T14:01:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"AccountStatement\"\n}, {\n  \"id\" : \"1234-5678-9041\",\n  \"title\" : \"New message - Unassigned\",\n  \"message\" : \"From: J.Smith<br/>Subject: Credit<br/>Topic: Currency\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-02-10T15:30:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"MessageCenter\",\n  \"routing\" : {\n    \"where-to\" : \"conversation-view\",\n    \"data\" : {\n      \"id\" : \"12345\"\n    }\n  }\n}, {\n  \"id\" : \"1234-5678-9042\",\n  \"title\" : \"Saving goal\",\n  \"message\" : \"Congrats, you successfully completed your saving goal for J.Smith\",\n  \"level\" : \"INFO\",\n  \"createdOn\" : \"2020-02-08T15:30:36.000+0000\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"read\" : true,\n  \"origin\" : \"PFM\"\n}, {\n  \"id\" : \"1234-5678-9044\",\n  \"title\" : \"Limit consumption warning\",\n  \"message\" : \"You are getting close to limits threshold. Please contact Administrator\",\n  \"level\" : \"WARNING\",\n  \"createdOn\" : \"2020-02-04T15:30:36.000+0000\",\n  \"read\" : true,\n  \"origin\" : \"Limits\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"message\" : \"Description of error\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/notifications/stream/digest\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"totalUnreadCount\" : 9,\n  \"countByCategory\" : [ {\n    \"category\" : \"Transactions\",\n    \"unreadCount\" : 3\n  }, {\n    \"category\" : \"Payments\",\n    \"unreadCount\" : 2\n  }, {\n    \"category\" : \"Security\",\n    \"unreadCount\" : 4\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/notifications/stream\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"455764c6-aa6f-476d-bf63-89c9fb100878\",\n  \"title\" : \"Unsupported browser\",\n  \"message\" : \"DBS does not support this browser, please choose recommended {{community}}\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-06-16T14:55:36.000+0000\",\n  \"validFrom\" : \"2020-07-04T14:55:36.000+0000\",\n  \"expiresOn\" : \"2021-07-04T14:55:36.000+0000\",\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"Unsupported browser\",\n      \"message\" : \"DBS does not support this browser, please choose recommended {{community}}\",\n      \"link\" : \"https://community.backbase.com/en/\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"Navigateur non supporté\",\n      \"message\" : \"DBS ne supporte pas ce navigateur, veuillez choisir recommandé {{communauté}}.\",\n      \"link\" : \"https://community.backbase.com/fr/\"\n    }\n  }\n}, {\n  \"id\" : \"93bf73c9-aa6f-476d-bf63-89c9fb100878\",\n  \"title\" : \"We found potential security vulnerabilities\",\n  \"message\" : \"Security vulnerability found, {{learn more about security alerts}}\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"ALERT\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-06-15T14:55:36.000+0000\",\n  \"validFrom\" : \"2020-07-03T14:55:36.000+0000\",\n  \"expiresOn\" : \"2021-07-03T14:55:36.000+0000\",\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"We found potential security vulnerabilities\",\n      \"message\" : \"Security vulnerability found, {{learn more about security alerts}}\",\n      \"link\" : \"https://community.backbase.com/en/\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"Nous avons trouvé des vulnérabilités de sécurité potentielles\",\n      \"message\" : \"Vulnérabilité de sécurité trouvée, {{en savoir plus sur les alertes de sécurité}}\",\n      \"link\" : \"https://community.backbase.com/fr/\"\n    }\n  }\n}, {\n  \"id\" : \"29929ef8-aa6f-476d-bf63-89c9fb100878\",\n  \"title\" : \"Please, update your email\",\n  \"message\" : \"Recovery email is not set. To set up, please click {{here}}\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-06-14T14:55:36.000+0000\",\n  \"validFrom\" : \"2020-07-02T14:55:36.000+0000\",\n  \"expiresOn\" : \"2021-07-02T14:55:36.000+0000\",\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"Please, update your email\",\n      \"message\" : \"Recovery email is not set. To set up, please click {{here}}\",\n      \"link\" : \"https://community.backbase.com/en/\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"S'il vous plaît, mettez à jour votre email\",\n      \"message\" : \"Le courrier électronique de récupération n'est pas défini. Pour configurer, s'il vous plaît cliquez sur {{here}}\",\n      \"link\" : \"https://community.backbase.com/fr/\"\n    }\n  }\n}, {\n  \"id\" : \"799c3959-aa6f-476d-bf63-89c9fb100878\",\n  \"title\" : \"Bill Pay available\",\n  \"message\" : \"Ability to add payments to a bill is available on {{bill pay menu tab}}\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"SUCCESS\",\n  \"origin\" : \"BillPay\",\n  \"createdOn\" : \"2020-06-13T14:55:36.000+0000\",\n  \"validFrom\" : \"2020-07-01T14:55:36.000+0000\",\n  \"expiresOn\" : \"2021-07-01T14:55:36.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"transaction-view\",\n    \"data\" : {\n      \"id\" : \"123-456-789\"\n    }\n  },\n  \"translations\" : {\n    \"en-US\" : {\n      \"title\" : \"Bill Pay available\",\n      \"message\" : \"Ability to add payments to a bill is available on {{bill pay menu tab}}\",\n      \"link\" : \"https://community.backbase.com/en/\"\n    },\n    \"fr-FR\" : {\n      \"title\" : \"Bill Pay disponible\",\n      \"message\" : \"La possibilité d’ajouter des paiements à une facture est disponible à {{facture facture}}\",\n      \"link\" : \"https://community.backbase.com/fr/\"\n    }\n  }\n}, {\n  \"id\" : \"eb4853a9-306f-4a8d-a7be-5093b03e0c32\",\n  \"title\" : \"Account balance changed\",\n  \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Accounts\",\n  \"createdOn\" : \"2020-05-30T06:49:46.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"arrangement-view\",\n    \"data\" : {\n      \"id\" : \"2265e96bfd19\",\n      \"arrangementId\" : \"dae9ac97-5765-470f-9fa9-e221505791ee\"\n    }\n  }\n}, {\n  \"id\" : \"2b39e45f-08f7-4a5f-ac5b-be57772a7482\",\n  \"title\" : \"New transaction\",\n  \"message\" : \"&#128184; Paid EUR 100.00 Quickbooks monthly subscription fee.\",\n  \"level\" : \"ALERT\",\n  \"origin\" : \"PFM\",\n  \"createdOn\" : \"2020-05-28T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"transaction-view\",\n    \"data\" : {\n      \"id\" : \"e4c26f12e4935\",\n      \"arrangementId\" : \"67d5e587-b602-4c3e-a3f2-e339d70bfb4b\"\n    }\n  }\n}, {\n  \"id\" : \"d72f9307-df48-4111-b79e-21402cdf446a\",\n  \"title\" : \"Saving goal\",\n  \"message\" : \"Congrats, you successfully completed your saving goal for Maldives trip.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"PFM\",\n  \"createdOn\" : \"2020-05-26T08:09:27.000+0000\"\n}, {\n  \"id\" : \"da595756-6ef9-40f4-a034-f3f0a695c648\",\n  \"title\" : \"Account balance changed\",\n  \"message\" : \"&#128184; Hi John, your saving account balance just went below threshold.  The current balance is EUR 100.00 \",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Accounts\",\n  \"createdOn\" : \"2020-05-24T22:55:55.000+0000\"\n}, {\n  \"id\" : \"746d4549-8792-4765-85fe-90fde7d07d95\",\n  \"title\" : \"Payment status change\",\n  \"message\" : \"Your payment to Acme Corp of EUR 100.00 has changed to rejected.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Payment\",\n  \"createdOn\" : \"2020-05-22T08:17:41.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"payment-view\",\n    \"data\" : {\n      \"id\" : \"d3d3a955-aa94-44ba-a90c-c9eafab81213\"\n    }\n  }\n}, {\n  \"id\" : \"19b11619-f8de-49c9-a795-d4746a6a2dcb\",\n  \"title\" : \"Contact status change\",\n  \"message\" : \"The status for Contact: Kenya Coffee Beans has changed to rejected.\",\n  \"link\" : \"https://community.backbase.com/\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Contact\",\n  \"createdOn\" : \"2020-05-20T19:31:52.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"party-view\",\n    \"data\" : {\n      \"id\" : \"4b9eb675-65ad-4247-8ff4-d549e3b340c6\"\n    }\n  }\n}, {\n  \"id\" : \"e1430d9f-c6e4-4a2a-b26a-4137d0217a9c\",\n  \"title\" : \"Payment to approve\",\n  \"message\" : \"You have a new payment of EUR 100.00 to approve.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Payment\",\n  \"createdOn\" : \"2020-05-18T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"payment-approve-view\",\n    \"data\" : {\n      \"id\" : \"d3d3a955-aa94-44ba-a90c-c9eafab81213\"\n    }\n  }\n}, {\n  \"id\" : \"e1430d9f-c6e4-4a2a-b26a-4137d0217111\",\n  \"title\" : \"Payments summary\",\n  \"message\" : \"You have 4 payments to approve since 2021-05-05 16:00:00.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Payment\",\n  \"createdOn\" : \"2020-05-05T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"payments-list-view\"\n  }\n}, {\n  \"id\" : \"e155c460-bdd6-4371-9cce-0a1189a2125d\",\n  \"title\" : \"Contact to approve\",\n  \"message\" : \"You have new contact to approve.\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Contact\",\n  \"createdOn\" : \"2020-05-16T06:04:28.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"party-approve-view\",\n    \"data\" : {\n      \"id\" : \"4b9eb675-65ad-4247-8ff4-d549e3b340c6\"\n    }\n  }\n}, {\n  \"id\" : \"6eb77bed-c571-4cec-bcd5-d21914475ee1\",\n  \"title\" : \"Planned maintenance\",\n  \"message\" : \"The server will be down at October 4 due to some problems you should not care about. Sorry for inconvenience. For more information check the {{link}}.\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Maintenance\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"createdOn\" : \"2020-05-14T08:09:27.000+0000\"\n}, {\n  \"id\" : \"2d534c32-290b-4d7f-a730-90a904140457\",\n  \"title\" : \"Export complete\",\n  \"message\" : \"The CSV you requested for export is complete and ready to {{link}}\",\n  \"level\" : \"SUCCESS\",\n  \"link\" : \"http://support.dashboard.backbase.com\",\n  \"origin\" : \"Audit\",\n  \"createdOn\" : \"2020-05-12T18:24:26.000+0000\"\n}, {\n  \"id\" : \"60adeeff-f841-4940-a4bc-d7d3d5850517\",\n  \"title\" : \"Export failed\",\n  \"message\" : \"The CSV you requested for export failed to complete\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Audit\",\n  \"createdOn\" : \"2020-05-10T08:09:27.000+0000\"\n}, {\n  \"id\" : \"788d6a1b-f2ab-4755-8444-acb9d677d3e8\",\n  \"title\" : \"Scheduled payment alert\",\n  \"message\" : \"Don't forget: 50,- will be withdrawn from the account on 2021-10-04\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-05-08T16:37:59.000+0000\"\n}, {\n  \"id\" : \"151b0953-2e09-4421-980a-cb4f5ab213e6\",\n  \"title\" : \"Updates\",\n  \"message\" : \"You are using an old version of application. Please update it as soon as possible. To get the new version click the {{link}}.\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Security\",\n  \"createdOn\" : \"2020-05-06T08:09:27.000+0000\"\n}, {\n  \"id\" : \"d4ba2576-fd6a-47f8-89fe-16a46d67b5b0\",\n  \"title\" : \"Account statement is ready\",\n  \"message\" : \"Your monthly account statement is ready to download\",\n  \"level\" : \"SUCCESS\",\n  \"origin\" : \"AccountStatement\",\n  \"createdOn\" : \"2020-05-04T08:09:27.000+0000\"\n}, {\n  \"id\" : \"d3c9379e-31e3-45ca-a9a7-2771c1c8b5ff\",\n  \"title\" : \"New message - Unassigned\",\n  \"message\" : \"From: J.Smith<br/>Subject: Credit<br/>Topic: Currency\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"MessageCenter\",\n  \"createdOn\" : \"2020-05-02T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"conversation-view\",\n    \"data\" : {\n      \"id\" : \"11-11-11\"\n    }\n  }\n}, {\n  \"id\" : \"d72f9307-df48-4111-b79e-21402cdf446b\",\n  \"title\" : \"Pocket Goal &#127881;\",\n  \"message\" : \"Well done! Don't forget to withdraw your money and create a new pocket for more saving goals\",\n  \"level\" : \"SUCCESS\",\n  \"origin\" : \"FinancialInsights\",\n  \"createdOn\" : \"2020-01-30T08:09:27.000+0000\",\n  \"routing\" : {\n    \"where-to\" : \"pocket-success-view\",\n    \"data\" : {\n      \"id\" : \"456789123\"\n    }\n  }\n}, {\n  \"id\" : \"d4ba2576-fd6a-47f8-89fe-16a46d67b5b0\",\n  \"title\" : \"Saving goal\",\n  \"message\" : \"Congrats, you successfully completed your saving goal for J.Smith\",\n  \"level\" : \"INFO\",\n  \"origin\" : \"PFM\",\n  \"createdOn\" : \"2020-01-29T08:09:27.000+0000\"\n}, {\n  \"id\" : \"d4ba2576-fd6a-47f8-89fe-16a46d67b5b0\",\n  \"title\" : \"Limit consumption warning\",\n  \"message\" : \"You are getting close to limits threshold. Please contact Administrator\",\n  \"level\" : \"WARNING\",\n  \"origin\" : \"Limits\",\n  \"createdOn\" : \"2020-01-028T08:09:27.000+0000\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/notifications/unread-count\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"unread\" : 10\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/notifications/{id}/read\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value\"\n  }\n}\n            },\n\n            {\n                status: 422,\n                body: {\n  \"message\" : \"Validation error(s) occurred during creation of the notification\",\n  \"errorFields\" : [ {\n    \"fieldName\" : \"message\",\n    \"message\" : \"Message must contain '{{link}}' placeholder to replace presented link. Remove link or insert placeholder into your message text\"\n  }, {\n    \"fieldName\" : \"validFrom\",\n    \"message\" : \"The notification should be valid from some time in future\"\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"value\" : {\n    \"$ref\" : \"#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value\"\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/notifications/read\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}