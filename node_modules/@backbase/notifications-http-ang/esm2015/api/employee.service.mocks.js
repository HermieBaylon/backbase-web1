import { createMocks } from '@backbase/foundation-ang/data-http';
export const EmployeeHttpServiceGetApprovableNotificationMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/employee/notifications/{managementId}/approvals",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "recipients": [{
                            "userId": "3154-611-851"
                        }],
                    "title": "Some title",
                    "message": "Everything works pretty well {{link}}",
                    "level": "INFO",
                    "targetGroup": "USER",
                    "link": "http://dashboard.support.backbase.com",
                    "validFrom": "2017-10-04T14:54:36.274+0000",
                    "expiresOn": "2018-10-04T14:54:36.274+0000",
                    "origin": "Transaction",
                    "routing": {
                        "where-to": "payments-view",
                        "data": {
                            "id": "12345"
                        }
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 500,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value"
                    }
                }
            },
        ]
    }]);
export const EmployeeHttpServicePostManageNotificationsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/employee/notifications",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "managementId": "15fafdcb-8eee-45ec-b10c-6ec6ef4874f3",
                    "approvalStatus": "PENDING",
                    "notificationIds": ["1dad5515-ec74-471b-ac93-1d5ef7133ea3", "6067499a-0b66-4d8c-9e0e-f98076e8c7f4", "dc9be1ae-9134-46d5-a2c0-162f011f4584"]
                }
            },
            {
                status: 400,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 422,
                body: {
                    "message": "Validation error(s) occurred during creation of the notification",
                    "errorFields": [{
                            "fieldName": "message",
                            "message": "Message must contain '{{link}}' placeholder to replace presented link. Remove link or insert placeholder into your message text"
                        }, {
                            "fieldName": "validFrom",
                            "message": "The notification should be valid from some time in future"
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value"
                    }
                }
            },
        ]
    }]);
export const EmployeeHttpServicePutApprovableNotificationMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/employee/notifications/{managementId}/approvals",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "approvalStatus": "APPROVED"
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 500,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value"
                    }
                }
            },
        ]
    }]);
export const EmployeeHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/employee/notifications/{managementId}/approvals",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "recipients": [{
                            "userId": "3154-611-851"
                        }],
                    "title": "Some title",
                    "message": "Everything works pretty well {{link}}",
                    "level": "INFO",
                    "targetGroup": "USER",
                    "link": "http://dashboard.support.backbase.com",
                    "validFrom": "2017-10-04T14:54:36.274+0000",
                    "expiresOn": "2018-10-04T14:54:36.274+0000",
                    "origin": "Transaction",
                    "routing": {
                        "where-to": "payments-view",
                        "data": {
                            "id": "12345"
                        }
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 500,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value"
                    }
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/employee/notifications",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "managementId": "15fafdcb-8eee-45ec-b10c-6ec6ef4874f3",
                    "approvalStatus": "PENDING",
                    "notificationIds": ["1dad5515-ec74-471b-ac93-1d5ef7133ea3", "6067499a-0b66-4d8c-9e0e-f98076e8c7f4", "dc9be1ae-9134-46d5-a2c0-162f011f4584"]
                }
            },
            {
                status: 400,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/400/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 422,
                body: {
                    "message": "Validation error(s) occurred during creation of the notification",
                    "errorFields": [{
                            "fieldName": "message",
                            "message": "Message must contain '{{link}}' placeholder to replace presented link. Remove link or insert placeholder into your message text"
                        }, {
                            "fieldName": "validFrom",
                            "message": "The notification should be valid from some time in future"
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value"
                    }
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/employee/notifications/{managementId}/approvals",
        method: "PUT",
        responses: [
            {
                status: 200,
                body: {
                    "approvalStatus": "APPROVED"
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/403/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/404/content/application~1json/example/value"
                    }
                }
            },
            {
                status: 500,
                body: {
                    "value": {
                        "$ref": "#/paths/~1client-api~1v2~1notifications/get/responses/500/content/application~1json/example/value"
                    }
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,