{"version":3,"file":"backbase-user-http-ang.umd.js","sources":["../../model/getIdentity.ts","../../model/getPendingApproval.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/identityManagement.service.ts","../../api/identityManagement.service.mocks.ts","../../api/userApprovals.service.ts","../../api/userApprovals.service.mocks.ts","../../api/userManagement.service.ts","../../api/userManagement.service.mocks.ts","../../api/userProfileManagement.service.ts","../../api/userProfileManagement.service.mocks.ts"],"sourcesContent":["/**\n * User Manager client\n * Create, retrieve, and manage users and their relationships with internal (DBS services) and external (CRM systems) resources. \n *\n * The version of the OpenAPI document: 2.4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface GetIdentity { \n    /**\n     * external Id (username) of the user.\n     */\n    [\"externalId\"]: string;\n    /**\n     * Internal (Backbase) ID of the Legal Entity the user belongs to.\n     */\n    [\"legalEntityInternalId\"]: string;\n    /**\n     * Full name of the user.\n     */\n    [\"fullName\"]: string;\n    /**\n     * User preferred language.\n     */\n    [\"preferredLanguage\"]?: string;\n    /**\n     * Email address of user.\n     */\n    [\"emailAddress\"]?: string;\n    /**\n     * Mobile number of user.\n     */\n    [\"mobileNumber\"]?: string;\n    /**\n     * The user\\'s account status.\n     */\n    [\"status\"]?: GetIdentity.StatusEnum;\n    /**\n     * Defines whether or not the user has verified their email address.\n     */\n    [\"emailVerified\"]?: boolean;\n    /**\n     * The date and time that the user was created.\n     */\n    [\"createdDate\"]?: string;\n    /**\n     * User will be required to perform these actions when they next log in. Allowable values are configurable in Identity.\n     */\n    [\"requiredActions\"]?: Array<string>;\n    [\"givenName\"]: string;\n    [\"familyName\"]: string;\n    /**\n     * Custom attributes of the user\n     */\n    [\"attributes\"]?: { [key: string]: string; };\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace GetIdentity {\n    export type StatusEnum = 'ENABLED' | 'DISABLED' | 'TEMPORARILY_LOCKED' | 'DORMANT' | 'INACTIVE' | 'ACCESS_REVOKED';\n    export const StatusEnum = {\n        ENABLED: 'ENABLED' as StatusEnum,\n        DISABLED: 'DISABLED' as StatusEnum,\n        TEMPORARILYLOCKED: 'TEMPORARILY_LOCKED' as StatusEnum,\n        DORMANT: 'DORMANT' as StatusEnum,\n        INACTIVE: 'INACTIVE' as StatusEnum,\n        ACCESSREVOKED: 'ACCESS_REVOKED' as StatusEnum\n    };\n}\n\n\n","/**\n * User Manager client\n * Create, retrieve, and manage users and their relationships with internal (DBS services) and external (CRM systems) resources. \n *\n * The version of the OpenAPI document: 2.4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface GetPendingApproval { \n    /**\n     * Internal approval ID\n     */\n    [\"approvalId\"]?: string;\n    /**\n     * The type of approval that is pending. That will block any further interaction of the same type.\n     */\n    [\"type\"]?: GetPendingApproval.TypeEnum;\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace GetPendingApproval {\n    export type TypeEnum = 'UNLOCK';\n    export const TypeEnum = {\n        UNLOCK: 'UNLOCK' as TypeEnum\n    };\n}\n\n\n","import { InjectionToken } from '@angular/core';\n\nexport const USER_BASE_PATH = new InjectionToken<string>('USER_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface UserConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class UserConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: UserConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link UserConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link UserConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module UserConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { UserConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class UserApiModule {\n    public static forRoot(configurationFactory: () => UserConfiguration): ModuleWithProviders<UserApiModule> {\n        return {\n            ngModule: UserApiModule,\n            providers: [ { provide: UserConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: UserApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: UserConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('UserApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * User Manager client\n * Create, retrieve, and manage users and their relationships with internal (DBS services) and external (CRM systems) resources. \n *\n * The version of the OpenAPI document: 2.4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ChangePasswordRequest } from '../model/models';\nimport { Conflict } from '../model/models';\nimport { CreateIdentityRequest } from '../model/models';\nimport { CreateIdentityResponse } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { GetIdentities } from '../model/models';\nimport { GetIdentity } from '../model/models';\nimport { GetIdentitySessions } from '../model/models';\nimport { GetPendingApproval } from '../model/models';\nimport { IdentityLogoutRequest } from '../model/models';\nimport { IdentityRequiredActionsRequest } from '../model/models';\nimport { IdentityStatusApprovalPending } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { RevokeIdentityAccessRequest } from '../model/models';\nimport { UpdateIdentityRequest } from '../model/models';\nimport { UpdateIdentityStatusRequest } from '../model/models';\n\nimport { USER_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { UserConfiguration }                                     from '../configuration';\n\n\nexport interface ChangePasswordRequestParams {\n    [\"changePasswordRequest\"]: ChangePasswordRequest;\n}\n\nexport interface CreateIdentityRequestParams {\n    [\"createIdentityRequest\"]: CreateIdentityRequest;\n}\n\nexport interface GetIdentitiesRequestParams {\n    /** External unique identifier of the resource. */\n    [\"externalId\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n    /** Filter the results by the identity legal entity\\&#39;s name.  */\n    [\"legalEntityName\"]?: string;\n}\n\nexport interface GetIdentityRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetIdentityPendingApprovalsRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetSessionsRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface LogoutSessionsRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"identityLogoutRequest\"]: IdentityLogoutRequest;\n}\n\nexport interface RevokeIdentityAccessRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"revokeIdentityAccessRequest\"]: RevokeIdentityAccessRequest;\n}\n\nexport interface SendRequiredActionsRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"identityRequiredActionsRequest\"]: IdentityRequiredActionsRequest;\n}\n\nexport interface UpdateIdentityRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"updateIdentityRequest\"]: UpdateIdentityRequest;\n}\n\nexport interface UpdateIdentityStatusRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"updateIdentityStatusRequest\"]: UpdateIdentityStatusRequest;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdentityManagementService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new UserConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(USER_BASE_PATH) basePath: string, @Optional() configuration: UserConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Change Password\n     * Change the authenticated user\\&#39;s password, provided the given password is correct and new password satisfies the password policy. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changePassword(requestParameters: ChangePasswordRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Change Password\n     * Change the authenticated user\\&#39;s password, provided the given password is correct and new password satisfies the password policy. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changePassword(requestParameters: ChangePasswordRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Change Password\n     * Change the authenticated user\\&#39;s password, provided the given password is correct and new password satisfies the password policy. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changePassword(requestParameters: ChangePasswordRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Change Password\n     * Change the authenticated user\\&#39;s password, provided the given password is correct and new password satisfies the password policy. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public changePassword(requestParameters: ChangePasswordRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _changePasswordRequest = requestParameters[\"changePasswordRequest\"];\n        if (_changePasswordRequest === null || _changePasswordRequest === undefined) {\n            throw new Error('Required parameter changePasswordRequest was null or undefined when calling changePassword.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/identities/password`,\n            _changePasswordRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public changePasswordUrl(requestParameters: ChangePasswordRequestParams): string {\n        const _changePasswordRequest = requestParameters[\"changePasswordRequest\"];\n        if (_changePasswordRequest === null || _changePasswordRequest === undefined) {\n            throw new Error('Required parameter changePasswordRequest was null or undefined when calling changePassword.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/password`;\n    }\n\n    /**\n     * Create user identity\n     * Creates a new user in DBS that belongs to the given legal entity and corresponding user identity in the Backbase-Identity service.  If the full name property is missing from the request the family and given name properties will be required and they will be concatenated to form the Full Name in DBS. If both Full Name and Given/Family name are passed the latter will be used.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createIdentity(requestParameters: CreateIdentityRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CreateIdentityResponse>;\n    /**\n     * Create user identity\n     * Creates a new user in DBS that belongs to the given legal entity and corresponding user identity in the Backbase-Identity service.  If the full name property is missing from the request the family and given name properties will be required and they will be concatenated to form the Full Name in DBS. If both Full Name and Given/Family name are passed the latter will be used.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createIdentity(requestParameters: CreateIdentityRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CreateIdentityResponse>>;\n    /**\n     * Create user identity\n     * Creates a new user in DBS that belongs to the given legal entity and corresponding user identity in the Backbase-Identity service.  If the full name property is missing from the request the family and given name properties will be required and they will be concatenated to form the Full Name in DBS. If both Full Name and Given/Family name are passed the latter will be used.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createIdentity(requestParameters: CreateIdentityRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CreateIdentityResponse>>;\n    /**\n     * Create user identity\n     * Creates a new user in DBS that belongs to the given legal entity and corresponding user identity in the Backbase-Identity service.  If the full name property is missing from the request the family and given name properties will be required and they will be concatenated to form the Full Name in DBS. If both Full Name and Given/Family name are passed the latter will be used.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createIdentity(requestParameters: CreateIdentityRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _createIdentityRequest = requestParameters[\"createIdentityRequest\"];\n        if (_createIdentityRequest === null || _createIdentityRequest === undefined) {\n            throw new Error('Required parameter createIdentityRequest was null or undefined when calling createIdentity.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<CreateIdentityResponse>(`${this.configuration.basePath}/client-api/v2/users/identities`,\n            _createIdentityRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public createIdentityUrl(requestParameters: CreateIdentityRequestParams): string {\n        const _createIdentityRequest = requestParameters[\"createIdentityRequest\"];\n        if (_createIdentityRequest === null || _createIdentityRequest === undefined) {\n            throw new Error('Required parameter createIdentityRequest was null or undefined when calling createIdentity.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities`;\n    }\n\n    /**\n     * List User identities\n     * Retrieve a list of user identities with the search criteria passed as query parameters: * externalId: User External ID used as a search term.  This endpoint results are pageable and admit also the following query parameters: * from: Page Number. Skip over pages of elements by specifying a start value for the query. * size: Number of records that will be shown each request.  As an example, a request using the following query parameters:  &#x60;&#x60;&#x60;from&#x3D;2&amp;size&#x3D;10&#x60;&#x60;&#x60;  will show the elements 20th to 30th (non inclusive). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentities(requestParameters: GetIdentitiesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetIdentities>;\n    /**\n     * List User identities\n     * Retrieve a list of user identities with the search criteria passed as query parameters: * externalId: User External ID used as a search term.  This endpoint results are pageable and admit also the following query parameters: * from: Page Number. Skip over pages of elements by specifying a start value for the query. * size: Number of records that will be shown each request.  As an example, a request using the following query parameters:  &#x60;&#x60;&#x60;from&#x3D;2&amp;size&#x3D;10&#x60;&#x60;&#x60;  will show the elements 20th to 30th (non inclusive). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentities(requestParameters: GetIdentitiesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetIdentities>>;\n    /**\n     * List User identities\n     * Retrieve a list of user identities with the search criteria passed as query parameters: * externalId: User External ID used as a search term.  This endpoint results are pageable and admit also the following query parameters: * from: Page Number. Skip over pages of elements by specifying a start value for the query. * size: Number of records that will be shown each request.  As an example, a request using the following query parameters:  &#x60;&#x60;&#x60;from&#x3D;2&amp;size&#x3D;10&#x60;&#x60;&#x60;  will show the elements 20th to 30th (non inclusive). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentities(requestParameters: GetIdentitiesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetIdentities>>;\n    /**\n     * List User identities\n     * Retrieve a list of user identities with the search criteria passed as query parameters: * externalId: User External ID used as a search term.  This endpoint results are pageable and admit also the following query parameters: * from: Page Number. Skip over pages of elements by specifying a start value for the query. * size: Number of records that will be shown each request.  As an example, a request using the following query parameters:  &#x60;&#x60;&#x60;from&#x3D;2&amp;size&#x3D;10&#x60;&#x60;&#x60;  will show the elements 20th to 30th (non inclusive). \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentities(requestParameters: GetIdentitiesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalId = requestParameters[\"externalId\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _legalEntityName = requestParameters[\"legalEntityName\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_externalId !== undefined && _externalId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_externalId, 'externalId');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_legalEntityName !== undefined && _legalEntityName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_legalEntityName, 'legalEntityName');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetIdentities>(`${this.configuration.basePath}/client-api/v2/users/identities`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getIdentitiesUrl(requestParameters: GetIdentitiesRequestParams): string {\n        const _externalId = requestParameters[\"externalId\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _legalEntityName = requestParameters[\"legalEntityName\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_externalId !== undefined && _externalId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_externalId, 'externalId');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_legalEntityName !== undefined && _legalEntityName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_legalEntityName, 'legalEntityName');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/users/identities${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * User identity details\n     * Retrieves a User Identity by its internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentity(requestParameters: GetIdentityRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetIdentity>;\n    /**\n     * User identity details\n     * Retrieves a User Identity by its internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentity(requestParameters: GetIdentityRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetIdentity>>;\n    /**\n     * User identity details\n     * Retrieves a User Identity by its internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentity(requestParameters: GetIdentityRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetIdentity>>;\n    /**\n     * User identity details\n     * Retrieves a User Identity by its internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentity(requestParameters: GetIdentityRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getIdentity.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetIdentity>(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getIdentityUrl(requestParameters: GetIdentityRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getIdentity.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`;\n    }\n\n    /**\n     * Retrieve approvals pending for an Identity\n     * Return all the pending approvals for a user defined by their Internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentityPendingApprovals(requestParameters: GetIdentityPendingApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<GetPendingApproval>>;\n    /**\n     * Retrieve approvals pending for an Identity\n     * Return all the pending approvals for a user defined by their Internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentityPendingApprovals(requestParameters: GetIdentityPendingApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<GetPendingApproval>>>;\n    /**\n     * Retrieve approvals pending for an Identity\n     * Return all the pending approvals for a user defined by their Internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentityPendingApprovals(requestParameters: GetIdentityPendingApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<GetPendingApproval>>>;\n    /**\n     * Retrieve approvals pending for an Identity\n     * Return all the pending approvals for a user defined by their Internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdentityPendingApprovals(requestParameters: GetIdentityPendingApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getIdentityPendingApprovals.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<GetPendingApproval>>(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/approvals`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getIdentityPendingApprovalsUrl(requestParameters: GetIdentityPendingApprovalsRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getIdentityPendingApprovals.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/approvals`;\n    }\n\n    /**\n     * Get User Identity sessions\n     * Retrieves the sessions associated with an identity.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSessions(requestParameters: GetSessionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetIdentitySessions>;\n    /**\n     * Get User Identity sessions\n     * Retrieves the sessions associated with an identity.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSessions(requestParameters: GetSessionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetIdentitySessions>>;\n    /**\n     * Get User Identity sessions\n     * Retrieves the sessions associated with an identity.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSessions(requestParameters: GetSessionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetIdentitySessions>>;\n    /**\n     * Get User Identity sessions\n     * Retrieves the sessions associated with an identity.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSessions(requestParameters: GetSessionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getSessions.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetIdentitySessions>(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getSessionsUrl(requestParameters: GetSessionsRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getSessions.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions`;\n    }\n\n    /**\n     * Logout Identity sessions\n     * Logs out either a list of sessions for a user, or all sessions for an individual user if an empty sessionIds array is set in the request.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public logoutSessions(requestParameters: LogoutSessionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Logout Identity sessions\n     * Logs out either a list of sessions for a user, or all sessions for an individual user if an empty sessionIds array is set in the request.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public logoutSessions(requestParameters: LogoutSessionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Logout Identity sessions\n     * Logs out either a list of sessions for a user, or all sessions for an individual user if an empty sessionIds array is set in the request.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public logoutSessions(requestParameters: LogoutSessionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Logout Identity sessions\n     * Logs out either a list of sessions for a user, or all sessions for an individual user if an empty sessionIds array is set in the request.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public logoutSessions(requestParameters: LogoutSessionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling logoutSessions.');\n        }\n        const _identityLogoutRequest = requestParameters[\"identityLogoutRequest\"];\n        if (_identityLogoutRequest === null || _identityLogoutRequest === undefined) {\n            throw new Error('Required parameter identityLogoutRequest was null or undefined when calling logoutSessions.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions/logout`,\n            _identityLogoutRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public logoutSessionsUrl(requestParameters: LogoutSessionsRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling logoutSessions.');\n        }\n        const _identityLogoutRequest = requestParameters[\"identityLogoutRequest\"];\n        if (_identityLogoutRequest === null || _identityLogoutRequest === undefined) {\n            throw new Error('Required parameter identityLogoutRequest was null or undefined when calling logoutSessions.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/sessions/logout`;\n    }\n\n    /**\n     * Revoke Identity access\n     * This endpoint sets the user\\&#39;s status to Access Revoked and disables the user, effectively making them unable to access Backbase services. A user with status Access Revoked cannot be unlocked via other endpoints. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeIdentityAccess(requestParameters: RevokeIdentityAccessRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Revoke Identity access\n     * This endpoint sets the user\\&#39;s status to Access Revoked and disables the user, effectively making them unable to access Backbase services. A user with status Access Revoked cannot be unlocked via other endpoints. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeIdentityAccess(requestParameters: RevokeIdentityAccessRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Revoke Identity access\n     * This endpoint sets the user\\&#39;s status to Access Revoked and disables the user, effectively making them unable to access Backbase services. A user with status Access Revoked cannot be unlocked via other endpoints. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeIdentityAccess(requestParameters: RevokeIdentityAccessRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Revoke Identity access\n     * This endpoint sets the user\\&#39;s status to Access Revoked and disables the user, effectively making them unable to access Backbase services. A user with status Access Revoked cannot be unlocked via other endpoints. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeIdentityAccess(requestParameters: RevokeIdentityAccessRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling revokeIdentityAccess.');\n        }\n        const _revokeIdentityAccessRequest = requestParameters[\"revokeIdentityAccessRequest\"];\n        if (_revokeIdentityAccessRequest === null || _revokeIdentityAccessRequest === undefined) {\n            throw new Error('Required parameter revokeIdentityAccessRequest was null or undefined when calling revokeIdentityAccess.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/access`,\n            _revokeIdentityAccessRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public revokeIdentityAccessUrl(requestParameters: RevokeIdentityAccessRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling revokeIdentityAccess.');\n        }\n        const _revokeIdentityAccessRequest = requestParameters[\"revokeIdentityAccessRequest\"];\n        if (_revokeIdentityAccessRequest === null || _revokeIdentityAccessRequest === undefined) {\n            throw new Error('Required parameter revokeIdentityAccessRequest was null or undefined when calling revokeIdentityAccess.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/access`;\n    }\n\n    /**\n     * Send email with required actions\n     * Requests the identity system to send an email to a user with a link to perform the given actions.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendRequiredActions(requestParameters: SendRequiredActionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Send email with required actions\n     * Requests the identity system to send an email to a user with a link to perform the given actions.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendRequiredActions(requestParameters: SendRequiredActionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Send email with required actions\n     * Requests the identity system to send an email to a user with a link to perform the given actions.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendRequiredActions(requestParameters: SendRequiredActionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Send email with required actions\n     * Requests the identity system to send an email to a user with a link to perform the given actions.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public sendRequiredActions(requestParameters: SendRequiredActionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling sendRequiredActions.');\n        }\n        const _identityRequiredActionsRequest = requestParameters[\"identityRequiredActionsRequest\"];\n        if (_identityRequiredActionsRequest === null || _identityRequiredActionsRequest === undefined) {\n            throw new Error('Required parameter identityRequiredActionsRequest was null or undefined when calling sendRequiredActions.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/actions`,\n            _identityRequiredActionsRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public sendRequiredActionsUrl(requestParameters: SendRequiredActionsRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling sendRequiredActions.');\n        }\n        const _identityRequiredActionsRequest = requestParameters[\"identityRequiredActionsRequest\"];\n        if (_identityRequiredActionsRequest === null || _identityRequiredActionsRequest === undefined) {\n            throw new Error('Required parameter identityRequiredActionsRequest was null or undefined when calling sendRequiredActions.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/actions`;\n    }\n\n    /**\n     * Update user identity\n     * Updates a user in DBS and the identity system.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateIdentity(requestParameters: UpdateIdentityRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Update user identity\n     * Updates a user in DBS and the identity system.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateIdentity(requestParameters: UpdateIdentityRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Update user identity\n     * Updates a user in DBS and the identity system.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateIdentity(requestParameters: UpdateIdentityRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Update user identity\n     * Updates a user in DBS and the identity system.  Note that to use this endpoint, the feature flag \\&quot;backbase.users.identity-endpoints-enabled\\&quot; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateIdentity(requestParameters: UpdateIdentityRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateIdentity.');\n        }\n        const _updateIdentityRequest = requestParameters[\"updateIdentityRequest\"];\n        if (_updateIdentityRequest === null || _updateIdentityRequest === undefined) {\n            throw new Error('Required parameter updateIdentityRequest was null or undefined when calling updateIdentity.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`,\n            _updateIdentityRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateIdentityUrl(requestParameters: UpdateIdentityRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateIdentity.');\n        }\n        const _updateIdentityRequest = requestParameters[\"updateIdentityRequest\"];\n        if (_updateIdentityRequest === null || _updateIdentityRequest === undefined) {\n            throw new Error('Required parameter updateIdentityRequest was null or undefined when calling updateIdentity.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}`;\n    }\n\n    /**\n     * Update Identity status\n     * Updates the status of a user defined by their internal ID.  This endpoint requires different assigned &#x60;Access Control&#x60; business functions depending on the context of the request: * To change an identity status from Unlocked to Locked you will need the &#x60;Lock User&#x60; function assigned. * To change an identity status from Locked to Unlocked you will need the &#x60;Unlock User&#x60; function assigned.  Also this endpoint will behave differently when &#x60;approvals&#x60; is enabled and an approval policy is set up for the &#x60;Lock&#x60; or &#x60;Unlock&#x60; operations.  When approvals is enabled and a valid approval policy is set up, this operation will return a status code of &#x60;202&#x60; and the pending approval ID in the body response.  Note that to use this endpoint, the feature flag &#x60;backbase.users.identity-endpoints-enabled&#x60; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateIdentityStatus(requestParameters: UpdateIdentityStatusRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<IdentityStatusApprovalPending>;\n    /**\n     * Update Identity status\n     * Updates the status of a user defined by their internal ID.  This endpoint requires different assigned &#x60;Access Control&#x60; business functions depending on the context of the request: * To change an identity status from Unlocked to Locked you will need the &#x60;Lock User&#x60; function assigned. * To change an identity status from Locked to Unlocked you will need the &#x60;Unlock User&#x60; function assigned.  Also this endpoint will behave differently when &#x60;approvals&#x60; is enabled and an approval policy is set up for the &#x60;Lock&#x60; or &#x60;Unlock&#x60; operations.  When approvals is enabled and a valid approval policy is set up, this operation will return a status code of &#x60;202&#x60; and the pending approval ID in the body response.  Note that to use this endpoint, the feature flag &#x60;backbase.users.identity-endpoints-enabled&#x60; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateIdentityStatus(requestParameters: UpdateIdentityStatusRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<IdentityStatusApprovalPending>>;\n    /**\n     * Update Identity status\n     * Updates the status of a user defined by their internal ID.  This endpoint requires different assigned &#x60;Access Control&#x60; business functions depending on the context of the request: * To change an identity status from Unlocked to Locked you will need the &#x60;Lock User&#x60; function assigned. * To change an identity status from Locked to Unlocked you will need the &#x60;Unlock User&#x60; function assigned.  Also this endpoint will behave differently when &#x60;approvals&#x60; is enabled and an approval policy is set up for the &#x60;Lock&#x60; or &#x60;Unlock&#x60; operations.  When approvals is enabled and a valid approval policy is set up, this operation will return a status code of &#x60;202&#x60; and the pending approval ID in the body response.  Note that to use this endpoint, the feature flag &#x60;backbase.users.identity-endpoints-enabled&#x60; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateIdentityStatus(requestParameters: UpdateIdentityStatusRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<IdentityStatusApprovalPending>>;\n    /**\n     * Update Identity status\n     * Updates the status of a user defined by their internal ID.  This endpoint requires different assigned &#x60;Access Control&#x60; business functions depending on the context of the request: * To change an identity status from Unlocked to Locked you will need the &#x60;Lock User&#x60; function assigned. * To change an identity status from Locked to Unlocked you will need the &#x60;Unlock User&#x60; function assigned.  Also this endpoint will behave differently when &#x60;approvals&#x60; is enabled and an approval policy is set up for the &#x60;Lock&#x60; or &#x60;Unlock&#x60; operations.  When approvals is enabled and a valid approval policy is set up, this operation will return a status code of &#x60;202&#x60; and the pending approval ID in the body response.  Note that to use this endpoint, the feature flag &#x60;backbase.users.identity-endpoints-enabled&#x60; must be set to true. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateIdentityStatus(requestParameters: UpdateIdentityStatusRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateIdentityStatus.');\n        }\n        const _updateIdentityStatusRequest = requestParameters[\"updateIdentityStatusRequest\"];\n        if (_updateIdentityStatusRequest === null || _updateIdentityStatusRequest === undefined) {\n            throw new Error('Required parameter updateIdentityStatusRequest was null or undefined when calling updateIdentityStatus.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<IdentityStatusApprovalPending>(`${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/status`,\n            _updateIdentityStatusRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateIdentityStatusUrl(requestParameters: UpdateIdentityStatusRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateIdentityStatus.');\n        }\n        const _updateIdentityStatusRequest = requestParameters[\"updateIdentityStatusRequest\"];\n        if (_updateIdentityStatusRequest === null || _updateIdentityStatusRequest === undefined) {\n            throw new Error('Required parameter updateIdentityStatusRequest was null or undefined when calling updateIdentityStatus.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/identities/${encodeURIComponent(String(_internalId))}/status`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/users/identities/password URL pattern\n*/\nexport const IdentityManagementServiceChangePasswordMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/password\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 201,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities URL pattern\n*/\nexport const IdentityManagementServiceCreateIdentityMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"internalId\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"externalId\" : \"admin\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 409,\n                    body: {\n  \"message\" : \"Conflict error\",\n  \"errors\" : [ {\n    \"message\" : \"The request could not be completed due to a conflict with the current state of the resource.\",\n    \"key\" : \"transactions.api.billingstatus.transaction\",\n    \"context\" : {\n      \"billingStatus\" : \"BILLED\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities URL pattern\n*/\nexport const IdentityManagementServiceGetIdentitiesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"identities\" : [ {\n    \"id\" : \"eadaca0b-0b9d-4244-8922-1dead62d00e4\",\n    \"externalId\" : \"U0000010\",\n    \"legalEntityId\" : \"48b711b8-5adb-4826-a9cc-141b386f8930\",\n    \"fullName\" : \"Hasnain Boyd\",\n    \"legalEntityName\" : \"Backbase\"\n  }, {\n    \"id\" : \"177296ae-3ebb-42f4-80fe-2d79d81cc469\",\n    \"externalId\" : \"U0000011\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Caroline Smyth\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"66569096-df06-46b1-9dbb-3e0e73912e5d\",\n    \"externalId\" : \"U0000012\",\n    \"legalEntityId\" : \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n    \"fullName\" : \"Amin Fowler\",\n    \"legalEntityName\" : \"Backbase Amsterdam\"\n  }, {\n    \"id\" : \"1117a81d-86e2-4a5a-9f79-eafbaa2bcddd\",\n    \"externalId\" : \"U0000013\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Amelia Slater\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"55e27e95-216c-40fd-be2e-dd5a100ddcfc\",\n    \"externalId\" : \"U0000014\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Bradlee Lister\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"59721bc0-da2d-42f8-9b14-a391d52e039e\",\n    \"externalId\" : \"U0000015\",\n    \"legalEntityId\" : \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n    \"fullName\" : \"Khalil Freeman\",\n    \"legalEntityName\" : \"Backbase Amsterdam\"\n  }, {\n    \"id\" : \"d5ff6ff6-7d39-430c-a787-75321d2f986e\",\n    \"externalId\" : \"U0000016\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Safwan Archer\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"5e41de27-cc3c-4277-9e4f-e9fb6f1da067\",\n    \"externalId\" : \"U0000017\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Miranda Goldsmith\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"34be7792-d4a6-44de-bef7-1d051a33dd08\",\n    \"externalId\" : \"U0000018\",\n    \"legalEntityId\" : \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n    \"fullName\" : \"Willard Pham\",\n    \"legalEntityName\" : \"Backbase Amsterdam\"\n  }, {\n    \"id\" : \"721b5973-543a-4a36-b739-352259486ac5\",\n    \"externalId\" : \"U0000019\",\n    \"legalEntityId\" : \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n    \"fullName\" : \"Braiden Calhoun\",\n    \"legalEntityName\" : \"Backbase Amsterdam\"\n  } ],\n  \"totalElements\" : 10\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities/{internalId} URL pattern\n*/\nexport const IdentityManagementServiceGetIdentityMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"externalId\" : \"admin\",\n  \"legalEntityInternalId\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"fullName\" : \"Mila Example\",\n  \"preferredLanguage\" : \"EN\",\n  \"emailAddress\" : \"mila@example.com\",\n  \"mobileNumber\" : \"07700 900000\",\n  \"status\" : \"ENABLED\",\n  \"emailVerified\" : true,\n  \"createdDate\" : \"2018-02-04T06:35:41.000Z\",\n  \"requiredActions\" : [ \"VERIFY_EMAIL\", \"UPDATE_PASSWORD\", \"ACCEPT_TERMS_AND_CONDITIONS\" ],\n  \"givenName\" : \"Mila\",\n  \"familyName\" : \"Example\",\n  \"attributes\" : {\n    \"bank-id\" : \"BANK0001\",\n    \"core-id\" : \"milaexample\"\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities/{internalId}/approvals URL pattern\n*/\nexport const IdentityManagementServiceGetIdentityPendingApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/approvals\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"approvalId\" : \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\",\n  \"type\" : \"UNLOCK\"\n} ]\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities/{internalId}/sessions URL pattern\n*/\nexport const IdentityManagementServiceGetSessionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"sessions\" : [ {\n    \"id\" : \"9136e697-6c2f-49f6-9ef7-c67c89e8b825\",\n    \"ipAddress\" : \"198.51.100.103\",\n    \"start\" : \"2018-07-26T15:21:23.000Z\",\n    \"lastAccess\" : \"2018-07-26T15:21:23.000Z\",\n    \"client\" : \"web\"\n  }, {\n    \"id\" : \"d04ba3e2-9dd5-484d-b756-e6a86562743a\",\n    \"ipAddress\" : \"198.51.100.212\",\n    \"start\" : \"2018-07-26T15:23:33.000Z\",\n    \"lastAccess\" : \"2018-07-26T15:24:12.000Z\",\n    \"client\" : \"mobile\"\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities/{internalId}/sessions/logout URL pattern\n*/\nexport const IdentityManagementServiceLogoutSessionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions/logout\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities/{internalId}/access URL pattern\n*/\nexport const IdentityManagementServiceRevokeIdentityAccessMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/access\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities/{internalId}/actions URL pattern\n*/\nexport const IdentityManagementServiceSendRequiredActionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/actions\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities/{internalId} URL pattern\n*/\nexport const IdentityManagementServiceUpdateIdentityMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/identities/{internalId}/status URL pattern\n*/\nexport const IdentityManagementServiceUpdateIdentityStatusMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/status\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 202,\n                    body: {\n  \"approvalId\" : \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\"\n}\n                },\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const IdentityManagementServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/users/identities/password\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 201,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"internalId\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"externalId\" : \"admin\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 409,\n                body: {\n  \"message\" : \"Conflict error\",\n  \"errors\" : [ {\n    \"message\" : \"The request could not be completed due to a conflict with the current state of the resource.\",\n    \"key\" : \"transactions.api.billingstatus.transaction\",\n    \"context\" : {\n      \"billingStatus\" : \"BILLED\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"identities\" : [ {\n    \"id\" : \"eadaca0b-0b9d-4244-8922-1dead62d00e4\",\n    \"externalId\" : \"U0000010\",\n    \"legalEntityId\" : \"48b711b8-5adb-4826-a9cc-141b386f8930\",\n    \"fullName\" : \"Hasnain Boyd\",\n    \"legalEntityName\" : \"Backbase\"\n  }, {\n    \"id\" : \"177296ae-3ebb-42f4-80fe-2d79d81cc469\",\n    \"externalId\" : \"U0000011\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Caroline Smyth\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"66569096-df06-46b1-9dbb-3e0e73912e5d\",\n    \"externalId\" : \"U0000012\",\n    \"legalEntityId\" : \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n    \"fullName\" : \"Amin Fowler\",\n    \"legalEntityName\" : \"Backbase Amsterdam\"\n  }, {\n    \"id\" : \"1117a81d-86e2-4a5a-9f79-eafbaa2bcddd\",\n    \"externalId\" : \"U0000013\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Amelia Slater\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"55e27e95-216c-40fd-be2e-dd5a100ddcfc\",\n    \"externalId\" : \"U0000014\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Bradlee Lister\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"59721bc0-da2d-42f8-9b14-a391d52e039e\",\n    \"externalId\" : \"U0000015\",\n    \"legalEntityId\" : \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n    \"fullName\" : \"Khalil Freeman\",\n    \"legalEntityName\" : \"Backbase Amsterdam\"\n  }, {\n    \"id\" : \"d5ff6ff6-7d39-430c-a787-75321d2f986e\",\n    \"externalId\" : \"U0000016\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Safwan Archer\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"5e41de27-cc3c-4277-9e4f-e9fb6f1da067\",\n    \"externalId\" : \"U0000017\",\n    \"legalEntityId\" : \"f5aacf55-44bb-4393-9d21-152d14fae6b9\",\n    \"fullName\" : \"Miranda Goldsmith\",\n    \"legalEntityName\" : \"Backbase Cardiff\"\n  }, {\n    \"id\" : \"34be7792-d4a6-44de-bef7-1d051a33dd08\",\n    \"externalId\" : \"U0000018\",\n    \"legalEntityId\" : \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n    \"fullName\" : \"Willard Pham\",\n    \"legalEntityName\" : \"Backbase Amsterdam\"\n  }, {\n    \"id\" : \"721b5973-543a-4a36-b739-352259486ac5\",\n    \"externalId\" : \"U0000019\",\n    \"legalEntityId\" : \"3a591a63-9ddf-4ad4-ab4b-40eb151757a4\",\n    \"fullName\" : \"Braiden Calhoun\",\n    \"legalEntityName\" : \"Backbase Amsterdam\"\n  } ],\n  \"totalElements\" : 10\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"externalId\" : \"admin\",\n  \"legalEntityInternalId\" : \"0955e686-d31e-4216-b3dd-5d66161d536d\",\n  \"fullName\" : \"Mila Example\",\n  \"preferredLanguage\" : \"EN\",\n  \"emailAddress\" : \"mila@example.com\",\n  \"mobileNumber\" : \"07700 900000\",\n  \"status\" : \"ENABLED\",\n  \"emailVerified\" : true,\n  \"createdDate\" : \"2018-02-04T06:35:41.000Z\",\n  \"requiredActions\" : [ \"VERIFY_EMAIL\", \"UPDATE_PASSWORD\", \"ACCEPT_TERMS_AND_CONDITIONS\" ],\n  \"givenName\" : \"Mila\",\n  \"familyName\" : \"Example\",\n  \"attributes\" : {\n    \"bank-id\" : \"BANK0001\",\n    \"core-id\" : \"milaexample\"\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/approvals\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"approvalId\" : \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\",\n  \"type\" : \"UNLOCK\"\n} ]\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"sessions\" : [ {\n    \"id\" : \"9136e697-6c2f-49f6-9ef7-c67c89e8b825\",\n    \"ipAddress\" : \"198.51.100.103\",\n    \"start\" : \"2018-07-26T15:21:23.000Z\",\n    \"lastAccess\" : \"2018-07-26T15:21:23.000Z\",\n    \"client\" : \"web\"\n  }, {\n    \"id\" : \"d04ba3e2-9dd5-484d-b756-e6a86562743a\",\n    \"ipAddress\" : \"198.51.100.212\",\n    \"start\" : \"2018-07-26T15:23:33.000Z\",\n    \"lastAccess\" : \"2018-07-26T15:24:12.000Z\",\n    \"client\" : \"mobile\"\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/sessions/logout\",\n        method: \"POST\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/access\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/actions\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/identities/{internalId}/status\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 202,\n                body: {\n  \"approvalId\" : \"37507cbc-3e81-4cc3-a0f6-78ed53d2db22\"\n}\n            },\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * User Manager client\n * Create, retrieve, and manage users and their relationships with internal (DBS services) and external (CRM systems) resources. \n *\n * The version of the OpenAPI document: 2.4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ForbiddenError } from '../model/models';\nimport { GetApprovalUserDetails } from '../model/models';\nimport { NotFoundError } from '../model/models';\n\nimport { USER_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { UserConfiguration }                                     from '../configuration';\n\n\nexport interface ApproveApprovalRequestParams {\n    /** Unique Identifier of the Approval entity */\n    [\"approvalId\"]: string;\n}\n\nexport interface GetApprovalDetailsRequestParams {\n    /** Unique Identifier of the Approval entity */\n    [\"approvalId\"]: string;\n}\n\nexport interface RejectApprovalRequestParams {\n    /** Unique Identifier of the Approval entity */\n    [\"approvalId\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserApprovalsService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new UserConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(USER_BASE_PATH) basePath: string, @Optional() configuration: UserConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Approve a Pending Request\n     * It will add an approval to the pending request defined by its Internal ID. If the Approval Policy is reached after this operation is completed it will execute the pending operation. The operations currently supported are:  * Unlock User In order to be allowed to approve a pending request the requester will need the following permissions     resource: Identities     function: Unlock User     privilege: approve \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveApproval(requestParameters: ApproveApprovalRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Approve a Pending Request\n     * It will add an approval to the pending request defined by its Internal ID. If the Approval Policy is reached after this operation is completed it will execute the pending operation. The operations currently supported are:  * Unlock User In order to be allowed to approve a pending request the requester will need the following permissions     resource: Identities     function: Unlock User     privilege: approve \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveApproval(requestParameters: ApproveApprovalRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Approve a Pending Request\n     * It will add an approval to the pending request defined by its Internal ID. If the Approval Policy is reached after this operation is completed it will execute the pending operation. The operations currently supported are:  * Unlock User In order to be allowed to approve a pending request the requester will need the following permissions     resource: Identities     function: Unlock User     privilege: approve \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveApproval(requestParameters: ApproveApprovalRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Approve a Pending Request\n     * It will add an approval to the pending request defined by its Internal ID. If the Approval Policy is reached after this operation is completed it will execute the pending operation. The operations currently supported are:  * Unlock User In order to be allowed to approve a pending request the requester will need the following permissions     resource: Identities     function: Unlock User     privilege: approve \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveApproval(requestParameters: ApproveApprovalRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling approveApproval.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/approve`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public approveApprovalUrl(requestParameters: ApproveApprovalRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling approveApproval.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/approve`;\n    }\n\n    /**\n     * Retrieve pending User approval details\n     * It returns the capability-specific extra details to be rendered in the Approval Logs Detail modal. * Changelog Items * User Details \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalDetails(requestParameters: GetApprovalDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetApprovalUserDetails>;\n    /**\n     * Retrieve pending User approval details\n     * It returns the capability-specific extra details to be rendered in the Approval Logs Detail modal. * Changelog Items * User Details \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalDetails(requestParameters: GetApprovalDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetApprovalUserDetails>>;\n    /**\n     * Retrieve pending User approval details\n     * It returns the capability-specific extra details to be rendered in the Approval Logs Detail modal. * Changelog Items * User Details \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalDetails(requestParameters: GetApprovalDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetApprovalUserDetails>>;\n    /**\n     * Retrieve pending User approval details\n     * It returns the capability-specific extra details to be rendered in the Approval Logs Detail modal. * Changelog Items * User Details \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalDetails(requestParameters: GetApprovalDetailsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovalDetails.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetApprovalUserDetails>(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/details`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getApprovalDetailsUrl(requestParameters: GetApprovalDetailsRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling getApprovalDetails.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/details`;\n    }\n\n    /**\n     * Reject a Pending Request\n     * It will reject and then delete the pending request defined by its Internal ID. The operations currently supported are: * Unlock User In order to be allowed to reject a pending request the requester will need the following permissions      resource: Identities     function: Unlock User     privilege: approve \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rejectApproval(requestParameters: RejectApprovalRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Reject a Pending Request\n     * It will reject and then delete the pending request defined by its Internal ID. The operations currently supported are: * Unlock User In order to be allowed to reject a pending request the requester will need the following permissions      resource: Identities     function: Unlock User     privilege: approve \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rejectApproval(requestParameters: RejectApprovalRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Reject a Pending Request\n     * It will reject and then delete the pending request defined by its Internal ID. The operations currently supported are: * Unlock User In order to be allowed to reject a pending request the requester will need the following permissions      resource: Identities     function: Unlock User     privilege: approve \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rejectApproval(requestParameters: RejectApprovalRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Reject a Pending Request\n     * It will reject and then delete the pending request defined by its Internal ID. The operations currently supported are: * Unlock User In order to be allowed to reject a pending request the requester will need the following permissions      resource: Identities     function: Unlock User     privilege: approve \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rejectApproval(requestParameters: RejectApprovalRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling rejectApproval.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/reject`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public rejectApprovalUrl(requestParameters: RejectApprovalRequestParams): string {\n        const _approvalId = requestParameters[\"approvalId\"];\n        if (_approvalId === null || _approvalId === undefined) {\n            throw new Error('Required parameter approvalId was null or undefined when calling rejectApproval.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/approvals/${encodeURIComponent(String(_approvalId))}/reject`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/users/approvals/{approvalId}/approve URL pattern\n*/\nexport const UserApprovalsServiceApproveApprovalMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/approve\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/approvals/{approvalId}/details URL pattern\n*/\nexport const UserApprovalsServiceGetApprovalDetailsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/details\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"changelogDetails\" : [ {\n    \"type\" : \"LOCK_USER\",\n    \"key\" : \"User Status\",\n    \"from\" : \"Locked\",\n    \"to\" : \"Enabled\"\n  } ],\n  \"userDetails\" : {\n    \"username\" : \"john.doe\",\n    \"legalEntityName\" : \"Bank 001\",\n    \"fullName\" : \"John Doe\",\n    \"emailAddress\" : \"john.doe@example.test\",\n    \"mobileNumber\" : \"012345 67890\",\n    \"dateCreated\" : \"2019-07-11T11:11:11.000Z\"\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/approvals/{approvalId}/reject URL pattern\n*/\nexport const UserApprovalsServiceRejectApprovalMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/reject\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const UserApprovalsServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/approve\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/details\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"changelogDetails\" : [ {\n    \"type\" : \"LOCK_USER\",\n    \"key\" : \"User Status\",\n    \"from\" : \"Locked\",\n    \"to\" : \"Enabled\"\n  } ],\n  \"userDetails\" : {\n    \"username\" : \"john.doe\",\n    \"legalEntityName\" : \"Bank 001\",\n    \"fullName\" : \"John Doe\",\n    \"emailAddress\" : \"john.doe@example.test\",\n    \"mobileNumber\" : \"012345 67890\",\n    \"dateCreated\" : \"2019-07-11T11:11:11.000Z\"\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/approvals/{approvalId}/reject\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * User Manager client\n * Create, retrieve, and manage users and their relationships with internal (DBS services) and external (CRM systems) resources. \n *\n * The version of the OpenAPI document: 2.4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { GetOwnUser } from '../model/models';\nimport { GetUser } from '../model/models';\nimport { GetUsersByLegalEntityIdsRequest } from '../model/models';\nimport { GetUsersList } from '../model/models';\nimport { LegalEntity } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { UpdatePreferredLanguage } from '../model/models';\n\nimport { USER_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { UserConfiguration }                                     from '../configuration';\n\n\nexport interface CheckUserExistsRequestParams {\n    /** External unique identifier of the resource. */\n    [\"externalId\"]: string;\n}\n\nexport interface GetLegalEntityByExternalIdRequestParams {\n    /** External unique identifier of the resource. */\n    [\"externalId\"]: string;\n}\n\nexport interface GetUserByExternalIdRequestParams {\n    /** External unique identifier of the resource. */\n    [\"externalId\"]: string;\n}\n\nexport interface GetUserByIdRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetUsersRequestParams {\n    /** Legal Entity ID */\n    [\"entityId\"]: string;\n    /** Case-insensitive search term used to search for users by their full name */\n    [\"query\"]?: string;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query  */\n    [\"from\"]?: number;\n    /** Record UUID. As an alternative for specifying \\&#39;from\\&#39; this allows to point to the record to start the selection from.  */\n    [\"cursor\"]?: string;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor.  */\n    [\"size\"]?: number;\n}\n\nexport interface GetUsersByLegalEntityIdsRequestParams {\n    [\"getUsersByLegalEntityIdsRequest\"]: GetUsersByLegalEntityIdsRequest;\n}\n\nexport interface UpdateOwnLanguageRequestParams {\n    [\"updatePreferredLanguage\"]: UpdatePreferredLanguage;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserManagementService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new UserConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(USER_BASE_PATH) basePath: string, @Optional() configuration: UserConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Check if User exists by its external ID\n     * Checks whether the given user defined by its external Id already exists.  Note: This endpoint retuns a &#x60;404&#x60; if the externalId requested is outside of the authenticated users legal hierarchy. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public checkUserExists(requestParameters: CheckUserExistsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Check if User exists by its external ID\n     * Checks whether the given user defined by its external Id already exists.  Note: This endpoint retuns a &#x60;404&#x60; if the externalId requested is outside of the authenticated users legal hierarchy. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public checkUserExists(requestParameters: CheckUserExistsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Check if User exists by its external ID\n     * Checks whether the given user defined by its external Id already exists.  Note: This endpoint retuns a &#x60;404&#x60; if the externalId requested is outside of the authenticated users legal hierarchy. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public checkUserExists(requestParameters: CheckUserExistsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Check if User exists by its external ID\n     * Checks whether the given user defined by its external Id already exists.  Note: This endpoint retuns a &#x60;404&#x60; if the externalId requested is outside of the authenticated users legal hierarchy. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public checkUserExists(requestParameters: CheckUserExistsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling checkUserExists.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/client-api/v2/users/existing/externalids/${encodeURIComponent(String(_externalId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public checkUserExistsUrl(requestParameters: CheckUserExistsRequestParams): string {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling checkUserExists.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/existing/externalids/${encodeURIComponent(String(_externalId))}`;\n    }\n\n    /**\n     * Legal Entity by User External ID\n     * Retrieve the Legal Entity that the User Belongs to. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityByExternalId(requestParameters: GetLegalEntityByExternalIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LegalEntity>;\n    /**\n     * Legal Entity by User External ID\n     * Retrieve the Legal Entity that the User Belongs to. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityByExternalId(requestParameters: GetLegalEntityByExternalIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LegalEntity>>;\n    /**\n     * Legal Entity by User External ID\n     * Retrieve the Legal Entity that the User Belongs to. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityByExternalId(requestParameters: GetLegalEntityByExternalIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LegalEntity>>;\n    /**\n     * Legal Entity by User External ID\n     * Retrieve the Legal Entity that the User Belongs to. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLegalEntityByExternalId(requestParameters: GetLegalEntityByExternalIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getLegalEntityByExternalId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LegalEntity>(`${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}/legalentities`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getLegalEntityByExternalIdUrl(requestParameters: GetLegalEntityByExternalIdRequestParams): string {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getLegalEntityByExternalId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}/legalentities`;\n    }\n\n    /**\n     * Get own User Information\n     * Retrieves the user information of the authenticated user. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnUser(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetOwnUser>;\n    /**\n     * Get own User Information\n     * Retrieves the user information of the authenticated user. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnUser(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetOwnUser>>;\n    /**\n     * Get own User Information\n     * Retrieves the user information of the authenticated user. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnUser(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetOwnUser>>;\n    /**\n     * Get own User Information\n     * Retrieves the user information of the authenticated user. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnUser(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetOwnUser>(`${this.configuration.basePath}/client-api/v2/users/me`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getOwnUserUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/users/me`;\n    }\n\n    /**\n     * Get User by external ID\n     * Retrieves a User entity by its external ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserByExternalId(requestParameters: GetUserByExternalIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetUser>;\n    /**\n     * Get User by external ID\n     * Retrieves a User entity by its external ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserByExternalId(requestParameters: GetUserByExternalIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetUser>>;\n    /**\n     * Get User by external ID\n     * Retrieves a User entity by its external ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserByExternalId(requestParameters: GetUserByExternalIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetUser>>;\n    /**\n     * Get User by external ID\n     * Retrieves a User entity by its external ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserByExternalId(requestParameters: GetUserByExternalIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getUserByExternalId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetUser>(`${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUserByExternalIdUrl(requestParameters: GetUserByExternalIdRequestParams): string {\n        const _externalId = requestParameters[\"externalId\"];\n        if (_externalId === null || _externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling getUserByExternalId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/externalids/${encodeURIComponent(String(_externalId))}`;\n    }\n\n    /**\n     * Gets a user by their ID\n     * Retrieves a User entity by their Internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserById(requestParameters: GetUserByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetUser>;\n    /**\n     * Gets a user by their ID\n     * Retrieves a User entity by their Internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserById(requestParameters: GetUserByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetUser>>;\n    /**\n     * Gets a user by their ID\n     * Retrieves a User entity by their Internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserById(requestParameters: GetUserByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetUser>>;\n    /**\n     * Gets a user by their ID\n     * Retrieves a User entity by their Internal ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserById(requestParameters: GetUserByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getUserById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetUser>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUserByIdUrl(requestParameters: GetUserByIdRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getUserById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}`;\n    }\n\n    /**\n     * Gets a list of Users by their Legal Entity ID\n     * Retrieve a list of users with the search criteria passed as query parameters: * entityId: Legal Entity ID that the users belong to. REQUIRED * query: Case-insensitive search term used to search for users by their full name.  This endpoint results are pageable and also admit the following query parameters: * from: Page Number. Skip over pages of elements by specifying a start value for the query. * size: Number of records that will be shown each request.  As an example, a request using the following query parameters:  &#x60;&#x60;&#x60;from&#x3D;2&amp;size&#x3D;10&#x60;&#x60;&#x60;  will show the elements 20th to 30th (non inclusive) \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsers(requestParameters: GetUsersRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<GetUser>>;\n    /**\n     * Gets a list of Users by their Legal Entity ID\n     * Retrieve a list of users with the search criteria passed as query parameters: * entityId: Legal Entity ID that the users belong to. REQUIRED * query: Case-insensitive search term used to search for users by their full name.  This endpoint results are pageable and also admit the following query parameters: * from: Page Number. Skip over pages of elements by specifying a start value for the query. * size: Number of records that will be shown each request.  As an example, a request using the following query parameters:  &#x60;&#x60;&#x60;from&#x3D;2&amp;size&#x3D;10&#x60;&#x60;&#x60;  will show the elements 20th to 30th (non inclusive) \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsers(requestParameters: GetUsersRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<GetUser>>>;\n    /**\n     * Gets a list of Users by their Legal Entity ID\n     * Retrieve a list of users with the search criteria passed as query parameters: * entityId: Legal Entity ID that the users belong to. REQUIRED * query: Case-insensitive search term used to search for users by their full name.  This endpoint results are pageable and also admit the following query parameters: * from: Page Number. Skip over pages of elements by specifying a start value for the query. * size: Number of records that will be shown each request.  As an example, a request using the following query parameters:  &#x60;&#x60;&#x60;from&#x3D;2&amp;size&#x3D;10&#x60;&#x60;&#x60;  will show the elements 20th to 30th (non inclusive) \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsers(requestParameters: GetUsersRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<GetUser>>>;\n    /**\n     * Gets a list of Users by their Legal Entity ID\n     * Retrieve a list of users with the search criteria passed as query parameters: * entityId: Legal Entity ID that the users belong to. REQUIRED * query: Case-insensitive search term used to search for users by their full name.  This endpoint results are pageable and also admit the following query parameters: * from: Page Number. Skip over pages of elements by specifying a start value for the query. * size: Number of records that will be shown each request.  As an example, a request using the following query parameters:  &#x60;&#x60;&#x60;from&#x3D;2&amp;size&#x3D;10&#x60;&#x60;&#x60;  will show the elements 20th to 30th (non inclusive) \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsers(requestParameters: GetUsersRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _entityId = requestParameters[\"entityId\"];\n        if (_entityId === null || _entityId === undefined) {\n            throw new Error('Required parameter entityId was null or undefined when calling getUsers.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_entityId !== undefined && _entityId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_entityId, 'entityId');\n        }\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<GetUser>>(`${this.configuration.basePath}/client-api/v2/users`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUsersUrl(requestParameters: GetUsersRequestParams): string {\n        const _entityId = requestParameters[\"entityId\"];\n        if (_entityId === null || _entityId === undefined) {\n            throw new Error('Required parameter entityId was null or undefined when calling getUsers.');\n        }\n        const _query = requestParameters[\"query\"];\n        const _from = requestParameters[\"from\"];\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_entityId !== undefined && _entityId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_entityId, 'entityId');\n        }\n        if (_query !== undefined && _query !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_query, 'query');\n        }\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/users${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * List Users by Legal Entity Ids\n     * Retrieve a paged list of Users by given list of legal entity Ids, with optional parameters for query and excluding user ids.  The list of users is sorted by Legal Entity ID, then Full Name and ultimately ID in ascending order. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsersByLegalEntityIds(requestParameters: GetUsersByLegalEntityIdsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetUsersList>;\n    /**\n     * List Users by Legal Entity Ids\n     * Retrieve a paged list of Users by given list of legal entity Ids, with optional parameters for query and excluding user ids.  The list of users is sorted by Legal Entity ID, then Full Name and ultimately ID in ascending order. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsersByLegalEntityIds(requestParameters: GetUsersByLegalEntityIdsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetUsersList>>;\n    /**\n     * List Users by Legal Entity Ids\n     * Retrieve a paged list of Users by given list of legal entity Ids, with optional parameters for query and excluding user ids.  The list of users is sorted by Legal Entity ID, then Full Name and ultimately ID in ascending order. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsersByLegalEntityIds(requestParameters: GetUsersByLegalEntityIdsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetUsersList>>;\n    /**\n     * List Users by Legal Entity Ids\n     * Retrieve a paged list of Users by given list of legal entity Ids, with optional parameters for query and excluding user ids.  The list of users is sorted by Legal Entity ID, then Full Name and ultimately ID in ascending order. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUsersByLegalEntityIds(requestParameters: GetUsersByLegalEntityIdsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _getUsersByLegalEntityIdsRequest = requestParameters[\"getUsersByLegalEntityIdsRequest\"];\n        if (_getUsersByLegalEntityIdsRequest === null || _getUsersByLegalEntityIdsRequest === undefined) {\n            throw new Error('Required parameter getUsersByLegalEntityIdsRequest was null or undefined when calling getUsersByLegalEntityIds.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<GetUsersList>(`${this.configuration.basePath}/client-api/v2/users/legalentityids`,\n            _getUsersByLegalEntityIdsRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUsersByLegalEntityIdsUrl(requestParameters: GetUsersByLegalEntityIdsRequestParams): string {\n        const _getUsersByLegalEntityIdsRequest = requestParameters[\"getUsersByLegalEntityIdsRequest\"];\n        if (_getUsersByLegalEntityIdsRequest === null || _getUsersByLegalEntityIdsRequest === undefined) {\n            throw new Error('Required parameter getUsersByLegalEntityIdsRequest was null or undefined when calling getUsersByLegalEntityIds.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/legalentityids`;\n    }\n\n    /**\n     * Update own user preferred language\n     * Updates the preferred language of the authenticated user \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnLanguage(requestParameters: UpdateOwnLanguageRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Update own user preferred language\n     * Updates the preferred language of the authenticated user \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnLanguage(requestParameters: UpdateOwnLanguageRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Update own user preferred language\n     * Updates the preferred language of the authenticated user \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnLanguage(requestParameters: UpdateOwnLanguageRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Update own user preferred language\n     * Updates the preferred language of the authenticated user \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnLanguage(requestParameters: UpdateOwnLanguageRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _updatePreferredLanguage = requestParameters[\"updatePreferredLanguage\"];\n        if (_updatePreferredLanguage === null || _updatePreferredLanguage === undefined) {\n            throw new Error('Required parameter updatePreferredLanguage was null or undefined when calling updateOwnLanguage.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/me/preferred-language`,\n            _updatePreferredLanguage,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateOwnLanguageUrl(requestParameters: UpdateOwnLanguageRequestParams): string {\n        const _updatePreferredLanguage = requestParameters[\"updatePreferredLanguage\"];\n        if (_updatePreferredLanguage === null || _updatePreferredLanguage === undefined) {\n            throw new Error('Required parameter updatePreferredLanguage was null or undefined when calling updateOwnLanguage.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/preferred-language`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/users/existing/externalids/{externalId} URL pattern\n*/\nexport const UserManagementServiceCheckUserExistsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/existing/externalids/{externalId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/externalids/{externalId}/legalentities URL pattern\n*/\nexport const UserManagementServiceGetLegalEntityByExternalIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/externalids/{externalId}/legalentities\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"a154ebc2-3116-450e-9e26-1612d7cb48fb\",\n  \"externalId\" : \"a00f4955-c920-4604-9ec8-4e2cddd447d6\",\n  \"name\" : \"Bank Corp.\",\n  \"parentId\" : \"8cc493bb-ffca-4b47-ae2f-594cd7282d30\",\n  \"isParent\" : true\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me URL pattern\n*/\nexport const UserManagementServiceGetOwnUserMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"externalId\" : \"externalBankId1\",\n  \"preferredLanguage\" : \"fr-FR\",\n  \"legalEntityId\" : \"c2185f7d-a1e8-4f97-990d-cb1cfd0d8f53\",\n  \"legalEntityName\" : \"BANK A\",\n  \"id\" : \"3da7e7fb-857f-44c2-92aa-80572f6394e2\",\n  \"fullName\" : \"Henry Duncan\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/externalids/{externalId} URL pattern\n*/\nexport const UserManagementServiceGetUserByExternalIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/externalids/{externalId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"externalId\" : \"U0000010\",\n  \"legalEntityId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"id\" : \"d100c54f79784731843f0db89a2d2957\",\n  \"fullName\" : \"David Flores\",\n  \"preferredLanguage\" : \"fr-FR\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"legalEntityId\" : \"legalEntityId\",\n  \"externalId\" : \"externalId\",\n  \"fullName\" : \"fullName\",\n  \"id\" : \"id\"\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId} URL pattern\n*/\nexport const UserManagementServiceGetUserByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"externalId\" : \"U0000010\",\n  \"legalEntityId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"id\" : \"d100c54f79784731843f0db89a2d2957\",\n  \"fullName\" : \"David Flores\",\n  \"preferredLanguage\" : \"fr-FR\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"legalEntityId\" : \"legalEntityId\",\n  \"externalId\" : \"externalId\",\n  \"fullName\" : \"fullName\",\n  \"id\" : \"id\"\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users URL pattern\n*/\nexport const UserManagementServiceGetUsersMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"externalId\" : \"U0000010\",\n  \"legalEntityId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"id\" : \"d100c54f79784731843f0db89a2d2957\",\n  \"fullName\" : \"David Flores\",\n  \"preferredLanguage\" : \"fr-FR\"\n}, {\n  \"externalId\" : \"U0000011\",\n  \"legalEntityId\" : \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n  \"id\" : \"fafd8fd6b661402b8411a48050bdc9ad\",\n  \"fullName\" : \"Sofia Duncan\"\n}, {\n  \"externalId\" : \"U0000012\",\n  \"legalEntityId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"id\" : \"bc9a83bf025449dea4ecc05ce816aebd\",\n  \"fullName\" : \"Henry Duncan\"\n}, {\n  \"externalId\" : \"U0000013\",\n  \"legalEntityId\" : \"34\",\n  \"id\" : \"5360dbba1a254889ba94c22ff01b1c37\",\n  \"fullName\" : \"Bart Nyman\"\n}, {\n  \"externalId\" : \"U0000014\",\n  \"legalEntityId\" : \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n  \"id\" : \"37c1b6b531a34259b4c518eebc0b34a2\",\n  \"fullName\" : \"Peter\"\n}, {\n  \"externalId\" : \"U0000015\",\n  \"legalEntityId\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"id\" : \"b5f499e8f3c94cf39997957ce4cbec59\",\n  \"fullName\" : \"Sandra\"\n}, {\n  \"externalId\" : \"U0000016\",\n  \"legalEntityId\" : \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n  \"id\" : \"b5f499e8f3c94cf39997957ce4cbei84\",\n  \"fullName\" : \"Marko Ilievski\",\n  \"preferredLanguage\" : \"en-GB\"\n}, {\n  \"externalId\" : \"U0000017\",\n  \"legalEntityId\" : \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n  \"id\" : \"b5f499e8f3c94cf39997957ce4cbec59t97\",\n  \"fullName\" : \"Daniela Petkovska\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/legalentityids URL pattern\n*/\nexport const UserManagementServiceGetUsersByLegalEntityIdsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/legalentityids\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"users\" : [ {\n    \"id\" : \"001\",\n    \"externalId\" : \"U0000010\",\n    \"legalEntityId\" : \"012\",\n    \"fullName\" : \"Mila\"\n  }, {\n    \"id\" : \"002\",\n    \"externalId\" : \"U0000011\",\n    \"legalEntityId\" : \"023\",\n    \"fullName\" : \"Kjiro\"\n  }, {\n    \"id\" : \"003\",\n    \"externalId\" : \"U0000012\",\n    \"legalEntityId\" : \"034\",\n    \"fullName\" : \"Daniel\"\n  } ],\n  \"totalElements\" : 1000\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/preferred-language URL pattern\n*/\nexport const UserManagementServiceUpdateOwnLanguageMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/preferred-language\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const UserManagementServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/users/existing/externalids/{externalId}\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/externalids/{externalId}/legalentities\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"a154ebc2-3116-450e-9e26-1612d7cb48fb\",\n  \"externalId\" : \"a00f4955-c920-4604-9ec8-4e2cddd447d6\",\n  \"name\" : \"Bank Corp.\",\n  \"parentId\" : \"8cc493bb-ffca-4b47-ae2f-594cd7282d30\",\n  \"isParent\" : true\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"externalId\" : \"externalBankId1\",\n  \"preferredLanguage\" : \"fr-FR\",\n  \"legalEntityId\" : \"c2185f7d-a1e8-4f97-990d-cb1cfd0d8f53\",\n  \"legalEntityName\" : \"BANK A\",\n  \"id\" : \"3da7e7fb-857f-44c2-92aa-80572f6394e2\",\n  \"fullName\" : \"Henry Duncan\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/externalids/{externalId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"externalId\" : \"U0000010\",\n  \"legalEntityId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"id\" : \"d100c54f79784731843f0db89a2d2957\",\n  \"fullName\" : \"David Flores\",\n  \"preferredLanguage\" : \"fr-FR\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"legalEntityId\" : \"legalEntityId\",\n  \"externalId\" : \"externalId\",\n  \"fullName\" : \"fullName\",\n  \"id\" : \"id\"\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"externalId\" : \"U0000010\",\n  \"legalEntityId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"id\" : \"d100c54f79784731843f0db89a2d2957\",\n  \"fullName\" : \"David Flores\",\n  \"preferredLanguage\" : \"fr-FR\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"preferredLanguage\" : \"preferredLanguage\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"legalEntityId\" : \"legalEntityId\",\n  \"externalId\" : \"externalId\",\n  \"fullName\" : \"fullName\",\n  \"id\" : \"id\"\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"externalId\" : \"U0000010\",\n  \"legalEntityId\" : \"c7a382786d514262b75ab9531b749a2b\",\n  \"id\" : \"d100c54f79784731843f0db89a2d2957\",\n  \"fullName\" : \"David Flores\",\n  \"preferredLanguage\" : \"fr-FR\"\n}, {\n  \"externalId\" : \"U0000011\",\n  \"legalEntityId\" : \"dbc9e566d44f4cd9a1f09ad3f6729f15\",\n  \"id\" : \"fafd8fd6b661402b8411a48050bdc9ad\",\n  \"fullName\" : \"Sofia Duncan\"\n}, {\n  \"externalId\" : \"U0000012\",\n  \"legalEntityId\" : \"77f8c4cd11c8436ba77f8ca34e6a173d\",\n  \"id\" : \"bc9a83bf025449dea4ecc05ce816aebd\",\n  \"fullName\" : \"Henry Duncan\"\n}, {\n  \"externalId\" : \"U0000013\",\n  \"legalEntityId\" : \"34\",\n  \"id\" : \"5360dbba1a254889ba94c22ff01b1c37\",\n  \"fullName\" : \"Bart Nyman\"\n}, {\n  \"externalId\" : \"U0000014\",\n  \"legalEntityId\" : \"c9fc30f4e5fb492c97ed0a05f926aecc\",\n  \"id\" : \"37c1b6b531a34259b4c518eebc0b34a2\",\n  \"fullName\" : \"Peter\"\n}, {\n  \"externalId\" : \"U0000015\",\n  \"legalEntityId\" : \"0f6d14f40e064deeaee351befd53d3e7\",\n  \"id\" : \"b5f499e8f3c94cf39997957ce4cbec59\",\n  \"fullName\" : \"Sandra\"\n}, {\n  \"externalId\" : \"U0000016\",\n  \"legalEntityId\" : \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n  \"id\" : \"b5f499e8f3c94cf39997957ce4cbei84\",\n  \"fullName\" : \"Marko Ilievski\",\n  \"preferredLanguage\" : \"en-GB\"\n}, {\n  \"externalId\" : \"U0000017\",\n  \"legalEntityId\" : \"6e83bf0d-0d77-4320-b854-4a704e1d50c3\",\n  \"id\" : \"b5f499e8f3c94cf39997957ce4cbec59t97\",\n  \"fullName\" : \"Daniela Petkovska\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/legalentityids\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"users\" : [ {\n    \"id\" : \"001\",\n    \"externalId\" : \"U0000010\",\n    \"legalEntityId\" : \"012\",\n    \"fullName\" : \"Mila\"\n  }, {\n    \"id\" : \"002\",\n    \"externalId\" : \"U0000011\",\n    \"legalEntityId\" : \"023\",\n    \"fullName\" : \"Kjiro\"\n  }, {\n    \"id\" : \"003\",\n    \"externalId\" : \"U0000012\",\n    \"legalEntityId\" : \"034\",\n    \"fullName\" : \"Daniel\"\n  } ],\n  \"totalElements\" : 1000\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/preferred-language\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * User Manager client\n * Create, retrieve, and manage users and their relationships with internal (DBS services) and external (CRM systems) resources. \n *\n * The version of the OpenAPI document: 2.4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ElectronicAddress } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { GetElectronicAddress } from '../model/models';\nimport { GetElectronicAddresses } from '../model/models';\nimport { GetPhoneAddress } from '../model/models';\nimport { GetPhoneAddresses } from '../model/models';\nimport { GetPostalAddress } from '../model/models';\nimport { GetPostalAddresses } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PhoneAddress } from '../model/models';\nimport { PostalAddress } from '../model/models';\nimport { ReplaceUserProfileAttributes } from '../model/models';\nimport { UserProfile } from '../model/models';\n\nimport { USER_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { UserConfiguration }                                     from '../configuration';\n\n\nexport interface AddElectronicAddressRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"electronicAddress\"]: ElectronicAddress;\n}\n\nexport interface AddOwnElectronicAddressRequestParams {\n    [\"electronicAddress\"]: ElectronicAddress;\n}\n\nexport interface AddOwnPhoneAddressRequestParams {\n    [\"phoneAddress\"]: PhoneAddress;\n}\n\nexport interface AddOwnPostalAddressRequestParams {\n    [\"postalAddress\"]: PostalAddress;\n}\n\nexport interface AddPhoneAddressRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"phoneAddress\"]: PhoneAddress;\n}\n\nexport interface AddPostalAddressRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"postalAddress\"]: PostalAddress;\n}\n\nexport interface DeleteElectronicAddressRequestParams {\n    /** Electronic Address Key ID */\n    [\"electronicAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface DeleteOwnElectronicAddressRequestParams {\n    /** Electronic Address Key ID */\n    [\"electronicAddressKey\"]: string;\n}\n\nexport interface DeleteOwnPhoneAddressRequestParams {\n    /** Phone Address Key ID */\n    [\"phoneAddressKey\"]: string;\n}\n\nexport interface DeleteOwnPostalAddressRequestParams {\n    /** Postal Address Key ID */\n    [\"postalAddressKey\"]: string;\n}\n\nexport interface DeletePhoneAddressRequestParams {\n    /** Phone Address Key ID */\n    [\"phoneAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface DeletePostalAddressRequestParams {\n    /** Postal Address Key ID */\n    [\"postalAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetElectronicAddressRequestParams {\n    /** Electronic Address Key ID */\n    [\"electronicAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetElectronicAddressesRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetOwnElectronicAddressRequestParams {\n    /** Electronic Address Key ID */\n    [\"electronicAddressKey\"]: string;\n}\n\nexport interface GetOwnPhoneAddressRequestParams {\n    /** Phone Address Key ID */\n    [\"phoneAddressKey\"]: string;\n}\n\nexport interface GetOwnPostalAddressRequestParams {\n    /** Postal Address Key ID */\n    [\"postalAddressKey\"]: string;\n}\n\nexport interface GetPhoneAddressRequestParams {\n    /** Phone Address Key ID */\n    [\"phoneAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetPhoneAddressesRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetPostalAddressRequestParams {\n    /** Postal Address Key ID */\n    [\"postalAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetPostalAddressesRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface GetUserProfileRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n}\n\nexport interface ReplaceOwnUserProfileAttributesRequestParams {\n    [\"replaceUserProfileAttributes\"]: ReplaceUserProfileAttributes;\n}\n\nexport interface ReplaceUserProfileAttributesRequestParams {\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"replaceUserProfileAttributes\"]: ReplaceUserProfileAttributes;\n}\n\nexport interface UpdateElectronicAddressRequestParams {\n    /** Electronic Address Key ID */\n    [\"electronicAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"electronicAddress\"]: ElectronicAddress;\n}\n\nexport interface UpdateOwnElectronicAddressRequestParams {\n    /** Electronic Address Key ID */\n    [\"electronicAddressKey\"]: string;\n    [\"electronicAddress\"]: ElectronicAddress;\n}\n\nexport interface UpdateOwnPhoneAddressRequestParams {\n    /** Phone Address Key ID */\n    [\"phoneAddressKey\"]: string;\n    [\"phoneAddress\"]: PhoneAddress;\n}\n\nexport interface UpdateOwnPostalAddressRequestParams {\n    /** Postal Address Key ID */\n    [\"postalAddressKey\"]: string;\n    [\"postalAddress\"]: PostalAddress;\n}\n\nexport interface UpdatePhoneAddressRequestParams {\n    /** Phone Address Key ID */\n    [\"phoneAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"phoneAddress\"]: PhoneAddress;\n}\n\nexport interface UpdatePostalAddressRequestParams {\n    /** Postal Address Key ID */\n    [\"postalAddressKey\"]: string;\n    /** User internal ID */\n    [\"internalId\"]: string;\n    [\"postalAddress\"]: PostalAddress;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileManagementService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new UserConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(USER_BASE_PATH) basePath: string, @Optional() configuration: UserConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Add new Electronic Address to User Profile\n     * This endpoint adds a new Electronic Address to the list of User Electronic Addresses associated to a User by their internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addElectronicAddress(requestParameters: AddElectronicAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add new Electronic Address to User Profile\n     * This endpoint adds a new Electronic Address to the list of User Electronic Addresses associated to a User by their internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addElectronicAddress(requestParameters: AddElectronicAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add new Electronic Address to User Profile\n     * This endpoint adds a new Electronic Address to the list of User Electronic Addresses associated to a User by their internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addElectronicAddress(requestParameters: AddElectronicAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add new Electronic Address to User Profile\n     * This endpoint adds a new Electronic Address to the list of User Electronic Addresses associated to a User by their internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addElectronicAddress(requestParameters: AddElectronicAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling addElectronicAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`,\n            _electronicAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public addElectronicAddressUrl(requestParameters: AddElectronicAddressRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling addElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`;\n    }\n\n    /**\n     * Add new Electronic Address to own User Profile\n     * This endpoint adds a new Electronic Address to the list of User Electronic Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnElectronicAddress(requestParameters: AddOwnElectronicAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add new Electronic Address to own User Profile\n     * This endpoint adds a new Electronic Address to the list of User Electronic Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnElectronicAddress(requestParameters: AddOwnElectronicAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add new Electronic Address to own User Profile\n     * This endpoint adds a new Electronic Address to the list of User Electronic Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnElectronicAddress(requestParameters: AddOwnElectronicAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add new Electronic Address to own User Profile\n     * This endpoint adds a new Electronic Address to the list of User Electronic Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnElectronicAddress(requestParameters: AddOwnElectronicAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling addOwnElectronicAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`,\n            _electronicAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public addOwnElectronicAddressUrl(requestParameters: AddOwnElectronicAddressRequestParams): string {\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling addOwnElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`;\n    }\n\n    /**\n     * Add new Phone Address to own User Profile\n     * This endpoint adds a new Phone Address to the list of User Phone Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnPhoneAddress(requestParameters: AddOwnPhoneAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add new Phone Address to own User Profile\n     * This endpoint adds a new Phone Address to the list of User Phone Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnPhoneAddress(requestParameters: AddOwnPhoneAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add new Phone Address to own User Profile\n     * This endpoint adds a new Phone Address to the list of User Phone Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnPhoneAddress(requestParameters: AddOwnPhoneAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add new Phone Address to own User Profile\n     * This endpoint adds a new Phone Address to the list of User Phone Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnPhoneAddress(requestParameters: AddOwnPhoneAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling addOwnPhoneAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`,\n            _phoneAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public addOwnPhoneAddressUrl(requestParameters: AddOwnPhoneAddressRequestParams): string {\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling addOwnPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`;\n    }\n\n    /**\n     * Add new Postal Address to own User Profile\n     * This endpoint adds a new Postal Address to the list of User Postal Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnPostalAddress(requestParameters: AddOwnPostalAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add new Postal Address to own User Profile\n     * This endpoint adds a new Postal Address to the list of User Postal Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnPostalAddress(requestParameters: AddOwnPostalAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add new Postal Address to own User Profile\n     * This endpoint adds a new Postal Address to the list of User Postal Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnPostalAddress(requestParameters: AddOwnPostalAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add new Postal Address to own User Profile\n     * This endpoint adds a new Postal Address to the list of User Postal Addresses associated to the authenticated user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addOwnPostalAddress(requestParameters: AddOwnPostalAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling addOwnPostalAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`,\n            _postalAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public addOwnPostalAddressUrl(requestParameters: AddOwnPostalAddressRequestParams): string {\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling addOwnPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`;\n    }\n\n    /**\n     * Add new Phone Address to User Profile\n     * This endpoint adds a new Phone Address to the list of User Phone Addresses associated to a User by its internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addPhoneAddress(requestParameters: AddPhoneAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add new Phone Address to User Profile\n     * This endpoint adds a new Phone Address to the list of User Phone Addresses associated to a User by its internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addPhoneAddress(requestParameters: AddPhoneAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add new Phone Address to User Profile\n     * This endpoint adds a new Phone Address to the list of User Phone Addresses associated to a User by its internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addPhoneAddress(requestParameters: AddPhoneAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add new Phone Address to User Profile\n     * This endpoint adds a new Phone Address to the list of User Phone Addresses associated to a User by its internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addPhoneAddress(requestParameters: AddPhoneAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addPhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling addPhoneAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`,\n            _phoneAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public addPhoneAddressUrl(requestParameters: AddPhoneAddressRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addPhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling addPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`;\n    }\n\n    /**\n     * Add new Postal Address to User Profile\n     * This endpoint adds a new Postal Address to the list of User Postal Addresses associated to a User by their internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addPostalAddress(requestParameters: AddPostalAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Add new Postal Address to User Profile\n     * This endpoint adds a new Postal Address to the list of User Postal Addresses associated to a User by their internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addPostalAddress(requestParameters: AddPostalAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Add new Postal Address to User Profile\n     * This endpoint adds a new Postal Address to the list of User Postal Addresses associated to a User by their internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addPostalAddress(requestParameters: AddPostalAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Add new Postal Address to User Profile\n     * This endpoint adds a new Postal Address to the list of User Postal Addresses associated to a User by their internal User ID. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addPostalAddress(requestParameters: AddPostalAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addPostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling addPostalAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`,\n            _postalAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public addPostalAddressUrl(requestParameters: AddPostalAddressRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling addPostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling addPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`;\n    }\n\n    /**\n     * Deletes Electronic Address by its unique key\n     * Removes an Electronic Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteElectronicAddress(requestParameters: DeleteElectronicAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Deletes Electronic Address by its unique key\n     * Removes an Electronic Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteElectronicAddress(requestParameters: DeleteElectronicAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Deletes Electronic Address by its unique key\n     * Removes an Electronic Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteElectronicAddress(requestParameters: DeleteElectronicAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Deletes Electronic Address by its unique key\n     * Removes an Electronic Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteElectronicAddress(requestParameters: DeleteElectronicAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deleteElectronicAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteElectronicAddressUrl(requestParameters: DeleteElectronicAddressRequestParams): string {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deleteElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n\n    /**\n     * Deletes own Electronic Address by its unique key\n     * Removes an Electronic Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnElectronicAddress(requestParameters: DeleteOwnElectronicAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Deletes own Electronic Address by its unique key\n     * Removes an Electronic Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnElectronicAddress(requestParameters: DeleteOwnElectronicAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Deletes own Electronic Address by its unique key\n     * Removes an Electronic Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnElectronicAddress(requestParameters: DeleteOwnElectronicAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Deletes own Electronic Address by its unique key\n     * Removes an Electronic Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnElectronicAddress(requestParameters: DeleteOwnElectronicAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteOwnElectronicAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteOwnElectronicAddressUrl(requestParameters: DeleteOwnElectronicAddressRequestParams): string {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling deleteOwnElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n\n    /**\n     * Deletes Own Phone Address by its unique key\n     * Removes a Phone Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnPhoneAddress(requestParameters: DeleteOwnPhoneAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Deletes Own Phone Address by its unique key\n     * Removes a Phone Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnPhoneAddress(requestParameters: DeleteOwnPhoneAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Deletes Own Phone Address by its unique key\n     * Removes a Phone Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnPhoneAddress(requestParameters: DeleteOwnPhoneAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Deletes Own Phone Address by its unique key\n     * Removes a Phone Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnPhoneAddress(requestParameters: DeleteOwnPhoneAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling deleteOwnPhoneAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteOwnPhoneAddressUrl(requestParameters: DeleteOwnPhoneAddressRequestParams): string {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling deleteOwnPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n\n    /**\n     * Deletes Postal Address by its unique key\n     * Removes a Postal Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnPostalAddress(requestParameters: DeleteOwnPostalAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Deletes Postal Address by its unique key\n     * Removes a Postal Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnPostalAddress(requestParameters: DeleteOwnPostalAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Deletes Postal Address by its unique key\n     * Removes a Postal Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnPostalAddress(requestParameters: DeleteOwnPostalAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Deletes Postal Address by its unique key\n     * Removes a Postal Address by its unique key from the authenticated user\\&#39;s profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOwnPostalAddress(requestParameters: DeleteOwnPostalAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling deleteOwnPostalAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deleteOwnPostalAddressUrl(requestParameters: DeleteOwnPostalAddressRequestParams): string {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling deleteOwnPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n\n    /**\n     * Delete user phone number\n     * Delete a singular phone number based on the key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePhoneAddress(requestParameters: DeletePhoneAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Delete user phone number\n     * Delete a singular phone number based on the key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePhoneAddress(requestParameters: DeletePhoneAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Delete user phone number\n     * Delete a singular phone number based on the key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePhoneAddress(requestParameters: DeletePhoneAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Delete user phone number\n     * Delete a singular phone number based on the key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePhoneAddress(requestParameters: DeletePhoneAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling deletePhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deletePhoneAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deletePhoneAddressUrl(requestParameters: DeletePhoneAddressRequestParams): string {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling deletePhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deletePhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n\n    /**\n     * Deletes Postal Address by its unique key\n     * Removes a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePostalAddress(requestParameters: DeletePostalAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Deletes Postal Address by its unique key\n     * Removes a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePostalAddress(requestParameters: DeletePostalAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Deletes Postal Address by its unique key\n     * Removes a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePostalAddress(requestParameters: DeletePostalAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Deletes Postal Address by its unique key\n     * Removes a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deletePostalAddress(requestParameters: DeletePostalAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling deletePostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deletePostalAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public deletePostalAddressUrl(requestParameters: DeletePostalAddressRequestParams): string {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling deletePostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling deletePostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n\n    /**\n     * Retrieves Electronic Address by its unique key\n     * Retrieves an Electronic Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicAddress(requestParameters: GetElectronicAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetElectronicAddress>;\n    /**\n     * Retrieves Electronic Address by its unique key\n     * Retrieves an Electronic Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicAddress(requestParameters: GetElectronicAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetElectronicAddress>>;\n    /**\n     * Retrieves Electronic Address by its unique key\n     * Retrieves an Electronic Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicAddress(requestParameters: GetElectronicAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetElectronicAddress>>;\n    /**\n     * Retrieves Electronic Address by its unique key\n     * Retrieves an Electronic Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicAddress(requestParameters: GetElectronicAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling getElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetElectronicAddress>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getElectronicAddressUrl(requestParameters: GetElectronicAddressRequestParams): string {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling getElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n\n    /**\n     * Get Electronic Addresses by User internal ID\n     * Retrieves a list of User Electronic Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicAddresses(requestParameters: GetElectronicAddressesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetElectronicAddresses>;\n    /**\n     * Get Electronic Addresses by User internal ID\n     * Retrieves a list of User Electronic Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicAddresses(requestParameters: GetElectronicAddressesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetElectronicAddresses>>;\n    /**\n     * Get Electronic Addresses by User internal ID\n     * Retrieves a list of User Electronic Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicAddresses(requestParameters: GetElectronicAddressesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetElectronicAddresses>>;\n    /**\n     * Get Electronic Addresses by User internal ID\n     * Retrieves a list of User Electronic Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getElectronicAddresses(requestParameters: GetElectronicAddressesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddresses.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetElectronicAddresses>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getElectronicAddressesUrl(requestParameters: GetElectronicAddressesRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getElectronicAddresses.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses`;\n    }\n\n    /**\n     * Retrieves own Electronic Address by its unique key\n     * Retrieves an Electronic Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnElectronicAddress(requestParameters: GetOwnElectronicAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetElectronicAddress>;\n    /**\n     * Retrieves own Electronic Address by its unique key\n     * Retrieves an Electronic Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnElectronicAddress(requestParameters: GetOwnElectronicAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetElectronicAddress>>;\n    /**\n     * Retrieves own Electronic Address by its unique key\n     * Retrieves an Electronic Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnElectronicAddress(requestParameters: GetOwnElectronicAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetElectronicAddress>>;\n    /**\n     * Retrieves own Electronic Address by its unique key\n     * Retrieves an Electronic Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnElectronicAddress(requestParameters: GetOwnElectronicAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling getOwnElectronicAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetElectronicAddress>(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getOwnElectronicAddressUrl(requestParameters: GetOwnElectronicAddressRequestParams): string {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling getOwnElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n\n    /**\n     * Get own User Profile Electronic Addresses\n     * Retrieves a listof User Electronic Addresses associated to the authenticated user. Theaddresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnElectronicAddresses(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetElectronicAddresses>;\n    /**\n     * Get own User Profile Electronic Addresses\n     * Retrieves a listof User Electronic Addresses associated to the authenticated user. Theaddresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnElectronicAddresses(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetElectronicAddresses>>;\n    /**\n     * Get own User Profile Electronic Addresses\n     * Retrieves a listof User Electronic Addresses associated to the authenticated user. Theaddresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnElectronicAddresses(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetElectronicAddresses>>;\n    /**\n     * Get own User Profile Electronic Addresses\n     * Retrieves a listof User Electronic Addresses associated to the authenticated user. Theaddresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnElectronicAddresses(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetElectronicAddresses>(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getOwnElectronicAddressesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses`;\n    }\n\n    /**\n     * Retrieves own Phone Address by its unique key\n     * Retrieves a Phone Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPhoneAddress(requestParameters: GetOwnPhoneAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetPhoneAddress>;\n    /**\n     * Retrieves own Phone Address by its unique key\n     * Retrieves a Phone Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPhoneAddress(requestParameters: GetOwnPhoneAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetPhoneAddress>>;\n    /**\n     * Retrieves own Phone Address by its unique key\n     * Retrieves a Phone Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPhoneAddress(requestParameters: GetOwnPhoneAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetPhoneAddress>>;\n    /**\n     * Retrieves own Phone Address by its unique key\n     * Retrieves a Phone Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPhoneAddress(requestParameters: GetOwnPhoneAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling getOwnPhoneAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetPhoneAddress>(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getOwnPhoneAddressUrl(requestParameters: GetOwnPhoneAddressRequestParams): string {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling getOwnPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n\n    /**\n     * Get own User Profile Phone Addresses\n     * Retrieves a list ofUser Phone Addresses associated to the authenticated user. The addresseswill be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPhoneAddresses(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetPhoneAddresses>;\n    /**\n     * Get own User Profile Phone Addresses\n     * Retrieves a list ofUser Phone Addresses associated to the authenticated user. The addresseswill be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPhoneAddresses(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetPhoneAddresses>>;\n    /**\n     * Get own User Profile Phone Addresses\n     * Retrieves a list ofUser Phone Addresses associated to the authenticated user. The addresseswill be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPhoneAddresses(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetPhoneAddresses>>;\n    /**\n     * Get own User Profile Phone Addresses\n     * Retrieves a list ofUser Phone Addresses associated to the authenticated user. The addresseswill be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPhoneAddresses(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetPhoneAddresses>(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getOwnPhoneAddressesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses`;\n    }\n\n    /**\n     * Retrieves own Postal Address by its unique key\n     * Retrieves a Postal Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPostalAddress(requestParameters: GetOwnPostalAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetPostalAddress>;\n    /**\n     * Retrieves own Postal Address by its unique key\n     * Retrieves a Postal Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPostalAddress(requestParameters: GetOwnPostalAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetPostalAddress>>;\n    /**\n     * Retrieves own Postal Address by its unique key\n     * Retrieves a Postal Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPostalAddress(requestParameters: GetOwnPostalAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetPostalAddress>>;\n    /**\n     * Retrieves own Postal Address by its unique key\n     * Retrieves a Postal Address from the authenticated user profile by its unique key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPostalAddress(requestParameters: GetOwnPostalAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling getOwnPostalAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetPostalAddress>(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getOwnPostalAddressUrl(requestParameters: GetOwnPostalAddressRequestParams): string {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling getOwnPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n\n    /**\n     * Get own Postal Addresses\n     * Retrieves a list ofUser Postal Addresses associated to the authenticated user. The addresseswill be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPostalAddresses(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetPostalAddresses>;\n    /**\n     * Get own Postal Addresses\n     * Retrieves a list ofUser Postal Addresses associated to the authenticated user. The addresseswill be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPostalAddresses(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetPostalAddresses>>;\n    /**\n     * Get own Postal Addresses\n     * Retrieves a list ofUser Postal Addresses associated to the authenticated user. The addresseswill be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPostalAddresses(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetPostalAddresses>>;\n    /**\n     * Get own Postal Addresses\n     * Retrieves a list ofUser Postal Addresses associated to the authenticated user. The addresseswill be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnPostalAddresses(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetPostalAddresses>(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getOwnPostalAddressesUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses`;\n    }\n\n    /**\n     * Get own User Profile\n     * Retrieves the User Profile information associated to the authenticated user. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnUserProfile(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UserProfile>;\n    /**\n     * Get own User Profile\n     * Retrieves the User Profile information associated to the authenticated user. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnUserProfile(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UserProfile>>;\n    /**\n     * Get own User Profile\n     * Retrieves the User Profile information associated to the authenticated user. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnUserProfile(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UserProfile>>;\n    /**\n     * Get own User Profile\n     * Retrieves the User Profile information associated to the authenticated user. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOwnUserProfile(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<UserProfile>(`${this.configuration.basePath}/client-api/v2/users/me/profile`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getOwnUserProfileUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile`;\n    }\n\n    /**\n     * Get user phone number\n     * Get singular phone number based on the key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPhoneAddress(requestParameters: GetPhoneAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetPhoneAddress>;\n    /**\n     * Get user phone number\n     * Get singular phone number based on the key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPhoneAddress(requestParameters: GetPhoneAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetPhoneAddress>>;\n    /**\n     * Get user phone number\n     * Get singular phone number based on the key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPhoneAddress(requestParameters: GetPhoneAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetPhoneAddress>>;\n    /**\n     * Get user phone number\n     * Get singular phone number based on the key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPhoneAddress(requestParameters: GetPhoneAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling getPhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetPhoneAddress>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPhoneAddressUrl(requestParameters: GetPhoneAddressRequestParams): string {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling getPhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n\n    /**\n     * Get Phone Addresses by User internal ID\n     * Retrieves a list of User Phone Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPhoneAddresses(requestParameters: GetPhoneAddressesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetPhoneAddresses>;\n    /**\n     * Get Phone Addresses by User internal ID\n     * Retrieves a list of User Phone Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPhoneAddresses(requestParameters: GetPhoneAddressesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetPhoneAddresses>>;\n    /**\n     * Get Phone Addresses by User internal ID\n     * Retrieves a list of User Phone Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPhoneAddresses(requestParameters: GetPhoneAddressesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetPhoneAddresses>>;\n    /**\n     * Get Phone Addresses by User internal ID\n     * Retrieves a list of User Phone Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPhoneAddresses(requestParameters: GetPhoneAddressesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddresses.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetPhoneAddresses>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPhoneAddressesUrl(requestParameters: GetPhoneAddressesRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPhoneAddresses.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses`;\n    }\n\n    /**\n     * Retrieves Postal Address by its unique key\n     * Retrieves a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPostalAddress(requestParameters: GetPostalAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetPostalAddress>;\n    /**\n     * Retrieves Postal Address by its unique key\n     * Retrieves a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPostalAddress(requestParameters: GetPostalAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetPostalAddress>>;\n    /**\n     * Retrieves Postal Address by its unique key\n     * Retrieves a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPostalAddress(requestParameters: GetPostalAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetPostalAddress>>;\n    /**\n     * Retrieves Postal Address by its unique key\n     * Retrieves a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPostalAddress(requestParameters: GetPostalAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling getPostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPostalAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetPostalAddress>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPostalAddressUrl(requestParameters: GetPostalAddressRequestParams): string {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling getPostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n\n    /**\n     * Get Postal Addresses by User internal ID\n     * Retrieves a list of User Postal Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPostalAddresses(requestParameters: GetPostalAddressesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<GetPostalAddresses>;\n    /**\n     * Get Postal Addresses by User internal ID\n     * Retrieves a list of User Postal Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPostalAddresses(requestParameters: GetPostalAddressesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<GetPostalAddresses>>;\n    /**\n     * Get Postal Addresses by User internal ID\n     * Retrieves a list of User Postal Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPostalAddresses(requestParameters: GetPostalAddressesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<GetPostalAddresses>>;\n    /**\n     * Get Postal Addresses by User internal ID\n     * Retrieves a list of User Postal Addresses associated to a User by their internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPostalAddresses(requestParameters: GetPostalAddressesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPostalAddresses.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<GetPostalAddresses>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPostalAddressesUrl(requestParameters: GetPostalAddressesRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getPostalAddresses.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses`;\n    }\n\n    /**\n     * Get User Profile by its User internal ID\n     * Retrieves the User Profile information associated to a User by its internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserProfile(requestParameters: GetUserProfileRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UserProfile>;\n    /**\n     * Get User Profile by its User internal ID\n     * Retrieves the User Profile information associated to a User by its internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserProfile(requestParameters: GetUserProfileRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UserProfile>>;\n    /**\n     * Get User Profile by its User internal ID\n     * Retrieves the User Profile information associated to a User by its internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserProfile(requestParameters: GetUserProfileRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UserProfile>>;\n    /**\n     * Get User Profile by its User internal ID\n     * Retrieves the User Profile information associated to a User by its internal ID. The addresses will be sorted with the primary address first, then sorted alphabetically by type and then alphabetically by key. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserProfile(requestParameters: GetUserProfileRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getUserProfile.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<UserProfile>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getUserProfileUrl(requestParameters: GetUserProfileRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling getUserProfile.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`;\n    }\n\n    /**\n     * Replace own User Profile\n     * Replace User Profile by User internal ID Serves as an extension point to allow any data model extensions made at the top level of the user profile to be added or updated via the _additions_ map. These are only passed down to the outbound integration service and are **not** stored in DBS. Note that as per the empty request body defined, this endpoint **cannot** be used to update any other profile data. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public replaceOwnUserProfileAttributes(requestParameters: ReplaceOwnUserProfileAttributesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Replace own User Profile\n     * Replace User Profile by User internal ID Serves as an extension point to allow any data model extensions made at the top level of the user profile to be added or updated via the _additions_ map. These are only passed down to the outbound integration service and are **not** stored in DBS. Note that as per the empty request body defined, this endpoint **cannot** be used to update any other profile data. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public replaceOwnUserProfileAttributes(requestParameters: ReplaceOwnUserProfileAttributesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Replace own User Profile\n     * Replace User Profile by User internal ID Serves as an extension point to allow any data model extensions made at the top level of the user profile to be added or updated via the _additions_ map. These are only passed down to the outbound integration service and are **not** stored in DBS. Note that as per the empty request body defined, this endpoint **cannot** be used to update any other profile data. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public replaceOwnUserProfileAttributes(requestParameters: ReplaceOwnUserProfileAttributesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Replace own User Profile\n     * Replace User Profile by User internal ID Serves as an extension point to allow any data model extensions made at the top level of the user profile to be added or updated via the _additions_ map. These are only passed down to the outbound integration service and are **not** stored in DBS. Note that as per the empty request body defined, this endpoint **cannot** be used to update any other profile data. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public replaceOwnUserProfileAttributes(requestParameters: ReplaceOwnUserProfileAttributesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n        if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n            throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceOwnUserProfileAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile`,\n            _replaceUserProfileAttributes,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public replaceOwnUserProfileAttributesUrl(requestParameters: ReplaceOwnUserProfileAttributesRequestParams): string {\n        const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n        if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n            throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceOwnUserProfileAttributes.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile`;\n    }\n\n    /**\n     * Replace User Profile Attributes by User internal ID\n     * Replace User Profile by User internal ID Serves as an extension point to allow any data model extensions made at the top level of the user profile to be added or updated via the _additions_ map. These are only passed down to the outbound integration service and are **not** stored in DBS. Note that as per the empty request body defined, this endpoint **cannot** be used to update any other profile data. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public replaceUserProfileAttributes(requestParameters: ReplaceUserProfileAttributesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Replace User Profile Attributes by User internal ID\n     * Replace User Profile by User internal ID Serves as an extension point to allow any data model extensions made at the top level of the user profile to be added or updated via the _additions_ map. These are only passed down to the outbound integration service and are **not** stored in DBS. Note that as per the empty request body defined, this endpoint **cannot** be used to update any other profile data. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public replaceUserProfileAttributes(requestParameters: ReplaceUserProfileAttributesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Replace User Profile Attributes by User internal ID\n     * Replace User Profile by User internal ID Serves as an extension point to allow any data model extensions made at the top level of the user profile to be added or updated via the _additions_ map. These are only passed down to the outbound integration service and are **not** stored in DBS. Note that as per the empty request body defined, this endpoint **cannot** be used to update any other profile data. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public replaceUserProfileAttributes(requestParameters: ReplaceUserProfileAttributesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Replace User Profile Attributes by User internal ID\n     * Replace User Profile by User internal ID Serves as an extension point to allow any data model extensions made at the top level of the user profile to be added or updated via the _additions_ map. These are only passed down to the outbound integration service and are **not** stored in DBS. Note that as per the empty request body defined, this endpoint **cannot** be used to update any other profile data. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public replaceUserProfileAttributes(requestParameters: ReplaceUserProfileAttributesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling replaceUserProfileAttributes.');\n        }\n        const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n        if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n            throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceUserProfileAttributes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`,\n            _replaceUserProfileAttributes,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public replaceUserProfileAttributesUrl(requestParameters: ReplaceUserProfileAttributesRequestParams): string {\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling replaceUserProfileAttributes.');\n        }\n        const _replaceUserProfileAttributes = requestParameters[\"replaceUserProfileAttributes\"];\n        if (_replaceUserProfileAttributes === null || _replaceUserProfileAttributes === undefined) {\n            throw new Error('Required parameter replaceUserProfileAttributes was null or undefined when calling replaceUserProfileAttributes.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile`;\n    }\n\n    /**\n     * Updates Electronic Address by its unique key\n     * Modifies an Electronic Address by its unique key and the internal ID of the user associated with this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateElectronicAddress(requestParameters: UpdateElectronicAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Updates Electronic Address by its unique key\n     * Modifies an Electronic Address by its unique key and the internal ID of the user associated with this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateElectronicAddress(requestParameters: UpdateElectronicAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Updates Electronic Address by its unique key\n     * Modifies an Electronic Address by its unique key and the internal ID of the user associated with this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateElectronicAddress(requestParameters: UpdateElectronicAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Updates Electronic Address by its unique key\n     * Modifies an Electronic Address by its unique key and the internal ID of the user associated with this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateElectronicAddress(requestParameters: UpdateElectronicAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling updateElectronicAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`,\n            _electronicAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateElectronicAddressUrl(requestParameters: UpdateElectronicAddressRequestParams): string {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateElectronicAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updateElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling updateElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n\n    /**\n     * Updates own Electronic Address by its unique key\n     * Modifies an Electronic Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnElectronicAddress(requestParameters: UpdateOwnElectronicAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Updates own Electronic Address by its unique key\n     * Modifies an Electronic Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnElectronicAddress(requestParameters: UpdateOwnElectronicAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Updates own Electronic Address by its unique key\n     * Modifies an Electronic Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnElectronicAddress(requestParameters: UpdateOwnElectronicAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Updates own Electronic Address by its unique key\n     * Modifies an Electronic Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnElectronicAddress(requestParameters: UpdateOwnElectronicAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateOwnElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling updateOwnElectronicAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`,\n            _electronicAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateOwnElectronicAddressUrl(requestParameters: UpdateOwnElectronicAddressRequestParams): string {\n        const _electronicAddressKey = requestParameters[\"electronicAddressKey\"];\n        if (_electronicAddressKey === null || _electronicAddressKey === undefined) {\n            throw new Error('Required parameter electronicAddressKey was null or undefined when calling updateOwnElectronicAddress.');\n        }\n        const _electronicAddress = requestParameters[\"electronicAddress\"];\n        if (_electronicAddress === null || _electronicAddress === undefined) {\n            throw new Error('Required parameter electronicAddress was null or undefined when calling updateOwnElectronicAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/electronic-addresses/${encodeURIComponent(String(_electronicAddressKey))}`;\n    }\n\n    /**\n     * Updates own Phone Address by its unique key\n     * Modifies a Phone Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnPhoneAddress(requestParameters: UpdateOwnPhoneAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Updates own Phone Address by its unique key\n     * Modifies a Phone Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnPhoneAddress(requestParameters: UpdateOwnPhoneAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Updates own Phone Address by its unique key\n     * Modifies a Phone Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnPhoneAddress(requestParameters: UpdateOwnPhoneAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Updates own Phone Address by its unique key\n     * Modifies a Phone Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnPhoneAddress(requestParameters: UpdateOwnPhoneAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling updateOwnPhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling updateOwnPhoneAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`,\n            _phoneAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateOwnPhoneAddressUrl(requestParameters: UpdateOwnPhoneAddressRequestParams): string {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling updateOwnPhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling updateOwnPhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n\n    /**\n     * Edits own Postal Address by its unique key\n     * Modifies a Postal Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnPostalAddress(requestParameters: UpdateOwnPostalAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Edits own Postal Address by its unique key\n     * Modifies a Postal Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnPostalAddress(requestParameters: UpdateOwnPostalAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Edits own Postal Address by its unique key\n     * Modifies a Postal Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnPostalAddress(requestParameters: UpdateOwnPostalAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Edits own Postal Address by its unique key\n     * Modifies a Postal Address by its unique key and the authenticated user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOwnPostalAddress(requestParameters: UpdateOwnPostalAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling updateOwnPostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling updateOwnPostalAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`,\n            _postalAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateOwnPostalAddressUrl(requestParameters: UpdateOwnPostalAddressRequestParams): string {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling updateOwnPostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling updateOwnPostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/me/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n\n    /**\n     * Update user phone number\n     * Updates a phone number for a user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updatePhoneAddress(requestParameters: UpdatePhoneAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Update user phone number\n     * Updates a phone number for a user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updatePhoneAddress(requestParameters: UpdatePhoneAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Update user phone number\n     * Updates a phone number for a user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updatePhoneAddress(requestParameters: UpdatePhoneAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Update user phone number\n     * Updates a phone number for a user. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updatePhoneAddress(requestParameters: UpdatePhoneAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling updatePhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updatePhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling updatePhoneAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`,\n            _phoneAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updatePhoneAddressUrl(requestParameters: UpdatePhoneAddressRequestParams): string {\n        const _phoneAddressKey = requestParameters[\"phoneAddressKey\"];\n        if (_phoneAddressKey === null || _phoneAddressKey === undefined) {\n            throw new Error('Required parameter phoneAddressKey was null or undefined when calling updatePhoneAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updatePhoneAddress.');\n        }\n        const _phoneAddress = requestParameters[\"phoneAddress\"];\n        if (_phoneAddress === null || _phoneAddress === undefined) {\n            throw new Error('Required parameter phoneAddress was null or undefined when calling updatePhoneAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/phone-addresses/${encodeURIComponent(String(_phoneAddressKey))}`;\n    }\n\n    /**\n     * Edit Postal Address by its unique key\n     * Modifies a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updatePostalAddress(requestParameters: UpdatePostalAddressRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * Edit Postal Address by its unique key\n     * Modifies a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updatePostalAddress(requestParameters: UpdatePostalAddressRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * Edit Postal Address by its unique key\n     * Modifies a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updatePostalAddress(requestParameters: UpdatePostalAddressRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * Edit Postal Address by its unique key\n     * Modifies a Postal Address by its unique key and the internal ID of the user associated to this profile. \n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updatePostalAddress(requestParameters: UpdatePostalAddressRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling updatePostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updatePostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling updatePostalAddress.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`,\n            _postalAddress,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updatePostalAddressUrl(requestParameters: UpdatePostalAddressRequestParams): string {\n        const _postalAddressKey = requestParameters[\"postalAddressKey\"];\n        if (_postalAddressKey === null || _postalAddressKey === undefined) {\n            throw new Error('Required parameter postalAddressKey was null or undefined when calling updatePostalAddress.');\n        }\n        const _internalId = requestParameters[\"internalId\"];\n        if (_internalId === null || _internalId === undefined) {\n            throw new Error('Required parameter internalId was null or undefined when calling updatePostalAddress.');\n        }\n        const _postalAddress = requestParameters[\"postalAddress\"];\n        if (_postalAddress === null || _postalAddress === undefined) {\n            throw new Error('Required parameter postalAddress was null or undefined when calling updatePostalAddress.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/users/${encodeURIComponent(String(_internalId))}/profile/postal-addresses/${encodeURIComponent(String(_postalAddressKey))}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/electronic-addresses URL pattern\n*/\nexport const UserProfileManagementServiceAddElectronicAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 201,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/electronic-addresses URL pattern\n*/\nexport const UserProfileManagementServiceAddOwnElectronicAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 201,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/phone-addresses URL pattern\n*/\nexport const UserProfileManagementServiceAddOwnPhoneAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 201,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/postal-addresses URL pattern\n*/\nexport const UserProfileManagementServiceAddOwnPostalAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 201,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/phone-addresses URL pattern\n*/\nexport const UserProfileManagementServiceAddPhoneAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 201,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/postal-addresses URL pattern\n*/\nexport const UserProfileManagementServiceAddPostalAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n        method: \"POST\",\n        responses: [\n                {\n                status: 201,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceDeleteElectronicAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceDeleteOwnElectronicAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceDeleteOwnPhoneAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/postal-addresses/{postalAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceDeleteOwnPostalAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceDeletePhoneAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceDeletePostalAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceGetElectronicAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n  \"type\" : \"E_MAIL\",\n  \"primary\" : true,\n  \"address\" : \"test@tester.com\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"address\" : \"address\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"type\" : \"type\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/electronic-addresses URL pattern\n*/\nexport const UserProfileManagementServiceGetElectronicAddressesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"electronic-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"E_MAIL\",\n    \"primary\" : true,\n    \"address\" : \"test@tester.com\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"PERSONAL\",\n    \"primary\" : false,\n    \"address\" : \"test_personal@tester.com\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceGetOwnElectronicAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n  \"type\" : \"E_MAIL\",\n  \"primary\" : true,\n  \"address\" : \"test@tester.com\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"address\" : \"address\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"type\" : \"type\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/electronic-addresses URL pattern\n*/\nexport const UserProfileManagementServiceGetOwnElectronicAddressesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"electronic-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"E_MAIL\",\n    \"primary\" : true,\n    \"address\" : \"test@tester.com\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"PERSONAL\",\n    \"primary\" : false,\n    \"address\" : \"test_personal@tester.com\"\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"electronic-addresses\" : [ {\n    \"address\" : \"address\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"address\" : \"address\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceGetOwnPhoneAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n  \"type\" : \"LAND_LINE\",\n  \"primary\" : false,\n  \"number\" : \"02920 671937\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"number\" : \"number\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"type\" : \"type\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/phone-addresses URL pattern\n*/\nexport const UserProfileManagementServiceGetOwnPhoneAddressesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"phone-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"MOBILE\",\n    \"primary\" : true,\n    \"number\" : \"07717 371949\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"LAND_LINE\",\n    \"primary\" : false,\n    \"number\" : \"02920 671937\"\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"phone-addresses\" : [ {\n    \"number\" : \"number\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"number\" : \"number\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ],\n  \"additions\" : {\n    \"key\" : \"additions\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/postal-addresses/{postalAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceGetOwnPostalAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n  \"type\" : \"HOME\",\n  \"primary\" : true,\n  \"addressLine\" : \"2 Hertsmere Rd\",\n  \"streetName\" : \"Canary Wharf\",\n  \"townName\" : \"London\",\n  \"postalCode\" : \"E14 4AB\",\n  \"country\" : \"GB\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"country\" : \"country\",\n  \"townName\" : \"townName\",\n  \"countrySubDivision\" : \"countrySubDivision\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"postalCode\" : \"postalCode\",\n  \"subDepartment\" : \"subDepartment\",\n  \"type\" : \"type\",\n  \"addressLine\" : \"addressLine\",\n  \"streetName\" : \"streetName\",\n  \"buildingNumber\" : \"buildingNumber\",\n  \"department\" : \"department\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/postal-addresses URL pattern\n*/\nexport const UserProfileManagementServiceGetOwnPostalAddressesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"postal-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"BUSINESS\",\n    \"primary\" : false,\n    \"addressLine\" : \"The Bonded Warehouse\",\n    \"streetName\" : \"Atlantic Wharf\",\n    \"townName\" : \"Cardiff\",\n    \"postalCode\" : \"CF10 4HE\",\n    \"country\" : \"GB\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"HOME\",\n    \"primary\" : true,\n    \"addressLine\" : \"2 Hertsmere Rd\",\n    \"streetName\" : \"Canary Wharf\",\n    \"townName\" : \"London\",\n    \"postalCode\" : \"E14 4AB\"\n  } ],\n  \"country\" : \"GB\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"postal-addresses\" : [ {\n    \"country\" : \"country\",\n    \"townName\" : \"townName\",\n    \"countrySubDivision\" : \"countrySubDivision\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"postalCode\" : \"postalCode\",\n    \"subDepartment\" : \"subDepartment\",\n    \"type\" : \"type\",\n    \"addressLine\" : \"addressLine\",\n    \"streetName\" : \"streetName\",\n    \"buildingNumber\" : \"buildingNumber\",\n    \"department\" : \"department\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"country\" : \"country\",\n    \"townName\" : \"townName\",\n    \"countrySubDivision\" : \"countrySubDivision\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"postalCode\" : \"postalCode\",\n    \"subDepartment\" : \"subDepartment\",\n    \"type\" : \"type\",\n    \"addressLine\" : \"addressLine\",\n    \"streetName\" : \"streetName\",\n    \"buildingNumber\" : \"buildingNumber\",\n    \"department\" : \"department\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile URL pattern\n*/\nexport const UserProfileManagementServiceGetOwnUserProfileMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"fullName\" : \"John Doe\",\n  \"phone-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"MOBILE\",\n    \"primary\" : true,\n    \"number\" : \"07717 371949\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"LAND_LINE\",\n    \"primary\" : false,\n    \"number\" : \"02920 671937\"\n  } ],\n  \"electronic-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"E_MAIL\",\n    \"primary\" : true,\n    \"address\" : \"test@tester.com\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"PERSONAL\",\n    \"primary\" : false,\n    \"address\" : \"test_personal@tester.com\"\n  } ],\n  \"postal-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"BUSINESS\",\n    \"primary\" : false,\n    \"addressLine\" : \"The Bonded Warehouse\",\n    \"streetName\" : \"Atlantic Wharf\",\n    \"townName\" : \"Cardiff\",\n    \"postalCode\" : \"CF10 4HE\",\n    \"country\" : \"GB\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"HOME\",\n    \"primary\" : true,\n    \"addressLine\" : \"2 Hertsmere Rd\",\n    \"streetName\" : \"Canary Wharf\",\n    \"townName\" : \"London\",\n    \"postalCode\" : \"E14 4AB\",\n    \"country\" : \"GB\"\n  } ]\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"phone-addresses\" : [ {\n    \"number\" : \"number\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"number\" : \"number\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ],\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"electronic-addresses\" : [ {\n    \"address\" : \"address\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"address\" : \"address\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ],\n  \"fullName\" : \"fullName\",\n  \"postal-addresses\" : [ {\n    \"country\" : \"country\",\n    \"townName\" : \"townName\",\n    \"countrySubDivision\" : \"countrySubDivision\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"postalCode\" : \"postalCode\",\n    \"subDepartment\" : \"subDepartment\",\n    \"type\" : \"type\",\n    \"addressLine\" : \"addressLine\",\n    \"streetName\" : \"streetName\",\n    \"buildingNumber\" : \"buildingNumber\",\n    \"department\" : \"department\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"country\" : \"country\",\n    \"townName\" : \"townName\",\n    \"countrySubDivision\" : \"countrySubDivision\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"postalCode\" : \"postalCode\",\n    \"subDepartment\" : \"subDepartment\",\n    \"type\" : \"type\",\n    \"addressLine\" : \"addressLine\",\n    \"streetName\" : \"streetName\",\n    \"buildingNumber\" : \"buildingNumber\",\n    \"department\" : \"department\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceGetPhoneAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n  \"type\" : \"LAND_LINE\",\n  \"primary\" : false,\n  \"number\" : \"02920 671937\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"number\" : \"number\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"type\" : \"type\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/phone-addresses URL pattern\n*/\nexport const UserProfileManagementServiceGetPhoneAddressesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"phone-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"MOBILE\",\n    \"primary\" : true,\n    \"number\" : \"07717 371949\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"LAND_LINE\",\n    \"primary\" : false,\n    \"number\" : \"02920 671937\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceGetPostalAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n  \"type\" : \"HOME\",\n  \"primary\" : true,\n  \"addressLine\" : \"2 Hertsmere Rd\",\n  \"streetName\" : \"Canary Wharf\",\n  \"townName\" : \"London\",\n  \"postalCode\" : \"E14 4AB\",\n  \"country\" : \"GB\"\n}\n                },\n                {\n                    status: 200,\n                    body: {\n  \"country\" : \"country\",\n  \"townName\" : \"townName\",\n  \"countrySubDivision\" : \"countrySubDivision\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"postalCode\" : \"postalCode\",\n  \"subDepartment\" : \"subDepartment\",\n  \"type\" : \"type\",\n  \"addressLine\" : \"addressLine\",\n  \"streetName\" : \"streetName\",\n  \"buildingNumber\" : \"buildingNumber\",\n  \"department\" : \"department\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/postal-addresses URL pattern\n*/\nexport const UserProfileManagementServiceGetPostalAddressesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"postal-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"BUSINESS\",\n    \"primary\" : false,\n    \"addressLine\" : \"The Bonded Warehouse\",\n    \"streetName\" : \"Atlantic Wharf\",\n    \"townName\" : \"Cardiff\",\n    \"postalCode\" : \"CF10 4HE\",\n    \"country\" : \"GB\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"HOME\",\n    \"primary\" : true,\n    \"addressLine\" : \"2 Hertsmere Rd\",\n    \"streetName\" : \"Canary Wharf\",\n    \"townName\" : \"London\",\n    \"postalCode\" : \"E14 4AB\"\n  } ],\n  \"country\" : \"GB\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile URL pattern\n*/\nexport const UserProfileManagementServiceGetUserProfileMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"fullName\" : \"John Doe\",\n  \"phone-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"MOBILE\",\n    \"primary\" : true,\n    \"number\" : \"07717 371949\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"LAND_LINE\",\n    \"primary\" : false,\n    \"number\" : \"02920 671937\"\n  } ],\n  \"electronic-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"E_MAIL\",\n    \"primary\" : true,\n    \"address\" : \"test@tester.com\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"PERSONAL\",\n    \"primary\" : false,\n    \"address\" : \"test_personal@tester.com\"\n  } ],\n  \"postal-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"BUSINESS\",\n    \"primary\" : false,\n    \"addressLine\" : \"The Bonded Warehouse\",\n    \"streetName\" : \"Atlantic Wharf\",\n    \"townName\" : \"Cardiff\",\n    \"postalCode\" : \"CF10 4HE\",\n    \"country\" : \"GB\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"HOME\",\n    \"primary\" : true,\n    \"addressLine\" : \"2 Hertsmere Rd\",\n    \"streetName\" : \"Canary Wharf\",\n    \"townName\" : \"London\",\n    \"postalCode\" : \"E14 4AB\",\n    \"country\" : \"GB\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile URL pattern\n*/\nexport const UserProfileManagementServiceReplaceOwnUserProfileAttributesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile URL pattern\n*/\nexport const UserProfileManagementServiceReplaceUserProfileAttributesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceUpdateElectronicAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceUpdateOwnElectronicAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceUpdateOwnPhoneAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/me/profile/postal-addresses/{postalAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceUpdateOwnPostalAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceUpdatePhoneAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey} URL pattern\n*/\nexport const UserProfileManagementServiceUpdatePostalAddressMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"PUT\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n    ]\n}]);\n\nexport const UserProfileManagementServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 201,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 201,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 201,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 201,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 201,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n        method: \"POST\",\n        responses: [\n\n        {\n          status: 201,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n  \"type\" : \"E_MAIL\",\n  \"primary\" : true,\n  \"address\" : \"test@tester.com\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"address\" : \"address\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"type\" : \"type\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"electronic-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"E_MAIL\",\n    \"primary\" : true,\n    \"address\" : \"test@tester.com\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"PERSONAL\",\n    \"primary\" : false,\n    \"address\" : \"test_personal@tester.com\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n  \"type\" : \"E_MAIL\",\n  \"primary\" : true,\n  \"address\" : \"test@tester.com\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"address\" : \"address\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"type\" : \"type\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"electronic-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"E_MAIL\",\n    \"primary\" : true,\n    \"address\" : \"test@tester.com\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"PERSONAL\",\n    \"primary\" : false,\n    \"address\" : \"test_personal@tester.com\"\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"electronic-addresses\" : [ {\n    \"address\" : \"address\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"address\" : \"address\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n  \"type\" : \"LAND_LINE\",\n  \"primary\" : false,\n  \"number\" : \"02920 671937\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"number\" : \"number\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"type\" : \"type\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"phone-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"MOBILE\",\n    \"primary\" : true,\n    \"number\" : \"07717 371949\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"LAND_LINE\",\n    \"primary\" : false,\n    \"number\" : \"02920 671937\"\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"phone-addresses\" : [ {\n    \"number\" : \"number\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"number\" : \"number\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ],\n  \"additions\" : {\n    \"key\" : \"additions\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n  \"type\" : \"HOME\",\n  \"primary\" : true,\n  \"addressLine\" : \"2 Hertsmere Rd\",\n  \"streetName\" : \"Canary Wharf\",\n  \"townName\" : \"London\",\n  \"postalCode\" : \"E14 4AB\",\n  \"country\" : \"GB\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"country\" : \"country\",\n  \"townName\" : \"townName\",\n  \"countrySubDivision\" : \"countrySubDivision\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"postalCode\" : \"postalCode\",\n  \"subDepartment\" : \"subDepartment\",\n  \"type\" : \"type\",\n  \"addressLine\" : \"addressLine\",\n  \"streetName\" : \"streetName\",\n  \"buildingNumber\" : \"buildingNumber\",\n  \"department\" : \"department\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"postal-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"BUSINESS\",\n    \"primary\" : false,\n    \"addressLine\" : \"The Bonded Warehouse\",\n    \"streetName\" : \"Atlantic Wharf\",\n    \"townName\" : \"Cardiff\",\n    \"postalCode\" : \"CF10 4HE\",\n    \"country\" : \"GB\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"HOME\",\n    \"primary\" : true,\n    \"addressLine\" : \"2 Hertsmere Rd\",\n    \"streetName\" : \"Canary Wharf\",\n    \"townName\" : \"London\",\n    \"postalCode\" : \"E14 4AB\"\n  } ],\n  \"country\" : \"GB\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"postal-addresses\" : [ {\n    \"country\" : \"country\",\n    \"townName\" : \"townName\",\n    \"countrySubDivision\" : \"countrySubDivision\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"postalCode\" : \"postalCode\",\n    \"subDepartment\" : \"subDepartment\",\n    \"type\" : \"type\",\n    \"addressLine\" : \"addressLine\",\n    \"streetName\" : \"streetName\",\n    \"buildingNumber\" : \"buildingNumber\",\n    \"department\" : \"department\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"country\" : \"country\",\n    \"townName\" : \"townName\",\n    \"countrySubDivision\" : \"countrySubDivision\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"postalCode\" : \"postalCode\",\n    \"subDepartment\" : \"subDepartment\",\n    \"type\" : \"type\",\n    \"addressLine\" : \"addressLine\",\n    \"streetName\" : \"streetName\",\n    \"buildingNumber\" : \"buildingNumber\",\n    \"department\" : \"department\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"fullName\" : \"John Doe\",\n  \"phone-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"MOBILE\",\n    \"primary\" : true,\n    \"number\" : \"07717 371949\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"LAND_LINE\",\n    \"primary\" : false,\n    \"number\" : \"02920 671937\"\n  } ],\n  \"electronic-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"E_MAIL\",\n    \"primary\" : true,\n    \"address\" : \"test@tester.com\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"PERSONAL\",\n    \"primary\" : false,\n    \"address\" : \"test_personal@tester.com\"\n  } ],\n  \"postal-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"BUSINESS\",\n    \"primary\" : false,\n    \"addressLine\" : \"The Bonded Warehouse\",\n    \"streetName\" : \"Atlantic Wharf\",\n    \"townName\" : \"Cardiff\",\n    \"postalCode\" : \"CF10 4HE\",\n    \"country\" : \"GB\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"HOME\",\n    \"primary\" : true,\n    \"addressLine\" : \"2 Hertsmere Rd\",\n    \"streetName\" : \"Canary Wharf\",\n    \"townName\" : \"London\",\n    \"postalCode\" : \"E14 4AB\",\n    \"country\" : \"GB\"\n  } ]\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"phone-addresses\" : [ {\n    \"number\" : \"number\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"number\" : \"number\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ],\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"electronic-addresses\" : [ {\n    \"address\" : \"address\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"address\" : \"address\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"type\" : \"type\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ],\n  \"fullName\" : \"fullName\",\n  \"postal-addresses\" : [ {\n    \"country\" : \"country\",\n    \"townName\" : \"townName\",\n    \"countrySubDivision\" : \"countrySubDivision\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"postalCode\" : \"postalCode\",\n    \"subDepartment\" : \"subDepartment\",\n    \"type\" : \"type\",\n    \"addressLine\" : \"addressLine\",\n    \"streetName\" : \"streetName\",\n    \"buildingNumber\" : \"buildingNumber\",\n    \"department\" : \"department\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  }, {\n    \"country\" : \"country\",\n    \"townName\" : \"townName\",\n    \"countrySubDivision\" : \"countrySubDivision\",\n    \"additions\" : {\n      \"key\" : \"additions\"\n    },\n    \"postalCode\" : \"postalCode\",\n    \"subDepartment\" : \"subDepartment\",\n    \"type\" : \"type\",\n    \"addressLine\" : \"addressLine\",\n    \"streetName\" : \"streetName\",\n    \"buildingNumber\" : \"buildingNumber\",\n    \"department\" : \"department\",\n    \"key\" : \"key\",\n    \"primary\" : true\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n  \"type\" : \"LAND_LINE\",\n  \"primary\" : false,\n  \"number\" : \"02920 671937\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"number\" : \"number\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"type\" : \"type\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"phone-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"MOBILE\",\n    \"primary\" : true,\n    \"number\" : \"07717 371949\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"LAND_LINE\",\n    \"primary\" : false,\n    \"number\" : \"02920 671937\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n  \"type\" : \"HOME\",\n  \"primary\" : true,\n  \"addressLine\" : \"2 Hertsmere Rd\",\n  \"streetName\" : \"Canary Wharf\",\n  \"townName\" : \"London\",\n  \"postalCode\" : \"E14 4AB\",\n  \"country\" : \"GB\"\n}\n            },\n            {\n                status: 200,\n                body: {\n  \"country\" : \"country\",\n  \"townName\" : \"townName\",\n  \"countrySubDivision\" : \"countrySubDivision\",\n  \"additions\" : {\n    \"key\" : \"additions\"\n  },\n  \"postalCode\" : \"postalCode\",\n  \"subDepartment\" : \"subDepartment\",\n  \"type\" : \"type\",\n  \"addressLine\" : \"addressLine\",\n  \"streetName\" : \"streetName\",\n  \"buildingNumber\" : \"buildingNumber\",\n  \"department\" : \"department\",\n  \"key\" : \"key\",\n  \"primary\" : true\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"postal-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"BUSINESS\",\n    \"primary\" : false,\n    \"addressLine\" : \"The Bonded Warehouse\",\n    \"streetName\" : \"Atlantic Wharf\",\n    \"townName\" : \"Cardiff\",\n    \"postalCode\" : \"CF10 4HE\",\n    \"country\" : \"GB\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"HOME\",\n    \"primary\" : true,\n    \"addressLine\" : \"2 Hertsmere Rd\",\n    \"streetName\" : \"Canary Wharf\",\n    \"townName\" : \"London\",\n    \"postalCode\" : \"E14 4AB\"\n  } ],\n  \"country\" : \"GB\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"fullName\" : \"John Doe\",\n  \"phone-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"MOBILE\",\n    \"primary\" : true,\n    \"number\" : \"07717 371949\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"LAND_LINE\",\n    \"primary\" : false,\n    \"number\" : \"02920 671937\"\n  } ],\n  \"electronic-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"E_MAIL\",\n    \"primary\" : true,\n    \"address\" : \"test@tester.com\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"PERSONAL\",\n    \"primary\" : false,\n    \"address\" : \"test_personal@tester.com\"\n  } ],\n  \"postal-addresses\" : [ {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e1\",\n    \"type\" : \"BUSINESS\",\n    \"primary\" : false,\n    \"addressLine\" : \"The Bonded Warehouse\",\n    \"streetName\" : \"Atlantic Wharf\",\n    \"townName\" : \"Cardiff\",\n    \"postalCode\" : \"CF10 4HE\",\n    \"country\" : \"GB\"\n  }, {\n    \"key\" : \"cb7653b5-31b2-481d-b9b5-aa4b415c96e2\",\n    \"type\" : \"HOME\",\n    \"primary\" : true,\n    \"addressLine\" : \"2 Hertsmere Rd\",\n    \"streetName\" : \"Canary Wharf\",\n    \"townName\" : \"London\",\n    \"postalCode\" : \"E14 4AB\",\n    \"country\" : \"GB\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}\",\n        method: \"PUT\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["GetIdentity","GetPendingApproval","InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}