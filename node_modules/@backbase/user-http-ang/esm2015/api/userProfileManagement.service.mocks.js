import { createMocks } from '@backbase/foundation-ang/data-http';
export const UserProfileManagementServiceAddElectronicAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceAddOwnElectronicAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceAddOwnPhoneAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceAddOwnPostalAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceAddPhoneAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceAddPostalAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceDeleteElectronicAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceDeleteOwnElectronicAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceDeleteOwnPhoneAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceDeleteOwnPostalAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceDeletePhoneAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceDeletePostalAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetElectronicAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                    "type": "E_MAIL",
                    "primary": true,
                    "address": "test@tester.com"
                }
            },
            {
                status: 200,
                body: {
                    "address": "address",
                    "additions": {
                        "key": "additions"
                    },
                    "type": "type",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetElectronicAddressesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "electronic-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "E_MAIL",
                            "primary": true,
                            "address": "test@tester.com"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "PERSONAL",
                            "primary": false,
                            "address": "test_personal@tester.com"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetOwnElectronicAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                    "type": "E_MAIL",
                    "primary": true,
                    "address": "test@tester.com"
                }
            },
            {
                status: 200,
                body: {
                    "address": "address",
                    "additions": {
                        "key": "additions"
                    },
                    "type": "type",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetOwnElectronicAddressesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "electronic-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "E_MAIL",
                            "primary": true,
                            "address": "test@tester.com"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "PERSONAL",
                            "primary": false,
                            "address": "test_personal@tester.com"
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "electronic-addresses": [{
                            "address": "address",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }, {
                            "address": "address",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetOwnPhoneAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                    "type": "LAND_LINE",
                    "primary": false,
                    "number": "02920 671937"
                }
            },
            {
                status: 200,
                body: {
                    "number": "number",
                    "additions": {
                        "key": "additions"
                    },
                    "type": "type",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetOwnPhoneAddressesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "phone-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "MOBILE",
                            "primary": true,
                            "number": "07717 371949"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "LAND_LINE",
                            "primary": false,
                            "number": "02920 671937"
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "phone-addresses": [{
                            "number": "number",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }, {
                            "number": "number",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }],
                    "additions": {
                        "key": "additions"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetOwnPostalAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                    "type": "HOME",
                    "primary": true,
                    "addressLine": "2 Hertsmere Rd",
                    "streetName": "Canary Wharf",
                    "townName": "London",
                    "postalCode": "E14 4AB",
                    "country": "GB"
                }
            },
            {
                status: 200,
                body: {
                    "country": "country",
                    "townName": "townName",
                    "countrySubDivision": "countrySubDivision",
                    "additions": {
                        "key": "additions"
                    },
                    "postalCode": "postalCode",
                    "subDepartment": "subDepartment",
                    "type": "type",
                    "addressLine": "addressLine",
                    "streetName": "streetName",
                    "buildingNumber": "buildingNumber",
                    "department": "department",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetOwnPostalAddressesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "postal-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "BUSINESS",
                            "primary": false,
                            "addressLine": "The Bonded Warehouse",
                            "streetName": "Atlantic Wharf",
                            "townName": "Cardiff",
                            "postalCode": "CF10 4HE",
                            "country": "GB"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "HOME",
                            "primary": true,
                            "addressLine": "2 Hertsmere Rd",
                            "streetName": "Canary Wharf",
                            "townName": "London",
                            "postalCode": "E14 4AB"
                        }],
                    "country": "GB"
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "postal-addresses": [{
                            "country": "country",
                            "townName": "townName",
                            "countrySubDivision": "countrySubDivision",
                            "additions": {
                                "key": "additions"
                            },
                            "postalCode": "postalCode",
                            "subDepartment": "subDepartment",
                            "type": "type",
                            "addressLine": "addressLine",
                            "streetName": "streetName",
                            "buildingNumber": "buildingNumber",
                            "department": "department",
                            "key": "key",
                            "primary": true
                        }, {
                            "country": "country",
                            "townName": "townName",
                            "countrySubDivision": "countrySubDivision",
                            "additions": {
                                "key": "additions"
                            },
                            "postalCode": "postalCode",
                            "subDepartment": "subDepartment",
                            "type": "type",
                            "addressLine": "addressLine",
                            "streetName": "streetName",
                            "buildingNumber": "buildingNumber",
                            "department": "department",
                            "key": "key",
                            "primary": true
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetOwnUserProfileMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "fullName": "John Doe",
                    "phone-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "MOBILE",
                            "primary": true,
                            "number": "07717 371949"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "LAND_LINE",
                            "primary": false,
                            "number": "02920 671937"
                        }],
                    "electronic-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "E_MAIL",
                            "primary": true,
                            "address": "test@tester.com"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "PERSONAL",
                            "primary": false,
                            "address": "test_personal@tester.com"
                        }],
                    "postal-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "BUSINESS",
                            "primary": false,
                            "addressLine": "The Bonded Warehouse",
                            "streetName": "Atlantic Wharf",
                            "townName": "Cardiff",
                            "postalCode": "CF10 4HE",
                            "country": "GB"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "HOME",
                            "primary": true,
                            "addressLine": "2 Hertsmere Rd",
                            "streetName": "Canary Wharf",
                            "townName": "London",
                            "postalCode": "E14 4AB",
                            "country": "GB"
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "phone-addresses": [{
                            "number": "number",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }, {
                            "number": "number",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }],
                    "additions": {
                        "key": "additions"
                    },
                    "electronic-addresses": [{
                            "address": "address",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }, {
                            "address": "address",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }],
                    "fullName": "fullName",
                    "postal-addresses": [{
                            "country": "country",
                            "townName": "townName",
                            "countrySubDivision": "countrySubDivision",
                            "additions": {
                                "key": "additions"
                            },
                            "postalCode": "postalCode",
                            "subDepartment": "subDepartment",
                            "type": "type",
                            "addressLine": "addressLine",
                            "streetName": "streetName",
                            "buildingNumber": "buildingNumber",
                            "department": "department",
                            "key": "key",
                            "primary": true
                        }, {
                            "country": "country",
                            "townName": "townName",
                            "countrySubDivision": "countrySubDivision",
                            "additions": {
                                "key": "additions"
                            },
                            "postalCode": "postalCode",
                            "subDepartment": "subDepartment",
                            "type": "type",
                            "addressLine": "addressLine",
                            "streetName": "streetName",
                            "buildingNumber": "buildingNumber",
                            "department": "department",
                            "key": "key",
                            "primary": true
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetPhoneAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                    "type": "LAND_LINE",
                    "primary": false,
                    "number": "02920 671937"
                }
            },
            {
                status: 200,
                body: {
                    "number": "number",
                    "additions": {
                        "key": "additions"
                    },
                    "type": "type",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetPhoneAddressesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "phone-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "MOBILE",
                            "primary": true,
                            "number": "07717 371949"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "LAND_LINE",
                            "primary": false,
                            "number": "02920 671937"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetPostalAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                    "type": "HOME",
                    "primary": true,
                    "addressLine": "2 Hertsmere Rd",
                    "streetName": "Canary Wharf",
                    "townName": "London",
                    "postalCode": "E14 4AB",
                    "country": "GB"
                }
            },
            {
                status: 200,
                body: {
                    "country": "country",
                    "townName": "townName",
                    "countrySubDivision": "countrySubDivision",
                    "additions": {
                        "key": "additions"
                    },
                    "postalCode": "postalCode",
                    "subDepartment": "subDepartment",
                    "type": "type",
                    "addressLine": "addressLine",
                    "streetName": "streetName",
                    "buildingNumber": "buildingNumber",
                    "department": "department",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetPostalAddressesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "postal-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "BUSINESS",
                            "primary": false,
                            "addressLine": "The Bonded Warehouse",
                            "streetName": "Atlantic Wharf",
                            "townName": "Cardiff",
                            "postalCode": "CF10 4HE",
                            "country": "GB"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "HOME",
                            "primary": true,
                            "addressLine": "2 Hertsmere Rd",
                            "streetName": "Canary Wharf",
                            "townName": "London",
                            "postalCode": "E14 4AB"
                        }],
                    "country": "GB"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceGetUserProfileMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "fullName": "John Doe",
                    "phone-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "MOBILE",
                            "primary": true,
                            "number": "07717 371949"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "LAND_LINE",
                            "primary": false,
                            "number": "02920 671937"
                        }],
                    "electronic-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "E_MAIL",
                            "primary": true,
                            "address": "test@tester.com"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "PERSONAL",
                            "primary": false,
                            "address": "test_personal@tester.com"
                        }],
                    "postal-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "BUSINESS",
                            "primary": false,
                            "addressLine": "The Bonded Warehouse",
                            "streetName": "Atlantic Wharf",
                            "townName": "Cardiff",
                            "postalCode": "CF10 4HE",
                            "country": "GB"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "HOME",
                            "primary": true,
                            "addressLine": "2 Hertsmere Rd",
                            "streetName": "Canary Wharf",
                            "townName": "London",
                            "postalCode": "E14 4AB",
                            "country": "GB"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceReplaceOwnUserProfileAttributesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceReplaceUserProfileAttributesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceUpdateElectronicAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceUpdateOwnElectronicAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceUpdateOwnPhoneAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceUpdateOwnPostalAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceUpdatePhoneAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceUpdatePostalAddressMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    }]);
export const UserProfileManagementServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses",
        method: "POST",
        responses: [
            {
                status: 201,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}",
        method: "DELETE",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                    "type": "E_MAIL",
                    "primary": true,
                    "address": "test@tester.com"
                }
            },
            {
                status: 200,
                body: {
                    "address": "address",
                    "additions": {
                        "key": "additions"
                    },
                    "type": "type",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "electronic-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "E_MAIL",
                            "primary": true,
                            "address": "test@tester.com"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "PERSONAL",
                            "primary": false,
                            "address": "test_personal@tester.com"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                    "type": "E_MAIL",
                    "primary": true,
                    "address": "test@tester.com"
                }
            },
            {
                status: 200,
                body: {
                    "address": "address",
                    "additions": {
                        "key": "additions"
                    },
                    "type": "type",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "electronic-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "E_MAIL",
                            "primary": true,
                            "address": "test@tester.com"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "PERSONAL",
                            "primary": false,
                            "address": "test_personal@tester.com"
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "electronic-addresses": [{
                            "address": "address",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }, {
                            "address": "address",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                    "type": "LAND_LINE",
                    "primary": false,
                    "number": "02920 671937"
                }
            },
            {
                status: 200,
                body: {
                    "number": "number",
                    "additions": {
                        "key": "additions"
                    },
                    "type": "type",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "phone-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "MOBILE",
                            "primary": true,
                            "number": "07717 371949"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "LAND_LINE",
                            "primary": false,
                            "number": "02920 671937"
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "phone-addresses": [{
                            "number": "number",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }, {
                            "number": "number",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }],
                    "additions": {
                        "key": "additions"
                    }
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                    "type": "HOME",
                    "primary": true,
                    "addressLine": "2 Hertsmere Rd",
                    "streetName": "Canary Wharf",
                    "townName": "London",
                    "postalCode": "E14 4AB",
                    "country": "GB"
                }
            },
            {
                status: 200,
                body: {
                    "country": "country",
                    "townName": "townName",
                    "countrySubDivision": "countrySubDivision",
                    "additions": {
                        "key": "additions"
                    },
                    "postalCode": "postalCode",
                    "subDepartment": "subDepartment",
                    "type": "type",
                    "addressLine": "addressLine",
                    "streetName": "streetName",
                    "buildingNumber": "buildingNumber",
                    "department": "department",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "postal-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "BUSINESS",
                            "primary": false,
                            "addressLine": "The Bonded Warehouse",
                            "streetName": "Atlantic Wharf",
                            "townName": "Cardiff",
                            "postalCode": "CF10 4HE",
                            "country": "GB"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "HOME",
                            "primary": true,
                            "addressLine": "2 Hertsmere Rd",
                            "streetName": "Canary Wharf",
                            "townName": "London",
                            "postalCode": "E14 4AB"
                        }],
                    "country": "GB"
                }
            },
            {
                status: 200,
                body: {
                    "additions": {
                        "key": "additions"
                    },
                    "postal-addresses": [{
                            "country": "country",
                            "townName": "townName",
                            "countrySubDivision": "countrySubDivision",
                            "additions": {
                                "key": "additions"
                            },
                            "postalCode": "postalCode",
                            "subDepartment": "subDepartment",
                            "type": "type",
                            "addressLine": "addressLine",
                            "streetName": "streetName",
                            "buildingNumber": "buildingNumber",
                            "department": "department",
                            "key": "key",
                            "primary": true
                        }, {
                            "country": "country",
                            "townName": "townName",
                            "countrySubDivision": "countrySubDivision",
                            "additions": {
                                "key": "additions"
                            },
                            "postalCode": "postalCode",
                            "subDepartment": "subDepartment",
                            "type": "type",
                            "addressLine": "addressLine",
                            "streetName": "streetName",
                            "buildingNumber": "buildingNumber",
                            "department": "department",
                            "key": "key",
                            "primary": true
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "fullName": "John Doe",
                    "phone-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "MOBILE",
                            "primary": true,
                            "number": "07717 371949"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "LAND_LINE",
                            "primary": false,
                            "number": "02920 671937"
                        }],
                    "electronic-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "E_MAIL",
                            "primary": true,
                            "address": "test@tester.com"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "PERSONAL",
                            "primary": false,
                            "address": "test_personal@tester.com"
                        }],
                    "postal-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "BUSINESS",
                            "primary": false,
                            "addressLine": "The Bonded Warehouse",
                            "streetName": "Atlantic Wharf",
                            "townName": "Cardiff",
                            "postalCode": "CF10 4HE",
                            "country": "GB"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "HOME",
                            "primary": true,
                            "addressLine": "2 Hertsmere Rd",
                            "streetName": "Canary Wharf",
                            "townName": "London",
                            "postalCode": "E14 4AB",
                            "country": "GB"
                        }]
                }
            },
            {
                status: 200,
                body: {
                    "phone-addresses": [{
                            "number": "number",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }, {
                            "number": "number",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }],
                    "additions": {
                        "key": "additions"
                    },
                    "electronic-addresses": [{
                            "address": "address",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }, {
                            "address": "address",
                            "additions": {
                                "key": "additions"
                            },
                            "type": "type",
                            "key": "key",
                            "primary": true
                        }],
                    "fullName": "fullName",
                    "postal-addresses": [{
                            "country": "country",
                            "townName": "townName",
                            "countrySubDivision": "countrySubDivision",
                            "additions": {
                                "key": "additions"
                            },
                            "postalCode": "postalCode",
                            "subDepartment": "subDepartment",
                            "type": "type",
                            "addressLine": "addressLine",
                            "streetName": "streetName",
                            "buildingNumber": "buildingNumber",
                            "department": "department",
                            "key": "key",
                            "primary": true
                        }, {
                            "country": "country",
                            "townName": "townName",
                            "countrySubDivision": "countrySubDivision",
                            "additions": {
                                "key": "additions"
                            },
                            "postalCode": "postalCode",
                            "subDepartment": "subDepartment",
                            "type": "type",
                            "addressLine": "addressLine",
                            "streetName": "streetName",
                            "buildingNumber": "buildingNumber",
                            "department": "department",
                            "key": "key",
                            "primary": true
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                    "type": "LAND_LINE",
                    "primary": false,
                    "number": "02920 671937"
                }
            },
            {
                status: 200,
                body: {
                    "number": "number",
                    "additions": {
                        "key": "additions"
                    },
                    "type": "type",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "phone-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "MOBILE",
                            "primary": true,
                            "number": "07717 371949"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "LAND_LINE",
                            "primary": false,
                            "number": "02920 671937"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                    "type": "HOME",
                    "primary": true,
                    "addressLine": "2 Hertsmere Rd",
                    "streetName": "Canary Wharf",
                    "townName": "London",
                    "postalCode": "E14 4AB",
                    "country": "GB"
                }
            },
            {
                status: 200,
                body: {
                    "country": "country",
                    "townName": "townName",
                    "countrySubDivision": "countrySubDivision",
                    "additions": {
                        "key": "additions"
                    },
                    "postalCode": "postalCode",
                    "subDepartment": "subDepartment",
                    "type": "type",
                    "addressLine": "addressLine",
                    "streetName": "streetName",
                    "buildingNumber": "buildingNumber",
                    "department": "department",
                    "key": "key",
                    "primary": true
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "postal-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "BUSINESS",
                            "primary": false,
                            "addressLine": "The Bonded Warehouse",
                            "streetName": "Atlantic Wharf",
                            "townName": "Cardiff",
                            "postalCode": "CF10 4HE",
                            "country": "GB"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "HOME",
                            "primary": true,
                            "addressLine": "2 Hertsmere Rd",
                            "streetName": "Canary Wharf",
                            "townName": "London",
                            "postalCode": "E14 4AB"
                        }],
                    "country": "GB"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "fullName": "John Doe",
                    "phone-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "MOBILE",
                            "primary": true,
                            "number": "07717 371949"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "LAND_LINE",
                            "primary": false,
                            "number": "02920 671937"
                        }],
                    "electronic-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "E_MAIL",
                            "primary": true,
                            "address": "test@tester.com"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "PERSONAL",
                            "primary": false,
                            "address": "test_personal@tester.com"
                        }],
                    "postal-addresses": [{
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e1",
                            "type": "BUSINESS",
                            "primary": false,
                            "addressLine": "The Bonded Warehouse",
                            "streetName": "Atlantic Wharf",
                            "townName": "Cardiff",
                            "postalCode": "CF10 4HE",
                            "country": "GB"
                        }, {
                            "key": "cb7653b5-31b2-481d-b9b5-aa4b415c96e2",
                            "type": "HOME",
                            "primary": true,
                            "addressLine": "2 Hertsmere Rd",
                            "streetName": "Canary Wharf",
                            "townName": "London",
                            "postalCode": "E14 4AB",
                            "country": "GB"
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/electronic-addresses/{electronicAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/electronic-addresses/{electronicAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/phone-addresses/{phoneAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/me/profile/postal-addresses/{postalAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/phone-addresses/{phoneAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/users/{internalId}/profile/postal-addresses/{postalAddressKey}",
        method: "PUT",
        responses: [
            {
                status: 204,
                body: ""
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 403,
                body: {
                    "message": "Access to requested resource denied.",
                    "errors": [{
                            "message": "Resource access denied due to an insufficient user quota of {quota}.",
                            "key": "common.api.quota",
                            "context": {
                                "quota": "someQuota"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,