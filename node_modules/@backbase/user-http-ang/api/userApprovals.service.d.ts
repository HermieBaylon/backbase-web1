import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { GetApprovalUserDetails } from '../model/models';
import { UserConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface ApproveApprovalRequestParams {
    ["approvalId"]: string;
}
export interface GetApprovalDetailsRequestParams {
    ["approvalId"]: string;
}
export interface RejectApprovalRequestParams {
    ["approvalId"]: string;
}
export declare class UserApprovalsService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: UserConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: UserConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    approveApproval(requestParameters: ApproveApprovalRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    approveApproval(requestParameters: ApproveApprovalRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    approveApproval(requestParameters: ApproveApprovalRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    approveApprovalUrl(requestParameters: ApproveApprovalRequestParams): string;
    getApprovalDetails(requestParameters: GetApprovalDetailsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<GetApprovalUserDetails>;
    getApprovalDetails(requestParameters: GetApprovalDetailsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<GetApprovalUserDetails>>;
    getApprovalDetails(requestParameters: GetApprovalDetailsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<GetApprovalUserDetails>>;
    getApprovalDetailsUrl(requestParameters: GetApprovalDetailsRequestParams): string;
    rejectApproval(requestParameters: RejectApprovalRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<any>;
    rejectApproval(requestParameters: RejectApprovalRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<any>>;
    rejectApproval(requestParameters: RejectApprovalRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<any>>;
    rejectApprovalUrl(requestParameters: RejectApprovalRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserApprovalsService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<UserApprovalsService>;
}
