{"version":3,"file":"relative-date.pipe.js","sourceRoot":"","sources":["../../../../../../../libs/contact-common-ang/src/lib/pipes/relative-date/relative-date.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;;;AAErD,MAAM,CAAN,IAAY,YAIX;AAJD,WAAY,YAAY;IACtB,uCAAuB,CAAA;IACvB,+BAAe,CAAA;IACf,qCAAqB,CAAA;AACvB,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;AACD;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AAEH,MAAM,OAAO,gBAAgB;IAG3B,YAA6B,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAFtC,0BAAqB,GAAG,eAAe,CAAC;IAEC,CAAC;IAEnD,SAAS,CAAC,KAAa,EAAE,UAAmB;QAC1C,IAAI,MAAM,CAAC;QAEX,MAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAE/C,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YAClD,KAAK,SAAS;gBACZ,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC;gBAChC,MAAM;YACR,KAAK,KAAK;gBACR,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC;gBAC5B,MAAM;YACR,KAAK,QAAQ;gBACX,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC;gBAC/B,MAAM;YACR;gBACE,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;SACvD;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;;iIA3BU,gBAAgB;+HAAhB,gBAAgB;4FAAhB,gBAAgB;kBAD5B,IAAI;mBAAC,EAAE,IAAI,EAAE,cAAc,EAAE","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { getRelativeDate } from '../../helpers/date';\n\nexport enum RelativeDate {\n  Yesterday = 'Yesterday',\n  Today = 'Today',\n  Tomorrow = 'Tomorrow',\n}\n/**\n * Pipe is used to show the date in a specific format\n *\n * @usageNotes\n *\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *   ],\n *  declarations: RelativeDatePipe\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Can be used in html\n *\n * ```html\n * {{todayDate | relativeDate: 'mediumTime'}}\n * ```\n * @ngModule RelativeDateModule\n */\n@Pipe({ name: 'relativeDate' })\nexport class RelativeDatePipe implements PipeTransform {\n  readonly getRelativeDateHelper = getRelativeDate;\n\n  constructor(private readonly datePipe: DatePipe) {}\n\n  transform(value: string, dateFormat?: string) {\n    let result;\n\n    const yesterday = this.getRelativeDateHelper(-1);\n    const today = this.getRelativeDateHelper();\n    const tomorrow = this.getRelativeDateHelper(1);\n\n    switch (new Date(value).toISOString().slice(0, 10)) {\n      case yesterday:\n        result = RelativeDate.Yesterday;\n        break;\n      case today:\n        result = RelativeDate.Today;\n        break;\n      case tomorrow:\n        result = RelativeDate.Tomorrow;\n        break;\n      default:\n        result = this.datePipe.transform(value, dateFormat);\n    }\n\n    return result;\n  }\n}\n"]}