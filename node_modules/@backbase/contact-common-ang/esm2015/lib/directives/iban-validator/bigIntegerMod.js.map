{"version":3,"file":"bigIntegerMod.js","sourceRoot":"","sources":["../../../../../../../libs/contact-common-ang/src/lib/directives/iban-validator/bigIntegerMod.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;GAUG;AACH,eAAe,CAAC,QAAgB,EAAE,OAAe,EAAU,EAAE;IAC3D,IAAI,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE;QACxB,OAAO,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;KACzC;IAED,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;IAE1C,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtC,SAAS,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;QACtC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAChB;IAED,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAE1B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;AACnC,CAAC,CAAC","sourcesContent":["/**\n * Calculates remainder for numbers bigger than 2^53 - 1,\n * not supported in JavaScript.\n *\n * type {function}\n * inner\n *\n * @param  {string} dividend The dividend\n * @param  {number} divisor  The divisor\n * @returns {number}          The remainder\n */\nexport default (dividend: string, divisor: number): number => {\n  if (dividend.length < 10) {\n    return parseInt(dividend, 10) % divisor;\n  }\n\n  let D = dividend.slice(9);\n  let N = dividend.slice(0, 9);\n  let remainder = parseInt(N, 10) % divisor;\n\n  while (D.length > 7) {\n    N = String(remainder) + D.slice(0, 7);\n    remainder = parseInt(N, 10) % divisor;\n    D = D.slice(7);\n  }\n\n  N = String(remainder) + D;\n\n  return parseInt(N, 10) % divisor;\n};\n"]}