import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { addressToString } from '../../helpers/address';
import * as i0 from "@angular/core";
import * as i1 from "../country-item/country-item.component";
import * as i2 from "./contact-full-address.directive";
import * as i3 from "@angular/common";
/**
 * The component is for showing contact full address.
 *
 * The following extension slots are available in this component:
 *  - `ContactFullAddressCustomizableDirective`
 *
 * @see ContactFullAddressCustomizableDirective
 * @usageNotes
 *
 * ### Display contact address data
 *
 * ```html
 *     <bb-contact-full-address [address]="hostRef.address"></bb-contact-full-address>
 * ```
 * @ngModule ContactFullAddressModule
 */
export class ContactFullAddressComponent {
    constructor() {
        this.hostRef = this;
        this.textContent = '';
    }
    /**
     * @param {Address} address containing all the address fields
     */
    set address(address) {
        this.countryCode = address.country;
        this.textContent = `${addressToString(address)}${!!this.countryCode ? ',' : ''}`;
    }
}
/** @nocollapse */ ContactFullAddressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactFullAddressComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ContactFullAddressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ContactFullAddressComponent, selector: "bb-contact-full-address", inputs: { address: "address" }, ngImport: i0, template: `
    <ng-container bbContactFullAddressCustomizable [bbHostRef]="hostRef"></ng-container>
    <ng-template bbContactFullAddressCustomizable let-hostRef>
      <span class="break-word" data-role="contact-details-full-address">
        {{ hostRef.textContent }}
        <ng-container *ngIf="hostRef.countryCode">
          <bb-country-item [code]="hostRef.countryCode"></bb-country-item>
        </ng-container>
      </span>
    </ng-template>
  `, isInline: true, components: [{ type: i1.CountryItemComponent, selector: "bb-country-item", inputs: ["code"] }], directives: [{ type: i2.ContactFullAddressCustomizableDirective, selector: "[bbContactFullAddressCustomizable]" }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactFullAddressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-contact-full-address',
                    template: `
    <ng-container bbContactFullAddressCustomizable [bbHostRef]="hostRef"></ng-container>
    <ng-template bbContactFullAddressCustomizable let-hostRef>
      <span class="break-word" data-role="contact-details-full-address">
        {{ hostRef.textContent }}
        <ng-container *ngIf="hostRef.countryCode">
          <bb-country-item [code]="hostRef.countryCode"></bb-country-item>
        </ng-container>
      </span>
    </ng-template>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { address: [{
                type: Input
            }] } });
//# sourceMappingURL=contact-full-address.component.js.map