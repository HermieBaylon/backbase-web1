{"version":3,"file":"contact-personal-data.component.js","sourceRoot":"","sources":["../../../../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.component.ts","../../../../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlContainer, FormGroup, NgForm } from '@angular/forms';\nimport { Address, ContactItem, InputGroupName, ViewType } from '../../models/types';\nimport { isObjectTruthy } from '../../helpers/address';\n\n/**\n * The component is for showing persons personal data.\n *\n * The following extension slots are available in this component:\n *  - `ContactPersonalDataCustomizableDirective`\n *\n * @see ContactPersonalDataCustomizableDirective\n * @usageNotes\n *\n * ### Display contact personal data\n *\n * ```html\n *    <bb-contact-personal-data\n *      [contact]=\"hostRef.formModel.contact\"\n *      [address]=\"hostRef.contactAddress\"\n *      [viewType]=\"hostRef.contactViewType\"\n *      [isAddContactAddress]= \"hostRef.isAddContactAddress\"\n *      (contactAddressAdd)= \"hostRef.addContactAddress($event)\"\n *      (viewChange)=\"hostRef.changeContactView($event)\">\n *    </bb-contact-personal-data>\n * ```\n * @ngModule ContactPersonalDataModule\n */\n@Component({\n  selector: 'bb-contact-personal-data',\n  templateUrl: './contact-personal-data.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactPersonalDataComponent implements OnInit {\n  hostRef: ContactPersonalDataComponent = this;\n  contactInputGroupName = InputGroupName.CONTACT;\n\n  private originalAddress: Address | undefined;\n\n  /**\n   * View type of the contact address\n   */\n  @Input()\n  viewType!: ViewType;\n  /**\n   * The contact details instance\n   */\n  @Input()\n  contact!: ContactItem;\n  /**\n   * Flag that denotes if contact address should be added\n   */\n  @Input() isAddContactAddress = false;\n  /**\n   * Address details of the contact\n   */\n  @Input()\n  address!: Address;\n  /**\n   * Property meant for forcing change detection when parent changes form state\n   */\n  @Input() forceChangeDetection: unknown;\n  /**\n   * Event emitted when contact add address flag changes\n   */\n  @Output() contactAddressAdd = new EventEmitter<boolean>();\n  /**\n   *\n   * Event emitted when contact address view is changed\n   */\n  @Output() viewChange = new EventEmitter<ViewType>();\n\n  constructor(private readonly ctrlContainer: ControlContainer) {}\n\n  ngOnInit() {\n    if (isObjectTruthy(this.address)) {\n      this.originalAddress = { ...this.address };\n    }\n  }\n  /**\n   * Returns the control of the form\n   *\n   * @param {string} controlName name of a form control\n   * @returns {AbstractControl | null} form control for given name.\n   */\n  getFormControl(controlName: string): AbstractControl | null {\n    const contactInputGroup = (this.ctrlContainer as NgForm).controls[this.contactInputGroupName];\n    if (contactInputGroup) {\n      return (contactInputGroup as FormGroup).controls[controlName];\n    }\n\n    return null;\n  }\n  /**\n   * Resets the control of the form.\n   *\n   * @param {string} controlName name of a form control\n   */\n  reset(controlName: string) {\n    const formControl = this.getFormControl(controlName);\n    if (formControl) {\n      formControl.reset();\n    }\n  }\n  /**\n   * Updates the form status and mark as touched.\n   * Also changes the view to CARD view once done.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressSubmit(controlName: string) {\n    const address = this.getFormControl(controlName);\n    if (address) {\n      address.markAllAsTouched();\n      address.updateValueAndValidity();\n      if (address.valid) {\n        this.originalAddress = { ...address.value };\n        this.viewChange.emit(ViewType.CARD);\n      }\n    }\n  }\n  /**\n   * Emits the contact address add event\n   *\n   * @param {boolean} isAddAddress Emits the contact address add\n   */\n  onAddressAdd(isAddAddress: boolean) {\n    this.contactAddressAdd.emit(isAddAddress);\n  }\n  /**\n   * hanges the view to form.\n   */\n  onAddressEdit() {\n    this.viewChange.emit(ViewType.FORM);\n  }\n  /**\n   * If there is no update then returns to card view.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressDiscard(controlName: string) {\n    if (this.originalAddress) {\n      this.address = { ...this.originalAddress };\n      this.viewChange.emit(ViewType.CARD);\n    } else {\n      this.onAddressDelete(controlName);\n    }\n  }\n  /**\n   * deletes the address and resets the form.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressDelete(controlName: string) {\n    this.originalAddress = undefined;\n    this.contactAddressAdd.emit(false);\n    this.reset(controlName);\n    this.viewChange.emit(ViewType.FORM);\n  }\n}\n","<div>\n  <fieldset [ngModelGroup]=\"'contactDetails'\">\n    <legend class=\"sr-only\" i18n=\"@@contact-personal-data.personalDetailsGroup.title\">Contact details</legend>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label #contactNameLabel id=\"bb-create-contact-name-label\" i18n=\"@@contact-personal-data.contactName.label\"\n          >Name</label\n        >\n        <span class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.accountName.text-support.required.label\">Required</ng-container>)\n        </span>\n        <bb-input-text-ui\n          name=\"name\"\n          class=\"bb-block bb-block--sm\"\n          #contactNameModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.contact.name\"\n          [maxLength]=\"140\"\n          [required]=\"true\"\n          [aria-labelledby]=\"contactNameLabel.id\"\n          aria-describedby=\"fullname-description\"\n          data-role=\"contact-name\"\n          bbNoWhiteSpace\n        >\n        </bb-input-text-ui>\n        <small\n          id=\"fullname-description\"\n          *ngIf=\"!contactNameModel.touched\"\n          class=\"bb-text-support bb-block bb-block--sm\"\n          i18n=\"@@contact-personal-data.contactName.infoText\"\n        >\n          Full name or company name\n        </small>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"contactNameModel.invalid && contactNameModel.touched\"\n        >\n          <ng-container>\n            <span i18n=\"@@contact-personal-data.contactName.minLengthErrorText\" data-role=\"missing-contact-name\"\n              >Full name or company name is required</span\n            >\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg bb-stack__item--align-top col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Contact person\"\n          i18n-label=\"@@contact-personal-data.contactPerson.label\"\n          class=\"bb-stack__item--align-bottom\"\n          data-role=\"contact-person\"\n          [(ngModel)]=\"hostRef.contact.contactPerson\"\n          name=\"contactPerson\"\n          [maxLength]=\"70\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          data-role=\"contact-alias\"\n          label=\"Alias\"\n          i18n-label=\"@@contact-personal-data.contactAlias.label\"\n          [(ngModel)]=\"hostRef.contact.alias\"\n          name=\"alias\"\n          [maxLength]=\"70\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Phone number\"\n          i18n-label=\"@@contact-personal-data.contactPhoneNumber.label\"\n          data-role=\"contact-phone-number\"\n          [(ngModel)]=\"hostRef.contact.phoneNumber\"\n          name=\"phoneNumber\"\n          [maxLength]=\"30\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row bb-block bb-block--lg\">\n      <div class=\"bb-block bb-block--no-margin col-lg-8 col-sm-8 col-xs-12\">\n        <bb-input-email-ui\n          label=\"E-mail\"\n          i18n-label=\"@@contact-personal-data.contactEmail.label\"\n          data-role=\"contact-email\"\n          [(ngModel)]=\"hostRef.contact.emailId\"\n          #emailModel=\"ngModel\"\n          name=\"emailId\"\n          bbEmailDomainValidator\n        >\n        </bb-input-email-ui>\n        <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"emailModel.invalid && emailModel.touched\">\n          <ng-container *ngIf=\"emailModel.errors?.email\">\n            <span i18n=\"@@contact-personal-data.email.errorText\" data-role=\"invalid-email\">Invalid email</span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"bb-block col-12\" data-role=\"contact-address-container\">\n        <bb-contact-address-data\n          [highlight]=\"false\"\n          [isAddAddress]=\"hostRef.isAddContactAddress\"\n          [viewType]=\"hostRef.viewType\"\n          [address]=\"hostRef.address\"\n          (add)=\"hostRef.onAddressAdd($event)\"\n          (edit)=\"hostRef.onAddressEdit()\"\n          (discard)=\"hostRef.onAddressDiscard($event)\"\n          (delete)=\"hostRef.onAddressDelete($event)\"\n          (submit)=\"hostRef.onAddressSubmit($event)\"\n        >\n        </bb-contact-address-data>\n      </div>\n    </div>\n  </fieldset>\n</div>\n"]}