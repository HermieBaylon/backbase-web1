import { Component, Input } from '@angular/core';
import { addressFromAccountHolder, addressFromBank, addressFromContact } from '../../helpers/address';
import * as i0 from "@angular/core";
import * as i1 from "../contact-full-address/contact-full-address.component";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "../account-card-view/account-card-view.component";
import * as i4 from "./contact-item-details.directive";
import * as i5 from "@angular/common";
/**
 * The component is for showing contact detail item.
 *
 * The following extension slots are available in this component:
 *  - `ContactItemDetailsCustomizableDirective`
 *
 * @see ContactItemDetailsCustomizableDirective
 * @usageNotes
 *
 * ### Display contact personal data
 *
 * ```html
 *    <bb-contact-item-details
 *            *ngIf="hostRef.contactItem"
 *             [contactItem]="hostRef.contactItem.data">
 *           </bb-contact-item-details>
 * ```
 * @ngModule ContactItemDetailsModule
 */
export class ContactItemDetailsComponent {
    constructor() {
        this.hostRef = this;
        /**
         * Flag that denotes if the conctact name should be displayed. Defaults to `true`
         *
         */
        this.showName = true;
        /**
         *  Flag that denotes if the section headings name should be displayed. Defaults to `false`
         */
        this.showHeaders = false;
    }
    get address() {
        return addressFromContact(this.contactItem);
    }
    /**
     * Returns the address in correct format
     *
     * @param {AccountInformation} account current account details
     * @returns {Address} Returns the address in correct format
     */
    bankAddress(account) {
        return addressFromBank(account);
    }
    /**
     * Returns the address in correct format
     *
     * @param {AccountInformation} account current account details
     * @returns {Address} Returns the address in correct format
     */
    accountHolderAddress(account) {
        return addressFromAccountHolder(account);
    }
    trackByIndex(index) {
        return index;
    }
}
/** @nocollapse */ ContactItemDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactItemDetailsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ContactItemDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ContactItemDetailsComponent, selector: "bb-contact-item-details", inputs: { contactItem: "contactItem", showName: "showName", showHeaders: "showHeaders" }, ngImport: i0, template: "<ng-container bbContactItemDetailsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbContactItemDetailsCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--xl\">\n    <div *ngIf=\"hostRef.showName\" class=\"bb-stack bb-block bb-block--md col\">\n      <span class=\"bb-stack__item\" data-role=\"contact-details-info-name\">{{ hostRef.contactItem?.name }}</span>\n      <ng-container *ngIf=\"hostRef.contactItem?.alias\">\n        <span class=\"bb-stack__item\" aria-hidden=\"true\"> \u2022 </span>\n        <span class=\"bb-stack__item\" data-role=\"contact-details-info-alias\"> {{ hostRef.contactItem?.alias }} </span>\n      </ng-container>\n    </div>\n    <dl class=\"col bb-block\" tabindex=\"0\">\n      <div class=\"row flex-column-reverse flex-sm-row\">\n        <div *ngIf=\"hostRef.contactItem?.phoneNumber\" class=\"col-12 col-sm-6 bb-block bb-block--sm\">\n          <dt class=\"bb-block bb-block--sm bb-label\" i18n=\"@@contact-item-details.contact-information.phone\">\n            Phone number\n          </dt>\n          <dd class=\"bb-block bb-block--sm\" data-role=\"contact-details-info-phone\">\n            {{hostRef.contactItem?.phoneNumber}}\n          </dd>\n        </div>\n        <div *ngIf=\"hostRef.contactItem?.emailId\" class=\"col-12 col-sm-6 bb-block bb-block--sm\">\n          <dt class=\"bb-block bb-block--sm bb-label\" i18n=\"@@contact-item-details.contact-information.email\">\n            Email address\n          </dt>\n          <dd class=\"bb-block bb-block--sm\" data-role=\"contact-details-info-email\">{{hostRef.contactItem?.emailId}}</dd>\n        </div>\n      </div>\n      <div *ngIf=\"hostRef.contactItem?.contactPerson\" class=\"bb-block bb-block--md col-12\">\n        <dt class=\"bb-block bb-block--sm bb-label row\" i18n=\"@@contact-item-details.contact-information.contact-person\">\n          Contact person\n        </dt>\n        <dd class=\"bb-block bb-block--sm row\" data-role=\"contact-details-info-contact-person\">\n          {{hostRef.contactItem?.contactPerson}}\n        </dd>\n      </div>\n      <div class=\"bb-block bb-block--md col-12\">\n        <dt\n          *ngIf=\"hostRef.contactItem?.streetName || hostRef.contactItem?.addressLine1 || hostRef.contactItem?.addressLine2\"\n          class=\"bb-block bb-block--sm bb-label row\"\n          i18n=\"@@contact-item-details.contact-information.address\"\n        >\n          Contact address\n        </dt>\n        <dd>\n          <bb-contact-full-address [address]=\"hostRef.address\" class=\"row\"></bb-contact-full-address>\n        </dd>\n      </div>\n    </dl>\n  </div>\n  <div class=\"bb-block\">\n    <div class=\"bb-stack bb-block bb-block--xs\" tabindex=\"0\">\n      <bb-header-ui\n        headingType=\"h3\"\n        heading=\"Account information\"\n        i18n-heading=\"@@contact-item-details.account-information.title\"\n        headingClasses=\"bb-stack__item bb-stack__item--fill\"\n      >\n      </bb-header-ui>\n      <span\n        class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--push-right bb-text-support\"\n        i18n=\"@@contact-item-details.account-information.number-of-accounts\"\n        data-role=\"contact-details-account-number-accounts\"\n      >\n        {{hostRef.contactItem?.accounts?.length}} {hostRef.contactItem?.accounts?.length, plural, =1 {account} other\n        {accounts}}\n      </span>\n    </div>\n    <div\n      *ngFor=\"let account of hostRef.contactItem?.accounts; let index = index; trackBy: hostRef.trackByIndex\"\n      class=\"card card-section bb-block bb-block--sm\"\n    >\n      <bb-account-card-view\n        tabindex=\"0\"\n        [account]=\"account\"\n        [bankAddress]=\"hostRef.bankAddress(account)\"\n        [accountHolderAddress]=\"hostRef.accountHolderAddress(account)\"\n        [index]=\"index\"\n      ></bb-account-card-view>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i1.ContactFullAddressComponent, selector: "bb-contact-full-address", inputs: ["address"] }, { type: i2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i3.AccountCardViewComponent, selector: "bb-account-card-view", inputs: ["index", "account", "isEditMode", "bankAddress", "accountHolderAddress"], outputs: ["editAccount", "deleteAccount"] }], directives: [{ type: i4.ContactItemDetailsCustomizableDirective, selector: "[bbContactItemDetailsCustomizable]" }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactItemDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-contact-item-details',
                    templateUrl: './contact-item-details.component.html',
                }]
        }], propDecorators: { contactItem: [{
                type: Input
            }], showName: [{
                type: Input
            }], showHeaders: [{
                type: Input
            }] } });
//# sourceMappingURL=contact-item-details.component.js.map