import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/textarea";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
import * as i5 from "@backbase/ui-ang/button";
/**
 * The component is for showing confirmation dialog
 *
 *
 * @usageNotes
 *
 * ### Display confirmation dialog
 *
 * ```html
 *  <bb-confirm-action-dialog
 *   [isOpen]="hostRef.isCancelCreateConfirmOpened"
 *   [confirmButtonColor]="'danger'"
 *   (confirm)="hostRef.onExitCreateContact()"
 *   (cancel)="hostRef.onResumeCreateContact()"
 * >
 *   <span title i18n="@@contact-create.confirm-action-dialog.title">Discard entered data?</span>
 *   <span body i18n="@@contact-create.confirm-action-dialog.body">
 *      Are you sure to exit creation of a new contact? The data you have entered will be lost.</span>
 *   <span cancelButtonLabel i18n="@@contact-create.confirm-action-dialog.button.cancel">Not now</span>
 *   <span confirmButtonLabel i18n="@@contact-create.confirm-action-dialog.button.confirm">Discard</span>
 * </bb-confirm-action-dialog>
 * ```
 * @ngModule ConfirmActionDialogModule
 */
export class ConfirmActionDialogComponent {
    constructor() {
        this.modalOptions = {
            backdrop: 'static',
            keyboard: false,
        };
        this.comment = '';
        /**
         * The button color for confirm button
         * Default value is `primary`.
         */
        this.confirmButtonColor = 'primary';
        /**
         * The button color for cancel button
         * Default value is `link`.
         */
        this.cancelButtonColor = 'link';
        /**
         * Indicator for confirmation dialog open state.
         * Default value is `false`.
         */
        this.isOpen = false;
        /**
         * Whether comment input should be shown
         */
        this.attachComment = false;
        /**
         * Text for comment field label
         */
        this.commentFieldLabel = 'Add comment';
        /**
         * Event triggered when confirming the action
         */
        this.confirm = new EventEmitter();
        /**
         * Event triggered when cancelling the action
         */
        this.cancel = new EventEmitter();
    }
    ngOnChanges(changes) {
        if (changes.isOpen) {
            this.comment = '';
        }
    }
    /**
     * Emits the cancel event
     */
    onClickCancel() {
        this.cancel.emit();
    }
    /**
     * Emits the confirm event.
     */
    onClickConfirm() {
        this.confirm.emit({ comment: this.comment });
    }
}
/** @nocollapse */ ConfirmActionDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ConfirmActionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ConfirmActionDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ConfirmActionDialogComponent, selector: "bb-confirm-action-dialog", inputs: { confirmButtonColor: "confirmButtonColor", cancelButtonColor: "cancelButtonColor", isOpen: "isOpen", attachComment: "attachComment", commentFieldLabel: "commentFieldLabel" }, outputs: { confirm: "confirm", cancel: "cancel" }, usesOnChanges: true, ngImport: i0, template: "<bb-modal-ui\n  [isOpen]=\"isOpen\"\n  [modalOptions]=\"modalOptions\"\n  aria-labelledby=\"contact-confirm-action-dialog-header\"\n  aria-describedby=\"contact-confirm-action-dialog-body\"\n>\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h1 class=\"modal-title\" data-role=\"confirm-action-header\" id=\"contact-confirm-action-dialog-header\">\n        <ng-content select=\"[title]\"></ng-content>\n      </h1>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div [ngClass]=\"{ 'bb-block bb-block--md': attachComment }\" id=\"contact-confirm-action-dialog-body\">\n        <ng-content select=\"[body]\"></ng-content>\n      </div>\n\n      <ng-container *ngIf=\"attachComment && isOpen\">\n        <label #commentLabel id=\"contact-approval-log-comment-label\" i18n=\"@@bb-confirmation-dialog.comment\"\n          >{{ commentFieldLabel }}</label\n        >\n        <span id=\"comment-optional-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@bb-confirmation-dialog.comment.optional-label\">Optional</ng-container>)\n        </span>\n        <bb-textarea-ui\n          wrap=\"hard\"\n          [rows]=\"3\"\n          [cols]=\"50\"\n          [minLength]=\"3\"\n          [maxLength]=\"140\"\n          [(ngModel)]=\"comment\"\n          [aria-labelledby]=\"commentLabel.id\"\n          aria-describedby=\"comment-optional-info\"\n          showCharCounter=\"true\"\n          data-role=\"confirmation-comment\"\n        ></bb-textarea-ui>\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"confirmButtonColor\"\n          (click)=\"onClickConfirm()\"\n          data-role=\"confirm-action-confirm-btn\"\n        >\n          <ng-content select=\"[confirmButtonLabel]\"></ng-content>\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"cancelButtonColor\"\n          (click)=\"onClickCancel()\"\n          data-role=\"confirm-action-cancel-btn\"\n        >\n          <ng-content select=\"[cancelButtonLabel]\"></ng-content>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i2.TextareaComponent, selector: "bb-textarea-ui", inputs: ["rows", "cols", "placeholder", "maxLength", "minLength", "readonly", "showCharCounter", "wrap"] }, { type: i1.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i1.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ConfirmActionDialogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-confirm-action-dialog',
                    templateUrl: 'confirm-action-dialog.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { confirmButtonColor: [{
                type: Input
            }], cancelButtonColor: [{
                type: Input
            }], isOpen: [{
                type: Input
            }], attachComment: [{
                type: Input
            }], commentFieldLabel: [{
                type: Input
            }], confirm: [{
                type: Output
            }], cancel: [{
                type: Output
            }] } });
//# sourceMappingURL=confirm-action-dialog.component.js.map