{"version":3,"file":"contact-address-data.component.js","sourceRoot":"","sources":["../../../../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.component.ts","../../../../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlContainer, NgModelGroup } from '@angular/forms';\nimport { isObjectTruthy } from '../../helpers/address';\nimport { Address, AddressType, InputGroupName, InputName, ViewType } from '../../models/types';\nimport { ContactCountryListService } from '../../services/contact-country-list.service';\nimport { Observable, of } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { InputTextComponent } from '@backbase/ui-ang/input-text';\n\n/**\n * The component is for showing contact  address data.\n *\n *\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *    <bb-contact-address-data\n *   [highlight]=\"hostRef.highlight\"\n *   [isAddAddress]=\"hostRef.isAddAccountHolderAddress\"\n *   [addressType]=\"'accountHolder'\"\n *   [canCopyAddress]=\"hostRef.canCopyAddress\"\n *   [isContactAddressCopied]=\"hostRef.isContactAddressCopied\"\n *   [viewType]=\"hostRef.accountHolderAddressViewType\"\n *   [address]=\"hostRef.accountHolderAddress\"\n *   (add)=\"hostRef.onAccountHolderAddressAdd($event)\"\n *   (edit)=\"hostRef.onAccountHolderAddressEdit()\"\n *   (discard)=\"hostRef.onAccountHolderAddressDiscard($event)\"\n *   (delete)=\"hostRef.onAccountHolderAddressDelete($event)\"\n *   (submit)=\"hostRef.onAddressSubmit($event, hostRef.addressType.ACCOUNTHOLDER)\"\n *   (contactAddressCopy)=\"hostRef.onAddressCopy($event)\"\n *   (addressEditAfterCopy)=\"hostRef.onAddressEditAfterCopy()\">\n * </bb-contact-address-data>\n * ```\n * @ngModule ContactAddressDataModule\n */\n@Component({\n  selector: 'bb-contact-address-data',\n  templateUrl: './contact-address-data.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactAddressDataComponent implements OnInit, AfterViewChecked {\n  hostRef: ContactAddressDataComponent = this;\n  copyContactAddressInputName = InputName.COPY_CONTACT_ADDRESS;\n\n  /**\n   * Flag that denotes if address form should be displayed\n   */\n  @Input()\n  isAddAddress!: boolean;\n\n  /**\n   * Instance that holds the address details\n   */\n  @Input() address: Address = {};\n\n  /**\n   * Type of addresses. Possible values `CONTACT`, `BANK`, `ACCOUNTHOLDER`. Defaults to `CONTACT`\n   */\n  @Input() addressType: AddressType = AddressType.CONTACT;\n\n  /**\n   * Flag that denotes if address can be copied. Default value is `false`\n   */\n  @Input() canCopyAddress = false;\n\n  /**\n   * Flag that denoted if contact address is copied\n   */\n  @Input() isContactAddressCopied = false;\n\n  /**\n   * Type of address view. Possible values `FORM`| `CARD`. Defaults to `FORM`\n   */\n  @Input()\n  viewType!: ViewType;\n\n  /**\n   * If enabled it will apply highlight classes to this component.\n   * By default is `true`.\n   */\n  @Input() highlight = true;\n\n  /**\n   * Event emitted when address is submitted\n   */\n  @Output() submit = new EventEmitter();\n\n  /**\n   * Event emitted when address is discarded\n   */\n  @Output() discard = new EventEmitter();\n\n  /**\n   * Event emitted when address is deleted\n   */\n  @Output() delete = new EventEmitter();\n\n  /**\n   * Event emitted when address is editted\n   */\n  @Output() edit = new EventEmitter();\n\n  /**\n   * Event emitted when contact address has to be copied\n   */\n  @Output() contactAddressCopy = new EventEmitter<boolean>();\n\n  /**\n   * Event emitted when add address action is triggered\n   */\n  @Output() add = new EventEmitter();\n  /**\n   * Event emitted when address is edited after it has been copied from contact address\n   */\n  @Output() addressEditAfterCopy = new EventEmitter();\n\n  /**\n   * The first element one can Tab to in the form\n   */\n  @ViewChild('addressLine1') firstTabElement?: InputTextComponent;\n\n  private needsToRefocus = false;\n\n  fieldGroupName!: string;\n\n  countriesList$: Observable<string[]> = of([]);\n\n  constructor(private readonly contactCountryListService: ContactCountryListService) {}\n\n  ngOnInit() {\n    if (!this.viewType) {\n      this.viewType = ViewType.FORM;\n    }\n    this.fieldGroupName = this.getFieldGroupName();\n    this.address.country = this.address.country || '';\n\n    if (this.addressType === AddressType.BANK) {\n      this.countriesList$ = this.contactCountryListService.getFromExternalSource().pipe(shareReplay());\n    } else {\n      this.countriesList$ = this.contactCountryListService.getFromLocalSource();\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.needsToRefocus) {\n      this.firstTabElement?.inputEl?.nativeElement.focus();\n      this.needsToRefocus = false;\n    }\n  }\n\n  /**\n   *\n   * @returns {string} Name of the addressType.\n   */\n  getFieldGroupName() {\n    return `${InputGroupName.ADDRESS}[${this.addressType}]`;\n  }\n\n  /**\n   * Emits the add address event\n   *\n   * @param {boolean} isAddAddress whether address should be added\n   */\n  addAddress(isAddAddress: boolean) {\n    this.add.emit(isAddAddress);\n    this.needsToRefocus = true;\n  }\n\n  /**\n   * Emits the edit address event\n   */\n  editAddress() {\n    this.edit.emit(this.address);\n    this.needsToRefocus = true;\n  }\n\n  /**\n   * Emits the discard address event\n   */\n  discardAddress() {\n    this.discard.emit(this.fieldGroupName);\n  }\n\n  /**\n   * Emits the delete address event\n   */\n  deleteAddress() {\n    this.delete.emit(this.fieldGroupName);\n  }\n\n  /**\n   *  Emits the submit address event if valid.\n   */\n  submitAddress() {\n    if (isObjectTruthy(this.address)) {\n      this.submit.emit(this.fieldGroupName);\n    } else {\n      this.deleteAddress();\n    }\n  }\n\n  /**\n   * Emits the copy address event\n   */\n  copyContactAddress() {\n    this.contactAddressCopy.emit(this.isContactAddressCopied);\n  }\n\n  /**\n   * Emits the addressEditAfterCopy event\n   */\n  onAddressEdit() {\n    if (this.addressType === AddressType.ACCOUNTHOLDER && this.canCopyAddress) {\n      this.addressEditAfterCopy.emit();\n    }\n  }\n}\n","<div class=\"bb-block bb-block--md\" *ngIf=\"!hostRef.isAddAddress\">\n  <button\n    bbButton\n    color=\"link\"\n    (click)=\"hostRef.addAddress(true)\"\n    [attr.data-role]=\"'contact-add-address' + hostRef.addressType\"\n  >\n    <bb-icon-ui class=\"alert-icon\" name=\"control-point\"> </bb-icon-ui>\n    <ng-container i18n=\"@@contact-address-data.add.address.label\">\n      Add {hostRef.addressType, select, bank {bank} accountHolder {account holder's} other {contact}} address\n    </ng-container>\n  </button>\n</div>\n\n<div\n  class=\"bb-block bb-block--lg card card-section\"\n  *ngIf=\"hostRef.viewType === 'CARD'\"\n  [ngClass]=\"{ 'card-section--highlight': hostRef.highlight }\"\n  [attr.data-role]=\"'contact-card-address' + hostRef.addressType\"\n>\n  <div class=\"bb-stack bb-block bb-block--sm\">\n    <div class=\"bb-stack__item bb-text-bold\" i18n=\"@@contact-address-data.contactaddress.card.label\">\n      {hostRef.addressType, select, bank {Bank} accountHolder {Account holder's} other {Contact}} address\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--push-right\">\n      <button\n        bbButton\n        [attr.data-role]=\"'contact-edit-address' + hostRef.addressType\"\n        [circle]=\"true\"\n        size=\"sm\"\n        color=\"link\"\n        (click)=\"hostRef.editAddress()\"\n        bbTooltip=\"Edit address\"\n        triggers=\"hover focus\"\n        i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.buttons.edit.label\"\n      >\n        <bb-icon-ui color=\"dark\" name=\"edit\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        [attr.data-role]=\"'contact-delete-address' + hostRef.addressType\"\n        [circle]=\"true\"\n        size=\"sm\"\n        color=\"link\"\n        (click)=\"hostRef.deleteAddress()\"\n        bbTooltip=\"Delete address\"\n        triggers=\"hover focus\"\n        i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.buttons.delete.label\"\n      >\n        <bb-icon-ui color=\"dark\" name=\"delete\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n  <bb-contact-full-address [address]=\"hostRef.address\"></bb-contact-full-address>\n</div>\n\n<div\n  class=\"bb-stack bb-block bb-block--lg card card-section\"\n  *ngIf=\"hostRef.isAddAddress\"\n  [ngClass]=\"{\n    'd-none': hostRef.viewType === 'CARD',\n    'card-section--highlight': hostRef.highlight\n  }\"\n>\n  <fieldset [ngModelGroup]=\"hostRef.fieldGroupName\" (input)=\"hostRef.onAddressEdit()\">\n    <legend class=\"sr-only\" i18n=\"@@contact-address-data.addressGroup.title\">Address details</legend>\n    <div class=\"bb-block bb-block--sm\">\n      <div class=\"bb-stack bb-stack--align-top\">\n        <div class=\"bb-block bb-block--lg bb-stack__item bb-select-context__back\" data-role=\"create-contact-form\">\n          <span class=\"d-none\" aria-hidden=\"true\" i18n=\"@@contact-address-data.contactaddress.label\" #heading>\n            {hostRef.addressType, select, bank {Bank} accountHolder {Account holder's} other {Contact}} address\n          </span>\n          <bb-header-ui\n            id=\"headerTtitle\"\n            headingType=\"h4\"\n            [heading]=\"heading.textContent\"\n            data-role=\"contact-address-label\"\n          >\n          </bb-header-ui>\n        </div>\n      </div>\n      <bb-input-text-ui\n        #addressLine1\n        label=\"Primary address line, street name and number\"\n        i18n-label=\"@@contact-address-data.addressLine1.info-label\"\n        [(ngModel)]=\"hostRef.address.addressLine1\"\n        data-role=\"addressLine1\"\n        [name]=\"(hostRef.addressType + 'AddressLine1') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-input-text-ui\n        label=\"Additional address line 2\"\n        i18n-label=\"@@contact-address-data.contactaddress2.info-label\"\n        [(ngModel)]=\"hostRef.address.addressLine2\"\n        data-role=\"addressLine2\"\n        [name]=\"(hostRef.addressType + 'AddressLine2') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-input-text-ui\n        label=\"Additional address line 3\"\n        i18n-label=\"@@contact-address-data.streetName.info-label\"\n        [(ngModel)]=\"hostRef.address.streetName\"\n        data-role=\"addressLine3\"\n        [name]=\"(hostRef.addressType + 'StreetName') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-5 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Post code / ZIP\"\n          i18n-label=\"@@contact-address-data.contactPostCode.label\"\n          [(ngModel)]=\"hostRef.address.postCode\"\n          data-role=\"postCode\"\n          [name]=\"(hostRef.addressType + 'PostCode') | camelcase\"\n          [maxLength]=\"16\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-7 col-xs-12\">\n        <bb-input-text-ui\n          label=\"City or town\"\n          i18n-label=\"@@contact-address-data.town.label\"\n          [(ngModel)]=\"hostRef.address.town\"\n          data-role=\"town\"\n          [name]=\"(hostRef.addressType + 'Town') | camelcase\"\n          [maxLength]=\"35\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-7 col-xs-12\">\n        <bb-input-text-ui\n          label=\"State or area\"\n          i18n-label=\"@@contact-address-data.countrySubDivision.label\"\n          [(ngModel)]=\"hostRef.address.countrySubDivision\"\n          data-role=\"stateOrArea\"\n          [name]=\"(hostRef.addressType + 'CountrySubDivision') | camelcase\"\n          [maxLength]=\"35\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-5 col-xs-12\">\n        <bb-dropdown-single-select-ui\n          label=\"Country\"\n          i18n-label=\"@@contact-address-data.contactCountry.label\"\n          (change)=\"hostRef.onAddressEdit()\"\n          [(ngModel)]=\"hostRef.address.country\"\n          data-role=\"contactCountry\"\n          [name]=\"(hostRef.addressType + 'Country') | camelcase\"\n          placeholder=\"Select country\"\n          i18n-placeholder=\"@@bb-create-contact.dropdown.country.placeholder\"\n        >\n          <ng-container *ngFor=\"let country of countriesList$ | async\">\n            <span class=\"d-none\" aria-hidden=\"true\" #countryItem>\n              <bb-country-item [code]=\"country\"></bb-country-item>\n            </span>\n            <bb-dropdown-single-select-option-ui [value]=\"country\" [label]=\"countryItem.textContent\">\n            </bb-dropdown-single-select-option-ui>\n          </ng-container>\n        </bb-dropdown-single-select-ui>\n      </div>\n    </div>\n\n    <div class=\"row bb-block bb-block--lg\" *ngIf=\"hostRef.canCopyAddress && hostRef.addressType === 'accountHolder'\">\n      <div class=\"col-12\">\n        <bb-input-checkbox-ui\n          label=\"Use contact address as account holder's address\"\n          i18n-label=\"@@contact-address-data.copy.contact.address.label\"\n          data-role=\"copy-contact-address-checkbox\"\n          [name]=\"copyContactAddressInputName\"\n          (change)=\"hostRef.copyContactAddress()\"\n          [(ngModel)]=\"hostRef.isContactAddressCopied\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        (click)=\"hostRef.submitAddress()\"\n        data-role=\"contact-confirm-address\"\n      >\n        <ng-container i18n=\"@@contact-create.modal.btn.addAddress\"> Confirm address </ng-container>\n      </button>\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.discardAddress()\"\n        data-role=\"contact-cancel-address\"\n      >\n        <ng-container i18n=\"@@contact-create.modal.btn.discard\"> Discard </ng-container>\n      </button>\n    </div>\n  </fieldset>\n</div>\n"]}