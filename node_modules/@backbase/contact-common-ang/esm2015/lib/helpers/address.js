import { AddressType } from '../models/types';
export const toCamelCase = (str = '') => {
    return str.substr(0, 1).toLowerCase() + str.substr(1);
};
const addressFrom = (address, type) => ({
    addressLine1: address[toCamelCase(`${type}AddressLine1`)],
    addressLine2: address[toCamelCase(`${type}AddressLine2`)],
    streetName: address[toCamelCase(`${type}StreetName`)],
    postCode: address[toCamelCase(`${type}PostCode`)],
    town: address[toCamelCase(`${type}Town`)],
    countrySubDivision: address[toCamelCase(`${type}CountrySubDivision`)],
    country: address[toCamelCase(`${type}Country`)],
});
export const addressFromContact = (address) => addressFrom(address, AddressType.CONTACT);
export const addressFromBank = (address) => addressFrom(address, AddressType.BANK);
export const addressFromAccountHolder = (address) => addressFrom(address, AddressType.ACCOUNTHOLDER);
export const isObjectTruthy = (obj) => {
    return Object.keys(obj).some((key) => !!obj[key]);
};
export const addressToString = (address) => [
    address[`addressLine1`],
    address[`addressLine2`],
    address[`streetName`],
    address[`postCode`],
    address[`town`],
    address[`countrySubDivision`],
]
    .filter(Boolean)
    .join(', ');
//# sourceMappingURL=address.js.map