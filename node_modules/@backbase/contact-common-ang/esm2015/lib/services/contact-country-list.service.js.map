{"version":3,"file":"contact-country-list.service.js","sourceRoot":"","sources":["../../../../../../libs/contact-common-ang/src/lib/services/contact-country-list.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,yBAAyB,EAAE,MAAM,qBAAqB,CAAC;AAChE,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;AACtC,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;;;AAEjD;;GAEG;AAEH,MAAM,OAAO,yBAAyB;IACpC,YAC6C,aAAuB,EACjD,kBAAsC;QADZ,kBAAa,GAAb,aAAa,CAAU;QACjD,uBAAkB,GAAlB,kBAAkB,CAAoB;IACtD,CAAC;IAEJ;;;;OAIG;IACH,kBAAkB;QAChB,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAChC,CAAC;IAED;;;;OAIG;IACH,qBAAqB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC,IAAI,CACzD,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,EACtC,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;IACJ,CAAC;;0IAzBU,yBAAyB,kBAE1B,yBAAyB;8IAFxB,yBAAyB;4FAAzB,yBAAyB;kBADrC,UAAU;;0BAGN,MAAM;2BAAC,yBAAyB","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { BB_CONTACT_COUNTRIES_LIST } from '../config.providers';\nimport { Observable, of } from 'rxjs';\nimport { ContactHttpService } from './contact-http.service';\nimport { catchError, map } from 'rxjs/operators';\n\n/**\n * Service responsible for providing available countries list\n */\n@Injectable()\nexport class ContactCountryListService {\n  constructor(\n    @Inject(BB_CONTACT_COUNTRIES_LIST) private countriesList: string[],\n    private readonly contactHttpService: ContactHttpService,\n  ) {}\n\n  /**\n   * Returns countries configured locally\n   *\n   * @returns {Observable<string[]>} - stream of country lists\n   */\n  getFromLocalSource(): Observable<string[]> {\n    return of(this.countriesList);\n  }\n\n  /**\n   * Return countries from external service\n   *\n   * @returns {Observable<string[]>} - stream of country lists\n   */\n  getFromExternalSource(): Observable<string[]> {\n    return this.contactHttpService.getSupportedCountries().pipe(\n      map((response) => response.body || []),\n      catchError(() => of([])),\n    );\n  }\n}\n"]}