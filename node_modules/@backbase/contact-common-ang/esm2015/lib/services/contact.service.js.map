{"version":3,"file":"contact.service.js","sourceRoot":"","sources":["../../../../../../libs/contact-common-ang/src/lib/services/contact.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { ContactHttpService } from './contact-http.service';\nimport { BehaviorSubject, merge, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { filter, finalize, map, mapTo, mergeMap, scan, shareReplay, switchMap, takeUntil } from 'rxjs/operators';\nimport {\n  ApprovalRequired,\n  ContactActions,\n  ContactItem,\n  ContactRequestParameters,\n  ContactResponse,\n  ContactState,\n  ExtendedContactResponse,\n  LoadMoreMethod,\n} from '../models/types';\nimport { SortEvent } from '@backbase/ui-ang/table';\nimport { SortDirection, ApprovalSort } from '@backbase/data-ang/contact-manager';\nexport interface ContactsServiceConfig {\n  pageSize: number;\n}\n\nexport const ContactsServiceConfigDefaults = {\n  pageSize: 50,\n};\n\n/**\n * Service calls the APIs for all the actions done by the user.\n * This service Injects ContactHttpService\n *\n * @see ContactHttpService\n * @usageNotes\n *\n *\n * ```ts\n * @NgModule({\n *   ...\n *   providers: [\n *     ...\n *     ContactService,\n *   ],\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactService],\n * })\n *  export class ContactCommonAngComponent {\n * ```\n */\n@Injectable()\nexport class ContactService implements OnDestroy {\n  protected readonly destroy$ = new Subject();\n  private readonly changePage$ = new Subject<ContactRequestParameters['from']>();\n  private readonly loadMore$ = new Subject<ContactRequestParameters['from']>();\n  private readonly load$ = new Subject();\n  private readonly refresh$ = new Subject<ContactState['loadMoreMethod']>();\n  private readonly search$ = new Subject<{\n    query: ContactRequestParameters['query'];\n    from: ContactRequestParameters['from'];\n  }>();\n\n  private readonly sort$ = new Subject<{\n    sort: ContactRequestParameters['sort'];\n    direction: ContactRequestParameters['direction'];\n  }>();\n\n  protected readonly config$ = new BehaviorSubject<ContactsServiceConfig>(ContactsServiceConfigDefaults);\n\n  private readonly id$$ = new ReplaySubject<string | null>(1);\n  private readonly subscriptions: Subscription[] = [];\n  private readonly contact$ = this.id$$.pipe(\n    switchMap((id) => {\n      if (!id) {\n        return of(undefined);\n      }\n\n      return this.contactHttpService.getContact(id);\n    }),\n  );\n\n  readonly loading$$ = new ReplaySubject<boolean>(1);\n  readonly loading$ = this.loading$$.asObservable();\n\n  protected set loading(val: boolean) {\n    this.loading$$.next(val);\n  }\n\n  private readonly acting$$ = new ReplaySubject<boolean>(1);\n  readonly acting$ = this.acting$$.asObservable();\n\n  protected set acting(val: boolean) {\n    this.acting$$.next(val);\n  }\n\n  private readonly pageSize$: Observable<number> = this.config$.pipe(map((config) => config.pageSize));\n\n  private readonly actions$ = merge(\n    this.load$.pipe(mapTo({ action: ContactActions.Load })),\n    this.search$.pipe(map(({ query, from }) => ({ action: ContactActions.Search, query, from }))),\n    this.refresh$.pipe(map((loadMoreMethod) => ({ action: ContactActions.Refresh, loadMoreMethod }))),\n    this.changePage$.pipe(map((from) => ({ action: ContactActions.ChangePage, from }))),\n    this.loadMore$.pipe(map((from) => ({ action: ContactActions.LoadMore, from }))),\n    this.pageSize$.pipe(map((pageSize) => ({ pageSize }))),\n    this.sort$.pipe(map(({ sort, direction }) => ({ action: ContactActions.Sort, sort, direction }))),\n  );\n\n  protected readonly state$ = this.actions$.pipe(\n    scan((state, action) => ({ ...state, ...action })),\n    map(({ pageSize, loadMoreMethod, query, ...state }: ContactState) => {\n      const isRefresh = state.action === ContactActions.Refresh;\n      const size = pageSize || ContactsServiceConfigDefaults.pageSize;\n      const from = state.from || 0;\n\n      return {\n        ...state,\n        query: query || '',\n        size: isRefresh && loadMoreMethod === LoadMoreMethod.LOAD_MORE ? size * (from + 1) : size,\n        from: isRefresh && loadMoreMethod === LoadMoreMethod.LOAD_MORE ? 0 : from,\n      };\n    }),\n    filter((state) => state.action !== undefined),\n    shareReplay(1),\n  );\n\n  protected readonly effects$: Observable<ExtendedContactResponse> = this.state$.pipe(\n    mergeMap(({ action, ...parameters }) => {\n      this.loading = true;\n      const isLoadMore = action === ContactActions.LoadMore;\n\n      return this.contactHttpService.getContacts(this.removeEmptyParameters(parameters)).pipe(\n        map((response) => ({ ...response, isLoadMore })),\n        finalize(() => (this.loading = false)),\n      );\n    }),\n    takeUntil(this.destroy$),\n    shareReplay(1),\n  );\n\n  protected readonly contactsSource$ = new BehaviorSubject<ContactResponse | undefined>(undefined);\n\n  public get contacts$() {\n    return this.contactsSource$.asObservable();\n  }\n\n  constructor(private readonly contactHttpService: ContactHttpService) {}\n\n  protected removeEmptyParameters<T>(parameters: T): T {\n    return Object.entries(parameters)\n      .filter(([key, value]) => value !== '')\n      .reduce((prev, curr) => ({ ...prev, [curr[0]]: curr[1] }), {}) as T;\n  }\n\n  /**\n   * Sets the Subject with updated contactService config.\n   *\n   * @param {ContactsServiceConfig} config - new config for Contact Service\n   */\n  init(config: ContactsServiceConfig) {\n    this.config$.next(config);\n  }\n\n  /**\n   *  Updates the subject with value\n   */\n  load() {\n    this.load$.next();\n  }\n\n  /**\n   * Updates the loadMore Subject with pageFrom value.\n   *\n   * @param {number} from - page From the data has to be fetched.\n   */\n  loadMore(from: number) {\n    this.loadMore$.next(from);\n  }\n\n  /**\n   * Updates the changePage subject to updated page.\n   *\n   * @param {number} from - page From the data has to be fetched.\n   */\n  changePage(from: number) {\n    this.changePage$.next(from);\n  }\n\n  /**\n   * Triggers the refresh listener with current load more.\n   *\n   * @param {LoadMoreMethod} loadMoreMethod - Current LoadMore method can be pagination / load-more\n   */\n  refresh(loadMoreMethod: LoadMoreMethod) {\n    this.refresh$.next(loadMoreMethod);\n  }\n\n  /**\n   * Triggers search Listner with search query.\n   *\n   * @param {string} query - search text entered by the user.\n   */\n  searchContacts(query: string) {\n    this.search$.next({ query, from: 0 });\n  }\n\n  /**\n   * Triggers sort Listner with mapped event.\n   *\n   * @param {string} sortEvent - table sort event.\n   */\n  sortApprovals(sortEvent: SortEvent) {\n    const castedDirection: SortDirection = sortEvent.direction.toUpperCase() as SortDirection;\n    const mappedEvent = { sort: sortEvent.column as ApprovalSort, direction: castedDirection };\n    this.sort$.next(mappedEvent);\n  }\n\n  /**\n   * Subscribes to the contact of a given contact ID.\n   *\n   * @param {Observable<string | null>} id Observable of Contact ID.\n   * @returns {Observable<ContactItem | undefined>} of contact Details with that ID.\n   */\n  getContactFrom(id: Observable<string | null>): Observable<ContactItem | undefined> {\n    this.subscriptions.push(id.subscribe(this.id$$));\n\n    return this.contact$;\n  }\n\n  /**\n   * Returns the details for a given ID.\n   *\n   * @param {string} id contact ID\n   * @returns {Observable<ContactItem | undefined>} Observable of contact Details for given ID.\n   */\n  getContactById(id: string): Observable<ContactItem | undefined> {\n    return this.contactHttpService.getContact(id);\n  }\n\n  /**\n   * Calls the delete API for specific ID\n   *\n   * @param {string} contactId Contact ID\n   * @returns {Observable<ApprovalRequired>} observable of a result\n   */\n  deleteContact(contactId: string): Observable<ApprovalRequired> {\n    this.acting = true;\n\n    return this.contactHttpService.deleteContact(contactId).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   *\n   * @param {ContactItem} contact contact item object\n   * @returns {Observable<ApprovalRequired>} response of a contact update\n   */\n  updateContact(contact: ContactItem): Observable<ApprovalRequired> {\n    this.acting = true;\n\n    return this.contactHttpService.updateContact(contact).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   * Calls the API for approval\n   *\n   * @param {string} approvalId - approval ID\n   * @param {string?} comment explanation of request approval\n   * @returns {Observable<string>} response of a contact edit approval\n   */\n  approveContact(approvalId: string, comment?: string): Observable<string> {\n    this.acting = true;\n\n    return this.contactHttpService.approveContact(approvalId, comment).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   * Calls the API for rejction\n   *\n   * @param {string} approvalId approval ID\n   * @param {string?} comment explanation of request rejection\n   * @returns {Observable<string>} response of an approval rejection\n   */\n  rejectContact(approvalId: string, comment?: string): Observable<string> {\n    this.acting = true;\n\n    return this.contactHttpService.rejectContact(approvalId, comment).pipe(finalize(() => (this.acting = false)));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    this.destroy$.complete();\n    this.loadMore$.complete();\n    this.changePage$.complete();\n    this.refresh$.complete();\n  }\n}\n"]}