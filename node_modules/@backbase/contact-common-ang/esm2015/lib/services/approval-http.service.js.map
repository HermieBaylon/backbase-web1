{"version":3,"file":"approval-http.service.js","sourceRoot":"","sources":["../../../../../../libs/contact-common-ang/src/lib/services/approval-http.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,EAAmB,aAAa,EAAE,MAAM,iBAAiB,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;;;AAEtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6BG;AAEH,MAAM,OAAO,mBAAmB;IAC9B,YAA6B,uBAA6C;QAA7C,4BAAuB,GAAvB,uBAAuB,CAAsB;IAAG,CAAC;IAC9E;;;;;OAKG;IACH,WAAW,CAAC,UAAkB;QAC5B,OAAO,IAAI,CAAC,uBAAuB;aAChC,uBAAuB,CAAC,EAAE,UAAU,EAAE,CAAC;aACvC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAwB,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;;oIAZU,mBAAmB;wIAAnB,mBAAmB;4FAAnB,mBAAmB;kBAD/B,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ApprovalsHttpService } from '@backbase/data-ang/approvals';\nimport { ApprovalDetails, ContactsError } from '../models/types';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Service responsible for connecting Contact service to data-ang services\n *  - `ContactService`\n * This service is dependant on data-ang.\n *\n * @see ContactService\n * @see ApprovalsHttpService,\n * @usageNotes\n *\n * ```ts\n * @NgModule({\n *   ...\n *   providers: [\n *     ...\n *     ApprovalHttpService,\n *   ],\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ApprovalHttpService],\n * })\n *  export class ContactCommonAngComponent {\n * ```\n */\n@Injectable()\nexport class ApprovalHttpService {\n  constructor(private readonly approvalDataHttpService: ApprovalsHttpService) {}\n  /**\n   * Fetch approval object based on approval ID.\n   *\n   * @param {string} approvalId - Approval ID\n   * @returns {Observable<ApprovalDetails | ContactsError>} observable of response\n   */\n  getApproval(approvalId: string): Observable<ApprovalDetails | ContactsError> {\n    return this.approvalDataHttpService\n      .getApprovalByApprovalId({ approvalId })\n      .pipe(catchError((error: HttpErrorResponse) => of(new ContactsError(error))));\n  }\n}\n"]}