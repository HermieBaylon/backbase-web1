import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Search box component with debounce
 *
 * @example
 *
 * ```html
 *   <bb-debounce-search
 *     class="d-block"
 *     [debounceTime]="debounceTime"
 *     (searchContacts)="onSearch($event)">
 *   </bb-debounce-search>
 * ```
 * @ngModule DebounceSearchModule
 */
export declare class DebounceSearchComponent implements OnInit, OnDestroy {
    private gc$;
    private debounceSearch$;
    searchTerm: string;
    /**
     * Time delay between each search requests
     */
    debounceTime: number;
    /**
     * Placeholder text for search input
     */
    placeholder: string;
    /**
     * See html property `aria-label`
     */
    ariaLabel?: string;
    /**
     * Changes will be triggered on search
     */
    searchContacts: EventEmitter<string>;
    ngOnInit(): void;
    /**
     * Updates the search term.
     *
     * @param {string} query - search query text
     */
    startSearching(query: string): void;
    /**
     * Updating the search value when cleared.
     */
    clearSearching(): void;
    /**
     * OnDestroy
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DebounceSearchComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DebounceSearchComponent, "bb-debounce-search", never, { "debounceTime": "debounceTime"; "placeholder": "placeholder"; "ariaLabel": "aria-label"; }, { "searchContacts": "searchContacts"; }, never, never>;
}
