{"version":3,"file":"backbase-contact-common-ang.umd.js","sources":["../../../../libs/contact-common-ang/src/lib/components/confirm-action-dialog/confirm-action-dialog.component.ts","../../../../libs/contact-common-ang/src/lib/components/confirm-action-dialog/confirm-action-dialog.component.html","../../../../libs/contact-common-ang/src/lib/components/confirm-action-dialog/confirm-action-dialog.module.ts","../../../../libs/contact-common-ang/src/lib/models/types.ts","../../../../libs/contact-common-ang/src/lib/helpers/address.ts","../../../../libs/contact-common-ang/src/lib/constants.ts","../../../../libs/contact-common-ang/src/lib/helpers/mappers.ts","../../../../libs/contact-common-ang/src/lib/services/contact-http.service.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/contact-common-ang/src/lib/services/contact.service.ts","../../../../libs/contact-common-ang/src/lib/config.providers.ts","../../../../libs/contact-common-ang/src/lib/services/contact-country-list.service.ts","../../../../libs/contact-common-ang/src/lib/services/providers.ts","../../../../libs/contact-common-ang/src/lib/services/approval-http.service.ts","../../../../libs/contact-common-ang/src/lib/services/contact-discard-changes.service.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/countrySpec.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/helpers.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/bigIntegerMod.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/index.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/iban-validator.directive.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/iban-validator.module.ts","../../../../libs/contact-common-ang/src/lib/directives/email-domain/email-domain-validator.directive.ts","../../../../libs/contact-common-ang/src/lib/directives/email-domain/email-domain.module.ts","../../../../libs/contact-common-ang/src/lib/helpers/date.ts","../../../../libs/contact-common-ang/src/lib/pipes/relative-date/relative-date.pipe.ts","../../../../libs/contact-common-ang/src/lib/pipes/relative-date/relative-date.module.ts","../../../../libs/contact-common-ang/src/lib/helpers/forms.ts","../../../../libs/contact-common-ang/src/lib/directives/no-white-space-validator/no-white-space.directive.ts","../../../../libs/contact-common-ang/src/lib/directives/no-white-space-validator/no-white-space.module.ts","../../../../libs/contact-common-ang/src/lib/components/country-item/country-item.directive.ts","../../../../libs/contact-common-ang/src/lib/components/country-item/country-item.component.ts","../../../../libs/contact-common-ang/src/lib/components/country-item/country-item.component.html","../../../../libs/contact-common-ang/src/lib/components/country-item/country-item.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-full-address/contact-full-address.directive.ts","../../../../libs/contact-common-ang/src/lib/components/contact-full-address/contact-full-address.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-full-address/contact-full-address.module.ts","../../../../libs/contact-common-ang/src/lib/components/account-card-view/account-card-view.directive.ts","../../../../libs/contact-common-ang/src/lib/components/account-card-view/account-card-view.component.ts","../../../../libs/contact-common-ang/src/lib/components/account-card-view/account-card-view.component.html","../../../../libs/contact-common-ang/src/lib/components/account-card-view/account-card-view.module.ts","../../../../libs/contact-common-ang/src/lib/pipes/camel-case/camel-case.pipe.ts","../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.component.html","../../../../libs/contact-common-ang/src/lib/components/contact-account-data/contact-account-data.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-account-data/contact-account-data.component.html","../../../../libs/contact-common-ang/src/lib/components/contact-account-data/contact-account-data.directive.ts","../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.directive.ts","../../../../libs/contact-common-ang/src/lib/pipes/camel-case/camel-case.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-account-data/contact-account-data.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-item-details/contact-item-details.directive.ts","../../../../libs/contact-common-ang/src/lib/components/contact-item-details/contact-item-details.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-item-details/contact-item-details.component.html","../../../../libs/contact-common-ang/src/lib/components/contact-item-details/contact-item-details.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.component.html","../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.directive.ts","../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.module.ts","../../../../libs/contact-common-ang/src/lib/components/debounce-search/debounce-search.component.ts","../../../../libs/contact-common-ang/src/lib/components/debounce-search/debounce-search.module.ts","../../../../libs/contact-common-ang/src/lib/components/approval-log/approval-log.component.ts","../../../../libs/contact-common-ang/src/lib/components/approval-log/approval-log.component.html","../../../../libs/contact-common-ang/src/lib/components/approval-log/approval-log-collapsible.component.ts","../../../../libs/contact-common-ang/src/lib/components/approval-log/approval-log.module.ts","../../../../libs/contact-common-ang/src/lib/components/request-list-base/request-list-base.component.ts","../../../../libs/contact-common-ang/src/lib/pipes/sort-pipes/aria-sort.pipe.ts","../../../../libs/contact-common-ang/src/lib/pipes/sort-pipes/aria-sort-pipe.module.ts","../../../../libs/contact-common-ang/src/lib/pipes/sort-pipes/direction-sort.pipe.ts","../../../../libs/contact-common-ang/src/lib/pipes/sort-pipes/direction-sort-pipe.module.ts","../../../../libs/contact-common-ang/src/backbase-contact-common-ang.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * The component is for showing confirmation dialog\n *\n *\n * @usageNotes\n *\n * ### Display confirmation dialog\n *\n * ```html\n *  <bb-confirm-action-dialog\n *   [isOpen]=\"hostRef.isCancelCreateConfirmOpened\"\n *   [confirmButtonColor]=\"'danger'\"\n *   (confirm)=\"hostRef.onExitCreateContact()\"\n *   (cancel)=\"hostRef.onResumeCreateContact()\"\n * >\n *   <span title i18n=\"@@contact-create.confirm-action-dialog.title\">Discard entered data?</span>\n *   <span body i18n=\"@@contact-create.confirm-action-dialog.body\">\n *      Are you sure to exit creation of a new contact? The data you have entered will be lost.</span>\n *   <span cancelButtonLabel i18n=\"@@contact-create.confirm-action-dialog.button.cancel\">Not now</span>\n *   <span confirmButtonLabel i18n=\"@@contact-create.confirm-action-dialog.button.confirm\">Discard</span>\n * </bb-confirm-action-dialog>\n * ```\n * @ngModule ConfirmActionDialogModule\n */\n@Component({\n  selector: 'bb-confirm-action-dialog',\n  templateUrl: 'confirm-action-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmActionDialogComponent implements OnChanges {\n  readonly modalOptions: NgbModalOptions = {\n    backdrop: 'static',\n    keyboard: false,\n  };\n  comment = '';\n\n  /**\n   * The button color for confirm button\n   * Default value is `primary`.\n   */\n  @Input() confirmButtonColor? = 'primary';\n\n  /**\n   * The button color for cancel button\n   * Default value is `link`.\n   */\n  @Input() cancelButtonColor? = 'link';\n\n  /**\n   * Indicator for confirmation dialog open state.\n   * Default value is `false`.\n   */\n  @Input() isOpen = false;\n\n  /**\n   * Whether comment input should be shown\n   */\n  @Input() attachComment = false;\n\n  /**\n   * Text for comment field label\n   */\n  @Input() commentFieldLabel = 'Add comment';\n\n  /**\n   * Event triggered when confirming the action\n   */\n  @Output() confirm = new EventEmitter<{ comment?: string }>();\n\n  /**\n   * Event triggered when cancelling the action\n   */\n  @Output() cancel = new EventEmitter<void>();\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.isOpen) {\n      this.comment = '';\n    }\n  }\n\n  /**\n   * Emits the cancel event\n   */\n  onClickCancel() {\n    this.cancel.emit();\n  }\n\n  /**\n   * Emits the confirm event.\n   */\n  onClickConfirm() {\n    this.confirm.emit({ comment: this.comment });\n  }\n}\n","<bb-modal-ui\n  [isOpen]=\"isOpen\"\n  [modalOptions]=\"modalOptions\"\n  aria-labelledby=\"contact-confirm-action-dialog-header\"\n  aria-describedby=\"contact-confirm-action-dialog-body\"\n>\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h1 class=\"modal-title\" data-role=\"confirm-action-header\" id=\"contact-confirm-action-dialog-header\">\n        <ng-content select=\"[title]\"></ng-content>\n      </h1>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div [ngClass]=\"{ 'bb-block bb-block--md': attachComment }\" id=\"contact-confirm-action-dialog-body\">\n        <ng-content select=\"[body]\"></ng-content>\n      </div>\n\n      <ng-container *ngIf=\"attachComment && isOpen\">\n        <label #commentLabel id=\"contact-approval-log-comment-label\" i18n=\"@@bb-confirmation-dialog.comment\"\n          >{{ commentFieldLabel }}</label\n        >\n        <span id=\"comment-optional-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@bb-confirmation-dialog.comment.optional-label\">Optional</ng-container>)\n        </span>\n        <bb-textarea-ui\n          wrap=\"hard\"\n          [rows]=\"3\"\n          [cols]=\"50\"\n          [minLength]=\"3\"\n          [maxLength]=\"140\"\n          [(ngModel)]=\"comment\"\n          [aria-labelledby]=\"commentLabel.id\"\n          aria-describedby=\"comment-optional-info\"\n          showCharCounter=\"true\"\n          data-role=\"confirmation-comment\"\n        ></bb-textarea-ui>\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"confirmButtonColor\"\n          (click)=\"onClickConfirm()\"\n          data-role=\"confirm-action-confirm-btn\"\n        >\n          <ng-content select=\"[confirmButtonLabel]\"></ng-content>\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"cancelButtonColor\"\n          (click)=\"onClickCancel()\"\n          data-role=\"confirm-action-cancel-btn\"\n        >\n          <ng-content select=\"[cancelButtonLabel]\"></ng-content>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { NgModule } from '@angular/core';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { ConfirmActionDialogComponent } from './confirm-action-dialog.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TextareaModule } from '@backbase/ui-ang/textarea';\n\n/**\n * Exports ConfirmActionDialogComponent\n */\n@NgModule({\n  declarations: [ConfirmActionDialogComponent],\n  exports: [ConfirmActionDialogComponent],\n  imports: [ModalModule, ButtonModule, CommonModule, TextareaModule, FormsModule],\n})\nexport class ConfirmActionDialogModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\n\nimport {\n  ApprovalGetResponseBodyItem,\n  ApprovalsCreatedByMeGetResponseBodyItem,\n  ContactGetResponseBody,\n  Data,\n  ApprovalSort,\n  SortDirection,\n} from '@backbase/data-ang/contact-manager';\n\nexport declare type Contacts = Array<ContactGetResponseBody>;\nexport declare type ApprovalItemsCreatedByMe = Array<ApprovalsCreatedByMeGetResponseBodyItem>;\nexport declare type ApprovalItems = Array<ApprovalGetResponseBodyItem>;\nexport interface Additions {\n  [key: string]: any;\n}\n\nexport interface Customizable {\n  additions?: Additions;\n}\n\nexport {\n  ContactGetResponseBody as ContactItem,\n  ContactPutResponseBody as ApprovalRequired,\n  ContactPutResponseBody as ContactUpdateDeleteResponse,\n  ContactPutRequestBody as Contact,\n} from '@backbase/data-ang/contact-manager';\n\nexport { GetApprovalDetailsResponse as ApprovalDetails } from '@backbase/data-ang/approvals';\nexport { RecordDto as ApprovalRecord } from '@backbase/data-ang/approvals';\n\nexport enum LoadMoreMethod {\n  LOAD_MORE = 'load-more',\n  PAGINATION = 'pagination',\n}\n\nexport enum ContactActions {\n  Load,\n  Refresh,\n  LoadMore,\n  ChangePage,\n  Search,\n  Sort,\n}\n\nexport interface ContactRequestParameters {\n  /**\n   * fetch data from page number.\n   */\n  from?: number;\n  /**\n   * Size of the page\n   */\n  size?: number;\n  /**\n   * search query\n   */\n  query?: string;\n\n  /**\n   * Sorted Column\n   */\n  sort?: ApprovalSort;\n\n  /**\n   * Direction\n   */\n  direction?: SortDirection;\n}\n\nexport interface ContactState {\n  /**\n   * contact user action.\n   */\n  action?: ContactActions;\n  /**\n   * data from page number.\n   */\n  from?: number;\n  /**\n   * page Size\n   */\n  pageSize?: number;\n  /**\n   * load more method.\n   */\n  loadMoreMethod?: LoadMoreMethod;\n  /**\n   * search term query\n   */\n  query?: string;\n\n  sort?: ApprovalSort;\n\n  direction?: SortDirection;\n}\n\nexport interface ContactResponse {\n  /**\n   * total contacts\n   */\n  totalCount: number;\n  /**\n   * Contacts in a list\n   */\n  items: Contacts;\n}\n\nexport interface ExtendedContactResponse extends ContactResponse {\n  /**\n   * if the loadmoreMethod is load-more\n   */\n  isLoadMore: boolean;\n}\n\ninterface ErrorItem extends Customizable {\n  message?: string;\n  key?: string;\n  context?: Record<string, unknown>;\n}\n\nexport class ContactsError {\n  message!: string;\n  status?: number;\n  errors?: ErrorItem[];\n  additions?: Additions;\n  constructor(private readonly errorResponse?: HttpErrorResponse) {\n    if (this.errorResponse) {\n      const { status, error } = this.errorResponse;\n      this.status = status;\n      if (error) {\n        this.message = error.message || '';\n        this.errors = error.errors || [];\n        this.additions = error.additions || {};\n      }\n    }\n  }\n}\n\nexport interface ApprovalsCreatedByMe {\n  /**\n   * ApprovalsItems in a list created by me\n   */\n  items: ApprovalItemsCreatedByMe;\n  /**\n   * total number of items in the list\n   */\n  totalCount: number;\n}\n\nexport interface Approvals {\n  /**\n   * ApprovalsItems in a list\n   */\n  items: ApprovalItems;\n  /**\n   * total number of items in the list\n   */\n  totalCount: number;\n}\n\nexport interface Address {\n  /**\n   * address line 1 of contact address\n   */\n  addressLine1?: string;\n  /**\n   * address line 2 of contact address\n   */\n  addressLine2?: string;\n  /**\n   * street name of contact address\n   */\n  streetName?: string;\n  /**\n   * town of contact address\n   */\n  town?: string;\n  /**\n   * postal code of contact address\n   */\n  postCode?: string;\n  /**\n   * country sub division of contact address\n   */\n  countrySubDivision?: string;\n  /**\n   * country of contact address\n   */\n  country?: string;\n}\n\nexport enum ViewType {\n  CARD = 'CARD',\n  FORM = 'FORM',\n}\n\nexport enum InputGroupName {\n  CONTACT = 'contactDetails',\n  ACCOUNT = 'accountDetails',\n  ADDRESS = 'addressDetails',\n}\n\nexport enum InputName {\n  COPY_CONTACT_ADDRESS = 'copyContactAddress',\n}\n\nexport enum AddressType {\n  CONTACT = '',\n  BANK = 'bank',\n  ACCOUNTHOLDER = 'accountHolder',\n}\n\nexport class ContactFormGroupItem {\n  viewType?: ViewType = ViewType.FORM;\n  data?: Record<string, any> = {};\n  bankAddressViewType?: ViewType = ViewType.FORM;\n  accountHolderAddressViewType?: ViewType = ViewType.FORM;\n  isAddBankAddress? = false;\n  isAddAccountHolderAddress? = false;\n  accountHolderAddress?: Address = {};\n  bankAddress?: Address = {};\n  isCopyAddress? = false;\n  isContactAddressCopied? = false;\n}\n\nexport enum AccessContextScope {\n  USER = 'USER',\n  SA = 'SA',\n  LE = 'LE',\n}\n\nexport enum ActiveContactStatus {\n  ACTIVE = 'ACTIVE',\n  PENDING_APPROVAL = 'PENDING_APPROVAL',\n}\n\nexport enum ContactUpdateDeleteStatus {\n  APPROVAL_REQUIRED = 'APPROVAL_REQUIRED',\n  REQUEST_ACCEPTED = 'REQUEST_ACCEPTED',\n  REJECTED = 'REJECTED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n  CANCELLED = 'CANCELLED',\n}\n\nexport enum ApprovalStatus {\n  OPEN = 'OPEN',\n  CLOSED = 'CLOSED',\n  INVALID = 'INVALID',\n  VALID = 'VALID',\n  ENTERED = 'ENTERED',\n  READY = 'READY',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n}\n\nexport interface Id extends Customizable {\n  id: string;\n}\n\nexport interface AccountInformation {\n  name?: string;\n  alias?: string;\n  accountNumber?: string;\n  IBAN?: string;\n  accountType?: string;\n  BIC?: string;\n  bankCode?: string;\n  bankName?: string;\n  bankAddressLine1?: string;\n  bankAddressLine2?: string;\n  bankStreetName?: string;\n  bankTown?: string;\n  bankPostCode?: string;\n  bankCountrySubDivision?: string;\n  bankCountry?: string;\n  accountHolderAddressLine1?: string;\n  accountHolderAddressLine2?: string;\n  accountHolderStreetName?: string;\n  accountHolderTown?: string;\n  accountHolderPostCode?: string;\n  accountHolderCountrySubDivision?: string;\n  accountHolderCountry?: string;\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport interface ApprovalItemCreatedByMe {\n  creationTime: string;\n  creatorBbId: string;\n  data: Data;\n  id: string;\n  action: string;\n  status: string;\n}\n","import { Address, AddressType } from '../models/types';\n\nexport const toCamelCase = (str = '') => {\n  return str.substr(0, 1).toLowerCase() + str.substr(1);\n};\n\nconst addressFrom = (address: any, type: AddressType): Address => ({\n  addressLine1: address[toCamelCase(`${type}AddressLine1`)],\n  addressLine2: address[toCamelCase(`${type}AddressLine2`)],\n  streetName: address[toCamelCase(`${type}StreetName`)],\n  postCode: address[toCamelCase(`${type}PostCode`)],\n  town: address[toCamelCase(`${type}Town`)],\n  countrySubDivision: address[toCamelCase(`${type}CountrySubDivision`)],\n  country: address[toCamelCase(`${type}Country`)],\n});\n\nexport const addressFromContact = (address: any): Address => addressFrom(address, AddressType.CONTACT);\n\nexport const addressFromBank = (address: any): Address => addressFrom(address, AddressType.BANK);\n\nexport const addressFromAccountHolder = (address: any): Address => addressFrom(address, AddressType.ACCOUNTHOLDER);\n\nexport const isObjectTruthy = <T, K extends keyof T>(obj: T): boolean => {\n  return Object.keys(obj).some((key) => !!obj[key as K]);\n};\n\nexport const addressToString = (address: Address) =>\n  [\n    address[`addressLine1`],\n    address[`addressLine2`],\n    address[`streetName`],\n    address[`postCode`],\n    address[`town`],\n    address[`countrySubDivision`],\n  ]\n    .filter(Boolean)\n    .join(', ');\n","import { AccessContextScope } from './models/types';\n\nexport const Countries = [\n  'AR',\n  'AU',\n  'AT',\n  'BE',\n  'BR',\n  'CA',\n  'CN',\n  'CO',\n  'HR',\n  'CZ',\n  'DK',\n  'EC',\n  'EG',\n  'ET',\n  'FR',\n  'DE',\n  'GR',\n  'HN',\n  'HK',\n  'HU',\n  'IN',\n  'ID',\n  'IE',\n  'IT',\n  'JM',\n  'MY',\n  'MX',\n  'MA',\n  'NA',\n  'NL',\n  'NZ',\n  'NO',\n  'PL',\n  'PT',\n  'RU',\n  'SN',\n  'SG',\n  'ZA',\n  'ES',\n  'LK',\n  'SE',\n  'TH',\n  'TR',\n  'UG',\n  'AE',\n  'GB',\n  'US',\n  'ZW',\n];\n\nexport const defaultAccountTypes = ['Savings', 'Checking'];\n\nexport const defaultAccessContextScope = AccessContextScope.USER;\n\nexport enum ApprovalStatusColorMap {\n  OPEN = 'success',\n  CLOSED = 'danger',\n  INVALID = 'danger',\n  VALID = 'success',\n  ENTERED = 'primary',\n  READY = 'primary',\n  ACCEPTED = 'warning',\n  REJECTED = 'danger',\n  PENDING = 'primary',\n  APPROVED = 'success',\n  CANCELLED = 'warning',\n}\n\nexport enum ContactApprovalStatusMap {\n  CANCELLED = 'CANCELLED',\n  REJECTED = 'REJECTED',\n  PENDING = 'ENTERED',\n  APPROVED = 'APPROVED',\n}\n\nexport enum Preferences {\n  PAGE_SIZE = 20,\n  MAX_NAV_SIZE = 3,\n  DEBOUNCE_TIME = 300,\n  LOAD_MORE_METHOD = 'pagination',\n  NOTIFICATION_DISMISS_TIME = 5000,\n  ACCESS_CONTEXT_SCOPE = 'SA',\n}\n\nexport const IbanMask = 'SS00 AAAA AAAA AAAA AAAA AAAA AAAA AAAA AA';\n","import { InputName, InputGroupName, ContactItem, ApprovalDetails } from '../models/types';\nimport { addressFromContact } from './address';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { ContactApprovalStatusMap } from '../constants';\n\nexport const filterEmptyValues = (obj: { [key: string]: any }) =>\n  Object.keys(obj).reduce((result, key) => ({ ...result, ...(obj[key] ? { [key]: obj[key] } : {}) }), {});\n\nexport const toInteger = (value: any): number => parseInt(value, 10) || 0;\n\nexport const toBoolean = (value: string | boolean | undefined): boolean => {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n\n  return value === 'true';\n};\n\nexport const sanitizeObject = <T>(obj: T): Object => {\n  const sanitizedObj: { [key: string]: any } = {};\n  for (const key in obj) {\n    if ((obj as Object).hasOwnProperty(key) && obj[key] && key !== InputName.COPY_CONTACT_ADDRESS) {\n      sanitizedObj[key] = obj[key];\n    }\n  }\n\n  return sanitizedObj;\n};\n\nexport const flattenObject = <T>(obj: T): Object => {\n  let flattenedObj: { [key: string]: any } = {};\n  for (const key in obj) {\n    if ((obj as Object).hasOwnProperty(key) && obj[key]) {\n      if (typeof obj[key] === 'object') {\n        flattenedObj = { ...flattenedObj, ...sanitizeObject(obj[key]) };\n      } else {\n        flattenedObj[key] = obj[key];\n      }\n    }\n  }\n\n  return flattenedObj;\n};\n\nexport const fromContactFormToContactModel = <T>(formObj: T) => {\n  let model: any = {};\n  model['accounts'] = [];\n\n  for (const key in formObj) {\n    if ((formObj as Object).hasOwnProperty(key)) {\n      if (key === InputGroupName.CONTACT) {\n        model = { ...model, ...flattenObject(formObj[key]) };\n      } else if (key.indexOf(InputGroupName.ACCOUNT) > -1) {\n        model.accounts.push(flattenObject(formObj[key]));\n      }\n    }\n  }\n\n  return model;\n};\n\nexport const fromContactItemToContactModel = (contact: ContactItem): { [key: string]: any } => {\n  const keys = ['name', 'alias', 'phoneNumber', 'emailId', 'contactPerson', 'additions'];\n\n  return {\n    ...keys.reduce((details, key) => {\n      const value = (contact as { [key: string]: any })[key];\n      if (value) {\n        return { ...details, [key]: value };\n      }\n\n      return details;\n    }, {}),\n    ...filterEmptyValues(addressFromContact(contact)),\n    accounts: contact.accounts.map(filterEmptyValues),\n  };\n};\n\nexport const fromResponseBodyList = <T>(response: HttpResponse<T>) => ({\n  totalCount: parseInt(response.headers.get('x-total-count') as string, 10) || 0,\n  items: response.body || [],\n});\n\nexport const fromErrorResponse = (error: HttpErrorResponse) =>\n  throwError({ status: error.status, message: error.message });\n\nexport const getApprovalStatus = (approval: ApprovalDetails): string => {\n  let label = '';\n  const approvalDetailsStatus: any = approval.approvalDetails && approval.approvalDetails.status;\n  const currentStatus = ContactApprovalStatusMap[approvalDetailsStatus];\n\n  if (\n    approval.approvalDetails &&\n    currentStatus === ContactApprovalStatusMap.PENDING &&\n    approval.approvalDetails.policy &&\n    approval.approvalDetails.policy.items &&\n    approval.approvalDetails.records\n  ) {\n    const approvals = approval.approvalDetails.records.length;\n    const total = approval.approvalDetails.policy.items.reduce(\n      (totalCount, policy) => totalCount + policy.numberOfApprovals || 0,\n      0,\n    );\n    label = ` (${approvals}/${total})`;\n  }\n\n  return `${currentStatus}${label}`;\n};\n","import { Injectable } from '@angular/core';\nimport {\n  ApprovalResultStatus,\n  ApprovalsHttpService,\n  ContactPutResponseBody,\n  ContactsHttpService,\n  SupportedCountriesHttpService,\n} from '@backbase/data-ang/contact-manager';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  ApprovalRequired,\n  Approvals,\n  ApprovalsCreatedByMe,\n  ContactItem,\n  ContactRequestParameters,\n  ContactResponse,\n} from '../models/types';\nimport { fromErrorResponse, fromResponseBodyList } from '../helpers/mappers';\nimport { HttpResponse } from '@angular/common/http';\n\n/**\n * Service responsible for connecting Contact service to data-ang services\n *  - `ContactService`\n *  - `ContactsHttpService`\n *  - `ApprovalsHttpService`\n * This service is dependant on data-ang.\n *\n * @see ContactService\n * @see ContactsHttpService,\n * @see ApprovalsHttpService,\n * @usageNotes\n *\n * ```ts\n * @NgModule({\n *   ...\n *   providers: [\n *     ...\n *     ContactHttpService,\n *   ],\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactHttpService],\n * })\n *  export class ContactCommonAngComponent {\n * ```\n */\n@Injectable()\nexport class ContactHttpService {\n  constructor(\n    private readonly contactDataHttpService: ContactsHttpService,\n    private readonly approvalService: ApprovalsHttpService,\n    private readonly supportedCountriesService: SupportedCountriesHttpService,\n  ) {}\n\n  /**\n   * Get the contacts from data-ang API.\n   *\n   * @param {ContactRequestParameters} params - Contact Request Parameters\n   * @returns {Observable<ContactResponse>} service response in an Observable\n   */\n  getContacts(params: ContactRequestParameters): Observable<ContactResponse> {\n    return this.contactDataHttpService\n      .getContacts(params, 'response')\n      .pipe(map(fromResponseBodyList), catchError(fromErrorResponse));\n  }\n\n  /**\n   * Fetches Contact based on the ID given from data-ang method\n   *\n   * @param {string} contactId contact ID\n   * @returns {Observable<ContactItem | undefined>} observable of a response\n   */\n  getContact(contactId: string): Observable<ContactItem | undefined> {\n    return this.contactDataHttpService.getContact({ contactId }).pipe(catchError((error) => of(undefined)));\n  }\n\n  /**\n   * Calls the data-ang method for delete contact based on the ID\n   *\n   * @param {string} contactId contact ID\n   * @returns {Observable<ApprovalRequired>} observable of a response\n   */\n  deleteContact(contactId: string): Observable<ApprovalRequired> {\n    return this.contactDataHttpService.deleteContact({ contactId });\n  }\n\n  /**\n   * Calls the data-ang Method based on params provided.\n   *\n   * @param {ContactRequestParameters} params request parameters\n   * @returns {Observable<Approvals>} observable of a response\n   */\n  getPendingApprovals(params: ContactRequestParameters): Observable<Approvals> {\n    return this.approvalService\n      .getApprovals(params, 'response')\n      .pipe(map(fromResponseBodyList), catchError(fromErrorResponse));\n  }\n\n  /**\n   * Calls datanag method for fetching contact list of all pending approvals created by me.\n   *\n   * @param {ContactRequestParameters} params request parameters\n   * @returns {Observable<ApprovalsCreatedByMe>} observable of a response\n   */\n  getApprovalsCreatedByMe(params: ContactRequestParameters): Observable<ApprovalsCreatedByMe> {\n    return this.approvalService\n      .getApprovalsCreatedByMe(params, 'response')\n      .pipe(map(fromResponseBodyList), catchError(fromErrorResponse));\n  }\n\n  /**\n   * Calls data ang method for deleting the approval records.\n   *\n   * @param {string} requestId id of a contact\n   * @returns {Observable<any>} observable of a response\n   */\n  deleteApprovalsRecord(requestId: string) {\n    return this.approvalService.deleteApprovalRequest({ requestId });\n  }\n\n  /**\n   * Update the contact\n   *\n   * @param {ContactItem} contact updated contact Object\n   * @returns {Observable<ContactPutResponseBody>} observable of a response\n   */\n  updateContact(contact: ContactItem): Observable<ContactPutResponseBody> {\n    return this.contactDataHttpService.putContact({ contactId: contact.id, contactPutRequestBody: contact });\n  }\n\n  /**\n   * Calls the data-ang method for Approve Contact .\n   *\n   * @param {string} requestId id of a contact\n   * @param {string?} comment explanation of request approval\n   * @returns {Observable<ApprovalResultStatus>} observable of a response\n   */\n  approveContact(requestId: string, comment?: string): Observable<ApprovalResultStatus> {\n    const body = comment ? { comment } : undefined;\n\n    return this.approvalService\n      .postApprovalRecord({ requestId, approvalPostRequestBody: body })\n      .pipe(map((response) => response.status));\n  }\n\n  /**\n   * Calls the data-ang method for Reject Contact .\n   *\n   * @param {string} requestId id of a contact\n   * @param {string?} comment explanation of request rejection\n   * @returns {Observable<any>} observable of a response\n   */\n  rejectContact(requestId: string, comment?: string) {\n    const body = comment ? { comment } : undefined;\n\n    return this.approvalService.postRejectionRecord({ requestId, rejectionPostRequestBody: body });\n  }\n\n  /**\n   * Calls the data-ang method for supported countries .\n   *\n   * @returns {Observable<HttpResponse<string[]>>} observable of a response\n   */\n  getSupportedCountries(): Observable<HttpResponse<string[]>> {\n    return this.supportedCountriesService.getSupportedCountries('response');\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ContactHttpService } from './contact-http.service';\nimport { BehaviorSubject, merge, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { filter, finalize, map, mapTo, mergeMap, scan, shareReplay, switchMap, takeUntil } from 'rxjs/operators';\nimport {\n  ApprovalRequired,\n  ContactActions,\n  ContactItem,\n  ContactRequestParameters,\n  ContactResponse,\n  ContactState,\n  ExtendedContactResponse,\n  LoadMoreMethod,\n} from '../models/types';\nimport { SortEvent } from '@backbase/ui-ang/table';\nimport { SortDirection, ApprovalSort } from '@backbase/data-ang/contact-manager';\nexport interface ContactsServiceConfig {\n  pageSize: number;\n}\n\nexport const ContactsServiceConfigDefaults = {\n  pageSize: 50,\n};\n\n/**\n * Service calls the APIs for all the actions done by the user.\n * This service Injects ContactHttpService\n *\n * @see ContactHttpService\n * @usageNotes\n *\n *\n * ```ts\n * @NgModule({\n *   ...\n *   providers: [\n *     ...\n *     ContactService,\n *   ],\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactService],\n * })\n *  export class ContactCommonAngComponent {\n * ```\n */\n@Injectable()\nexport class ContactService implements OnDestroy {\n  protected readonly destroy$ = new Subject();\n  private readonly changePage$ = new Subject<ContactRequestParameters['from']>();\n  private readonly loadMore$ = new Subject<ContactRequestParameters['from']>();\n  private readonly load$ = new Subject();\n  private readonly refresh$ = new Subject<ContactState['loadMoreMethod']>();\n  private readonly search$ = new Subject<{\n    query: ContactRequestParameters['query'];\n    from: ContactRequestParameters['from'];\n  }>();\n\n  private readonly sort$ = new Subject<{\n    sort: ContactRequestParameters['sort'];\n    direction: ContactRequestParameters['direction'];\n  }>();\n\n  protected readonly config$ = new BehaviorSubject<ContactsServiceConfig>(ContactsServiceConfigDefaults);\n\n  private readonly id$$ = new ReplaySubject<string | null>(1);\n  private readonly subscriptions: Subscription[] = [];\n  private readonly contact$ = this.id$$.pipe(\n    switchMap((id) => {\n      if (!id) {\n        return of(undefined);\n      }\n\n      return this.contactHttpService.getContact(id);\n    }),\n  );\n\n  readonly loading$$ = new ReplaySubject<boolean>(1);\n  readonly loading$ = this.loading$$.asObservable();\n\n  protected set loading(val: boolean) {\n    this.loading$$.next(val);\n  }\n\n  private readonly acting$$ = new ReplaySubject<boolean>(1);\n  readonly acting$ = this.acting$$.asObservable();\n\n  protected set acting(val: boolean) {\n    this.acting$$.next(val);\n  }\n\n  private readonly pageSize$: Observable<number> = this.config$.pipe(map((config) => config.pageSize));\n\n  private readonly actions$ = merge(\n    this.load$.pipe(mapTo({ action: ContactActions.Load })),\n    this.search$.pipe(map(({ query, from }) => ({ action: ContactActions.Search, query, from }))),\n    this.refresh$.pipe(map((loadMoreMethod) => ({ action: ContactActions.Refresh, loadMoreMethod }))),\n    this.changePage$.pipe(map((from) => ({ action: ContactActions.ChangePage, from }))),\n    this.loadMore$.pipe(map((from) => ({ action: ContactActions.LoadMore, from }))),\n    this.pageSize$.pipe(map((pageSize) => ({ pageSize }))),\n    this.sort$.pipe(map(({ sort, direction }) => ({ action: ContactActions.Sort, sort, direction }))),\n  );\n\n  protected readonly state$ = this.actions$.pipe(\n    scan((state, action) => ({ ...state, ...action })),\n    map(({ pageSize, loadMoreMethod, query, ...state }: ContactState) => {\n      const isRefresh = state.action === ContactActions.Refresh;\n      const size = pageSize || ContactsServiceConfigDefaults.pageSize;\n      const from = state.from || 0;\n\n      return {\n        ...state,\n        query: query || '',\n        size: isRefresh && loadMoreMethod === LoadMoreMethod.LOAD_MORE ? size * (from + 1) : size,\n        from: isRefresh && loadMoreMethod === LoadMoreMethod.LOAD_MORE ? 0 : from,\n      };\n    }),\n    filter((state) => state.action !== undefined),\n    shareReplay(1),\n  );\n\n  protected readonly effects$: Observable<ExtendedContactResponse> = this.state$.pipe(\n    mergeMap(({ action, ...parameters }) => {\n      this.loading = true;\n      const isLoadMore = action === ContactActions.LoadMore;\n\n      return this.contactHttpService.getContacts(this.removeEmptyParameters(parameters)).pipe(\n        map((response) => ({ ...response, isLoadMore })),\n        finalize(() => (this.loading = false)),\n      );\n    }),\n    takeUntil(this.destroy$),\n    shareReplay(1),\n  );\n\n  protected readonly contactsSource$ = new BehaviorSubject<ContactResponse | undefined>(undefined);\n\n  public get contacts$() {\n    return this.contactsSource$.asObservable();\n  }\n\n  constructor(private readonly contactHttpService: ContactHttpService) {}\n\n  protected removeEmptyParameters<T>(parameters: T): T {\n    return Object.entries(parameters)\n      .filter(([key, value]) => value !== '')\n      .reduce((prev, curr) => ({ ...prev, [curr[0]]: curr[1] }), {}) as T;\n  }\n\n  /**\n   * Sets the Subject with updated contactService config.\n   *\n   * @param {ContactsServiceConfig} config - new config for Contact Service\n   */\n  init(config: ContactsServiceConfig) {\n    this.config$.next(config);\n  }\n\n  /**\n   *  Updates the subject with value\n   */\n  load() {\n    this.load$.next();\n  }\n\n  /**\n   * Updates the loadMore Subject with pageFrom value.\n   *\n   * @param {number} from - page From the data has to be fetched.\n   */\n  loadMore(from: number) {\n    this.loadMore$.next(from);\n  }\n\n  /**\n   * Updates the changePage subject to updated page.\n   *\n   * @param {number} from - page From the data has to be fetched.\n   */\n  changePage(from: number) {\n    this.changePage$.next(from);\n  }\n\n  /**\n   * Triggers the refresh listener with current load more.\n   *\n   * @param {LoadMoreMethod} loadMoreMethod - Current LoadMore method can be pagination / load-more\n   */\n  refresh(loadMoreMethod: LoadMoreMethod) {\n    this.refresh$.next(loadMoreMethod);\n  }\n\n  /**\n   * Triggers search Listner with search query.\n   *\n   * @param {string} query - search text entered by the user.\n   */\n  searchContacts(query: string) {\n    this.search$.next({ query, from: 0 });\n  }\n\n  /**\n   * Triggers sort Listner with mapped event.\n   *\n   * @param {string} sortEvent - table sort event.\n   */\n  sortApprovals(sortEvent: SortEvent) {\n    const castedDirection: SortDirection = sortEvent.direction.toUpperCase() as SortDirection;\n    const mappedEvent = { sort: sortEvent.column as ApprovalSort, direction: castedDirection };\n    this.sort$.next(mappedEvent);\n  }\n\n  /**\n   * Subscribes to the contact of a given contact ID.\n   *\n   * @param {Observable<string | null>} id Observable of Contact ID.\n   * @returns {Observable<ContactItem | undefined>} of contact Details with that ID.\n   */\n  getContactFrom(id: Observable<string | null>): Observable<ContactItem | undefined> {\n    this.subscriptions.push(id.subscribe(this.id$$));\n\n    return this.contact$;\n  }\n\n  /**\n   * Returns the details for a given ID.\n   *\n   * @param {string} id contact ID\n   * @returns {Observable<ContactItem | undefined>} Observable of contact Details for given ID.\n   */\n  getContactById(id: string): Observable<ContactItem | undefined> {\n    return this.contactHttpService.getContact(id);\n  }\n\n  /**\n   * Calls the delete API for specific ID\n   *\n   * @param {string} contactId Contact ID\n   * @returns {Observable<ApprovalRequired>} observable of a result\n   */\n  deleteContact(contactId: string): Observable<ApprovalRequired> {\n    this.acting = true;\n\n    return this.contactHttpService.deleteContact(contactId).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   *\n   * @param {ContactItem} contact contact item object\n   * @returns {Observable<ApprovalRequired>} response of a contact update\n   */\n  updateContact(contact: ContactItem): Observable<ApprovalRequired> {\n    this.acting = true;\n\n    return this.contactHttpService.updateContact(contact).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   * Calls the API for approval\n   *\n   * @param {string} approvalId - approval ID\n   * @param {string?} comment explanation of request approval\n   * @returns {Observable<string>} response of a contact edit approval\n   */\n  approveContact(approvalId: string, comment?: string): Observable<string> {\n    this.acting = true;\n\n    return this.contactHttpService.approveContact(approvalId, comment).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   * Calls the API for rejction\n   *\n   * @param {string} approvalId approval ID\n   * @param {string?} comment explanation of request rejection\n   * @returns {Observable<string>} response of an approval rejection\n   */\n  rejectContact(approvalId: string, comment?: string): Observable<string> {\n    this.acting = true;\n\n    return this.contactHttpService.rejectContact(approvalId, comment).pipe(finalize(() => (this.acting = false)));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    this.destroy$.complete();\n    this.loadMore$.complete();\n    this.changePage$.complete();\n    this.refresh$.complete();\n  }\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport { Countries as DefaultCountriesList, defaultAccountTypes } from './constants';\nimport { IBANCountryList } from './directives/iban-validator/countrySpec';\n\nconst emptyIbanCountriesList: IBANCountryList = {};\n\nexport const BB_CONTACT_COUNTRIES_LIST: InjectionToken<string> = new InjectionToken('BB_CONTACT_COUNTRIES_LIST');\n\nexport const BB_CONTACT_IBAN_COUNTRIES_LIST: InjectionToken<string> = new InjectionToken(\n  'BB_CONTACT_IBAN_COUNTRIES_LIST',\n);\n\nexport const BB_CONTACT_BANK_ACCOUNT_TYPES_LIST: InjectionToken<string> = new InjectionToken(\n  'BB_CONTACT_BANK_ACCOUNT_TYPES_LIST',\n);\n\nexport const ContactConfigProviders: Array<Provider> = [\n  {\n    provide: BB_CONTACT_COUNTRIES_LIST,\n    useValue: DefaultCountriesList,\n  },\n  {\n    provide: BB_CONTACT_IBAN_COUNTRIES_LIST,\n    useValue: emptyIbanCountriesList,\n  },\n  {\n    provide: BB_CONTACT_BANK_ACCOUNT_TYPES_LIST,\n    useValue: defaultAccountTypes,\n  },\n];\n","import { Inject, Injectable } from '@angular/core';\nimport { BB_CONTACT_COUNTRIES_LIST } from '../config.providers';\nimport { Observable, of } from 'rxjs';\nimport { ContactHttpService } from './contact-http.service';\nimport { catchError, map } from 'rxjs/operators';\n\n/**\n * Service responsible for providing available countries list\n */\n@Injectable()\nexport class ContactCountryListService {\n  constructor(\n    @Inject(BB_CONTACT_COUNTRIES_LIST) private countriesList: string[],\n    private readonly contactHttpService: ContactHttpService,\n  ) {}\n\n  /**\n   * Returns countries configured locally\n   *\n   * @returns {Observable<string[]>} - stream of country lists\n   */\n  getFromLocalSource(): Observable<string[]> {\n    return of(this.countriesList);\n  }\n\n  /**\n   * Return countries from external service\n   *\n   * @returns {Observable<string[]>} - stream of country lists\n   */\n  getFromExternalSource(): Observable<string[]> {\n    return this.contactHttpService.getSupportedCountries().pipe(\n      map((response) => response.body || []),\n      catchError(() => of([])),\n    );\n  }\n}\n","import { Provider } from '@angular/core';\nimport { ContactHttpService } from './contact-http.service';\nimport { ContactService } from './contact.service';\nimport { ContactCountryListService } from './contact-country-list.service';\n\nexport const provideContactServices: Provider[] = [\n  { provide: ContactHttpService, useClass: ContactHttpService },\n  {\n    provide: ContactService,\n    useClass: ContactService,\n    deps: [ContactHttpService],\n  },\n  ContactCountryListService,\n];\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ApprovalsHttpService } from '@backbase/data-ang/approvals';\nimport { ApprovalDetails, ContactsError } from '../models/types';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Service responsible for connecting Contact service to data-ang services\n *  - `ContactService`\n * This service is dependant on data-ang.\n *\n * @see ContactService\n * @see ApprovalsHttpService,\n * @usageNotes\n *\n * ```ts\n * @NgModule({\n *   ...\n *   providers: [\n *     ...\n *     ApprovalHttpService,\n *   ],\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ApprovalHttpService],\n * })\n *  export class ContactCommonAngComponent {\n * ```\n */\n@Injectable()\nexport class ApprovalHttpService {\n  constructor(private readonly approvalDataHttpService: ApprovalsHttpService) {}\n  /**\n   * Fetch approval object based on approval ID.\n   *\n   * @param {string} approvalId - Approval ID\n   * @returns {Observable<ApprovalDetails | ContactsError>} observable of response\n   */\n  getApproval(approvalId: string): Observable<ApprovalDetails | ContactsError> {\n    return this.approvalDataHttpService\n      .getApprovalByApprovalId({ approvalId })\n      .pipe(catchError((error: HttpErrorResponse) => of(new ContactsError(error))));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n/**\n * Service responsible for managing logic behind showing data discard confirmation\n */\n@Injectable()\nexport class ContactDiscardChangesService {\n  private discard$ = new Subject<boolean>();\n  private discardRequested$$ = new Subject();\n  private isFormActive = false;\n\n  /**\n   * Stream providing values when discarding data is requested from outside the form component\n   */\n  readonly discardRequested$ = this.discardRequested$$.asObservable();\n\n  /**\n   * Registers the event of introducing changes to the form\n   */\n  startChanges() {\n    this.isFormActive = true;\n  }\n\n  /**\n   * Registers the event of finishing working with the form\n   */\n  finishChanges() {\n    this.isFormActive = false;\n  }\n\n  /**\n   * Requests that data is discarded from the form\n   *\n   * @returns {Observable<boolean>} whether data was actually discarded fulfilling the request\n   */\n  requestDiscard(): Observable<boolean> {\n    if (this.isFormActive) {\n      this.discard$.complete();\n      this.discard$ = new Subject();\n      this.discardRequested$$.next();\n\n      return this.discard$.asObservable();\n    } else {\n      return of(true);\n    }\n  }\n\n  /**\n   * Confirms discarding data after it was requested\n   */\n  discard() {\n    this.discard$.next(true);\n    this.discard$.complete();\n    this.finishChanges();\n  }\n\n  /**\n   * Cancels discarding data after it was requested\n   */\n  cancelDiscard() {\n    this.discard$.next(false);\n    this.discard$.complete();\n  }\n}\n","/**\n * Collection of countries that are compliant with the ISO 13616 standard.\n * BBAN field is the representation of the format accepted by that country.\n *\n * inner\n * type {object}\n */\nconst _countries: IBANCountryList = {\n  AD: {\n    bban: '08N12C',\n    example: 'AD1200012030200359100100',\n    len: 24,\n    name: 'Andorra',\n  },\n  AE: {\n    bban: '03N16N',\n    example: 'AE260211000000230064016',\n    len: 23,\n    name: 'United Arab Emirates',\n  },\n  AL: {\n    bban: '08N16C',\n    example: 'AL47212110090000000235698741',\n    len: 28,\n    name: 'Albania',\n  },\n  AO: {\n    bban: '21N',\n    example: 'AO06000600000100037131174',\n    len: 25,\n    name: 'Angola',\n  },\n  AT: {\n    bban: '16N',\n    example: 'AT611904300234573201',\n    len: 20,\n    name: 'Austria',\n  },\n  AZ: {\n    bban: '04C20N',\n    example: 'AZ21NABZ00000000137010001944',\n    len: 28,\n    name: 'Azerbaijan',\n  },\n  BA: {\n    bban: '16N',\n    example: 'BA391290079401028494',\n    len: 20,\n    name: 'Bosnia and Herzegovina',\n  },\n  BE: {\n    bban: '12N',\n    example: 'BE68539007547034',\n    len: 16,\n    name: 'Belgium',\n  },\n  BF: {\n    bban: '23N',\n    example: 'BF1030134020015400945000643',\n    len: 27,\n    name: 'Burkina Faso',\n  },\n  BG: {\n    bban: '04A06N08C',\n    example: 'BG80BNBG96611020345678',\n    len: 22,\n    name: 'Bulgaria',\n  },\n  BH: {\n    bban: '04A14C',\n    example: 'BH29BMAG1299123456BH00',\n    len: 22,\n    name: 'Bahrain',\n  },\n  BI: {\n    bban: '12N',\n    example: 'BI43201011067444',\n    len: 16,\n    name: 'Burundi',\n  },\n  BJ: {\n    bban: '01A23N',\n    example: 'BJ11B00610100400271101192591',\n    len: 28,\n    name: 'Benin',\n  },\n  BL: {\n    bban: '10N11C02N',\n    example: 'BL6820041010050500013M02606',\n    len: 27,\n    name: 'Saint Barthelemy',\n  },\n  BR: {\n    bban: '23N01A01C',\n    example: 'BR9700360305000010009795493P1',\n    len: 29,\n    name: 'Brazil',\n  },\n  BY: {\n    bban: '04C20N',\n    example: 'BY86AKBB10100000002966000000',\n    len: 28,\n    name: 'Belarus',\n  },\n  CF: {\n    bban: '23C',\n    example: 'CF4220001000010120069700160',\n    len: 27,\n    name: 'Central African Republic',\n  },\n  CG: {\n    bban: '23C',\n    example: 'CG5230011000202151234567890',\n    len: 27,\n    name: 'Congo',\n  },\n  CH: {\n    bban: '05N12C',\n    example: 'CH9300762011623852957',\n    len: 21,\n    name: 'Switzerland',\n  },\n  CI: {\n    bban: '01A23N',\n    example: 'CI05A00060174100178530011852',\n    len: 28,\n    name: 'Ivory Coast',\n  },\n  CM: {\n    bban: '23N',\n    example: 'CM2110003001000500000605306',\n    len: 27,\n    name: 'Cameroon',\n  },\n  CR: {\n    bban: '17N',\n    example: 'CR0515202001026284066',\n    len: 21,\n    name: 'Costa Rica',\n  },\n  CV: {\n    bban: '21N',\n    example: 'CV64000300004547069110176',\n    len: 25,\n    name: 'Cape Verde',\n  },\n  CY: {\n    bban: '08N16C',\n    example: 'CY17002001280000001200527600',\n    len: 28,\n    name: 'Cyprus',\n  },\n  CZ: {\n    bban: '20N',\n    example: 'CZ6508000000192000145399',\n    len: 24,\n    name: 'Czech Republic',\n  },\n  DE: {\n    bban: '18N',\n    example: 'DE89370400440532013000',\n    len: 22,\n    name: 'Germany',\n  },\n  DJ: {\n    bban: '23C',\n    example: 'DJ2110002010010409943020008',\n    len: 27,\n    name: 'Djibouti',\n  },\n  DK: {\n    bban: '14N',\n    example: 'DK5000400440116243',\n    len: 18,\n    name: 'Denmark',\n  },\n  DO: {\n    bban: '04A20N',\n    example: 'DO28BAGR00000001212453611324',\n    len: 28,\n    name: 'Dominican Republic',\n  },\n  DZ: {\n    bban: '20N',\n    example: 'DZ4000400174401001050486',\n    len: 24,\n    name: 'Algeria',\n  },\n  EE: {\n    bban: '16N',\n    example: 'EE382200221020145685',\n    len: 20,\n    name: 'Estonia',\n  },\n  EG: {\n    bban: '25C',\n    example: 'EG380019000500000000263180002',\n    len: 29,\n    name: 'Egypt',\n  },\n  ES: {\n    bban: '20N',\n    example: 'ES9121000418450200051332',\n    len: 24,\n    name: 'Spain',\n  },\n  FI: {\n    bban: '14N',\n    example: 'FI2112345600000785',\n    len: 18,\n    name: 'Finland',\n  },\n  FO: {\n    bban: '14N',\n    example: 'FO1464600009692713',\n    len: 18,\n    name: 'Faroe Islands',\n  },\n  FR: {\n    bban: '10N11C02N',\n    example: 'FR7630007000110009970004942',\n    len: 27,\n    name: 'France',\n  },\n  GA: {\n    bban: '23C',\n    example: 'GA2140002000055602673300064',\n    len: 27,\n    name: 'Gabon',\n  },\n  GB: {\n    bban: '04A14N',\n    example: 'GB29NWBK60161331926819',\n    len: 22,\n    name: 'United Kingdom',\n  },\n  GE: {\n    bban: '02C16N',\n    example: 'GE29NB0000000101904917',\n    len: 22,\n    name: 'Georgia',\n  },\n  GF: {\n    bban: '10N11C02N',\n    example: 'GF4120041010050500013M02606',\n    len: 27,\n    name: 'French Guiana',\n  },\n  GI: {\n    bban: '04A15C',\n    example: 'GI75NWBK000000007099453',\n    len: 23,\n    name: 'Gibraltar',\n  },\n  GL: {\n    bban: '14N',\n    example: 'GL8964710001000206',\n    len: 18,\n    name: 'Greenland',\n  },\n  GP: {\n    bban: '10N11C02N',\n    example: 'GP1120041010050500013M02606',\n    len: 27,\n    name: 'Guadeloupe',\n  },\n  GQ: {\n    bban: '23C',\n    example: 'GQ7050002001003715228190196',\n    len: 27,\n    name: 'Equatorial Guinea',\n  },\n  GR: {\n    bban: '07N16C',\n    example: 'GR1601101250000000012300695',\n    len: 27,\n    name: 'Greece',\n  },\n  GT: {\n    bban: '04C20C',\n    example: 'GT82TRAJ01020000001210029690',\n    len: 28,\n    name: 'Guatemala',\n  },\n  GW: {\n    bban: '21C',\n    example: 'GW04GW1430010181800637601',\n    len: 25,\n    name: 'Guinea-Bissau',\n  },\n  HN: {\n    bban: '24C',\n    example: 'HN54PISA00000000000000123124',\n    len: 28,\n    name: 'Honduras',\n  },\n  HR: {\n    bban: '17N',\n    example: 'HR1210010051863000160',\n    len: 21,\n    name: 'Croatia',\n  },\n  HU: {\n    bban: '24N',\n    example: 'HU42117730161111101800000000',\n    len: 28,\n    name: 'Hungary',\n  },\n  IE: {\n    bban: '04C14N',\n    example: 'IE29AIBK93115212345678',\n    len: 22,\n    name: 'Ireland',\n  },\n  IL: {\n    bban: '19N',\n    example: 'IL620108000000099999999',\n    len: 23,\n    name: 'Israel',\n  },\n  IQ: {\n    bban: '19C',\n    example: 'IQ20CBIQ861800101010500',\n    len: 23,\n    name: 'Iraq',\n  },\n  IR: {\n    bban: '22N',\n    example: 'IR580540105180021273113007',\n    len: 26,\n    name: 'Iran',\n  },\n  IS: {\n    bban: '22N',\n    example: 'IS140159260076545510730339',\n    len: 26,\n    name: 'Iceland',\n  },\n  IT: {\n    bban: '01A10N12C',\n    example: 'IT60X0542811101000000123456',\n    len: 27,\n    name: 'Italy',\n  },\n  JO: {\n    bban: '04A22N',\n    example: 'JO94CBJO0010000000000131000302',\n    len: 30,\n    name: 'Jordan',\n  },\n  KM: {\n    bban: '23C',\n    example: 'KM4600005000010010904400137',\n    len: 27,\n    name: 'Comoros',\n  },\n  KW: {\n    bban: '04A22C',\n    example: 'KW74NBOK0000000000001000372151',\n    len: 30,\n    name: 'Kuwait',\n  },\n  KZ: {\n    bban: '03N13C',\n    example: 'KZ176010251000042993',\n    len: 20,\n    name: 'Kazakhstan',\n  },\n  LB: {\n    bban: '04N20C',\n    example: 'LB30099900000001001925579115',\n    len: 28,\n    name: 'Lebanon',\n  },\n  LC: {\n    bban: '28C',\n    example: 'LC14BOSL123456789012345678901234',\n    len: 32,\n    name: 'Saint Lucia',\n  },\n  LI: {\n    bban: '05N12C',\n    example: 'LI21088100002324013AA',\n    len: 21,\n    name: 'Liechtenstein',\n  },\n  LT: {\n    bban: '16N',\n    example: 'LT121000011101001000',\n    len: 20,\n    name: 'Lithuania',\n  },\n  LU: {\n    bban: '03N13C',\n    example: 'LU280019400644750000',\n    len: 20,\n    name: 'Luxembourg',\n  },\n  LV: {\n    bban: '04A13C',\n    example: 'LV80BANK0000435195001',\n    len: 21,\n    name: 'Latvia',\n  },\n  MA: {\n    bban: '24C',\n    example: 'MA64011519000001205000534921',\n    len: 28,\n    name: 'Morocco',\n  },\n  MC: {\n    bban: '10N11C02N',\n    example: 'MC5813488000010051108001292',\n    len: 27,\n    name: 'Monaco',\n  },\n  MD: {\n    bban: '02C18C',\n    example: 'MD24AG000225100013104168',\n    len: 24,\n    name: 'Moldova',\n  },\n  ME: {\n    bban: '18N',\n    example: 'ME25505000012345678951',\n    len: 22,\n    name: 'Montenegro',\n  },\n  MG: {\n    bban: '23N',\n    example: 'MG4600005030010101914016056',\n    len: 27,\n    name: 'Madagascar',\n  },\n  MK: {\n    bban: '03N10C02N',\n    example: 'MK07300000000042425',\n    len: 19,\n    name: 'Macedonia',\n  },\n  ML: {\n    bban: '01A23N',\n    example: 'ML03D00890170001002120000447',\n    len: 28,\n    name: 'Mali',\n  },\n  MQ: {\n    bban: '10N11C02N',\n    example: 'MQ5120041010050500013M02606',\n    len: 27,\n    name: 'Martinique',\n  },\n  MR: {\n    bban: '23N',\n    example: 'MR1300012000010000002037372',\n    len: 27,\n    name: 'Mauritania',\n  },\n  MT: {\n    bban: '04A05N18C',\n    example: 'MT84MALT011000012345MTLCAST001S',\n    len: 31,\n    name: 'Malta',\n  },\n  MU: {\n    bban: '04A19N03A',\n    example: 'MU17BOMM0101101030300200000MUR',\n    len: 30,\n    name: 'Mauritius',\n  },\n  MZ: {\n    bban: '21N',\n    example: 'MZ59000100000011834194157',\n    len: 25,\n    name: 'Mozambique',\n  },\n  NC: {\n    bban: '10N11C02N',\n    example: 'NC8420041010050500013M02606',\n    len: 27,\n    name: 'New Caledonia',\n  },\n  NE: {\n    bban: '24C',\n    example: 'NE58NE0380100100130305000268',\n    len: 28,\n    name: 'Niger',\n  },\n  NI: {\n    bban: '28C',\n    example: 'NI92BAMC000000000000000003123123',\n    len: 32,\n    name: 'Nicaragua',\n  },\n  NL: {\n    bban: '04A10N',\n    example: 'NL91ABNA0417164300',\n    len: 18,\n    name: 'Netherlands',\n  },\n  NO: {\n    bban: '11N',\n    example: 'NO9386011117947',\n    len: 15,\n    name: 'Norway',\n  },\n  PF: {\n    bban: '10N11C02N',\n    example: 'PF5720041010050500013M02606',\n    len: 27,\n    name: 'French Polynesia',\n  },\n  PK: {\n    bban: '04C16N',\n    example: 'PK24SCBL0000001171495101',\n    len: 24,\n    name: 'Pakistan',\n  },\n  PL: {\n    bban: '24N',\n    example: 'PL27114020040000300201355387',\n    len: 28,\n    name: 'Poland',\n  },\n  PM: {\n    bban: '10N11C02N',\n    example: 'PM3620041010050500013M02606',\n    len: 27,\n    name: 'Saint Pierre et Miquelon',\n  },\n  PS: {\n    bban: '04C21N',\n    example: 'PS92PALS000000000400123456702',\n    len: 29,\n    name: 'Palestine',\n  },\n  PT: {\n    bban: '21N',\n    example: 'PT50000200000163099310355',\n    len: 25,\n    name: 'Portugal',\n  },\n  QA: {\n    bban: '04A21C',\n    example: 'QA58DOHB00001234567890ABCDEFG',\n    len: 29,\n    name: 'Qatar',\n  },\n  RE: {\n    bban: '10N11C02N',\n    example: 'RE4220041010050500013M02606',\n    len: 27,\n    name: 'Reunion',\n  },\n  RO: {\n    bban: '04A16C',\n    example: 'RO49AAAA1B31007593840000',\n    len: 24,\n    name: 'Romania',\n  },\n  RS: {\n    bban: '18N',\n    example: 'RS35260005601001611379',\n    len: 22,\n    name: 'Serbia',\n  },\n  SA: {\n    bban: '02N18C',\n    example: 'SA0380000000608010167519',\n    len: 24,\n    name: 'Saudi Arabia',\n  },\n  SC: {\n    bban: '27C',\n    example: 'SC52BAHL01031234567890123456USD',\n    len: 31,\n    name: 'Seychelles',\n  },\n  SE: {\n    bban: '20N',\n    example: 'SE3550000000054910000003',\n    len: 24,\n    name: 'Sweden',\n  },\n  SI: {\n    bban: '15N',\n    example: 'SI56191000000123438',\n    len: 19,\n    name: 'Slovenia',\n  },\n  SK: {\n    bban: '20N',\n    example: 'SK3112000000198742637541',\n    len: 24,\n    name: 'Slovakia',\n  },\n  SM: {\n    bban: '01A10N12C',\n    example: 'SM86U0322509800000000270100',\n    len: 27,\n    name: 'San Marino',\n  },\n  SN: {\n    bban: '01A23N',\n    example: 'SN12K00100152000025690007542',\n    len: 28,\n    name: 'Senegal',\n  },\n  ST: {\n    bban: '21C',\n    example: 'ST23000200000289355710148',\n    len: 25,\n    name: 'Sao Tome and Principe',\n  },\n  SV: {\n    bban: '24C',\n    example: 'SV43ACAT00000000000000123123',\n    len: 28,\n    name: 'El Salvador',\n  },\n  TD: {\n    bban: '23C',\n    example: 'TD8960002000010271091600153',\n    len: 27,\n    name: 'Chad',\n  },\n  TF: {\n    bban: '10N11C02N',\n    example: 'TF2120041010050500013M02606',\n    len: 27,\n    name: 'French Southern Territories',\n  },\n  TG: {\n    bban: '24C',\n    example: 'TG53TG0090604310346500400070',\n    len: 28,\n    name: 'Togo',\n  },\n  TL: {\n    bban: '19N',\n    example: 'TL380080012345678910157',\n    len: 23,\n    name: 'East Timor',\n  },\n  TN: {\n    bban: '20N',\n    example: 'TN5914207207100707129648',\n    len: 24,\n    name: 'Tunisia',\n  },\n  TR: {\n    bban: '05N17C',\n    example: 'TR330006100519786457841326',\n    len: 26,\n    name: 'Turkey',\n  },\n  UA: {\n    bban: '06N19C',\n    example: 'UA573543470006762462054925026',\n    len: 29,\n    name: 'Ukraine',\n  },\n  VA: {\n    bban: '03C15N',\n    example: 'VA59001123000012345678',\n    len: 22,\n    name: 'Vatican City State',\n  },\n  VG: {\n    bban: '04C16N',\n    example: 'VG96VPVG0000012345678901',\n    len: 24,\n    name: 'Virgin Islands, British',\n  },\n  WF: {\n    bban: '10N11C02N',\n    example: 'WF9120041010050500013M02606',\n    len: 27,\n    name: 'Wallis and Futuna Islands',\n  },\n  XK: {\n    bban: '04N10N02N',\n    example: 'XK051212012345678906',\n    len: 20,\n    name: 'Kosovo',\n  },\n  YT: {\n    bban: '10N11C02N',\n    example: 'YT3120041010050500013M02606',\n    len: 27,\n    name: 'Mayotte',\n  },\n};\n\nlet countries: IBANCountryList = { ..._countries };\n\nexport interface Country {\n  bban: string;\n  example?: string;\n  len: number;\n  name: string;\n}\n\nexport interface IBANCountryList {\n  [countryCode: string]: Country;\n}\n\nexport const addIBANCountries = (newCountries: IBANCountryList): IBANCountryList => {\n  countries = { ...countries, ...newCountries };\n\n  return countries;\n};\n\n/**\n * Given an iban returns that country specification\n *\n * type {function}\n * inner\n * throws {Error} If Country code is not defined\n *\n * @param {string} iban A valid IBAN number\n * @returns {object} Country specification\n */\nexport default (iban: string): Country => {\n  const countryCode = iban.slice(0, 2);\n\n  if (!{}.hasOwnProperty.call(countries, countryCode)) {\n    throw new Error(`Country code ${countryCode} is not supported`);\n  }\n\n  return countries[countryCode];\n};\n","const A = 'A'.charCodeAt(0);\nconst Z = 'Z'.charCodeAt(0);\n\nconst PATTERNS: { [key: string]: string } = {\n  A: 'A-Z',\n  N: '0-9',\n  C: '0-9A-Z',\n};\n\n// Stores bban validation regular expressions\nconst cachedBbanRegexp: { [key: string]: RegExp | undefined } = {};\n\n// Generates BBAN format as a regular expression and cache it\nconst prepareBbanRegexp = (bbanFormat: string): RegExp | undefined => {\n  const matchedString = bbanFormat.match(/[0-9]{2}[ANC]/g);\n  if (!matchedString) return undefined;\n\n  const pattern = matchedString.reduce((prevPattern, block) => {\n    const quantity = parseInt(block.slice(0, 2), 10);\n    const code = block[2];\n\n    return `${prevPattern}[${PATTERNS[code]}]{${quantity}}`;\n  }, '');\n  cachedBbanRegexp[bbanFormat] = new RegExp(pattern);\n\n  return cachedBbanRegexp[bbanFormat];\n};\n\n// Move the four initial characters to the end of the string\nconst rearrangeIban = (iban: string): string => `${iban.slice(4)}${iban.slice(0, 4)}`;\n\n/**\n * Removes spaces\n *\n * name  compact\n *\n * @param  {string} str A given string\n * @returns {string}     Compact string\n */\nexport const compact = (str: string): string => str.replace(/\\s+/g, '');\n\n/**\n * Generates a regular expression from encoded representation\n * It is grouped in blocks of 3 characters, first 2 represents the number\n * and the last character represents the type of character.\n * A = Upper case alpha characters [A-Z]\n * N = Numeric characters [0-9]\n * C = Mixed case alphanumeric characters [0-9a-zA-Z]\n *\n * name bbanRegexp\n * inner\n *\n * @param  {string} bbanFormat Encoded regular expression\n * @returns {object}            Resulting regular expression\n */\nexport const bbanRegexp = (bbanFormat: string): RegExp | undefined =>\n  cachedBbanRegexp[bbanFormat] || prepareBbanRegexp(bbanFormat);\n\n/**\n * Replace each letter in the string with two digits,\n * thereby expanding the string, where A = 10, B = 11, ..., Z = 35\n *\n * name convertIban\n *\n * @param {string} iban IBAN number\n * @returns {string} convetedIBAN representation of the IBAN\n */\nexport const convertIban = (iban: string): string =>\n  rearrangeIban(iban)\n    .split('')\n    .reduce((result, char) => {\n      const code = char.charCodeAt(0);\n      let num;\n      if (code >= A && code <= Z) {\n        num = String(code - A + 10);\n      } else {\n        num = char;\n      }\n\n      return `${result}${num}`;\n    }, '');\n","/**\n * Calculates remainder for numbers bigger than 2^53 - 1,\n * not supported in JavaScript.\n *\n * type {function}\n * inner\n *\n * @param  {string} dividend The dividend\n * @param  {number} divisor  The divisor\n * @returns {number}          The remainder\n */\nexport default (dividend: string, divisor: number): number => {\n  if (dividend.length < 10) {\n    return parseInt(dividend, 10) % divisor;\n  }\n\n  let D = dividend.slice(9);\n  let N = dividend.slice(0, 9);\n  let remainder = parseInt(N, 10) % divisor;\n\n  while (D.length > 7) {\n    N = String(remainder) + D.slice(0, 7);\n    remainder = parseInt(N, 10) % divisor;\n    D = D.slice(7);\n  }\n\n  N = String(remainder) + D;\n\n  return parseInt(N, 10) % divisor;\n};\n","/**\n * module lib-bb-iban\n * description IBAN structure validation library\n */\n\n// References:\n// https://www.swift.com/standards/data-standards/iban\n// https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\nimport countrySpecification from './countrySpec';\nimport { bbanRegexp, compact, convertIban } from './helpers';\nimport bigIntMod from './bigIntegerMod';\nimport { AbstractControl } from '@angular/forms';\n\n/**\n * Validates IBAN structure defined in ISO 13616-1 and ISO/IEC 7064 (MOD97-10).\n *\n * name isValidIBAN\n * type {function}\n *\n * @param {string} iban International bank account number.\n * @returns {boolean} whether input is a valid iban\n */\nexport const isValidIBAN = (iban: string): boolean => {\n  if (typeof iban !== 'string') {\n    return false;\n  }\n\n  let spec;\n  const compactIBAN = compact(iban.toUpperCase());\n\n  try {\n    spec = countrySpecification(compactIBAN);\n  } catch (error) {\n    return false;\n  }\n\n  const specBban = bbanRegexp(spec.bban) as RegExp;\n\n  return (\n    spec.len === compactIBAN.length &&\n    specBban.test(compactIBAN.slice(4)) &&\n    bigIntMod(convertIban(compactIBAN), 97) === 1\n  );\n};\n\n/**\n * Validates IBAN structure defined in ISO 13616-1 and ISO/IEC 7064 (MOD97-10).\n *\n * name isValidIBANFormControl\n * type {function}\n *\n * @param {AbstractControl} control control with iban International bank account number\n * @returns {Record<string, any>}\n * example: NL91ABNA0417164300\n */\nexport const isValidIBANFormControl = (control: AbstractControl): null | { [key: string]: any } => {\n  const iban = control.value;\n  if (typeof iban !== 'string') {\n    return { invalidIban: { value: control.value } };\n  }\n\n  let spec;\n  const compactIBAN = compact(iban.toUpperCase());\n  try {\n    spec = countrySpecification(compactIBAN);\n  } catch (error) {\n    return { invalidIban: { value: control.value } };\n  }\n\n  const specBban = bbanRegexp(spec.bban) as RegExp;\n  const res: boolean =\n    spec.len === compactIBAN.length &&\n    specBban.test(compactIBAN.slice(4)) &&\n    bigIntMod(convertIban(compactIBAN), 97) === 1;\n\n  return res ? null : { invalidIban: { value: control.value } };\n};\n\n/**\n * Validates BBAN structure defined in ISO 13616-1.\n *\n * name isValidBBAN\n * type {function}\n *\n * @param {string} iban International bank account number.\n * @returns {boolean} whether input is a valid bban\n */\nexport const isValidBBAN = (iban: string): boolean => {\n  if (typeof iban !== 'string') {\n    return false;\n  }\n\n  let spec;\n  const compactIBAN = compact(iban);\n\n  try {\n    spec = countrySpecification(compactIBAN);\n  } catch (error) {\n    return false;\n  }\n\n  // Remove country code and check digits\n  const bban = compactIBAN.slice(4);\n\n  const specBban = bbanRegexp(spec.bban) as RegExp;\n\n  return bban.length === spec.len - 4 && specBban.test(bban);\n};\n","import { Directive, Inject } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { isValidIBANFormControl } from './index';\nimport { BB_CONTACT_IBAN_COUNTRIES_LIST } from '../../config.providers';\nimport { addIBANCountries, IBANCountryList } from './countrySpec';\n\n/**\n * This is a directive to validate iban\n *\n * @usageNotes\n *\n * ### validates the iban\n *\n * ```html\n * <input type=\"text\" #ibanControl=\"ngModel\" [(ngModel)]=\"iban\" bbIbanValidatorUi />\n * ```\n * @ngModule IbanValidatorModule\n */\n\n@Directive({\n  selector: '[bbIbanValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: IbanValidatorDirective, multi: true }],\n})\nexport class IbanValidatorDirective implements Validator {\n  constructor(@Inject(BB_CONTACT_IBAN_COUNTRIES_LIST) private readonly ibanCountryList: IBANCountryList) {\n    addIBANCountries(this.ibanCountryList);\n  }\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return control && control.value ? isValidIBANFormControl(control) : null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IbanValidatorDirective } from './iban-validator.directive';\n\n/**\n * Exports:\n * - IbanValidatorDirective\n */\n@NgModule({\n  declarations: [IbanValidatorDirective],\n  exports: [IbanValidatorDirective],\n})\nexport class IbanValidatorModule {}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n/**\n * This is a directive to validate presence of email top-level domain\n *\n * @usageNotes\n *\n * ```html\n * <input type=\"email\" #ibanControl=\"ngModel\" [(ngModel)]=\"iban\" bbDomainValidator />\n * ```\n * @ngModule EmailDomainModule\n */\n\n@Directive({\n  selector: '[bbEmailDomainValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: EmailDomainValidatorDirective, multi: true }],\n})\nexport class EmailDomainValidatorDirective implements Validator {\n  private topLevelDomainRegex = /@.*\\.(([a-zA-Z])|([a-zA-Z0-9][a-zA-Z0-9.\\-]*[a-zA-Z0-9]))$/;\n\n  /**\n   * Performs validation\n   *\n   * @param {AbstractControl} control form control\n   * @returns {Record<string, any>?} form control error object\n   */\n  validate(control: AbstractControl): Record<string, any> | null {\n    const value = control?.value;\n    if (!value) return null;\n\n    return this.topLevelDomainRegex.test(value) ? null : { email: { value } };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EmailDomainValidatorDirective } from './email-domain-validator.directive';\n\n/**\n * Exports:\n * - EmailDomainValidatorDirective\n */\n@NgModule({\n  declarations: [EmailDomainValidatorDirective],\n  exports: [EmailDomainValidatorDirective],\n})\nexport class EmailDomainModule {}\n","export const getRelativeDate = (next?: number) => {\n  const date = new Date();\n  if (next) {\n    date.setDate(date.getDate() + next);\n  }\n\n  return date.toISOString().slice(0, 10);\n};\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { getRelativeDate } from '../../helpers/date';\n\nexport enum RelativeDate {\n  Yesterday = 'Yesterday',\n  Today = 'Today',\n  Tomorrow = 'Tomorrow',\n}\n/**\n * Pipe is used to show the date in a specific format\n *\n * @usageNotes\n *\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *   ],\n *  declarations: RelativeDatePipe\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Can be used in html\n *\n * ```html\n * {{todayDate | relativeDate: 'mediumTime'}}\n * ```\n * @ngModule RelativeDateModule\n */\n@Pipe({ name: 'relativeDate' })\nexport class RelativeDatePipe implements PipeTransform {\n  readonly getRelativeDateHelper = getRelativeDate;\n\n  constructor(private readonly datePipe: DatePipe) {}\n\n  transform(value: string, dateFormat?: string) {\n    let result;\n\n    const yesterday = this.getRelativeDateHelper(-1);\n    const today = this.getRelativeDateHelper();\n    const tomorrow = this.getRelativeDateHelper(1);\n\n    switch (new Date(value).toISOString().slice(0, 10)) {\n      case yesterday:\n        result = RelativeDate.Yesterday;\n        break;\n      case today:\n        result = RelativeDate.Today;\n        break;\n      case tomorrow:\n        result = RelativeDate.Tomorrow;\n        break;\n      default:\n        result = this.datePipe.transform(value, dateFormat);\n    }\n\n    return result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RelativeDatePipe } from './relative-date.pipe';\nimport { CommonModule, DatePipe } from '@angular/common';\n\n/**\n * Exports:\n * - RelativeDatePipe\n */\n@NgModule({\n  declarations: [RelativeDatePipe],\n  providers: [DatePipe],\n  imports: [CommonModule],\n  exports: [RelativeDatePipe],\n})\nexport class RelativeDateModule {}\n","import { AbstractControl } from '@angular/forms';\n\nexport const isFormGroupValid = (controls: { [key: string]: AbstractControl }): boolean =>\n  Object.values(controls).reduce((valid, control) => {\n    control.markAllAsTouched();\n    control.updateValueAndValidity();\n\n    return valid && control.valid;\n  }, true);\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\n\n/**\n * This is a directive to validate white spaces\n *\n * @usageNotes\n *\n * ### validates the white spaces\n *\n * ```html\n *  <input type=\"text\" #nameControl=\"ngModel\" [(ngModel)]=\"name\" bbNoWhiteSpace />\n * ```\n * @ngModule NoWhiteSpaceModule\n */\n@Directive({\n  selector: '[bbNoWhiteSpace]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NoWhiteSpaceValidatorDirective, multi: true }],\n})\nexport class NoWhiteSpaceValidatorDirective implements Validator {\n  validate(control: AbstractControl): ValidationErrors | null {\n    return noWhiteSpaceValidator(control);\n  }\n}\n\nexport const noWhiteSpaceValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const isWhitespace = (control.value || '').trim().length === 0;\n\n  return isWhitespace ? { required: true } : null;\n};\n","import { NgModule } from '@angular/core';\nimport { NoWhiteSpaceValidatorDirective } from './no-white-space.directive';\n\n/**\n * Exports:\n * - NoWhiteSpaceValidatorDirective\n */\n@NgModule({\n  declarations: [NoWhiteSpaceValidatorDirective],\n  exports: [NoWhiteSpaceValidatorDirective],\n})\nexport class NoWhiteSpaceModule {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { CountryItemComponent } from './country-item.component';\n\n/**\n * This is an extension slot to be used for customizing country value.\n *\n * @usageNotes\n *\n * ### Display country\n *\n * ```html\n * <ng-template bbCountryItemCustomizable let-hostRef>\n *   <ng-container [ngSwitch]=\"hostRef.code\">\n *     <ng-container *ngSwitchCase=\"'AF'\" i18n=\"@@bb-country-item.AF\">Afghanistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'AX'\" i18n=\"@@bb-country-item.AX\">Aland Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'AL'\" i18n=\"@@bb-country-item.AL\">Albania</ng-container>\n *     <ng-container *ngSwitchCase=\"'DZ'\" i18n=\"@@bb-country-item.DZ\">Algeria</ng-container>\n *     <ng-container *ngSwitchCase=\"'AS'\" i18n=\"@@bb-country-item.AS\">American Samoa</ng-container>\n *     <ng-container *ngSwitchCase=\"'AD'\" i18n=\"@@bb-country-item.AD\">Andorra</ng-container>\n *     <ng-container *ngSwitchCase=\"'AO'\" i18n=\"@@bb-country-item.AO\">Angola</ng-container>\n *     <ng-container *ngSwitchCase=\"'AI'\" i18n=\"@@bb-country-item.AI\">Anguilla</ng-container>\n *     <ng-container *ngSwitchCase=\"'AQ'\" i18n=\"@@bb-country-item.AQ\">Antarctica</ng-container>\n *     <ng-container *ngSwitchCase=\"'AG'\" i18n=\"@@bb-country-item.AG\">Antigua and Barbuda</ng-container>\n *     <ng-container *ngSwitchCase=\"'AR'\" i18n=\"@@bb-country-item.AR\">Argentina</ng-container>\n *     <ng-container *ngSwitchCase=\"'AM'\" i18n=\"@@bb-country-item.AM\">Armenia</ng-container>\n *     <ng-container *ngSwitchCase=\"'AW'\" i18n=\"@@bb-country-item.AW\">Aruba</ng-container>\n *     <ng-container *ngSwitchCase=\"'AU'\" i18n=\"@@bb-country-item.AU\">Australia</ng-container>\n *     <ng-container *ngSwitchCase=\"'AT'\" i18n=\"@@bb-country-item.AT\">Austria</ng-container>\n *     <ng-container *ngSwitchCase=\"'AZ'\" i18n=\"@@bb-country-item.AZ\">Azerbaijan</ng-container>\n *     <ng-container *ngSwitchCase=\"'BS'\" i18n=\"@@bb-country-item.BS\">Bahamas</ng-container>\n *     <ng-container *ngSwitchCase=\"'BH'\" i18n=\"@@bb-country-item.BH\">Bahrain</ng-container>\n *     <ng-container *ngSwitchCase=\"'BD'\" i18n=\"@@bb-country-item.BD\">Bangladesh</ng-container>\n *     <ng-container *ngSwitchCase=\"'BB'\" i18n=\"@@bb-country-item.BB\">Barbados</ng-container>\n *     <ng-container *ngSwitchCase=\"'BY'\" i18n=\"@@bb-country-item.BY\">Belarus</ng-container>\n *     <ng-container *ngSwitchCase=\"'BE'\" i18n=\"@@bb-country-item.BE\">Belgium</ng-container>\n *     <ng-container *ngSwitchCase=\"'BZ'\" i18n=\"@@bb-country-item.BZ\">Belize</ng-container>\n *     <ng-container *ngSwitchCase=\"'BJ'\" i18n=\"@@bb-country-item.BJ\">Benin</ng-container>\n *     <ng-container *ngSwitchCase=\"'BM'\" i18n=\"@@bb-country-item.BM\">Bermuda</ng-container>\n *     <ng-container *ngSwitchCase=\"'BT'\" i18n=\"@@bb-country-item.BT\">Bhutan</ng-container>\n *     <ng-container *ngSwitchCase=\"'BO'\" i18n=\"@@bb-country-item.BO\">Bolivia, Plurinational State of</ng-container>\n *     <ng-container *ngSwitchCase=\"'BQ'\" i18n=\"@@bb-country-item.BQ\">Bonaire, Saint Eustatius and Saba</ng-container>\n *     <ng-container *ngSwitchCase=\"'BA'\" i18n=\"@@bb-country-item.BA\">Bosnia and Herzegovina</ng-container>\n *     <ng-container *ngSwitchCase=\"'BW'\" i18n=\"@@bb-country-item.BW\">Botswana</ng-container>\n *     <ng-container *ngSwitchCase=\"'BV'\" i18n=\"@@bb-country-item.BV\">Bouvet Island</ng-container>\n *     <ng-container *ngSwitchCase=\"'BR'\" i18n=\"@@bb-country-item.BR\">Brazil</ng-container>\n *     <ng-container *ngSwitchCase=\"'IO'\" i18n=\"@@bb-country-item.IO\">British Indian Ocean Territory</ng-container>\n *     <ng-container *ngSwitchCase=\"'BN'\" i18n=\"@@bb-country-item.BN\">Brunei Darussalam</ng-container>\n *     <ng-container *ngSwitchCase=\"'BG'\" i18n=\"@@bb-country-item.BG\">Bulgaria</ng-container>\n *     <ng-container *ngSwitchCase=\"'BF'\" i18n=\"@@bb-country-item.BF\">Burkina Faso</ng-container>\n *     <ng-container *ngSwitchCase=\"'BI'\" i18n=\"@@bb-country-item.BI\">Burundi</ng-container>\n *     <ng-container *ngSwitchCase=\"'KH'\" i18n=\"@@bb-country-item.KH\">Cambodia</ng-container>\n *     <ng-container *ngSwitchCase=\"'CM'\" i18n=\"@@bb-country-item.CM\">Cameroon</ng-container>\n *     <ng-container *ngSwitchCase=\"'CA'\" i18n=\"@@bb-country-item.CA\">Canada</ng-container>\n *     <ng-container *ngSwitchCase=\"'CV'\" i18n=\"@@bb-country-item.CV\">Cape Verde</ng-container>\n *     <ng-container *ngSwitchCase=\"'KY'\" i18n=\"@@bb-country-item.KY\">Cayman Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'CF'\" i18n=\"@@bb-country-item.CF\">Central African Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'TD'\" i18n=\"@@bb-country-item.TD\">Chad</ng-container>\n *     <ng-container *ngSwitchCase=\"'CL'\" i18n=\"@@bb-country-item.CL\">Chile</ng-container>\n *     <ng-container *ngSwitchCase=\"'CN'\" i18n=\"@@bb-country-item.CN\">China</ng-container>\n *     <ng-container *ngSwitchCase=\"'CX'\" i18n=\"@@bb-country-item.CX\">Christmas Island</ng-container>\n *     <ng-container *ngSwitchCase=\"'CC'\" i18n=\"@@bb-country-item.CC\">Cocos (Keeling) Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'CO'\" i18n=\"@@bb-country-item.CO\">Colombia</ng-container>\n *     <ng-container *ngSwitchCase=\"'KM'\" i18n=\"@@bb-country-item.KM\">Comoros</ng-container>\n *     <ng-container *ngSwitchCase=\"'CG'\" i18n=\"@@bb-country-item.CG\">Congo</ng-container>\n *     <ng-container *ngSwitchCase=\"'CD'\" i18n=\"@@bb-country-item.CD\">Congo, The Democratic Republic of the</ng-container>\n *     <ng-container *ngSwitchCase=\"'CK'\" i18n=\"@@bb-country-item.CK\">Cook Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'CR'\" i18n=\"@@bb-country-item.CR\">Costa Rica</ng-container>\n *     <ng-container *ngSwitchCase=\"'CI'\" i18n=\"@@bb-country-item.CI\">Cote d'Ivoire</ng-container>\n *     <ng-container *ngSwitchCase=\"'HR'\" i18n=\"@@bb-country-item.HR\">Croatia</ng-container>\n *     <ng-container *ngSwitchCase=\"'CU'\" i18n=\"@@bb-country-item.CU\">Cuba</ng-container>\n *     <ng-container *ngSwitchCase=\"'CW'\" i18n=\"@@bb-country-item.CW\">Curacao</ng-container>\n *     <ng-container *ngSwitchCase=\"'CY'\" i18n=\"@@bb-country-item.CY\">Cyprus</ng-container>\n *     <ng-container *ngSwitchCase=\"'CZ'\" i18n=\"@@bb-country-item.CZ\">Czech Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'DK'\" i18n=\"@@bb-country-item.DK\">Denmark</ng-container>\n *     <ng-container *ngSwitchCase=\"'DJ'\" i18n=\"@@bb-country-item.DJ\">Djibouti</ng-container>\n *     <ng-container *ngSwitchCase=\"'DM'\" i18n=\"@@bb-country-item.DM\">Dominica</ng-container>\n *     <ng-container *ngSwitchCase=\"'DO'\" i18n=\"@@bb-country-item.DO\">Dominican Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'EC'\" i18n=\"@@bb-country-item.EC\">Ecuador</ng-container>\n *     <ng-container *ngSwitchCase=\"'EG'\" i18n=\"@@bb-country-item.EG\">Egypt</ng-container>\n *     <ng-container *ngSwitchCase=\"'SV'\" i18n=\"@@bb-country-item.SV\">El Salvador</ng-container>\n *     <ng-container *ngSwitchCase=\"'GQ'\" i18n=\"@@bb-country-item.GQ\">Equatorial Guinea</ng-container>\n *     <ng-container *ngSwitchCase=\"'ER'\" i18n=\"@@bb-country-item.ER\">Eritrea</ng-container>\n *     <ng-container *ngSwitchCase=\"'EE'\" i18n=\"@@bb-country-item.EE\">Estonia</ng-container>\n *     <ng-container *ngSwitchCase=\"'ET'\" i18n=\"@@bb-country-item.ET\">Ethiopia</ng-container>\n *     <ng-container *ngSwitchCase=\"'FK'\" i18n=\"@@bb-country-item.FK\">Falkland Islands (Malvinas)</ng-container>\n *     <ng-container *ngSwitchCase=\"'FO'\" i18n=\"@@bb-country-item.FO\">Faroe Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'FJ'\" i18n=\"@@bb-country-item.FJ\">Fiji</ng-container>\n *     <ng-container *ngSwitchCase=\"'FI'\" i18n=\"@@bb-country-item.FI\">Finland</ng-container>\n *     <ng-container *ngSwitchCase=\"'FR'\" i18n=\"@@bb-country-item.FR\">France</ng-container>\n *     <ng-container *ngSwitchCase=\"'GF'\" i18n=\"@@bb-country-item.GF\">French Guiana</ng-container>\n *     <ng-container *ngSwitchCase=\"'PF'\" i18n=\"@@bb-country-item.PF\">French Polynesia</ng-container>\n *     <ng-container *ngSwitchCase=\"'TF'\" i18n=\"@@bb-country-item.TF\">French Southern Territories</ng-container>\n *     <ng-container *ngSwitchCase=\"'GA'\" i18n=\"@@bb-country-item.GA\">Gabon</ng-container>\n *     <ng-container *ngSwitchCase=\"'GM'\" i18n=\"@@bb-country-item.GM\">Gambia</ng-container>\n *     <ng-container *ngSwitchCase=\"'GE'\" i18n=\"@@bb-country-item.GE\">Georgia</ng-container>\n *     <ng-container *ngSwitchCase=\"'DE'\" i18n=\"@@bb-country-item.DE\">Germany</ng-container>\n *     <ng-container *ngSwitchCase=\"'GH'\" i18n=\"@@bb-country-item.GH\">Ghana</ng-container>\n *     <ng-container *ngSwitchCase=\"'GI'\" i18n=\"@@bb-country-item.GI\">Gibraltar</ng-container>\n *     <ng-container *ngSwitchCase=\"'GR'\" i18n=\"@@bb-country-item.GR\">Greece</ng-container>\n *     <ng-container *ngSwitchCase=\"'GL'\" i18n=\"@@bb-country-item.GL\">Greenland</ng-container>\n *     <ng-container *ngSwitchCase=\"'GD'\" i18n=\"@@bb-country-item.GD\">Grenada</ng-container>\n *     <ng-container *ngSwitchCase=\"'GP'\" i18n=\"@@bb-country-item.GP\">Guadeloupe</ng-container>\n *     <ng-container *ngSwitchCase=\"'GU'\" i18n=\"@@bb-country-item.GU\">Guam</ng-container>\n *     <ng-container *ngSwitchCase=\"'GT'\" i18n=\"@@bb-country-item.GT\">Guatemala</ng-container>\n *     <ng-container *ngSwitchCase=\"'GG'\" i18n=\"@@bb-country-item.GG\">Guernsey</ng-container>\n *     <ng-container *ngSwitchCase=\"'GN'\" i18n=\"@@bb-country-item.GN\">Guinea</ng-container>\n *     <ng-container *ngSwitchCase=\"'GW'\" i18n=\"@@bb-country-item.GW\">Guinea-Bissau</ng-container>\n *     <ng-container *ngSwitchCase=\"'GY'\" i18n=\"@@bb-country-item.GY\">Guyana</ng-container>\n *     <ng-container *ngSwitchCase=\"'HT'\" i18n=\"@@bb-country-item.HT\">Haiti</ng-container>\n *     <ng-container *ngSwitchCase=\"'HM'\" i18n=\"@@bb-country-item.HM\">Heard Island and McDonald Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'VA'\" i18n=\"@@bb-country-item.VA\">Holy See (Vatican City State)</ng-container>\n *     <ng-container *ngSwitchCase=\"'HN'\" i18n=\"@@bb-country-item.HN\">Honduras</ng-container>\n *     <ng-container *ngSwitchCase=\"'HK'\" i18n=\"@@bb-country-item.HK\">Hong Kong</ng-container>\n *     <ng-container *ngSwitchCase=\"'HU'\" i18n=\"@@bb-country-item.HU\">Hungary</ng-container>\n *     <ng-container *ngSwitchCase=\"'IS'\" i18n=\"@@bb-country-item.IS\">Iceland</ng-container>\n *     <ng-container *ngSwitchCase=\"'IN'\" i18n=\"@@bb-country-item.IN\">India</ng-container>\n *     <ng-container *ngSwitchCase=\"'ID'\" i18n=\"@@bb-country-item.ID\">Indonesia</ng-container>\n *     <ng-container *ngSwitchCase=\"'IR'\" i18n=\"@@bb-country-item.IR\">Iran, Islamic Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'IQ'\" i18n=\"@@bb-country-item.IQ\">Iraq</ng-container>\n *     <ng-container *ngSwitchCase=\"'IE'\" i18n=\"@@bb-country-item.IE\">Ireland</ng-container>\n *     <ng-container *ngSwitchCase=\"'IM'\" i18n=\"@@bb-country-item.IM\">Isle of Man</ng-container>\n *     <ng-container *ngSwitchCase=\"'IL'\" i18n=\"@@bb-country-item.IL\">Israel</ng-container>\n *     <ng-container *ngSwitchCase=\"'IT'\" i18n=\"@@bb-country-item.IT\">Italy</ng-container>\n *     <ng-container *ngSwitchCase=\"'JM'\" i18n=\"@@bb-country-item.JM\">Jamaica</ng-container>\n *     <ng-container *ngSwitchCase=\"'JP'\" i18n=\"@@bb-country-item.JP\">Japan</ng-container>\n *     <ng-container *ngSwitchCase=\"'JE'\" i18n=\"@@bb-country-item.JE\">Jersey</ng-container>\n *     <ng-container *ngSwitchCase=\"'JO'\" i18n=\"@@bb-country-item.JO\">Jordan</ng-container>\n *     <ng-container *ngSwitchCase=\"'KZ'\" i18n=\"@@bb-country-item.KZ\">Kazakhstan</ng-container>\n *     <ng-container *ngSwitchCase=\"'KE'\" i18n=\"@@bb-country-item.KE\">Kenya</ng-container>\n *     <ng-container *ngSwitchCase=\"'KI'\" i18n=\"@@bb-country-item.KI\">Kiribati</ng-container>\n *     <ng-container *ngSwitchCase=\"'KP'\" i18n=\"@@bb-country-item.KP\">Korea, Democratic People's Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'KR'\" i18n=\"@@bb-country-item.KR\">Korea, Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'KW'\" i18n=\"@@bb-country-item.KW\">Kuwait</ng-container>\n *     <ng-container *ngSwitchCase=\"'KG'\" i18n=\"@@bb-country-item.KG\">Kyrgyzstan</ng-container>\n *     <ng-container *ngSwitchCase=\"'LA'\" i18n=\"@@bb-country-item.LA\">Lao People's Democratic Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'LV'\" i18n=\"@@bb-country-item.LV\">Latvia</ng-container>\n *     <ng-container *ngSwitchCase=\"'LB'\" i18n=\"@@bb-country-item.LB\">Lebanon</ng-container>\n *     <ng-container *ngSwitchCase=\"'LS'\" i18n=\"@@bb-country-item.LS\">Lesotho</ng-container>\n *     <ng-container *ngSwitchCase=\"'LR'\" i18n=\"@@bb-country-item.LR\">Liberia</ng-container>\n *     <ng-container *ngSwitchCase=\"'LY'\" i18n=\"@@bb-country-item.LY\">Libyan Arab Jamahiriya</ng-container>\n *     <ng-container *ngSwitchCase=\"'LI'\" i18n=\"@@bb-country-item.LI\">Liechtenstein</ng-container>\n *     <ng-container *ngSwitchCase=\"'LT'\" i18n=\"@@bb-country-item.LT\">Lithuania</ng-container>\n *     <ng-container *ngSwitchCase=\"'LU'\" i18n=\"@@bb-country-item.LU\">Luxembourg</ng-container>\n *     <ng-container *ngSwitchCase=\"'MO'\" i18n=\"@@bb-country-item.MO\">Macao</ng-container>\n *     <ng-container *ngSwitchCase=\"'MK'\" i18n=\"@@bb-country-item.MK\">Macedonia, The Former Yugoslav Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'MG'\" i18n=\"@@bb-country-item.MG\">Madagascar</ng-container>\n *     <ng-container *ngSwitchCase=\"'MW'\" i18n=\"@@bb-country-item.MW\">Malawi</ng-container>\n *     <ng-container *ngSwitchCase=\"'MY'\" i18n=\"@@bb-country-item.MY\">Malaysia</ng-container>\n *     <ng-container *ngSwitchCase=\"'MV'\" i18n=\"@@bb-country-item.MV\">Maldives</ng-container>\n *     <ng-container *ngSwitchCase=\"'ML'\" i18n=\"@@bb-country-item.ML\">Mali</ng-container>\n *     <ng-container *ngSwitchCase=\"'MT'\" i18n=\"@@bb-country-item.MT\">Malta</ng-container>\n *     <ng-container *ngSwitchCase=\"'MH'\" i18n=\"@@bb-country-item.MH\">Marshall Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'MQ'\" i18n=\"@@bb-country-item.MQ\">Martinique</ng-container>\n *     <ng-container *ngSwitchCase=\"'MR'\" i18n=\"@@bb-country-item.MR\">Mauritania</ng-container>\n *     <ng-container *ngSwitchCase=\"'MU'\" i18n=\"@@bb-country-item.MU\">Mauritius</ng-container>\n *     <ng-container *ngSwitchCase=\"'YT'\" i18n=\"@@bb-country-item.YT\">Mayotte</ng-container>\n *     <ng-container *ngSwitchCase=\"'MX'\" i18n=\"@@bb-country-item.MX\">Mexico</ng-container>\n *     <ng-container *ngSwitchCase=\"'FM'\" i18n=\"@@bb-country-item.FM\">Micronesia, Federated States of</ng-container>\n *     <ng-container *ngSwitchCase=\"'MD'\" i18n=\"@@bb-country-item.MD\">Moldova, Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'MC'\" i18n=\"@@bb-country-item.MC\">Monaco</ng-container>\n *     <ng-container *ngSwitchCase=\"'MN'\" i18n=\"@@bb-country-item.MN\">Mongolia</ng-container>\n *     <ng-container *ngSwitchCase=\"'ME'\" i18n=\"@@bb-country-item.ME\">Montenegro</ng-container>\n *     <ng-container *ngSwitchCase=\"'MS'\" i18n=\"@@bb-country-item.MS\">Montserrat</ng-container>\n *     <ng-container *ngSwitchCase=\"'MA'\" i18n=\"@@bb-country-item.MA\">Morocco</ng-container>\n *     <ng-container *ngSwitchCase=\"'MZ'\" i18n=\"@@bb-country-item.MZ\">Mozambique</ng-container>\n *     <ng-container *ngSwitchCase=\"'MM'\" i18n=\"@@bb-country-item.MM\">Myanmar</ng-container>\n *     <ng-container *ngSwitchCase=\"'NA'\" i18n=\"@@bb-country-item.NA\">Namibia</ng-container>\n *     <ng-container *ngSwitchCase=\"'NR'\" i18n=\"@@bb-country-item.NR\">Nauru</ng-container>\n *     <ng-container *ngSwitchCase=\"'NP'\" i18n=\"@@bb-country-item.NP\">Nepal</ng-container>\n *     <ng-container *ngSwitchCase=\"'NL'\" i18n=\"@@bb-country-item.NL\">Netherlands</ng-container>\n *     <ng-container *ngSwitchCase=\"'NC'\" i18n=\"@@bb-country-item.NC\">New Caledonia</ng-container>\n *     <ng-container *ngSwitchCase=\"'NZ'\" i18n=\"@@bb-country-item.NZ\">New Zealand</ng-container>\n *     <ng-container *ngSwitchCase=\"'NI'\" i18n=\"@@bb-country-item.NI\">Nicaragua</ng-container>\n *     <ng-container *ngSwitchCase=\"'NE'\" i18n=\"@@bb-country-item.NE\">Niger</ng-container>\n *     <ng-container *ngSwitchCase=\"'NG'\" i18n=\"@@bb-country-item.NG\">Nigeria</ng-container>\n *     <ng-container *ngSwitchCase=\"'NU'\" i18n=\"@@bb-country-item.NU\">Niue</ng-container>\n *     <ng-container *ngSwitchCase=\"'NF'\" i18n=\"@@bb-country-item.NF\">Norfolk Island</ng-container>\n *     <ng-container *ngSwitchCase=\"'MP'\" i18n=\"@@bb-country-item.MP\">Northern Mariana Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'NO'\" i18n=\"@@bb-country-item.NO\">Norway</ng-container>\n *     <ng-container *ngSwitchCase=\"'PS'\" i18n=\"@@bb-country-item.PS\">Occupied Palestinian Territory</ng-container>\n *     <ng-container *ngSwitchCase=\"'OM'\" i18n=\"@@bb-country-item.OM\">Oman</ng-container>\n *     <ng-container *ngSwitchCase=\"'PK'\" i18n=\"@@bb-country-item.PK\">Pakistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'PW'\" i18n=\"@@bb-country-item.PW\">Palau</ng-container>\n *     <ng-container *ngSwitchCase=\"'PA'\" i18n=\"@@bb-country-item.PA\">Panama</ng-container>\n *     <ng-container *ngSwitchCase=\"'PG'\" i18n=\"@@bb-country-item.PG\">Papua New Guinea</ng-container>\n *     <ng-container *ngSwitchCase=\"'PY'\" i18n=\"@@bb-country-item.PY\">Paraguay</ng-container>\n *     <ng-container *ngSwitchCase=\"'PE'\" i18n=\"@@bb-country-item.PE\">Peru</ng-container>\n *     <ng-container *ngSwitchCase=\"'PH'\" i18n=\"@@bb-country-item.PH\">Philippines</ng-container>\n *     <ng-container *ngSwitchCase=\"'PN'\" i18n=\"@@bb-country-item.PN\">Pitcairn</ng-container>\n *     <ng-container *ngSwitchCase=\"'PL'\" i18n=\"@@bb-country-item.PL\">Poland</ng-container>\n *     <ng-container *ngSwitchCase=\"'PT'\" i18n=\"@@bb-country-item.PT\">Portugal</ng-container>\n *     <ng-container *ngSwitchCase=\"'PR'\" i18n=\"@@bb-country-item.PR\">Puerto Rico</ng-container>\n *     <ng-container *ngSwitchCase=\"'QA'\" i18n=\"@@bb-country-item.QA\">Qatar</ng-container>\n *     <ng-container *ngSwitchCase=\"'RE'\" i18n=\"@@bb-country-item.RE\">Reunion</ng-container>\n *     <ng-container *ngSwitchCase=\"'RO'\" i18n=\"@@bb-country-item.RO\">Romania</ng-container>\n *     <ng-container *ngSwitchCase=\"'RU'\" i18n=\"@@bb-country-item.RU\">Russian Federation</ng-container>\n *     <ng-container *ngSwitchCase=\"'RW'\" i18n=\"@@bb-country-item.RW\">Rwanda</ng-container>\n *     <ng-container *ngSwitchCase=\"'BL'\" i18n=\"@@bb-country-item.BL\">Saint Barthelemy</ng-container>\n *     <ng-container *ngSwitchCase=\"'SH'\" i18n=\"@@bb-country-item.SH\">Saint Helena, Ascension and Tristan da Cunha</ng-container>\n *     <ng-container *ngSwitchCase=\"'KN'\" i18n=\"@@bb-country-item.KN\">Saint Kitts and Nevis</ng-container>\n *     <ng-container *ngSwitchCase=\"'LC'\" i18n=\"@@bb-country-item.LC\">Saint Lucia</ng-container>\n *     <ng-container *ngSwitchCase=\"'MF'\" i18n=\"@@bb-country-item.MF\">Saint Martin (French part)</ng-container>\n *     <ng-container *ngSwitchCase=\"'PM'\" i18n=\"@@bb-country-item.PM\">Saint Pierre and Miquelon</ng-container>\n *     <ng-container *ngSwitchCase=\"'VC'\" i18n=\"@@bb-country-item.VC\">Saint Vincent and The Grenadines</ng-container>\n *     <ng-container *ngSwitchCase=\"'WS'\" i18n=\"@@bb-country-item.WS\">Samoa</ng-container>\n *     <ng-container *ngSwitchCase=\"'SM'\" i18n=\"@@bb-country-item.SM\">San Marino</ng-container>\n *     <ng-container *ngSwitchCase=\"'ST'\" i18n=\"@@bb-country-item.ST\">Sao Tome and Principe</ng-container>\n *     <ng-container *ngSwitchCase=\"'SA'\" i18n=\"@@bb-country-item.SA\">Saudi Arabia</ng-container>\n *     <ng-container *ngSwitchCase=\"'SN'\" i18n=\"@@bb-country-item.SN\">Senegal</ng-container>\n *     <ng-container *ngSwitchCase=\"'RS'\" i18n=\"@@bb-country-item.RS\">Serbia</ng-container>\n *     <ng-container *ngSwitchCase=\"'SC'\" i18n=\"@@bb-country-item.SC\">Seychelles</ng-container>\n *     <ng-container *ngSwitchCase=\"'SL'\" i18n=\"@@bb-country-item.SL\">Sierra Leone</ng-container>\n *     <ng-container *ngSwitchCase=\"'SG'\" i18n=\"@@bb-country-item.SG\">Singapore</ng-container>\n *     <ng-container *ngSwitchCase=\"'SX'\" i18n=\"@@bb-country-item.SX\">Sint Maarten (Dutch part)</ng-container>\n *     <ng-container *ngSwitchCase=\"'SK'\" i18n=\"@@bb-country-item.SK\">Slovakia</ng-container>\n *     <ng-container *ngSwitchCase=\"'SI'\" i18n=\"@@bb-country-item.SI\">Slovenia</ng-container>\n *     <ng-container *ngSwitchCase=\"'SB'\" i18n=\"@@bb-country-item.SB\">Solomon Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'SO'\" i18n=\"@@bb-country-item.SO\">Somalia</ng-container>\n *     <ng-container *ngSwitchCase=\"'ZA'\" i18n=\"@@bb-country-item.ZA\">South Africa</ng-container>\n *     <ng-container *ngSwitchCase=\"'GS'\" i18n=\"@@bb-country-item.GS\">South Georgia and the South Sandwich Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'ES'\" i18n=\"@@bb-country-item.ES\">Spain</ng-container>\n *     <ng-container *ngSwitchCase=\"'LK'\" i18n=\"@@bb-country-item.LK\">Sri Lanka</ng-container>\n *     <ng-container *ngSwitchCase=\"'SD'\" i18n=\"@@bb-country-item.SD\">Sudan</ng-container>\n *     <ng-container *ngSwitchCase=\"'SR'\" i18n=\"@@bb-country-item.SR\">Suriname</ng-container>\n *     <ng-container *ngSwitchCase=\"'SJ'\" i18n=\"@@bb-country-item.SJ\">Svalbard and Jan Mayen</ng-container>\n *     <ng-container *ngSwitchCase=\"'SZ'\" i18n=\"@@bb-country-item.SZ\">Swaziland</ng-container>\n *     <ng-container *ngSwitchCase=\"'SE'\" i18n=\"@@bb-country-item.SE\">Sweden</ng-container>\n *     <ng-container *ngSwitchCase=\"'CH'\" i18n=\"@@bb-country-item.CH\">Switzerland</ng-container>\n *     <ng-container *ngSwitchCase=\"'SY'\" i18n=\"@@bb-country-item.SY\">Syrian Arab Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'TW'\" i18n=\"@@bb-country-item.TW\">Taiwan, Province of China</ng-container>\n *     <ng-container *ngSwitchCase=\"'TJ'\" i18n=\"@@bb-country-item.TJ\">Tajikistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'TZ'\" i18n=\"@@bb-country-item.TZ\">Tanzania, United Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'TH'\" i18n=\"@@bb-country-item.TH\">Thailand</ng-container>\n *     <ng-container *ngSwitchCase=\"'TL'\" i18n=\"@@bb-country-item.TL\">Timor-Leste</ng-container>\n *     <ng-container *ngSwitchCase=\"'TG'\" i18n=\"@@bb-country-item.TG\">Togo</ng-container>\n *     <ng-container *ngSwitchCase=\"'TK'\" i18n=\"@@bb-country-item.TK\">Tokelau</ng-container>\n *     <ng-container *ngSwitchCase=\"'TO'\" i18n=\"@@bb-country-item.TO\">Tonga</ng-container>\n *     <ng-container *ngSwitchCase=\"'TT'\" i18n=\"@@bb-country-item.TT\">Trinidad and Tobago</ng-container>\n *     <ng-container *ngSwitchCase=\"'TN'\" i18n=\"@@bb-country-item.TN\">Tunisia</ng-container>\n *     <ng-container *ngSwitchCase=\"'TR'\" i18n=\"@@bb-country-item.TR\">Turkey</ng-container>\n *     <ng-container *ngSwitchCase=\"'TM'\" i18n=\"@@bb-country-item.TM\">Turkmenistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'TC'\" i18n=\"@@bb-country-item.TC\">Turks and Caicos Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'TV'\" i18n=\"@@bb-country-item.TV\">Tuvalu</ng-container>\n *     <ng-container *ngSwitchCase=\"'UG'\" i18n=\"@@bb-country-item.UG\">Uganda</ng-container>\n *     <ng-container *ngSwitchCase=\"'UA'\" i18n=\"@@bb-country-item.UA\">Ukraine</ng-container>\n *     <ng-container *ngSwitchCase=\"'AE'\" i18n=\"@@bb-country-item.AE\">United Arab Emirates</ng-container>\n *     <ng-container *ngSwitchCase=\"'GB'\" i18n=\"@@bb-country-item.GB\">United Kingdom</ng-container>\n *     <ng-container *ngSwitchCase=\"'US'\" i18n=\"@@bb-country-item.US\">United States</ng-container>\n *     <ng-container *ngSwitchCase=\"'UY'\" i18n=\"@@bb-country-item.UY\">Uruguay</ng-container>\n *     <ng-container *ngSwitchCase=\"'UZ'\" i18n=\"@@bb-country-item.UZ\">Uzbekistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'VU'\" i18n=\"@@bb-country-item.VU\">Vanuatu</ng-container>\n *     <ng-container *ngSwitchCase=\"'VE'\" i18n=\"@@bb-country-item.VE\">Venezuela, Bolivarian Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'VN'\" i18n=\"@@bb-country-item.VN\">Viet Nam</ng-container>\n *     <ng-container *ngSwitchCase=\"'VG'\" i18n=\"@@bb-country-item.VG\">Virgin Islands, British</ng-container>\n *     <ng-container *ngSwitchCase=\"'VI'\" i18n=\"@@bb-country-item.VI\">Virgin Islands, U.S.</ng-container>\n *     <ng-container *ngSwitchCase=\"'WF'\" i18n=\"@@bb-country-item.WF\">Wallis and Futuna</ng-container>\n *     <ng-container *ngSwitchCase=\"'EH'\" i18n=\"@@bb-country-item.EH\">Western Sahara</ng-container>\n *     <ng-container *ngSwitchCase=\"'YE'\" i18n=\"@@bb-country-item.YE\">Yemen</ng-container>\n *     <ng-container *ngSwitchCase=\"'ZM'\" i18n=\"@@bb-country-item.ZM\">Zambia</ng-container>\n *     <ng-container *ngSwitchCase=\"'ZW'\" i18n=\"@@bb-country-item.ZW\">Zimbabwe</ng-container>\n *   </ng-container>\n * </ng-template>\n * ```\n * @ngModule CountryItemModule\n */\n@Directive({\n  selector: '[bbCountryItemCustomizable]',\n})\nexport class CountryItemCustomizableDirective extends BbTemplate<CountryItemComponent, undefined> {}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n/**\n * The component is for showing the country based on ISO code.\n *\n * The following extension slots are available in this component:\n *  - `CountryItemCustomizableDirective`\n *\n * @see CountryItemCustomizableDirective\n * @usageNotes\n *\n * ### Display contact form\n *\n * ```html\n *    <bb-country-item [code]=\"country\"></bb-country-item>\n * ```\n * @ngModule CountryItemModule\n */\n@Component({\n  selector: 'bb-country-item',\n  templateUrl: './country-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountryItemComponent implements OnInit {\n  hostRef: CountryItemComponent = this;\n  /**\n   * ISO 3166 Alpha-2 country code\n   */\n  @Input()\n  code!: string;\n\n  ngOnInit() {\n    if (!this.code) {\n      console.warn('Please provide a ISO 3166 Alpha-2 country code');\n    }\n  }\n}\n","<ng-container bbCountryItemCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbCountryItemCustomizable let-hostRef>\n  <ng-container [ngSwitch]=\"hostRef.code\">\n    <ng-container *ngSwitchCase=\"'AF'\" i18n=\"@@bb-country-item.AF\">Afghanistan</ng-container>\n    <ng-container *ngSwitchCase=\"'AX'\" i18n=\"@@bb-country-item.AX\">Aland Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'AL'\" i18n=\"@@bb-country-item.AL\">Albania</ng-container>\n    <ng-container *ngSwitchCase=\"'DZ'\" i18n=\"@@bb-country-item.DZ\">Algeria</ng-container>\n    <ng-container *ngSwitchCase=\"'AS'\" i18n=\"@@bb-country-item.AS\">American Samoa</ng-container>\n    <ng-container *ngSwitchCase=\"'AD'\" i18n=\"@@bb-country-item.AD\">Andorra</ng-container>\n    <ng-container *ngSwitchCase=\"'AO'\" i18n=\"@@bb-country-item.AO\">Angola</ng-container>\n    <ng-container *ngSwitchCase=\"'AI'\" i18n=\"@@bb-country-item.AI\">Anguilla</ng-container>\n    <ng-container *ngSwitchCase=\"'AQ'\" i18n=\"@@bb-country-item.AQ\">Antarctica</ng-container>\n    <ng-container *ngSwitchCase=\"'AG'\" i18n=\"@@bb-country-item.AG\">Antigua and Barbuda</ng-container>\n    <ng-container *ngSwitchCase=\"'AR'\" i18n=\"@@bb-country-item.AR\">Argentina</ng-container>\n    <ng-container *ngSwitchCase=\"'AM'\" i18n=\"@@bb-country-item.AM\">Armenia</ng-container>\n    <ng-container *ngSwitchCase=\"'AW'\" i18n=\"@@bb-country-item.AW\">Aruba</ng-container>\n    <ng-container *ngSwitchCase=\"'AU'\" i18n=\"@@bb-country-item.AU\">Australia</ng-container>\n    <ng-container *ngSwitchCase=\"'AT'\" i18n=\"@@bb-country-item.AT\">Austria</ng-container>\n    <ng-container *ngSwitchCase=\"'AZ'\" i18n=\"@@bb-country-item.AZ\">Azerbaijan</ng-container>\n    <ng-container *ngSwitchCase=\"'BS'\" i18n=\"@@bb-country-item.BS\">Bahamas</ng-container>\n    <ng-container *ngSwitchCase=\"'BH'\" i18n=\"@@bb-country-item.BH\">Bahrain</ng-container>\n    <ng-container *ngSwitchCase=\"'BD'\" i18n=\"@@bb-country-item.BD\">Bangladesh</ng-container>\n    <ng-container *ngSwitchCase=\"'BB'\" i18n=\"@@bb-country-item.BB\">Barbados</ng-container>\n    <ng-container *ngSwitchCase=\"'BY'\" i18n=\"@@bb-country-item.BY\">Belarus</ng-container>\n    <ng-container *ngSwitchCase=\"'BE'\" i18n=\"@@bb-country-item.BE\">Belgium</ng-container>\n    <ng-container *ngSwitchCase=\"'BZ'\" i18n=\"@@bb-country-item.BZ\">Belize</ng-container>\n    <ng-container *ngSwitchCase=\"'BJ'\" i18n=\"@@bb-country-item.BJ\">Benin</ng-container>\n    <ng-container *ngSwitchCase=\"'BM'\" i18n=\"@@bb-country-item.BM\">Bermuda</ng-container>\n    <ng-container *ngSwitchCase=\"'BT'\" i18n=\"@@bb-country-item.BT\">Bhutan</ng-container>\n    <ng-container *ngSwitchCase=\"'BO'\" i18n=\"@@bb-country-item.BO\">Bolivia, Plurinational State of</ng-container>\n    <ng-container *ngSwitchCase=\"'BQ'\" i18n=\"@@bb-country-item.BQ\">Bonaire, Saint Eustatius and Saba</ng-container>\n    <ng-container *ngSwitchCase=\"'BA'\" i18n=\"@@bb-country-item.BA\">Bosnia and Herzegovina</ng-container>\n    <ng-container *ngSwitchCase=\"'BW'\" i18n=\"@@bb-country-item.BW\">Botswana</ng-container>\n    <ng-container *ngSwitchCase=\"'BV'\" i18n=\"@@bb-country-item.BV\">Bouvet Island</ng-container>\n    <ng-container *ngSwitchCase=\"'BR'\" i18n=\"@@bb-country-item.BR\">Brazil</ng-container>\n    <ng-container *ngSwitchCase=\"'IO'\" i18n=\"@@bb-country-item.IO\">British Indian Ocean Territory</ng-container>\n    <ng-container *ngSwitchCase=\"'BN'\" i18n=\"@@bb-country-item.BN\">Brunei Darussalam</ng-container>\n    <ng-container *ngSwitchCase=\"'BG'\" i18n=\"@@bb-country-item.BG\">Bulgaria</ng-container>\n    <ng-container *ngSwitchCase=\"'BF'\" i18n=\"@@bb-country-item.BF\">Burkina Faso</ng-container>\n    <ng-container *ngSwitchCase=\"'BI'\" i18n=\"@@bb-country-item.BI\">Burundi</ng-container>\n    <ng-container *ngSwitchCase=\"'KH'\" i18n=\"@@bb-country-item.KH\">Cambodia</ng-container>\n    <ng-container *ngSwitchCase=\"'CM'\" i18n=\"@@bb-country-item.CM\">Cameroon</ng-container>\n    <ng-container *ngSwitchCase=\"'CA'\" i18n=\"@@bb-country-item.CA\">Canada</ng-container>\n    <ng-container *ngSwitchCase=\"'CV'\" i18n=\"@@bb-country-item.CV\">Cape Verde</ng-container>\n    <ng-container *ngSwitchCase=\"'KY'\" i18n=\"@@bb-country-item.KY\">Cayman Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'CF'\" i18n=\"@@bb-country-item.CF\">Central African Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'TD'\" i18n=\"@@bb-country-item.TD\">Chad</ng-container>\n    <ng-container *ngSwitchCase=\"'CL'\" i18n=\"@@bb-country-item.CL\">Chile</ng-container>\n    <ng-container *ngSwitchCase=\"'CN'\" i18n=\"@@bb-country-item.CN\">China</ng-container>\n    <ng-container *ngSwitchCase=\"'CX'\" i18n=\"@@bb-country-item.CX\">Christmas Island</ng-container>\n    <ng-container *ngSwitchCase=\"'CC'\" i18n=\"@@bb-country-item.CC\">Cocos (Keeling) Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'CO'\" i18n=\"@@bb-country-item.CO\">Colombia</ng-container>\n    <ng-container *ngSwitchCase=\"'KM'\" i18n=\"@@bb-country-item.KM\">Comoros</ng-container>\n    <ng-container *ngSwitchCase=\"'CG'\" i18n=\"@@bb-country-item.CG\">Congo</ng-container>\n    <ng-container *ngSwitchCase=\"'CD'\" i18n=\"@@bb-country-item.CD\">Congo, The Democratic Republic of the</ng-container>\n    <ng-container *ngSwitchCase=\"'CK'\" i18n=\"@@bb-country-item.CK\">Cook Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'CR'\" i18n=\"@@bb-country-item.CR\">Costa Rica</ng-container>\n    <ng-container *ngSwitchCase=\"'CI'\" i18n=\"@@bb-country-item.CI\">Cote d'Ivoire</ng-container>\n    <ng-container *ngSwitchCase=\"'HR'\" i18n=\"@@bb-country-item.HR\">Croatia</ng-container>\n    <ng-container *ngSwitchCase=\"'CU'\" i18n=\"@@bb-country-item.CU\">Cuba</ng-container>\n    <ng-container *ngSwitchCase=\"'CW'\" i18n=\"@@bb-country-item.CW\">Curacao</ng-container>\n    <ng-container *ngSwitchCase=\"'CY'\" i18n=\"@@bb-country-item.CY\">Cyprus</ng-container>\n    <ng-container *ngSwitchCase=\"'CZ'\" i18n=\"@@bb-country-item.CZ\">Czech Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'DK'\" i18n=\"@@bb-country-item.DK\">Denmark</ng-container>\n    <ng-container *ngSwitchCase=\"'DJ'\" i18n=\"@@bb-country-item.DJ\">Djibouti</ng-container>\n    <ng-container *ngSwitchCase=\"'DM'\" i18n=\"@@bb-country-item.DM\">Dominica</ng-container>\n    <ng-container *ngSwitchCase=\"'DO'\" i18n=\"@@bb-country-item.DO\">Dominican Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'EC'\" i18n=\"@@bb-country-item.EC\">Ecuador</ng-container>\n    <ng-container *ngSwitchCase=\"'EG'\" i18n=\"@@bb-country-item.EG\">Egypt</ng-container>\n    <ng-container *ngSwitchCase=\"'SV'\" i18n=\"@@bb-country-item.SV\">El Salvador</ng-container>\n    <ng-container *ngSwitchCase=\"'GQ'\" i18n=\"@@bb-country-item.GQ\">Equatorial Guinea</ng-container>\n    <ng-container *ngSwitchCase=\"'ER'\" i18n=\"@@bb-country-item.ER\">Eritrea</ng-container>\n    <ng-container *ngSwitchCase=\"'EE'\" i18n=\"@@bb-country-item.EE\">Estonia</ng-container>\n    <ng-container *ngSwitchCase=\"'ET'\" i18n=\"@@bb-country-item.ET\">Ethiopia</ng-container>\n    <ng-container *ngSwitchCase=\"'FK'\" i18n=\"@@bb-country-item.FK\">Falkland Islands (Malvinas)</ng-container>\n    <ng-container *ngSwitchCase=\"'FO'\" i18n=\"@@bb-country-item.FO\">Faroe Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'FJ'\" i18n=\"@@bb-country-item.FJ\">Fiji</ng-container>\n    <ng-container *ngSwitchCase=\"'FI'\" i18n=\"@@bb-country-item.FI\">Finland</ng-container>\n    <ng-container *ngSwitchCase=\"'FR'\" i18n=\"@@bb-country-item.FR\">France</ng-container>\n    <ng-container *ngSwitchCase=\"'GF'\" i18n=\"@@bb-country-item.GF\">French Guiana</ng-container>\n    <ng-container *ngSwitchCase=\"'PF'\" i18n=\"@@bb-country-item.PF\">French Polynesia</ng-container>\n    <ng-container *ngSwitchCase=\"'TF'\" i18n=\"@@bb-country-item.TF\">French Southern Territories</ng-container>\n    <ng-container *ngSwitchCase=\"'GA'\" i18n=\"@@bb-country-item.GA\">Gabon</ng-container>\n    <ng-container *ngSwitchCase=\"'GM'\" i18n=\"@@bb-country-item.GM\">Gambia</ng-container>\n    <ng-container *ngSwitchCase=\"'GE'\" i18n=\"@@bb-country-item.GE\">Georgia</ng-container>\n    <ng-container *ngSwitchCase=\"'DE'\" i18n=\"@@bb-country-item.DE\">Germany</ng-container>\n    <ng-container *ngSwitchCase=\"'GH'\" i18n=\"@@bb-country-item.GH\">Ghana</ng-container>\n    <ng-container *ngSwitchCase=\"'GI'\" i18n=\"@@bb-country-item.GI\">Gibraltar</ng-container>\n    <ng-container *ngSwitchCase=\"'GR'\" i18n=\"@@bb-country-item.GR\">Greece</ng-container>\n    <ng-container *ngSwitchCase=\"'GL'\" i18n=\"@@bb-country-item.GL\">Greenland</ng-container>\n    <ng-container *ngSwitchCase=\"'GD'\" i18n=\"@@bb-country-item.GD\">Grenada</ng-container>\n    <ng-container *ngSwitchCase=\"'GP'\" i18n=\"@@bb-country-item.GP\">Guadeloupe</ng-container>\n    <ng-container *ngSwitchCase=\"'GU'\" i18n=\"@@bb-country-item.GU\">Guam</ng-container>\n    <ng-container *ngSwitchCase=\"'GT'\" i18n=\"@@bb-country-item.GT\">Guatemala</ng-container>\n    <ng-container *ngSwitchCase=\"'GG'\" i18n=\"@@bb-country-item.GG\">Guernsey</ng-container>\n    <ng-container *ngSwitchCase=\"'GN'\" i18n=\"@@bb-country-item.GN\">Guinea</ng-container>\n    <ng-container *ngSwitchCase=\"'GW'\" i18n=\"@@bb-country-item.GW\">Guinea-Bissau</ng-container>\n    <ng-container *ngSwitchCase=\"'GY'\" i18n=\"@@bb-country-item.GY\">Guyana</ng-container>\n    <ng-container *ngSwitchCase=\"'HT'\" i18n=\"@@bb-country-item.HT\">Haiti</ng-container>\n    <ng-container *ngSwitchCase=\"'HM'\" i18n=\"@@bb-country-item.HM\">Heard Island and McDonald Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'VA'\" i18n=\"@@bb-country-item.VA\">Holy See (Vatican City State)</ng-container>\n    <ng-container *ngSwitchCase=\"'HN'\" i18n=\"@@bb-country-item.HN\">Honduras</ng-container>\n    <ng-container *ngSwitchCase=\"'HK'\" i18n=\"@@bb-country-item.HK\">Hong Kong</ng-container>\n    <ng-container *ngSwitchCase=\"'HU'\" i18n=\"@@bb-country-item.HU\">Hungary</ng-container>\n    <ng-container *ngSwitchCase=\"'IS'\" i18n=\"@@bb-country-item.IS\">Iceland</ng-container>\n    <ng-container *ngSwitchCase=\"'IN'\" i18n=\"@@bb-country-item.IN\">India</ng-container>\n    <ng-container *ngSwitchCase=\"'ID'\" i18n=\"@@bb-country-item.ID\">Indonesia</ng-container>\n    <ng-container *ngSwitchCase=\"'IR'\" i18n=\"@@bb-country-item.IR\">Iran, Islamic Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'IQ'\" i18n=\"@@bb-country-item.IQ\">Iraq</ng-container>\n    <ng-container *ngSwitchCase=\"'IE'\" i18n=\"@@bb-country-item.IE\">Ireland</ng-container>\n    <ng-container *ngSwitchCase=\"'IM'\" i18n=\"@@bb-country-item.IM\">Isle of Man</ng-container>\n    <ng-container *ngSwitchCase=\"'IL'\" i18n=\"@@bb-country-item.IL\">Israel</ng-container>\n    <ng-container *ngSwitchCase=\"'IT'\" i18n=\"@@bb-country-item.IT\">Italy</ng-container>\n    <ng-container *ngSwitchCase=\"'JM'\" i18n=\"@@bb-country-item.JM\">Jamaica</ng-container>\n    <ng-container *ngSwitchCase=\"'JP'\" i18n=\"@@bb-country-item.JP\">Japan</ng-container>\n    <ng-container *ngSwitchCase=\"'JE'\" i18n=\"@@bb-country-item.JE\">Jersey</ng-container>\n    <ng-container *ngSwitchCase=\"'JO'\" i18n=\"@@bb-country-item.JO\">Jordan</ng-container>\n    <ng-container *ngSwitchCase=\"'KZ'\" i18n=\"@@bb-country-item.KZ\">Kazakhstan</ng-container>\n    <ng-container *ngSwitchCase=\"'KE'\" i18n=\"@@bb-country-item.KE\">Kenya</ng-container>\n    <ng-container *ngSwitchCase=\"'KI'\" i18n=\"@@bb-country-item.KI\">Kiribati</ng-container>\n    <ng-container *ngSwitchCase=\"'KP'\" i18n=\"@@bb-country-item.KP\">Korea, Democratic People's Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'KR'\" i18n=\"@@bb-country-item.KR\">Korea, Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'KW'\" i18n=\"@@bb-country-item.KW\">Kuwait</ng-container>\n    <ng-container *ngSwitchCase=\"'KG'\" i18n=\"@@bb-country-item.KG\">Kyrgyzstan</ng-container>\n    <ng-container *ngSwitchCase=\"'LA'\" i18n=\"@@bb-country-item.LA\">Lao People's Democratic Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'LV'\" i18n=\"@@bb-country-item.LV\">Latvia</ng-container>\n    <ng-container *ngSwitchCase=\"'LB'\" i18n=\"@@bb-country-item.LB\">Lebanon</ng-container>\n    <ng-container *ngSwitchCase=\"'LS'\" i18n=\"@@bb-country-item.LS\">Lesotho</ng-container>\n    <ng-container *ngSwitchCase=\"'LR'\" i18n=\"@@bb-country-item.LR\">Liberia</ng-container>\n    <ng-container *ngSwitchCase=\"'LY'\" i18n=\"@@bb-country-item.LY\">Libyan Arab Jamahiriya</ng-container>\n    <ng-container *ngSwitchCase=\"'LI'\" i18n=\"@@bb-country-item.LI\">Liechtenstein</ng-container>\n    <ng-container *ngSwitchCase=\"'LT'\" i18n=\"@@bb-country-item.LT\">Lithuania</ng-container>\n    <ng-container *ngSwitchCase=\"'LU'\" i18n=\"@@bb-country-item.LU\">Luxembourg</ng-container>\n    <ng-container *ngSwitchCase=\"'MO'\" i18n=\"@@bb-country-item.MO\">Macao</ng-container>\n    <ng-container *ngSwitchCase=\"'MK'\" i18n=\"@@bb-country-item.MK\"\n      >Macedonia, The Former Yugoslav Republic of</ng-container\n    >\n    <ng-container *ngSwitchCase=\"'MG'\" i18n=\"@@bb-country-item.MG\">Madagascar</ng-container>\n    <ng-container *ngSwitchCase=\"'MW'\" i18n=\"@@bb-country-item.MW\">Malawi</ng-container>\n    <ng-container *ngSwitchCase=\"'MY'\" i18n=\"@@bb-country-item.MY\">Malaysia</ng-container>\n    <ng-container *ngSwitchCase=\"'MV'\" i18n=\"@@bb-country-item.MV\">Maldives</ng-container>\n    <ng-container *ngSwitchCase=\"'ML'\" i18n=\"@@bb-country-item.ML\">Mali</ng-container>\n    <ng-container *ngSwitchCase=\"'MT'\" i18n=\"@@bb-country-item.MT\">Malta</ng-container>\n    <ng-container *ngSwitchCase=\"'MH'\" i18n=\"@@bb-country-item.MH\">Marshall Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'MQ'\" i18n=\"@@bb-country-item.MQ\">Martinique</ng-container>\n    <ng-container *ngSwitchCase=\"'MR'\" i18n=\"@@bb-country-item.MR\">Mauritania</ng-container>\n    <ng-container *ngSwitchCase=\"'MU'\" i18n=\"@@bb-country-item.MU\">Mauritius</ng-container>\n    <ng-container *ngSwitchCase=\"'YT'\" i18n=\"@@bb-country-item.YT\">Mayotte</ng-container>\n    <ng-container *ngSwitchCase=\"'MX'\" i18n=\"@@bb-country-item.MX\">Mexico</ng-container>\n    <ng-container *ngSwitchCase=\"'FM'\" i18n=\"@@bb-country-item.FM\">Micronesia, Federated States of</ng-container>\n    <ng-container *ngSwitchCase=\"'MD'\" i18n=\"@@bb-country-item.MD\">Moldova, Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'MC'\" i18n=\"@@bb-country-item.MC\">Monaco</ng-container>\n    <ng-container *ngSwitchCase=\"'MN'\" i18n=\"@@bb-country-item.MN\">Mongolia</ng-container>\n    <ng-container *ngSwitchCase=\"'ME'\" i18n=\"@@bb-country-item.ME\">Montenegro</ng-container>\n    <ng-container *ngSwitchCase=\"'MS'\" i18n=\"@@bb-country-item.MS\">Montserrat</ng-container>\n    <ng-container *ngSwitchCase=\"'MA'\" i18n=\"@@bb-country-item.MA\">Morocco</ng-container>\n    <ng-container *ngSwitchCase=\"'MZ'\" i18n=\"@@bb-country-item.MZ\">Mozambique</ng-container>\n    <ng-container *ngSwitchCase=\"'MM'\" i18n=\"@@bb-country-item.MM\">Myanmar</ng-container>\n    <ng-container *ngSwitchCase=\"'NA'\" i18n=\"@@bb-country-item.NA\">Namibia</ng-container>\n    <ng-container *ngSwitchCase=\"'NR'\" i18n=\"@@bb-country-item.NR\">Nauru</ng-container>\n    <ng-container *ngSwitchCase=\"'NP'\" i18n=\"@@bb-country-item.NP\">Nepal</ng-container>\n    <ng-container *ngSwitchCase=\"'NL'\" i18n=\"@@bb-country-item.NL\">Netherlands</ng-container>\n    <ng-container *ngSwitchCase=\"'NC'\" i18n=\"@@bb-country-item.NC\">New Caledonia</ng-container>\n    <ng-container *ngSwitchCase=\"'NZ'\" i18n=\"@@bb-country-item.NZ\">New Zealand</ng-container>\n    <ng-container *ngSwitchCase=\"'NI'\" i18n=\"@@bb-country-item.NI\">Nicaragua</ng-container>\n    <ng-container *ngSwitchCase=\"'NE'\" i18n=\"@@bb-country-item.NE\">Niger</ng-container>\n    <ng-container *ngSwitchCase=\"'NG'\" i18n=\"@@bb-country-item.NG\">Nigeria</ng-container>\n    <ng-container *ngSwitchCase=\"'NU'\" i18n=\"@@bb-country-item.NU\">Niue</ng-container>\n    <ng-container *ngSwitchCase=\"'NF'\" i18n=\"@@bb-country-item.NF\">Norfolk Island</ng-container>\n    <ng-container *ngSwitchCase=\"'MP'\" i18n=\"@@bb-country-item.MP\">Northern Mariana Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'NO'\" i18n=\"@@bb-country-item.NO\">Norway</ng-container>\n    <ng-container *ngSwitchCase=\"'PS'\" i18n=\"@@bb-country-item.PS\">Occupied Palestinian Territory</ng-container>\n    <ng-container *ngSwitchCase=\"'OM'\" i18n=\"@@bb-country-item.OM\">Oman</ng-container>\n    <ng-container *ngSwitchCase=\"'PK'\" i18n=\"@@bb-country-item.PK\">Pakistan</ng-container>\n    <ng-container *ngSwitchCase=\"'PW'\" i18n=\"@@bb-country-item.PW\">Palau</ng-container>\n    <ng-container *ngSwitchCase=\"'PA'\" i18n=\"@@bb-country-item.PA\">Panama</ng-container>\n    <ng-container *ngSwitchCase=\"'PG'\" i18n=\"@@bb-country-item.PG\">Papua New Guinea</ng-container>\n    <ng-container *ngSwitchCase=\"'PY'\" i18n=\"@@bb-country-item.PY\">Paraguay</ng-container>\n    <ng-container *ngSwitchCase=\"'PE'\" i18n=\"@@bb-country-item.PE\">Peru</ng-container>\n    <ng-container *ngSwitchCase=\"'PH'\" i18n=\"@@bb-country-item.PH\">Philippines</ng-container>\n    <ng-container *ngSwitchCase=\"'PN'\" i18n=\"@@bb-country-item.PN\">Pitcairn</ng-container>\n    <ng-container *ngSwitchCase=\"'PL'\" i18n=\"@@bb-country-item.PL\">Poland</ng-container>\n    <ng-container *ngSwitchCase=\"'PT'\" i18n=\"@@bb-country-item.PT\">Portugal</ng-container>\n    <ng-container *ngSwitchCase=\"'PR'\" i18n=\"@@bb-country-item.PR\">Puerto Rico</ng-container>\n    <ng-container *ngSwitchCase=\"'QA'\" i18n=\"@@bb-country-item.QA\">Qatar</ng-container>\n    <ng-container *ngSwitchCase=\"'RE'\" i18n=\"@@bb-country-item.RE\">Reunion</ng-container>\n    <ng-container *ngSwitchCase=\"'RO'\" i18n=\"@@bb-country-item.RO\">Romania</ng-container>\n    <ng-container *ngSwitchCase=\"'RU'\" i18n=\"@@bb-country-item.RU\">Russian Federation</ng-container>\n    <ng-container *ngSwitchCase=\"'RW'\" i18n=\"@@bb-country-item.RW\">Rwanda</ng-container>\n    <ng-container *ngSwitchCase=\"'BL'\" i18n=\"@@bb-country-item.BL\">Saint Barthelemy</ng-container>\n    <ng-container *ngSwitchCase=\"'SH'\" i18n=\"@@bb-country-item.SH\"\n      >Saint Helena, Ascension and Tristan da Cunha</ng-container\n    >\n    <ng-container *ngSwitchCase=\"'KN'\" i18n=\"@@bb-country-item.KN\">Saint Kitts and Nevis</ng-container>\n    <ng-container *ngSwitchCase=\"'LC'\" i18n=\"@@bb-country-item.LC\">Saint Lucia</ng-container>\n    <ng-container *ngSwitchCase=\"'MF'\" i18n=\"@@bb-country-item.MF\">Saint Martin (French part)</ng-container>\n    <ng-container *ngSwitchCase=\"'PM'\" i18n=\"@@bb-country-item.PM\">Saint Pierre and Miquelon</ng-container>\n    <ng-container *ngSwitchCase=\"'VC'\" i18n=\"@@bb-country-item.VC\">Saint Vincent and The Grenadines</ng-container>\n    <ng-container *ngSwitchCase=\"'WS'\" i18n=\"@@bb-country-item.WS\">Samoa</ng-container>\n    <ng-container *ngSwitchCase=\"'SM'\" i18n=\"@@bb-country-item.SM\">San Marino</ng-container>\n    <ng-container *ngSwitchCase=\"'ST'\" i18n=\"@@bb-country-item.ST\">Sao Tome and Principe</ng-container>\n    <ng-container *ngSwitchCase=\"'SA'\" i18n=\"@@bb-country-item.SA\">Saudi Arabia</ng-container>\n    <ng-container *ngSwitchCase=\"'SN'\" i18n=\"@@bb-country-item.SN\">Senegal</ng-container>\n    <ng-container *ngSwitchCase=\"'RS'\" i18n=\"@@bb-country-item.RS\">Serbia</ng-container>\n    <ng-container *ngSwitchCase=\"'SC'\" i18n=\"@@bb-country-item.SC\">Seychelles</ng-container>\n    <ng-container *ngSwitchCase=\"'SL'\" i18n=\"@@bb-country-item.SL\">Sierra Leone</ng-container>\n    <ng-container *ngSwitchCase=\"'SG'\" i18n=\"@@bb-country-item.SG\">Singapore</ng-container>\n    <ng-container *ngSwitchCase=\"'SX'\" i18n=\"@@bb-country-item.SX\">Sint Maarten (Dutch part)</ng-container>\n    <ng-container *ngSwitchCase=\"'SK'\" i18n=\"@@bb-country-item.SK\">Slovakia</ng-container>\n    <ng-container *ngSwitchCase=\"'SI'\" i18n=\"@@bb-country-item.SI\">Slovenia</ng-container>\n    <ng-container *ngSwitchCase=\"'SB'\" i18n=\"@@bb-country-item.SB\">Solomon Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'SO'\" i18n=\"@@bb-country-item.SO\">Somalia</ng-container>\n    <ng-container *ngSwitchCase=\"'ZA'\" i18n=\"@@bb-country-item.ZA\">South Africa</ng-container>\n    <ng-container *ngSwitchCase=\"'GS'\" i18n=\"@@bb-country-item.GS\"\n      >South Georgia and the South Sandwich Islands</ng-container\n    >\n    <ng-container *ngSwitchCase=\"'ES'\" i18n=\"@@bb-country-item.ES\">Spain</ng-container>\n    <ng-container *ngSwitchCase=\"'LK'\" i18n=\"@@bb-country-item.LK\">Sri Lanka</ng-container>\n    <ng-container *ngSwitchCase=\"'SD'\" i18n=\"@@bb-country-item.SD\">Sudan</ng-container>\n    <ng-container *ngSwitchCase=\"'SR'\" i18n=\"@@bb-country-item.SR\">Suriname</ng-container>\n    <ng-container *ngSwitchCase=\"'SJ'\" i18n=\"@@bb-country-item.SJ\">Svalbard and Jan Mayen</ng-container>\n    <ng-container *ngSwitchCase=\"'SZ'\" i18n=\"@@bb-country-item.SZ\">Swaziland</ng-container>\n    <ng-container *ngSwitchCase=\"'SE'\" i18n=\"@@bb-country-item.SE\">Sweden</ng-container>\n    <ng-container *ngSwitchCase=\"'CH'\" i18n=\"@@bb-country-item.CH\">Switzerland</ng-container>\n    <ng-container *ngSwitchCase=\"'SY'\" i18n=\"@@bb-country-item.SY\">Syrian Arab Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'TW'\" i18n=\"@@bb-country-item.TW\">Taiwan, Province of China</ng-container>\n    <ng-container *ngSwitchCase=\"'TJ'\" i18n=\"@@bb-country-item.TJ\">Tajikistan</ng-container>\n    <ng-container *ngSwitchCase=\"'TZ'\" i18n=\"@@bb-country-item.TZ\">Tanzania, United Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'TH'\" i18n=\"@@bb-country-item.TH\">Thailand</ng-container>\n    <ng-container *ngSwitchCase=\"'TL'\" i18n=\"@@bb-country-item.TL\">Timor-Leste</ng-container>\n    <ng-container *ngSwitchCase=\"'TG'\" i18n=\"@@bb-country-item.TG\">Togo</ng-container>\n    <ng-container *ngSwitchCase=\"'TK'\" i18n=\"@@bb-country-item.TK\">Tokelau</ng-container>\n    <ng-container *ngSwitchCase=\"'TO'\" i18n=\"@@bb-country-item.TO\">Tonga</ng-container>\n    <ng-container *ngSwitchCase=\"'TT'\" i18n=\"@@bb-country-item.TT\">Trinidad and Tobago</ng-container>\n    <ng-container *ngSwitchCase=\"'TN'\" i18n=\"@@bb-country-item.TN\">Tunisia</ng-container>\n    <ng-container *ngSwitchCase=\"'TR'\" i18n=\"@@bb-country-item.TR\">Turkey</ng-container>\n    <ng-container *ngSwitchCase=\"'TM'\" i18n=\"@@bb-country-item.TM\">Turkmenistan</ng-container>\n    <ng-container *ngSwitchCase=\"'TC'\" i18n=\"@@bb-country-item.TC\">Turks and Caicos Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'TV'\" i18n=\"@@bb-country-item.TV\">Tuvalu</ng-container>\n    <ng-container *ngSwitchCase=\"'UG'\" i18n=\"@@bb-country-item.UG\">Uganda</ng-container>\n    <ng-container *ngSwitchCase=\"'UA'\" i18n=\"@@bb-country-item.UA\">Ukraine</ng-container>\n    <ng-container *ngSwitchCase=\"'AE'\" i18n=\"@@bb-country-item.AE\">United Arab Emirates</ng-container>\n    <ng-container *ngSwitchCase=\"'GB'\" i18n=\"@@bb-country-item.GB\">United Kingdom</ng-container>\n    <ng-container *ngSwitchCase=\"'US'\" i18n=\"@@bb-country-item.US\">United States</ng-container>\n    <ng-container *ngSwitchCase=\"'UY'\" i18n=\"@@bb-country-item.UY\">Uruguay</ng-container>\n    <ng-container *ngSwitchCase=\"'UZ'\" i18n=\"@@bb-country-item.UZ\">Uzbekistan</ng-container>\n    <ng-container *ngSwitchCase=\"'VU'\" i18n=\"@@bb-country-item.VU\">Vanuatu</ng-container>\n    <ng-container *ngSwitchCase=\"'VE'\" i18n=\"@@bb-country-item.VE\">Venezuela, Bolivarian Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'VN'\" i18n=\"@@bb-country-item.VN\">Viet Nam</ng-container>\n    <ng-container *ngSwitchCase=\"'VG'\" i18n=\"@@bb-country-item.VG\">Virgin Islands, British</ng-container>\n    <ng-container *ngSwitchCase=\"'VI'\" i18n=\"@@bb-country-item.VI\">Virgin Islands, U.S.</ng-container>\n    <ng-container *ngSwitchCase=\"'WF'\" i18n=\"@@bb-country-item.WF\">Wallis and Futuna</ng-container>\n    <ng-container *ngSwitchCase=\"'EH'\" i18n=\"@@bb-country-item.EH\">Western Sahara</ng-container>\n    <ng-container *ngSwitchCase=\"'YE'\" i18n=\"@@bb-country-item.YE\">Yemen</ng-container>\n    <ng-container *ngSwitchCase=\"'ZM'\" i18n=\"@@bb-country-item.ZM\">Zambia</ng-container>\n    <ng-container *ngSwitchCase=\"'ZW'\" i18n=\"@@bb-country-item.ZW\">Zimbabwe</ng-container>\n  </ng-container>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CountryItemComponent } from './country-item.component';\nimport { CountryItemCustomizableDirective } from './country-item.directive';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Exports:\n * - CountryItemComponent\n * - CountryItemCustomizableDirective\n */\n@NgModule({\n  declarations: [CountryItemComponent, CountryItemCustomizableDirective],\n  exports: [CountryItemComponent, CountryItemCustomizableDirective],\n  imports: [CommonModule],\n})\nexport class CountryItemModule {}\n","import { Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport type { ContactFullAddressComponent } from './contact-full-address.component';\n\n/**\n * This is an extension slot to be used for customizing contact full address data\n *\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *  <ng-template bbContactFullAddressCustomizable let-hostRef>\n *   <span class=\"break-word\" data-role=\"contact-details-full-address\">\n *     {{ hostRef.format()\n *     }}<ng-container *ngIf=\"hostRef.address.country\">\n *       <ng-container>, </ng-container>\n *       <bb-country-item [code]=\"hostRef.address.country\"></bb-country-item>\n *     </ng-container>\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactFullAddressModule\n */\n@Directive({\n  selector: '[bbContactFullAddressCustomizable]',\n})\nexport class ContactFullAddressCustomizableDirective extends BbTemplate<ContactFullAddressComponent, undefined> {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Address } from '../../models/types';\nimport { addressToString } from '../../helpers/address';\n\n/**\n * The component is for showing contact full address.\n *\n * The following extension slots are available in this component:\n *  - `ContactFullAddressCustomizableDirective`\n *\n * @see ContactFullAddressCustomizableDirective\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *     <bb-contact-full-address [address]=\"hostRef.address\"></bb-contact-full-address>\n * ```\n * @ngModule ContactFullAddressModule\n */\n@Component({\n  selector: 'bb-contact-full-address',\n  template: `\n    <ng-container bbContactFullAddressCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n    <ng-template bbContactFullAddressCustomizable let-hostRef>\n      <span class=\"break-word\" data-role=\"contact-details-full-address\">\n        {{ hostRef.textContent }}\n        <ng-container *ngIf=\"hostRef.countryCode\">\n          <bb-country-item [code]=\"hostRef.countryCode\"></bb-country-item>\n        </ng-container>\n      </span>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactFullAddressComponent {\n  hostRef = this;\n  countryCode?: string;\n  textContent = '';\n\n  /**\n   * @param {Address} address containing all the address fields\n   */\n  @Input()\n  set address(address: Address) {\n    this.countryCode = address.country;\n    this.textContent = `${addressToString(address)}${!!this.countryCode ? ',' : ''}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ContactFullAddressComponent } from './contact-full-address.component';\nimport { ContactFullAddressCustomizableDirective } from './contact-full-address.directive';\nimport { CountryItemModule } from '../country-item/country-item.module';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Exports:\n * - ContactFullAddressComponent\n * - ContactFullAddressCustomizableDirective\n */\n@NgModule({\n  declarations: [ContactFullAddressComponent, ContactFullAddressCustomizableDirective],\n  exports: [ContactFullAddressComponent, ContactFullAddressCustomizableDirective],\n  imports: [CommonModule, CountryItemModule],\n})\nexport class ContactFullAddressModule {}\n","import { Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport type { AccountCardViewComponent } from './account-card-view.component';\n\n/**\n * This is an extension slot to be used for customizing account data in card view\n *\n * @usageNotes\n * ### Display contact account data in card form\n *\n * ```html\n *  <ng-template bbAccountCardViewCustomizable let-hostRef>\n *   <div class=\"bb-stack\">\n *     <bb-icon-ui class=\"bb-stack__item bb-stack__item--align-top bb-select-context__back\" name=\"accounts\"></bb-icon-ui>\n *     <div class=\"bb-stack__item bb-stack__item--fill\">\n *       <div class=\"bb-stack bb-block--md\">\n *         <div class=\"bb-stack__item bb-stack__item--fill\">\n *           <bb-header-ui\n *             headingType=\"h3\"\n *             [heading]=\"hostRef.account.name\"\n *             headingClasses=\"bb-stack__item bb-stack__item--fill break-word\"\n *             data-role=\"contact-details-account-name\"\n *           >\n *           </bb-header-ui>\n *           <div class=\"bb-text-support\">{{hostRef.account.alias}}</div>\n *         </div>\n *         <ng-container *ngIf=\"hostRef.isEditMode\">\n *           <button\n *             bbButton\n *             data-role=\"edit-account-button\"\n *             [circle]=\"true\"\n *             size=\"sm\"\n *             color=\"link\"\n *             (click)=\"hostRef.onEditAccount()\"\n *             bbTooltip=\"Edit account\"\n *             triggers=\"hover focus\"\n *             i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.btn.edit.label\">\n *             <bb-icon-ui class=\"text-dark\" name=\"edit\"></bb-icon-ui>\n *           </button>\n *           <button\n *             bbButton\n *             [circle]=\"true\"\n *             size=\"sm\"\n *             color=\"link\"\n *             (click)=\"hostRef.onDeleteAccount()\"\n *             bbTooltip=\"Delete account\"\n *             triggers=\"hover focus\"\n *             i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.btn.delete.label\"\n *             data-role=\"account-contact-delete\">\n *             <bb-icon-ui class=\"text-dark\" name=\"delete\"></bb-icon-ui>\n *           </button>\n *         </ng-container>\n *       </div>\n *       <div>\n *         <div class=\"bb-block bb-block--md\">\n *           <div\n *            *ngIf=\"hostRef.account.IBAN\"\n *             class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.iban.label\"\n *              >\n *               IBAN:\n *             </span>\n *             <span\n *               class=\"bb-inline-stack__item break-word\"\n *               data-role=\"contact-details-account-number\"\n *             >\n *               {{hostRef.account.IBAN | bbIban}}\n *           </span>\n *           </div>\n *           <div\n *            *ngIf=\"hostRef.account.accountNumber\"\n *             class=\"bb-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.bban.label\"\n *             >\n *               BBAN:\n *             </span>\n *             <span\n *               class=\"bb-inline-stack__item break-word\"\n *               data-role=\"contact-details-account-number\"\n *             >\n *               {{hostRef.account.accountNumber}}\n *             </span>\n *           </div>\n *           <div *ngIf=\"hostRef.account.accountType\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n *             <span class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.account-type.label\">\n *               Account type:\n *             </span>\n *             <span class=\"break-word bb-inline-stack__item\">\n *               {{hostRef.account.accountType}}\n *             </span>\n *           </div>\n *           <div\n *            *ngIf=\"hostRef.account.bankName\"\n *             class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.bank-name.label\"\n *             >\n *               Bank:\n *             </span>\n *             <span\n *               data-role=\"contact-details-bank-name\"\n *               class=\"break-word\"\n *             >\n *               {{hostRef.account.bankName}}\n *             </span>\n *           </div>\n *           <div\n *            *ngIf=\"hostRef.account.bankCode\"\n *             class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.bank-code.label\"\n *             >\n *               Bank branch code:\n *             </span>\n *             <span\n *               data-role=\"contact-details-bank-code\"\n *               class=\"break-word\"\n *             >\n *               {{hostRef.account.bankCode}}\n *             </span>\n *           </div>\n *           <div\n *            *ngIf=\"hostRef.account.BIC\"\n *             class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.bic.label\"\n *             >\n *               BIC:\n *             </span>\n *             <span class=\"break-word\">\n *               {{hostRef.account.BIC}}\n *             </span>\n *           </div>\n *         </div>\n *         <div class=\"bb-block bb-block--xs\" *ngIf=\"hostRef.isValidAddress(hostRef.bankAddress)\">\n *           <div class=\"bb-text-bold\" i18n=\"@@bb-account-card-view.bank.address.label\">\n *             Bank branch address\n *           </div>\n *           <div\n *             class=\"break-word\"\n *             data-role=\"contact-details-account-bank-address\"\n *           >\n *             <bb-contact-full-address [address]=\"hostRef.bankAddress\"></bb-contact-full-address>\n *           </div>\n *         </div>\n *         <div class=\"bb-block bb-block--xs\" *ngIf=\"hostRef.isValidAddress(hostRef.accountHolderAddress)\">\n *           <div class=\"bb-text-bold\" i18n=\"@@bb-account-card-view.accountHolder.address.label\">\n *             Account holder's address\n *           </div>\n *           <div\n *             class=\"break-word\"\n *             data-role=\"contact-details-account-holder-address\"\n *           >\n *             <bb-contact-full-address [address]=\"hostRef.accountHolderAddress\"></bb-contact-full-address>\n *           </div>\n *         </div>\n *       </div>\n *     </div>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule AccountCardViewModule\n */\n@Directive({\n  selector: '[bbAccountCardViewCustomizable]',\n})\nexport class AccountCardViewCustomizableDirective extends BbTemplate<AccountCardViewComponent, undefined> {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { addressFromAccountHolder, addressFromBank, isObjectTruthy } from '../../helpers/address';\nimport { AccountInformation, Address } from '../../models/types';\n\n/**\n * The component is for showing contact account in a card view\n *\n * The following extension slots are available in this component:\n *  - `AccountCardViewCustomizableDirective`\n *\n * @see AccountCardViewCustomizableDirective\n * @usageNotes\n *\n * ### Display contact account data in card\n *\n * ```html\n *  <bb-account-card-view\n *   [index]=\"hostRef.index\"\n *   [isEditMode]=\"true\"\n *   [account]=\"hostRef.account\"\n *   [bankAddress]=\"hostRef.bankAddress\"\n *   [accountHolderAddress]=\"hostRef.accountHolderAddress\"\n *   (deleteAccount)=\"hostRef.onDeleteAccount($event)\"\n *   (editAccount)=\"hostRef.onEditAccount($event)\">\n * </bb-account-card-view>\n * ```\n * @ngModule AccountCardViewModule\n */\n@Component({\n  selector: 'bb-account-card-view',\n  templateUrl: './account-card-view.component.html',\n})\nexport class AccountCardViewComponent implements OnInit {\n  hostRef: AccountCardViewComponent = this;\n  /**\n   * Current index of the account Information\n   */\n  @Input() index = 0;\n  /**\n   * The details of the contact account\n   */\n  @Input()\n  account!: AccountInformation;\n  /**\n   * Flag that denotes if the account information can be edited. Defaults to `false`\n   */\n  @Input() isEditMode = false;\n  /**\n   * Event emitted when account is editted\n   */\n  @Output() editAccount = new EventEmitter<number>();\n  /**\n   * Event emitted when account is deleted\n   */\n  @Output() deleteAccount = new EventEmitter<number>();\n  /**\n   * The address of the bank\n   */\n  @Input()\n  bankAddress!: Address;\n  /**\n   * The address of the account holder\n   */\n  @Input()\n  accountHolderAddress!: Address;\n  /**\n   * OnInit - set up initial values.\n   */\n  ngOnInit() {\n    this.bankAddress = this.bankAddress || addressFromBank(this.account);\n    this.accountHolderAddress = this.accountHolderAddress || addressFromAccountHolder(this.account);\n  }\n  /**\n   * Emits the edit Account event\n   */\n  onEditAccount() {\n    this.editAccount.emit(this.index);\n  }\n  /**\n   * Emits the delete account event\n   */\n  onDeleteAccount() {\n    this.deleteAccount.emit(this.index);\n  }\n  /**\n   * Verifies if the address is valid.\n   *\n   * @param {Address} address object\n   * @returns {boolean} valid or not.\n   */\n  isValidAddress(address: Address): boolean {\n    return isObjectTruthy(address);\n  }\n}\n","<ng-container bbAccountCardViewCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbAccountCardViewCustomizable let-hostRef>\n  <div class=\"bb-stack\">\n    <bb-icon-ui class=\"bb-stack__item bb-stack__item--align-top mt-1\" name=\"accounts\"></bb-icon-ui>\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-stack bb-block--md\">\n        <div class=\"bb-stack__item bb-stack__item--fill\">\n          <bb-header-ui\n            headingType=\"h3\"\n            [heading]=\"hostRef.account.name\"\n            headingClasses=\"bb-stack__item bb-stack__item--fill break-word\"\n            data-role=\"contact-details-account-name\"\n          >\n          </bb-header-ui>\n          <div class=\"bb-text-support\">{{hostRef.account.alias}}</div>\n        </div>\n        <ng-container *ngIf=\"hostRef.isEditMode\">\n          <button\n            bbButton\n            data-role=\"edit-account-button\"\n            [circle]=\"true\"\n            size=\"sm\"\n            color=\"link\"\n            (click)=\"hostRef.onEditAccount()\"\n            bbTooltip=\"Edit account\"\n            triggers=\"hover focus\"\n            i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.btn.edit.label\"\n          >\n            <bb-icon-ui class=\"text-dark\" name=\"edit\"></bb-icon-ui>\n          </button>\n          <button\n            bbButton\n            [circle]=\"true\"\n            size=\"sm\"\n            color=\"link\"\n            (click)=\"hostRef.onDeleteAccount()\"\n            bbTooltip=\"Delete account\"\n            triggers=\"hover focus\"\n            i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.btn.delete.label\"\n            data-role=\"account-contact-delete\"\n          >\n            <bb-icon-ui class=\"text-dark\" name=\"delete\"></bb-icon-ui>\n          </button>\n        </ng-container>\n      </div>\n      <dl>\n        <div class=\"bb-block bb-block--md\">\n          <div *ngIf=\"hostRef.account.IBAN\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.iban.label\">IBAN:</dt>\n            <dd class=\"bb-inline-stack__item break-word bb-block--no-margin\" data-role=\"contact-details-account-number\">\n              {{hostRef.account.IBAN | bbIban}}\n            </dd>\n          </div>\n          <div *ngIf=\"hostRef.account.accountNumber\" class=\"bb-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.bban.label\">BBAN:</dt>\n            <dd class=\"bb-inline-stack__item break-word bb-block--no-margin\" data-role=\"contact-details-account-number\">\n              {{hostRef.account.accountNumber}}\n            </dd>\n          </div>\n          <div *ngIf=\"hostRef.account.accountType\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.account-type.label\">\n              Account type:\n            </dt>\n            <dd class=\"break-word bb-inline-stack__item bb-block--no-margin\">{{hostRef.account.accountType}}</dd>\n          </div>\n          <div *ngIf=\"hostRef.account.bankName\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.bank-name.label\">Bank:</dt>\n            <dd data-role=\"contact-details-bank-name\" class=\"bb-inline-stack__item break-word bb-block--no-margin\">\n              {{hostRef.account.bankName}}\n            </dd>\n          </div>\n          <div *ngIf=\"hostRef.account.bankCode\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.bank-code.label\">\n              Bank branch code:\n            </dt>\n            <dd data-role=\"contact-details-bank-code\" class=\"bb-inline-stack__item break-word bb-block--no-margin\">\n              {{hostRef.account.bankCode}}\n            </dd>\n          </div>\n          <div *ngIf=\"hostRef.account.BIC\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.bic.label\">BIC:</dt>\n            <dd class=\"bb-inline-stack__item break-word bb-block--no-margin\">{{hostRef.account.BIC}}</dd>\n          </div>\n        </div>\n        <div class=\"bb-block bb-block--xs\" *ngIf=\"hostRef.isValidAddress(hostRef.bankAddress)\">\n          <dt class=\"bb-text-bold\" i18n=\"@@bb-account-card-view.bank.address.label\">Bank branch address</dt>\n          <dd class=\"break-word\" data-role=\"contact-details-account-bank-address\">\n            <bb-contact-full-address [address]=\"hostRef.bankAddress\"></bb-contact-full-address>\n          </dd>\n        </div>\n        <div class=\"bb-block bb-block--xs\" *ngIf=\"hostRef.isValidAddress(hostRef.accountHolderAddress)\">\n          <dt class=\"bb-text-bold\" i18n=\"@@bb-account-card-view.accountHolder.address.label\">\n            Account holder's address\n          </dt>\n          <dd class=\"break-word\" data-role=\"contact-details-account-holder-address\">\n            <bb-contact-full-address [address]=\"hostRef.accountHolderAddress\"></bb-contact-full-address>\n          </dd>\n        </div>\n      </dl>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { AccountCardViewComponent } from './account-card-view.component';\nimport { AccountCardViewCustomizableDirective } from './account-card-view.directive';\nimport { ContactFullAddressModule } from '../contact-full-address/contact-full-address.module';\nimport { CommonModule } from '@angular/common';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { BbIbanPipeModule } from '@backbase/ui-ang/iban-pipe';\nimport { IconModule } from '@backbase/ui-ang/icon';\n\n/**\n * Exports:\n * - AccountCardViewComponent\n * - AccountCardViewCustomizableDirective\n */\n@NgModule({\n  declarations: [AccountCardViewComponent, AccountCardViewCustomizableDirective],\n  exports: [AccountCardViewComponent, AccountCardViewCustomizableDirective],\n  imports: [\n    IconModule,\n    HeaderModule,\n    ButtonModule,\n    BbIbanPipeModule,\n    ContactFullAddressModule,\n    CommonModule,\n    TooltipModule,\n  ],\n})\nexport class AccountCardViewModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { toCamelCase } from '../../helpers/address';\n\n@Pipe({\n  name: 'camelcase',\n})\nexport class CamelCasePipe implements PipeTransform {\n  transform(value: any): any {\n    if (typeof value === 'string') return toCamelCase(value);\n\n    return value;\n  }\n}\n","import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlContainer, NgModelGroup } from '@angular/forms';\nimport { isObjectTruthy } from '../../helpers/address';\nimport { Address, AddressType, InputGroupName, InputName, ViewType } from '../../models/types';\nimport { ContactCountryListService } from '../../services/contact-country-list.service';\nimport { Observable, of } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { InputTextComponent } from '@backbase/ui-ang/input-text';\n\n/**\n * The component is for showing contact  address data.\n *\n *\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *    <bb-contact-address-data\n *   [highlight]=\"hostRef.highlight\"\n *   [isAddAddress]=\"hostRef.isAddAccountHolderAddress\"\n *   [addressType]=\"'accountHolder'\"\n *   [canCopyAddress]=\"hostRef.canCopyAddress\"\n *   [isContactAddressCopied]=\"hostRef.isContactAddressCopied\"\n *   [viewType]=\"hostRef.accountHolderAddressViewType\"\n *   [address]=\"hostRef.accountHolderAddress\"\n *   (add)=\"hostRef.onAccountHolderAddressAdd($event)\"\n *   (edit)=\"hostRef.onAccountHolderAddressEdit()\"\n *   (discard)=\"hostRef.onAccountHolderAddressDiscard($event)\"\n *   (delete)=\"hostRef.onAccountHolderAddressDelete($event)\"\n *   (submit)=\"hostRef.onAddressSubmit($event, hostRef.addressType.ACCOUNTHOLDER)\"\n *   (contactAddressCopy)=\"hostRef.onAddressCopy($event)\"\n *   (addressEditAfterCopy)=\"hostRef.onAddressEditAfterCopy()\">\n * </bb-contact-address-data>\n * ```\n * @ngModule ContactAddressDataModule\n */\n@Component({\n  selector: 'bb-contact-address-data',\n  templateUrl: './contact-address-data.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactAddressDataComponent implements OnInit, AfterViewChecked {\n  hostRef: ContactAddressDataComponent = this;\n  copyContactAddressInputName = InputName.COPY_CONTACT_ADDRESS;\n\n  /**\n   * Flag that denotes if address form should be displayed\n   */\n  @Input()\n  isAddAddress!: boolean;\n\n  /**\n   * Instance that holds the address details\n   */\n  @Input() address: Address = {};\n\n  /**\n   * Type of addresses. Possible values `CONTACT`, `BANK`, `ACCOUNTHOLDER`. Defaults to `CONTACT`\n   */\n  @Input() addressType: AddressType = AddressType.CONTACT;\n\n  /**\n   * Flag that denotes if address can be copied. Default value is `false`\n   */\n  @Input() canCopyAddress = false;\n\n  /**\n   * Flag that denoted if contact address is copied\n   */\n  @Input() isContactAddressCopied = false;\n\n  /**\n   * Type of address view. Possible values `FORM`| `CARD`. Defaults to `FORM`\n   */\n  @Input()\n  viewType!: ViewType;\n\n  /**\n   * If enabled it will apply highlight classes to this component.\n   * By default is `true`.\n   */\n  @Input() highlight = true;\n\n  /**\n   * Event emitted when address is submitted\n   */\n  @Output() submit = new EventEmitter();\n\n  /**\n   * Event emitted when address is discarded\n   */\n  @Output() discard = new EventEmitter();\n\n  /**\n   * Event emitted when address is deleted\n   */\n  @Output() delete = new EventEmitter();\n\n  /**\n   * Event emitted when address is editted\n   */\n  @Output() edit = new EventEmitter();\n\n  /**\n   * Event emitted when contact address has to be copied\n   */\n  @Output() contactAddressCopy = new EventEmitter<boolean>();\n\n  /**\n   * Event emitted when add address action is triggered\n   */\n  @Output() add = new EventEmitter();\n  /**\n   * Event emitted when address is edited after it has been copied from contact address\n   */\n  @Output() addressEditAfterCopy = new EventEmitter();\n\n  /**\n   * The first element one can Tab to in the form\n   */\n  @ViewChild('addressLine1') firstTabElement?: InputTextComponent;\n\n  private needsToRefocus = false;\n\n  fieldGroupName!: string;\n\n  countriesList$: Observable<string[]> = of([]);\n\n  constructor(private readonly contactCountryListService: ContactCountryListService) {}\n\n  ngOnInit() {\n    if (!this.viewType) {\n      this.viewType = ViewType.FORM;\n    }\n    this.fieldGroupName = this.getFieldGroupName();\n    this.address.country = this.address.country || '';\n\n    if (this.addressType === AddressType.BANK) {\n      this.countriesList$ = this.contactCountryListService.getFromExternalSource().pipe(shareReplay());\n    } else {\n      this.countriesList$ = this.contactCountryListService.getFromLocalSource();\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.needsToRefocus) {\n      this.firstTabElement?.inputEl?.nativeElement.focus();\n      this.needsToRefocus = false;\n    }\n  }\n\n  /**\n   *\n   * @returns {string} Name of the addressType.\n   */\n  getFieldGroupName() {\n    return `${InputGroupName.ADDRESS}[${this.addressType}]`;\n  }\n\n  /**\n   * Emits the add address event\n   *\n   * @param {boolean} isAddAddress whether address should be added\n   */\n  addAddress(isAddAddress: boolean) {\n    this.add.emit(isAddAddress);\n    this.needsToRefocus = true;\n  }\n\n  /**\n   * Emits the edit address event\n   */\n  editAddress() {\n    this.edit.emit(this.address);\n    this.needsToRefocus = true;\n  }\n\n  /**\n   * Emits the discard address event\n   */\n  discardAddress() {\n    this.discard.emit(this.fieldGroupName);\n  }\n\n  /**\n   * Emits the delete address event\n   */\n  deleteAddress() {\n    this.delete.emit(this.fieldGroupName);\n  }\n\n  /**\n   *  Emits the submit address event if valid.\n   */\n  submitAddress() {\n    if (isObjectTruthy(this.address)) {\n      this.submit.emit(this.fieldGroupName);\n    } else {\n      this.deleteAddress();\n    }\n  }\n\n  /**\n   * Emits the copy address event\n   */\n  copyContactAddress() {\n    this.contactAddressCopy.emit(this.isContactAddressCopied);\n  }\n\n  /**\n   * Emits the addressEditAfterCopy event\n   */\n  onAddressEdit() {\n    if (this.addressType === AddressType.ACCOUNTHOLDER && this.canCopyAddress) {\n      this.addressEditAfterCopy.emit();\n    }\n  }\n}\n","<div class=\"bb-block bb-block--md\" *ngIf=\"!hostRef.isAddAddress\">\n  <button\n    bbButton\n    color=\"link\"\n    (click)=\"hostRef.addAddress(true)\"\n    [attr.data-role]=\"'contact-add-address' + hostRef.addressType\"\n  >\n    <bb-icon-ui class=\"alert-icon\" name=\"control-point\"> </bb-icon-ui>\n    <ng-container i18n=\"@@contact-address-data.add.address.label\">\n      Add {hostRef.addressType, select, bank {bank} accountHolder {account holder's} other {contact}} address\n    </ng-container>\n  </button>\n</div>\n\n<div\n  class=\"bb-block bb-block--lg card card-section\"\n  *ngIf=\"hostRef.viewType === 'CARD'\"\n  [ngClass]=\"{ 'card-section--highlight': hostRef.highlight }\"\n  [attr.data-role]=\"'contact-card-address' + hostRef.addressType\"\n>\n  <div class=\"bb-stack bb-block bb-block--sm\">\n    <div class=\"bb-stack__item bb-text-bold\" i18n=\"@@contact-address-data.contactaddress.card.label\">\n      {hostRef.addressType, select, bank {Bank} accountHolder {Account holder's} other {Contact}} address\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--push-right\">\n      <button\n        bbButton\n        [attr.data-role]=\"'contact-edit-address' + hostRef.addressType\"\n        [circle]=\"true\"\n        size=\"sm\"\n        color=\"link\"\n        (click)=\"hostRef.editAddress()\"\n        bbTooltip=\"Edit address\"\n        triggers=\"hover focus\"\n        i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.buttons.edit.label\"\n      >\n        <bb-icon-ui color=\"dark\" name=\"edit\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        [attr.data-role]=\"'contact-delete-address' + hostRef.addressType\"\n        [circle]=\"true\"\n        size=\"sm\"\n        color=\"link\"\n        (click)=\"hostRef.deleteAddress()\"\n        bbTooltip=\"Delete address\"\n        triggers=\"hover focus\"\n        i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.buttons.delete.label\"\n      >\n        <bb-icon-ui color=\"dark\" name=\"delete\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n  <bb-contact-full-address [address]=\"hostRef.address\"></bb-contact-full-address>\n</div>\n\n<div\n  class=\"bb-stack bb-block bb-block--lg card card-section\"\n  *ngIf=\"hostRef.isAddAddress\"\n  [ngClass]=\"{\n    'd-none': hostRef.viewType === 'CARD',\n    'card-section--highlight': hostRef.highlight\n  }\"\n>\n  <fieldset [ngModelGroup]=\"hostRef.fieldGroupName\" (input)=\"hostRef.onAddressEdit()\">\n    <legend class=\"sr-only\" i18n=\"@@contact-address-data.addressGroup.title\">Address details</legend>\n    <div class=\"bb-block bb-block--sm\">\n      <div class=\"bb-stack bb-stack--align-top\">\n        <div class=\"bb-block bb-block--lg bb-stack__item bb-select-context__back\" data-role=\"create-contact-form\">\n          <span class=\"d-none\" aria-hidden=\"true\" i18n=\"@@contact-address-data.contactaddress.label\" #heading>\n            {hostRef.addressType, select, bank {Bank} accountHolder {Account holder's} other {Contact}} address\n          </span>\n          <bb-header-ui\n            id=\"headerTtitle\"\n            headingType=\"h4\"\n            [heading]=\"heading.textContent\"\n            data-role=\"contact-address-label\"\n          >\n          </bb-header-ui>\n        </div>\n      </div>\n      <bb-input-text-ui\n        #addressLine1\n        label=\"Primary address line, street name and number\"\n        i18n-label=\"@@contact-address-data.addressLine1.info-label\"\n        [(ngModel)]=\"hostRef.address.addressLine1\"\n        data-role=\"addressLine1\"\n        [name]=\"(hostRef.addressType + 'AddressLine1') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-input-text-ui\n        label=\"Additional address line 2\"\n        i18n-label=\"@@contact-address-data.contactaddress2.info-label\"\n        [(ngModel)]=\"hostRef.address.addressLine2\"\n        data-role=\"addressLine2\"\n        [name]=\"(hostRef.addressType + 'AddressLine2') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-input-text-ui\n        label=\"Additional address line 3\"\n        i18n-label=\"@@contact-address-data.streetName.info-label\"\n        [(ngModel)]=\"hostRef.address.streetName\"\n        data-role=\"addressLine3\"\n        [name]=\"(hostRef.addressType + 'StreetName') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-5 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Post code / ZIP\"\n          i18n-label=\"@@contact-address-data.contactPostCode.label\"\n          [(ngModel)]=\"hostRef.address.postCode\"\n          data-role=\"postCode\"\n          [name]=\"(hostRef.addressType + 'PostCode') | camelcase\"\n          [maxLength]=\"16\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-7 col-xs-12\">\n        <bb-input-text-ui\n          label=\"City or town\"\n          i18n-label=\"@@contact-address-data.town.label\"\n          [(ngModel)]=\"hostRef.address.town\"\n          data-role=\"town\"\n          [name]=\"(hostRef.addressType + 'Town') | camelcase\"\n          [maxLength]=\"35\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-7 col-xs-12\">\n        <bb-input-text-ui\n          label=\"State or area\"\n          i18n-label=\"@@contact-address-data.countrySubDivision.label\"\n          [(ngModel)]=\"hostRef.address.countrySubDivision\"\n          data-role=\"stateOrArea\"\n          [name]=\"(hostRef.addressType + 'CountrySubDivision') | camelcase\"\n          [maxLength]=\"35\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-5 col-xs-12\">\n        <bb-dropdown-single-select-ui\n          label=\"Country\"\n          i18n-label=\"@@contact-address-data.contactCountry.label\"\n          (change)=\"hostRef.onAddressEdit()\"\n          [(ngModel)]=\"hostRef.address.country\"\n          data-role=\"contactCountry\"\n          [name]=\"(hostRef.addressType + 'Country') | camelcase\"\n          placeholder=\"Select country\"\n          i18n-placeholder=\"@@bb-create-contact.dropdown.country.placeholder\"\n        >\n          <ng-container *ngFor=\"let country of countriesList$ | async\">\n            <span class=\"d-none\" aria-hidden=\"true\" #countryItem>\n              <bb-country-item [code]=\"country\"></bb-country-item>\n            </span>\n            <bb-dropdown-single-select-option-ui [value]=\"country\" [label]=\"countryItem.textContent\">\n            </bb-dropdown-single-select-option-ui>\n          </ng-container>\n        </bb-dropdown-single-select-ui>\n      </div>\n    </div>\n\n    <div class=\"row bb-block bb-block--lg\" *ngIf=\"hostRef.canCopyAddress && hostRef.addressType === 'accountHolder'\">\n      <div class=\"col-12\">\n        <bb-input-checkbox-ui\n          label=\"Use contact address as account holder's address\"\n          i18n-label=\"@@contact-address-data.copy.contact.address.label\"\n          data-role=\"copy-contact-address-checkbox\"\n          [name]=\"copyContactAddressInputName\"\n          (change)=\"hostRef.copyContactAddress()\"\n          [(ngModel)]=\"hostRef.isContactAddressCopied\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        (click)=\"hostRef.submitAddress()\"\n        data-role=\"contact-confirm-address\"\n      >\n        <ng-container i18n=\"@@contact-create.modal.btn.addAddress\"> Confirm address </ng-container>\n      </button>\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.discardAddress()\"\n        data-role=\"contact-cancel-address\"\n      >\n        <ng-container i18n=\"@@contact-create.modal.btn.discard\"> Discard </ng-container>\n      </button>\n    </div>\n  </fieldset>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { AccountInformation, Address, AddressType, InputGroupName, ViewType } from '../../models/types';\nimport { addressFromAccountHolder, addressFromBank, isObjectTruthy } from '../../helpers/address';\nimport { BB_CONTACT_BANK_ACCOUNT_TYPES_LIST } from '../../config.providers';\nimport { IbanMask } from '../../constants';\n\n/**\n * The component is for showing contact  account data.\n *\n *\n * @usageNotes\n *\n * ### Display contact account data\n *\n * ```html\n *  <bb-contact-account-data\n *   [highlight]=\"false\"\n *   [index]=\"index\"\n *   [account]=\"account.data\"\n *   [accountView]=\"account.viewType\"\n *   [bankAddressViewType]=\"account.bankAddressViewType\"\n *   [accountHolderAddressViewType]=\"account.accountHolderAddressViewType\"\n *   [isAddBankAddress]=\"account.isAddBankAddress\"\n *   [canCopyAddress]=\"hostRef.canCopyAddress()\"\n *   [isContactAddressCopied]=\"account.isContactAddressCopied\"\n *   [bankAddress]=\"account.bankAddress\"\n *   [accountHolderAddress]=\"account.accountHolderAddress\"\n *   [isAddAccountHolderAddress]=\"account.isAddAccountHolderAddress\"\n *   [isAccountTypeRequired]=\"hostRef.isAccountTypeRequired\"\n *   (bankAddressAdd)=\"hostRef.addBankAddress($event, index)\"\n *   (accountHolderAddressAdd)=\"hostRef.addAccountHolderAddress($event, index)\"\n *   (bankAddressViewChange)=\"hostRef.changeBankAddressView($event, index)\"\n *   (accountHolderAddressViewChange)=\"hostRef.changeAccountHolderAddressView($event, index)\"\n *   (editAccount)=\"hostRef.editAccount($event, formRef)\"\n *   (deleteAccount)=\"hostRef.deleteAccount($event)\"\n *   (contactAddressCopy)=\"hostRef.copyAddress($event, index)\"\n *   (addressEditAfterCopy)=\"hostRef.onAddressEditAfterCopy(index)\">\n * </bb-contact-account-data>\n * ```\n * @ngModule ContactAccountDataModule\n */\n@Component({\n  selector: 'bb-contact-account-data',\n  templateUrl: './contact-account-data.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactAccountDataComponent implements OnInit, OnChanges {\n  hostRef: ContactAccountDataComponent = this;\n  readonly addressType = AddressType;\n  readonly ibanMask = IbanMask;\n\n  private originalBankAddress: Address | undefined;\n  private originalAccountHolderAddress: Address | undefined;\n\n  /**\n   * Current index of the account Information\n   */\n  @Input() index = 0;\n  /**\n   * The details of the account\n   */\n  @Input()\n  account!: AccountInformation;\n  /**\n   * Current view type of the account. Possible values `FORM`| `CARD`. Defaults to `FORM`\n   */\n  @Input() accountView: ViewType = ViewType.FORM;\n  /**\n   * Event emitted when the account is edited, i.e, switch from `CARD` view to `FORM` View\n   */\n  @Output() editAccount = new EventEmitter();\n  /**\n   * View type of the bank address\n   */\n  @Input() bankAddressViewType: ViewType = ViewType.FORM;\n  /**\n   * View type of the account holder address\n   */\n  @Input() accountHolderAddressViewType: ViewType = ViewType.FORM;\n  /**\n   * Flag that denotes if bank address should be added\n   */\n  @Input() isAddBankAddress = false;\n  /**\n   * Flag that denotes if address can be copied. Default value is `false`\n   */\n  @Input() canCopyAddress = false;\n  /**\n   * The bank address details\n   */\n  @Input() bankAddress = {};\n  /**\n   * The account holder address details\n   */\n  @Input() accountHolderAddress = {};\n  /**\n   * Flag that denotes if account holder address should be added\n   */\n  @Input() isAddAccountHolderAddress = false;\n  /**\n   * Flag that denotes if contact address is copied\n   */\n  @Input() isContactAddressCopied = false;\n  /**\n   * Property meant for forcing change detection when parent changes form state\n   */\n  @Input() forceChangeDetection: unknown;\n  /**\n   * If enabled it will apply highlight classes to this component.\n   * By default is `true`.\n   */\n  @Input() highlight = true;\n  /**\n   * If enabled the accountType is mandatory field.\n   */\n  @Input() isAccountTypeRequired = false;\n  /**\n   * Event emitted when add bank address flag changes\n   */\n  @Output() bankAddressAdd = new EventEmitter<boolean>();\n  /**\n   * Event emitted when add account holder address flag changes\n   */\n  @Output() accountHolderAddressAdd = new EventEmitter<boolean>();\n  /**\n   * Event emitted when bank address view is changed\n   */\n  @Output() bankAddressViewChange = new EventEmitter<ViewType>();\n  /**\n   * Event emitted when accountHolder address view is changed\n   */\n  @Output() accountHolderAddressViewChange = new EventEmitter<ViewType>();\n  /**\n   * Event emitted when contact address has to be copied\n   */\n  @Output() contactAddressCopy = new EventEmitter<boolean>();\n  /**\n   * Event emitted when the account is deleted\n   */\n  @Output() deleteAccount = new EventEmitter();\n  /**\n   * Event emitted when address is edited after it has been copied from contact address\n   */\n  @Output() addressEditAfterCopy = new EventEmitter();\n\n  accountInputGroupName!: string;\n\n  constructor(\n    private readonly ctrlContainer: ControlContainer,\n    @Inject(BB_CONTACT_BANK_ACCOUNT_TYPES_LIST) public accountTypeList: string[],\n  ) {}\n\n  ngOnInit() {\n    this.accountInputGroupName = this.getName();\n    if (Object.keys(this.bankAddress).length) {\n      this.originalBankAddress = { ...this.bankAddress };\n    }\n    if (Object.keys(this.accountHolderAddress).length) {\n      this.originalAccountHolderAddress = { ...this.accountHolderAddress };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['index']) {\n      this.accountInputGroupName = this.getName();\n    }\n  }\n  /**\n   *\n   * @returns {string} Name of the current index of contact account.\n   */\n  getName() {\n    return `${InputGroupName.ACCOUNT}[${this.index}]`;\n  }\n  /**\n   * Emits the delete event\n   *\n   * @param {?number} accountIndex - account Index\n   */\n  onDeleteAccount(accountIndex?: number) {\n    this.deleteAccount.emit(accountIndex || this.index);\n  }\n  /**\n   * Emits the contactAddressCopy event\n   *\n   * @param {boolean} isCopy - if copy is allowed.\n   */\n  onAddressCopy(isCopy: boolean) {\n    this.contactAddressCopy.emit(isCopy);\n  }\n  /**\n   * Emits the edit account method\n   *\n   * @param {?number} accountIndex index of an account\n   */\n  onEditAccount(accountIndex?: number) {\n    this.editAccount.emit(accountIndex || this.index);\n  }\n  /**\n   * Emits the bankaddress add event\n   *\n   * @param {boolean} isAddAddress whether new address should be added\n   */\n  onBankAddressAdd(isAddAddress: boolean) {\n    this.bankAddressAdd.emit(isAddAddress);\n  }\n  /**\n   * Emits Bank address edit event\n   */\n  onBankAddressEdit() {\n    this.bankAddressViewChange.emit(ViewType.FORM);\n  }\n  /**\n   * Emits the bankaddress delete event with index\n   *\n   * @param {string} controlName name of a form control\n   */\n  onBankAddressDelete(controlName: string) {\n    this.originalBankAddress = undefined;\n    this.bankAddressAdd.emit(false);\n    this.resetAddress(controlName);\n    this.bankAddressViewChange.emit(ViewType.FORM);\n  }\n  /**\n   * Emits appropriate event based on validity.\n   *\n   * @param {string} controlName name of a form control\n   * @param {AddressType} addressType enumerated value\n   */\n  onAddressSubmit(controlName: string, addressType: AddressType) {\n    const address = this.getFormControl(controlName);\n    address.markAllAsTouched();\n    address.updateValueAndValidity();\n    if (address.valid) {\n      if (addressType === this.addressType.BANK) {\n        this.originalBankAddress = { ...addressFromBank(address.value) };\n        this.bankAddressViewChange.emit(ViewType.CARD);\n      } else {\n        this.originalAccountHolderAddress = { ...addressFromAccountHolder(address.value) };\n        this.accountHolderAddressViewChange.emit(ViewType.CARD);\n      }\n    }\n  }\n  /**\n   * Emits appropriate view ehn discarded.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onBankAddressDiscard(controlName: string) {\n    if (this.originalBankAddress) {\n      this.bankAddress = { ...this.originalBankAddress };\n      this.bankAddressViewChange.emit(ViewType.CARD);\n    } else {\n      this.onBankAddressDelete(controlName);\n    }\n  }\n  /**\n   * Resets form control.\n   *\n   * @param {string} controlName name of a form control\n   */\n  resetAddress(controlName: string) {\n    this.getFormControl(controlName).reset();\n  }\n  /**\n   * Checks if the address is valid.\n   *\n   * @param {Address} address address object\n   * @returns {boolean} whether address is valid\n   */\n  isValidAddress(address: Address): boolean {\n    return isObjectTruthy(address);\n  }\n  /**\n   * Returns the form control of given control name,\n   *\n   * @param {string} controlName name of a form control\n   * @returns {AbstractControl} form control object\n   */\n  getFormControl(controlName: string): AbstractControl {\n    const accountInputGroup = (this.ctrlContainer as NgForm).controls[this.accountInputGroupName];\n\n    if (!accountInputGroup) {\n      return new FormControl();\n    }\n\n    return (accountInputGroup as FormGroup).controls[controlName];\n  }\n  /**\n   * Emits event when account holder address is added\n   *\n   * @param {boolean} isAddAddress whether address should be added\n   */\n  onAccountHolderAddressAdd(isAddAddress: boolean) {\n    this.accountHolderAddressAdd.emit(isAddAddress);\n  }\n  /**\n   * Emits event when account holder address is edited.\n   */\n  onAccountHolderAddressEdit() {\n    this.accountHolderAddressViewChange.emit(ViewType.FORM);\n  }\n  /**\n   *Emits event when account holder address is deleted.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAccountHolderAddressDelete(controlName: string) {\n    this.originalAccountHolderAddress = undefined;\n    this.accountHolderAddressAdd.emit(false);\n    this.resetAddress(controlName);\n    this.accountHolderAddressViewChange.emit(ViewType.FORM);\n  }\n  /**\n   * Emits account\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAccountHolderAddressDiscard(controlName: string) {\n    if (this.originalAccountHolderAddress) {\n      this.accountHolderAddress = { ...this.originalAccountHolderAddress };\n      this.accountHolderAddressViewChange.emit(ViewType.CARD);\n    } else {\n      this.onAccountHolderAddressDelete(controlName);\n    }\n  }\n  /**\n   * Emits address after edit copy event\n   */\n  onAddressEditAfterCopy() {\n    this.addressEditAfterCopy.emit();\n  }\n}\n","<div [ngClass]=\"{'d-none': hostRef.accountView ==='CARD'}\">\n  <fieldset [ngModelGroup]=\"hostRef.accountInputGroupName\">\n    <legend class=\"sr-only\" i18n=\"@@contact-account-data.accountGroup.title\">Account details</legend>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\" data-role=\"contact-account-info-account-name1\">\n        <label\n          #accountNameLabel\n          id=\"bb-contact-account-data-accountName-label\"\n          i18n=\"@@contact-account-data.accountName.label\"\n        >\n          Account name\n        </label>\n        <span id=\"account-name-required-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.accountName.text-support.required.label\">Required</ng-container>)\n        </span>\n        <bb-input-text-ui\n          name=\"name\"\n          #accountNameModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.account.name\"\n          [maxLength]=\"140\"\n          [required]=\"true\"\n          [aria-labelledby]=\"accountNameLabel.id\"\n          aria-describedby=\"account-name-required-info\"\n          data-role=\"contact-account-info-account-name\"\n          bbNoWhiteSpace\n        >\n        </bb-input-text-ui>\n\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"accountNameModel.invalid && accountNameModel.touched\"\n        >\n          <ng-container>\n            <span i18n=\"@@contact-account-data.accountName.errorText\" data-role=\"missing-account-name\">\n              Account name is required\n            </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          name=\"alias\"\n          label=\"Account alias\"\n          i18n-label=\"@@contact-account-data.accountAlias.label\"\n          [(ngModel)]=\"hostRef.account.alias\"\n          [maxLength]=\"34\"\n          data-role=\"account-alias\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label #ibanLabel id=\"bb-contact-account-data-iban-label\" i18n=\"@@contact-account-data.contactIBAN.label\">\n          IBAN\n        </label>\n        <span id=\"iban-required-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.iban.text-support.required.label\"\n            >IBAN or BBAN is required</ng-container\n          >)\n        </span>\n        <bb-input-text-ui\n          name=\"IBAN\"\n          #ibanModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.account.IBAN\"\n          [maxLength]=\"hostRef.ibanMask.length\"\n          [required]=\"!bbanModel.value\"\n          [aria-labelledby]=\"ibanLabel.id\"\n          aria-describedby=\"iban-required-info\"\n          [mask]=\"hostRef.ibanMask\"\n          [maskValidator]=\"false\"\n          data-role=\"contact-iban\"\n          bbIbanValidator\n        >\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"(ibanModel.invalid && ibanModel.touched || bbanModel.invalid && bbanModel.touched)\"\n        >\n          <ng-container *ngIf=\"ibanModel.errors && ibanModel?.errors.required\">\n            <span i18n=\"@@contact-account-data.iban.error.required\" data-role=\"missing-iban\">\n              IBAN or BBAN is required\n            </span>\n          </ng-container>\n          <ng-container *ngIf=\"ibanModel.errors && ibanModel?.errors.invalidIban\">\n            <span i18n=\"@@contact-account-data.accountName.error.iban\" data-role=\"invalid-iban\"> Invalid IBAN </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label #bbanLabel id=\"bb-contact-account-data-bban-label\" i18n=\"@@contact-account-data.contactBBAN.label\">\n          BBAN\n        </label>\n        <span id=\"bban-required-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.bban.text-support.required.label\"\n            >IBAN or BBAN is required</ng-container\n          >)\n        </span>\n        <bb-input-text-ui\n          name=\"accountNumber\"\n          #bbanModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.account.accountNumber\"\n          [maxLength]=\"34\"\n          [required]=\"!ibanModel.value\"\n          [aria-labelledby]=\"bbanLabel.id\"\n          aria-describedby=\"bban-required-info\"\n          data-role=\"contact-account-number\"\n        >\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"(ibanModel.invalid && ibanModel.touched || bbanModel.invalid && bbanModel.touched)\"\n        >\n          <ng-container *ngIf=\"bbanModel.errors && bbanModel?.errors.required\">\n            <span i18n=\"@@contact-account-data.iban.error.required\" data-role=\"missing-bban\">\n              IBAN or BBAN is required\n            </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label\n          #accountTypeLabel\n          id=\"bb-contact-account-data-accountType-label\"\n          i18n=\"@@contact-account-data.accounType.label\"\n        >\n          Account type\n        </label>\n        <span id=\"account-type-required-info\" class=\"bb-text-support\" *ngIf=\"hostRef.isAccountTypeRequired\">\n          (<ng-container i18n=\"@@contact-account-data.accountType.text-support.required.label\">Required</ng-container>)\n        </span>\n        <bb-dropdown-single-select-ui\n          name=\"accountType\"\n          #accountTypeModel=\"ngModel\"\n          placeholder=\"Select\"\n          i18n-placeholder=\"@@bb-create-contact.dropdown.account.type.placeholder\"\n          [(ngModel)]=\"hostRef.account.accountType\"\n          [defaultOptionAsPlaceholder]=\"!hostRef.isAccountTypeRequired\"\n          [required]=\"hostRef.isAccountTypeRequired\"\n          [aria-labelledby]=\"accountTypeLabel.id\"\n          aria-describedby=\"account-type-required-info\"\n          data-role=\"bankAccountType\"\n        >\n          <ng-container *ngFor=\"let accountType of accountTypeList\">\n            <bb-dropdown-single-select-option-ui [value]=\"accountType\" [label]=\"accountType\">\n            </bb-dropdown-single-select-option-ui>\n          </ng-container>\n        </bb-dropdown-single-select-ui>\n\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"accountTypeModel.invalid && accountTypeModel.touched\"\n        >\n          <ng-container>\n            <span i18n=\"@@contact-account-data.accountType.errorText\" data-role=\"missing-account-type\">\n              Account type is required\n            </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          name=\"bankCode\"\n          label=\"Bank branch code\"\n          i18n-label=\"@@contact-account-data.contactBankCode.label\"\n          [(ngModel)]=\"hostRef.account.bankCode\"\n          [maxLength]=\"20\"\n          data-role=\"bank-code\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          name=\"bankName\"\n          label=\"Bank name\"\n          i18n-label=\"@@contact-account-data.contactBankName.label\"\n          [(ngModel)]=\"hostRef.account.bankName\"\n          [maxLength]=\"140\"\n          data-role=\"bank-name\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          name=\"BIC\"\n          #bicModel=\"ngModel\"\n          label=\"BIC\"\n          i18n-label=\"@@contact-account-data.contactBIC.label\"\n          [(ngModel)]=\"hostRef.account.BIC\"\n          (ngModelChange)=\"hostRef.account.BIC = $event && $event.toUpperCase()\"\n          pattern=\"^[A-Za-z]{6,6}[A-Za-z2-9][A-Na-nP-Zp-z0-9]([A-Za-z0-9]{3,3}){0,1}$\"\n          data-role=\"bic\"\n        >\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"bicModel.invalid && bicModel.touched\">\n          <ng-container *ngIf=\"bicModel.errors && bicModel?.errors.pattern\">\n            <span i18n=\"@@contact-account-data.accountName.error.bic\" data-role=\"invalid-bic\"> Invalid BIC </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div data-role=\"bank-address-container\">\n      <bb-contact-address-data\n        [highlight]=\"hostRef.highlight\"\n        [isAddAddress]=\"hostRef.isAddBankAddress\"\n        [addressType]=\"'bank'\"\n        [viewType]=\"hostRef.bankAddressViewType\"\n        [address]=\"hostRef.bankAddress\"\n        (add)=\"hostRef.onBankAddressAdd($event)\"\n        (edit)=\"hostRef.onBankAddressEdit()\"\n        (discard)=\"hostRef.onBankAddressDiscard($event)\"\n        (delete)=\"hostRef.onBankAddressDelete($event)\"\n        (submit)=\"hostRef.onAddressSubmit($event, hostRef.addressType.BANK)\"\n      >\n      </bb-contact-address-data>\n    </div>\n    <div data-role=\"account-holder-address-container\">\n      <bb-contact-address-data\n        [highlight]=\"hostRef.highlight\"\n        [isAddAddress]=\"hostRef.isAddAccountHolderAddress\"\n        [addressType]=\"'accountHolder'\"\n        [canCopyAddress]=\"hostRef.canCopyAddress\"\n        [isContactAddressCopied]=\"hostRef.isContactAddressCopied\"\n        [viewType]=\"hostRef.accountHolderAddressViewType\"\n        [address]=\"hostRef.accountHolderAddress\"\n        (add)=\"hostRef.onAccountHolderAddressAdd($event)\"\n        (edit)=\"hostRef.onAccountHolderAddressEdit()\"\n        (discard)=\"hostRef.onAccountHolderAddressDiscard($event)\"\n        (delete)=\"hostRef.onAccountHolderAddressDelete($event)\"\n        (submit)=\"hostRef.onAddressSubmit($event, hostRef.addressType.ACCOUNTHOLDER)\"\n        (contactAddressCopy)=\"hostRef.onAddressCopy($event)\"\n        (addressEditAfterCopy)=\"hostRef.onAddressEditAfterCopy()\"\n      >\n      </bb-contact-address-data>\n    </div>\n  </fieldset>\n</div>\n\n<div\n  class=\"card card-section bb-block bb-block--lg\"\n  *ngIf=\"hostRef.accountView ==='CARD'\"\n  data-role=\"contact-account-card-address\"\n>\n  <bb-account-card-view\n    [index]=\"hostRef.index\"\n    [isEditMode]=\"true\"\n    [account]=\"hostRef.account\"\n    [bankAddress]=\"hostRef.bankAddress\"\n    [accountHolderAddress]=\"hostRef.accountHolderAddress\"\n    (deleteAccount)=\"hostRef.onDeleteAccount($event)\"\n    (editAccount)=\"hostRef.onEditAccount($event)\"\n  >\n  </bb-account-card-view>\n</div>\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactAccountDataComponent } from './contact-account-data.component';\n\n/**\n * This is an extension slot to be used for customizing contact account data\n *\n * @usageNotes\n *\n * ### Display contact account data\n *\n * ```html\n *  <ng-template bbContactAccountDataCustomizable let-hostRef>\n * {{hostRef.account.name}}</ng-template>\n * ```\n * @ngModule ContactAccountDataModule\n */\n@Directive({\n  selector: '[bbContactAccountDataCustomizable]',\n})\nexport class ContactAccountDataCustomizableDirective extends BbTemplate<ContactAccountDataComponent, undefined> {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactAddressDataComponent } from './contact-address-data.component';\n\n/**\n * This is an extension slot to be used for customizing contact address data\n *\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *  <ng-template bbContactAddressDataCustomizable let-hostRef>\n * {{hostRef.address.addressLine1}}</ng-template>\n * ```\n * @ngModule ContactAddressDataModule\n */\n@Directive({\n  selector: '[bbContactAddressDataCustomizable]',\n})\nexport class ContactAddressDataCustomizableDirective extends BbTemplate<ContactAddressDataComponent, undefined> {}\n","import { NgModule } from '@angular/core';\nimport { CamelCasePipe } from './camel-case.pipe';\n\n@NgModule({\n  declarations: [CamelCasePipe],\n  exports: [CamelCasePipe],\n})\nexport class CamelCaseModule {}\n","import { NgModule } from '@angular/core';\nimport { ContactAddressDataComponent } from './contact-address-data.component';\nimport { ContactAddressDataCustomizableDirective } from './contact-address-data.directive';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CountryItemModule } from '../country-item/country-item.module';\nimport { ContactFullAddressModule } from '../contact-full-address/contact-full-address.module';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CamelCaseModule } from '../../pipes/camel-case/camel-case.module';\n\n/**\n * Exports:\n * - ContactAddressDataComponent\n * - ContactAddressDataCustomizableDirective\n */\n@NgModule({\n  declarations: [ContactAddressDataComponent, ContactAddressDataCustomizableDirective],\n  exports: [ContactAddressDataComponent, ContactAddressDataCustomizableDirective],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IconModule,\n    HeaderModule,\n    InputTextModule,\n    DropdownSingleSelectModule,\n    CountryItemModule,\n    InputCheckboxModule,\n    ButtonModule,\n    ContactFullAddressModule,\n    TooltipModule,\n    CamelCaseModule,\n  ],\n})\nexport class ContactAddressDataModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ContactAccountDataComponent } from './contact-account-data.component';\nimport { ContactAccountDataCustomizableDirective } from './contact-account-data.directive';\nimport { ContactAddressDataModule } from '../contact-address-data/contact-address-data.module';\nimport { AccountCardViewModule } from '../account-card-view/account-card-view.module';\nimport { NoWhiteSpaceModule } from '../../directives/no-white-space-validator/no-white-space.module';\nimport { IbanValidatorModule } from '../../directives/iban-validator/iban-validator.module';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\n\n/**\n * Exports:\n * - ContactAccountDataComponent\n * - ContactAccountDataCustomizableDirective\n */\n@NgModule({\n  declarations: [ContactAccountDataComponent, ContactAccountDataCustomizableDirective],\n  exports: [ContactAccountDataComponent, ContactAccountDataCustomizableDirective],\n  imports: [\n    CommonModule,\n    FormsModule,\n    InputTextModule,\n    InputValidationMessageModule,\n    DropdownSingleSelectModule,\n    ContactAddressDataModule,\n    AccountCardViewModule,\n    NoWhiteSpaceModule,\n    IbanValidatorModule,\n  ],\n})\nexport class ContactAccountDataModule {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\n\n/**\n * This is an extension slot to be used for customizing contact details item\n *\n * @usageNotes\n *p\n * ### Display contact details view.\n *\n * ```html\n *  <ng-template bbContactItemDetailsCustomizable let-hostRef>\n *   <div class=\"bb-block\">\n *     <div\n *       *ngIf=\"hostRef.showName\"\n *       class=\"bb-stack bb-block bb-block--md col\"\n *     >\n *       <span\n *         class=\"bb-stack__item\"\n *         data-role=\"contact-details-info-name\"\n *       >\n *         {{ hostRef.contactItem?.name }}\n *       </span>\n *       <ng-container *ngIf=\"hostRef.contactItem?.alias\">\n *         <span\n *           class=\"bb-stack__item\"\n *           aria-hidden=\"true\"\n *         >\n *           •\n *         </span>\n *         <span\n *           class=\"bb-stack__item\"\n *           data-role=\"contact-details-info-alias\"\n *         >\n *           {{ hostRef.contactItem?.alias }}\n *         </span>\n *       </ng-container>\n *     </div>\n *     <div class=\"col bb-block bb-block--lg\">\n *       <div class=\"row bb-stack\">\n *         <div\n *           *ngIf=\"hostRef.contactItem?.phoneNumber\"\n *           class=\"bb-stack__item col-6 bb-block bb-block--md\"\n *         >\n *           <div\n *             class=\"bb-block bb-block--sm bb-label\"\n *             i18n=\"@@contact-item-details.contact-information.phone\"\n *           >\n *             Phone number\n *           </div>\n *           <div\n *             class=\"bb-block bb-block--sm\"\n *             data-role=\"contact-details-info-phone\"\n *           >\n *             {{hostRef.contactItem?.phoneNumber}}\n *           </div>\n *         </div>\n *         <div\n *           *ngIf=\"hostRef.contactItem?.emailId\"\n *           class=\"bb-stack__item bb-stack__item--align-top col-6 bb-block bb-block--md \"\n *         >\n *           <div\n *             class=\"bb-block bb-block--sm bb-label row\"\n *             i18n=\"@@contact-item-details.contact-information.email\"\n *           >\n *             Email address\n *           </div>\n *           <div\n *             class=\"row\"\n *             data-role=\"contact-details-info-email\"\n *           >\n *             {{hostRef.contactItem?.emailId}}\n *           </div>\n *         </div>\n *       </div>\n *       <div\n *         *ngIf=\"hostRef.contactItem?.contactPerson\"\n *         class=\"bb-block bb-block--md col-12\"\n *       >\n *         <div\n *           class=\"bb-block bb-block--sm bb-label row\"\n *           i18n=\"@@contact-item-details.contact-information.contact-person\"\n *         >\n *           Contact person\n *         </div>\n *         <div\n *           class=\"bb-block bb-block--sm row\"\n *           data-role=\"contact-details-info-contact-person\"\n *         >\n *           {{hostRef.contactItem?.contactPerson}}\n *         </div>\n *       </div>\n *       <div class=\"bb-block bb-block--md col-12\">\n *         <div\n *           *ngIf=\"hostRef.contactItem?.streetName || hostRef.contactItem?.addressLine1 || hostRef.contactItem?.addressLine2\"\n *           class=\"bb-block bb-block--sm bb-label row\"\n *           i18n=\"@@contact-item-details.contact-information.address\"\n *         >\n *           Contact address\n *         </div>\n *         <bb-contact-full-address\n *           [address]=\"hostRef.address\"\n *           class=\"row\"\n *         ></bb-contact-full-address>\n *       </div>\n *     </div>\n *   </div>\n *   <div class=\"bb-block bb-block--lg\">\n *     <div class=\"bb-stack bb-block bb-block--lg\">\n *       <bb-header-ui\n *         headingType=\"h3\"\n *         heading=\"Account information\"\n *         i18n-heading=\"@@contact-item-details.account-information.title\"\n *         headingClasses=\"bb-stack__item bb-stack__item--fill\"\n *       >\n *       </bb-header-ui>\n *       <span\n *         class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--push-right bb-text-support\"\n *         i18n=\"@@contact-item-details.account-information.number-of-accounts\"\n *         data-role=\"contact-details-account-number-accounts\"\n *       >\n *         {{hostRef.contactItem?.accounts?.length}}\n *         {hostRef.contactItem?.accounts?.length, plural, =1 {account} other {accounts}}\n *       </span>\n *     </div>\n *     <div\n *       *ngFor=\"let account of hostRef.contactItem?.accounts; let index = index; trackBy: hostRef.trackByIndex\"\n *       class=\"card card-section bb-block bb-block--lg\"\n *     >\n *       <bb-account-card-view\n *         [account]=\"account\"\n *         [bankAddress]=\"hostRef.bankAddress(account)\"\n *         [accountHolderAddress]=\"hostRef.accountHolderAddress(account)\"\n *         [index]=\"index\"\n *       ></bb-account-card-view>\n *     </div>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactItemDetailsModule\n */\n@Directive({\n  selector: '[bbContactItemDetailsCustomizable]',\n})\nexport class ContactItemDetailsCustomizableDirective extends BbTemplate<\n  ContactItemDetailsCustomizableDirective,\n  undefined\n> {}\n","import { Component, Input } from '@angular/core';\nimport { Address, ContactItem } from '../../models/types';\nimport { addressFromAccountHolder, addressFromBank, addressFromContact } from '../../helpers/address';\nimport { AccountInformation } from '@backbase/contact-manager-http-ang';\n\n/**\n * The component is for showing contact detail item.\n *\n * The following extension slots are available in this component:\n *  - `ContactItemDetailsCustomizableDirective`\n *\n * @see ContactItemDetailsCustomizableDirective\n * @usageNotes\n *\n * ### Display contact personal data\n *\n * ```html\n *    <bb-contact-item-details\n *            *ngIf=\"hostRef.contactItem\"\n *             [contactItem]=\"hostRef.contactItem.data\">\n *           </bb-contact-item-details>\n * ```\n * @ngModule ContactItemDetailsModule\n */\n@Component({\n  selector: 'bb-contact-item-details',\n  templateUrl: './contact-item-details.component.html',\n})\nexport class ContactItemDetailsComponent {\n  hostRef: ContactItemDetailsComponent = this;\n  /**\n   * The contact request item\n   */\n  @Input()\n  contactItem!: ContactItem;\n  /**\n   * Flag that denotes if the conctact name should be displayed. Defaults to `true`\n   *\n   */\n  @Input() showName = true;\n  /**\n   *  Flag that denotes if the section headings name should be displayed. Defaults to `false`\n   */\n  @Input() showHeaders = false;\n\n  get address(): Address {\n    return addressFromContact(this.contactItem);\n  }\n  /**\n   * Returns the address in correct format\n   *\n   * @param {AccountInformation} account current account details\n   * @returns {Address} Returns the address in correct format\n   */\n  bankAddress(account: AccountInformation): Address {\n    return addressFromBank(account);\n  }\n  /**\n   * Returns the address in correct format\n   *\n   * @param {AccountInformation} account current account details\n   * @returns {Address} Returns the address in correct format\n   */\n  accountHolderAddress(account: AccountInformation): Address {\n    return addressFromAccountHolder(account);\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}\n","<ng-container bbContactItemDetailsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbContactItemDetailsCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--xl\">\n    <div *ngIf=\"hostRef.showName\" class=\"bb-stack bb-block bb-block--md col\">\n      <span class=\"bb-stack__item\" data-role=\"contact-details-info-name\">{{ hostRef.contactItem?.name }}</span>\n      <ng-container *ngIf=\"hostRef.contactItem?.alias\">\n        <span class=\"bb-stack__item\" aria-hidden=\"true\"> • </span>\n        <span class=\"bb-stack__item\" data-role=\"contact-details-info-alias\"> {{ hostRef.contactItem?.alias }} </span>\n      </ng-container>\n    </div>\n    <dl class=\"col bb-block\" tabindex=\"0\">\n      <div class=\"row flex-column-reverse flex-sm-row\">\n        <div *ngIf=\"hostRef.contactItem?.phoneNumber\" class=\"col-12 col-sm-6 bb-block bb-block--sm\">\n          <dt class=\"bb-block bb-block--sm bb-label\" i18n=\"@@contact-item-details.contact-information.phone\">\n            Phone number\n          </dt>\n          <dd class=\"bb-block bb-block--sm\" data-role=\"contact-details-info-phone\">\n            {{hostRef.contactItem?.phoneNumber}}\n          </dd>\n        </div>\n        <div *ngIf=\"hostRef.contactItem?.emailId\" class=\"col-12 col-sm-6 bb-block bb-block--sm\">\n          <dt class=\"bb-block bb-block--sm bb-label\" i18n=\"@@contact-item-details.contact-information.email\">\n            Email address\n          </dt>\n          <dd class=\"bb-block bb-block--sm\" data-role=\"contact-details-info-email\">{{hostRef.contactItem?.emailId}}</dd>\n        </div>\n      </div>\n      <div *ngIf=\"hostRef.contactItem?.contactPerson\" class=\"bb-block bb-block--md col-12\">\n        <dt class=\"bb-block bb-block--sm bb-label row\" i18n=\"@@contact-item-details.contact-information.contact-person\">\n          Contact person\n        </dt>\n        <dd class=\"bb-block bb-block--sm row\" data-role=\"contact-details-info-contact-person\">\n          {{hostRef.contactItem?.contactPerson}}\n        </dd>\n      </div>\n      <div class=\"bb-block bb-block--md col-12\">\n        <dt\n          *ngIf=\"hostRef.contactItem?.streetName || hostRef.contactItem?.addressLine1 || hostRef.contactItem?.addressLine2\"\n          class=\"bb-block bb-block--sm bb-label row\"\n          i18n=\"@@contact-item-details.contact-information.address\"\n        >\n          Contact address\n        </dt>\n        <dd>\n          <bb-contact-full-address [address]=\"hostRef.address\" class=\"row\"></bb-contact-full-address>\n        </dd>\n      </div>\n    </dl>\n  </div>\n  <div class=\"bb-block\">\n    <div class=\"bb-stack bb-block bb-block--xs\" tabindex=\"0\">\n      <bb-header-ui\n        headingType=\"h3\"\n        heading=\"Account information\"\n        i18n-heading=\"@@contact-item-details.account-information.title\"\n        headingClasses=\"bb-stack__item bb-stack__item--fill\"\n      >\n      </bb-header-ui>\n      <span\n        class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--push-right bb-text-support\"\n        i18n=\"@@contact-item-details.account-information.number-of-accounts\"\n        data-role=\"contact-details-account-number-accounts\"\n      >\n        {{hostRef.contactItem?.accounts?.length}} {hostRef.contactItem?.accounts?.length, plural, =1 {account} other\n        {accounts}}\n      </span>\n    </div>\n    <div\n      *ngFor=\"let account of hostRef.contactItem?.accounts; let index = index; trackBy: hostRef.trackByIndex\"\n      class=\"card card-section bb-block bb-block--sm\"\n    >\n      <bb-account-card-view\n        tabindex=\"0\"\n        [account]=\"account\"\n        [bankAddress]=\"hostRef.bankAddress(account)\"\n        [accountHolderAddress]=\"hostRef.accountHolderAddress(account)\"\n        [index]=\"index\"\n      ></bb-account-card-view>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { ContactItemDetailsComponent } from './contact-item-details.component';\nimport { ContactItemDetailsCustomizableDirective } from './contact-item-details.directive';\nimport { CommonModule } from '@angular/common';\nimport { ContactFullAddressModule } from '../contact-full-address/contact-full-address.module';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { AccountCardViewModule } from '../account-card-view/account-card-view.module';\n\n@NgModule({\n  declarations: [ContactItemDetailsComponent, ContactItemDetailsCustomizableDirective],\n  exports: [ContactItemDetailsComponent, ContactItemDetailsCustomizableDirective],\n  imports: [CommonModule, HeaderModule, ContactFullAddressModule, AccountCardViewModule],\n})\nexport class ContactItemDetailsModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlContainer, FormGroup, NgForm } from '@angular/forms';\nimport { Address, ContactItem, InputGroupName, ViewType } from '../../models/types';\nimport { isObjectTruthy } from '../../helpers/address';\n\n/**\n * The component is for showing persons personal data.\n *\n * The following extension slots are available in this component:\n *  - `ContactPersonalDataCustomizableDirective`\n *\n * @see ContactPersonalDataCustomizableDirective\n * @usageNotes\n *\n * ### Display contact personal data\n *\n * ```html\n *    <bb-contact-personal-data\n *      [contact]=\"hostRef.formModel.contact\"\n *      [address]=\"hostRef.contactAddress\"\n *      [viewType]=\"hostRef.contactViewType\"\n *      [isAddContactAddress]= \"hostRef.isAddContactAddress\"\n *      (contactAddressAdd)= \"hostRef.addContactAddress($event)\"\n *      (viewChange)=\"hostRef.changeContactView($event)\">\n *    </bb-contact-personal-data>\n * ```\n * @ngModule ContactPersonalDataModule\n */\n@Component({\n  selector: 'bb-contact-personal-data',\n  templateUrl: './contact-personal-data.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactPersonalDataComponent implements OnInit {\n  hostRef: ContactPersonalDataComponent = this;\n  contactInputGroupName = InputGroupName.CONTACT;\n\n  private originalAddress: Address | undefined;\n\n  /**\n   * View type of the contact address\n   */\n  @Input()\n  viewType!: ViewType;\n  /**\n   * The contact details instance\n   */\n  @Input()\n  contact!: ContactItem;\n  /**\n   * Flag that denotes if contact address should be added\n   */\n  @Input() isAddContactAddress = false;\n  /**\n   * Address details of the contact\n   */\n  @Input()\n  address!: Address;\n  /**\n   * Property meant for forcing change detection when parent changes form state\n   */\n  @Input() forceChangeDetection: unknown;\n  /**\n   * Event emitted when contact add address flag changes\n   */\n  @Output() contactAddressAdd = new EventEmitter<boolean>();\n  /**\n   *\n   * Event emitted when contact address view is changed\n   */\n  @Output() viewChange = new EventEmitter<ViewType>();\n\n  constructor(private readonly ctrlContainer: ControlContainer) {}\n\n  ngOnInit() {\n    if (isObjectTruthy(this.address)) {\n      this.originalAddress = { ...this.address };\n    }\n  }\n  /**\n   * Returns the control of the form\n   *\n   * @param {string} controlName name of a form control\n   * @returns {AbstractControl | null} form control for given name.\n   */\n  getFormControl(controlName: string): AbstractControl | null {\n    const contactInputGroup = (this.ctrlContainer as NgForm).controls[this.contactInputGroupName];\n    if (contactInputGroup) {\n      return (contactInputGroup as FormGroup).controls[controlName];\n    }\n\n    return null;\n  }\n  /**\n   * Resets the control of the form.\n   *\n   * @param {string} controlName name of a form control\n   */\n  reset(controlName: string) {\n    const formControl = this.getFormControl(controlName);\n    if (formControl) {\n      formControl.reset();\n    }\n  }\n  /**\n   * Updates the form status and mark as touched.\n   * Also changes the view to CARD view once done.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressSubmit(controlName: string) {\n    const address = this.getFormControl(controlName);\n    if (address) {\n      address.markAllAsTouched();\n      address.updateValueAndValidity();\n      if (address.valid) {\n        this.originalAddress = { ...address.value };\n        this.viewChange.emit(ViewType.CARD);\n      }\n    }\n  }\n  /**\n   * Emits the contact address add event\n   *\n   * @param {boolean} isAddAddress Emits the contact address add\n   */\n  onAddressAdd(isAddAddress: boolean) {\n    this.contactAddressAdd.emit(isAddAddress);\n  }\n  /**\n   * hanges the view to form.\n   */\n  onAddressEdit() {\n    this.viewChange.emit(ViewType.FORM);\n  }\n  /**\n   * If there is no update then returns to card view.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressDiscard(controlName: string) {\n    if (this.originalAddress) {\n      this.address = { ...this.originalAddress };\n      this.viewChange.emit(ViewType.CARD);\n    } else {\n      this.onAddressDelete(controlName);\n    }\n  }\n  /**\n   * deletes the address and resets the form.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressDelete(controlName: string) {\n    this.originalAddress = undefined;\n    this.contactAddressAdd.emit(false);\n    this.reset(controlName);\n    this.viewChange.emit(ViewType.FORM);\n  }\n}\n","<div>\n  <fieldset [ngModelGroup]=\"'contactDetails'\">\n    <legend class=\"sr-only\" i18n=\"@@contact-personal-data.personalDetailsGroup.title\">Contact details</legend>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label #contactNameLabel id=\"bb-create-contact-name-label\" i18n=\"@@contact-personal-data.contactName.label\"\n          >Name</label\n        >\n        <span class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.accountName.text-support.required.label\">Required</ng-container>)\n        </span>\n        <bb-input-text-ui\n          name=\"name\"\n          class=\"bb-block bb-block--sm\"\n          #contactNameModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.contact.name\"\n          [maxLength]=\"140\"\n          [required]=\"true\"\n          [aria-labelledby]=\"contactNameLabel.id\"\n          aria-describedby=\"fullname-description\"\n          data-role=\"contact-name\"\n          bbNoWhiteSpace\n        >\n        </bb-input-text-ui>\n        <small\n          id=\"fullname-description\"\n          *ngIf=\"!contactNameModel.touched\"\n          class=\"bb-text-support bb-block bb-block--sm\"\n          i18n=\"@@contact-personal-data.contactName.infoText\"\n        >\n          Full name or company name\n        </small>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"contactNameModel.invalid && contactNameModel.touched\"\n        >\n          <ng-container>\n            <span i18n=\"@@contact-personal-data.contactName.minLengthErrorText\" data-role=\"missing-contact-name\"\n              >Full name or company name is required</span\n            >\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg bb-stack__item--align-top col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Contact person\"\n          i18n-label=\"@@contact-personal-data.contactPerson.label\"\n          class=\"bb-stack__item--align-bottom\"\n          data-role=\"contact-person\"\n          [(ngModel)]=\"hostRef.contact.contactPerson\"\n          name=\"contactPerson\"\n          [maxLength]=\"70\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          data-role=\"contact-alias\"\n          label=\"Alias\"\n          i18n-label=\"@@contact-personal-data.contactAlias.label\"\n          [(ngModel)]=\"hostRef.contact.alias\"\n          name=\"alias\"\n          [maxLength]=\"70\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Phone number\"\n          i18n-label=\"@@contact-personal-data.contactPhoneNumber.label\"\n          data-role=\"contact-phone-number\"\n          [(ngModel)]=\"hostRef.contact.phoneNumber\"\n          name=\"phoneNumber\"\n          [maxLength]=\"30\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row bb-block bb-block--lg\">\n      <div class=\"bb-block bb-block--no-margin col-lg-8 col-sm-8 col-xs-12\">\n        <bb-input-email-ui\n          label=\"E-mail\"\n          i18n-label=\"@@contact-personal-data.contactEmail.label\"\n          data-role=\"contact-email\"\n          [(ngModel)]=\"hostRef.contact.emailId\"\n          #emailModel=\"ngModel\"\n          name=\"emailId\"\n          bbEmailDomainValidator\n        >\n        </bb-input-email-ui>\n        <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"emailModel.invalid && emailModel.touched\">\n          <ng-container *ngIf=\"emailModel.errors?.email\">\n            <span i18n=\"@@contact-personal-data.email.errorText\" data-role=\"invalid-email\">Invalid email</span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"bb-block col-12\" data-role=\"contact-address-container\">\n        <bb-contact-address-data\n          [highlight]=\"false\"\n          [isAddAddress]=\"hostRef.isAddContactAddress\"\n          [viewType]=\"hostRef.viewType\"\n          [address]=\"hostRef.address\"\n          (add)=\"hostRef.onAddressAdd($event)\"\n          (edit)=\"hostRef.onAddressEdit()\"\n          (discard)=\"hostRef.onAddressDiscard($event)\"\n          (delete)=\"hostRef.onAddressDelete($event)\"\n          (submit)=\"hostRef.onAddressSubmit($event)\"\n        >\n        </bb-contact-address-data>\n      </div>\n    </div>\n  </fieldset>\n</div>\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactPersonalDataComponent } from './contact-personal-data.component';\n\n/**\n * This is an extension slot to be used for customizing contact personal data\n *\n * @usageNotes\n *\n * ### Display contact personal data\n *\n * ```html\n *  <ng-template bbContactPersonalDataCustomizable let-hostRef>\n * {{hostRef.contact.name}}</ng-template>\n * ```\n * @ngModule ContactPersonalDataModule\n */\n@Directive({\n  selector: '[bbContactPersonalDataCustomizable]',\n})\nexport class ContactPersonalDataCustomizableDirective extends BbTemplate<ContactPersonalDataComponent, undefined> {}\n","import { NgModule } from '@angular/core';\nimport { ContactPersonalDataComponent } from './contact-personal-data.component';\nimport { ContactPersonalDataCustomizableDirective } from './contact-personal-data.directive';\nimport { FormsModule } from '@angular/forms';\nimport { ContactAddressDataModule } from '../contact-address-data/contact-address-data.module';\nimport { CommonModule } from '@angular/common';\nimport { NoWhiteSpaceModule } from '../../directives/no-white-space-validator/no-white-space.module';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { InputEmailModule } from '@backbase/ui-ang/input-email';\nimport { EmailDomainModule } from '../../directives/email-domain/email-domain.module';\n\n/**\n * Exports:\n * - ContactPersonalDataComponent\n * - ContactPersonalDataCustomizableDirective\n */\n@NgModule({\n  declarations: [ContactPersonalDataComponent, ContactPersonalDataCustomizableDirective],\n  exports: [ContactPersonalDataComponent, ContactPersonalDataCustomizableDirective],\n  imports: [\n    FormsModule,\n    InputTextModule,\n    InputValidationMessageModule,\n    InputEmailModule,\n    ContactAddressDataModule,\n    CommonModule,\n    NoWhiteSpaceModule,\n    EmailDomainModule,\n  ],\n})\nexport class ContactPersonalDataModule {}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n/**\n * Search box component with debounce\n *\n * @example\n *\n * ```html\n *   <bb-debounce-search\n *     class=\"d-block\"\n *     [debounceTime]=\"debounceTime\"\n *     (searchContacts)=\"onSearch($event)\">\n *   </bb-debounce-search>\n * ```\n * @ngModule DebounceSearchModule\n */\n@Component({\n  selector: 'bb-debounce-search',\n  template: `\n    <bb-search-box-ui\n      [placeholder]=\"placeholder\"\n      [showSearch]=\"true\"\n      [showClear]=\"true\"\n      [aria-label]=\"ariaLabel\"\n      (submit)=\"startSearching($event)\"\n      (clear)=\"clearSearching()\"\n      [ngModel]=\"searchTerm\"\n      (ngModelChange)=\"startSearching($event)\"\n    ></bb-search-box-ui>\n  `,\n})\nexport class DebounceSearchComponent implements OnInit, OnDestroy {\n  private gc$ = new Subject();\n  private debounceSearch$ = new Subject<string>();\n  searchTerm = '';\n\n  /**\n   * Time delay between each search requests\n   */\n  @Input() debounceTime = 300;\n\n  /**\n   * Placeholder text for search input\n   */\n  @Input() placeholder = 'Search';\n\n  /**\n   * See html property `aria-label`\n   */\n  @Input('aria-label') ariaLabel?: string = undefined;\n\n  /**\n   * Changes will be triggered on search\n   */\n  @Output() searchContacts = new EventEmitter<string>();\n\n  ngOnInit() {\n    this.debounceSearch$\n      .pipe(takeUntil(this.gc$), debounceTime(this.debounceTime), distinctUntilChanged())\n      .subscribe((term: string) => {\n        this.searchContacts.emit(term);\n      });\n  }\n\n  /**\n   * Updates the search term.\n   *\n   * @param {string} query - search query text\n   */\n  startSearching(query: string) {\n    this.debounceSearch$.next(query);\n  }\n\n  /**\n   * Updating the search value when cleared.\n   */\n  clearSearching() {\n    this.debounceSearch$.next('');\n  }\n\n  /**\n   * OnDestroy\n   */\n  ngOnDestroy() {\n    this.gc$.next();\n    this.debounceSearch$.complete();\n    this.gc$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DebounceSearchComponent } from './debounce-search.component';\nimport { FormsModule } from '@angular/forms';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\n\n/**\n * Exports:\n * - DebounceSearchComponent\n */\n@NgModule({\n  declarations: [DebounceSearchComponent],\n  exports: [DebounceSearchComponent],\n  imports: [FormsModule, SearchBoxModule],\n})\nexport class DebounceSearchModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ApprovalRecord } from '../../models/types';\n\n/**\n * Component for approval log of a contact.\n *\n * @usageNotes\n *\n * ```html\n * <bb-approval-log\n *   [isPending]=\"hostRef.approvalDetails?.approvalDetails?.status === 'PENDING'\"\n *   [records]=\"hostRef.approvalDetails?.approvalDetails?.records\"\n * ></bb-approval-log>\n * ```\n * @ngModule ApprovalLogModule\n */\n@Component({\n  selector: 'bb-approval-log',\n  templateUrl: 'approval-log.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ApprovalLogComponent {\n  /**\n   * Approval log records of a contact.\n   */\n  @Input() records: ApprovalRecord[] = [];\n\n  /**\n   * Whether contact is currently pending approval\n   */\n  @Input() isPending = false;\n}\n","<bb-item-log-ui [records]=\"records\" [isPending]=\"isPending\">\n  <ng-template bbItemLogRecord let-itemLogRecord>\n    <div class=\"bb-stack bb-stack--align-top\">\n      <bb-icon-ui\n        class=\"bb-item-log-record__icon\"\n        size=\"md\"\n        [name]=\"itemLogRecord?.status === 'REJECTED' ? 'cancel' : 'success'\"\n        [color]=\"itemLogRecord?.status === 'REJECTED' ? 'danger' : 'success'\"\n      >\n      </bb-icon-ui>\n      <div class=\"bb-item-log-record__details\">\n        <span class=\"bb-text-bold\" i18n=\"@@contact-approval-log.status\">\n          { itemLogRecord?.status, select, REJECTED {Rejected} APPROVED {Approved} other {} }\n        </span>\n        <span class=\"text-small\">\n          <ng-container i18n=\"@@contact-approval-log.label\"> by {{ itemLogRecord.userFullName }}</ng-container>\n          <ng-container *ngIf=\"itemLogRecord?.externalUserId\"> ({{ itemLogRecord.externalUserId }})</ng-container>\n        </span>\n        <div *ngIf=\"itemLogRecord?.createdAt as createdAt\" class=\"bb-item-log-record__time\">\n          <time> {{ createdAt | date }}</time>\n          <ng-container i18n=\"@@contact-approval-log-created-at.label\"> at</ng-container>\n          <time> {{ createdAt | date: 'shortTime' }}</time>\n        </div>\n        <div *ngIf=\"itemLogRecord?.comment\" class=\"media\">\n          <div class=\"bb-inline-stack__item\">\n            <bb-icon-ui color=\"secondary\" name=\"forum\" size=\"sm\"></bb-icon-ui>\n          </div>\n          <div class=\"media-body break-word text-small\">{{ itemLogRecord?.comment }}</div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</bb-item-log-ui>\n","import { Component, Input } from '@angular/core';\nimport { ApprovalRecord } from '../../models/types';\n\n/**\n * Component for a collapsible section with an approval log of a contact.\n *\n * @usageNotes\n *\n * ```html\n * <bb-approval-log-collapsible\n *   [isPending]=\"hostRef.approvalDetails?.approvalDetails?.status === 'PENDING'\"\n *   [records]=\"hostRef.approvalDetails?.approvalDetails?.records\"\n * ></bb-approval-log-collapsible>\n * ```\n * @ngModule ApprovalLogModule\n */\n@Component({\n  selector: 'bb-approval-log-collapsible',\n  template: `\n    <bb-collapsible-ui [attr.data-role]=\"'approval-log-toggle'\">\n      <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n        <div class=\"bb-block bb-stack\">\n          <div class=\"bb-stack__item bb-stack__item--fill\">\n            <h3 i18n=\"@@contact-manager-pending-approvals-details.approvalLog\">Approval log</h3>\n          </div>\n          <div class=\"bb-stack__item bb-stack__item--push-right\">\n            <button\n              (click)=\"toggle()\"\n              bbButton\n              color=\"outline\"\n              aria-label=\"Approval log toggle\"\n              i18n-aria-label=\"@@bb-approval-log.toggle.label\"\n              data-role=\"approval-log-toggle-button\"\n              bbTooltip=\"Toggle\"\n              triggers=\"hover focus\"\n              i18n-bbTooltip=\"@@contact-manager-pending-approvals-details.approval-log-toggle.tooltip\"\n            >\n              <bb-icon-ui [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"></bb-icon-ui>\n            </button>\n          </div>\n        </div>\n        <hr />\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <div aria-live=\"assertive\">\n          <bb-approval-log [isPending]=\"isPending\" [records]=\"records\"> </bb-approval-log>\n        </div>\n      </ng-template>\n    </bb-collapsible-ui>\n  `,\n})\nexport class ApprovalLogCollapsibleComponent {\n  /**\n   * Approval log records of a contact.\n   */\n  @Input() records?: ApprovalRecord[] = [];\n\n  /**\n   * Whether contact is currently pending approval\n   */\n  @Input() isPending = false;\n}\n","import { NgModule } from '@angular/core';\nimport { ApprovalLogComponent } from './approval-log.component';\nimport { CommonModule } from '@angular/common';\nimport { ItemLogModule } from '@backbase/ui-ang/item-log';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ApprovalLogCollapsibleComponent } from './approval-log-collapsible.component';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\n\n/**\n * Exports:\n * - ApprovalLogComponent\n * - ApprovalLogCollapsibleComponent\n */\n@NgModule({\n  declarations: [ApprovalLogComponent, ApprovalLogCollapsibleComponent],\n  imports: [ItemLogModule, IconModule, CommonModule, CollapsibleModule],\n  exports: [ApprovalLogComponent, ApprovalLogCollapsibleComponent],\n})\nexport class ApprovalLogModule {}\n","import { SortEvent, SortDirection } from '@backbase/ui-ang/table';\nimport { Directive, EventEmitter, Output } from '@angular/core';\nimport { ApprovalSort } from '@backbase/data-ang/contact-manager';\n\n/**\n * Abstract Base Request List Component\n *\n */\n@Directive()\nexport abstract class RequestListBaseComponent {\n  /**\n   * Direction of current sorting\n   */\n  sortDirection: SortDirection = 'asc';\n\n  /**\n   * Selected sorting column\n   */\n  sortColumn?: string;\n\n  /**\n   * Enum with names of sorting columns\n   */\n  readonly approvalSortEnum = ApprovalSort;\n\n  /**\n   * Event emitted when column is clicked\n   */\n  @Output()\n  sort = new EventEmitter<SortEvent>();\n\n  /**\n   * Sort column method\n   *\n   * @param {string} event - object with column and direction properites\n   */\n  onSort(event: SortEvent) {\n    this.sortColumn = event.direction ? event.column : null;\n    this.sortDirection = event.direction || 'desc';\n    this.sort.emit(event);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'getAriaSort',\n})\nexport class AriaSortPipe implements PipeTransform {\n  transform(value: string, sortColumn: string, sortDirection: string): string | null {\n    const selectedDirection = sortDirection && sortDirection === 'desc' ? 'descending' : 'ascending';\n\n    return sortColumn === value.toUpperCase() ? selectedDirection : null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AriaSortPipe } from './aria-sort.pipe';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AriaSortPipe],\n  imports: [CommonModule],\n  exports: [AriaSortPipe],\n})\nexport class AriaSortPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'getDirection',\n})\nexport class DirectionSortPipe implements PipeTransform {\n  transform(value: string, sortColumn: string, sortDirection: string): string {\n    return sortColumn === value.toUpperCase() ? sortDirection : '';\n  }\n}\n","import { DirectionSortPipe } from './direction-sort.pipe';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [DirectionSortPipe],\n  imports: [CommonModule],\n  exports: [DirectionSortPipe],\n})\nexport class DirectionSortPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","Input","Output","ModalModule","ButtonModule","CommonModule","TextareaModule","FormsModule","NgModule","LoadMoreMethod","ContactActions","ViewType","InputGroupName","InputName","AddressType","AccessContextScope","ActiveContactStatus","ContactUpdateDeleteStatus","ApprovalStatus","ApprovalStatusColorMap","ContactApprovalStatusMap","Preferences","throwError","map","catchError","of","Injectable","Subject","BehaviorSubject","ReplaySubject","switchMap","merge","mapTo","scan","filter","shareReplay","mergeMap","finalize","takeUntil","InjectionToken","DefaultCountriesList","Inject","NG_VALIDATORS","Directive","Pipe","DatePipe","BbTemplate","IconModule","HeaderModule","BbIbanPipeModule","TooltipModule","ControlContainer","NgModelGroup","ViewChild","FormControl","NgForm","InputTextModule","DropdownSingleSelectModule","InputCheckboxModule","InputValidationMessageModule","InputEmailModule","debounceTime","distinctUntilChanged","SearchBoxModule","ItemLogModule","CollapsibleModule","ApprovalSort"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWA;;;;;;;;;;;;;;;;;;;;;;;;;QAwBA;YAMW,iBAAY,GAAoB;gBACvC,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,KAAK;aAChB,CAAC;YACF,YAAO,GAAG,EAAE,CAAC;;;;;YAMJ,uBAAkB,GAAI,SAAS,CAAC;;;;;YAMhC,sBAAiB,GAAI,MAAM,CAAC;;;;;YAM5B,WAAM,GAAG,KAAK,CAAC;;;;YAKf,kBAAa,GAAG,KAAK,CAAC;;;;YAKtB,sBAAiB,GAAG,aAAa,CAAC;;;;YAKjC,YAAO,GAAG,IAAIA,eAAY,EAAwB,CAAC;;;;YAKnD,WAAM,GAAG,IAAIA,eAAY,EAAQ,CAAC;SAqB7C;QAnBC,kDAAW,GAAX,UAAY,OAAsB;YAChC,IAAI,OAAO,CAAC,MAAM,EAAE;gBAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;aACnB;SACF;;;;QAKD,oDAAa,GAAb;YACE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SACpB;;;;QAKD,qDAAc,GAAd;YACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC9C;;;uKA/DU,4BAA4B;gJAA5B,4BAA4B,2UCxCzC,q3EAqEA;sHD7Ba,4BAA4B;sBALxCC,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,WAAW,EAAE,sCAAsC;wBACnD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;kCAYU,kBAAkB;0BAA1BC,QAAK;oBAMG,iBAAiB;0BAAzBA,QAAK;oBAMG,MAAM;0BAAdA,QAAK;oBAKG,aAAa;0BAArBA,QAAK;oBAKG,iBAAiB;0BAAzBA,QAAK;oBAKI,OAAO;0BAAhBC,SAAM;oBAKG,MAAM;0BAAfA,SAAM;;;IE3ET;;;;QAQA;;;;oKAAa,yBAAyB;qKAAzB,yBAAyB,iBAJrB,4BAA4B,aAEjCC,cAAW,EAAEC,eAAY,EAAEC,eAAY,EAAEC,iBAAc,EAAEC,gBAAW,aADpE,4BAA4B;qKAG3B,yBAAyB,YAF3B,CAACJ,cAAW,EAAEC,eAAY,EAAEC,eAAY,EAAEC,iBAAc,EAAEC,gBAAW,CAAC;sHAEpE,yBAAyB;sBALrCC,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,4BAA4B,CAAC;wBAC5C,OAAO,EAAE,CAAC,4BAA4B,CAAC;wBACvC,OAAO,EAAE,CAACL,cAAW,EAAEC,eAAY,EAAEC,eAAY,EAAEC,iBAAc,EAAEC,gBAAW,CAAC;qBAChF;;;ACiBWE;IAAZ,WAAY,cAAc;QACxB,yCAAuB,CAAA;QACvB,2CAAyB,CAAA;IAC3B,CAAC,EAHWA,sBAAc,KAAdA,sBAAc,QAGzB;AAEWC;IAAZ,WAAY,cAAc;QACxB,mDAAI,CAAA;QACJ,yDAAO,CAAA;QACP,2DAAQ,CAAA;QACR,+DAAU,CAAA;QACV,uDAAM,CAAA;QACN,mDAAI,CAAA;IACN,CAAC,EAPWA,sBAAc,KAAdA,sBAAc,QAOzB;;QAmFC,uBAA6B,aAAiC;YAAjC,kBAAa,GAAb,aAAa,CAAoB;YAC5D,IAAI,IAAI,CAAC,aAAa,EAAE;gBAChB,IAAA,KAAoB,IAAI,CAAC,aAAa,EAApC,MAAM,YAAA,EAAE,KAAK,WAAuB,CAAC;gBAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,KAAK,EAAE;oBACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;oBACnC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC;oBACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;iBACxC;aACF;SACF;4BACF;KAAA,IAAA;AAuDWC;IAAZ,WAAY,QAAQ;QAClB,yBAAa,CAAA;QACb,yBAAa,CAAA;IACf,CAAC,EAHWA,gBAAQ,KAARA,gBAAQ,QAGnB;AAEWC;IAAZ,WAAY,cAAc;QACxB,4CAA0B,CAAA;QAC1B,4CAA0B,CAAA;QAC1B,4CAA0B,CAAA;IAC5B,CAAC,EAJWA,sBAAc,KAAdA,sBAAc,QAIzB;AAEWC;IAAZ,WAAY,SAAS;QACnB,wDAA2C,CAAA;IAC7C,CAAC,EAFWA,iBAAS,KAATA,iBAAS,QAEpB;AAEWC;IAAZ,WAAY,WAAW;QACrB,2BAAY,CAAA;QACZ,4BAAa,CAAA;QACb,8CAA+B,CAAA;IACjC,CAAC,EAJWA,mBAAW,KAAXA,mBAAW,QAItB;;QAED;YACE,aAAQ,GAAcH,gBAAQ,CAAC,IAAI,CAAC;YACpC,SAAI,GAAyB,EAAE,CAAC;YAChC,wBAAmB,GAAcA,gBAAQ,CAAC,IAAI,CAAC;YAC/C,iCAA4B,GAAcA,gBAAQ,CAAC,IAAI,CAAC;YACxD,qBAAgB,GAAI,KAAK,CAAC;YAC1B,8BAAyB,GAAI,KAAK,CAAC;YACnC,yBAAoB,GAAa,EAAE,CAAC;YACpC,gBAAW,GAAa,EAAE,CAAC;YAC3B,kBAAa,GAAI,KAAK,CAAC;YACvB,2BAAsB,GAAI,KAAK,CAAC;SACjC;mCAAA;KAAA,IAAA;AAEWI;IAAZ,WAAY,kBAAkB;QAC5B,mCAAa,CAAA;QACb,+BAAS,CAAA;QACT,+BAAS,CAAA;IACX,CAAC,EAJWA,0BAAkB,KAAlBA,0BAAkB,QAI7B;AAEWC;IAAZ,WAAY,mBAAmB;QAC7B,wCAAiB,CAAA;QACjB,4DAAqC,CAAA;IACvC,CAAC,EAHWA,2BAAmB,KAAnBA,2BAAmB,QAG9B;AAEWC;IAAZ,WAAY,yBAAyB;QACnC,oEAAuC,CAAA;QACvC,kEAAqC,CAAA;QACrC,kDAAqB,CAAA;QACrB,gDAAmB,CAAA;QACnB,kDAAqB,CAAA;QACrB,oDAAuB,CAAA;IACzB,CAAC,EAPWA,iCAAyB,KAAzBA,iCAAyB,QAOpC;AAEWC;IAAZ,WAAY,cAAc;QACxB,+BAAa,CAAA;QACb,mCAAiB,CAAA;QACjB,qCAAmB,CAAA;QACnB,iCAAe,CAAA;QACf,qCAAmB,CAAA;QACnB,iCAAe,CAAA;QACf,uCAAqB,CAAA;QACrB,uCAAqB,CAAA;IACvB,CAAC,EATWA,sBAAc,KAAdA,sBAAc;;ICrPnB,IAAM,WAAW,GAAG,UAAC,GAAQ;QAAR,oBAAA,EAAA,QAAQ;QAClC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC;IAEF,IAAM,WAAW,GAAG,UAAC,OAAY,EAAE,IAAiB,IAAc,QAAC;QACjE,YAAY,EAAE,OAAO,CAAC,WAAW,CAAI,IAAI,iBAAc,CAAC,CAAC;QACzD,YAAY,EAAE,OAAO,CAAC,WAAW,CAAI,IAAI,iBAAc,CAAC,CAAC;QACzD,UAAU,EAAE,OAAO,CAAC,WAAW,CAAI,IAAI,eAAY,CAAC,CAAC;QACrD,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAI,IAAI,aAAU,CAAC,CAAC;QACjD,IAAI,EAAE,OAAO,CAAC,WAAW,CAAI,IAAI,SAAM,CAAC,CAAC;QACzC,kBAAkB,EAAE,OAAO,CAAC,WAAW,CAAI,IAAI,uBAAoB,CAAC,CAAC;QACrE,OAAO,EAAE,OAAO,CAAC,WAAW,CAAI,IAAI,YAAS,CAAC,CAAC;KAChD,IAAC,CAAC;QAEU,kBAAkB,GAAG,UAAC,OAAY,IAAc,OAAA,WAAW,CAAC,OAAO,EAAEJ,mBAAW,CAAC,OAAO,CAAC,IAAC;QAE1F,eAAe,GAAG,UAAC,OAAY,IAAc,OAAA,WAAW,CAAC,OAAO,EAAEA,mBAAW,CAAC,IAAI,CAAC,IAAC;QAEpF,wBAAwB,GAAG,UAAC,OAAY,IAAc,OAAA,WAAW,CAAC,OAAO,EAAEA,mBAAW,CAAC,aAAa,CAAC,IAAC;QAEtG,cAAc,GAAG,UAAuB,GAAM;QACzD,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,CAAC,CAAC,GAAG,CAAC,GAAQ,CAAC,GAAA,CAAC,CAAC;IACzD,EAAE;QAEW,eAAe,GAAG,UAAC,OAAgB,IAC9C,OAAA;QACE,OAAO,CAAC,cAAc,CAAC;QACvB,OAAO,CAAC,cAAc,CAAC;QACvB,OAAO,CAAC,YAAY,CAAC;QACrB,OAAO,CAAC,UAAU,CAAC;QACnB,OAAO,CAAC,MAAM,CAAC;QACf,OAAO,CAAC,oBAAoB,CAAC;KAC9B;SACE,MAAM,CAAC,OAAO,CAAC;SACf,IAAI,CAAC,IAAI,CAAC;;IClCR,IAAM,SAAS,GAAG;QACvB,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;KACL,CAAC;IAEK,IAAM,mBAAmB,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAE9C,yBAAyB,GAAGC,0BAAkB,CAAC,KAAK;AAErDI;IAAZ,WAAY,sBAAsB;QAChC,0CAAgB,CAAA;QAChB,2CAAiB,CAAA;QACjB,4CAAkB,CAAA;QAClB,2CAAiB,CAAA;QACjB,6CAAmB,CAAA;QACnB,2CAAiB,CAAA;QACjB,8CAAoB,CAAA;QACpB,6CAAmB,CAAA;QACnB,6CAAmB,CAAA;QACnB,8CAAoB,CAAA;QACpB,+CAAqB,CAAA;IACvB,CAAC,EAZWA,8BAAsB,KAAtBA,8BAAsB,QAYjC;AAEWC;IAAZ,WAAY,wBAAwB;QAClC,mDAAuB,CAAA;QACvB,iDAAqB,CAAA;QACrB,+CAAmB,CAAA;QACnB,iDAAqB,CAAA;IACvB,CAAC,EALWA,gCAAwB,KAAxBA,gCAAwB,QAKnC;AAEWC;IAAZ,WAAY,WAAW;QACrB,wDAAc,CAAA;QACd,6DAAgB,CAAA;QAChB,iEAAmB,CAAA;QACnB,8CAA+B,CAAA;QAC/B,0FAAgC,CAAA;QAChC,0CAA2B,CAAA;IAC7B,CAAC,EAPWA,mBAAW,KAAXA,mBAAW,QAOtB;QAEY,QAAQ,GAAG;;ICjFjB,IAAM,iBAAiB,GAAG,UAAC,GAA2B,IAC3D,OAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,GAAG;;QAAK,wCAAM,MAAM,IAAM,GAAG,CAAC,GAAG,CAAC,aAAK,GAAC,GAAG,IAAG,GAAG,CAAC,GAAG,CAAC,QAAK,EAAE;IAArD,CAAyD,EAAE,EAAE,CAAC,GAAA,CAAC;QAE7F,SAAS,GAAG,UAAC,KAAU,IAAa,OAAA,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,IAAC;QAE7D,SAAS,GAAG,UAAC,KAAmC;QAC3D,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;YAC9B,OAAO,KAAK,CAAC;SACd;QAED,OAAO,KAAK,KAAK,MAAM,CAAC;IAC1B,EAAE;IAEK,IAAM,cAAc,GAAG,UAAI,GAAM;QACtC,IAAM,YAAY,GAA2B,EAAE,CAAC;QAChD,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;YACrB,IAAK,GAAc,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,KAAKR,iBAAS,CAAC,oBAAoB,EAAE;gBAC7F,YAAY,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;aAC9B;SACF;QAED,OAAO,YAAY,CAAC;IACtB,CAAC,CAAC;IAEK,IAAM,aAAa,GAAG,UAAI,GAAM;QACrC,IAAI,YAAY,GAA2B,EAAE,CAAC;QAC9C,KAAK,IAAM,GAAG,IAAI,GAAG,EAAE;YACrB,IAAK,GAAc,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE;gBACnD,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;oBAChC,YAAY,mCAAQ,YAAY,GAAK,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC;iBACjE;qBAAM;oBACL,YAAY,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;iBAC9B;aACF;SACF;QAED,OAAO,YAAY,CAAC;IACtB,CAAC,CAAC;QAEW,6BAA6B,GAAG,UAAI,OAAU;QACzD,IAAI,KAAK,GAAQ,EAAE,CAAC;QACpB,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QAEvB,KAAK,IAAM,GAAG,IAAI,OAAO,EAAE;YACzB,IAAK,OAAkB,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC3C,IAAI,GAAG,KAAKD,sBAAc,CAAC,OAAO,EAAE;oBAClC,KAAK,mCAAQ,KAAK,GAAK,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC;iBACtD;qBAAM,IAAI,GAAG,CAAC,OAAO,CAACA,sBAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;oBACnD,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBAClD;aACF;SACF;QAED,OAAO,KAAK,CAAC;IACf,EAAE;QAEW,6BAA6B,GAAG,UAAC,OAAoB;QAChE,IAAM,IAAI,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,eAAe,EAAE,WAAW,CAAC,CAAC;QAEvF,qDACK,IAAI,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,GAAG;;YAC1B,IAAM,KAAK,GAAI,OAAkC,CAAC,GAAG,CAAC,CAAC;YACvD,IAAI,KAAK,EAAE;gBACT,uCAAY,OAAO,aAAE,GAAC,GAAG,IAAG,KAAK,OAAG;aACrC;YAED,OAAO,OAAO,CAAC;SAChB,EAAE,EAAE,CAAC,GACH,iBAAiB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,KACjD,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,IACjD;IACJ,EAAE;IAEK,IAAM,oBAAoB,GAAG,UAAI,QAAyB,IAAK,QAAC;QACrE,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAW,EAAE,EAAE,CAAC,IAAI,CAAC;QAC9E,KAAK,EAAE,QAAQ,CAAC,IAAI,IAAI,EAAE;KAC3B,IAAC,CAAC;IAEI,IAAM,iBAAiB,GAAG,UAAC,KAAwB,IACxD,OAAAU,eAAU,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,GAAA,CAAC;QAElD,iBAAiB,GAAG,UAAC,QAAyB;QACzD,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAM,qBAAqB,GAAQ,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC;QAC/F,IAAM,aAAa,GAAGF,gCAAwB,CAAC,qBAAqB,CAAC,CAAC;QAEtE,IACE,QAAQ,CAAC,eAAe;YACxB,aAAa,KAAKA,gCAAwB,CAAC,OAAO;YAClD,QAAQ,CAAC,eAAe,CAAC,MAAM;YAC/B,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK;YACrC,QAAQ,CAAC,eAAe,CAAC,OAAO,EAChC;YACA,IAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC;YAC1D,IAAM,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CACxD,UAAC,UAAU,EAAE,MAAM,IAAK,OAAA,UAAU,GAAG,MAAM,CAAC,iBAAiB,IAAI,CAAC,GAAA,EAClE,CAAC,CACF,CAAC;YACF,KAAK,GAAG,OAAK,SAAS,SAAI,KAAK,MAAG,CAAC;SACpC;QAED,OAAO,KAAG,aAAa,GAAG,KAAO,CAAC;IACpC;;ICvFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAmCE,4BACmB,sBAA2C,EAC3C,eAAqC,EACrC,yBAAwD;YAFxD,2BAAsB,GAAtB,sBAAsB,CAAqB;YAC3C,oBAAe,GAAf,eAAe,CAAsB;YACrC,8BAAyB,GAAzB,yBAAyB,CAA+B;SACvE;;;;;;;QAQJ,wCAAW,GAAX,UAAY,MAAgC;YAC1C,OAAO,IAAI,CAAC,sBAAsB;iBAC/B,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC;iBAC/B,IAAI,CAACG,aAAG,CAAC,oBAAoB,CAAC,EAAEC,oBAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;SACnE;;;;;;;QAQD,uCAAU,GAAV,UAAW,SAAiB;YAC1B,OAAO,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC,IAAI,CAACA,oBAAU,CAAC,UAAC,KAAK,IAAK,OAAAC,OAAE,CAAC,SAAS,CAAC,GAAA,CAAC,CAAC,CAAC;SACzG;;;;;;;QAQD,0CAAa,GAAb,UAAc,SAAiB;YAC7B,OAAO,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;SACjE;;;;;;;QAQD,gDAAmB,GAAnB,UAAoB,MAAgC;YAClD,OAAO,IAAI,CAAC,eAAe;iBACxB,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC;iBAChC,IAAI,CAACF,aAAG,CAAC,oBAAoB,CAAC,EAAEC,oBAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;SACnE;;;;;;;QAQD,oDAAuB,GAAvB,UAAwB,MAAgC;YACtD,OAAO,IAAI,CAAC,eAAe;iBACxB,uBAAuB,CAAC,MAAM,EAAE,UAAU,CAAC;iBAC3C,IAAI,CAACD,aAAG,CAAC,oBAAoB,CAAC,EAAEC,oBAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;SACnE;;;;;;;QAQD,kDAAqB,GAArB,UAAsB,SAAiB;YACrC,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,EAAE,SAAS,WAAA,EAAE,CAAC,CAAC;SAClE;;;;;;;QAQD,0CAAa,GAAb,UAAc,OAAoB;YAChC,OAAO,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,EAAE,qBAAqB,EAAE,OAAO,EAAE,CAAC,CAAC;SAC1G;;;;;;;;QASD,2CAAc,GAAd,UAAe,SAAiB,EAAE,OAAgB;YAChD,IAAM,IAAI,GAAG,OAAO,GAAG,EAAE,OAAO,SAAA,EAAE,GAAG,SAAS,CAAC;YAE/C,OAAO,IAAI,CAAC,eAAe;iBACxB,kBAAkB,CAAC,EAAE,SAAS,WAAA,EAAE,uBAAuB,EAAE,IAAI,EAAE,CAAC;iBAChE,IAAI,CAACD,aAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC;SAC7C;;;;;;;;QASD,0CAAa,GAAb,UAAc,SAAiB,EAAE,OAAgB;YAC/C,IAAM,IAAI,GAAG,OAAO,GAAG,EAAE,OAAO,SAAA,EAAE,GAAG,SAAS,CAAC;YAE/C,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,EAAE,SAAS,WAAA,EAAE,wBAAwB,EAAE,IAAI,EAAE,CAAC,CAAC;SAChG;;;;;;QAOD,kDAAqB,GAArB;YACE,OAAO,IAAI,CAAC,yBAAyB,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;SACzE;;;6JAtHU,kBAAkB;iKAAlB,kBAAkB;sHAAlB,kBAAkB;sBAD9BG,aAAU;;;ICtDX;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACtG,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;aAEc,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;YACrC,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;QAC9F,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;IAEM,IAAI,QAAQ,GAAG;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChF;YACD,OAAO,CAAC,CAAC;SACZ,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB;QACL,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;QACpD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;YAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;oBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;QAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;aAEe,OAAO,CAAC,UAAU,EAAE,SAAS;QACzC,OAAO,UAAU,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;IACzE,CAAC;aAEe,UAAU,CAAC,WAAW,EAAE,aAAa;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;aAEe,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;QACvD,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC5G,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;YACrD,SAAS,SAAS,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC3F,SAAS,QAAQ,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC9F,SAAS,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC9G,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;aAEe,WAAW,CAAC,OAAO,EAAE,IAAI;QACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,SAAS,IAAI,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,SAAS,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC9D,OAAO,CAAC;gBAAE,IAAI;oBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;wBAAE,OAAO,CAAC,CAAC;oBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACT,KAAK,CAAC,CAAC;wBAAC,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAC9B,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxD,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;wBACjD,KAAK,CAAC;4BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;wBACjD;4BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;6BAAE;4BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;6BAAE;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;gCAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;qBAC9B;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;iBAAE;wBAAS;oBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;IAEM,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAC9D,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,cAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QACtB,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;aAEa,YAAY,CAAC,CAAC,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClH,CAAC;aAEe,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;YAAE,OAAO;gBAC1C,IAAI,EAAE;oBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;wBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;oBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;iBAC3C;aACJ,CAAC;QACF,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,QAAQ;QACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,cAAc;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI;QACxC,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;YAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjF,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,EAAE;wBAAE,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrD,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnB;aACJ;QACD,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;aAEe,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;aAEe,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS;QAC3D,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACtH,SAAS,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAC1I,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE;QAAC,OAAO,CAAC,EAAE;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAAE,EAAE;QAClF,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QACxH,SAAS,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;aAEe,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5I,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;aAEe,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACjN,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAChK,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;aAEe,oBAAoB,CAAC,MAAM,EAAE,GAAG;QAC5C,IAAI,MAAM,CAAC,cAAc,EAAE;YAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SAAE;aAAM;YAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;SAAE;QAC/G,OAAO,MAAM,CAAC;IAClB,CAAC;IAAA,CAAC;IAEF,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC;QACnD,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC;QACd,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;aAEc,YAAY,CAAC,GAAG;QAC5B,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;YAAE,OAAO,GAAG,CAAC;QACtC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,GAAG,IAAI,IAAI;YAAE,KAAK,IAAI,CAAC,IAAI,GAAG;gBAAE,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAAE,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzI,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAChC,OAAO,MAAM,CAAC;IAClB,CAAC;aAEe,eAAe,CAAC,GAAG;QAC/B,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC3D,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;QACnL,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClG,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAClE,IAAI,IAAI,KAAK,GAAG;YAAE,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;QACxE,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,yEAAyE,CAAC,CAAC;QAClL,OAAO,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAC9G;;IC1NO,IAAM,6BAA6B,GAAG;QAC3C,QAAQ,EAAE,EAAE;KACb,CAAC;IAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA4HE,wBAA6B,kBAAsC;YAAnE,iBAAuE;YAA1C,uBAAkB,GAAlB,kBAAkB,CAAoB;YA7FhD,aAAQ,GAAG,IAAIC,YAAO,EAAE,CAAC;YAC3B,gBAAW,GAAG,IAAIA,YAAO,EAAoC,CAAC;YAC9D,cAAS,GAAG,IAAIA,YAAO,EAAoC,CAAC;YAC5D,UAAK,GAAG,IAAIA,YAAO,EAAE,CAAC;YACtB,aAAQ,GAAG,IAAIA,YAAO,EAAkC,CAAC;YACzD,YAAO,GAAG,IAAIA,YAAO,EAGlC,CAAC;YAEY,UAAK,GAAG,IAAIA,YAAO,EAGhC,CAAC;YAEc,YAAO,GAAG,IAAIC,oBAAe,CAAwB,6BAA6B,CAAC,CAAC;YAEtF,SAAI,GAAG,IAAIC,kBAAa,CAAgB,CAAC,CAAC,CAAC;YAC3C,kBAAa,GAAmB,EAAE,CAAC;YACnC,aAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CACxCC,mBAAS,CAAC,UAAC,EAAE;gBACX,IAAI,CAAC,EAAE,EAAE;oBACP,OAAOL,OAAE,CAAC,SAAS,CAAC,CAAC;iBACtB;gBAED,OAAO,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aAC/C,CAAC,CACH,CAAC;YAEO,cAAS,GAAG,IAAII,kBAAa,CAAU,CAAC,CAAC,CAAC;YAC1C,aAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;YAMjC,aAAQ,GAAG,IAAIA,kBAAa,CAAU,CAAC,CAAC,CAAC;YACjD,YAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;YAM/B,cAAS,GAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,CAACN,aAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,QAAQ,GAAA,CAAC,CAAC,CAAC;YAEpF,aAAQ,GAAGQ,UAAK,CAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAACC,eAAK,CAAC,EAAE,MAAM,EAAEtB,sBAAc,CAAC,IAAI,EAAE,CAAC,CAAC,EACvD,IAAI,CAAC,OAAO,CAAC,IAAI,CAACa,aAAG,CAAC,UAAC,EAAe;oBAAb,KAAK,WAAA,EAAE,IAAI,UAAA;gBAAO,QAAC,EAAE,MAAM,EAAEb,sBAAc,CAAC,MAAM,EAAE,KAAK,OAAA,EAAE,IAAI,MAAA,EAAE;aAAC,CAAC,CAAC,EAC7F,IAAI,CAAC,QAAQ,CAAC,IAAI,CAACa,aAAG,CAAC,UAAC,cAAc,IAAK,QAAC,EAAE,MAAM,EAAEb,sBAAc,CAAC,OAAO,EAAE,cAAc,gBAAA,EAAE,IAAC,CAAC,CAAC,EACjG,IAAI,CAAC,WAAW,CAAC,IAAI,CAACa,aAAG,CAAC,UAAC,IAAI,IAAK,QAAC,EAAE,MAAM,EAAEb,sBAAc,CAAC,UAAU,EAAE,IAAI,MAAA,EAAE,IAAC,CAAC,CAAC,EACnF,IAAI,CAAC,SAAS,CAAC,IAAI,CAACa,aAAG,CAAC,UAAC,IAAI,IAAK,QAAC,EAAE,MAAM,EAAEb,sBAAc,CAAC,QAAQ,EAAE,IAAI,MAAA,EAAE,IAAC,CAAC,CAAC,EAC/E,IAAI,CAAC,SAAS,CAAC,IAAI,CAACa,aAAG,CAAC,UAAC,QAAQ,IAAK,QAAC,EAAE,QAAQ,UAAA,EAAE,IAAC,CAAC,CAAC,EACtD,IAAI,CAAC,KAAK,CAAC,IAAI,CAACA,aAAG,CAAC,UAAC,EAAmB;oBAAjB,IAAI,UAAA,EAAE,SAAS,eAAA;gBAAO,QAAC,EAAE,MAAM,EAAEb,sBAAc,CAAC,IAAI,EAAE,IAAI,MAAA,EAAE,SAAS,WAAA,EAAE;aAAC,CAAC,CAAC,CAClG,CAAC;YAEiB,WAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAC5CuB,cAAI,CAAC,UAAC,KAAK,EAAE,MAAM,IAAK,wCAAM,KAAK,GAAK,MAAM,KAAG,CAAC,EAClDV,aAAG,CAAC,UAAC,EAA2D;gBAAzD,IAAA,QAAQ,KAAiD,SAAjD,EAAE,cAAc,KAAiC,eAAjC,EAAE,KAAK,KAA0B,MAA1B,EAAK,KAAK,cAA3C,uCAA6C,CAAF;gBAC9C,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,KAAKb,sBAAc,CAAC,OAAO,CAAC;gBAC1D,IAAM,IAAI,GAAG,QAAQ,IAAI,6BAA6B,CAAC,QAAQ,CAAC;gBAChE,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC;gBAE7B,uCACK,KAAK,KACR,KAAK,EAAE,KAAK,IAAI,EAAE,EAClB,IAAI,EAAE,SAAS,IAAI,cAAc,KAAKD,sBAAc,CAAC,SAAS,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,EACzF,IAAI,EAAE,SAAS,IAAI,cAAc,KAAKA,sBAAc,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,IACzE;aACH,CAAC,EACFyB,gBAAM,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,MAAM,KAAK,SAAS,GAAA,CAAC,EAC7CC,qBAAW,CAAC,CAAC,CAAC,CACf,CAAC;YAEiB,aAAQ,GAAwC,IAAI,CAAC,MAAM,CAAC,IAAI,CACjFC,kBAAQ,CAAC,UAAC,EAAyB;gBAAvB,IAAA,MAAM,KAAiB,OAAjB,EAAK,UAAU,cAAvB,UAAyB,CAAF;gBAC/B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAM,UAAU,GAAG,MAAM,KAAK1B,sBAAc,CAAC,QAAQ,CAAC;gBAEtD,OAAO,KAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,KAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CACrFa,aAAG,CAAC,UAAC,QAAQ,IAAK,wCAAM,QAAQ,KAAE,UAAU,YAAA,OAAG,CAAC,EAChDc,kBAAQ,CAAC,cAAM,QAAC,KAAI,CAAC,OAAO,GAAG,KAAK,IAAC,CAAC,CACvC,CAAC;aACH,CAAC,EACFC,mBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxBH,qBAAW,CAAC,CAAC,CAAC,CACf,CAAC;YAEiB,oBAAe,GAAG,IAAIP,oBAAe,CAA8B,SAAS,CAAC,CAAC;SAM1B;QA7DvE,sBAAc,mCAAO;iBAArB,UAAsB,GAAY;gBAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC1B;;;WAAA;QAKD,sBAAc,kCAAM;iBAApB,UAAqB,GAAY;gBAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACzB;;;WAAA;QAgDD,sBAAW,qCAAS;iBAApB;gBACE,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;aAC5C;;;WAAA;QAIS,8CAAqB,GAArB,UAAyB,UAAa;YAC9C,OAAO,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC;iBAC9B,MAAM,CAAC,UAAC,EAAY;oBAAZ,KAAA,aAAY,EAAX,GAAG,QAAA,EAAE,KAAK,QAAA;gBAAM,OAAA,KAAK,KAAK,EAAE;aAAA,CAAC;iBACtC,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI;;gBAAK,wCAAM,IAAI,aAAE,GAAC,IAAI,CAAC,CAAC,CAAC,IAAG,IAAI,CAAC,CAAC,CAAC;aAAG,EAAE,EAAE,CAAM,CAAC;SACvE;;;;;;QAOD,6BAAI,GAAJ,UAAK,MAA6B;YAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;;;;QAKD,6BAAI,GAAJ;YACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;;;;;;QAOD,iCAAQ,GAAR,UAAS,IAAY;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B;;;;;;QAOD,mCAAU,GAAV,UAAW,IAAY;YACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;;;;;;QAOD,gCAAO,GAAP,UAAQ,cAA8B;YACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACpC;;;;;;QAOD,uCAAc,GAAd,UAAe,KAAa;YAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;SACvC;;;;;;QAOD,sCAAa,GAAb,UAAc,SAAoB;YAChC,IAAM,eAAe,GAAkB,SAAS,CAAC,SAAS,CAAC,WAAW,EAAmB,CAAC;YAC1F,IAAM,WAAW,GAAG,EAAE,IAAI,EAAE,SAAS,CAAC,MAAsB,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;YAC3F,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9B;;;;;;;QAQD,uCAAc,GAAd,UAAe,EAA6B;YAC1C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAEjD,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;;;;;;;QAQD,uCAAc,GAAd,UAAe,EAAU;YACvB,OAAO,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SAC/C;;;;;;;QAQD,sCAAa,GAAb,UAAc,SAAiB;YAA/B,iBAIC;YAHC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAACS,kBAAQ,CAAC,cAAM,QAAC,KAAI,CAAC,MAAM,GAAG,KAAK,IAAC,CAAC,CAAC,CAAC;SACrG;;;;;;QAOD,sCAAa,GAAb,UAAc,OAAoB;YAAlC,iBAIC;YAHC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAACA,kBAAQ,CAAC,cAAM,QAAC,KAAI,CAAC,MAAM,GAAG,KAAK,IAAC,CAAC,CAAC,CAAC;SACnG;;;;;;;;QASD,uCAAc,GAAd,UAAe,UAAkB,EAAE,OAAgB;YAAnD,iBAIC;YAHC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,CAACA,kBAAQ,CAAC,cAAM,QAAC,KAAI,CAAC,MAAM,GAAG,KAAK,IAAC,CAAC,CAAC,CAAC;SAChH;;;;;;;;QASD,sCAAa,GAAb,UAAc,UAAkB,EAAE,OAAgB;YAAlD,iBAIC;YAHC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAEnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,IAAI,CAACA,kBAAQ,CAAC,cAAM,QAAC,KAAI,CAAC,MAAM,GAAG,KAAK,IAAC,CAAC,CAAC,CAAC;SAC/G;QAED,oCAAW,GAAX;YACE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,YAAY,IAAK,OAAA,YAAY,CAAC,WAAW,EAAE,GAAA,CAAC,CAAC;YACzE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC1B;;;yJAlPU,cAAc;6JAAd,cAAc;sHAAd,cAAc;sBAD1BX,aAAU;;;ICjDX,IAAM,sBAAsB,GAAoB,EAAE,CAAC;QAEtC,yBAAyB,GAA2B,IAAIa,iBAAc,CAAC,2BAA2B,EAAE;QAEpG,8BAA8B,GAA2B,IAAIA,iBAAc,CACtF,gCAAgC,EAChC;QAEW,kCAAkC,GAA2B,IAAIA,iBAAc,CAC1F,oCAAoC,EACpC;QAEW,sBAAsB,GAAoB;QACrD;YACE,OAAO,EAAE,yBAAyB;YAClC,QAAQ,EAAEC,SAAoB;SAC/B;QACD;YACE,OAAO,EAAE,8BAA8B;YACvC,QAAQ,EAAE,sBAAsB;SACjC;QACD;YACE,OAAO,EAAE,kCAAkC;YAC3C,QAAQ,EAAE,mBAAmB;SAC9B;;;ICtBH;;;IAIA;QACE,mCAC6C,aAAuB,EACjD,kBAAsC;YADZ,kBAAa,GAAb,aAAa,CAAU;YACjD,uBAAkB,GAAlB,kBAAkB,CAAoB;SACrD;;;;;;QAOJ,sDAAkB,GAAlB;YACE,OAAOf,OAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC/B;;;;;;QAOD,yDAAqB,GAArB;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC,IAAI,CACzDF,aAAG,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,IAAI,EAAE,GAAA,CAAC,EACtCC,oBAAU,CAAC,cAAM,OAAAC,OAAE,CAAC,EAAE,CAAC,GAAA,CAAC,CACzB,CAAC;SACH;;;oKAzBU,yBAAyB,kBAE1B,yBAAyB;wKAFxB,yBAAyB;sHAAzB,yBAAyB;sBADrCC,aAAU;;;kCAGNe,SAAM;mCAAC,yBAAyB;;;;QCPxB,sBAAsB,GAAe;QAChD,EAAE,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,kBAAkB,EAAE;QAC7D;YACE,OAAO,EAAE,cAAc;YACvB,QAAQ,EAAE,cAAc;YACxB,IAAI,EAAE,CAAC,kBAAkB,CAAC;SAC3B;QACD,yBAAyB;;;ICL3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAgCE,6BAA6B,uBAA6C;YAA7C,4BAAuB,GAAvB,uBAAuB,CAAsB;SAAI;;;;;;;QAO9E,yCAAW,GAAX,UAAY,UAAkB;YAC5B,OAAO,IAAI,CAAC,uBAAuB;iBAChC,uBAAuB,CAAC,EAAE,UAAU,YAAA,EAAE,CAAC;iBACvC,IAAI,CAACjB,oBAAU,CAAC,UAAC,KAAwB,IAAK,OAAAC,OAAE,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC,GAAA,CAAC,CAAC,CAAC;SACjF;;;8JAZU,mBAAmB;kKAAnB,mBAAmB;sHAAnB,mBAAmB;sBAD/BC,aAAU;;;IClCX;;;;QAGA;YAEU,aAAQ,GAAG,IAAIC,YAAO,EAAW,CAAC;YAClC,uBAAkB,GAAG,IAAIA,YAAO,EAAE,CAAC;YACnC,iBAAY,GAAG,KAAK,CAAC;;;;YAKpB,sBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SAiDrE;;;;QA5CC,mDAAY,GAAZ;YACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;;;;QAKD,oDAAa,GAAb;YACE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;;;;;;QAOD,qDAAc,GAAd;YACE,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,IAAIA,YAAO,EAAE,CAAC;gBAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;gBAE/B,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;aACrC;iBAAM;gBACL,OAAOF,OAAE,CAAC,IAAI,CAAC,CAAC;aACjB;SACF;;;;QAKD,8CAAO,GAAP;YACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACzB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;;;;QAKD,oDAAa,GAAb;YACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC1B;;;uKAxDU,4BAA4B;2KAA5B,4BAA4B;sHAA5B,4BAA4B;sBADxCC,aAAU;;;ICNX;;;;;;;IAOA,IAAM,UAAU,GAAoB;QAClC,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,yBAAyB;YAClC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,sBAAsB;SAC7B;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,2BAA2B;YACpC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,sBAAsB;YAC/B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,sBAAsB;YAC/B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,wBAAwB;SAC/B;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,kBAAkB;YAC3B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,cAAc;SACrB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,UAAU;SACjB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,kBAAkB;YAC3B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,kBAAkB;SACzB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,+BAA+B;YACxC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,0BAA0B;SACjC;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,uBAAuB;YAChC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,aAAa;SACpB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,aAAa;SACpB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,UAAU;SACjB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,uBAAuB;YAChC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,2BAA2B;YACpC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,gBAAgB;SACvB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,UAAU;SACjB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,oBAAoB;YAC7B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,oBAAoB;SAC3B;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,sBAAsB;YAC/B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,+BAA+B;YACxC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,oBAAoB;YAC7B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,oBAAoB;YAC7B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,gBAAgB;SACvB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,yBAAyB;YAClC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,WAAW;SAClB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,oBAAoB;YAC7B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,WAAW;SAClB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,mBAAmB;SAC1B;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,WAAW;SAClB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,2BAA2B;YACpC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,UAAU;SACjB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,uBAAuB;YAChC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,yBAAyB;YAClC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,yBAAyB;YAClC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,MAAM;SACb;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,4BAA4B;YACrC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,MAAM;SACb;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,4BAA4B;YACrC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,gCAAgC;YACzC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,gCAAgC;YACzC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,sBAAsB;YAC/B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,kCAAkC;YAC3C,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,aAAa;SACpB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,uBAAuB;YAChC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,sBAAsB;YAC/B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,WAAW;SAClB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,sBAAsB;YAC/B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,uBAAuB;YAChC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,qBAAqB;YAC9B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,WAAW;SAClB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,MAAM;SACb;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,iCAAiC;YAC1C,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,gCAAgC;YACzC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,WAAW;SAClB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,2BAA2B;YACpC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,eAAe;SACtB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,kCAAkC;YAC3C,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,WAAW;SAClB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,oBAAoB;YAC7B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,aAAa;SACpB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,iBAAiB;YAC1B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,kBAAkB;SACzB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,UAAU;SACjB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,0BAA0B;SACjC;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,+BAA+B;YACxC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,WAAW;SAClB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,2BAA2B;YACpC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,UAAU;SACjB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,+BAA+B;YACxC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,OAAO;SACd;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,cAAc;SACrB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,iCAAiC;YAC1C,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,qBAAqB;YAC9B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,UAAU;SACjB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,UAAU;SACjB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,2BAA2B;YACpC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,uBAAuB;SAC9B;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,aAAa;SACpB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,MAAM;SACb;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,6BAA6B;SACpC;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,8BAA8B;YACvC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,MAAM;SACb;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,yBAAyB;YAClC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,YAAY;SACnB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,4BAA4B;YACrC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,+BAA+B;YACxC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,wBAAwB;YACjC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,oBAAoB;SAC3B;QACD,EAAE,EAAE;YACF,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,0BAA0B;YACnC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,yBAAyB;SAChC;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,2BAA2B;SAClC;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,sBAAsB;YAC/B,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,QAAQ;SACf;QACD,EAAE,EAAE;YACF,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,6BAA6B;YACtC,GAAG,EAAE,EAAE;YACP,IAAI,EAAE,SAAS;SAChB;KACF,CAAC;IAEF,IAAI,SAAS,qBAAyB,UAAU,CAAE,CAAC;IAa5C,IAAM,gBAAgB,GAAG,UAAC,YAA6B;QAC5D,SAAS,mCAAQ,SAAS,GAAK,YAAY,CAAE,CAAC;QAE9C,OAAO,SAAS,CAAC;IACnB,CAAC,CAAC;IAEF;;;;;;;;;;AAUA,gCAAe,UAAC,IAAY;QAC1B,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAErC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE;YACnD,MAAM,IAAI,KAAK,CAAC,kBAAgB,WAAW,sBAAmB,CAAC,CAAC;SACjE;QAED,OAAO,SAAS,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;;IC3tBD,IAAM,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAM,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAE5B,IAAM,QAAQ,GAA8B;QAC1C,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,QAAQ;KACZ,CAAC;IAEF;IACA,IAAM,gBAAgB,GAA0C,EAAE,CAAC;IAEnE;IACA,IAAM,iBAAiB,GAAG,UAAC,UAAkB;QAC3C,IAAM,aAAa,GAAG,UAAU,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa;YAAE,OAAO,SAAS,CAAC;QAErC,IAAM,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,UAAC,WAAW,EAAE,KAAK;YACtD,IAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACjD,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAEtB,OAAU,WAAW,SAAI,QAAQ,CAAC,IAAI,CAAC,UAAK,QAAQ,MAAG,CAAC;SACzD,EAAE,EAAE,CAAC,CAAC;QACP,gBAAgB,CAAC,UAAU,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;QAEnD,OAAO,gBAAgB,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF;IACA,IAAM,aAAa,GAAG,UAAC,IAAY,IAAa,OAAA,KAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAG,GAAA,CAAC;IAEtF;;;;;;;;IAQO,IAAM,OAAO,GAAG,UAAC,GAAW,IAAa,OAAA,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAA,CAAC;IAExE;;;;;;;;;;;;;;IAcO,IAAM,UAAU,GAAG,UAAC,UAAkB,IAC3C,OAAA,gBAAgB,CAAC,UAAU,CAAC,IAAI,iBAAiB,CAAC,UAAU,CAAC,GAAA,CAAC;IAEhE;;;;;;;;;IASO,IAAM,WAAW,GAAG,UAAC,IAAY,IACtC,OAAA,aAAa,CAAC,IAAI,CAAC;SAChB,KAAK,CAAC,EAAE,CAAC;SACT,MAAM,CAAC,UAAC,MAAM,EAAE,IAAI;QACnB,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,GAAG,CAAC;QACR,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;YAC1B,GAAG,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;SAC7B;aAAM;YACL,GAAG,GAAG,IAAI,CAAC;SACZ;QAED,OAAO,KAAG,MAAM,GAAG,GAAK,CAAC;IAC3B,CAAC,EAAE,EAAE,CAAC,GAAA;;IChFV;;;;;;;;;;;AAWA,qBAAe,UAAC,QAAgB,EAAE,OAAe;QAC/C,IAAI,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE;YACxB,OAAO,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;SACzC;QAED,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;QAE1C,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,SAAS,GAAG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;YACtC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAChB;QAED,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAE1B,OAAO,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;IACnC,CAAC;;IC7BD;;;;IAcA;;;;;;;;;IASO,IAAM,WAAW,GAAG,UAAC,IAAY;QACtC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,KAAK,CAAC;SACd;QAED,IAAI,IAAI,CAAC;QACT,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAEhD,IAAI;YACF,IAAI,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;SAC1C;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,CAAC;SACd;QAED,IAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAW,CAAC;QAEjD,QACE,IAAI,CAAC,GAAG,KAAK,WAAW,CAAC,MAAM;YAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAC7C;IACJ,CAAC,CAAC;IAEF;;;;;;;;;;IAUO,IAAM,sBAAsB,GAAG,UAAC,OAAwB;QAC7D,IAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3B,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;SAClD;QAED,IAAI,IAAI,CAAC;QACT,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAChD,IAAI;YACF,IAAI,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;SAC1C;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;SAClD;QAED,IAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAW,CAAC;QACjD,IAAM,GAAG,GACP,IAAI,CAAC,GAAG,KAAK,WAAW,CAAC,MAAM;YAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;QAEhD,OAAO,GAAG,GAAG,IAAI,GAAG,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAChE,CAAC,CAAC;IAEF;;;;;;;;;IASO,IAAM,WAAW,GAAG,UAAC,IAAY;QACtC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,OAAO,KAAK,CAAC;SACd;QAED,IAAI,IAAI,CAAC;QACT,IAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAElC,IAAI;YACF,IAAI,GAAG,oBAAoB,CAAC,WAAW,CAAC,CAAC;SAC1C;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,CAAC;SACd;;QAGD,IAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAElC,IAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAW,CAAC;QAEjD,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;;ICtGD;;;;;;;;;;;;;QAkBE,gCAAqE,eAAgC;YAAhC,oBAAe,GAAf,eAAe,CAAiB;YACnG,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACxC;QAED,yCAAQ,GAAR,UAAS,OAAwB;YAC/B,OAAO,OAAO,IAAI,OAAO,CAAC,KAAK,GAAG,sBAAsB,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;SAC1E;;;iKAPU,sBAAsB,kBACb,8BAA8B;0IADvC,sBAAsB,4CAFtB,CAAC,EAAE,OAAO,EAAEgB,kBAAa,EAAE,WAAW,EAAE,sBAAsB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;sHAE9E,sBAAsB;sBAJlCC,YAAS;uBAAC;wBACT,QAAQ,EAAE,mBAAmB;wBAC7B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAED,kBAAa,EAAE,WAAW,wBAAwB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;qBAC1F;;;kCAEcD,SAAM;mCAAC,8BAA8B;;;;ICrBpD;;;;;QAQA;;;;8JAAa,mBAAmB;+JAAnB,mBAAmB,iBAHf,sBAAsB,aAC3B,sBAAsB;+JAErB,mBAAmB;sHAAnB,mBAAmB;sBAJ/BjC,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;wBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;qBAClC;;;ICPD;;;;;;;;;;;QAWA;YAKU,wBAAmB,GAAG,4DAA4D,CAAC;SAc5F;;;;;;;QANC,gDAAQ,GAAR,UAAS,OAAwB;YAC/B,IAAM,KAAK,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC;YAC7B,IAAI,CAAC,KAAK;gBAAE,OAAO,IAAI,CAAC;YAExB,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,KAAK,EAAE,EAAE,KAAK,OAAA,EAAE,EAAE,CAAC;SAC3E;;;wKAdU,6BAA6B;iJAA7B,6BAA6B,mDAF7B,CAAC,EAAE,OAAO,EAAEkC,kBAAa,EAAE,WAAW,EAAE,6BAA6B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;sHAErF,6BAA6B;sBAJzCC,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAED,kBAAa,EAAE,WAAW,+BAA+B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;qBACjG;;;ICdD;;;;;QAQA;;;;4JAAa,iBAAiB;6JAAjB,iBAAiB,iBAHb,6BAA6B,aAClC,6BAA6B;6JAE5B,iBAAiB;sHAAjB,iBAAiB;sBAJ7BlC,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,6BAA6B,CAAC;wBAC7C,OAAO,EAAE,CAAC,6BAA6B,CAAC;qBACzC;;;ICVM,IAAM,eAAe,GAAG,UAAC,IAAa;QAC3C,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;SACrC;QAED,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC;;ICHD,IAAY,YAIX;IAJD,WAAY,YAAY;QACtB,uCAAuB,CAAA;QACvB,+BAAe,CAAA;QACf,qCAAqB,CAAA;IACvB,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;IACD;;;;;;;;;;;;;;;;;;;;;;;;;QA4BE,0BAA6B,QAAkB;YAAlB,aAAQ,GAAR,QAAQ,CAAU;YAFtC,0BAAqB,GAAG,eAAe,CAAC;SAEE;QAEnD,oCAAS,GAAT,UAAU,KAAa,EAAE,UAAmB;YAC1C,IAAI,MAAM,CAAC;YAEX,IAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,IAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC3C,IAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAE/C,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;gBAChD,KAAK,SAAS;oBACZ,MAAM,GAAG,YAAY,CAAC,SAAS,CAAC;oBAChC,MAAM;gBACR,KAAK,KAAK;oBACR,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC;oBAC5B,MAAM;gBACR,KAAK,QAAQ;oBACX,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC;oBAC/B,MAAM;gBACR;oBACE,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;aACvD;YAED,OAAO,MAAM,CAAC;SACf;;;2JA3BU,gBAAgB;yJAAhB,gBAAgB;sHAAhB,gBAAgB;sBAD5BoC,OAAI;uBAAC,EAAE,IAAI,EAAE,cAAc,EAAE;;;IC7B9B;;;;;QAUA;;;;6JAAa,kBAAkB;8JAAlB,kBAAkB,iBALd,gBAAgB,aAErBvC,eAAY,aACZ,gBAAgB;8JAEf,kBAAkB,aAJlB,CAACwC,WAAQ,CAAC,YACZ,CAACxC,eAAY,CAAC;sHAGZ,kBAAkB;sBAN9BG,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;wBAChC,SAAS,EAAE,CAACqC,WAAQ,CAAC;wBACrB,OAAO,EAAE,CAACxC,eAAY,CAAC;wBACvB,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;;QCXY,gBAAgB,GAAG,UAAC,QAA4C,IAC3E,OAAA,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,OAAO;QAC5C,OAAO,CAAC,gBAAgB,EAAE,CAAC;QAC3B,OAAO,CAAC,sBAAsB,EAAE,CAAC;QAEjC,OAAO,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC;IAChC,CAAC,EAAE,IAAI,CAAC;;ICLV;;;;;;;;;;;;;QAgBA;;QACE,iDAAQ,GAAR,UAAS,OAAwB;YAC/B,OAAO,qBAAqB,CAAC,OAAO,CAAC,CAAC;SACvC;;;yKAHU,8BAA8B;kJAA9B,8BAA8B,2CAF9B,CAAC,EAAE,OAAO,EAAEqC,kBAAa,EAAE,WAAW,EAAE,8BAA8B,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;sHAEtF,8BAA8B;sBAJ1CC,YAAS;uBAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAED,kBAAa,EAAE,WAAW,gCAAgC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;qBAClG;;IAOM,IAAM,qBAAqB,GAAgB,UAAC,OAAwB;QACzE,IAAM,YAAY,GAAG,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;QAE/D,OAAO,YAAY,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;IAClD,CAAC;;IC1BD;;;;;QAQA;;;;6JAAa,kBAAkB;8JAAlB,kBAAkB,iBAHd,8BAA8B,aACnC,8BAA8B;8JAE7B,kBAAkB;sHAAlB,kBAAkB;sBAJ9BlC,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,8BAA8B,CAAC;wBAC9C,OAAO,EAAE,CAAC,8BAA8B,CAAC;qBAC1C;;;ICND;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyQsD,oDAA2C;QAAjG;;;;KAAA,CAAsDsC,eAA2C;2KAApF,gCAAgC;oJAAhC,gCAAgC;sHAAhC,gCAAgC;sBAH5CH,YAAS;uBAAC;wBACT,QAAQ,EAAE,6BAA6B;qBACxC;;;IC1QD;;;;;;;;;;;;;;;;;QAgBA;YAME,YAAO,GAAyB,IAAI,CAAC;SAYtC;QALC,uCAAQ,GAAR;YACE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,OAAO,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;aAChE;SACF;;;+JAZU,oBAAoB;wIAApB,oBAAoB,4FCvBjC,ouwBAkQA;sHD3Oa,oBAAoB;sBALhC5C,YAAS;uBAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,WAAW,EAAE,+BAA+B;wBAC5C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;kCAOC,IAAI;0BADHC,QAAK;;;IEvBR;;;;;;QAUA;;;;4JAAa,iBAAiB;6JAAjB,iBAAiB,iBAJb,oBAAoB,EAAE,gCAAgC,aAE3DI,eAAY,aADZ,oBAAoB,EAAE,gCAAgC;6JAGrD,iBAAiB,YAFnB,CAACA,eAAY,CAAC;sHAEZ,iBAAiB;sBAL7BG,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,oBAAoB,EAAE,gCAAgC,CAAC;wBACtE,OAAO,EAAE,CAAC,oBAAoB,EAAE,gCAAgC,CAAC;wBACjE,OAAO,EAAE,CAACH,eAAY,CAAC;qBACxB;;;ICVD;;;;;;;;;;;;;;;;;;;;;QAuB6D,2DAAkD;QAA/G;;;;KAAA,CAA6DyC,eAAkD;kLAAlG,uCAAuC;2JAAvC,uCAAuC;sHAAvC,uCAAuC;sBAHnDH,YAAS;uBAAC;wBACT,QAAQ,EAAE,oCAAoC;qBAC/C;;;ICtBD;;;;;;;;;;;;;;;;;QAgBA;YAgBE,YAAO,GAAG,IAAI,CAAC;YAEf,gBAAW,GAAG,EAAE,CAAC;SAUlB;QALC,sBACI,gDAAO;;;;iBADX,UACY,OAAgB;gBAC1B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC;gBACnC,IAAI,CAAC,WAAW,GAAG,KAAG,eAAe,CAAC,OAAO,CAAC,IAAG,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,EAAE,CAAE,CAAC;aAClF;;;WAAA;;;sKAZU,2BAA2B;+IAA3B,2BAA2B,0GAb5B,mdAUT;sHAGU,2BAA2B;sBAfvC5C,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,mdAUT;wBACD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;kCAUK,OAAO;0BADVC,QAAK;;;ICrCR;;;;;;QAUA;;;;mKAAa,wBAAwB;oKAAxB,wBAAwB,iBAJpB,2BAA2B,EAAE,uCAAuC,aAEzEI,eAAY,EAAE,iBAAiB,aAD/B,2BAA2B,EAAE,uCAAuC;oKAGnE,wBAAwB,YAF1B,CAACA,eAAY,EAAE,iBAAiB,CAAC;sHAE/B,wBAAwB;sBALpCG,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,2BAA2B,EAAE,uCAAuC,CAAC;wBACpF,OAAO,EAAE,CAAC,2BAA2B,EAAE,uCAAuC,CAAC;wBAC/E,OAAO,EAAE,CAACH,eAAY,EAAE,iBAAiB,CAAC;qBAC3C;;;ICXD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8K0D,wDAA+C;QAAzG;;;;KAAA,CAA0DyC,eAA+C;+KAA5F,oCAAoC;wJAApC,oCAAoC;sHAApC,oCAAoC;sBAHhDH,YAAS;uBAAC;wBACT,QAAQ,EAAE,iCAAiC;qBAC5C;;;IC7KD;;;;;;;;;;;;;;;;;;;;;;;;;QAwBA;YAKE,YAAO,GAA6B,IAAI,CAAC;;;;YAIhC,UAAK,GAAG,CAAC,CAAC;;;;YASV,eAAU,GAAG,KAAK,CAAC;;;;YAIlB,gBAAW,GAAG,IAAI7C,eAAY,EAAU,CAAC;;;;YAIzC,kBAAa,GAAG,IAAIA,eAAY,EAAU,CAAC;SAuCtD;;;;QAzBC,2CAAQ,GAAR;YACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,IAAI,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjG;;;;QAID,gDAAa,GAAb;YACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC;;;;QAID,kDAAe,GAAf;YACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC;;;;;;;QAOD,iDAAc,GAAd,UAAe,OAAgB;YAC7B,OAAO,cAAc,CAAC,OAAO,CAAC,CAAC;SAChC;;;mKA5DU,wBAAwB;4IAAxB,wBAAwB,oSChCrC,+7KAsGA;sHDtEa,wBAAwB;sBAJpCC,YAAS;uBAAC;wBACT,QAAQ,EAAE,sBAAsB;wBAChC,WAAW,EAAE,oCAAoC;qBAClD;kCAMU,KAAK;0BAAbE,QAAK;oBAKN,OAAO;0BADNA,QAAK;oBAKG,UAAU;0BAAlBA,QAAK;oBAII,WAAW;0BAApBC,SAAM;oBAIG,aAAa;0BAAtBA,SAAM;oBAKP,WAAW;0BADVD,QAAK;oBAMN,oBAAoB;0BADnBA,QAAK;;;IEpDR;;;;;;QAkBA;;;;gKAAa,qBAAqB;iKAArB,qBAAqB,iBAZjB,wBAAwB,EAAE,oCAAoC,aAG3E8C,eAAU;YACVC,iBAAY;YACZ5C,eAAY;YACZ6C,mBAAgB;YAChB,wBAAwB;YACxB5C,eAAY;YACZ6C,gBAAa,aARL,wBAAwB,EAAE,oCAAoC;iKAW7D,qBAAqB,YAVvB;gBACPH,eAAU;gBACVC,iBAAY;gBACZ5C,eAAY;gBACZ6C,mBAAgB;gBAChB,wBAAwB;gBACxB5C,eAAY;gBACZ6C,gBAAa;aACd;sHAEU,qBAAqB;sBAbjC1C,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,wBAAwB,EAAE,oCAAoC,CAAC;wBAC9E,OAAO,EAAE,CAAC,wBAAwB,EAAE,oCAAoC,CAAC;wBACzE,OAAO,EAAE;4BACPuC,eAAU;4BACVC,iBAAY;4BACZ5C,eAAY;4BACZ6C,mBAAgB;4BAChB,wBAAwB;4BACxB5C,eAAY;4BACZ6C,gBAAa;yBACd;qBACF;;;ICtBD;QAAA;;QACE,iCAAS,GAAT,UAAU,KAAU;YAClB,IAAI,OAAO,KAAK,KAAK,QAAQ;gBAAE,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;YAEzD,OAAO,KAAK,CAAC;SACd;;;wJALU,aAAa;sJAAb,aAAa;sHAAb,aAAa;sBAHzBN,OAAI;uBAAC;wBACJ,IAAI,EAAE,WAAW;qBAClB;;;ICaD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyHE,qCAA6B,yBAAoD;YAApD,8BAAyB,GAAzB,yBAAyB,CAA2B;YAtFjF,YAAO,GAAgC,IAAI,CAAC;YAC5C,gCAA2B,GAAG/B,iBAAS,CAAC,oBAAoB,CAAC;;;;YAWpD,YAAO,GAAY,EAAE,CAAC;;;;YAKtB,gBAAW,GAAgBC,mBAAW,CAAC,OAAO,CAAC;;;;YAK/C,mBAAc,GAAG,KAAK,CAAC;;;;YAKvB,2BAAsB,GAAG,KAAK,CAAC;;;;;YAY/B,cAAS,GAAG,IAAI,CAAC;;;;YAKhB,WAAM,GAAG,IAAIhB,eAAY,EAAE,CAAC;;;;YAK5B,YAAO,GAAG,IAAIA,eAAY,EAAE,CAAC;;;;YAK7B,WAAM,GAAG,IAAIA,eAAY,EAAE,CAAC;;;;YAK5B,SAAI,GAAG,IAAIA,eAAY,EAAE,CAAC;;;;YAK1B,uBAAkB,GAAG,IAAIA,eAAY,EAAW,CAAC;;;;YAKjD,QAAG,GAAG,IAAIA,eAAY,EAAE,CAAC;;;;YAIzB,yBAAoB,GAAG,IAAIA,eAAY,EAAE,CAAC;YAO5C,mBAAc,GAAG,KAAK,CAAC;YAI/B,mBAAc,GAAyB2B,OAAE,CAAC,EAAE,CAAC,CAAC;SAEuC;QAErF,8CAAQ,GAAR;YACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAGd,gBAAQ,CAAC,IAAI,CAAC;aAC/B;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;YAElD,IAAI,IAAI,CAAC,WAAW,KAAKG,mBAAW,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,yBAAyB,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAACqB,qBAAW,EAAE,CAAC,CAAC;aAClG;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,yBAAyB,CAAC,kBAAkB,EAAE,CAAC;aAC3E;SACF;QAED,wDAAkB,GAAlB;;YACE,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,MAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,OAAO,0CAAE,aAAa,CAAC,KAAK,EAAE,CAAC;gBACrD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;SACF;;;;;QAMD,uDAAiB,GAAjB;YACE,OAAUvB,sBAAc,CAAC,OAAO,SAAI,IAAI,CAAC,WAAW,MAAG,CAAC;SACzD;;;;;;QAOD,gDAAU,GAAV,UAAW,YAAqB;YAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;;;;QAKD,iDAAW,GAAX;YACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;;;;QAKD,oDAAc,GAAd;YACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACxC;;;;QAKD,mDAAa,GAAb;YACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACvC;;;;QAKD,mDAAa,GAAb;YACE,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aACvC;iBAAM;gBACL,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;SACF;;;;QAKD,wDAAkB,GAAlB;YACE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;SAC3D;;;;QAKD,mDAAa,GAAb;YACE,IAAI,IAAI,CAAC,WAAW,KAAKE,mBAAW,CAAC,aAAa,IAAI,IAAI,CAAC,cAAc,EAAE;gBACzE,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;aAClC;SACF;;;sKA/KU,2BAA2B;+IAA3B,2BAA2B,8kBCpDxC,spQAgNA,82ED/JiB,CAAC,EAAE,OAAO,EAAEqC,qBAAgB,EAAE,WAAW,EAAEC,iBAAY,EAAE,CAAC;sHAG9D,2BAA2B;sBANvCrD,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,WAAW,EAAE,uCAAuC;wBACpD,aAAa,EAAE,CAAC,EAAE,OAAO,EAAEoD,qBAAgB,EAAE,WAAW,EAAEC,iBAAY,EAAE,CAAC;wBACzE,eAAe,EAAEpD,0BAAuB,CAAC,MAAM;qBAChD;iHASC,YAAY;0BADXC,QAAK;oBAMG,OAAO;0BAAfA,QAAK;oBAKG,WAAW;0BAAnBA,QAAK;oBAKG,cAAc;0BAAtBA,QAAK;oBAKG,sBAAsB;0BAA9BA,QAAK;oBAMN,QAAQ;0BADPA,QAAK;oBAOG,SAAS;0BAAjBA,QAAK;oBAKI,MAAM;0BAAfC,SAAM;oBAKG,OAAO;0BAAhBA,SAAM;oBAKG,MAAM;0BAAfA,SAAM;oBAKG,IAAI;0BAAbA,SAAM;oBAKG,kBAAkB;0BAA3BA,SAAM;oBAKG,GAAG;0BAAZA,SAAM;oBAIG,oBAAoB;0BAA7BA,SAAM;oBAKoB,eAAe;0BAAzCmD,YAAS;2BAAC,cAAc;;;IElH3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8IE,qCACmB,aAA+B,EACG,eAAyB;YAD3D,kBAAa,GAAb,aAAa,CAAkB;YACG,oBAAe,GAAf,eAAe,CAAU;YAtG9E,YAAO,GAAgC,IAAI,CAAC;YACnC,gBAAW,GAAGvC,mBAAW,CAAC;YAC1B,aAAQ,GAAG,QAAQ,CAAC;;;;YAQpB,UAAK,GAAG,CAAC,CAAC;;;;YASV,gBAAW,GAAaH,gBAAQ,CAAC,IAAI,CAAC;;;;YAIrC,gBAAW,GAAG,IAAIb,eAAY,EAAE,CAAC;;;;YAIlC,wBAAmB,GAAaa,gBAAQ,CAAC,IAAI,CAAC;;;;YAI9C,iCAA4B,GAAaA,gBAAQ,CAAC,IAAI,CAAC;;;;YAIvD,qBAAgB,GAAG,KAAK,CAAC;;;;YAIzB,mBAAc,GAAG,KAAK,CAAC;;;;YAIvB,gBAAW,GAAG,EAAE,CAAC;;;;YAIjB,yBAAoB,GAAG,EAAE,CAAC;;;;YAI1B,8BAAyB,GAAG,KAAK,CAAC;;;;YAIlC,2BAAsB,GAAG,KAAK,CAAC;;;;;YAS/B,cAAS,GAAG,IAAI,CAAC;;;;YAIjB,0BAAqB,GAAG,KAAK,CAAC;;;;YAI7B,mBAAc,GAAG,IAAIb,eAAY,EAAW,CAAC;;;;YAI7C,4BAAuB,GAAG,IAAIA,eAAY,EAAW,CAAC;;;;YAItD,0BAAqB,GAAG,IAAIA,eAAY,EAAY,CAAC;;;;YAIrD,mCAA8B,GAAG,IAAIA,eAAY,EAAY,CAAC;;;;YAI9D,uBAAkB,GAAG,IAAIA,eAAY,EAAW,CAAC;;;;YAIjD,kBAAa,GAAG,IAAIA,eAAY,EAAE,CAAC;;;;YAInC,yBAAoB,GAAG,IAAIA,eAAY,EAAE,CAAC;SAOhD;QAEJ,8CAAQ,GAAR;YACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAC5C,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE;gBACxC,IAAI,CAAC,mBAAmB,qBAAQ,IAAI,CAAC,WAAW,CAAE,CAAC;aACpD;YACD,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE;gBACjD,IAAI,CAAC,4BAA4B,qBAAQ,IAAI,CAAC,oBAAoB,CAAE,CAAC;aACtE;SACF;QAED,iDAAW,GAAX,UAAY,OAAsB;YAChC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;gBACpB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;aAC7C;SACF;;;;;QAKD,6CAAO,GAAP;YACE,OAAUc,sBAAc,CAAC,OAAO,SAAI,IAAI,CAAC,KAAK,MAAG,CAAC;SACnD;;;;;;QAMD,qDAAe,GAAf,UAAgB,YAAqB;YACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;SACrD;;;;;;QAMD,mDAAa,GAAb,UAAc,MAAe;YAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtC;;;;;;QAMD,mDAAa,GAAb,UAAc,YAAqB;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;SACnD;;;;;;QAMD,sDAAgB,GAAhB,UAAiB,YAAqB;YACpC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACxC;;;;QAID,uDAAiB,GAAjB;YACE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAACD,gBAAQ,CAAC,IAAI,CAAC,CAAC;SAChD;;;;;;QAMD,yDAAmB,GAAnB,UAAoB,WAAmB;YACrC,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;YACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC/B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;SAChD;;;;;;;QAOD,qDAAe,GAAf,UAAgB,WAAmB,EAAE,WAAwB;YAC3D,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YACjD,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAC3B,OAAO,CAAC,sBAAsB,EAAE,CAAC;YACjC,IAAI,OAAO,CAAC,KAAK,EAAE;gBACjB,IAAI,WAAW,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;oBACzC,IAAI,CAAC,mBAAmB,qBAAQ,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAE,CAAC;oBACjE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;iBAChD;qBAAM;oBACL,IAAI,CAAC,4BAA4B,qBAAQ,wBAAwB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAE,CAAC;oBACnF,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;iBACzD;aACF;SACF;;;;;;QAMD,0DAAoB,GAApB,UAAqB,WAAmB;YACtC,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC5B,IAAI,CAAC,WAAW,qBAAQ,IAAI,CAAC,mBAAmB,CAAE,CAAC;gBACnD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;aAChD;iBAAM;gBACL,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;aACvC;SACF;;;;;;QAMD,kDAAY,GAAZ,UAAa,WAAmB;YAC9B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;SAC1C;;;;;;;QAOD,oDAAc,GAAd,UAAe,OAAgB;YAC7B,OAAO,cAAc,CAAC,OAAO,CAAC,CAAC;SAChC;;;;;;;QAOD,oDAAc,GAAd,UAAe,WAAmB;YAChC,IAAM,iBAAiB,GAAI,IAAI,CAAC,aAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAE9F,IAAI,CAAC,iBAAiB,EAAE;gBACtB,OAAO,IAAI2C,gBAAW,EAAE,CAAC;aAC1B;YAED,OAAQ,iBAA+B,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SAC/D;;;;;;QAMD,+DAAyB,GAAzB,UAA0B,YAAqB;YAC7C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACjD;;;;QAID,gEAA0B,GAA1B;YACE,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC3C,gBAAQ,CAAC,IAAI,CAAC,CAAC;SACzD;;;;;;QAMD,kEAA4B,GAA5B,UAA6B,WAAmB;YAC9C,IAAI,CAAC,4BAA4B,GAAG,SAAS,CAAC;YAC9C,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC/B,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;SACzD;;;;;;QAMD,mEAA6B,GAA7B,UAA8B,WAAmB;YAC/C,IAAI,IAAI,CAAC,4BAA4B,EAAE;gBACrC,IAAI,CAAC,oBAAoB,qBAAQ,IAAI,CAAC,4BAA4B,CAAE,CAAC;gBACrE,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;aACzD;iBAAM;gBACL,IAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,CAAC;aAChD;SACF;;;;QAID,4DAAsB,GAAtB;YACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;SAClC;;;sKA7RU,2BAA2B,+DAuG5B,kCAAkC;+IAvGjC,2BAA2B,g/BC1DxC,w1VAqQA,0kFD9MiB,CAAC,EAAE,OAAO,EAAEwC,qBAAgB,EAAE,WAAW,EAAEI,WAAM,EAAE,CAAC;sHAGxD,2BAA2B;sBANvCxD,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,WAAW,EAAE,uCAAuC;wBACpD,aAAa,EAAE,CAAC,EAAE,OAAO,EAAEoD,qBAAgB,EAAE,WAAW,EAAEI,WAAM,EAAE,CAAC;wBACnE,eAAe,EAAEvD,0BAAuB,CAAC,MAAM;qBAChD;;;kCAwGIyC,SAAM;mCAAC,kCAAkC;;6BA5FnC,KAAK;0BAAbxC,QAAK;oBAKN,OAAO;0BADNA,QAAK;oBAKG,WAAW;0BAAnBA,QAAK;oBAII,WAAW;0BAApBC,SAAM;oBAIE,mBAAmB;0BAA3BD,QAAK;oBAIG,4BAA4B;0BAApCA,QAAK;oBAIG,gBAAgB;0BAAxBA,QAAK;oBAIG,cAAc;0BAAtBA,QAAK;oBAIG,WAAW;0BAAnBA,QAAK;oBAIG,oBAAoB;0BAA5BA,QAAK;oBAIG,yBAAyB;0BAAjCA,QAAK;oBAIG,sBAAsB;0BAA9BA,QAAK;oBAIG,oBAAoB;0BAA5BA,QAAK;oBAKG,SAAS;0BAAjBA,QAAK;oBAIG,qBAAqB;0BAA7BA,QAAK;oBAII,cAAc;0BAAvBC,SAAM;oBAIG,uBAAuB;0BAAhCA,SAAM;oBAIG,qBAAqB;0BAA9BA,SAAM;oBAIG,8BAA8B;0BAAvCA,SAAM;oBAIG,kBAAkB;0BAA3BA,SAAM;oBAIG,aAAa;0BAAtBA,SAAM;oBAIG,oBAAoB;0BAA7BA,SAAM;;;IEvJT;;;;;;;;;;;;;;QAgB6D,2DAAkD;QAA/G;;;;KAAA,CAA6D4C,eAAkD;kLAAlG,uCAAuC;2JAAvC,uCAAuC;sHAAvC,uCAAuC;sBAHnDH,YAAS;uBAAC;wBACT,QAAQ,EAAE,oCAAoC;qBAC/C;;;ICfD;;;;;;;;;;;;;;QAgB6D,2DAAkD;QAA/G;;;;KAAA,CAA6DG,eAAkD;kLAAlG,uCAAuC;2JAAvC,uCAAuC;sHAAvC,uCAAuC;sBAHnDH,YAAS;uBAAC;wBACT,QAAQ,EAAE,oCAAoC;qBAC/C;;;ICZD;QAAA;;;;0JAAa,eAAe;2JAAf,eAAe,iBAHX,aAAa,aAClB,aAAa;2JAEZ,eAAe;sHAAf,eAAe;sBAJ3BnC,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,aAAa,CAAC;wBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;qBACzB;;;ICUD;;;;;;QAuBA;;;;mKAAa,wBAAwB;oKAAxB,wBAAwB,iBAjBpB,2BAA2B,EAAE,uCAAuC,aAGjFH,eAAY;YACZE,gBAAW;YACXwC,eAAU;YACVC,iBAAY;YACZQ,oBAAe;YACfC,6BAA0B;YAC1B,iBAAiB;YACjBC,wBAAmB;YACnBtD,eAAY;YACZ,wBAAwB;YACxB8C,gBAAa;YACb,eAAe,aAbP,2BAA2B,EAAE,uCAAuC;oKAgBnE,wBAAwB,YAf1B;gBACP7C,eAAY;gBACZE,gBAAW;gBACXwC,eAAU;gBACVC,iBAAY;gBACZQ,oBAAe;gBACfC,6BAA0B;gBAC1B,iBAAiB;gBACjBC,wBAAmB;gBACnBtD,eAAY;gBACZ,wBAAwB;gBACxB8C,gBAAa;gBACb,eAAe;aAChB;sHAEU,wBAAwB;sBAlBpC1C,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,2BAA2B,EAAE,uCAAuC,CAAC;wBACpF,OAAO,EAAE,CAAC,2BAA2B,EAAE,uCAAuC,CAAC;wBAC/E,OAAO,EAAE;4BACPH,eAAY;4BACZE,gBAAW;4BACXwC,eAAU;4BACVC,iBAAY;4BACZQ,oBAAe;4BACfC,6BAA0B;4BAC1B,iBAAiB;4BACjBC,wBAAmB;4BACnBtD,eAAY;4BACZ,wBAAwB;4BACxB8C,gBAAa;4BACb,eAAe;yBAChB;qBACF;;;ICzBD;;;;;;QAoBA;;;;mKAAa,wBAAwB;oKAAxB,wBAAwB,iBAdpB,2BAA2B,EAAE,uCAAuC,aAGjF7C,eAAY;YACZE,gBAAW;YACXiD,oBAAe;YACfG,iCAA4B;YAC5BF,6BAA0B;YAC1B,wBAAwB;YACxB,qBAAqB;YACrB,kBAAkB;YAClB,mBAAmB,aAVX,2BAA2B,EAAE,uCAAuC;oKAanE,wBAAwB,YAZ1B;gBACPpD,eAAY;gBACZE,gBAAW;gBACXiD,oBAAe;gBACfG,iCAA4B;gBAC5BF,6BAA0B;gBAC1B,wBAAwB;gBACxB,qBAAqB;gBACrB,kBAAkB;gBAClB,mBAAmB;aACpB;sHAEU,wBAAwB;sBAfpCjD,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,2BAA2B,EAAE,uCAAuC,CAAC;wBACpF,OAAO,EAAE,CAAC,2BAA2B,EAAE,uCAAuC,CAAC;wBAC/E,OAAO,EAAE;4BACPH,eAAY;4BACZE,gBAAW;4BACXiD,oBAAe;4BACfG,iCAA4B;4BAC5BF,6BAA0B;4BAC1B,wBAAwB;4BACxB,qBAAqB;4BACrB,kBAAkB;4BAClB,mBAAmB;yBACpB;qBACF;;;IC7BD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA6I6D,2DAG5D;QAHD;;;;KAAA,CAA6DX,eAG5D;kLAHY,uCAAuC;2JAAvC,uCAAuC;sHAAvC,uCAAuC;sBAHnDH,YAAS;uBAAC;wBACT,QAAQ,EAAE,oCAAoC;qBAC/C;;;IC1ID;;;;;;;;;;;;;;;;;;;;QAmBA;YAKE,YAAO,GAAgC,IAAI,CAAC;;;;;YAUnC,aAAQ,GAAG,IAAI,CAAC;;;;YAIhB,gBAAW,GAAG,KAAK,CAAC;SA2B9B;QAzBC,sBAAI,gDAAO;iBAAX;gBACE,OAAO,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC7C;;;WAAA;;;;;;;QAOD,iDAAW,GAAX,UAAY,OAA2B;YACrC,OAAO,eAAe,CAAC,OAAO,CAAC,CAAC;SACjC;;;;;;;QAOD,0DAAoB,GAApB,UAAqB,OAA2B;YAC9C,OAAO,wBAAwB,CAAC,OAAO,CAAC,CAAC;SAC1C;QAED,kDAAY,GAAZ,UAAa,KAAa;YACxB,OAAO,KAAK,CAAC;SACd;;;sKAzCU,2BAA2B;+IAA3B,2BAA2B,oKC5BxC,i1HAkFA;sHDtDa,2BAA2B;sBAJvC5C,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,WAAW,EAAE,uCAAuC;qBACrD;kCAOC,WAAW;0BADVE,QAAK;oBAMG,QAAQ;0BAAhBA,QAAK;oBAIG,WAAW;0BAAnBA,QAAK;;;;QE9BR;;;;mKAAa,wBAAwB;oKAAxB,wBAAwB,iBAJpB,2BAA2B,EAAE,uCAAuC,aAEzEI,eAAY,EAAE2C,iBAAY,EAAE,wBAAwB,EAAE,qBAAqB,aAD3E,2BAA2B,EAAE,uCAAuC;oKAGnE,wBAAwB,YAF1B,CAAC3C,eAAY,EAAE2C,iBAAY,EAAE,wBAAwB,EAAE,qBAAqB,CAAC;sHAE3E,wBAAwB;sBALpCxC,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,2BAA2B,EAAE,uCAAuC,CAAC;wBACpF,OAAO,EAAE,CAAC,2BAA2B,EAAE,uCAAuC,CAAC;wBAC/E,OAAO,EAAE,CAACH,eAAY,EAAE2C,iBAAY,EAAE,wBAAwB,EAAE,qBAAqB,CAAC;qBACvF;;;ICPD;;;;;;;;;;;;;;;;;;;;;;;;QAoEE,sCAA6B,aAA+B;YAA/B,kBAAa,GAAb,aAAa,CAAkB;YAtC5D,YAAO,GAAiC,IAAI,CAAC;YAC7C,0BAAqB,GAAGpC,sBAAc,CAAC,OAAO,CAAC;;;;YAiBtC,wBAAmB,GAAG,KAAK,CAAC;;;;YAa3B,sBAAiB,GAAG,IAAId,eAAY,EAAW,CAAC;;;;;YAKhD,eAAU,GAAG,IAAIA,eAAY,EAAY,CAAC;SAEY;QAEhE,+CAAQ,GAAR;YACE,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAChC,IAAI,CAAC,eAAe,qBAAQ,IAAI,CAAC,OAAO,CAAE,CAAC;aAC5C;SACF;;;;;;;QAOD,qDAAc,GAAd,UAAe,WAAmB;YAChC,IAAM,iBAAiB,GAAI,IAAI,CAAC,aAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAC9F,IAAI,iBAAiB,EAAE;gBACrB,OAAQ,iBAA+B,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC/D;YAED,OAAO,IAAI,CAAC;SACb;;;;;;QAMD,4CAAK,GAAL,UAAM,WAAmB;YACvB,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YACrD,IAAI,WAAW,EAAE;gBACf,WAAW,CAAC,KAAK,EAAE,CAAC;aACrB;SACF;;;;;;;QAOD,sDAAe,GAAf,UAAgB,WAAmB;YACjC,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YACjD,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,gBAAgB,EAAE,CAAC;gBAC3B,OAAO,CAAC,sBAAsB,EAAE,CAAC;gBACjC,IAAI,OAAO,CAAC,KAAK,EAAE;oBACjB,IAAI,CAAC,eAAe,qBAAQ,OAAO,CAAC,KAAK,CAAE,CAAC;oBAC5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAACa,gBAAQ,CAAC,IAAI,CAAC,CAAC;iBACrC;aACF;SACF;;;;;;QAMD,mDAAY,GAAZ,UAAa,YAAqB;YAChC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC3C;;;;QAID,oDAAa,GAAb;YACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;SACrC;;;;;;QAMD,uDAAgB,GAAhB,UAAiB,WAAmB;YAClC,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,OAAO,qBAAQ,IAAI,CAAC,eAAe,CAAE,CAAC;gBAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;aACnC;SACF;;;;;;QAMD,sDAAe,GAAf,UAAgB,WAAmB;YACjC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YACjC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAACA,gBAAQ,CAAC,IAAI,CAAC,CAAC;SACrC;;;uKA7HU,4BAA4B;gJAA5B,4BAA4B,8TClCzC,ylJAsHA,+2DDvFiB,CAAC,EAAE,OAAO,EAAEwC,qBAAgB,EAAE,WAAW,EAAEI,WAAM,EAAE,CAAC;sHAGxD,4BAA4B;sBANxCxD,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,WAAW,EAAE,wCAAwC;wBACrD,aAAa,EAAE,CAAC,EAAE,OAAO,EAAEoD,qBAAgB,EAAE,WAAW,EAAEI,WAAM,EAAE,CAAC;wBACnE,eAAe,EAAEvD,0BAAuB,CAAC,MAAM;qBAChD;wHAWC,QAAQ;0BADPC,QAAK;oBAMN,OAAO;0BADNA,QAAK;oBAKG,mBAAmB;0BAA3BA,QAAK;oBAKN,OAAO;0BADNA,QAAK;oBAKG,oBAAoB;0BAA5BA,QAAK;oBAII,iBAAiB;0BAA1BC,SAAM;oBAKG,UAAU;0BAAnBA,SAAM;;;IEnET;;;;;;;;;;;;;;QAgB8D,4DAAmD;QAAjH;;;;KAAA,CAA8D4C,eAAmD;mLAApG,wCAAwC;4JAAxC,wCAAwC;sHAAxC,wCAAwC;sBAHpDH,YAAS;uBAAC;wBACT,QAAQ,EAAE,qCAAqC;qBAChD;;;ICPD;;;;;;QAmBA;;;;oKAAa,yBAAyB;qKAAzB,yBAAyB,iBAbrB,4BAA4B,EAAE,wCAAwC,aAGnFpC,gBAAW;YACXiD,oBAAe;YACfG,iCAA4B;YAC5BC,mBAAgB;YAChB,wBAAwB;YACxBvD,eAAY;YACZ,kBAAkB;YAClB,iBAAiB,aATT,4BAA4B,EAAE,wCAAwC;qKAYrE,yBAAyB,YAX3B;gBACPE,gBAAW;gBACXiD,oBAAe;gBACfG,iCAA4B;gBAC5BC,mBAAgB;gBAChB,wBAAwB;gBACxBvD,eAAY;gBACZ,kBAAkB;gBAClB,iBAAiB;aAClB;sHAEU,yBAAyB;sBAdrCG,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,4BAA4B,EAAE,wCAAwC,CAAC;wBACtF,OAAO,EAAE,CAAC,4BAA4B,EAAE,wCAAwC,CAAC;wBACjF,OAAO,EAAE;4BACPD,gBAAW;4BACXiD,oBAAe;4BACfG,iCAA4B;4BAC5BC,mBAAgB;4BAChB,wBAAwB;4BACxBvD,eAAY;4BACZ,kBAAkB;4BAClB,iBAAiB;yBAClB;qBACF;;;IC1BD;;;;;;;;;;;;;;;QAcA;YAgBU,QAAG,GAAG,IAAIsB,YAAO,EAAE,CAAC;YACpB,oBAAe,GAAG,IAAIA,YAAO,EAAU,CAAC;YAChD,eAAU,GAAG,EAAE,CAAC;;;;YAKP,iBAAY,GAAG,GAAG,CAAC;;;;YAKnB,gBAAW,GAAG,QAAQ,CAAC;;;;YAKX,cAAS,GAAY,SAAS,CAAC;;;;YAK1C,mBAAc,GAAG,IAAI7B,eAAY,EAAU,CAAC;SAkCvD;QAhCC,0CAAQ,GAAR;YAAA,iBAMC;YALC,IAAI,CAAC,eAAe;iBACjB,IAAI,CAACwC,mBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAEuB,sBAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAAEC,8BAAoB,EAAE,CAAC;iBAClF,SAAS,CAAC,UAAC,IAAY;gBACtB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC,CAAC,CAAC;SACN;;;;;;QAOD,gDAAc,GAAd,UAAe,KAAa;YAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClC;;;;QAKD,gDAAc,GAAd;YACE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC/B;;;;QAKD,6CAAW,GAAX;YACE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;SACrB;;;kKAxDU,uBAAuB;2IAAvB,uBAAuB,kOAbxB,wVAWT;sHAEU,uBAAuB;sBAfnC/D,YAAS;uBAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,wVAWT;qBACF;kCASU,YAAY;0BAApBE,QAAK;oBAKG,WAAW;0BAAnBA,QAAK;oBAKe,SAAS;0BAA7BA,QAAK;2BAAC,YAAY;oBAKT,cAAc;0BAAvBC,SAAM;;;ICnDT;;;;;QASA;;;;+JAAa,oBAAoB;gKAApB,oBAAoB,iBAJhB,uBAAuB,aAE5BK,gBAAW,EAAEwD,oBAAe,aAD5B,uBAAuB;gKAGtB,oBAAoB,YAFtB,CAACxD,gBAAW,EAAEwD,oBAAe,CAAC;sHAE5B,oBAAoB;sBALhCvD,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;wBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;wBAClC,OAAO,EAAE,CAACD,gBAAW,EAAEwD,oBAAe,CAAC;qBACxC;;;ICVD;;;;;;;;;;;;;;QAaA;;;;YASW,YAAO,GAAqB,EAAE,CAAC;;;;YAK/B,cAAS,GAAG,KAAK,CAAC;SAC5B;;;+JAVY,oBAAoB;wIAApB,oBAAoB,0HCrBjC,8oDAiCA;sHDZa,oBAAoB;sBALhChE,YAAS;uBAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,WAAW,EAAE,6BAA6B;wBAC1C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;kCAKU,OAAO;0BAAfC,QAAK;oBAKG,SAAS;0BAAjBA,QAAK;;;IE3BR;;;;;;;;;;;;;;QAaA;;;;YAuCW,YAAO,GAAsB,EAAE,CAAC;;;;YAKhC,cAAS,GAAG,KAAK,CAAC;SAC5B;;;0KAVY,+BAA+B;mJAA/B,+BAA+B,sIAjChC,60CA+BT;sHAEU,+BAA+B;sBAnC3CF,YAAS;uBAAC;wBACT,QAAQ,EAAE,6BAA6B;wBACvC,QAAQ,EAAE,60CA+BT;qBACF;kCAKU,OAAO;0BAAfE,QAAK;oBAKG,SAAS;0BAAjBA,QAAK;;;ICpDR;;;;;;QAUA;;;;4JAAa,iBAAiB;6JAAjB,iBAAiB,iBAJb,oBAAoB,EAAE,+BAA+B,aAC1D+D,kBAAa,EAAEjB,eAAU,EAAE1C,eAAY,EAAE4D,sBAAiB,aAC1D,oBAAoB,EAAE,+BAA+B;6JAEpD,iBAAiB,YAHnB,CAACD,kBAAa,EAAEjB,eAAU,EAAE1C,eAAY,EAAE4D,sBAAiB,CAAC;sHAG1D,iBAAiB;sBAL7BzD,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,oBAAoB,EAAE,+BAA+B,CAAC;wBACrE,OAAO,EAAE,CAACwD,kBAAa,EAAEjB,eAAU,EAAE1C,eAAY,EAAE4D,sBAAiB,CAAC;wBACrE,OAAO,EAAE,CAAC,oBAAoB,EAAE,+BAA+B,CAAC;qBACjE;;;ICbD;;;;;QAIA;;;;YAKE,kBAAa,GAAkB,KAAK,CAAC;;;;YAU5B,qBAAgB,GAAGC,iBAAY,CAAC;;;;YAMzC,SAAI,GAAG,IAAIpE,eAAY,EAAa,CAAC;SAYtC;;;;;;QALC,yCAAM,GAAN,UAAO,KAAgB;YACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;YACxD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,SAAS,IAAI,MAAM,CAAC;YAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACvB;;;mKA/BmB,wBAAwB;4IAAxB,wBAAwB;sHAAxB,wBAAwB;sBAD7C6C,YAAS;kCAqBR,IAAI;0BADHzC,SAAM;;;;QCvBT;;QACE,gCAAS,GAAT,UAAU,KAAa,EAAE,UAAkB,EAAE,aAAqB;YAChE,IAAM,iBAAiB,GAAG,aAAa,IAAI,aAAa,KAAK,MAAM,GAAG,YAAY,GAAG,WAAW,CAAC;YAEjG,OAAO,UAAU,KAAK,KAAK,CAAC,WAAW,EAAE,GAAG,iBAAiB,GAAG,IAAI,CAAC;SACtE;;;uJALU,YAAY;qJAAZ,YAAY;sHAAZ,YAAY;sBAHxB0C,OAAI;uBAAC;wBACJ,IAAI,EAAE,aAAa;qBACpB;;;;QCKD;;;;6JAAa,kBAAkB;8JAAlB,kBAAkB,iBAJd,YAAY,aACjBvC,eAAY,aACZ,YAAY;8JAEX,kBAAkB,YAHpB,CAACA,eAAY,CAAC;sHAGZ,kBAAkB;sBAL9BG,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,YAAY,CAAC;wBAC5B,OAAO,EAAE,CAACH,eAAY,CAAC;wBACvB,OAAO,EAAE,CAAC,YAAY,CAAC;qBACxB;;;;QCHD;;QACE,qCAAS,GAAT,UAAU,KAAa,EAAE,UAAkB,EAAE,aAAqB;YAChE,OAAO,UAAU,KAAK,KAAK,CAAC,WAAW,EAAE,GAAG,aAAa,GAAG,EAAE,CAAC;SAChE;;;4JAHU,iBAAiB;0JAAjB,iBAAiB;sHAAjB,iBAAiB;sBAH7BuC,OAAI;uBAAC;wBACJ,IAAI,EAAE,cAAc;qBACrB;;;;QCKD;;;;kKAAa,uBAAuB;mKAAvB,uBAAuB,iBAJnB,iBAAiB,aACtBvC,eAAY,aACZ,iBAAiB;mKAEhB,uBAAuB,YAHzB,CAACA,eAAY,CAAC;sHAGZ,uBAAuB;sBALnCG,WAAQ;uBAAC;wBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;wBACjC,OAAO,EAAE,CAACH,eAAY,CAAC;wBACvB,OAAO,EAAE,CAAC,iBAAiB,CAAC;qBAC7B;;;ICRD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}