{"version":3,"file":"backbase-contact-common-ang.js","sources":["../../../../libs/contact-common-ang/src/lib/components/confirm-action-dialog/confirm-action-dialog.component.ts","../../../../libs/contact-common-ang/src/lib/components/confirm-action-dialog/confirm-action-dialog.component.html","../../../../libs/contact-common-ang/src/lib/components/confirm-action-dialog/confirm-action-dialog.module.ts","../../../../libs/contact-common-ang/src/lib/models/types.ts","../../../../libs/contact-common-ang/src/lib/helpers/address.ts","../../../../libs/contact-common-ang/src/lib/constants.ts","../../../../libs/contact-common-ang/src/lib/helpers/mappers.ts","../../../../libs/contact-common-ang/src/lib/services/contact-http.service.ts","../../../../libs/contact-common-ang/src/lib/services/contact.service.ts","../../../../libs/contact-common-ang/src/lib/config.providers.ts","../../../../libs/contact-common-ang/src/lib/services/contact-country-list.service.ts","../../../../libs/contact-common-ang/src/lib/services/providers.ts","../../../../libs/contact-common-ang/src/lib/services/approval-http.service.ts","../../../../libs/contact-common-ang/src/lib/services/contact-discard-changes.service.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/countrySpec.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/helpers.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/bigIntegerMod.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/index.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/iban-validator.directive.ts","../../../../libs/contact-common-ang/src/lib/directives/iban-validator/iban-validator.module.ts","../../../../libs/contact-common-ang/src/lib/directives/email-domain/email-domain-validator.directive.ts","../../../../libs/contact-common-ang/src/lib/directives/email-domain/email-domain.module.ts","../../../../libs/contact-common-ang/src/lib/helpers/date.ts","../../../../libs/contact-common-ang/src/lib/pipes/relative-date/relative-date.pipe.ts","../../../../libs/contact-common-ang/src/lib/pipes/relative-date/relative-date.module.ts","../../../../libs/contact-common-ang/src/lib/helpers/forms.ts","../../../../libs/contact-common-ang/src/lib/directives/no-white-space-validator/no-white-space.directive.ts","../../../../libs/contact-common-ang/src/lib/directives/no-white-space-validator/no-white-space.module.ts","../../../../libs/contact-common-ang/src/lib/components/country-item/country-item.directive.ts","../../../../libs/contact-common-ang/src/lib/components/country-item/country-item.component.ts","../../../../libs/contact-common-ang/src/lib/components/country-item/country-item.component.html","../../../../libs/contact-common-ang/src/lib/components/country-item/country-item.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-full-address/contact-full-address.directive.ts","../../../../libs/contact-common-ang/src/lib/components/contact-full-address/contact-full-address.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-full-address/contact-full-address.module.ts","../../../../libs/contact-common-ang/src/lib/components/account-card-view/account-card-view.directive.ts","../../../../libs/contact-common-ang/src/lib/components/account-card-view/account-card-view.component.ts","../../../../libs/contact-common-ang/src/lib/components/account-card-view/account-card-view.component.html","../../../../libs/contact-common-ang/src/lib/components/account-card-view/account-card-view.module.ts","../../../../libs/contact-common-ang/src/lib/pipes/camel-case/camel-case.pipe.ts","../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.component.html","../../../../libs/contact-common-ang/src/lib/components/contact-account-data/contact-account-data.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-account-data/contact-account-data.component.html","../../../../libs/contact-common-ang/src/lib/components/contact-account-data/contact-account-data.directive.ts","../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.directive.ts","../../../../libs/contact-common-ang/src/lib/pipes/camel-case/camel-case.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-address-data/contact-address-data.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-account-data/contact-account-data.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-item-details/contact-item-details.directive.ts","../../../../libs/contact-common-ang/src/lib/components/contact-item-details/contact-item-details.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-item-details/contact-item-details.component.html","../../../../libs/contact-common-ang/src/lib/components/contact-item-details/contact-item-details.module.ts","../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.component.ts","../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.component.html","../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.directive.ts","../../../../libs/contact-common-ang/src/lib/components/contact-personal-data/contact-personal-data.module.ts","../../../../libs/contact-common-ang/src/lib/components/debounce-search/debounce-search.component.ts","../../../../libs/contact-common-ang/src/lib/components/debounce-search/debounce-search.module.ts","../../../../libs/contact-common-ang/src/lib/components/approval-log/approval-log.component.ts","../../../../libs/contact-common-ang/src/lib/components/approval-log/approval-log.component.html","../../../../libs/contact-common-ang/src/lib/components/approval-log/approval-log-collapsible.component.ts","../../../../libs/contact-common-ang/src/lib/components/approval-log/approval-log.module.ts","../../../../libs/contact-common-ang/src/lib/components/request-list-base/request-list-base.component.ts","../../../../libs/contact-common-ang/src/lib/pipes/sort-pipes/aria-sort.pipe.ts","../../../../libs/contact-common-ang/src/lib/pipes/sort-pipes/aria-sort-pipe.module.ts","../../../../libs/contact-common-ang/src/lib/pipes/sort-pipes/direction-sort.pipe.ts","../../../../libs/contact-common-ang/src/lib/pipes/sort-pipes/direction-sort-pipe.module.ts","../../../../libs/contact-common-ang/src/backbase-contact-common-ang.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * The component is for showing confirmation dialog\n *\n *\n * @usageNotes\n *\n * ### Display confirmation dialog\n *\n * ```html\n *  <bb-confirm-action-dialog\n *   [isOpen]=\"hostRef.isCancelCreateConfirmOpened\"\n *   [confirmButtonColor]=\"'danger'\"\n *   (confirm)=\"hostRef.onExitCreateContact()\"\n *   (cancel)=\"hostRef.onResumeCreateContact()\"\n * >\n *   <span title i18n=\"@@contact-create.confirm-action-dialog.title\">Discard entered data?</span>\n *   <span body i18n=\"@@contact-create.confirm-action-dialog.body\">\n *      Are you sure to exit creation of a new contact? The data you have entered will be lost.</span>\n *   <span cancelButtonLabel i18n=\"@@contact-create.confirm-action-dialog.button.cancel\">Not now</span>\n *   <span confirmButtonLabel i18n=\"@@contact-create.confirm-action-dialog.button.confirm\">Discard</span>\n * </bb-confirm-action-dialog>\n * ```\n * @ngModule ConfirmActionDialogModule\n */\n@Component({\n  selector: 'bb-confirm-action-dialog',\n  templateUrl: 'confirm-action-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmActionDialogComponent implements OnChanges {\n  readonly modalOptions: NgbModalOptions = {\n    backdrop: 'static',\n    keyboard: false,\n  };\n  comment = '';\n\n  /**\n   * The button color for confirm button\n   * Default value is `primary`.\n   */\n  @Input() confirmButtonColor? = 'primary';\n\n  /**\n   * The button color for cancel button\n   * Default value is `link`.\n   */\n  @Input() cancelButtonColor? = 'link';\n\n  /**\n   * Indicator for confirmation dialog open state.\n   * Default value is `false`.\n   */\n  @Input() isOpen = false;\n\n  /**\n   * Whether comment input should be shown\n   */\n  @Input() attachComment = false;\n\n  /**\n   * Text for comment field label\n   */\n  @Input() commentFieldLabel = 'Add comment';\n\n  /**\n   * Event triggered when confirming the action\n   */\n  @Output() confirm = new EventEmitter<{ comment?: string }>();\n\n  /**\n   * Event triggered when cancelling the action\n   */\n  @Output() cancel = new EventEmitter<void>();\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.isOpen) {\n      this.comment = '';\n    }\n  }\n\n  /**\n   * Emits the cancel event\n   */\n  onClickCancel() {\n    this.cancel.emit();\n  }\n\n  /**\n   * Emits the confirm event.\n   */\n  onClickConfirm() {\n    this.confirm.emit({ comment: this.comment });\n  }\n}\n","<bb-modal-ui\n  [isOpen]=\"isOpen\"\n  [modalOptions]=\"modalOptions\"\n  aria-labelledby=\"contact-confirm-action-dialog-header\"\n  aria-describedby=\"contact-confirm-action-dialog-body\"\n>\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h1 class=\"modal-title\" data-role=\"confirm-action-header\" id=\"contact-confirm-action-dialog-header\">\n        <ng-content select=\"[title]\"></ng-content>\n      </h1>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div [ngClass]=\"{ 'bb-block bb-block--md': attachComment }\" id=\"contact-confirm-action-dialog-body\">\n        <ng-content select=\"[body]\"></ng-content>\n      </div>\n\n      <ng-container *ngIf=\"attachComment && isOpen\">\n        <label #commentLabel id=\"contact-approval-log-comment-label\" i18n=\"@@bb-confirmation-dialog.comment\"\n          >{{ commentFieldLabel }}</label\n        >\n        <span id=\"comment-optional-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@bb-confirmation-dialog.comment.optional-label\">Optional</ng-container>)\n        </span>\n        <bb-textarea-ui\n          wrap=\"hard\"\n          [rows]=\"3\"\n          [cols]=\"50\"\n          [minLength]=\"3\"\n          [maxLength]=\"140\"\n          [(ngModel)]=\"comment\"\n          [aria-labelledby]=\"commentLabel.id\"\n          aria-describedby=\"comment-optional-info\"\n          showCharCounter=\"true\"\n          data-role=\"confirmation-comment\"\n        ></bb-textarea-ui>\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"confirmButtonColor\"\n          (click)=\"onClickConfirm()\"\n          data-role=\"confirm-action-confirm-btn\"\n        >\n          <ng-content select=\"[confirmButtonLabel]\"></ng-content>\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          [color]=\"cancelButtonColor\"\n          (click)=\"onClickCancel()\"\n          data-role=\"confirm-action-cancel-btn\"\n        >\n          <ng-content select=\"[cancelButtonLabel]\"></ng-content>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { NgModule } from '@angular/core';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { ConfirmActionDialogComponent } from './confirm-action-dialog.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TextareaModule } from '@backbase/ui-ang/textarea';\n\n/**\n * Exports ConfirmActionDialogComponent\n */\n@NgModule({\n  declarations: [ConfirmActionDialogComponent],\n  exports: [ConfirmActionDialogComponent],\n  imports: [ModalModule, ButtonModule, CommonModule, TextareaModule, FormsModule],\n})\nexport class ConfirmActionDialogModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\n\nimport {\n  ApprovalGetResponseBodyItem,\n  ApprovalsCreatedByMeGetResponseBodyItem,\n  ContactGetResponseBody,\n  Data,\n  ApprovalSort,\n  SortDirection,\n} from '@backbase/data-ang/contact-manager';\n\nexport declare type Contacts = Array<ContactGetResponseBody>;\nexport declare type ApprovalItemsCreatedByMe = Array<ApprovalsCreatedByMeGetResponseBodyItem>;\nexport declare type ApprovalItems = Array<ApprovalGetResponseBodyItem>;\nexport interface Additions {\n  [key: string]: any;\n}\n\nexport interface Customizable {\n  additions?: Additions;\n}\n\nexport {\n  ContactGetResponseBody as ContactItem,\n  ContactPutResponseBody as ApprovalRequired,\n  ContactPutResponseBody as ContactUpdateDeleteResponse,\n  ContactPutRequestBody as Contact,\n} from '@backbase/data-ang/contact-manager';\n\nexport { GetApprovalDetailsResponse as ApprovalDetails } from '@backbase/data-ang/approvals';\nexport { RecordDto as ApprovalRecord } from '@backbase/data-ang/approvals';\n\nexport enum LoadMoreMethod {\n  LOAD_MORE = 'load-more',\n  PAGINATION = 'pagination',\n}\n\nexport enum ContactActions {\n  Load,\n  Refresh,\n  LoadMore,\n  ChangePage,\n  Search,\n  Sort,\n}\n\nexport interface ContactRequestParameters {\n  /**\n   * fetch data from page number.\n   */\n  from?: number;\n  /**\n   * Size of the page\n   */\n  size?: number;\n  /**\n   * search query\n   */\n  query?: string;\n\n  /**\n   * Sorted Column\n   */\n  sort?: ApprovalSort;\n\n  /**\n   * Direction\n   */\n  direction?: SortDirection;\n}\n\nexport interface ContactState {\n  /**\n   * contact user action.\n   */\n  action?: ContactActions;\n  /**\n   * data from page number.\n   */\n  from?: number;\n  /**\n   * page Size\n   */\n  pageSize?: number;\n  /**\n   * load more method.\n   */\n  loadMoreMethod?: LoadMoreMethod;\n  /**\n   * search term query\n   */\n  query?: string;\n\n  sort?: ApprovalSort;\n\n  direction?: SortDirection;\n}\n\nexport interface ContactResponse {\n  /**\n   * total contacts\n   */\n  totalCount: number;\n  /**\n   * Contacts in a list\n   */\n  items: Contacts;\n}\n\nexport interface ExtendedContactResponse extends ContactResponse {\n  /**\n   * if the loadmoreMethod is load-more\n   */\n  isLoadMore: boolean;\n}\n\ninterface ErrorItem extends Customizable {\n  message?: string;\n  key?: string;\n  context?: Record<string, unknown>;\n}\n\nexport class ContactsError {\n  message!: string;\n  status?: number;\n  errors?: ErrorItem[];\n  additions?: Additions;\n  constructor(private readonly errorResponse?: HttpErrorResponse) {\n    if (this.errorResponse) {\n      const { status, error } = this.errorResponse;\n      this.status = status;\n      if (error) {\n        this.message = error.message || '';\n        this.errors = error.errors || [];\n        this.additions = error.additions || {};\n      }\n    }\n  }\n}\n\nexport interface ApprovalsCreatedByMe {\n  /**\n   * ApprovalsItems in a list created by me\n   */\n  items: ApprovalItemsCreatedByMe;\n  /**\n   * total number of items in the list\n   */\n  totalCount: number;\n}\n\nexport interface Approvals {\n  /**\n   * ApprovalsItems in a list\n   */\n  items: ApprovalItems;\n  /**\n   * total number of items in the list\n   */\n  totalCount: number;\n}\n\nexport interface Address {\n  /**\n   * address line 1 of contact address\n   */\n  addressLine1?: string;\n  /**\n   * address line 2 of contact address\n   */\n  addressLine2?: string;\n  /**\n   * street name of contact address\n   */\n  streetName?: string;\n  /**\n   * town of contact address\n   */\n  town?: string;\n  /**\n   * postal code of contact address\n   */\n  postCode?: string;\n  /**\n   * country sub division of contact address\n   */\n  countrySubDivision?: string;\n  /**\n   * country of contact address\n   */\n  country?: string;\n}\n\nexport enum ViewType {\n  CARD = 'CARD',\n  FORM = 'FORM',\n}\n\nexport enum InputGroupName {\n  CONTACT = 'contactDetails',\n  ACCOUNT = 'accountDetails',\n  ADDRESS = 'addressDetails',\n}\n\nexport enum InputName {\n  COPY_CONTACT_ADDRESS = 'copyContactAddress',\n}\n\nexport enum AddressType {\n  CONTACT = '',\n  BANK = 'bank',\n  ACCOUNTHOLDER = 'accountHolder',\n}\n\nexport class ContactFormGroupItem {\n  viewType?: ViewType = ViewType.FORM;\n  data?: Record<string, any> = {};\n  bankAddressViewType?: ViewType = ViewType.FORM;\n  accountHolderAddressViewType?: ViewType = ViewType.FORM;\n  isAddBankAddress? = false;\n  isAddAccountHolderAddress? = false;\n  accountHolderAddress?: Address = {};\n  bankAddress?: Address = {};\n  isCopyAddress? = false;\n  isContactAddressCopied? = false;\n}\n\nexport enum AccessContextScope {\n  USER = 'USER',\n  SA = 'SA',\n  LE = 'LE',\n}\n\nexport enum ActiveContactStatus {\n  ACTIVE = 'ACTIVE',\n  PENDING_APPROVAL = 'PENDING_APPROVAL',\n}\n\nexport enum ContactUpdateDeleteStatus {\n  APPROVAL_REQUIRED = 'APPROVAL_REQUIRED',\n  REQUEST_ACCEPTED = 'REQUEST_ACCEPTED',\n  REJECTED = 'REJECTED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n  CANCELLED = 'CANCELLED',\n}\n\nexport enum ApprovalStatus {\n  OPEN = 'OPEN',\n  CLOSED = 'CLOSED',\n  INVALID = 'INVALID',\n  VALID = 'VALID',\n  ENTERED = 'ENTERED',\n  READY = 'READY',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n}\n\nexport interface Id extends Customizable {\n  id: string;\n}\n\nexport interface AccountInformation {\n  name?: string;\n  alias?: string;\n  accountNumber?: string;\n  IBAN?: string;\n  accountType?: string;\n  BIC?: string;\n  bankCode?: string;\n  bankName?: string;\n  bankAddressLine1?: string;\n  bankAddressLine2?: string;\n  bankStreetName?: string;\n  bankTown?: string;\n  bankPostCode?: string;\n  bankCountrySubDivision?: string;\n  bankCountry?: string;\n  accountHolderAddressLine1?: string;\n  accountHolderAddressLine2?: string;\n  accountHolderStreetName?: string;\n  accountHolderTown?: string;\n  accountHolderPostCode?: string;\n  accountHolderCountrySubDivision?: string;\n  accountHolderCountry?: string;\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport interface ApprovalItemCreatedByMe {\n  creationTime: string;\n  creatorBbId: string;\n  data: Data;\n  id: string;\n  action: string;\n  status: string;\n}\n","import { Address, AddressType } from '../models/types';\n\nexport const toCamelCase = (str = '') => {\n  return str.substr(0, 1).toLowerCase() + str.substr(1);\n};\n\nconst addressFrom = (address: any, type: AddressType): Address => ({\n  addressLine1: address[toCamelCase(`${type}AddressLine1`)],\n  addressLine2: address[toCamelCase(`${type}AddressLine2`)],\n  streetName: address[toCamelCase(`${type}StreetName`)],\n  postCode: address[toCamelCase(`${type}PostCode`)],\n  town: address[toCamelCase(`${type}Town`)],\n  countrySubDivision: address[toCamelCase(`${type}CountrySubDivision`)],\n  country: address[toCamelCase(`${type}Country`)],\n});\n\nexport const addressFromContact = (address: any): Address => addressFrom(address, AddressType.CONTACT);\n\nexport const addressFromBank = (address: any): Address => addressFrom(address, AddressType.BANK);\n\nexport const addressFromAccountHolder = (address: any): Address => addressFrom(address, AddressType.ACCOUNTHOLDER);\n\nexport const isObjectTruthy = <T, K extends keyof T>(obj: T): boolean => {\n  return Object.keys(obj).some((key) => !!obj[key as K]);\n};\n\nexport const addressToString = (address: Address) =>\n  [\n    address[`addressLine1`],\n    address[`addressLine2`],\n    address[`streetName`],\n    address[`postCode`],\n    address[`town`],\n    address[`countrySubDivision`],\n  ]\n    .filter(Boolean)\n    .join(', ');\n","import { AccessContextScope } from './models/types';\n\nexport const Countries = [\n  'AR',\n  'AU',\n  'AT',\n  'BE',\n  'BR',\n  'CA',\n  'CN',\n  'CO',\n  'HR',\n  'CZ',\n  'DK',\n  'EC',\n  'EG',\n  'ET',\n  'FR',\n  'DE',\n  'GR',\n  'HN',\n  'HK',\n  'HU',\n  'IN',\n  'ID',\n  'IE',\n  'IT',\n  'JM',\n  'MY',\n  'MX',\n  'MA',\n  'NA',\n  'NL',\n  'NZ',\n  'NO',\n  'PL',\n  'PT',\n  'RU',\n  'SN',\n  'SG',\n  'ZA',\n  'ES',\n  'LK',\n  'SE',\n  'TH',\n  'TR',\n  'UG',\n  'AE',\n  'GB',\n  'US',\n  'ZW',\n];\n\nexport const defaultAccountTypes = ['Savings', 'Checking'];\n\nexport const defaultAccessContextScope = AccessContextScope.USER;\n\nexport enum ApprovalStatusColorMap {\n  OPEN = 'success',\n  CLOSED = 'danger',\n  INVALID = 'danger',\n  VALID = 'success',\n  ENTERED = 'primary',\n  READY = 'primary',\n  ACCEPTED = 'warning',\n  REJECTED = 'danger',\n  PENDING = 'primary',\n  APPROVED = 'success',\n  CANCELLED = 'warning',\n}\n\nexport enum ContactApprovalStatusMap {\n  CANCELLED = 'CANCELLED',\n  REJECTED = 'REJECTED',\n  PENDING = 'ENTERED',\n  APPROVED = 'APPROVED',\n}\n\nexport enum Preferences {\n  PAGE_SIZE = 20,\n  MAX_NAV_SIZE = 3,\n  DEBOUNCE_TIME = 300,\n  LOAD_MORE_METHOD = 'pagination',\n  NOTIFICATION_DISMISS_TIME = 5000,\n  ACCESS_CONTEXT_SCOPE = 'SA',\n}\n\nexport const IbanMask = 'SS00 AAAA AAAA AAAA AAAA AAAA AAAA AAAA AA';\n","import { InputName, InputGroupName, ContactItem, ApprovalDetails } from '../models/types';\nimport { addressFromContact } from './address';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { ContactApprovalStatusMap } from '../constants';\n\nexport const filterEmptyValues = (obj: { [key: string]: any }) =>\n  Object.keys(obj).reduce((result, key) => ({ ...result, ...(obj[key] ? { [key]: obj[key] } : {}) }), {});\n\nexport const toInteger = (value: any): number => parseInt(value, 10) || 0;\n\nexport const toBoolean = (value: string | boolean | undefined): boolean => {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n\n  return value === 'true';\n};\n\nexport const sanitizeObject = <T>(obj: T): Object => {\n  const sanitizedObj: { [key: string]: any } = {};\n  for (const key in obj) {\n    if ((obj as Object).hasOwnProperty(key) && obj[key] && key !== InputName.COPY_CONTACT_ADDRESS) {\n      sanitizedObj[key] = obj[key];\n    }\n  }\n\n  return sanitizedObj;\n};\n\nexport const flattenObject = <T>(obj: T): Object => {\n  let flattenedObj: { [key: string]: any } = {};\n  for (const key in obj) {\n    if ((obj as Object).hasOwnProperty(key) && obj[key]) {\n      if (typeof obj[key] === 'object') {\n        flattenedObj = { ...flattenedObj, ...sanitizeObject(obj[key]) };\n      } else {\n        flattenedObj[key] = obj[key];\n      }\n    }\n  }\n\n  return flattenedObj;\n};\n\nexport const fromContactFormToContactModel = <T>(formObj: T) => {\n  let model: any = {};\n  model['accounts'] = [];\n\n  for (const key in formObj) {\n    if ((formObj as Object).hasOwnProperty(key)) {\n      if (key === InputGroupName.CONTACT) {\n        model = { ...model, ...flattenObject(formObj[key]) };\n      } else if (key.indexOf(InputGroupName.ACCOUNT) > -1) {\n        model.accounts.push(flattenObject(formObj[key]));\n      }\n    }\n  }\n\n  return model;\n};\n\nexport const fromContactItemToContactModel = (contact: ContactItem): { [key: string]: any } => {\n  const keys = ['name', 'alias', 'phoneNumber', 'emailId', 'contactPerson', 'additions'];\n\n  return {\n    ...keys.reduce((details, key) => {\n      const value = (contact as { [key: string]: any })[key];\n      if (value) {\n        return { ...details, [key]: value };\n      }\n\n      return details;\n    }, {}),\n    ...filterEmptyValues(addressFromContact(contact)),\n    accounts: contact.accounts.map(filterEmptyValues),\n  };\n};\n\nexport const fromResponseBodyList = <T>(response: HttpResponse<T>) => ({\n  totalCount: parseInt(response.headers.get('x-total-count') as string, 10) || 0,\n  items: response.body || [],\n});\n\nexport const fromErrorResponse = (error: HttpErrorResponse) =>\n  throwError({ status: error.status, message: error.message });\n\nexport const getApprovalStatus = (approval: ApprovalDetails): string => {\n  let label = '';\n  const approvalDetailsStatus: any = approval.approvalDetails && approval.approvalDetails.status;\n  const currentStatus = ContactApprovalStatusMap[approvalDetailsStatus];\n\n  if (\n    approval.approvalDetails &&\n    currentStatus === ContactApprovalStatusMap.PENDING &&\n    approval.approvalDetails.policy &&\n    approval.approvalDetails.policy.items &&\n    approval.approvalDetails.records\n  ) {\n    const approvals = approval.approvalDetails.records.length;\n    const total = approval.approvalDetails.policy.items.reduce(\n      (totalCount, policy) => totalCount + policy.numberOfApprovals || 0,\n      0,\n    );\n    label = ` (${approvals}/${total})`;\n  }\n\n  return `${currentStatus}${label}`;\n};\n","import { Injectable } from '@angular/core';\nimport {\n  ApprovalResultStatus,\n  ApprovalsHttpService,\n  ContactPutResponseBody,\n  ContactsHttpService,\n  SupportedCountriesHttpService,\n} from '@backbase/data-ang/contact-manager';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n  ApprovalRequired,\n  Approvals,\n  ApprovalsCreatedByMe,\n  ContactItem,\n  ContactRequestParameters,\n  ContactResponse,\n} from '../models/types';\nimport { fromErrorResponse, fromResponseBodyList } from '../helpers/mappers';\nimport { HttpResponse } from '@angular/common/http';\n\n/**\n * Service responsible for connecting Contact service to data-ang services\n *  - `ContactService`\n *  - `ContactsHttpService`\n *  - `ApprovalsHttpService`\n * This service is dependant on data-ang.\n *\n * @see ContactService\n * @see ContactsHttpService,\n * @see ApprovalsHttpService,\n * @usageNotes\n *\n * ```ts\n * @NgModule({\n *   ...\n *   providers: [\n *     ...\n *     ContactHttpService,\n *   ],\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactHttpService],\n * })\n *  export class ContactCommonAngComponent {\n * ```\n */\n@Injectable()\nexport class ContactHttpService {\n  constructor(\n    private readonly contactDataHttpService: ContactsHttpService,\n    private readonly approvalService: ApprovalsHttpService,\n    private readonly supportedCountriesService: SupportedCountriesHttpService,\n  ) {}\n\n  /**\n   * Get the contacts from data-ang API.\n   *\n   * @param {ContactRequestParameters} params - Contact Request Parameters\n   * @returns {Observable<ContactResponse>} service response in an Observable\n   */\n  getContacts(params: ContactRequestParameters): Observable<ContactResponse> {\n    return this.contactDataHttpService\n      .getContacts(params, 'response')\n      .pipe(map(fromResponseBodyList), catchError(fromErrorResponse));\n  }\n\n  /**\n   * Fetches Contact based on the ID given from data-ang method\n   *\n   * @param {string} contactId contact ID\n   * @returns {Observable<ContactItem | undefined>} observable of a response\n   */\n  getContact(contactId: string): Observable<ContactItem | undefined> {\n    return this.contactDataHttpService.getContact({ contactId }).pipe(catchError((error) => of(undefined)));\n  }\n\n  /**\n   * Calls the data-ang method for delete contact based on the ID\n   *\n   * @param {string} contactId contact ID\n   * @returns {Observable<ApprovalRequired>} observable of a response\n   */\n  deleteContact(contactId: string): Observable<ApprovalRequired> {\n    return this.contactDataHttpService.deleteContact({ contactId });\n  }\n\n  /**\n   * Calls the data-ang Method based on params provided.\n   *\n   * @param {ContactRequestParameters} params request parameters\n   * @returns {Observable<Approvals>} observable of a response\n   */\n  getPendingApprovals(params: ContactRequestParameters): Observable<Approvals> {\n    return this.approvalService\n      .getApprovals(params, 'response')\n      .pipe(map(fromResponseBodyList), catchError(fromErrorResponse));\n  }\n\n  /**\n   * Calls datanag method for fetching contact list of all pending approvals created by me.\n   *\n   * @param {ContactRequestParameters} params request parameters\n   * @returns {Observable<ApprovalsCreatedByMe>} observable of a response\n   */\n  getApprovalsCreatedByMe(params: ContactRequestParameters): Observable<ApprovalsCreatedByMe> {\n    return this.approvalService\n      .getApprovalsCreatedByMe(params, 'response')\n      .pipe(map(fromResponseBodyList), catchError(fromErrorResponse));\n  }\n\n  /**\n   * Calls data ang method for deleting the approval records.\n   *\n   * @param {string} requestId id of a contact\n   * @returns {Observable<any>} observable of a response\n   */\n  deleteApprovalsRecord(requestId: string) {\n    return this.approvalService.deleteApprovalRequest({ requestId });\n  }\n\n  /**\n   * Update the contact\n   *\n   * @param {ContactItem} contact updated contact Object\n   * @returns {Observable<ContactPutResponseBody>} observable of a response\n   */\n  updateContact(contact: ContactItem): Observable<ContactPutResponseBody> {\n    return this.contactDataHttpService.putContact({ contactId: contact.id, contactPutRequestBody: contact });\n  }\n\n  /**\n   * Calls the data-ang method for Approve Contact .\n   *\n   * @param {string} requestId id of a contact\n   * @param {string?} comment explanation of request approval\n   * @returns {Observable<ApprovalResultStatus>} observable of a response\n   */\n  approveContact(requestId: string, comment?: string): Observable<ApprovalResultStatus> {\n    const body = comment ? { comment } : undefined;\n\n    return this.approvalService\n      .postApprovalRecord({ requestId, approvalPostRequestBody: body })\n      .pipe(map((response) => response.status));\n  }\n\n  /**\n   * Calls the data-ang method for Reject Contact .\n   *\n   * @param {string} requestId id of a contact\n   * @param {string?} comment explanation of request rejection\n   * @returns {Observable<any>} observable of a response\n   */\n  rejectContact(requestId: string, comment?: string) {\n    const body = comment ? { comment } : undefined;\n\n    return this.approvalService.postRejectionRecord({ requestId, rejectionPostRequestBody: body });\n  }\n\n  /**\n   * Calls the data-ang method for supported countries .\n   *\n   * @returns {Observable<HttpResponse<string[]>>} observable of a response\n   */\n  getSupportedCountries(): Observable<HttpResponse<string[]>> {\n    return this.supportedCountriesService.getSupportedCountries('response');\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ContactHttpService } from './contact-http.service';\nimport { BehaviorSubject, merge, Observable, of, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { filter, finalize, map, mapTo, mergeMap, scan, shareReplay, switchMap, takeUntil } from 'rxjs/operators';\nimport {\n  ApprovalRequired,\n  ContactActions,\n  ContactItem,\n  ContactRequestParameters,\n  ContactResponse,\n  ContactState,\n  ExtendedContactResponse,\n  LoadMoreMethod,\n} from '../models/types';\nimport { SortEvent } from '@backbase/ui-ang/table';\nimport { SortDirection, ApprovalSort } from '@backbase/data-ang/contact-manager';\nexport interface ContactsServiceConfig {\n  pageSize: number;\n}\n\nexport const ContactsServiceConfigDefaults = {\n  pageSize: 50,\n};\n\n/**\n * Service calls the APIs for all the actions done by the user.\n * This service Injects ContactHttpService\n *\n * @see ContactHttpService\n * @usageNotes\n *\n *\n * ```ts\n * @NgModule({\n *   ...\n *   providers: [\n *     ...\n *     ContactService,\n *   ],\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactService],\n * })\n *  export class ContactCommonAngComponent {\n * ```\n */\n@Injectable()\nexport class ContactService implements OnDestroy {\n  protected readonly destroy$ = new Subject();\n  private readonly changePage$ = new Subject<ContactRequestParameters['from']>();\n  private readonly loadMore$ = new Subject<ContactRequestParameters['from']>();\n  private readonly load$ = new Subject();\n  private readonly refresh$ = new Subject<ContactState['loadMoreMethod']>();\n  private readonly search$ = new Subject<{\n    query: ContactRequestParameters['query'];\n    from: ContactRequestParameters['from'];\n  }>();\n\n  private readonly sort$ = new Subject<{\n    sort: ContactRequestParameters['sort'];\n    direction: ContactRequestParameters['direction'];\n  }>();\n\n  protected readonly config$ = new BehaviorSubject<ContactsServiceConfig>(ContactsServiceConfigDefaults);\n\n  private readonly id$$ = new ReplaySubject<string | null>(1);\n  private readonly subscriptions: Subscription[] = [];\n  private readonly contact$ = this.id$$.pipe(\n    switchMap((id) => {\n      if (!id) {\n        return of(undefined);\n      }\n\n      return this.contactHttpService.getContact(id);\n    }),\n  );\n\n  readonly loading$$ = new ReplaySubject<boolean>(1);\n  readonly loading$ = this.loading$$.asObservable();\n\n  protected set loading(val: boolean) {\n    this.loading$$.next(val);\n  }\n\n  private readonly acting$$ = new ReplaySubject<boolean>(1);\n  readonly acting$ = this.acting$$.asObservable();\n\n  protected set acting(val: boolean) {\n    this.acting$$.next(val);\n  }\n\n  private readonly pageSize$: Observable<number> = this.config$.pipe(map((config) => config.pageSize));\n\n  private readonly actions$ = merge(\n    this.load$.pipe(mapTo({ action: ContactActions.Load })),\n    this.search$.pipe(map(({ query, from }) => ({ action: ContactActions.Search, query, from }))),\n    this.refresh$.pipe(map((loadMoreMethod) => ({ action: ContactActions.Refresh, loadMoreMethod }))),\n    this.changePage$.pipe(map((from) => ({ action: ContactActions.ChangePage, from }))),\n    this.loadMore$.pipe(map((from) => ({ action: ContactActions.LoadMore, from }))),\n    this.pageSize$.pipe(map((pageSize) => ({ pageSize }))),\n    this.sort$.pipe(map(({ sort, direction }) => ({ action: ContactActions.Sort, sort, direction }))),\n  );\n\n  protected readonly state$ = this.actions$.pipe(\n    scan((state, action) => ({ ...state, ...action })),\n    map(({ pageSize, loadMoreMethod, query, ...state }: ContactState) => {\n      const isRefresh = state.action === ContactActions.Refresh;\n      const size = pageSize || ContactsServiceConfigDefaults.pageSize;\n      const from = state.from || 0;\n\n      return {\n        ...state,\n        query: query || '',\n        size: isRefresh && loadMoreMethod === LoadMoreMethod.LOAD_MORE ? size * (from + 1) : size,\n        from: isRefresh && loadMoreMethod === LoadMoreMethod.LOAD_MORE ? 0 : from,\n      };\n    }),\n    filter((state) => state.action !== undefined),\n    shareReplay(1),\n  );\n\n  protected readonly effects$: Observable<ExtendedContactResponse> = this.state$.pipe(\n    mergeMap(({ action, ...parameters }) => {\n      this.loading = true;\n      const isLoadMore = action === ContactActions.LoadMore;\n\n      return this.contactHttpService.getContacts(this.removeEmptyParameters(parameters)).pipe(\n        map((response) => ({ ...response, isLoadMore })),\n        finalize(() => (this.loading = false)),\n      );\n    }),\n    takeUntil(this.destroy$),\n    shareReplay(1),\n  );\n\n  protected readonly contactsSource$ = new BehaviorSubject<ContactResponse | undefined>(undefined);\n\n  public get contacts$() {\n    return this.contactsSource$.asObservable();\n  }\n\n  constructor(private readonly contactHttpService: ContactHttpService) {}\n\n  protected removeEmptyParameters<T>(parameters: T): T {\n    return Object.entries(parameters)\n      .filter(([key, value]) => value !== '')\n      .reduce((prev, curr) => ({ ...prev, [curr[0]]: curr[1] }), {}) as T;\n  }\n\n  /**\n   * Sets the Subject with updated contactService config.\n   *\n   * @param {ContactsServiceConfig} config - new config for Contact Service\n   */\n  init(config: ContactsServiceConfig) {\n    this.config$.next(config);\n  }\n\n  /**\n   *  Updates the subject with value\n   */\n  load() {\n    this.load$.next();\n  }\n\n  /**\n   * Updates the loadMore Subject with pageFrom value.\n   *\n   * @param {number} from - page From the data has to be fetched.\n   */\n  loadMore(from: number) {\n    this.loadMore$.next(from);\n  }\n\n  /**\n   * Updates the changePage subject to updated page.\n   *\n   * @param {number} from - page From the data has to be fetched.\n   */\n  changePage(from: number) {\n    this.changePage$.next(from);\n  }\n\n  /**\n   * Triggers the refresh listener with current load more.\n   *\n   * @param {LoadMoreMethod} loadMoreMethod - Current LoadMore method can be pagination / load-more\n   */\n  refresh(loadMoreMethod: LoadMoreMethod) {\n    this.refresh$.next(loadMoreMethod);\n  }\n\n  /**\n   * Triggers search Listner with search query.\n   *\n   * @param {string} query - search text entered by the user.\n   */\n  searchContacts(query: string) {\n    this.search$.next({ query, from: 0 });\n  }\n\n  /**\n   * Triggers sort Listner with mapped event.\n   *\n   * @param {string} sortEvent - table sort event.\n   */\n  sortApprovals(sortEvent: SortEvent) {\n    const castedDirection: SortDirection = sortEvent.direction.toUpperCase() as SortDirection;\n    const mappedEvent = { sort: sortEvent.column as ApprovalSort, direction: castedDirection };\n    this.sort$.next(mappedEvent);\n  }\n\n  /**\n   * Subscribes to the contact of a given contact ID.\n   *\n   * @param {Observable<string | null>} id Observable of Contact ID.\n   * @returns {Observable<ContactItem | undefined>} of contact Details with that ID.\n   */\n  getContactFrom(id: Observable<string | null>): Observable<ContactItem | undefined> {\n    this.subscriptions.push(id.subscribe(this.id$$));\n\n    return this.contact$;\n  }\n\n  /**\n   * Returns the details for a given ID.\n   *\n   * @param {string} id contact ID\n   * @returns {Observable<ContactItem | undefined>} Observable of contact Details for given ID.\n   */\n  getContactById(id: string): Observable<ContactItem | undefined> {\n    return this.contactHttpService.getContact(id);\n  }\n\n  /**\n   * Calls the delete API for specific ID\n   *\n   * @param {string} contactId Contact ID\n   * @returns {Observable<ApprovalRequired>} observable of a result\n   */\n  deleteContact(contactId: string): Observable<ApprovalRequired> {\n    this.acting = true;\n\n    return this.contactHttpService.deleteContact(contactId).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   *\n   * @param {ContactItem} contact contact item object\n   * @returns {Observable<ApprovalRequired>} response of a contact update\n   */\n  updateContact(contact: ContactItem): Observable<ApprovalRequired> {\n    this.acting = true;\n\n    return this.contactHttpService.updateContact(contact).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   * Calls the API for approval\n   *\n   * @param {string} approvalId - approval ID\n   * @param {string?} comment explanation of request approval\n   * @returns {Observable<string>} response of a contact edit approval\n   */\n  approveContact(approvalId: string, comment?: string): Observable<string> {\n    this.acting = true;\n\n    return this.contactHttpService.approveContact(approvalId, comment).pipe(finalize(() => (this.acting = false)));\n  }\n\n  /**\n   * Calls the API for rejction\n   *\n   * @param {string} approvalId approval ID\n   * @param {string?} comment explanation of request rejection\n   * @returns {Observable<string>} response of an approval rejection\n   */\n  rejectContact(approvalId: string, comment?: string): Observable<string> {\n    this.acting = true;\n\n    return this.contactHttpService.rejectContact(approvalId, comment).pipe(finalize(() => (this.acting = false)));\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    this.destroy$.complete();\n    this.loadMore$.complete();\n    this.changePage$.complete();\n    this.refresh$.complete();\n  }\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport { Countries as DefaultCountriesList, defaultAccountTypes } from './constants';\nimport { IBANCountryList } from './directives/iban-validator/countrySpec';\n\nconst emptyIbanCountriesList: IBANCountryList = {};\n\nexport const BB_CONTACT_COUNTRIES_LIST: InjectionToken<string> = new InjectionToken('BB_CONTACT_COUNTRIES_LIST');\n\nexport const BB_CONTACT_IBAN_COUNTRIES_LIST: InjectionToken<string> = new InjectionToken(\n  'BB_CONTACT_IBAN_COUNTRIES_LIST',\n);\n\nexport const BB_CONTACT_BANK_ACCOUNT_TYPES_LIST: InjectionToken<string> = new InjectionToken(\n  'BB_CONTACT_BANK_ACCOUNT_TYPES_LIST',\n);\n\nexport const ContactConfigProviders: Array<Provider> = [\n  {\n    provide: BB_CONTACT_COUNTRIES_LIST,\n    useValue: DefaultCountriesList,\n  },\n  {\n    provide: BB_CONTACT_IBAN_COUNTRIES_LIST,\n    useValue: emptyIbanCountriesList,\n  },\n  {\n    provide: BB_CONTACT_BANK_ACCOUNT_TYPES_LIST,\n    useValue: defaultAccountTypes,\n  },\n];\n","import { Inject, Injectable } from '@angular/core';\nimport { BB_CONTACT_COUNTRIES_LIST } from '../config.providers';\nimport { Observable, of } from 'rxjs';\nimport { ContactHttpService } from './contact-http.service';\nimport { catchError, map } from 'rxjs/operators';\n\n/**\n * Service responsible for providing available countries list\n */\n@Injectable()\nexport class ContactCountryListService {\n  constructor(\n    @Inject(BB_CONTACT_COUNTRIES_LIST) private countriesList: string[],\n    private readonly contactHttpService: ContactHttpService,\n  ) {}\n\n  /**\n   * Returns countries configured locally\n   *\n   * @returns {Observable<string[]>} - stream of country lists\n   */\n  getFromLocalSource(): Observable<string[]> {\n    return of(this.countriesList);\n  }\n\n  /**\n   * Return countries from external service\n   *\n   * @returns {Observable<string[]>} - stream of country lists\n   */\n  getFromExternalSource(): Observable<string[]> {\n    return this.contactHttpService.getSupportedCountries().pipe(\n      map((response) => response.body || []),\n      catchError(() => of([])),\n    );\n  }\n}\n","import { Provider } from '@angular/core';\nimport { ContactHttpService } from './contact-http.service';\nimport { ContactService } from './contact.service';\nimport { ContactCountryListService } from './contact-country-list.service';\n\nexport const provideContactServices: Provider[] = [\n  { provide: ContactHttpService, useClass: ContactHttpService },\n  {\n    provide: ContactService,\n    useClass: ContactService,\n    deps: [ContactHttpService],\n  },\n  ContactCountryListService,\n];\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ApprovalsHttpService } from '@backbase/data-ang/approvals';\nimport { ApprovalDetails, ContactsError } from '../models/types';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n/**\n * Service responsible for connecting Contact service to data-ang services\n *  - `ContactService`\n * This service is dependant on data-ang.\n *\n * @see ContactService\n * @see ApprovalsHttpService,\n * @usageNotes\n *\n * ```ts\n * @NgModule({\n *   ...\n *   providers: [\n *     ...\n *     ApprovalHttpService,\n *   ],\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ApprovalHttpService],\n * })\n *  export class ContactCommonAngComponent {\n * ```\n */\n@Injectable()\nexport class ApprovalHttpService {\n  constructor(private readonly approvalDataHttpService: ApprovalsHttpService) {}\n  /**\n   * Fetch approval object based on approval ID.\n   *\n   * @param {string} approvalId - Approval ID\n   * @returns {Observable<ApprovalDetails | ContactsError>} observable of response\n   */\n  getApproval(approvalId: string): Observable<ApprovalDetails | ContactsError> {\n    return this.approvalDataHttpService\n      .getApprovalByApprovalId({ approvalId })\n      .pipe(catchError((error: HttpErrorResponse) => of(new ContactsError(error))));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n/**\n * Service responsible for managing logic behind showing data discard confirmation\n */\n@Injectable()\nexport class ContactDiscardChangesService {\n  private discard$ = new Subject<boolean>();\n  private discardRequested$$ = new Subject();\n  private isFormActive = false;\n\n  /**\n   * Stream providing values when discarding data is requested from outside the form component\n   */\n  readonly discardRequested$ = this.discardRequested$$.asObservable();\n\n  /**\n   * Registers the event of introducing changes to the form\n   */\n  startChanges() {\n    this.isFormActive = true;\n  }\n\n  /**\n   * Registers the event of finishing working with the form\n   */\n  finishChanges() {\n    this.isFormActive = false;\n  }\n\n  /**\n   * Requests that data is discarded from the form\n   *\n   * @returns {Observable<boolean>} whether data was actually discarded fulfilling the request\n   */\n  requestDiscard(): Observable<boolean> {\n    if (this.isFormActive) {\n      this.discard$.complete();\n      this.discard$ = new Subject();\n      this.discardRequested$$.next();\n\n      return this.discard$.asObservable();\n    } else {\n      return of(true);\n    }\n  }\n\n  /**\n   * Confirms discarding data after it was requested\n   */\n  discard() {\n    this.discard$.next(true);\n    this.discard$.complete();\n    this.finishChanges();\n  }\n\n  /**\n   * Cancels discarding data after it was requested\n   */\n  cancelDiscard() {\n    this.discard$.next(false);\n    this.discard$.complete();\n  }\n}\n","/**\n * Collection of countries that are compliant with the ISO 13616 standard.\n * BBAN field is the representation of the format accepted by that country.\n *\n * inner\n * type {object}\n */\nconst _countries: IBANCountryList = {\n  AD: {\n    bban: '08N12C',\n    example: 'AD1200012030200359100100',\n    len: 24,\n    name: 'Andorra',\n  },\n  AE: {\n    bban: '03N16N',\n    example: 'AE260211000000230064016',\n    len: 23,\n    name: 'United Arab Emirates',\n  },\n  AL: {\n    bban: '08N16C',\n    example: 'AL47212110090000000235698741',\n    len: 28,\n    name: 'Albania',\n  },\n  AO: {\n    bban: '21N',\n    example: 'AO06000600000100037131174',\n    len: 25,\n    name: 'Angola',\n  },\n  AT: {\n    bban: '16N',\n    example: 'AT611904300234573201',\n    len: 20,\n    name: 'Austria',\n  },\n  AZ: {\n    bban: '04C20N',\n    example: 'AZ21NABZ00000000137010001944',\n    len: 28,\n    name: 'Azerbaijan',\n  },\n  BA: {\n    bban: '16N',\n    example: 'BA391290079401028494',\n    len: 20,\n    name: 'Bosnia and Herzegovina',\n  },\n  BE: {\n    bban: '12N',\n    example: 'BE68539007547034',\n    len: 16,\n    name: 'Belgium',\n  },\n  BF: {\n    bban: '23N',\n    example: 'BF1030134020015400945000643',\n    len: 27,\n    name: 'Burkina Faso',\n  },\n  BG: {\n    bban: '04A06N08C',\n    example: 'BG80BNBG96611020345678',\n    len: 22,\n    name: 'Bulgaria',\n  },\n  BH: {\n    bban: '04A14C',\n    example: 'BH29BMAG1299123456BH00',\n    len: 22,\n    name: 'Bahrain',\n  },\n  BI: {\n    bban: '12N',\n    example: 'BI43201011067444',\n    len: 16,\n    name: 'Burundi',\n  },\n  BJ: {\n    bban: '01A23N',\n    example: 'BJ11B00610100400271101192591',\n    len: 28,\n    name: 'Benin',\n  },\n  BL: {\n    bban: '10N11C02N',\n    example: 'BL6820041010050500013M02606',\n    len: 27,\n    name: 'Saint Barthelemy',\n  },\n  BR: {\n    bban: '23N01A01C',\n    example: 'BR9700360305000010009795493P1',\n    len: 29,\n    name: 'Brazil',\n  },\n  BY: {\n    bban: '04C20N',\n    example: 'BY86AKBB10100000002966000000',\n    len: 28,\n    name: 'Belarus',\n  },\n  CF: {\n    bban: '23C',\n    example: 'CF4220001000010120069700160',\n    len: 27,\n    name: 'Central African Republic',\n  },\n  CG: {\n    bban: '23C',\n    example: 'CG5230011000202151234567890',\n    len: 27,\n    name: 'Congo',\n  },\n  CH: {\n    bban: '05N12C',\n    example: 'CH9300762011623852957',\n    len: 21,\n    name: 'Switzerland',\n  },\n  CI: {\n    bban: '01A23N',\n    example: 'CI05A00060174100178530011852',\n    len: 28,\n    name: 'Ivory Coast',\n  },\n  CM: {\n    bban: '23N',\n    example: 'CM2110003001000500000605306',\n    len: 27,\n    name: 'Cameroon',\n  },\n  CR: {\n    bban: '17N',\n    example: 'CR0515202001026284066',\n    len: 21,\n    name: 'Costa Rica',\n  },\n  CV: {\n    bban: '21N',\n    example: 'CV64000300004547069110176',\n    len: 25,\n    name: 'Cape Verde',\n  },\n  CY: {\n    bban: '08N16C',\n    example: 'CY17002001280000001200527600',\n    len: 28,\n    name: 'Cyprus',\n  },\n  CZ: {\n    bban: '20N',\n    example: 'CZ6508000000192000145399',\n    len: 24,\n    name: 'Czech Republic',\n  },\n  DE: {\n    bban: '18N',\n    example: 'DE89370400440532013000',\n    len: 22,\n    name: 'Germany',\n  },\n  DJ: {\n    bban: '23C',\n    example: 'DJ2110002010010409943020008',\n    len: 27,\n    name: 'Djibouti',\n  },\n  DK: {\n    bban: '14N',\n    example: 'DK5000400440116243',\n    len: 18,\n    name: 'Denmark',\n  },\n  DO: {\n    bban: '04A20N',\n    example: 'DO28BAGR00000001212453611324',\n    len: 28,\n    name: 'Dominican Republic',\n  },\n  DZ: {\n    bban: '20N',\n    example: 'DZ4000400174401001050486',\n    len: 24,\n    name: 'Algeria',\n  },\n  EE: {\n    bban: '16N',\n    example: 'EE382200221020145685',\n    len: 20,\n    name: 'Estonia',\n  },\n  EG: {\n    bban: '25C',\n    example: 'EG380019000500000000263180002',\n    len: 29,\n    name: 'Egypt',\n  },\n  ES: {\n    bban: '20N',\n    example: 'ES9121000418450200051332',\n    len: 24,\n    name: 'Spain',\n  },\n  FI: {\n    bban: '14N',\n    example: 'FI2112345600000785',\n    len: 18,\n    name: 'Finland',\n  },\n  FO: {\n    bban: '14N',\n    example: 'FO1464600009692713',\n    len: 18,\n    name: 'Faroe Islands',\n  },\n  FR: {\n    bban: '10N11C02N',\n    example: 'FR7630007000110009970004942',\n    len: 27,\n    name: 'France',\n  },\n  GA: {\n    bban: '23C',\n    example: 'GA2140002000055602673300064',\n    len: 27,\n    name: 'Gabon',\n  },\n  GB: {\n    bban: '04A14N',\n    example: 'GB29NWBK60161331926819',\n    len: 22,\n    name: 'United Kingdom',\n  },\n  GE: {\n    bban: '02C16N',\n    example: 'GE29NB0000000101904917',\n    len: 22,\n    name: 'Georgia',\n  },\n  GF: {\n    bban: '10N11C02N',\n    example: 'GF4120041010050500013M02606',\n    len: 27,\n    name: 'French Guiana',\n  },\n  GI: {\n    bban: '04A15C',\n    example: 'GI75NWBK000000007099453',\n    len: 23,\n    name: 'Gibraltar',\n  },\n  GL: {\n    bban: '14N',\n    example: 'GL8964710001000206',\n    len: 18,\n    name: 'Greenland',\n  },\n  GP: {\n    bban: '10N11C02N',\n    example: 'GP1120041010050500013M02606',\n    len: 27,\n    name: 'Guadeloupe',\n  },\n  GQ: {\n    bban: '23C',\n    example: 'GQ7050002001003715228190196',\n    len: 27,\n    name: 'Equatorial Guinea',\n  },\n  GR: {\n    bban: '07N16C',\n    example: 'GR1601101250000000012300695',\n    len: 27,\n    name: 'Greece',\n  },\n  GT: {\n    bban: '04C20C',\n    example: 'GT82TRAJ01020000001210029690',\n    len: 28,\n    name: 'Guatemala',\n  },\n  GW: {\n    bban: '21C',\n    example: 'GW04GW1430010181800637601',\n    len: 25,\n    name: 'Guinea-Bissau',\n  },\n  HN: {\n    bban: '24C',\n    example: 'HN54PISA00000000000000123124',\n    len: 28,\n    name: 'Honduras',\n  },\n  HR: {\n    bban: '17N',\n    example: 'HR1210010051863000160',\n    len: 21,\n    name: 'Croatia',\n  },\n  HU: {\n    bban: '24N',\n    example: 'HU42117730161111101800000000',\n    len: 28,\n    name: 'Hungary',\n  },\n  IE: {\n    bban: '04C14N',\n    example: 'IE29AIBK93115212345678',\n    len: 22,\n    name: 'Ireland',\n  },\n  IL: {\n    bban: '19N',\n    example: 'IL620108000000099999999',\n    len: 23,\n    name: 'Israel',\n  },\n  IQ: {\n    bban: '19C',\n    example: 'IQ20CBIQ861800101010500',\n    len: 23,\n    name: 'Iraq',\n  },\n  IR: {\n    bban: '22N',\n    example: 'IR580540105180021273113007',\n    len: 26,\n    name: 'Iran',\n  },\n  IS: {\n    bban: '22N',\n    example: 'IS140159260076545510730339',\n    len: 26,\n    name: 'Iceland',\n  },\n  IT: {\n    bban: '01A10N12C',\n    example: 'IT60X0542811101000000123456',\n    len: 27,\n    name: 'Italy',\n  },\n  JO: {\n    bban: '04A22N',\n    example: 'JO94CBJO0010000000000131000302',\n    len: 30,\n    name: 'Jordan',\n  },\n  KM: {\n    bban: '23C',\n    example: 'KM4600005000010010904400137',\n    len: 27,\n    name: 'Comoros',\n  },\n  KW: {\n    bban: '04A22C',\n    example: 'KW74NBOK0000000000001000372151',\n    len: 30,\n    name: 'Kuwait',\n  },\n  KZ: {\n    bban: '03N13C',\n    example: 'KZ176010251000042993',\n    len: 20,\n    name: 'Kazakhstan',\n  },\n  LB: {\n    bban: '04N20C',\n    example: 'LB30099900000001001925579115',\n    len: 28,\n    name: 'Lebanon',\n  },\n  LC: {\n    bban: '28C',\n    example: 'LC14BOSL123456789012345678901234',\n    len: 32,\n    name: 'Saint Lucia',\n  },\n  LI: {\n    bban: '05N12C',\n    example: 'LI21088100002324013AA',\n    len: 21,\n    name: 'Liechtenstein',\n  },\n  LT: {\n    bban: '16N',\n    example: 'LT121000011101001000',\n    len: 20,\n    name: 'Lithuania',\n  },\n  LU: {\n    bban: '03N13C',\n    example: 'LU280019400644750000',\n    len: 20,\n    name: 'Luxembourg',\n  },\n  LV: {\n    bban: '04A13C',\n    example: 'LV80BANK0000435195001',\n    len: 21,\n    name: 'Latvia',\n  },\n  MA: {\n    bban: '24C',\n    example: 'MA64011519000001205000534921',\n    len: 28,\n    name: 'Morocco',\n  },\n  MC: {\n    bban: '10N11C02N',\n    example: 'MC5813488000010051108001292',\n    len: 27,\n    name: 'Monaco',\n  },\n  MD: {\n    bban: '02C18C',\n    example: 'MD24AG000225100013104168',\n    len: 24,\n    name: 'Moldova',\n  },\n  ME: {\n    bban: '18N',\n    example: 'ME25505000012345678951',\n    len: 22,\n    name: 'Montenegro',\n  },\n  MG: {\n    bban: '23N',\n    example: 'MG4600005030010101914016056',\n    len: 27,\n    name: 'Madagascar',\n  },\n  MK: {\n    bban: '03N10C02N',\n    example: 'MK07300000000042425',\n    len: 19,\n    name: 'Macedonia',\n  },\n  ML: {\n    bban: '01A23N',\n    example: 'ML03D00890170001002120000447',\n    len: 28,\n    name: 'Mali',\n  },\n  MQ: {\n    bban: '10N11C02N',\n    example: 'MQ5120041010050500013M02606',\n    len: 27,\n    name: 'Martinique',\n  },\n  MR: {\n    bban: '23N',\n    example: 'MR1300012000010000002037372',\n    len: 27,\n    name: 'Mauritania',\n  },\n  MT: {\n    bban: '04A05N18C',\n    example: 'MT84MALT011000012345MTLCAST001S',\n    len: 31,\n    name: 'Malta',\n  },\n  MU: {\n    bban: '04A19N03A',\n    example: 'MU17BOMM0101101030300200000MUR',\n    len: 30,\n    name: 'Mauritius',\n  },\n  MZ: {\n    bban: '21N',\n    example: 'MZ59000100000011834194157',\n    len: 25,\n    name: 'Mozambique',\n  },\n  NC: {\n    bban: '10N11C02N',\n    example: 'NC8420041010050500013M02606',\n    len: 27,\n    name: 'New Caledonia',\n  },\n  NE: {\n    bban: '24C',\n    example: 'NE58NE0380100100130305000268',\n    len: 28,\n    name: 'Niger',\n  },\n  NI: {\n    bban: '28C',\n    example: 'NI92BAMC000000000000000003123123',\n    len: 32,\n    name: 'Nicaragua',\n  },\n  NL: {\n    bban: '04A10N',\n    example: 'NL91ABNA0417164300',\n    len: 18,\n    name: 'Netherlands',\n  },\n  NO: {\n    bban: '11N',\n    example: 'NO9386011117947',\n    len: 15,\n    name: 'Norway',\n  },\n  PF: {\n    bban: '10N11C02N',\n    example: 'PF5720041010050500013M02606',\n    len: 27,\n    name: 'French Polynesia',\n  },\n  PK: {\n    bban: '04C16N',\n    example: 'PK24SCBL0000001171495101',\n    len: 24,\n    name: 'Pakistan',\n  },\n  PL: {\n    bban: '24N',\n    example: 'PL27114020040000300201355387',\n    len: 28,\n    name: 'Poland',\n  },\n  PM: {\n    bban: '10N11C02N',\n    example: 'PM3620041010050500013M02606',\n    len: 27,\n    name: 'Saint Pierre et Miquelon',\n  },\n  PS: {\n    bban: '04C21N',\n    example: 'PS92PALS000000000400123456702',\n    len: 29,\n    name: 'Palestine',\n  },\n  PT: {\n    bban: '21N',\n    example: 'PT50000200000163099310355',\n    len: 25,\n    name: 'Portugal',\n  },\n  QA: {\n    bban: '04A21C',\n    example: 'QA58DOHB00001234567890ABCDEFG',\n    len: 29,\n    name: 'Qatar',\n  },\n  RE: {\n    bban: '10N11C02N',\n    example: 'RE4220041010050500013M02606',\n    len: 27,\n    name: 'Reunion',\n  },\n  RO: {\n    bban: '04A16C',\n    example: 'RO49AAAA1B31007593840000',\n    len: 24,\n    name: 'Romania',\n  },\n  RS: {\n    bban: '18N',\n    example: 'RS35260005601001611379',\n    len: 22,\n    name: 'Serbia',\n  },\n  SA: {\n    bban: '02N18C',\n    example: 'SA0380000000608010167519',\n    len: 24,\n    name: 'Saudi Arabia',\n  },\n  SC: {\n    bban: '27C',\n    example: 'SC52BAHL01031234567890123456USD',\n    len: 31,\n    name: 'Seychelles',\n  },\n  SE: {\n    bban: '20N',\n    example: 'SE3550000000054910000003',\n    len: 24,\n    name: 'Sweden',\n  },\n  SI: {\n    bban: '15N',\n    example: 'SI56191000000123438',\n    len: 19,\n    name: 'Slovenia',\n  },\n  SK: {\n    bban: '20N',\n    example: 'SK3112000000198742637541',\n    len: 24,\n    name: 'Slovakia',\n  },\n  SM: {\n    bban: '01A10N12C',\n    example: 'SM86U0322509800000000270100',\n    len: 27,\n    name: 'San Marino',\n  },\n  SN: {\n    bban: '01A23N',\n    example: 'SN12K00100152000025690007542',\n    len: 28,\n    name: 'Senegal',\n  },\n  ST: {\n    bban: '21C',\n    example: 'ST23000200000289355710148',\n    len: 25,\n    name: 'Sao Tome and Principe',\n  },\n  SV: {\n    bban: '24C',\n    example: 'SV43ACAT00000000000000123123',\n    len: 28,\n    name: 'El Salvador',\n  },\n  TD: {\n    bban: '23C',\n    example: 'TD8960002000010271091600153',\n    len: 27,\n    name: 'Chad',\n  },\n  TF: {\n    bban: '10N11C02N',\n    example: 'TF2120041010050500013M02606',\n    len: 27,\n    name: 'French Southern Territories',\n  },\n  TG: {\n    bban: '24C',\n    example: 'TG53TG0090604310346500400070',\n    len: 28,\n    name: 'Togo',\n  },\n  TL: {\n    bban: '19N',\n    example: 'TL380080012345678910157',\n    len: 23,\n    name: 'East Timor',\n  },\n  TN: {\n    bban: '20N',\n    example: 'TN5914207207100707129648',\n    len: 24,\n    name: 'Tunisia',\n  },\n  TR: {\n    bban: '05N17C',\n    example: 'TR330006100519786457841326',\n    len: 26,\n    name: 'Turkey',\n  },\n  UA: {\n    bban: '06N19C',\n    example: 'UA573543470006762462054925026',\n    len: 29,\n    name: 'Ukraine',\n  },\n  VA: {\n    bban: '03C15N',\n    example: 'VA59001123000012345678',\n    len: 22,\n    name: 'Vatican City State',\n  },\n  VG: {\n    bban: '04C16N',\n    example: 'VG96VPVG0000012345678901',\n    len: 24,\n    name: 'Virgin Islands, British',\n  },\n  WF: {\n    bban: '10N11C02N',\n    example: 'WF9120041010050500013M02606',\n    len: 27,\n    name: 'Wallis and Futuna Islands',\n  },\n  XK: {\n    bban: '04N10N02N',\n    example: 'XK051212012345678906',\n    len: 20,\n    name: 'Kosovo',\n  },\n  YT: {\n    bban: '10N11C02N',\n    example: 'YT3120041010050500013M02606',\n    len: 27,\n    name: 'Mayotte',\n  },\n};\n\nlet countries: IBANCountryList = { ..._countries };\n\nexport interface Country {\n  bban: string;\n  example?: string;\n  len: number;\n  name: string;\n}\n\nexport interface IBANCountryList {\n  [countryCode: string]: Country;\n}\n\nexport const addIBANCountries = (newCountries: IBANCountryList): IBANCountryList => {\n  countries = { ...countries, ...newCountries };\n\n  return countries;\n};\n\n/**\n * Given an iban returns that country specification\n *\n * type {function}\n * inner\n * throws {Error} If Country code is not defined\n *\n * @param {string} iban A valid IBAN number\n * @returns {object} Country specification\n */\nexport default (iban: string): Country => {\n  const countryCode = iban.slice(0, 2);\n\n  if (!{}.hasOwnProperty.call(countries, countryCode)) {\n    throw new Error(`Country code ${countryCode} is not supported`);\n  }\n\n  return countries[countryCode];\n};\n","const A = 'A'.charCodeAt(0);\nconst Z = 'Z'.charCodeAt(0);\n\nconst PATTERNS: { [key: string]: string } = {\n  A: 'A-Z',\n  N: '0-9',\n  C: '0-9A-Z',\n};\n\n// Stores bban validation regular expressions\nconst cachedBbanRegexp: { [key: string]: RegExp | undefined } = {};\n\n// Generates BBAN format as a regular expression and cache it\nconst prepareBbanRegexp = (bbanFormat: string): RegExp | undefined => {\n  const matchedString = bbanFormat.match(/[0-9]{2}[ANC]/g);\n  if (!matchedString) return undefined;\n\n  const pattern = matchedString.reduce((prevPattern, block) => {\n    const quantity = parseInt(block.slice(0, 2), 10);\n    const code = block[2];\n\n    return `${prevPattern}[${PATTERNS[code]}]{${quantity}}`;\n  }, '');\n  cachedBbanRegexp[bbanFormat] = new RegExp(pattern);\n\n  return cachedBbanRegexp[bbanFormat];\n};\n\n// Move the four initial characters to the end of the string\nconst rearrangeIban = (iban: string): string => `${iban.slice(4)}${iban.slice(0, 4)}`;\n\n/**\n * Removes spaces\n *\n * name  compact\n *\n * @param  {string} str A given string\n * @returns {string}     Compact string\n */\nexport const compact = (str: string): string => str.replace(/\\s+/g, '');\n\n/**\n * Generates a regular expression from encoded representation\n * It is grouped in blocks of 3 characters, first 2 represents the number\n * and the last character represents the type of character.\n * A = Upper case alpha characters [A-Z]\n * N = Numeric characters [0-9]\n * C = Mixed case alphanumeric characters [0-9a-zA-Z]\n *\n * name bbanRegexp\n * inner\n *\n * @param  {string} bbanFormat Encoded regular expression\n * @returns {object}            Resulting regular expression\n */\nexport const bbanRegexp = (bbanFormat: string): RegExp | undefined =>\n  cachedBbanRegexp[bbanFormat] || prepareBbanRegexp(bbanFormat);\n\n/**\n * Replace each letter in the string with two digits,\n * thereby expanding the string, where A = 10, B = 11, ..., Z = 35\n *\n * name convertIban\n *\n * @param {string} iban IBAN number\n * @returns {string} convetedIBAN representation of the IBAN\n */\nexport const convertIban = (iban: string): string =>\n  rearrangeIban(iban)\n    .split('')\n    .reduce((result, char) => {\n      const code = char.charCodeAt(0);\n      let num;\n      if (code >= A && code <= Z) {\n        num = String(code - A + 10);\n      } else {\n        num = char;\n      }\n\n      return `${result}${num}`;\n    }, '');\n","/**\n * Calculates remainder for numbers bigger than 2^53 - 1,\n * not supported in JavaScript.\n *\n * type {function}\n * inner\n *\n * @param  {string} dividend The dividend\n * @param  {number} divisor  The divisor\n * @returns {number}          The remainder\n */\nexport default (dividend: string, divisor: number): number => {\n  if (dividend.length < 10) {\n    return parseInt(dividend, 10) % divisor;\n  }\n\n  let D = dividend.slice(9);\n  let N = dividend.slice(0, 9);\n  let remainder = parseInt(N, 10) % divisor;\n\n  while (D.length > 7) {\n    N = String(remainder) + D.slice(0, 7);\n    remainder = parseInt(N, 10) % divisor;\n    D = D.slice(7);\n  }\n\n  N = String(remainder) + D;\n\n  return parseInt(N, 10) % divisor;\n};\n","/**\n * module lib-bb-iban\n * description IBAN structure validation library\n */\n\n// References:\n// https://www.swift.com/standards/data-standards/iban\n// https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\nimport countrySpecification from './countrySpec';\nimport { bbanRegexp, compact, convertIban } from './helpers';\nimport bigIntMod from './bigIntegerMod';\nimport { AbstractControl } from '@angular/forms';\n\n/**\n * Validates IBAN structure defined in ISO 13616-1 and ISO/IEC 7064 (MOD97-10).\n *\n * name isValidIBAN\n * type {function}\n *\n * @param {string} iban International bank account number.\n * @returns {boolean} whether input is a valid iban\n */\nexport const isValidIBAN = (iban: string): boolean => {\n  if (typeof iban !== 'string') {\n    return false;\n  }\n\n  let spec;\n  const compactIBAN = compact(iban.toUpperCase());\n\n  try {\n    spec = countrySpecification(compactIBAN);\n  } catch (error) {\n    return false;\n  }\n\n  const specBban = bbanRegexp(spec.bban) as RegExp;\n\n  return (\n    spec.len === compactIBAN.length &&\n    specBban.test(compactIBAN.slice(4)) &&\n    bigIntMod(convertIban(compactIBAN), 97) === 1\n  );\n};\n\n/**\n * Validates IBAN structure defined in ISO 13616-1 and ISO/IEC 7064 (MOD97-10).\n *\n * name isValidIBANFormControl\n * type {function}\n *\n * @param {AbstractControl} control control with iban International bank account number\n * @returns {Record<string, any>}\n * example: NL91ABNA0417164300\n */\nexport const isValidIBANFormControl = (control: AbstractControl): null | { [key: string]: any } => {\n  const iban = control.value;\n  if (typeof iban !== 'string') {\n    return { invalidIban: { value: control.value } };\n  }\n\n  let spec;\n  const compactIBAN = compact(iban.toUpperCase());\n  try {\n    spec = countrySpecification(compactIBAN);\n  } catch (error) {\n    return { invalidIban: { value: control.value } };\n  }\n\n  const specBban = bbanRegexp(spec.bban) as RegExp;\n  const res: boolean =\n    spec.len === compactIBAN.length &&\n    specBban.test(compactIBAN.slice(4)) &&\n    bigIntMod(convertIban(compactIBAN), 97) === 1;\n\n  return res ? null : { invalidIban: { value: control.value } };\n};\n\n/**\n * Validates BBAN structure defined in ISO 13616-1.\n *\n * name isValidBBAN\n * type {function}\n *\n * @param {string} iban International bank account number.\n * @returns {boolean} whether input is a valid bban\n */\nexport const isValidBBAN = (iban: string): boolean => {\n  if (typeof iban !== 'string') {\n    return false;\n  }\n\n  let spec;\n  const compactIBAN = compact(iban);\n\n  try {\n    spec = countrySpecification(compactIBAN);\n  } catch (error) {\n    return false;\n  }\n\n  // Remove country code and check digits\n  const bban = compactIBAN.slice(4);\n\n  const specBban = bbanRegexp(spec.bban) as RegExp;\n\n  return bban.length === spec.len - 4 && specBban.test(bban);\n};\n","import { Directive, Inject } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { isValidIBANFormControl } from './index';\nimport { BB_CONTACT_IBAN_COUNTRIES_LIST } from '../../config.providers';\nimport { addIBANCountries, IBANCountryList } from './countrySpec';\n\n/**\n * This is a directive to validate iban\n *\n * @usageNotes\n *\n * ### validates the iban\n *\n * ```html\n * <input type=\"text\" #ibanControl=\"ngModel\" [(ngModel)]=\"iban\" bbIbanValidatorUi />\n * ```\n * @ngModule IbanValidatorModule\n */\n\n@Directive({\n  selector: '[bbIbanValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: IbanValidatorDirective, multi: true }],\n})\nexport class IbanValidatorDirective implements Validator {\n  constructor(@Inject(BB_CONTACT_IBAN_COUNTRIES_LIST) private readonly ibanCountryList: IBANCountryList) {\n    addIBANCountries(this.ibanCountryList);\n  }\n\n  validate(control: AbstractControl): { [key: string]: any } | null {\n    return control && control.value ? isValidIBANFormControl(control) : null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IbanValidatorDirective } from './iban-validator.directive';\n\n/**\n * Exports:\n * - IbanValidatorDirective\n */\n@NgModule({\n  declarations: [IbanValidatorDirective],\n  exports: [IbanValidatorDirective],\n})\nexport class IbanValidatorModule {}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n/**\n * This is a directive to validate presence of email top-level domain\n *\n * @usageNotes\n *\n * ```html\n * <input type=\"email\" #ibanControl=\"ngModel\" [(ngModel)]=\"iban\" bbDomainValidator />\n * ```\n * @ngModule EmailDomainModule\n */\n\n@Directive({\n  selector: '[bbEmailDomainValidator]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: EmailDomainValidatorDirective, multi: true }],\n})\nexport class EmailDomainValidatorDirective implements Validator {\n  private topLevelDomainRegex = /@.*\\.(([a-zA-Z])|([a-zA-Z0-9][a-zA-Z0-9.\\-]*[a-zA-Z0-9]))$/;\n\n  /**\n   * Performs validation\n   *\n   * @param {AbstractControl} control form control\n   * @returns {Record<string, any>?} form control error object\n   */\n  validate(control: AbstractControl): Record<string, any> | null {\n    const value = control?.value;\n    if (!value) return null;\n\n    return this.topLevelDomainRegex.test(value) ? null : { email: { value } };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { EmailDomainValidatorDirective } from './email-domain-validator.directive';\n\n/**\n * Exports:\n * - EmailDomainValidatorDirective\n */\n@NgModule({\n  declarations: [EmailDomainValidatorDirective],\n  exports: [EmailDomainValidatorDirective],\n})\nexport class EmailDomainModule {}\n","export const getRelativeDate = (next?: number) => {\n  const date = new Date();\n  if (next) {\n    date.setDate(date.getDate() + next);\n  }\n\n  return date.toISOString().slice(0, 10);\n};\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { getRelativeDate } from '../../helpers/date';\n\nexport enum RelativeDate {\n  Yesterday = 'Yesterday',\n  Today = 'Today',\n  Tomorrow = 'Tomorrow',\n}\n/**\n * Pipe is used to show the date in a specific format\n *\n * @usageNotes\n *\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *   ],\n *  declarations: RelativeDatePipe\n * })\n * export class MyContactCommonAngModule {}\n * ```\n *\n * ### Can be used in html\n *\n * ```html\n * {{todayDate | relativeDate: 'mediumTime'}}\n * ```\n * @ngModule RelativeDateModule\n */\n@Pipe({ name: 'relativeDate' })\nexport class RelativeDatePipe implements PipeTransform {\n  readonly getRelativeDateHelper = getRelativeDate;\n\n  constructor(private readonly datePipe: DatePipe) {}\n\n  transform(value: string, dateFormat?: string) {\n    let result;\n\n    const yesterday = this.getRelativeDateHelper(-1);\n    const today = this.getRelativeDateHelper();\n    const tomorrow = this.getRelativeDateHelper(1);\n\n    switch (new Date(value).toISOString().slice(0, 10)) {\n      case yesterday:\n        result = RelativeDate.Yesterday;\n        break;\n      case today:\n        result = RelativeDate.Today;\n        break;\n      case tomorrow:\n        result = RelativeDate.Tomorrow;\n        break;\n      default:\n        result = this.datePipe.transform(value, dateFormat);\n    }\n\n    return result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RelativeDatePipe } from './relative-date.pipe';\nimport { CommonModule, DatePipe } from '@angular/common';\n\n/**\n * Exports:\n * - RelativeDatePipe\n */\n@NgModule({\n  declarations: [RelativeDatePipe],\n  providers: [DatePipe],\n  imports: [CommonModule],\n  exports: [RelativeDatePipe],\n})\nexport class RelativeDateModule {}\n","import { AbstractControl } from '@angular/forms';\n\nexport const isFormGroupValid = (controls: { [key: string]: AbstractControl }): boolean =>\n  Object.values(controls).reduce((valid, control) => {\n    control.markAllAsTouched();\n    control.updateValueAndValidity();\n\n    return valid && control.valid;\n  }, true);\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\n\n/**\n * This is a directive to validate white spaces\n *\n * @usageNotes\n *\n * ### validates the white spaces\n *\n * ```html\n *  <input type=\"text\" #nameControl=\"ngModel\" [(ngModel)]=\"name\" bbNoWhiteSpace />\n * ```\n * @ngModule NoWhiteSpaceModule\n */\n@Directive({\n  selector: '[bbNoWhiteSpace]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: NoWhiteSpaceValidatorDirective, multi: true }],\n})\nexport class NoWhiteSpaceValidatorDirective implements Validator {\n  validate(control: AbstractControl): ValidationErrors | null {\n    return noWhiteSpaceValidator(control);\n  }\n}\n\nexport const noWhiteSpaceValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  const isWhitespace = (control.value || '').trim().length === 0;\n\n  return isWhitespace ? { required: true } : null;\n};\n","import { NgModule } from '@angular/core';\nimport { NoWhiteSpaceValidatorDirective } from './no-white-space.directive';\n\n/**\n * Exports:\n * - NoWhiteSpaceValidatorDirective\n */\n@NgModule({\n  declarations: [NoWhiteSpaceValidatorDirective],\n  exports: [NoWhiteSpaceValidatorDirective],\n})\nexport class NoWhiteSpaceModule {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { CountryItemComponent } from './country-item.component';\n\n/**\n * This is an extension slot to be used for customizing country value.\n *\n * @usageNotes\n *\n * ### Display country\n *\n * ```html\n * <ng-template bbCountryItemCustomizable let-hostRef>\n *   <ng-container [ngSwitch]=\"hostRef.code\">\n *     <ng-container *ngSwitchCase=\"'AF'\" i18n=\"@@bb-country-item.AF\">Afghanistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'AX'\" i18n=\"@@bb-country-item.AX\">Aland Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'AL'\" i18n=\"@@bb-country-item.AL\">Albania</ng-container>\n *     <ng-container *ngSwitchCase=\"'DZ'\" i18n=\"@@bb-country-item.DZ\">Algeria</ng-container>\n *     <ng-container *ngSwitchCase=\"'AS'\" i18n=\"@@bb-country-item.AS\">American Samoa</ng-container>\n *     <ng-container *ngSwitchCase=\"'AD'\" i18n=\"@@bb-country-item.AD\">Andorra</ng-container>\n *     <ng-container *ngSwitchCase=\"'AO'\" i18n=\"@@bb-country-item.AO\">Angola</ng-container>\n *     <ng-container *ngSwitchCase=\"'AI'\" i18n=\"@@bb-country-item.AI\">Anguilla</ng-container>\n *     <ng-container *ngSwitchCase=\"'AQ'\" i18n=\"@@bb-country-item.AQ\">Antarctica</ng-container>\n *     <ng-container *ngSwitchCase=\"'AG'\" i18n=\"@@bb-country-item.AG\">Antigua and Barbuda</ng-container>\n *     <ng-container *ngSwitchCase=\"'AR'\" i18n=\"@@bb-country-item.AR\">Argentina</ng-container>\n *     <ng-container *ngSwitchCase=\"'AM'\" i18n=\"@@bb-country-item.AM\">Armenia</ng-container>\n *     <ng-container *ngSwitchCase=\"'AW'\" i18n=\"@@bb-country-item.AW\">Aruba</ng-container>\n *     <ng-container *ngSwitchCase=\"'AU'\" i18n=\"@@bb-country-item.AU\">Australia</ng-container>\n *     <ng-container *ngSwitchCase=\"'AT'\" i18n=\"@@bb-country-item.AT\">Austria</ng-container>\n *     <ng-container *ngSwitchCase=\"'AZ'\" i18n=\"@@bb-country-item.AZ\">Azerbaijan</ng-container>\n *     <ng-container *ngSwitchCase=\"'BS'\" i18n=\"@@bb-country-item.BS\">Bahamas</ng-container>\n *     <ng-container *ngSwitchCase=\"'BH'\" i18n=\"@@bb-country-item.BH\">Bahrain</ng-container>\n *     <ng-container *ngSwitchCase=\"'BD'\" i18n=\"@@bb-country-item.BD\">Bangladesh</ng-container>\n *     <ng-container *ngSwitchCase=\"'BB'\" i18n=\"@@bb-country-item.BB\">Barbados</ng-container>\n *     <ng-container *ngSwitchCase=\"'BY'\" i18n=\"@@bb-country-item.BY\">Belarus</ng-container>\n *     <ng-container *ngSwitchCase=\"'BE'\" i18n=\"@@bb-country-item.BE\">Belgium</ng-container>\n *     <ng-container *ngSwitchCase=\"'BZ'\" i18n=\"@@bb-country-item.BZ\">Belize</ng-container>\n *     <ng-container *ngSwitchCase=\"'BJ'\" i18n=\"@@bb-country-item.BJ\">Benin</ng-container>\n *     <ng-container *ngSwitchCase=\"'BM'\" i18n=\"@@bb-country-item.BM\">Bermuda</ng-container>\n *     <ng-container *ngSwitchCase=\"'BT'\" i18n=\"@@bb-country-item.BT\">Bhutan</ng-container>\n *     <ng-container *ngSwitchCase=\"'BO'\" i18n=\"@@bb-country-item.BO\">Bolivia, Plurinational State of</ng-container>\n *     <ng-container *ngSwitchCase=\"'BQ'\" i18n=\"@@bb-country-item.BQ\">Bonaire, Saint Eustatius and Saba</ng-container>\n *     <ng-container *ngSwitchCase=\"'BA'\" i18n=\"@@bb-country-item.BA\">Bosnia and Herzegovina</ng-container>\n *     <ng-container *ngSwitchCase=\"'BW'\" i18n=\"@@bb-country-item.BW\">Botswana</ng-container>\n *     <ng-container *ngSwitchCase=\"'BV'\" i18n=\"@@bb-country-item.BV\">Bouvet Island</ng-container>\n *     <ng-container *ngSwitchCase=\"'BR'\" i18n=\"@@bb-country-item.BR\">Brazil</ng-container>\n *     <ng-container *ngSwitchCase=\"'IO'\" i18n=\"@@bb-country-item.IO\">British Indian Ocean Territory</ng-container>\n *     <ng-container *ngSwitchCase=\"'BN'\" i18n=\"@@bb-country-item.BN\">Brunei Darussalam</ng-container>\n *     <ng-container *ngSwitchCase=\"'BG'\" i18n=\"@@bb-country-item.BG\">Bulgaria</ng-container>\n *     <ng-container *ngSwitchCase=\"'BF'\" i18n=\"@@bb-country-item.BF\">Burkina Faso</ng-container>\n *     <ng-container *ngSwitchCase=\"'BI'\" i18n=\"@@bb-country-item.BI\">Burundi</ng-container>\n *     <ng-container *ngSwitchCase=\"'KH'\" i18n=\"@@bb-country-item.KH\">Cambodia</ng-container>\n *     <ng-container *ngSwitchCase=\"'CM'\" i18n=\"@@bb-country-item.CM\">Cameroon</ng-container>\n *     <ng-container *ngSwitchCase=\"'CA'\" i18n=\"@@bb-country-item.CA\">Canada</ng-container>\n *     <ng-container *ngSwitchCase=\"'CV'\" i18n=\"@@bb-country-item.CV\">Cape Verde</ng-container>\n *     <ng-container *ngSwitchCase=\"'KY'\" i18n=\"@@bb-country-item.KY\">Cayman Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'CF'\" i18n=\"@@bb-country-item.CF\">Central African Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'TD'\" i18n=\"@@bb-country-item.TD\">Chad</ng-container>\n *     <ng-container *ngSwitchCase=\"'CL'\" i18n=\"@@bb-country-item.CL\">Chile</ng-container>\n *     <ng-container *ngSwitchCase=\"'CN'\" i18n=\"@@bb-country-item.CN\">China</ng-container>\n *     <ng-container *ngSwitchCase=\"'CX'\" i18n=\"@@bb-country-item.CX\">Christmas Island</ng-container>\n *     <ng-container *ngSwitchCase=\"'CC'\" i18n=\"@@bb-country-item.CC\">Cocos (Keeling) Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'CO'\" i18n=\"@@bb-country-item.CO\">Colombia</ng-container>\n *     <ng-container *ngSwitchCase=\"'KM'\" i18n=\"@@bb-country-item.KM\">Comoros</ng-container>\n *     <ng-container *ngSwitchCase=\"'CG'\" i18n=\"@@bb-country-item.CG\">Congo</ng-container>\n *     <ng-container *ngSwitchCase=\"'CD'\" i18n=\"@@bb-country-item.CD\">Congo, The Democratic Republic of the</ng-container>\n *     <ng-container *ngSwitchCase=\"'CK'\" i18n=\"@@bb-country-item.CK\">Cook Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'CR'\" i18n=\"@@bb-country-item.CR\">Costa Rica</ng-container>\n *     <ng-container *ngSwitchCase=\"'CI'\" i18n=\"@@bb-country-item.CI\">Cote d'Ivoire</ng-container>\n *     <ng-container *ngSwitchCase=\"'HR'\" i18n=\"@@bb-country-item.HR\">Croatia</ng-container>\n *     <ng-container *ngSwitchCase=\"'CU'\" i18n=\"@@bb-country-item.CU\">Cuba</ng-container>\n *     <ng-container *ngSwitchCase=\"'CW'\" i18n=\"@@bb-country-item.CW\">Curacao</ng-container>\n *     <ng-container *ngSwitchCase=\"'CY'\" i18n=\"@@bb-country-item.CY\">Cyprus</ng-container>\n *     <ng-container *ngSwitchCase=\"'CZ'\" i18n=\"@@bb-country-item.CZ\">Czech Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'DK'\" i18n=\"@@bb-country-item.DK\">Denmark</ng-container>\n *     <ng-container *ngSwitchCase=\"'DJ'\" i18n=\"@@bb-country-item.DJ\">Djibouti</ng-container>\n *     <ng-container *ngSwitchCase=\"'DM'\" i18n=\"@@bb-country-item.DM\">Dominica</ng-container>\n *     <ng-container *ngSwitchCase=\"'DO'\" i18n=\"@@bb-country-item.DO\">Dominican Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'EC'\" i18n=\"@@bb-country-item.EC\">Ecuador</ng-container>\n *     <ng-container *ngSwitchCase=\"'EG'\" i18n=\"@@bb-country-item.EG\">Egypt</ng-container>\n *     <ng-container *ngSwitchCase=\"'SV'\" i18n=\"@@bb-country-item.SV\">El Salvador</ng-container>\n *     <ng-container *ngSwitchCase=\"'GQ'\" i18n=\"@@bb-country-item.GQ\">Equatorial Guinea</ng-container>\n *     <ng-container *ngSwitchCase=\"'ER'\" i18n=\"@@bb-country-item.ER\">Eritrea</ng-container>\n *     <ng-container *ngSwitchCase=\"'EE'\" i18n=\"@@bb-country-item.EE\">Estonia</ng-container>\n *     <ng-container *ngSwitchCase=\"'ET'\" i18n=\"@@bb-country-item.ET\">Ethiopia</ng-container>\n *     <ng-container *ngSwitchCase=\"'FK'\" i18n=\"@@bb-country-item.FK\">Falkland Islands (Malvinas)</ng-container>\n *     <ng-container *ngSwitchCase=\"'FO'\" i18n=\"@@bb-country-item.FO\">Faroe Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'FJ'\" i18n=\"@@bb-country-item.FJ\">Fiji</ng-container>\n *     <ng-container *ngSwitchCase=\"'FI'\" i18n=\"@@bb-country-item.FI\">Finland</ng-container>\n *     <ng-container *ngSwitchCase=\"'FR'\" i18n=\"@@bb-country-item.FR\">France</ng-container>\n *     <ng-container *ngSwitchCase=\"'GF'\" i18n=\"@@bb-country-item.GF\">French Guiana</ng-container>\n *     <ng-container *ngSwitchCase=\"'PF'\" i18n=\"@@bb-country-item.PF\">French Polynesia</ng-container>\n *     <ng-container *ngSwitchCase=\"'TF'\" i18n=\"@@bb-country-item.TF\">French Southern Territories</ng-container>\n *     <ng-container *ngSwitchCase=\"'GA'\" i18n=\"@@bb-country-item.GA\">Gabon</ng-container>\n *     <ng-container *ngSwitchCase=\"'GM'\" i18n=\"@@bb-country-item.GM\">Gambia</ng-container>\n *     <ng-container *ngSwitchCase=\"'GE'\" i18n=\"@@bb-country-item.GE\">Georgia</ng-container>\n *     <ng-container *ngSwitchCase=\"'DE'\" i18n=\"@@bb-country-item.DE\">Germany</ng-container>\n *     <ng-container *ngSwitchCase=\"'GH'\" i18n=\"@@bb-country-item.GH\">Ghana</ng-container>\n *     <ng-container *ngSwitchCase=\"'GI'\" i18n=\"@@bb-country-item.GI\">Gibraltar</ng-container>\n *     <ng-container *ngSwitchCase=\"'GR'\" i18n=\"@@bb-country-item.GR\">Greece</ng-container>\n *     <ng-container *ngSwitchCase=\"'GL'\" i18n=\"@@bb-country-item.GL\">Greenland</ng-container>\n *     <ng-container *ngSwitchCase=\"'GD'\" i18n=\"@@bb-country-item.GD\">Grenada</ng-container>\n *     <ng-container *ngSwitchCase=\"'GP'\" i18n=\"@@bb-country-item.GP\">Guadeloupe</ng-container>\n *     <ng-container *ngSwitchCase=\"'GU'\" i18n=\"@@bb-country-item.GU\">Guam</ng-container>\n *     <ng-container *ngSwitchCase=\"'GT'\" i18n=\"@@bb-country-item.GT\">Guatemala</ng-container>\n *     <ng-container *ngSwitchCase=\"'GG'\" i18n=\"@@bb-country-item.GG\">Guernsey</ng-container>\n *     <ng-container *ngSwitchCase=\"'GN'\" i18n=\"@@bb-country-item.GN\">Guinea</ng-container>\n *     <ng-container *ngSwitchCase=\"'GW'\" i18n=\"@@bb-country-item.GW\">Guinea-Bissau</ng-container>\n *     <ng-container *ngSwitchCase=\"'GY'\" i18n=\"@@bb-country-item.GY\">Guyana</ng-container>\n *     <ng-container *ngSwitchCase=\"'HT'\" i18n=\"@@bb-country-item.HT\">Haiti</ng-container>\n *     <ng-container *ngSwitchCase=\"'HM'\" i18n=\"@@bb-country-item.HM\">Heard Island and McDonald Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'VA'\" i18n=\"@@bb-country-item.VA\">Holy See (Vatican City State)</ng-container>\n *     <ng-container *ngSwitchCase=\"'HN'\" i18n=\"@@bb-country-item.HN\">Honduras</ng-container>\n *     <ng-container *ngSwitchCase=\"'HK'\" i18n=\"@@bb-country-item.HK\">Hong Kong</ng-container>\n *     <ng-container *ngSwitchCase=\"'HU'\" i18n=\"@@bb-country-item.HU\">Hungary</ng-container>\n *     <ng-container *ngSwitchCase=\"'IS'\" i18n=\"@@bb-country-item.IS\">Iceland</ng-container>\n *     <ng-container *ngSwitchCase=\"'IN'\" i18n=\"@@bb-country-item.IN\">India</ng-container>\n *     <ng-container *ngSwitchCase=\"'ID'\" i18n=\"@@bb-country-item.ID\">Indonesia</ng-container>\n *     <ng-container *ngSwitchCase=\"'IR'\" i18n=\"@@bb-country-item.IR\">Iran, Islamic Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'IQ'\" i18n=\"@@bb-country-item.IQ\">Iraq</ng-container>\n *     <ng-container *ngSwitchCase=\"'IE'\" i18n=\"@@bb-country-item.IE\">Ireland</ng-container>\n *     <ng-container *ngSwitchCase=\"'IM'\" i18n=\"@@bb-country-item.IM\">Isle of Man</ng-container>\n *     <ng-container *ngSwitchCase=\"'IL'\" i18n=\"@@bb-country-item.IL\">Israel</ng-container>\n *     <ng-container *ngSwitchCase=\"'IT'\" i18n=\"@@bb-country-item.IT\">Italy</ng-container>\n *     <ng-container *ngSwitchCase=\"'JM'\" i18n=\"@@bb-country-item.JM\">Jamaica</ng-container>\n *     <ng-container *ngSwitchCase=\"'JP'\" i18n=\"@@bb-country-item.JP\">Japan</ng-container>\n *     <ng-container *ngSwitchCase=\"'JE'\" i18n=\"@@bb-country-item.JE\">Jersey</ng-container>\n *     <ng-container *ngSwitchCase=\"'JO'\" i18n=\"@@bb-country-item.JO\">Jordan</ng-container>\n *     <ng-container *ngSwitchCase=\"'KZ'\" i18n=\"@@bb-country-item.KZ\">Kazakhstan</ng-container>\n *     <ng-container *ngSwitchCase=\"'KE'\" i18n=\"@@bb-country-item.KE\">Kenya</ng-container>\n *     <ng-container *ngSwitchCase=\"'KI'\" i18n=\"@@bb-country-item.KI\">Kiribati</ng-container>\n *     <ng-container *ngSwitchCase=\"'KP'\" i18n=\"@@bb-country-item.KP\">Korea, Democratic People's Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'KR'\" i18n=\"@@bb-country-item.KR\">Korea, Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'KW'\" i18n=\"@@bb-country-item.KW\">Kuwait</ng-container>\n *     <ng-container *ngSwitchCase=\"'KG'\" i18n=\"@@bb-country-item.KG\">Kyrgyzstan</ng-container>\n *     <ng-container *ngSwitchCase=\"'LA'\" i18n=\"@@bb-country-item.LA\">Lao People's Democratic Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'LV'\" i18n=\"@@bb-country-item.LV\">Latvia</ng-container>\n *     <ng-container *ngSwitchCase=\"'LB'\" i18n=\"@@bb-country-item.LB\">Lebanon</ng-container>\n *     <ng-container *ngSwitchCase=\"'LS'\" i18n=\"@@bb-country-item.LS\">Lesotho</ng-container>\n *     <ng-container *ngSwitchCase=\"'LR'\" i18n=\"@@bb-country-item.LR\">Liberia</ng-container>\n *     <ng-container *ngSwitchCase=\"'LY'\" i18n=\"@@bb-country-item.LY\">Libyan Arab Jamahiriya</ng-container>\n *     <ng-container *ngSwitchCase=\"'LI'\" i18n=\"@@bb-country-item.LI\">Liechtenstein</ng-container>\n *     <ng-container *ngSwitchCase=\"'LT'\" i18n=\"@@bb-country-item.LT\">Lithuania</ng-container>\n *     <ng-container *ngSwitchCase=\"'LU'\" i18n=\"@@bb-country-item.LU\">Luxembourg</ng-container>\n *     <ng-container *ngSwitchCase=\"'MO'\" i18n=\"@@bb-country-item.MO\">Macao</ng-container>\n *     <ng-container *ngSwitchCase=\"'MK'\" i18n=\"@@bb-country-item.MK\">Macedonia, The Former Yugoslav Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'MG'\" i18n=\"@@bb-country-item.MG\">Madagascar</ng-container>\n *     <ng-container *ngSwitchCase=\"'MW'\" i18n=\"@@bb-country-item.MW\">Malawi</ng-container>\n *     <ng-container *ngSwitchCase=\"'MY'\" i18n=\"@@bb-country-item.MY\">Malaysia</ng-container>\n *     <ng-container *ngSwitchCase=\"'MV'\" i18n=\"@@bb-country-item.MV\">Maldives</ng-container>\n *     <ng-container *ngSwitchCase=\"'ML'\" i18n=\"@@bb-country-item.ML\">Mali</ng-container>\n *     <ng-container *ngSwitchCase=\"'MT'\" i18n=\"@@bb-country-item.MT\">Malta</ng-container>\n *     <ng-container *ngSwitchCase=\"'MH'\" i18n=\"@@bb-country-item.MH\">Marshall Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'MQ'\" i18n=\"@@bb-country-item.MQ\">Martinique</ng-container>\n *     <ng-container *ngSwitchCase=\"'MR'\" i18n=\"@@bb-country-item.MR\">Mauritania</ng-container>\n *     <ng-container *ngSwitchCase=\"'MU'\" i18n=\"@@bb-country-item.MU\">Mauritius</ng-container>\n *     <ng-container *ngSwitchCase=\"'YT'\" i18n=\"@@bb-country-item.YT\">Mayotte</ng-container>\n *     <ng-container *ngSwitchCase=\"'MX'\" i18n=\"@@bb-country-item.MX\">Mexico</ng-container>\n *     <ng-container *ngSwitchCase=\"'FM'\" i18n=\"@@bb-country-item.FM\">Micronesia, Federated States of</ng-container>\n *     <ng-container *ngSwitchCase=\"'MD'\" i18n=\"@@bb-country-item.MD\">Moldova, Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'MC'\" i18n=\"@@bb-country-item.MC\">Monaco</ng-container>\n *     <ng-container *ngSwitchCase=\"'MN'\" i18n=\"@@bb-country-item.MN\">Mongolia</ng-container>\n *     <ng-container *ngSwitchCase=\"'ME'\" i18n=\"@@bb-country-item.ME\">Montenegro</ng-container>\n *     <ng-container *ngSwitchCase=\"'MS'\" i18n=\"@@bb-country-item.MS\">Montserrat</ng-container>\n *     <ng-container *ngSwitchCase=\"'MA'\" i18n=\"@@bb-country-item.MA\">Morocco</ng-container>\n *     <ng-container *ngSwitchCase=\"'MZ'\" i18n=\"@@bb-country-item.MZ\">Mozambique</ng-container>\n *     <ng-container *ngSwitchCase=\"'MM'\" i18n=\"@@bb-country-item.MM\">Myanmar</ng-container>\n *     <ng-container *ngSwitchCase=\"'NA'\" i18n=\"@@bb-country-item.NA\">Namibia</ng-container>\n *     <ng-container *ngSwitchCase=\"'NR'\" i18n=\"@@bb-country-item.NR\">Nauru</ng-container>\n *     <ng-container *ngSwitchCase=\"'NP'\" i18n=\"@@bb-country-item.NP\">Nepal</ng-container>\n *     <ng-container *ngSwitchCase=\"'NL'\" i18n=\"@@bb-country-item.NL\">Netherlands</ng-container>\n *     <ng-container *ngSwitchCase=\"'NC'\" i18n=\"@@bb-country-item.NC\">New Caledonia</ng-container>\n *     <ng-container *ngSwitchCase=\"'NZ'\" i18n=\"@@bb-country-item.NZ\">New Zealand</ng-container>\n *     <ng-container *ngSwitchCase=\"'NI'\" i18n=\"@@bb-country-item.NI\">Nicaragua</ng-container>\n *     <ng-container *ngSwitchCase=\"'NE'\" i18n=\"@@bb-country-item.NE\">Niger</ng-container>\n *     <ng-container *ngSwitchCase=\"'NG'\" i18n=\"@@bb-country-item.NG\">Nigeria</ng-container>\n *     <ng-container *ngSwitchCase=\"'NU'\" i18n=\"@@bb-country-item.NU\">Niue</ng-container>\n *     <ng-container *ngSwitchCase=\"'NF'\" i18n=\"@@bb-country-item.NF\">Norfolk Island</ng-container>\n *     <ng-container *ngSwitchCase=\"'MP'\" i18n=\"@@bb-country-item.MP\">Northern Mariana Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'NO'\" i18n=\"@@bb-country-item.NO\">Norway</ng-container>\n *     <ng-container *ngSwitchCase=\"'PS'\" i18n=\"@@bb-country-item.PS\">Occupied Palestinian Territory</ng-container>\n *     <ng-container *ngSwitchCase=\"'OM'\" i18n=\"@@bb-country-item.OM\">Oman</ng-container>\n *     <ng-container *ngSwitchCase=\"'PK'\" i18n=\"@@bb-country-item.PK\">Pakistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'PW'\" i18n=\"@@bb-country-item.PW\">Palau</ng-container>\n *     <ng-container *ngSwitchCase=\"'PA'\" i18n=\"@@bb-country-item.PA\">Panama</ng-container>\n *     <ng-container *ngSwitchCase=\"'PG'\" i18n=\"@@bb-country-item.PG\">Papua New Guinea</ng-container>\n *     <ng-container *ngSwitchCase=\"'PY'\" i18n=\"@@bb-country-item.PY\">Paraguay</ng-container>\n *     <ng-container *ngSwitchCase=\"'PE'\" i18n=\"@@bb-country-item.PE\">Peru</ng-container>\n *     <ng-container *ngSwitchCase=\"'PH'\" i18n=\"@@bb-country-item.PH\">Philippines</ng-container>\n *     <ng-container *ngSwitchCase=\"'PN'\" i18n=\"@@bb-country-item.PN\">Pitcairn</ng-container>\n *     <ng-container *ngSwitchCase=\"'PL'\" i18n=\"@@bb-country-item.PL\">Poland</ng-container>\n *     <ng-container *ngSwitchCase=\"'PT'\" i18n=\"@@bb-country-item.PT\">Portugal</ng-container>\n *     <ng-container *ngSwitchCase=\"'PR'\" i18n=\"@@bb-country-item.PR\">Puerto Rico</ng-container>\n *     <ng-container *ngSwitchCase=\"'QA'\" i18n=\"@@bb-country-item.QA\">Qatar</ng-container>\n *     <ng-container *ngSwitchCase=\"'RE'\" i18n=\"@@bb-country-item.RE\">Reunion</ng-container>\n *     <ng-container *ngSwitchCase=\"'RO'\" i18n=\"@@bb-country-item.RO\">Romania</ng-container>\n *     <ng-container *ngSwitchCase=\"'RU'\" i18n=\"@@bb-country-item.RU\">Russian Federation</ng-container>\n *     <ng-container *ngSwitchCase=\"'RW'\" i18n=\"@@bb-country-item.RW\">Rwanda</ng-container>\n *     <ng-container *ngSwitchCase=\"'BL'\" i18n=\"@@bb-country-item.BL\">Saint Barthelemy</ng-container>\n *     <ng-container *ngSwitchCase=\"'SH'\" i18n=\"@@bb-country-item.SH\">Saint Helena, Ascension and Tristan da Cunha</ng-container>\n *     <ng-container *ngSwitchCase=\"'KN'\" i18n=\"@@bb-country-item.KN\">Saint Kitts and Nevis</ng-container>\n *     <ng-container *ngSwitchCase=\"'LC'\" i18n=\"@@bb-country-item.LC\">Saint Lucia</ng-container>\n *     <ng-container *ngSwitchCase=\"'MF'\" i18n=\"@@bb-country-item.MF\">Saint Martin (French part)</ng-container>\n *     <ng-container *ngSwitchCase=\"'PM'\" i18n=\"@@bb-country-item.PM\">Saint Pierre and Miquelon</ng-container>\n *     <ng-container *ngSwitchCase=\"'VC'\" i18n=\"@@bb-country-item.VC\">Saint Vincent and The Grenadines</ng-container>\n *     <ng-container *ngSwitchCase=\"'WS'\" i18n=\"@@bb-country-item.WS\">Samoa</ng-container>\n *     <ng-container *ngSwitchCase=\"'SM'\" i18n=\"@@bb-country-item.SM\">San Marino</ng-container>\n *     <ng-container *ngSwitchCase=\"'ST'\" i18n=\"@@bb-country-item.ST\">Sao Tome and Principe</ng-container>\n *     <ng-container *ngSwitchCase=\"'SA'\" i18n=\"@@bb-country-item.SA\">Saudi Arabia</ng-container>\n *     <ng-container *ngSwitchCase=\"'SN'\" i18n=\"@@bb-country-item.SN\">Senegal</ng-container>\n *     <ng-container *ngSwitchCase=\"'RS'\" i18n=\"@@bb-country-item.RS\">Serbia</ng-container>\n *     <ng-container *ngSwitchCase=\"'SC'\" i18n=\"@@bb-country-item.SC\">Seychelles</ng-container>\n *     <ng-container *ngSwitchCase=\"'SL'\" i18n=\"@@bb-country-item.SL\">Sierra Leone</ng-container>\n *     <ng-container *ngSwitchCase=\"'SG'\" i18n=\"@@bb-country-item.SG\">Singapore</ng-container>\n *     <ng-container *ngSwitchCase=\"'SX'\" i18n=\"@@bb-country-item.SX\">Sint Maarten (Dutch part)</ng-container>\n *     <ng-container *ngSwitchCase=\"'SK'\" i18n=\"@@bb-country-item.SK\">Slovakia</ng-container>\n *     <ng-container *ngSwitchCase=\"'SI'\" i18n=\"@@bb-country-item.SI\">Slovenia</ng-container>\n *     <ng-container *ngSwitchCase=\"'SB'\" i18n=\"@@bb-country-item.SB\">Solomon Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'SO'\" i18n=\"@@bb-country-item.SO\">Somalia</ng-container>\n *     <ng-container *ngSwitchCase=\"'ZA'\" i18n=\"@@bb-country-item.ZA\">South Africa</ng-container>\n *     <ng-container *ngSwitchCase=\"'GS'\" i18n=\"@@bb-country-item.GS\">South Georgia and the South Sandwich Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'ES'\" i18n=\"@@bb-country-item.ES\">Spain</ng-container>\n *     <ng-container *ngSwitchCase=\"'LK'\" i18n=\"@@bb-country-item.LK\">Sri Lanka</ng-container>\n *     <ng-container *ngSwitchCase=\"'SD'\" i18n=\"@@bb-country-item.SD\">Sudan</ng-container>\n *     <ng-container *ngSwitchCase=\"'SR'\" i18n=\"@@bb-country-item.SR\">Suriname</ng-container>\n *     <ng-container *ngSwitchCase=\"'SJ'\" i18n=\"@@bb-country-item.SJ\">Svalbard and Jan Mayen</ng-container>\n *     <ng-container *ngSwitchCase=\"'SZ'\" i18n=\"@@bb-country-item.SZ\">Swaziland</ng-container>\n *     <ng-container *ngSwitchCase=\"'SE'\" i18n=\"@@bb-country-item.SE\">Sweden</ng-container>\n *     <ng-container *ngSwitchCase=\"'CH'\" i18n=\"@@bb-country-item.CH\">Switzerland</ng-container>\n *     <ng-container *ngSwitchCase=\"'SY'\" i18n=\"@@bb-country-item.SY\">Syrian Arab Republic</ng-container>\n *     <ng-container *ngSwitchCase=\"'TW'\" i18n=\"@@bb-country-item.TW\">Taiwan, Province of China</ng-container>\n *     <ng-container *ngSwitchCase=\"'TJ'\" i18n=\"@@bb-country-item.TJ\">Tajikistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'TZ'\" i18n=\"@@bb-country-item.TZ\">Tanzania, United Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'TH'\" i18n=\"@@bb-country-item.TH\">Thailand</ng-container>\n *     <ng-container *ngSwitchCase=\"'TL'\" i18n=\"@@bb-country-item.TL\">Timor-Leste</ng-container>\n *     <ng-container *ngSwitchCase=\"'TG'\" i18n=\"@@bb-country-item.TG\">Togo</ng-container>\n *     <ng-container *ngSwitchCase=\"'TK'\" i18n=\"@@bb-country-item.TK\">Tokelau</ng-container>\n *     <ng-container *ngSwitchCase=\"'TO'\" i18n=\"@@bb-country-item.TO\">Tonga</ng-container>\n *     <ng-container *ngSwitchCase=\"'TT'\" i18n=\"@@bb-country-item.TT\">Trinidad and Tobago</ng-container>\n *     <ng-container *ngSwitchCase=\"'TN'\" i18n=\"@@bb-country-item.TN\">Tunisia</ng-container>\n *     <ng-container *ngSwitchCase=\"'TR'\" i18n=\"@@bb-country-item.TR\">Turkey</ng-container>\n *     <ng-container *ngSwitchCase=\"'TM'\" i18n=\"@@bb-country-item.TM\">Turkmenistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'TC'\" i18n=\"@@bb-country-item.TC\">Turks and Caicos Islands</ng-container>\n *     <ng-container *ngSwitchCase=\"'TV'\" i18n=\"@@bb-country-item.TV\">Tuvalu</ng-container>\n *     <ng-container *ngSwitchCase=\"'UG'\" i18n=\"@@bb-country-item.UG\">Uganda</ng-container>\n *     <ng-container *ngSwitchCase=\"'UA'\" i18n=\"@@bb-country-item.UA\">Ukraine</ng-container>\n *     <ng-container *ngSwitchCase=\"'AE'\" i18n=\"@@bb-country-item.AE\">United Arab Emirates</ng-container>\n *     <ng-container *ngSwitchCase=\"'GB'\" i18n=\"@@bb-country-item.GB\">United Kingdom</ng-container>\n *     <ng-container *ngSwitchCase=\"'US'\" i18n=\"@@bb-country-item.US\">United States</ng-container>\n *     <ng-container *ngSwitchCase=\"'UY'\" i18n=\"@@bb-country-item.UY\">Uruguay</ng-container>\n *     <ng-container *ngSwitchCase=\"'UZ'\" i18n=\"@@bb-country-item.UZ\">Uzbekistan</ng-container>\n *     <ng-container *ngSwitchCase=\"'VU'\" i18n=\"@@bb-country-item.VU\">Vanuatu</ng-container>\n *     <ng-container *ngSwitchCase=\"'VE'\" i18n=\"@@bb-country-item.VE\">Venezuela, Bolivarian Republic of</ng-container>\n *     <ng-container *ngSwitchCase=\"'VN'\" i18n=\"@@bb-country-item.VN\">Viet Nam</ng-container>\n *     <ng-container *ngSwitchCase=\"'VG'\" i18n=\"@@bb-country-item.VG\">Virgin Islands, British</ng-container>\n *     <ng-container *ngSwitchCase=\"'VI'\" i18n=\"@@bb-country-item.VI\">Virgin Islands, U.S.</ng-container>\n *     <ng-container *ngSwitchCase=\"'WF'\" i18n=\"@@bb-country-item.WF\">Wallis and Futuna</ng-container>\n *     <ng-container *ngSwitchCase=\"'EH'\" i18n=\"@@bb-country-item.EH\">Western Sahara</ng-container>\n *     <ng-container *ngSwitchCase=\"'YE'\" i18n=\"@@bb-country-item.YE\">Yemen</ng-container>\n *     <ng-container *ngSwitchCase=\"'ZM'\" i18n=\"@@bb-country-item.ZM\">Zambia</ng-container>\n *     <ng-container *ngSwitchCase=\"'ZW'\" i18n=\"@@bb-country-item.ZW\">Zimbabwe</ng-container>\n *   </ng-container>\n * </ng-template>\n * ```\n * @ngModule CountryItemModule\n */\n@Directive({\n  selector: '[bbCountryItemCustomizable]',\n})\nexport class CountryItemCustomizableDirective extends BbTemplate<CountryItemComponent, undefined> {}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n/**\n * The component is for showing the country based on ISO code.\n *\n * The following extension slots are available in this component:\n *  - `CountryItemCustomizableDirective`\n *\n * @see CountryItemCustomizableDirective\n * @usageNotes\n *\n * ### Display contact form\n *\n * ```html\n *    <bb-country-item [code]=\"country\"></bb-country-item>\n * ```\n * @ngModule CountryItemModule\n */\n@Component({\n  selector: 'bb-country-item',\n  templateUrl: './country-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountryItemComponent implements OnInit {\n  hostRef: CountryItemComponent = this;\n  /**\n   * ISO 3166 Alpha-2 country code\n   */\n  @Input()\n  code!: string;\n\n  ngOnInit() {\n    if (!this.code) {\n      console.warn('Please provide a ISO 3166 Alpha-2 country code');\n    }\n  }\n}\n","<ng-container bbCountryItemCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbCountryItemCustomizable let-hostRef>\n  <ng-container [ngSwitch]=\"hostRef.code\">\n    <ng-container *ngSwitchCase=\"'AF'\" i18n=\"@@bb-country-item.AF\">Afghanistan</ng-container>\n    <ng-container *ngSwitchCase=\"'AX'\" i18n=\"@@bb-country-item.AX\">Aland Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'AL'\" i18n=\"@@bb-country-item.AL\">Albania</ng-container>\n    <ng-container *ngSwitchCase=\"'DZ'\" i18n=\"@@bb-country-item.DZ\">Algeria</ng-container>\n    <ng-container *ngSwitchCase=\"'AS'\" i18n=\"@@bb-country-item.AS\">American Samoa</ng-container>\n    <ng-container *ngSwitchCase=\"'AD'\" i18n=\"@@bb-country-item.AD\">Andorra</ng-container>\n    <ng-container *ngSwitchCase=\"'AO'\" i18n=\"@@bb-country-item.AO\">Angola</ng-container>\n    <ng-container *ngSwitchCase=\"'AI'\" i18n=\"@@bb-country-item.AI\">Anguilla</ng-container>\n    <ng-container *ngSwitchCase=\"'AQ'\" i18n=\"@@bb-country-item.AQ\">Antarctica</ng-container>\n    <ng-container *ngSwitchCase=\"'AG'\" i18n=\"@@bb-country-item.AG\">Antigua and Barbuda</ng-container>\n    <ng-container *ngSwitchCase=\"'AR'\" i18n=\"@@bb-country-item.AR\">Argentina</ng-container>\n    <ng-container *ngSwitchCase=\"'AM'\" i18n=\"@@bb-country-item.AM\">Armenia</ng-container>\n    <ng-container *ngSwitchCase=\"'AW'\" i18n=\"@@bb-country-item.AW\">Aruba</ng-container>\n    <ng-container *ngSwitchCase=\"'AU'\" i18n=\"@@bb-country-item.AU\">Australia</ng-container>\n    <ng-container *ngSwitchCase=\"'AT'\" i18n=\"@@bb-country-item.AT\">Austria</ng-container>\n    <ng-container *ngSwitchCase=\"'AZ'\" i18n=\"@@bb-country-item.AZ\">Azerbaijan</ng-container>\n    <ng-container *ngSwitchCase=\"'BS'\" i18n=\"@@bb-country-item.BS\">Bahamas</ng-container>\n    <ng-container *ngSwitchCase=\"'BH'\" i18n=\"@@bb-country-item.BH\">Bahrain</ng-container>\n    <ng-container *ngSwitchCase=\"'BD'\" i18n=\"@@bb-country-item.BD\">Bangladesh</ng-container>\n    <ng-container *ngSwitchCase=\"'BB'\" i18n=\"@@bb-country-item.BB\">Barbados</ng-container>\n    <ng-container *ngSwitchCase=\"'BY'\" i18n=\"@@bb-country-item.BY\">Belarus</ng-container>\n    <ng-container *ngSwitchCase=\"'BE'\" i18n=\"@@bb-country-item.BE\">Belgium</ng-container>\n    <ng-container *ngSwitchCase=\"'BZ'\" i18n=\"@@bb-country-item.BZ\">Belize</ng-container>\n    <ng-container *ngSwitchCase=\"'BJ'\" i18n=\"@@bb-country-item.BJ\">Benin</ng-container>\n    <ng-container *ngSwitchCase=\"'BM'\" i18n=\"@@bb-country-item.BM\">Bermuda</ng-container>\n    <ng-container *ngSwitchCase=\"'BT'\" i18n=\"@@bb-country-item.BT\">Bhutan</ng-container>\n    <ng-container *ngSwitchCase=\"'BO'\" i18n=\"@@bb-country-item.BO\">Bolivia, Plurinational State of</ng-container>\n    <ng-container *ngSwitchCase=\"'BQ'\" i18n=\"@@bb-country-item.BQ\">Bonaire, Saint Eustatius and Saba</ng-container>\n    <ng-container *ngSwitchCase=\"'BA'\" i18n=\"@@bb-country-item.BA\">Bosnia and Herzegovina</ng-container>\n    <ng-container *ngSwitchCase=\"'BW'\" i18n=\"@@bb-country-item.BW\">Botswana</ng-container>\n    <ng-container *ngSwitchCase=\"'BV'\" i18n=\"@@bb-country-item.BV\">Bouvet Island</ng-container>\n    <ng-container *ngSwitchCase=\"'BR'\" i18n=\"@@bb-country-item.BR\">Brazil</ng-container>\n    <ng-container *ngSwitchCase=\"'IO'\" i18n=\"@@bb-country-item.IO\">British Indian Ocean Territory</ng-container>\n    <ng-container *ngSwitchCase=\"'BN'\" i18n=\"@@bb-country-item.BN\">Brunei Darussalam</ng-container>\n    <ng-container *ngSwitchCase=\"'BG'\" i18n=\"@@bb-country-item.BG\">Bulgaria</ng-container>\n    <ng-container *ngSwitchCase=\"'BF'\" i18n=\"@@bb-country-item.BF\">Burkina Faso</ng-container>\n    <ng-container *ngSwitchCase=\"'BI'\" i18n=\"@@bb-country-item.BI\">Burundi</ng-container>\n    <ng-container *ngSwitchCase=\"'KH'\" i18n=\"@@bb-country-item.KH\">Cambodia</ng-container>\n    <ng-container *ngSwitchCase=\"'CM'\" i18n=\"@@bb-country-item.CM\">Cameroon</ng-container>\n    <ng-container *ngSwitchCase=\"'CA'\" i18n=\"@@bb-country-item.CA\">Canada</ng-container>\n    <ng-container *ngSwitchCase=\"'CV'\" i18n=\"@@bb-country-item.CV\">Cape Verde</ng-container>\n    <ng-container *ngSwitchCase=\"'KY'\" i18n=\"@@bb-country-item.KY\">Cayman Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'CF'\" i18n=\"@@bb-country-item.CF\">Central African Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'TD'\" i18n=\"@@bb-country-item.TD\">Chad</ng-container>\n    <ng-container *ngSwitchCase=\"'CL'\" i18n=\"@@bb-country-item.CL\">Chile</ng-container>\n    <ng-container *ngSwitchCase=\"'CN'\" i18n=\"@@bb-country-item.CN\">China</ng-container>\n    <ng-container *ngSwitchCase=\"'CX'\" i18n=\"@@bb-country-item.CX\">Christmas Island</ng-container>\n    <ng-container *ngSwitchCase=\"'CC'\" i18n=\"@@bb-country-item.CC\">Cocos (Keeling) Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'CO'\" i18n=\"@@bb-country-item.CO\">Colombia</ng-container>\n    <ng-container *ngSwitchCase=\"'KM'\" i18n=\"@@bb-country-item.KM\">Comoros</ng-container>\n    <ng-container *ngSwitchCase=\"'CG'\" i18n=\"@@bb-country-item.CG\">Congo</ng-container>\n    <ng-container *ngSwitchCase=\"'CD'\" i18n=\"@@bb-country-item.CD\">Congo, The Democratic Republic of the</ng-container>\n    <ng-container *ngSwitchCase=\"'CK'\" i18n=\"@@bb-country-item.CK\">Cook Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'CR'\" i18n=\"@@bb-country-item.CR\">Costa Rica</ng-container>\n    <ng-container *ngSwitchCase=\"'CI'\" i18n=\"@@bb-country-item.CI\">Cote d'Ivoire</ng-container>\n    <ng-container *ngSwitchCase=\"'HR'\" i18n=\"@@bb-country-item.HR\">Croatia</ng-container>\n    <ng-container *ngSwitchCase=\"'CU'\" i18n=\"@@bb-country-item.CU\">Cuba</ng-container>\n    <ng-container *ngSwitchCase=\"'CW'\" i18n=\"@@bb-country-item.CW\">Curacao</ng-container>\n    <ng-container *ngSwitchCase=\"'CY'\" i18n=\"@@bb-country-item.CY\">Cyprus</ng-container>\n    <ng-container *ngSwitchCase=\"'CZ'\" i18n=\"@@bb-country-item.CZ\">Czech Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'DK'\" i18n=\"@@bb-country-item.DK\">Denmark</ng-container>\n    <ng-container *ngSwitchCase=\"'DJ'\" i18n=\"@@bb-country-item.DJ\">Djibouti</ng-container>\n    <ng-container *ngSwitchCase=\"'DM'\" i18n=\"@@bb-country-item.DM\">Dominica</ng-container>\n    <ng-container *ngSwitchCase=\"'DO'\" i18n=\"@@bb-country-item.DO\">Dominican Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'EC'\" i18n=\"@@bb-country-item.EC\">Ecuador</ng-container>\n    <ng-container *ngSwitchCase=\"'EG'\" i18n=\"@@bb-country-item.EG\">Egypt</ng-container>\n    <ng-container *ngSwitchCase=\"'SV'\" i18n=\"@@bb-country-item.SV\">El Salvador</ng-container>\n    <ng-container *ngSwitchCase=\"'GQ'\" i18n=\"@@bb-country-item.GQ\">Equatorial Guinea</ng-container>\n    <ng-container *ngSwitchCase=\"'ER'\" i18n=\"@@bb-country-item.ER\">Eritrea</ng-container>\n    <ng-container *ngSwitchCase=\"'EE'\" i18n=\"@@bb-country-item.EE\">Estonia</ng-container>\n    <ng-container *ngSwitchCase=\"'ET'\" i18n=\"@@bb-country-item.ET\">Ethiopia</ng-container>\n    <ng-container *ngSwitchCase=\"'FK'\" i18n=\"@@bb-country-item.FK\">Falkland Islands (Malvinas)</ng-container>\n    <ng-container *ngSwitchCase=\"'FO'\" i18n=\"@@bb-country-item.FO\">Faroe Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'FJ'\" i18n=\"@@bb-country-item.FJ\">Fiji</ng-container>\n    <ng-container *ngSwitchCase=\"'FI'\" i18n=\"@@bb-country-item.FI\">Finland</ng-container>\n    <ng-container *ngSwitchCase=\"'FR'\" i18n=\"@@bb-country-item.FR\">France</ng-container>\n    <ng-container *ngSwitchCase=\"'GF'\" i18n=\"@@bb-country-item.GF\">French Guiana</ng-container>\n    <ng-container *ngSwitchCase=\"'PF'\" i18n=\"@@bb-country-item.PF\">French Polynesia</ng-container>\n    <ng-container *ngSwitchCase=\"'TF'\" i18n=\"@@bb-country-item.TF\">French Southern Territories</ng-container>\n    <ng-container *ngSwitchCase=\"'GA'\" i18n=\"@@bb-country-item.GA\">Gabon</ng-container>\n    <ng-container *ngSwitchCase=\"'GM'\" i18n=\"@@bb-country-item.GM\">Gambia</ng-container>\n    <ng-container *ngSwitchCase=\"'GE'\" i18n=\"@@bb-country-item.GE\">Georgia</ng-container>\n    <ng-container *ngSwitchCase=\"'DE'\" i18n=\"@@bb-country-item.DE\">Germany</ng-container>\n    <ng-container *ngSwitchCase=\"'GH'\" i18n=\"@@bb-country-item.GH\">Ghana</ng-container>\n    <ng-container *ngSwitchCase=\"'GI'\" i18n=\"@@bb-country-item.GI\">Gibraltar</ng-container>\n    <ng-container *ngSwitchCase=\"'GR'\" i18n=\"@@bb-country-item.GR\">Greece</ng-container>\n    <ng-container *ngSwitchCase=\"'GL'\" i18n=\"@@bb-country-item.GL\">Greenland</ng-container>\n    <ng-container *ngSwitchCase=\"'GD'\" i18n=\"@@bb-country-item.GD\">Grenada</ng-container>\n    <ng-container *ngSwitchCase=\"'GP'\" i18n=\"@@bb-country-item.GP\">Guadeloupe</ng-container>\n    <ng-container *ngSwitchCase=\"'GU'\" i18n=\"@@bb-country-item.GU\">Guam</ng-container>\n    <ng-container *ngSwitchCase=\"'GT'\" i18n=\"@@bb-country-item.GT\">Guatemala</ng-container>\n    <ng-container *ngSwitchCase=\"'GG'\" i18n=\"@@bb-country-item.GG\">Guernsey</ng-container>\n    <ng-container *ngSwitchCase=\"'GN'\" i18n=\"@@bb-country-item.GN\">Guinea</ng-container>\n    <ng-container *ngSwitchCase=\"'GW'\" i18n=\"@@bb-country-item.GW\">Guinea-Bissau</ng-container>\n    <ng-container *ngSwitchCase=\"'GY'\" i18n=\"@@bb-country-item.GY\">Guyana</ng-container>\n    <ng-container *ngSwitchCase=\"'HT'\" i18n=\"@@bb-country-item.HT\">Haiti</ng-container>\n    <ng-container *ngSwitchCase=\"'HM'\" i18n=\"@@bb-country-item.HM\">Heard Island and McDonald Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'VA'\" i18n=\"@@bb-country-item.VA\">Holy See (Vatican City State)</ng-container>\n    <ng-container *ngSwitchCase=\"'HN'\" i18n=\"@@bb-country-item.HN\">Honduras</ng-container>\n    <ng-container *ngSwitchCase=\"'HK'\" i18n=\"@@bb-country-item.HK\">Hong Kong</ng-container>\n    <ng-container *ngSwitchCase=\"'HU'\" i18n=\"@@bb-country-item.HU\">Hungary</ng-container>\n    <ng-container *ngSwitchCase=\"'IS'\" i18n=\"@@bb-country-item.IS\">Iceland</ng-container>\n    <ng-container *ngSwitchCase=\"'IN'\" i18n=\"@@bb-country-item.IN\">India</ng-container>\n    <ng-container *ngSwitchCase=\"'ID'\" i18n=\"@@bb-country-item.ID\">Indonesia</ng-container>\n    <ng-container *ngSwitchCase=\"'IR'\" i18n=\"@@bb-country-item.IR\">Iran, Islamic Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'IQ'\" i18n=\"@@bb-country-item.IQ\">Iraq</ng-container>\n    <ng-container *ngSwitchCase=\"'IE'\" i18n=\"@@bb-country-item.IE\">Ireland</ng-container>\n    <ng-container *ngSwitchCase=\"'IM'\" i18n=\"@@bb-country-item.IM\">Isle of Man</ng-container>\n    <ng-container *ngSwitchCase=\"'IL'\" i18n=\"@@bb-country-item.IL\">Israel</ng-container>\n    <ng-container *ngSwitchCase=\"'IT'\" i18n=\"@@bb-country-item.IT\">Italy</ng-container>\n    <ng-container *ngSwitchCase=\"'JM'\" i18n=\"@@bb-country-item.JM\">Jamaica</ng-container>\n    <ng-container *ngSwitchCase=\"'JP'\" i18n=\"@@bb-country-item.JP\">Japan</ng-container>\n    <ng-container *ngSwitchCase=\"'JE'\" i18n=\"@@bb-country-item.JE\">Jersey</ng-container>\n    <ng-container *ngSwitchCase=\"'JO'\" i18n=\"@@bb-country-item.JO\">Jordan</ng-container>\n    <ng-container *ngSwitchCase=\"'KZ'\" i18n=\"@@bb-country-item.KZ\">Kazakhstan</ng-container>\n    <ng-container *ngSwitchCase=\"'KE'\" i18n=\"@@bb-country-item.KE\">Kenya</ng-container>\n    <ng-container *ngSwitchCase=\"'KI'\" i18n=\"@@bb-country-item.KI\">Kiribati</ng-container>\n    <ng-container *ngSwitchCase=\"'KP'\" i18n=\"@@bb-country-item.KP\">Korea, Democratic People's Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'KR'\" i18n=\"@@bb-country-item.KR\">Korea, Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'KW'\" i18n=\"@@bb-country-item.KW\">Kuwait</ng-container>\n    <ng-container *ngSwitchCase=\"'KG'\" i18n=\"@@bb-country-item.KG\">Kyrgyzstan</ng-container>\n    <ng-container *ngSwitchCase=\"'LA'\" i18n=\"@@bb-country-item.LA\">Lao People's Democratic Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'LV'\" i18n=\"@@bb-country-item.LV\">Latvia</ng-container>\n    <ng-container *ngSwitchCase=\"'LB'\" i18n=\"@@bb-country-item.LB\">Lebanon</ng-container>\n    <ng-container *ngSwitchCase=\"'LS'\" i18n=\"@@bb-country-item.LS\">Lesotho</ng-container>\n    <ng-container *ngSwitchCase=\"'LR'\" i18n=\"@@bb-country-item.LR\">Liberia</ng-container>\n    <ng-container *ngSwitchCase=\"'LY'\" i18n=\"@@bb-country-item.LY\">Libyan Arab Jamahiriya</ng-container>\n    <ng-container *ngSwitchCase=\"'LI'\" i18n=\"@@bb-country-item.LI\">Liechtenstein</ng-container>\n    <ng-container *ngSwitchCase=\"'LT'\" i18n=\"@@bb-country-item.LT\">Lithuania</ng-container>\n    <ng-container *ngSwitchCase=\"'LU'\" i18n=\"@@bb-country-item.LU\">Luxembourg</ng-container>\n    <ng-container *ngSwitchCase=\"'MO'\" i18n=\"@@bb-country-item.MO\">Macao</ng-container>\n    <ng-container *ngSwitchCase=\"'MK'\" i18n=\"@@bb-country-item.MK\"\n      >Macedonia, The Former Yugoslav Republic of</ng-container\n    >\n    <ng-container *ngSwitchCase=\"'MG'\" i18n=\"@@bb-country-item.MG\">Madagascar</ng-container>\n    <ng-container *ngSwitchCase=\"'MW'\" i18n=\"@@bb-country-item.MW\">Malawi</ng-container>\n    <ng-container *ngSwitchCase=\"'MY'\" i18n=\"@@bb-country-item.MY\">Malaysia</ng-container>\n    <ng-container *ngSwitchCase=\"'MV'\" i18n=\"@@bb-country-item.MV\">Maldives</ng-container>\n    <ng-container *ngSwitchCase=\"'ML'\" i18n=\"@@bb-country-item.ML\">Mali</ng-container>\n    <ng-container *ngSwitchCase=\"'MT'\" i18n=\"@@bb-country-item.MT\">Malta</ng-container>\n    <ng-container *ngSwitchCase=\"'MH'\" i18n=\"@@bb-country-item.MH\">Marshall Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'MQ'\" i18n=\"@@bb-country-item.MQ\">Martinique</ng-container>\n    <ng-container *ngSwitchCase=\"'MR'\" i18n=\"@@bb-country-item.MR\">Mauritania</ng-container>\n    <ng-container *ngSwitchCase=\"'MU'\" i18n=\"@@bb-country-item.MU\">Mauritius</ng-container>\n    <ng-container *ngSwitchCase=\"'YT'\" i18n=\"@@bb-country-item.YT\">Mayotte</ng-container>\n    <ng-container *ngSwitchCase=\"'MX'\" i18n=\"@@bb-country-item.MX\">Mexico</ng-container>\n    <ng-container *ngSwitchCase=\"'FM'\" i18n=\"@@bb-country-item.FM\">Micronesia, Federated States of</ng-container>\n    <ng-container *ngSwitchCase=\"'MD'\" i18n=\"@@bb-country-item.MD\">Moldova, Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'MC'\" i18n=\"@@bb-country-item.MC\">Monaco</ng-container>\n    <ng-container *ngSwitchCase=\"'MN'\" i18n=\"@@bb-country-item.MN\">Mongolia</ng-container>\n    <ng-container *ngSwitchCase=\"'ME'\" i18n=\"@@bb-country-item.ME\">Montenegro</ng-container>\n    <ng-container *ngSwitchCase=\"'MS'\" i18n=\"@@bb-country-item.MS\">Montserrat</ng-container>\n    <ng-container *ngSwitchCase=\"'MA'\" i18n=\"@@bb-country-item.MA\">Morocco</ng-container>\n    <ng-container *ngSwitchCase=\"'MZ'\" i18n=\"@@bb-country-item.MZ\">Mozambique</ng-container>\n    <ng-container *ngSwitchCase=\"'MM'\" i18n=\"@@bb-country-item.MM\">Myanmar</ng-container>\n    <ng-container *ngSwitchCase=\"'NA'\" i18n=\"@@bb-country-item.NA\">Namibia</ng-container>\n    <ng-container *ngSwitchCase=\"'NR'\" i18n=\"@@bb-country-item.NR\">Nauru</ng-container>\n    <ng-container *ngSwitchCase=\"'NP'\" i18n=\"@@bb-country-item.NP\">Nepal</ng-container>\n    <ng-container *ngSwitchCase=\"'NL'\" i18n=\"@@bb-country-item.NL\">Netherlands</ng-container>\n    <ng-container *ngSwitchCase=\"'NC'\" i18n=\"@@bb-country-item.NC\">New Caledonia</ng-container>\n    <ng-container *ngSwitchCase=\"'NZ'\" i18n=\"@@bb-country-item.NZ\">New Zealand</ng-container>\n    <ng-container *ngSwitchCase=\"'NI'\" i18n=\"@@bb-country-item.NI\">Nicaragua</ng-container>\n    <ng-container *ngSwitchCase=\"'NE'\" i18n=\"@@bb-country-item.NE\">Niger</ng-container>\n    <ng-container *ngSwitchCase=\"'NG'\" i18n=\"@@bb-country-item.NG\">Nigeria</ng-container>\n    <ng-container *ngSwitchCase=\"'NU'\" i18n=\"@@bb-country-item.NU\">Niue</ng-container>\n    <ng-container *ngSwitchCase=\"'NF'\" i18n=\"@@bb-country-item.NF\">Norfolk Island</ng-container>\n    <ng-container *ngSwitchCase=\"'MP'\" i18n=\"@@bb-country-item.MP\">Northern Mariana Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'NO'\" i18n=\"@@bb-country-item.NO\">Norway</ng-container>\n    <ng-container *ngSwitchCase=\"'PS'\" i18n=\"@@bb-country-item.PS\">Occupied Palestinian Territory</ng-container>\n    <ng-container *ngSwitchCase=\"'OM'\" i18n=\"@@bb-country-item.OM\">Oman</ng-container>\n    <ng-container *ngSwitchCase=\"'PK'\" i18n=\"@@bb-country-item.PK\">Pakistan</ng-container>\n    <ng-container *ngSwitchCase=\"'PW'\" i18n=\"@@bb-country-item.PW\">Palau</ng-container>\n    <ng-container *ngSwitchCase=\"'PA'\" i18n=\"@@bb-country-item.PA\">Panama</ng-container>\n    <ng-container *ngSwitchCase=\"'PG'\" i18n=\"@@bb-country-item.PG\">Papua New Guinea</ng-container>\n    <ng-container *ngSwitchCase=\"'PY'\" i18n=\"@@bb-country-item.PY\">Paraguay</ng-container>\n    <ng-container *ngSwitchCase=\"'PE'\" i18n=\"@@bb-country-item.PE\">Peru</ng-container>\n    <ng-container *ngSwitchCase=\"'PH'\" i18n=\"@@bb-country-item.PH\">Philippines</ng-container>\n    <ng-container *ngSwitchCase=\"'PN'\" i18n=\"@@bb-country-item.PN\">Pitcairn</ng-container>\n    <ng-container *ngSwitchCase=\"'PL'\" i18n=\"@@bb-country-item.PL\">Poland</ng-container>\n    <ng-container *ngSwitchCase=\"'PT'\" i18n=\"@@bb-country-item.PT\">Portugal</ng-container>\n    <ng-container *ngSwitchCase=\"'PR'\" i18n=\"@@bb-country-item.PR\">Puerto Rico</ng-container>\n    <ng-container *ngSwitchCase=\"'QA'\" i18n=\"@@bb-country-item.QA\">Qatar</ng-container>\n    <ng-container *ngSwitchCase=\"'RE'\" i18n=\"@@bb-country-item.RE\">Reunion</ng-container>\n    <ng-container *ngSwitchCase=\"'RO'\" i18n=\"@@bb-country-item.RO\">Romania</ng-container>\n    <ng-container *ngSwitchCase=\"'RU'\" i18n=\"@@bb-country-item.RU\">Russian Federation</ng-container>\n    <ng-container *ngSwitchCase=\"'RW'\" i18n=\"@@bb-country-item.RW\">Rwanda</ng-container>\n    <ng-container *ngSwitchCase=\"'BL'\" i18n=\"@@bb-country-item.BL\">Saint Barthelemy</ng-container>\n    <ng-container *ngSwitchCase=\"'SH'\" i18n=\"@@bb-country-item.SH\"\n      >Saint Helena, Ascension and Tristan da Cunha</ng-container\n    >\n    <ng-container *ngSwitchCase=\"'KN'\" i18n=\"@@bb-country-item.KN\">Saint Kitts and Nevis</ng-container>\n    <ng-container *ngSwitchCase=\"'LC'\" i18n=\"@@bb-country-item.LC\">Saint Lucia</ng-container>\n    <ng-container *ngSwitchCase=\"'MF'\" i18n=\"@@bb-country-item.MF\">Saint Martin (French part)</ng-container>\n    <ng-container *ngSwitchCase=\"'PM'\" i18n=\"@@bb-country-item.PM\">Saint Pierre and Miquelon</ng-container>\n    <ng-container *ngSwitchCase=\"'VC'\" i18n=\"@@bb-country-item.VC\">Saint Vincent and The Grenadines</ng-container>\n    <ng-container *ngSwitchCase=\"'WS'\" i18n=\"@@bb-country-item.WS\">Samoa</ng-container>\n    <ng-container *ngSwitchCase=\"'SM'\" i18n=\"@@bb-country-item.SM\">San Marino</ng-container>\n    <ng-container *ngSwitchCase=\"'ST'\" i18n=\"@@bb-country-item.ST\">Sao Tome and Principe</ng-container>\n    <ng-container *ngSwitchCase=\"'SA'\" i18n=\"@@bb-country-item.SA\">Saudi Arabia</ng-container>\n    <ng-container *ngSwitchCase=\"'SN'\" i18n=\"@@bb-country-item.SN\">Senegal</ng-container>\n    <ng-container *ngSwitchCase=\"'RS'\" i18n=\"@@bb-country-item.RS\">Serbia</ng-container>\n    <ng-container *ngSwitchCase=\"'SC'\" i18n=\"@@bb-country-item.SC\">Seychelles</ng-container>\n    <ng-container *ngSwitchCase=\"'SL'\" i18n=\"@@bb-country-item.SL\">Sierra Leone</ng-container>\n    <ng-container *ngSwitchCase=\"'SG'\" i18n=\"@@bb-country-item.SG\">Singapore</ng-container>\n    <ng-container *ngSwitchCase=\"'SX'\" i18n=\"@@bb-country-item.SX\">Sint Maarten (Dutch part)</ng-container>\n    <ng-container *ngSwitchCase=\"'SK'\" i18n=\"@@bb-country-item.SK\">Slovakia</ng-container>\n    <ng-container *ngSwitchCase=\"'SI'\" i18n=\"@@bb-country-item.SI\">Slovenia</ng-container>\n    <ng-container *ngSwitchCase=\"'SB'\" i18n=\"@@bb-country-item.SB\">Solomon Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'SO'\" i18n=\"@@bb-country-item.SO\">Somalia</ng-container>\n    <ng-container *ngSwitchCase=\"'ZA'\" i18n=\"@@bb-country-item.ZA\">South Africa</ng-container>\n    <ng-container *ngSwitchCase=\"'GS'\" i18n=\"@@bb-country-item.GS\"\n      >South Georgia and the South Sandwich Islands</ng-container\n    >\n    <ng-container *ngSwitchCase=\"'ES'\" i18n=\"@@bb-country-item.ES\">Spain</ng-container>\n    <ng-container *ngSwitchCase=\"'LK'\" i18n=\"@@bb-country-item.LK\">Sri Lanka</ng-container>\n    <ng-container *ngSwitchCase=\"'SD'\" i18n=\"@@bb-country-item.SD\">Sudan</ng-container>\n    <ng-container *ngSwitchCase=\"'SR'\" i18n=\"@@bb-country-item.SR\">Suriname</ng-container>\n    <ng-container *ngSwitchCase=\"'SJ'\" i18n=\"@@bb-country-item.SJ\">Svalbard and Jan Mayen</ng-container>\n    <ng-container *ngSwitchCase=\"'SZ'\" i18n=\"@@bb-country-item.SZ\">Swaziland</ng-container>\n    <ng-container *ngSwitchCase=\"'SE'\" i18n=\"@@bb-country-item.SE\">Sweden</ng-container>\n    <ng-container *ngSwitchCase=\"'CH'\" i18n=\"@@bb-country-item.CH\">Switzerland</ng-container>\n    <ng-container *ngSwitchCase=\"'SY'\" i18n=\"@@bb-country-item.SY\">Syrian Arab Republic</ng-container>\n    <ng-container *ngSwitchCase=\"'TW'\" i18n=\"@@bb-country-item.TW\">Taiwan, Province of China</ng-container>\n    <ng-container *ngSwitchCase=\"'TJ'\" i18n=\"@@bb-country-item.TJ\">Tajikistan</ng-container>\n    <ng-container *ngSwitchCase=\"'TZ'\" i18n=\"@@bb-country-item.TZ\">Tanzania, United Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'TH'\" i18n=\"@@bb-country-item.TH\">Thailand</ng-container>\n    <ng-container *ngSwitchCase=\"'TL'\" i18n=\"@@bb-country-item.TL\">Timor-Leste</ng-container>\n    <ng-container *ngSwitchCase=\"'TG'\" i18n=\"@@bb-country-item.TG\">Togo</ng-container>\n    <ng-container *ngSwitchCase=\"'TK'\" i18n=\"@@bb-country-item.TK\">Tokelau</ng-container>\n    <ng-container *ngSwitchCase=\"'TO'\" i18n=\"@@bb-country-item.TO\">Tonga</ng-container>\n    <ng-container *ngSwitchCase=\"'TT'\" i18n=\"@@bb-country-item.TT\">Trinidad and Tobago</ng-container>\n    <ng-container *ngSwitchCase=\"'TN'\" i18n=\"@@bb-country-item.TN\">Tunisia</ng-container>\n    <ng-container *ngSwitchCase=\"'TR'\" i18n=\"@@bb-country-item.TR\">Turkey</ng-container>\n    <ng-container *ngSwitchCase=\"'TM'\" i18n=\"@@bb-country-item.TM\">Turkmenistan</ng-container>\n    <ng-container *ngSwitchCase=\"'TC'\" i18n=\"@@bb-country-item.TC\">Turks and Caicos Islands</ng-container>\n    <ng-container *ngSwitchCase=\"'TV'\" i18n=\"@@bb-country-item.TV\">Tuvalu</ng-container>\n    <ng-container *ngSwitchCase=\"'UG'\" i18n=\"@@bb-country-item.UG\">Uganda</ng-container>\n    <ng-container *ngSwitchCase=\"'UA'\" i18n=\"@@bb-country-item.UA\">Ukraine</ng-container>\n    <ng-container *ngSwitchCase=\"'AE'\" i18n=\"@@bb-country-item.AE\">United Arab Emirates</ng-container>\n    <ng-container *ngSwitchCase=\"'GB'\" i18n=\"@@bb-country-item.GB\">United Kingdom</ng-container>\n    <ng-container *ngSwitchCase=\"'US'\" i18n=\"@@bb-country-item.US\">United States</ng-container>\n    <ng-container *ngSwitchCase=\"'UY'\" i18n=\"@@bb-country-item.UY\">Uruguay</ng-container>\n    <ng-container *ngSwitchCase=\"'UZ'\" i18n=\"@@bb-country-item.UZ\">Uzbekistan</ng-container>\n    <ng-container *ngSwitchCase=\"'VU'\" i18n=\"@@bb-country-item.VU\">Vanuatu</ng-container>\n    <ng-container *ngSwitchCase=\"'VE'\" i18n=\"@@bb-country-item.VE\">Venezuela, Bolivarian Republic of</ng-container>\n    <ng-container *ngSwitchCase=\"'VN'\" i18n=\"@@bb-country-item.VN\">Viet Nam</ng-container>\n    <ng-container *ngSwitchCase=\"'VG'\" i18n=\"@@bb-country-item.VG\">Virgin Islands, British</ng-container>\n    <ng-container *ngSwitchCase=\"'VI'\" i18n=\"@@bb-country-item.VI\">Virgin Islands, U.S.</ng-container>\n    <ng-container *ngSwitchCase=\"'WF'\" i18n=\"@@bb-country-item.WF\">Wallis and Futuna</ng-container>\n    <ng-container *ngSwitchCase=\"'EH'\" i18n=\"@@bb-country-item.EH\">Western Sahara</ng-container>\n    <ng-container *ngSwitchCase=\"'YE'\" i18n=\"@@bb-country-item.YE\">Yemen</ng-container>\n    <ng-container *ngSwitchCase=\"'ZM'\" i18n=\"@@bb-country-item.ZM\">Zambia</ng-container>\n    <ng-container *ngSwitchCase=\"'ZW'\" i18n=\"@@bb-country-item.ZW\">Zimbabwe</ng-container>\n  </ng-container>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CountryItemComponent } from './country-item.component';\nimport { CountryItemCustomizableDirective } from './country-item.directive';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Exports:\n * - CountryItemComponent\n * - CountryItemCustomizableDirective\n */\n@NgModule({\n  declarations: [CountryItemComponent, CountryItemCustomizableDirective],\n  exports: [CountryItemComponent, CountryItemCustomizableDirective],\n  imports: [CommonModule],\n})\nexport class CountryItemModule {}\n","import { Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport type { ContactFullAddressComponent } from './contact-full-address.component';\n\n/**\n * This is an extension slot to be used for customizing contact full address data\n *\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *  <ng-template bbContactFullAddressCustomizable let-hostRef>\n *   <span class=\"break-word\" data-role=\"contact-details-full-address\">\n *     {{ hostRef.format()\n *     }}<ng-container *ngIf=\"hostRef.address.country\">\n *       <ng-container>, </ng-container>\n *       <bb-country-item [code]=\"hostRef.address.country\"></bb-country-item>\n *     </ng-container>\n *   </span>\n * </ng-template>\n * ```\n * @ngModule ContactFullAddressModule\n */\n@Directive({\n  selector: '[bbContactFullAddressCustomizable]',\n})\nexport class ContactFullAddressCustomizableDirective extends BbTemplate<ContactFullAddressComponent, undefined> {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Address } from '../../models/types';\nimport { addressToString } from '../../helpers/address';\n\n/**\n * The component is for showing contact full address.\n *\n * The following extension slots are available in this component:\n *  - `ContactFullAddressCustomizableDirective`\n *\n * @see ContactFullAddressCustomizableDirective\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *     <bb-contact-full-address [address]=\"hostRef.address\"></bb-contact-full-address>\n * ```\n * @ngModule ContactFullAddressModule\n */\n@Component({\n  selector: 'bb-contact-full-address',\n  template: `\n    <ng-container bbContactFullAddressCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n    <ng-template bbContactFullAddressCustomizable let-hostRef>\n      <span class=\"break-word\" data-role=\"contact-details-full-address\">\n        {{ hostRef.textContent }}\n        <ng-container *ngIf=\"hostRef.countryCode\">\n          <bb-country-item [code]=\"hostRef.countryCode\"></bb-country-item>\n        </ng-container>\n      </span>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactFullAddressComponent {\n  hostRef = this;\n  countryCode?: string;\n  textContent = '';\n\n  /**\n   * @param {Address} address containing all the address fields\n   */\n  @Input()\n  set address(address: Address) {\n    this.countryCode = address.country;\n    this.textContent = `${addressToString(address)}${!!this.countryCode ? ',' : ''}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ContactFullAddressComponent } from './contact-full-address.component';\nimport { ContactFullAddressCustomizableDirective } from './contact-full-address.directive';\nimport { CountryItemModule } from '../country-item/country-item.module';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Exports:\n * - ContactFullAddressComponent\n * - ContactFullAddressCustomizableDirective\n */\n@NgModule({\n  declarations: [ContactFullAddressComponent, ContactFullAddressCustomizableDirective],\n  exports: [ContactFullAddressComponent, ContactFullAddressCustomizableDirective],\n  imports: [CommonModule, CountryItemModule],\n})\nexport class ContactFullAddressModule {}\n","import { Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport type { AccountCardViewComponent } from './account-card-view.component';\n\n/**\n * This is an extension slot to be used for customizing account data in card view\n *\n * @usageNotes\n * ### Display contact account data in card form\n *\n * ```html\n *  <ng-template bbAccountCardViewCustomizable let-hostRef>\n *   <div class=\"bb-stack\">\n *     <bb-icon-ui class=\"bb-stack__item bb-stack__item--align-top bb-select-context__back\" name=\"accounts\"></bb-icon-ui>\n *     <div class=\"bb-stack__item bb-stack__item--fill\">\n *       <div class=\"bb-stack bb-block--md\">\n *         <div class=\"bb-stack__item bb-stack__item--fill\">\n *           <bb-header-ui\n *             headingType=\"h3\"\n *             [heading]=\"hostRef.account.name\"\n *             headingClasses=\"bb-stack__item bb-stack__item--fill break-word\"\n *             data-role=\"contact-details-account-name\"\n *           >\n *           </bb-header-ui>\n *           <div class=\"bb-text-support\">{{hostRef.account.alias}}</div>\n *         </div>\n *         <ng-container *ngIf=\"hostRef.isEditMode\">\n *           <button\n *             bbButton\n *             data-role=\"edit-account-button\"\n *             [circle]=\"true\"\n *             size=\"sm\"\n *             color=\"link\"\n *             (click)=\"hostRef.onEditAccount()\"\n *             bbTooltip=\"Edit account\"\n *             triggers=\"hover focus\"\n *             i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.btn.edit.label\">\n *             <bb-icon-ui class=\"text-dark\" name=\"edit\"></bb-icon-ui>\n *           </button>\n *           <button\n *             bbButton\n *             [circle]=\"true\"\n *             size=\"sm\"\n *             color=\"link\"\n *             (click)=\"hostRef.onDeleteAccount()\"\n *             bbTooltip=\"Delete account\"\n *             triggers=\"hover focus\"\n *             i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.btn.delete.label\"\n *             data-role=\"account-contact-delete\">\n *             <bb-icon-ui class=\"text-dark\" name=\"delete\"></bb-icon-ui>\n *           </button>\n *         </ng-container>\n *       </div>\n *       <div>\n *         <div class=\"bb-block bb-block--md\">\n *           <div\n *            *ngIf=\"hostRef.account.IBAN\"\n *             class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.iban.label\"\n *              >\n *               IBAN:\n *             </span>\n *             <span\n *               class=\"bb-inline-stack__item break-word\"\n *               data-role=\"contact-details-account-number\"\n *             >\n *               {{hostRef.account.IBAN | bbIban}}\n *           </span>\n *           </div>\n *           <div\n *            *ngIf=\"hostRef.account.accountNumber\"\n *             class=\"bb-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.bban.label\"\n *             >\n *               BBAN:\n *             </span>\n *             <span\n *               class=\"bb-inline-stack__item break-word\"\n *               data-role=\"contact-details-account-number\"\n *             >\n *               {{hostRef.account.accountNumber}}\n *             </span>\n *           </div>\n *           <div *ngIf=\"hostRef.account.accountType\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n *             <span class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.account-type.label\">\n *               Account type:\n *             </span>\n *             <span class=\"break-word bb-inline-stack__item\">\n *               {{hostRef.account.accountType}}\n *             </span>\n *           </div>\n *           <div\n *            *ngIf=\"hostRef.account.bankName\"\n *             class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.bank-name.label\"\n *             >\n *               Bank:\n *             </span>\n *             <span\n *               data-role=\"contact-details-bank-name\"\n *               class=\"break-word\"\n *             >\n *               {{hostRef.account.bankName}}\n *             </span>\n *           </div>\n *           <div\n *            *ngIf=\"hostRef.account.bankCode\"\n *             class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.bank-code.label\"\n *             >\n *               Bank branch code:\n *             </span>\n *             <span\n *               data-role=\"contact-details-bank-code\"\n *               class=\"break-word\"\n *             >\n *               {{hostRef.account.bankCode}}\n *             </span>\n *           </div>\n *           <div\n *            *ngIf=\"hostRef.account.BIC\"\n *             class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\"\n *           >\n *             <span\n *               class=\"bb-inline-stack__item bb-text-bold\"\n *               i18n=\"@@bb-account-card-view.bic.label\"\n *             >\n *               BIC:\n *             </span>\n *             <span class=\"break-word\">\n *               {{hostRef.account.BIC}}\n *             </span>\n *           </div>\n *         </div>\n *         <div class=\"bb-block bb-block--xs\" *ngIf=\"hostRef.isValidAddress(hostRef.bankAddress)\">\n *           <div class=\"bb-text-bold\" i18n=\"@@bb-account-card-view.bank.address.label\">\n *             Bank branch address\n *           </div>\n *           <div\n *             class=\"break-word\"\n *             data-role=\"contact-details-account-bank-address\"\n *           >\n *             <bb-contact-full-address [address]=\"hostRef.bankAddress\"></bb-contact-full-address>\n *           </div>\n *         </div>\n *         <div class=\"bb-block bb-block--xs\" *ngIf=\"hostRef.isValidAddress(hostRef.accountHolderAddress)\">\n *           <div class=\"bb-text-bold\" i18n=\"@@bb-account-card-view.accountHolder.address.label\">\n *             Account holder's address\n *           </div>\n *           <div\n *             class=\"break-word\"\n *             data-role=\"contact-details-account-holder-address\"\n *           >\n *             <bb-contact-full-address [address]=\"hostRef.accountHolderAddress\"></bb-contact-full-address>\n *           </div>\n *         </div>\n *       </div>\n *     </div>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule AccountCardViewModule\n */\n@Directive({\n  selector: '[bbAccountCardViewCustomizable]',\n})\nexport class AccountCardViewCustomizableDirective extends BbTemplate<AccountCardViewComponent, undefined> {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { addressFromAccountHolder, addressFromBank, isObjectTruthy } from '../../helpers/address';\nimport { AccountInformation, Address } from '../../models/types';\n\n/**\n * The component is for showing contact account in a card view\n *\n * The following extension slots are available in this component:\n *  - `AccountCardViewCustomizableDirective`\n *\n * @see AccountCardViewCustomizableDirective\n * @usageNotes\n *\n * ### Display contact account data in card\n *\n * ```html\n *  <bb-account-card-view\n *   [index]=\"hostRef.index\"\n *   [isEditMode]=\"true\"\n *   [account]=\"hostRef.account\"\n *   [bankAddress]=\"hostRef.bankAddress\"\n *   [accountHolderAddress]=\"hostRef.accountHolderAddress\"\n *   (deleteAccount)=\"hostRef.onDeleteAccount($event)\"\n *   (editAccount)=\"hostRef.onEditAccount($event)\">\n * </bb-account-card-view>\n * ```\n * @ngModule AccountCardViewModule\n */\n@Component({\n  selector: 'bb-account-card-view',\n  templateUrl: './account-card-view.component.html',\n})\nexport class AccountCardViewComponent implements OnInit {\n  hostRef: AccountCardViewComponent = this;\n  /**\n   * Current index of the account Information\n   */\n  @Input() index = 0;\n  /**\n   * The details of the contact account\n   */\n  @Input()\n  account!: AccountInformation;\n  /**\n   * Flag that denotes if the account information can be edited. Defaults to `false`\n   */\n  @Input() isEditMode = false;\n  /**\n   * Event emitted when account is editted\n   */\n  @Output() editAccount = new EventEmitter<number>();\n  /**\n   * Event emitted when account is deleted\n   */\n  @Output() deleteAccount = new EventEmitter<number>();\n  /**\n   * The address of the bank\n   */\n  @Input()\n  bankAddress!: Address;\n  /**\n   * The address of the account holder\n   */\n  @Input()\n  accountHolderAddress!: Address;\n  /**\n   * OnInit - set up initial values.\n   */\n  ngOnInit() {\n    this.bankAddress = this.bankAddress || addressFromBank(this.account);\n    this.accountHolderAddress = this.accountHolderAddress || addressFromAccountHolder(this.account);\n  }\n  /**\n   * Emits the edit Account event\n   */\n  onEditAccount() {\n    this.editAccount.emit(this.index);\n  }\n  /**\n   * Emits the delete account event\n   */\n  onDeleteAccount() {\n    this.deleteAccount.emit(this.index);\n  }\n  /**\n   * Verifies if the address is valid.\n   *\n   * @param {Address} address object\n   * @returns {boolean} valid or not.\n   */\n  isValidAddress(address: Address): boolean {\n    return isObjectTruthy(address);\n  }\n}\n","<ng-container bbAccountCardViewCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n<ng-template bbAccountCardViewCustomizable let-hostRef>\n  <div class=\"bb-stack\">\n    <bb-icon-ui class=\"bb-stack__item bb-stack__item--align-top mt-1\" name=\"accounts\"></bb-icon-ui>\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-stack bb-block--md\">\n        <div class=\"bb-stack__item bb-stack__item--fill\">\n          <bb-header-ui\n            headingType=\"h3\"\n            [heading]=\"hostRef.account.name\"\n            headingClasses=\"bb-stack__item bb-stack__item--fill break-word\"\n            data-role=\"contact-details-account-name\"\n          >\n          </bb-header-ui>\n          <div class=\"bb-text-support\">{{hostRef.account.alias}}</div>\n        </div>\n        <ng-container *ngIf=\"hostRef.isEditMode\">\n          <button\n            bbButton\n            data-role=\"edit-account-button\"\n            [circle]=\"true\"\n            size=\"sm\"\n            color=\"link\"\n            (click)=\"hostRef.onEditAccount()\"\n            bbTooltip=\"Edit account\"\n            triggers=\"hover focus\"\n            i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.btn.edit.label\"\n          >\n            <bb-icon-ui class=\"text-dark\" name=\"edit\"></bb-icon-ui>\n          </button>\n          <button\n            bbButton\n            [circle]=\"true\"\n            size=\"sm\"\n            color=\"link\"\n            (click)=\"hostRef.onDeleteAccount()\"\n            bbTooltip=\"Delete account\"\n            triggers=\"hover focus\"\n            i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.btn.delete.label\"\n            data-role=\"account-contact-delete\"\n          >\n            <bb-icon-ui class=\"text-dark\" name=\"delete\"></bb-icon-ui>\n          </button>\n        </ng-container>\n      </div>\n      <dl>\n        <div class=\"bb-block bb-block--md\">\n          <div *ngIf=\"hostRef.account.IBAN\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.iban.label\">IBAN:</dt>\n            <dd class=\"bb-inline-stack__item break-word bb-block--no-margin\" data-role=\"contact-details-account-number\">\n              {{hostRef.account.IBAN | bbIban}}\n            </dd>\n          </div>\n          <div *ngIf=\"hostRef.account.accountNumber\" class=\"bb-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.bban.label\">BBAN:</dt>\n            <dd class=\"bb-inline-stack__item break-word bb-block--no-margin\" data-role=\"contact-details-account-number\">\n              {{hostRef.account.accountNumber}}\n            </dd>\n          </div>\n          <div *ngIf=\"hostRef.account.accountType\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.account-type.label\">\n              Account type:\n            </dt>\n            <dd class=\"break-word bb-inline-stack__item bb-block--no-margin\">{{hostRef.account.accountType}}</dd>\n          </div>\n          <div *ngIf=\"hostRef.account.bankName\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.bank-name.label\">Bank:</dt>\n            <dd data-role=\"contact-details-bank-name\" class=\"bb-inline-stack__item break-word bb-block--no-margin\">\n              {{hostRef.account.bankName}}\n            </dd>\n          </div>\n          <div *ngIf=\"hostRef.account.bankCode\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.bank-code.label\">\n              Bank branch code:\n            </dt>\n            <dd data-role=\"contact-details-bank-code\" class=\"bb-inline-stack__item break-word bb-block--no-margin\">\n              {{hostRef.account.bankCode}}\n            </dd>\n          </div>\n          <div *ngIf=\"hostRef.account.BIC\" class=\"bb-inline-stack bb-block--xs bb-block--full-width text-dark\">\n            <dt class=\"bb-inline-stack__item bb-text-bold\" i18n=\"@@bb-account-card-view.bic.label\">BIC:</dt>\n            <dd class=\"bb-inline-stack__item break-word bb-block--no-margin\">{{hostRef.account.BIC}}</dd>\n          </div>\n        </div>\n        <div class=\"bb-block bb-block--xs\" *ngIf=\"hostRef.isValidAddress(hostRef.bankAddress)\">\n          <dt class=\"bb-text-bold\" i18n=\"@@bb-account-card-view.bank.address.label\">Bank branch address</dt>\n          <dd class=\"break-word\" data-role=\"contact-details-account-bank-address\">\n            <bb-contact-full-address [address]=\"hostRef.bankAddress\"></bb-contact-full-address>\n          </dd>\n        </div>\n        <div class=\"bb-block bb-block--xs\" *ngIf=\"hostRef.isValidAddress(hostRef.accountHolderAddress)\">\n          <dt class=\"bb-text-bold\" i18n=\"@@bb-account-card-view.accountHolder.address.label\">\n            Account holder's address\n          </dt>\n          <dd class=\"break-word\" data-role=\"contact-details-account-holder-address\">\n            <bb-contact-full-address [address]=\"hostRef.accountHolderAddress\"></bb-contact-full-address>\n          </dd>\n        </div>\n      </dl>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { AccountCardViewComponent } from './account-card-view.component';\nimport { AccountCardViewCustomizableDirective } from './account-card-view.directive';\nimport { ContactFullAddressModule } from '../contact-full-address/contact-full-address.module';\nimport { CommonModule } from '@angular/common';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { BbIbanPipeModule } from '@backbase/ui-ang/iban-pipe';\nimport { IconModule } from '@backbase/ui-ang/icon';\n\n/**\n * Exports:\n * - AccountCardViewComponent\n * - AccountCardViewCustomizableDirective\n */\n@NgModule({\n  declarations: [AccountCardViewComponent, AccountCardViewCustomizableDirective],\n  exports: [AccountCardViewComponent, AccountCardViewCustomizableDirective],\n  imports: [\n    IconModule,\n    HeaderModule,\n    ButtonModule,\n    BbIbanPipeModule,\n    ContactFullAddressModule,\n    CommonModule,\n    TooltipModule,\n  ],\n})\nexport class AccountCardViewModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { toCamelCase } from '../../helpers/address';\n\n@Pipe({\n  name: 'camelcase',\n})\nexport class CamelCasePipe implements PipeTransform {\n  transform(value: any): any {\n    if (typeof value === 'string') return toCamelCase(value);\n\n    return value;\n  }\n}\n","import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlContainer, NgModelGroup } from '@angular/forms';\nimport { isObjectTruthy } from '../../helpers/address';\nimport { Address, AddressType, InputGroupName, InputName, ViewType } from '../../models/types';\nimport { ContactCountryListService } from '../../services/contact-country-list.service';\nimport { Observable, of } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { InputTextComponent } from '@backbase/ui-ang/input-text';\n\n/**\n * The component is for showing contact  address data.\n *\n *\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *    <bb-contact-address-data\n *   [highlight]=\"hostRef.highlight\"\n *   [isAddAddress]=\"hostRef.isAddAccountHolderAddress\"\n *   [addressType]=\"'accountHolder'\"\n *   [canCopyAddress]=\"hostRef.canCopyAddress\"\n *   [isContactAddressCopied]=\"hostRef.isContactAddressCopied\"\n *   [viewType]=\"hostRef.accountHolderAddressViewType\"\n *   [address]=\"hostRef.accountHolderAddress\"\n *   (add)=\"hostRef.onAccountHolderAddressAdd($event)\"\n *   (edit)=\"hostRef.onAccountHolderAddressEdit()\"\n *   (discard)=\"hostRef.onAccountHolderAddressDiscard($event)\"\n *   (delete)=\"hostRef.onAccountHolderAddressDelete($event)\"\n *   (submit)=\"hostRef.onAddressSubmit($event, hostRef.addressType.ACCOUNTHOLDER)\"\n *   (contactAddressCopy)=\"hostRef.onAddressCopy($event)\"\n *   (addressEditAfterCopy)=\"hostRef.onAddressEditAfterCopy()\">\n * </bb-contact-address-data>\n * ```\n * @ngModule ContactAddressDataModule\n */\n@Component({\n  selector: 'bb-contact-address-data',\n  templateUrl: './contact-address-data.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactAddressDataComponent implements OnInit, AfterViewChecked {\n  hostRef: ContactAddressDataComponent = this;\n  copyContactAddressInputName = InputName.COPY_CONTACT_ADDRESS;\n\n  /**\n   * Flag that denotes if address form should be displayed\n   */\n  @Input()\n  isAddAddress!: boolean;\n\n  /**\n   * Instance that holds the address details\n   */\n  @Input() address: Address = {};\n\n  /**\n   * Type of addresses. Possible values `CONTACT`, `BANK`, `ACCOUNTHOLDER`. Defaults to `CONTACT`\n   */\n  @Input() addressType: AddressType = AddressType.CONTACT;\n\n  /**\n   * Flag that denotes if address can be copied. Default value is `false`\n   */\n  @Input() canCopyAddress = false;\n\n  /**\n   * Flag that denoted if contact address is copied\n   */\n  @Input() isContactAddressCopied = false;\n\n  /**\n   * Type of address view. Possible values `FORM`| `CARD`. Defaults to `FORM`\n   */\n  @Input()\n  viewType!: ViewType;\n\n  /**\n   * If enabled it will apply highlight classes to this component.\n   * By default is `true`.\n   */\n  @Input() highlight = true;\n\n  /**\n   * Event emitted when address is submitted\n   */\n  @Output() submit = new EventEmitter();\n\n  /**\n   * Event emitted when address is discarded\n   */\n  @Output() discard = new EventEmitter();\n\n  /**\n   * Event emitted when address is deleted\n   */\n  @Output() delete = new EventEmitter();\n\n  /**\n   * Event emitted when address is editted\n   */\n  @Output() edit = new EventEmitter();\n\n  /**\n   * Event emitted when contact address has to be copied\n   */\n  @Output() contactAddressCopy = new EventEmitter<boolean>();\n\n  /**\n   * Event emitted when add address action is triggered\n   */\n  @Output() add = new EventEmitter();\n  /**\n   * Event emitted when address is edited after it has been copied from contact address\n   */\n  @Output() addressEditAfterCopy = new EventEmitter();\n\n  /**\n   * The first element one can Tab to in the form\n   */\n  @ViewChild('addressLine1') firstTabElement?: InputTextComponent;\n\n  private needsToRefocus = false;\n\n  fieldGroupName!: string;\n\n  countriesList$: Observable<string[]> = of([]);\n\n  constructor(private readonly contactCountryListService: ContactCountryListService) {}\n\n  ngOnInit() {\n    if (!this.viewType) {\n      this.viewType = ViewType.FORM;\n    }\n    this.fieldGroupName = this.getFieldGroupName();\n    this.address.country = this.address.country || '';\n\n    if (this.addressType === AddressType.BANK) {\n      this.countriesList$ = this.contactCountryListService.getFromExternalSource().pipe(shareReplay());\n    } else {\n      this.countriesList$ = this.contactCountryListService.getFromLocalSource();\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.needsToRefocus) {\n      this.firstTabElement?.inputEl?.nativeElement.focus();\n      this.needsToRefocus = false;\n    }\n  }\n\n  /**\n   *\n   * @returns {string} Name of the addressType.\n   */\n  getFieldGroupName() {\n    return `${InputGroupName.ADDRESS}[${this.addressType}]`;\n  }\n\n  /**\n   * Emits the add address event\n   *\n   * @param {boolean} isAddAddress whether address should be added\n   */\n  addAddress(isAddAddress: boolean) {\n    this.add.emit(isAddAddress);\n    this.needsToRefocus = true;\n  }\n\n  /**\n   * Emits the edit address event\n   */\n  editAddress() {\n    this.edit.emit(this.address);\n    this.needsToRefocus = true;\n  }\n\n  /**\n   * Emits the discard address event\n   */\n  discardAddress() {\n    this.discard.emit(this.fieldGroupName);\n  }\n\n  /**\n   * Emits the delete address event\n   */\n  deleteAddress() {\n    this.delete.emit(this.fieldGroupName);\n  }\n\n  /**\n   *  Emits the submit address event if valid.\n   */\n  submitAddress() {\n    if (isObjectTruthy(this.address)) {\n      this.submit.emit(this.fieldGroupName);\n    } else {\n      this.deleteAddress();\n    }\n  }\n\n  /**\n   * Emits the copy address event\n   */\n  copyContactAddress() {\n    this.contactAddressCopy.emit(this.isContactAddressCopied);\n  }\n\n  /**\n   * Emits the addressEditAfterCopy event\n   */\n  onAddressEdit() {\n    if (this.addressType === AddressType.ACCOUNTHOLDER && this.canCopyAddress) {\n      this.addressEditAfterCopy.emit();\n    }\n  }\n}\n","<div class=\"bb-block bb-block--md\" *ngIf=\"!hostRef.isAddAddress\">\n  <button\n    bbButton\n    color=\"link\"\n    (click)=\"hostRef.addAddress(true)\"\n    [attr.data-role]=\"'contact-add-address' + hostRef.addressType\"\n  >\n    <bb-icon-ui class=\"alert-icon\" name=\"control-point\"> </bb-icon-ui>\n    <ng-container i18n=\"@@contact-address-data.add.address.label\">\n      Add {hostRef.addressType, select, bank {bank} accountHolder {account holder's} other {contact}} address\n    </ng-container>\n  </button>\n</div>\n\n<div\n  class=\"bb-block bb-block--lg card card-section\"\n  *ngIf=\"hostRef.viewType === 'CARD'\"\n  [ngClass]=\"{ 'card-section--highlight': hostRef.highlight }\"\n  [attr.data-role]=\"'contact-card-address' + hostRef.addressType\"\n>\n  <div class=\"bb-stack bb-block bb-block--sm\">\n    <div class=\"bb-stack__item bb-text-bold\" i18n=\"@@contact-address-data.contactaddress.card.label\">\n      {hostRef.addressType, select, bank {Bank} accountHolder {Account holder's} other {Contact}} address\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--push-right\">\n      <button\n        bbButton\n        [attr.data-role]=\"'contact-edit-address' + hostRef.addressType\"\n        [circle]=\"true\"\n        size=\"sm\"\n        color=\"link\"\n        (click)=\"hostRef.editAddress()\"\n        bbTooltip=\"Edit address\"\n        triggers=\"hover focus\"\n        i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.buttons.edit.label\"\n      >\n        <bb-icon-ui color=\"dark\" name=\"edit\"></bb-icon-ui>\n      </button>\n      <button\n        bbButton\n        [attr.data-role]=\"'contact-delete-address' + hostRef.addressType\"\n        [circle]=\"true\"\n        size=\"sm\"\n        color=\"link\"\n        (click)=\"hostRef.deleteAddress()\"\n        bbTooltip=\"Delete address\"\n        triggers=\"hover focus\"\n        i18n-bbTooltip=\"@@contact-address-data.contactaddress.card.buttons.delete.label\"\n      >\n        <bb-icon-ui color=\"dark\" name=\"delete\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n  <bb-contact-full-address [address]=\"hostRef.address\"></bb-contact-full-address>\n</div>\n\n<div\n  class=\"bb-stack bb-block bb-block--lg card card-section\"\n  *ngIf=\"hostRef.isAddAddress\"\n  [ngClass]=\"{\n    'd-none': hostRef.viewType === 'CARD',\n    'card-section--highlight': hostRef.highlight\n  }\"\n>\n  <fieldset [ngModelGroup]=\"hostRef.fieldGroupName\" (input)=\"hostRef.onAddressEdit()\">\n    <legend class=\"sr-only\" i18n=\"@@contact-address-data.addressGroup.title\">Address details</legend>\n    <div class=\"bb-block bb-block--sm\">\n      <div class=\"bb-stack bb-stack--align-top\">\n        <div class=\"bb-block bb-block--lg bb-stack__item bb-select-context__back\" data-role=\"create-contact-form\">\n          <span class=\"d-none\" aria-hidden=\"true\" i18n=\"@@contact-address-data.contactaddress.label\" #heading>\n            {hostRef.addressType, select, bank {Bank} accountHolder {Account holder's} other {Contact}} address\n          </span>\n          <bb-header-ui\n            id=\"headerTtitle\"\n            headingType=\"h4\"\n            [heading]=\"heading.textContent\"\n            data-role=\"contact-address-label\"\n          >\n          </bb-header-ui>\n        </div>\n      </div>\n      <bb-input-text-ui\n        #addressLine1\n        label=\"Primary address line, street name and number\"\n        i18n-label=\"@@contact-address-data.addressLine1.info-label\"\n        [(ngModel)]=\"hostRef.address.addressLine1\"\n        data-role=\"addressLine1\"\n        [name]=\"(hostRef.addressType + 'AddressLine1') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-input-text-ui\n        label=\"Additional address line 2\"\n        i18n-label=\"@@contact-address-data.contactaddress2.info-label\"\n        [(ngModel)]=\"hostRef.address.addressLine2\"\n        data-role=\"addressLine2\"\n        [name]=\"(hostRef.addressType + 'AddressLine2') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"bb-block bb-block--md\">\n      <bb-input-text-ui\n        label=\"Additional address line 3\"\n        i18n-label=\"@@contact-address-data.streetName.info-label\"\n        [(ngModel)]=\"hostRef.address.streetName\"\n        data-role=\"addressLine3\"\n        [name]=\"(hostRef.addressType + 'StreetName') | camelcase\"\n        [maxLength]=\"70\"\n      >\n      </bb-input-text-ui>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-5 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Post code / ZIP\"\n          i18n-label=\"@@contact-address-data.contactPostCode.label\"\n          [(ngModel)]=\"hostRef.address.postCode\"\n          data-role=\"postCode\"\n          [name]=\"(hostRef.addressType + 'PostCode') | camelcase\"\n          [maxLength]=\"16\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-7 col-xs-12\">\n        <bb-input-text-ui\n          label=\"City or town\"\n          i18n-label=\"@@contact-address-data.town.label\"\n          [(ngModel)]=\"hostRef.address.town\"\n          data-role=\"town\"\n          [name]=\"(hostRef.addressType + 'Town') | camelcase\"\n          [maxLength]=\"35\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-7 col-xs-12\">\n        <bb-input-text-ui\n          label=\"State or area\"\n          i18n-label=\"@@contact-address-data.countrySubDivision.label\"\n          [(ngModel)]=\"hostRef.address.countrySubDivision\"\n          data-role=\"stateOrArea\"\n          [name]=\"(hostRef.addressType + 'CountrySubDivision') | camelcase\"\n          [maxLength]=\"35\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-5 col-xs-12\">\n        <bb-dropdown-single-select-ui\n          label=\"Country\"\n          i18n-label=\"@@contact-address-data.contactCountry.label\"\n          (change)=\"hostRef.onAddressEdit()\"\n          [(ngModel)]=\"hostRef.address.country\"\n          data-role=\"contactCountry\"\n          [name]=\"(hostRef.addressType + 'Country') | camelcase\"\n          placeholder=\"Select country\"\n          i18n-placeholder=\"@@bb-create-contact.dropdown.country.placeholder\"\n        >\n          <ng-container *ngFor=\"let country of countriesList$ | async\">\n            <span class=\"d-none\" aria-hidden=\"true\" #countryItem>\n              <bb-country-item [code]=\"country\"></bb-country-item>\n            </span>\n            <bb-dropdown-single-select-option-ui [value]=\"country\" [label]=\"countryItem.textContent\">\n            </bb-dropdown-single-select-option-ui>\n          </ng-container>\n        </bb-dropdown-single-select-ui>\n      </div>\n    </div>\n\n    <div class=\"row bb-block bb-block--lg\" *ngIf=\"hostRef.canCopyAddress && hostRef.addressType === 'accountHolder'\">\n      <div class=\"col-12\">\n        <bb-input-checkbox-ui\n          label=\"Use contact address as account holder's address\"\n          i18n-label=\"@@contact-address-data.copy.contact.address.label\"\n          data-role=\"copy-contact-address-checkbox\"\n          [name]=\"copyContactAddressInputName\"\n          (change)=\"hostRef.copyContactAddress()\"\n          [(ngModel)]=\"hostRef.isContactAddressCopied\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        color=\"primary\"\n        (click)=\"hostRef.submitAddress()\"\n        data-role=\"contact-confirm-address\"\n      >\n        <ng-container i18n=\"@@contact-create.modal.btn.addAddress\"> Confirm address </ng-container>\n      </button>\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.discardAddress()\"\n        data-role=\"contact-cancel-address\"\n      >\n        <ng-container i18n=\"@@contact-create.modal.btn.discard\"> Discard </ng-container>\n      </button>\n    </div>\n  </fieldset>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormControl, FormGroup, NgForm } from '@angular/forms';\nimport { AccountInformation, Address, AddressType, InputGroupName, ViewType } from '../../models/types';\nimport { addressFromAccountHolder, addressFromBank, isObjectTruthy } from '../../helpers/address';\nimport { BB_CONTACT_BANK_ACCOUNT_TYPES_LIST } from '../../config.providers';\nimport { IbanMask } from '../../constants';\n\n/**\n * The component is for showing contact  account data.\n *\n *\n * @usageNotes\n *\n * ### Display contact account data\n *\n * ```html\n *  <bb-contact-account-data\n *   [highlight]=\"false\"\n *   [index]=\"index\"\n *   [account]=\"account.data\"\n *   [accountView]=\"account.viewType\"\n *   [bankAddressViewType]=\"account.bankAddressViewType\"\n *   [accountHolderAddressViewType]=\"account.accountHolderAddressViewType\"\n *   [isAddBankAddress]=\"account.isAddBankAddress\"\n *   [canCopyAddress]=\"hostRef.canCopyAddress()\"\n *   [isContactAddressCopied]=\"account.isContactAddressCopied\"\n *   [bankAddress]=\"account.bankAddress\"\n *   [accountHolderAddress]=\"account.accountHolderAddress\"\n *   [isAddAccountHolderAddress]=\"account.isAddAccountHolderAddress\"\n *   [isAccountTypeRequired]=\"hostRef.isAccountTypeRequired\"\n *   (bankAddressAdd)=\"hostRef.addBankAddress($event, index)\"\n *   (accountHolderAddressAdd)=\"hostRef.addAccountHolderAddress($event, index)\"\n *   (bankAddressViewChange)=\"hostRef.changeBankAddressView($event, index)\"\n *   (accountHolderAddressViewChange)=\"hostRef.changeAccountHolderAddressView($event, index)\"\n *   (editAccount)=\"hostRef.editAccount($event, formRef)\"\n *   (deleteAccount)=\"hostRef.deleteAccount($event)\"\n *   (contactAddressCopy)=\"hostRef.copyAddress($event, index)\"\n *   (addressEditAfterCopy)=\"hostRef.onAddressEditAfterCopy(index)\">\n * </bb-contact-account-data>\n * ```\n * @ngModule ContactAccountDataModule\n */\n@Component({\n  selector: 'bb-contact-account-data',\n  templateUrl: './contact-account-data.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactAccountDataComponent implements OnInit, OnChanges {\n  hostRef: ContactAccountDataComponent = this;\n  readonly addressType = AddressType;\n  readonly ibanMask = IbanMask;\n\n  private originalBankAddress: Address | undefined;\n  private originalAccountHolderAddress: Address | undefined;\n\n  /**\n   * Current index of the account Information\n   */\n  @Input() index = 0;\n  /**\n   * The details of the account\n   */\n  @Input()\n  account!: AccountInformation;\n  /**\n   * Current view type of the account. Possible values `FORM`| `CARD`. Defaults to `FORM`\n   */\n  @Input() accountView: ViewType = ViewType.FORM;\n  /**\n   * Event emitted when the account is edited, i.e, switch from `CARD` view to `FORM` View\n   */\n  @Output() editAccount = new EventEmitter();\n  /**\n   * View type of the bank address\n   */\n  @Input() bankAddressViewType: ViewType = ViewType.FORM;\n  /**\n   * View type of the account holder address\n   */\n  @Input() accountHolderAddressViewType: ViewType = ViewType.FORM;\n  /**\n   * Flag that denotes if bank address should be added\n   */\n  @Input() isAddBankAddress = false;\n  /**\n   * Flag that denotes if address can be copied. Default value is `false`\n   */\n  @Input() canCopyAddress = false;\n  /**\n   * The bank address details\n   */\n  @Input() bankAddress = {};\n  /**\n   * The account holder address details\n   */\n  @Input() accountHolderAddress = {};\n  /**\n   * Flag that denotes if account holder address should be added\n   */\n  @Input() isAddAccountHolderAddress = false;\n  /**\n   * Flag that denotes if contact address is copied\n   */\n  @Input() isContactAddressCopied = false;\n  /**\n   * Property meant for forcing change detection when parent changes form state\n   */\n  @Input() forceChangeDetection: unknown;\n  /**\n   * If enabled it will apply highlight classes to this component.\n   * By default is `true`.\n   */\n  @Input() highlight = true;\n  /**\n   * If enabled the accountType is mandatory field.\n   */\n  @Input() isAccountTypeRequired = false;\n  /**\n   * Event emitted when add bank address flag changes\n   */\n  @Output() bankAddressAdd = new EventEmitter<boolean>();\n  /**\n   * Event emitted when add account holder address flag changes\n   */\n  @Output() accountHolderAddressAdd = new EventEmitter<boolean>();\n  /**\n   * Event emitted when bank address view is changed\n   */\n  @Output() bankAddressViewChange = new EventEmitter<ViewType>();\n  /**\n   * Event emitted when accountHolder address view is changed\n   */\n  @Output() accountHolderAddressViewChange = new EventEmitter<ViewType>();\n  /**\n   * Event emitted when contact address has to be copied\n   */\n  @Output() contactAddressCopy = new EventEmitter<boolean>();\n  /**\n   * Event emitted when the account is deleted\n   */\n  @Output() deleteAccount = new EventEmitter();\n  /**\n   * Event emitted when address is edited after it has been copied from contact address\n   */\n  @Output() addressEditAfterCopy = new EventEmitter();\n\n  accountInputGroupName!: string;\n\n  constructor(\n    private readonly ctrlContainer: ControlContainer,\n    @Inject(BB_CONTACT_BANK_ACCOUNT_TYPES_LIST) public accountTypeList: string[],\n  ) {}\n\n  ngOnInit() {\n    this.accountInputGroupName = this.getName();\n    if (Object.keys(this.bankAddress).length) {\n      this.originalBankAddress = { ...this.bankAddress };\n    }\n    if (Object.keys(this.accountHolderAddress).length) {\n      this.originalAccountHolderAddress = { ...this.accountHolderAddress };\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['index']) {\n      this.accountInputGroupName = this.getName();\n    }\n  }\n  /**\n   *\n   * @returns {string} Name of the current index of contact account.\n   */\n  getName() {\n    return `${InputGroupName.ACCOUNT}[${this.index}]`;\n  }\n  /**\n   * Emits the delete event\n   *\n   * @param {?number} accountIndex - account Index\n   */\n  onDeleteAccount(accountIndex?: number) {\n    this.deleteAccount.emit(accountIndex || this.index);\n  }\n  /**\n   * Emits the contactAddressCopy event\n   *\n   * @param {boolean} isCopy - if copy is allowed.\n   */\n  onAddressCopy(isCopy: boolean) {\n    this.contactAddressCopy.emit(isCopy);\n  }\n  /**\n   * Emits the edit account method\n   *\n   * @param {?number} accountIndex index of an account\n   */\n  onEditAccount(accountIndex?: number) {\n    this.editAccount.emit(accountIndex || this.index);\n  }\n  /**\n   * Emits the bankaddress add event\n   *\n   * @param {boolean} isAddAddress whether new address should be added\n   */\n  onBankAddressAdd(isAddAddress: boolean) {\n    this.bankAddressAdd.emit(isAddAddress);\n  }\n  /**\n   * Emits Bank address edit event\n   */\n  onBankAddressEdit() {\n    this.bankAddressViewChange.emit(ViewType.FORM);\n  }\n  /**\n   * Emits the bankaddress delete event with index\n   *\n   * @param {string} controlName name of a form control\n   */\n  onBankAddressDelete(controlName: string) {\n    this.originalBankAddress = undefined;\n    this.bankAddressAdd.emit(false);\n    this.resetAddress(controlName);\n    this.bankAddressViewChange.emit(ViewType.FORM);\n  }\n  /**\n   * Emits appropriate event based on validity.\n   *\n   * @param {string} controlName name of a form control\n   * @param {AddressType} addressType enumerated value\n   */\n  onAddressSubmit(controlName: string, addressType: AddressType) {\n    const address = this.getFormControl(controlName);\n    address.markAllAsTouched();\n    address.updateValueAndValidity();\n    if (address.valid) {\n      if (addressType === this.addressType.BANK) {\n        this.originalBankAddress = { ...addressFromBank(address.value) };\n        this.bankAddressViewChange.emit(ViewType.CARD);\n      } else {\n        this.originalAccountHolderAddress = { ...addressFromAccountHolder(address.value) };\n        this.accountHolderAddressViewChange.emit(ViewType.CARD);\n      }\n    }\n  }\n  /**\n   * Emits appropriate view ehn discarded.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onBankAddressDiscard(controlName: string) {\n    if (this.originalBankAddress) {\n      this.bankAddress = { ...this.originalBankAddress };\n      this.bankAddressViewChange.emit(ViewType.CARD);\n    } else {\n      this.onBankAddressDelete(controlName);\n    }\n  }\n  /**\n   * Resets form control.\n   *\n   * @param {string} controlName name of a form control\n   */\n  resetAddress(controlName: string) {\n    this.getFormControl(controlName).reset();\n  }\n  /**\n   * Checks if the address is valid.\n   *\n   * @param {Address} address address object\n   * @returns {boolean} whether address is valid\n   */\n  isValidAddress(address: Address): boolean {\n    return isObjectTruthy(address);\n  }\n  /**\n   * Returns the form control of given control name,\n   *\n   * @param {string} controlName name of a form control\n   * @returns {AbstractControl} form control object\n   */\n  getFormControl(controlName: string): AbstractControl {\n    const accountInputGroup = (this.ctrlContainer as NgForm).controls[this.accountInputGroupName];\n\n    if (!accountInputGroup) {\n      return new FormControl();\n    }\n\n    return (accountInputGroup as FormGroup).controls[controlName];\n  }\n  /**\n   * Emits event when account holder address is added\n   *\n   * @param {boolean} isAddAddress whether address should be added\n   */\n  onAccountHolderAddressAdd(isAddAddress: boolean) {\n    this.accountHolderAddressAdd.emit(isAddAddress);\n  }\n  /**\n   * Emits event when account holder address is edited.\n   */\n  onAccountHolderAddressEdit() {\n    this.accountHolderAddressViewChange.emit(ViewType.FORM);\n  }\n  /**\n   *Emits event when account holder address is deleted.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAccountHolderAddressDelete(controlName: string) {\n    this.originalAccountHolderAddress = undefined;\n    this.accountHolderAddressAdd.emit(false);\n    this.resetAddress(controlName);\n    this.accountHolderAddressViewChange.emit(ViewType.FORM);\n  }\n  /**\n   * Emits account\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAccountHolderAddressDiscard(controlName: string) {\n    if (this.originalAccountHolderAddress) {\n      this.accountHolderAddress = { ...this.originalAccountHolderAddress };\n      this.accountHolderAddressViewChange.emit(ViewType.CARD);\n    } else {\n      this.onAccountHolderAddressDelete(controlName);\n    }\n  }\n  /**\n   * Emits address after edit copy event\n   */\n  onAddressEditAfterCopy() {\n    this.addressEditAfterCopy.emit();\n  }\n}\n","<div [ngClass]=\"{'d-none': hostRef.accountView ==='CARD'}\">\n  <fieldset [ngModelGroup]=\"hostRef.accountInputGroupName\">\n    <legend class=\"sr-only\" i18n=\"@@contact-account-data.accountGroup.title\">Account details</legend>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\" data-role=\"contact-account-info-account-name1\">\n        <label\n          #accountNameLabel\n          id=\"bb-contact-account-data-accountName-label\"\n          i18n=\"@@contact-account-data.accountName.label\"\n        >\n          Account name\n        </label>\n        <span id=\"account-name-required-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.accountName.text-support.required.label\">Required</ng-container>)\n        </span>\n        <bb-input-text-ui\n          name=\"name\"\n          #accountNameModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.account.name\"\n          [maxLength]=\"140\"\n          [required]=\"true\"\n          [aria-labelledby]=\"accountNameLabel.id\"\n          aria-describedby=\"account-name-required-info\"\n          data-role=\"contact-account-info-account-name\"\n          bbNoWhiteSpace\n        >\n        </bb-input-text-ui>\n\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"accountNameModel.invalid && accountNameModel.touched\"\n        >\n          <ng-container>\n            <span i18n=\"@@contact-account-data.accountName.errorText\" data-role=\"missing-account-name\">\n              Account name is required\n            </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          name=\"alias\"\n          label=\"Account alias\"\n          i18n-label=\"@@contact-account-data.accountAlias.label\"\n          [(ngModel)]=\"hostRef.account.alias\"\n          [maxLength]=\"34\"\n          data-role=\"account-alias\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label #ibanLabel id=\"bb-contact-account-data-iban-label\" i18n=\"@@contact-account-data.contactIBAN.label\">\n          IBAN\n        </label>\n        <span id=\"iban-required-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.iban.text-support.required.label\"\n            >IBAN or BBAN is required</ng-container\n          >)\n        </span>\n        <bb-input-text-ui\n          name=\"IBAN\"\n          #ibanModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.account.IBAN\"\n          [maxLength]=\"hostRef.ibanMask.length\"\n          [required]=\"!bbanModel.value\"\n          [aria-labelledby]=\"ibanLabel.id\"\n          aria-describedby=\"iban-required-info\"\n          [mask]=\"hostRef.ibanMask\"\n          [maskValidator]=\"false\"\n          data-role=\"contact-iban\"\n          bbIbanValidator\n        >\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"(ibanModel.invalid && ibanModel.touched || bbanModel.invalid && bbanModel.touched)\"\n        >\n          <ng-container *ngIf=\"ibanModel.errors && ibanModel?.errors.required\">\n            <span i18n=\"@@contact-account-data.iban.error.required\" data-role=\"missing-iban\">\n              IBAN or BBAN is required\n            </span>\n          </ng-container>\n          <ng-container *ngIf=\"ibanModel.errors && ibanModel?.errors.invalidIban\">\n            <span i18n=\"@@contact-account-data.accountName.error.iban\" data-role=\"invalid-iban\"> Invalid IBAN </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label #bbanLabel id=\"bb-contact-account-data-bban-label\" i18n=\"@@contact-account-data.contactBBAN.label\">\n          BBAN\n        </label>\n        <span id=\"bban-required-info\" class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.bban.text-support.required.label\"\n            >IBAN or BBAN is required</ng-container\n          >)\n        </span>\n        <bb-input-text-ui\n          name=\"accountNumber\"\n          #bbanModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.account.accountNumber\"\n          [maxLength]=\"34\"\n          [required]=\"!ibanModel.value\"\n          [aria-labelledby]=\"bbanLabel.id\"\n          aria-describedby=\"bban-required-info\"\n          data-role=\"contact-account-number\"\n        >\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"(ibanModel.invalid && ibanModel.touched || bbanModel.invalid && bbanModel.touched)\"\n        >\n          <ng-container *ngIf=\"bbanModel.errors && bbanModel?.errors.required\">\n            <span i18n=\"@@contact-account-data.iban.error.required\" data-role=\"missing-bban\">\n              IBAN or BBAN is required\n            </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label\n          #accountTypeLabel\n          id=\"bb-contact-account-data-accountType-label\"\n          i18n=\"@@contact-account-data.accounType.label\"\n        >\n          Account type\n        </label>\n        <span id=\"account-type-required-info\" class=\"bb-text-support\" *ngIf=\"hostRef.isAccountTypeRequired\">\n          (<ng-container i18n=\"@@contact-account-data.accountType.text-support.required.label\">Required</ng-container>)\n        </span>\n        <bb-dropdown-single-select-ui\n          name=\"accountType\"\n          #accountTypeModel=\"ngModel\"\n          placeholder=\"Select\"\n          i18n-placeholder=\"@@bb-create-contact.dropdown.account.type.placeholder\"\n          [(ngModel)]=\"hostRef.account.accountType\"\n          [defaultOptionAsPlaceholder]=\"!hostRef.isAccountTypeRequired\"\n          [required]=\"hostRef.isAccountTypeRequired\"\n          [aria-labelledby]=\"accountTypeLabel.id\"\n          aria-describedby=\"account-type-required-info\"\n          data-role=\"bankAccountType\"\n        >\n          <ng-container *ngFor=\"let accountType of accountTypeList\">\n            <bb-dropdown-single-select-option-ui [value]=\"accountType\" [label]=\"accountType\">\n            </bb-dropdown-single-select-option-ui>\n          </ng-container>\n        </bb-dropdown-single-select-ui>\n\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"accountTypeModel.invalid && accountTypeModel.touched\"\n        >\n          <ng-container>\n            <span i18n=\"@@contact-account-data.accountType.errorText\" data-role=\"missing-account-type\">\n              Account type is required\n            </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          name=\"bankCode\"\n          label=\"Bank branch code\"\n          i18n-label=\"@@contact-account-data.contactBankCode.label\"\n          [(ngModel)]=\"hostRef.account.bankCode\"\n          [maxLength]=\"20\"\n          data-role=\"bank-code\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          name=\"bankName\"\n          label=\"Bank name\"\n          i18n-label=\"@@contact-account-data.contactBankName.label\"\n          [(ngModel)]=\"hostRef.account.bankName\"\n          [maxLength]=\"140\"\n          data-role=\"bank-name\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          name=\"BIC\"\n          #bicModel=\"ngModel\"\n          label=\"BIC\"\n          i18n-label=\"@@contact-account-data.contactBIC.label\"\n          [(ngModel)]=\"hostRef.account.BIC\"\n          (ngModelChange)=\"hostRef.account.BIC = $event && $event.toUpperCase()\"\n          pattern=\"^[A-Za-z]{6,6}[A-Za-z2-9][A-Na-nP-Zp-z0-9]([A-Za-z0-9]{3,3}){0,1}$\"\n          data-role=\"bic\"\n        >\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"bicModel.invalid && bicModel.touched\">\n          <ng-container *ngIf=\"bicModel.errors && bicModel?.errors.pattern\">\n            <span i18n=\"@@contact-account-data.accountName.error.bic\" data-role=\"invalid-bic\"> Invalid BIC </span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div data-role=\"bank-address-container\">\n      <bb-contact-address-data\n        [highlight]=\"hostRef.highlight\"\n        [isAddAddress]=\"hostRef.isAddBankAddress\"\n        [addressType]=\"'bank'\"\n        [viewType]=\"hostRef.bankAddressViewType\"\n        [address]=\"hostRef.bankAddress\"\n        (add)=\"hostRef.onBankAddressAdd($event)\"\n        (edit)=\"hostRef.onBankAddressEdit()\"\n        (discard)=\"hostRef.onBankAddressDiscard($event)\"\n        (delete)=\"hostRef.onBankAddressDelete($event)\"\n        (submit)=\"hostRef.onAddressSubmit($event, hostRef.addressType.BANK)\"\n      >\n      </bb-contact-address-data>\n    </div>\n    <div data-role=\"account-holder-address-container\">\n      <bb-contact-address-data\n        [highlight]=\"hostRef.highlight\"\n        [isAddAddress]=\"hostRef.isAddAccountHolderAddress\"\n        [addressType]=\"'accountHolder'\"\n        [canCopyAddress]=\"hostRef.canCopyAddress\"\n        [isContactAddressCopied]=\"hostRef.isContactAddressCopied\"\n        [viewType]=\"hostRef.accountHolderAddressViewType\"\n        [address]=\"hostRef.accountHolderAddress\"\n        (add)=\"hostRef.onAccountHolderAddressAdd($event)\"\n        (edit)=\"hostRef.onAccountHolderAddressEdit()\"\n        (discard)=\"hostRef.onAccountHolderAddressDiscard($event)\"\n        (delete)=\"hostRef.onAccountHolderAddressDelete($event)\"\n        (submit)=\"hostRef.onAddressSubmit($event, hostRef.addressType.ACCOUNTHOLDER)\"\n        (contactAddressCopy)=\"hostRef.onAddressCopy($event)\"\n        (addressEditAfterCopy)=\"hostRef.onAddressEditAfterCopy()\"\n      >\n      </bb-contact-address-data>\n    </div>\n  </fieldset>\n</div>\n\n<div\n  class=\"card card-section bb-block bb-block--lg\"\n  *ngIf=\"hostRef.accountView ==='CARD'\"\n  data-role=\"contact-account-card-address\"\n>\n  <bb-account-card-view\n    [index]=\"hostRef.index\"\n    [isEditMode]=\"true\"\n    [account]=\"hostRef.account\"\n    [bankAddress]=\"hostRef.bankAddress\"\n    [accountHolderAddress]=\"hostRef.accountHolderAddress\"\n    (deleteAccount)=\"hostRef.onDeleteAccount($event)\"\n    (editAccount)=\"hostRef.onEditAccount($event)\"\n  >\n  </bb-account-card-view>\n</div>\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactAccountDataComponent } from './contact-account-data.component';\n\n/**\n * This is an extension slot to be used for customizing contact account data\n *\n * @usageNotes\n *\n * ### Display contact account data\n *\n * ```html\n *  <ng-template bbContactAccountDataCustomizable let-hostRef>\n * {{hostRef.account.name}}</ng-template>\n * ```\n * @ngModule ContactAccountDataModule\n */\n@Directive({\n  selector: '[bbContactAccountDataCustomizable]',\n})\nexport class ContactAccountDataCustomizableDirective extends BbTemplate<ContactAccountDataComponent, undefined> {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactAddressDataComponent } from './contact-address-data.component';\n\n/**\n * This is an extension slot to be used for customizing contact address data\n *\n * @usageNotes\n *\n * ### Display contact address data\n *\n * ```html\n *  <ng-template bbContactAddressDataCustomizable let-hostRef>\n * {{hostRef.address.addressLine1}}</ng-template>\n * ```\n * @ngModule ContactAddressDataModule\n */\n@Directive({\n  selector: '[bbContactAddressDataCustomizable]',\n})\nexport class ContactAddressDataCustomizableDirective extends BbTemplate<ContactAddressDataComponent, undefined> {}\n","import { NgModule } from '@angular/core';\nimport { CamelCasePipe } from './camel-case.pipe';\n\n@NgModule({\n  declarations: [CamelCasePipe],\n  exports: [CamelCasePipe],\n})\nexport class CamelCaseModule {}\n","import { NgModule } from '@angular/core';\nimport { ContactAddressDataComponent } from './contact-address-data.component';\nimport { ContactAddressDataCustomizableDirective } from './contact-address-data.directive';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { CountryItemModule } from '../country-item/country-item.module';\nimport { ContactFullAddressModule } from '../contact-full-address/contact-full-address.module';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CamelCaseModule } from '../../pipes/camel-case/camel-case.module';\n\n/**\n * Exports:\n * - ContactAddressDataComponent\n * - ContactAddressDataCustomizableDirective\n */\n@NgModule({\n  declarations: [ContactAddressDataComponent, ContactAddressDataCustomizableDirective],\n  exports: [ContactAddressDataComponent, ContactAddressDataCustomizableDirective],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IconModule,\n    HeaderModule,\n    InputTextModule,\n    DropdownSingleSelectModule,\n    CountryItemModule,\n    InputCheckboxModule,\n    ButtonModule,\n    ContactFullAddressModule,\n    TooltipModule,\n    CamelCaseModule,\n  ],\n})\nexport class ContactAddressDataModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ContactAccountDataComponent } from './contact-account-data.component';\nimport { ContactAccountDataCustomizableDirective } from './contact-account-data.directive';\nimport { ContactAddressDataModule } from '../contact-address-data/contact-address-data.module';\nimport { AccountCardViewModule } from '../account-card-view/account-card-view.module';\nimport { NoWhiteSpaceModule } from '../../directives/no-white-space-validator/no-white-space.module';\nimport { IbanValidatorModule } from '../../directives/iban-validator/iban-validator.module';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\n\n/**\n * Exports:\n * - ContactAccountDataComponent\n * - ContactAccountDataCustomizableDirective\n */\n@NgModule({\n  declarations: [ContactAccountDataComponent, ContactAccountDataCustomizableDirective],\n  exports: [ContactAccountDataComponent, ContactAccountDataCustomizableDirective],\n  imports: [\n    CommonModule,\n    FormsModule,\n    InputTextModule,\n    InputValidationMessageModule,\n    DropdownSingleSelectModule,\n    ContactAddressDataModule,\n    AccountCardViewModule,\n    NoWhiteSpaceModule,\n    IbanValidatorModule,\n  ],\n})\nexport class ContactAccountDataModule {}\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\n\n/**\n * This is an extension slot to be used for customizing contact details item\n *\n * @usageNotes\n *p\n * ### Display contact details view.\n *\n * ```html\n *  <ng-template bbContactItemDetailsCustomizable let-hostRef>\n *   <div class=\"bb-block\">\n *     <div\n *       *ngIf=\"hostRef.showName\"\n *       class=\"bb-stack bb-block bb-block--md col\"\n *     >\n *       <span\n *         class=\"bb-stack__item\"\n *         data-role=\"contact-details-info-name\"\n *       >\n *         {{ hostRef.contactItem?.name }}\n *       </span>\n *       <ng-container *ngIf=\"hostRef.contactItem?.alias\">\n *         <span\n *           class=\"bb-stack__item\"\n *           aria-hidden=\"true\"\n *         >\n *           •\n *         </span>\n *         <span\n *           class=\"bb-stack__item\"\n *           data-role=\"contact-details-info-alias\"\n *         >\n *           {{ hostRef.contactItem?.alias }}\n *         </span>\n *       </ng-container>\n *     </div>\n *     <div class=\"col bb-block bb-block--lg\">\n *       <div class=\"row bb-stack\">\n *         <div\n *           *ngIf=\"hostRef.contactItem?.phoneNumber\"\n *           class=\"bb-stack__item col-6 bb-block bb-block--md\"\n *         >\n *           <div\n *             class=\"bb-block bb-block--sm bb-label\"\n *             i18n=\"@@contact-item-details.contact-information.phone\"\n *           >\n *             Phone number\n *           </div>\n *           <div\n *             class=\"bb-block bb-block--sm\"\n *             data-role=\"contact-details-info-phone\"\n *           >\n *             {{hostRef.contactItem?.phoneNumber}}\n *           </div>\n *         </div>\n *         <div\n *           *ngIf=\"hostRef.contactItem?.emailId\"\n *           class=\"bb-stack__item bb-stack__item--align-top col-6 bb-block bb-block--md \"\n *         >\n *           <div\n *             class=\"bb-block bb-block--sm bb-label row\"\n *             i18n=\"@@contact-item-details.contact-information.email\"\n *           >\n *             Email address\n *           </div>\n *           <div\n *             class=\"row\"\n *             data-role=\"contact-details-info-email\"\n *           >\n *             {{hostRef.contactItem?.emailId}}\n *           </div>\n *         </div>\n *       </div>\n *       <div\n *         *ngIf=\"hostRef.contactItem?.contactPerson\"\n *         class=\"bb-block bb-block--md col-12\"\n *       >\n *         <div\n *           class=\"bb-block bb-block--sm bb-label row\"\n *           i18n=\"@@contact-item-details.contact-information.contact-person\"\n *         >\n *           Contact person\n *         </div>\n *         <div\n *           class=\"bb-block bb-block--sm row\"\n *           data-role=\"contact-details-info-contact-person\"\n *         >\n *           {{hostRef.contactItem?.contactPerson}}\n *         </div>\n *       </div>\n *       <div class=\"bb-block bb-block--md col-12\">\n *         <div\n *           *ngIf=\"hostRef.contactItem?.streetName || hostRef.contactItem?.addressLine1 || hostRef.contactItem?.addressLine2\"\n *           class=\"bb-block bb-block--sm bb-label row\"\n *           i18n=\"@@contact-item-details.contact-information.address\"\n *         >\n *           Contact address\n *         </div>\n *         <bb-contact-full-address\n *           [address]=\"hostRef.address\"\n *           class=\"row\"\n *         ></bb-contact-full-address>\n *       </div>\n *     </div>\n *   </div>\n *   <div class=\"bb-block bb-block--lg\">\n *     <div class=\"bb-stack bb-block bb-block--lg\">\n *       <bb-header-ui\n *         headingType=\"h3\"\n *         heading=\"Account information\"\n *         i18n-heading=\"@@contact-item-details.account-information.title\"\n *         headingClasses=\"bb-stack__item bb-stack__item--fill\"\n *       >\n *       </bb-header-ui>\n *       <span\n *         class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--push-right bb-text-support\"\n *         i18n=\"@@contact-item-details.account-information.number-of-accounts\"\n *         data-role=\"contact-details-account-number-accounts\"\n *       >\n *         {{hostRef.contactItem?.accounts?.length}}\n *         {hostRef.contactItem?.accounts?.length, plural, =1 {account} other {accounts}}\n *       </span>\n *     </div>\n *     <div\n *       *ngFor=\"let account of hostRef.contactItem?.accounts; let index = index; trackBy: hostRef.trackByIndex\"\n *       class=\"card card-section bb-block bb-block--lg\"\n *     >\n *       <bb-account-card-view\n *         [account]=\"account\"\n *         [bankAddress]=\"hostRef.bankAddress(account)\"\n *         [accountHolderAddress]=\"hostRef.accountHolderAddress(account)\"\n *         [index]=\"index\"\n *       ></bb-account-card-view>\n *     </div>\n *   </div>\n * </ng-template>\n * ```\n * @ngModule ContactItemDetailsModule\n */\n@Directive({\n  selector: '[bbContactItemDetailsCustomizable]',\n})\nexport class ContactItemDetailsCustomizableDirective extends BbTemplate<\n  ContactItemDetailsCustomizableDirective,\n  undefined\n> {}\n","import { Component, Input } from '@angular/core';\nimport { Address, ContactItem } from '../../models/types';\nimport { addressFromAccountHolder, addressFromBank, addressFromContact } from '../../helpers/address';\nimport { AccountInformation } from '@backbase/contact-manager-http-ang';\n\n/**\n * The component is for showing contact detail item.\n *\n * The following extension slots are available in this component:\n *  - `ContactItemDetailsCustomizableDirective`\n *\n * @see ContactItemDetailsCustomizableDirective\n * @usageNotes\n *\n * ### Display contact personal data\n *\n * ```html\n *    <bb-contact-item-details\n *            *ngIf=\"hostRef.contactItem\"\n *             [contactItem]=\"hostRef.contactItem.data\">\n *           </bb-contact-item-details>\n * ```\n * @ngModule ContactItemDetailsModule\n */\n@Component({\n  selector: 'bb-contact-item-details',\n  templateUrl: './contact-item-details.component.html',\n})\nexport class ContactItemDetailsComponent {\n  hostRef: ContactItemDetailsComponent = this;\n  /**\n   * The contact request item\n   */\n  @Input()\n  contactItem!: ContactItem;\n  /**\n   * Flag that denotes if the conctact name should be displayed. Defaults to `true`\n   *\n   */\n  @Input() showName = true;\n  /**\n   *  Flag that denotes if the section headings name should be displayed. Defaults to `false`\n   */\n  @Input() showHeaders = false;\n\n  get address(): Address {\n    return addressFromContact(this.contactItem);\n  }\n  /**\n   * Returns the address in correct format\n   *\n   * @param {AccountInformation} account current account details\n   * @returns {Address} Returns the address in correct format\n   */\n  bankAddress(account: AccountInformation): Address {\n    return addressFromBank(account);\n  }\n  /**\n   * Returns the address in correct format\n   *\n   * @param {AccountInformation} account current account details\n   * @returns {Address} Returns the address in correct format\n   */\n  accountHolderAddress(account: AccountInformation): Address {\n    return addressFromAccountHolder(account);\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}\n","<ng-container bbContactItemDetailsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbContactItemDetailsCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--xl\">\n    <div *ngIf=\"hostRef.showName\" class=\"bb-stack bb-block bb-block--md col\">\n      <span class=\"bb-stack__item\" data-role=\"contact-details-info-name\">{{ hostRef.contactItem?.name }}</span>\n      <ng-container *ngIf=\"hostRef.contactItem?.alias\">\n        <span class=\"bb-stack__item\" aria-hidden=\"true\"> • </span>\n        <span class=\"bb-stack__item\" data-role=\"contact-details-info-alias\"> {{ hostRef.contactItem?.alias }} </span>\n      </ng-container>\n    </div>\n    <dl class=\"col bb-block\" tabindex=\"0\">\n      <div class=\"row flex-column-reverse flex-sm-row\">\n        <div *ngIf=\"hostRef.contactItem?.phoneNumber\" class=\"col-12 col-sm-6 bb-block bb-block--sm\">\n          <dt class=\"bb-block bb-block--sm bb-label\" i18n=\"@@contact-item-details.contact-information.phone\">\n            Phone number\n          </dt>\n          <dd class=\"bb-block bb-block--sm\" data-role=\"contact-details-info-phone\">\n            {{hostRef.contactItem?.phoneNumber}}\n          </dd>\n        </div>\n        <div *ngIf=\"hostRef.contactItem?.emailId\" class=\"col-12 col-sm-6 bb-block bb-block--sm\">\n          <dt class=\"bb-block bb-block--sm bb-label\" i18n=\"@@contact-item-details.contact-information.email\">\n            Email address\n          </dt>\n          <dd class=\"bb-block bb-block--sm\" data-role=\"contact-details-info-email\">{{hostRef.contactItem?.emailId}}</dd>\n        </div>\n      </div>\n      <div *ngIf=\"hostRef.contactItem?.contactPerson\" class=\"bb-block bb-block--md col-12\">\n        <dt class=\"bb-block bb-block--sm bb-label row\" i18n=\"@@contact-item-details.contact-information.contact-person\">\n          Contact person\n        </dt>\n        <dd class=\"bb-block bb-block--sm row\" data-role=\"contact-details-info-contact-person\">\n          {{hostRef.contactItem?.contactPerson}}\n        </dd>\n      </div>\n      <div class=\"bb-block bb-block--md col-12\">\n        <dt\n          *ngIf=\"hostRef.contactItem?.streetName || hostRef.contactItem?.addressLine1 || hostRef.contactItem?.addressLine2\"\n          class=\"bb-block bb-block--sm bb-label row\"\n          i18n=\"@@contact-item-details.contact-information.address\"\n        >\n          Contact address\n        </dt>\n        <dd>\n          <bb-contact-full-address [address]=\"hostRef.address\" class=\"row\"></bb-contact-full-address>\n        </dd>\n      </div>\n    </dl>\n  </div>\n  <div class=\"bb-block\">\n    <div class=\"bb-stack bb-block bb-block--xs\" tabindex=\"0\">\n      <bb-header-ui\n        headingType=\"h3\"\n        heading=\"Account information\"\n        i18n-heading=\"@@contact-item-details.account-information.title\"\n        headingClasses=\"bb-stack__item bb-stack__item--fill\"\n      >\n      </bb-header-ui>\n      <span\n        class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--push-right bb-text-support\"\n        i18n=\"@@contact-item-details.account-information.number-of-accounts\"\n        data-role=\"contact-details-account-number-accounts\"\n      >\n        {{hostRef.contactItem?.accounts?.length}} {hostRef.contactItem?.accounts?.length, plural, =1 {account} other\n        {accounts}}\n      </span>\n    </div>\n    <div\n      *ngFor=\"let account of hostRef.contactItem?.accounts; let index = index; trackBy: hostRef.trackByIndex\"\n      class=\"card card-section bb-block bb-block--sm\"\n    >\n      <bb-account-card-view\n        tabindex=\"0\"\n        [account]=\"account\"\n        [bankAddress]=\"hostRef.bankAddress(account)\"\n        [accountHolderAddress]=\"hostRef.accountHolderAddress(account)\"\n        [index]=\"index\"\n      ></bb-account-card-view>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { ContactItemDetailsComponent } from './contact-item-details.component';\nimport { ContactItemDetailsCustomizableDirective } from './contact-item-details.directive';\nimport { CommonModule } from '@angular/common';\nimport { ContactFullAddressModule } from '../contact-full-address/contact-full-address.module';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { AccountCardViewModule } from '../account-card-view/account-card-view.module';\n\n@NgModule({\n  declarations: [ContactItemDetailsComponent, ContactItemDetailsCustomizableDirective],\n  exports: [ContactItemDetailsComponent, ContactItemDetailsCustomizableDirective],\n  imports: [CommonModule, HeaderModule, ContactFullAddressModule, AccountCardViewModule],\n})\nexport class ContactItemDetailsModule {}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlContainer, FormGroup, NgForm } from '@angular/forms';\nimport { Address, ContactItem, InputGroupName, ViewType } from '../../models/types';\nimport { isObjectTruthy } from '../../helpers/address';\n\n/**\n * The component is for showing persons personal data.\n *\n * The following extension slots are available in this component:\n *  - `ContactPersonalDataCustomizableDirective`\n *\n * @see ContactPersonalDataCustomizableDirective\n * @usageNotes\n *\n * ### Display contact personal data\n *\n * ```html\n *    <bb-contact-personal-data\n *      [contact]=\"hostRef.formModel.contact\"\n *      [address]=\"hostRef.contactAddress\"\n *      [viewType]=\"hostRef.contactViewType\"\n *      [isAddContactAddress]= \"hostRef.isAddContactAddress\"\n *      (contactAddressAdd)= \"hostRef.addContactAddress($event)\"\n *      (viewChange)=\"hostRef.changeContactView($event)\">\n *    </bb-contact-personal-data>\n * ```\n * @ngModule ContactPersonalDataModule\n */\n@Component({\n  selector: 'bb-contact-personal-data',\n  templateUrl: './contact-personal-data.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactPersonalDataComponent implements OnInit {\n  hostRef: ContactPersonalDataComponent = this;\n  contactInputGroupName = InputGroupName.CONTACT;\n\n  private originalAddress: Address | undefined;\n\n  /**\n   * View type of the contact address\n   */\n  @Input()\n  viewType!: ViewType;\n  /**\n   * The contact details instance\n   */\n  @Input()\n  contact!: ContactItem;\n  /**\n   * Flag that denotes if contact address should be added\n   */\n  @Input() isAddContactAddress = false;\n  /**\n   * Address details of the contact\n   */\n  @Input()\n  address!: Address;\n  /**\n   * Property meant for forcing change detection when parent changes form state\n   */\n  @Input() forceChangeDetection: unknown;\n  /**\n   * Event emitted when contact add address flag changes\n   */\n  @Output() contactAddressAdd = new EventEmitter<boolean>();\n  /**\n   *\n   * Event emitted when contact address view is changed\n   */\n  @Output() viewChange = new EventEmitter<ViewType>();\n\n  constructor(private readonly ctrlContainer: ControlContainer) {}\n\n  ngOnInit() {\n    if (isObjectTruthy(this.address)) {\n      this.originalAddress = { ...this.address };\n    }\n  }\n  /**\n   * Returns the control of the form\n   *\n   * @param {string} controlName name of a form control\n   * @returns {AbstractControl | null} form control for given name.\n   */\n  getFormControl(controlName: string): AbstractControl | null {\n    const contactInputGroup = (this.ctrlContainer as NgForm).controls[this.contactInputGroupName];\n    if (contactInputGroup) {\n      return (contactInputGroup as FormGroup).controls[controlName];\n    }\n\n    return null;\n  }\n  /**\n   * Resets the control of the form.\n   *\n   * @param {string} controlName name of a form control\n   */\n  reset(controlName: string) {\n    const formControl = this.getFormControl(controlName);\n    if (formControl) {\n      formControl.reset();\n    }\n  }\n  /**\n   * Updates the form status and mark as touched.\n   * Also changes the view to CARD view once done.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressSubmit(controlName: string) {\n    const address = this.getFormControl(controlName);\n    if (address) {\n      address.markAllAsTouched();\n      address.updateValueAndValidity();\n      if (address.valid) {\n        this.originalAddress = { ...address.value };\n        this.viewChange.emit(ViewType.CARD);\n      }\n    }\n  }\n  /**\n   * Emits the contact address add event\n   *\n   * @param {boolean} isAddAddress Emits the contact address add\n   */\n  onAddressAdd(isAddAddress: boolean) {\n    this.contactAddressAdd.emit(isAddAddress);\n  }\n  /**\n   * hanges the view to form.\n   */\n  onAddressEdit() {\n    this.viewChange.emit(ViewType.FORM);\n  }\n  /**\n   * If there is no update then returns to card view.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressDiscard(controlName: string) {\n    if (this.originalAddress) {\n      this.address = { ...this.originalAddress };\n      this.viewChange.emit(ViewType.CARD);\n    } else {\n      this.onAddressDelete(controlName);\n    }\n  }\n  /**\n   * deletes the address and resets the form.\n   *\n   * @param {string} controlName name of a form control\n   */\n  onAddressDelete(controlName: string) {\n    this.originalAddress = undefined;\n    this.contactAddressAdd.emit(false);\n    this.reset(controlName);\n    this.viewChange.emit(ViewType.FORM);\n  }\n}\n","<div>\n  <fieldset [ngModelGroup]=\"'contactDetails'\">\n    <legend class=\"sr-only\" i18n=\"@@contact-personal-data.personalDetailsGroup.title\">Contact details</legend>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <label #contactNameLabel id=\"bb-create-contact-name-label\" i18n=\"@@contact-personal-data.contactName.label\"\n          >Name</label\n        >\n        <span class=\"bb-text-support\">\n          (<ng-container i18n=\"@@contact-account-data.accountName.text-support.required.label\">Required</ng-container>)\n        </span>\n        <bb-input-text-ui\n          name=\"name\"\n          class=\"bb-block bb-block--sm\"\n          #contactNameModel=\"ngModel\"\n          [(ngModel)]=\"hostRef.contact.name\"\n          [maxLength]=\"140\"\n          [required]=\"true\"\n          [aria-labelledby]=\"contactNameLabel.id\"\n          aria-describedby=\"fullname-description\"\n          data-role=\"contact-name\"\n          bbNoWhiteSpace\n        >\n        </bb-input-text-ui>\n        <small\n          id=\"fullname-description\"\n          *ngIf=\"!contactNameModel.touched\"\n          class=\"bb-text-support bb-block bb-block--sm\"\n          i18n=\"@@contact-personal-data.contactName.infoText\"\n        >\n          Full name or company name\n        </small>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"contactNameModel.invalid && contactNameModel.touched\"\n        >\n          <ng-container>\n            <span i18n=\"@@contact-personal-data.contactName.minLengthErrorText\" data-role=\"missing-contact-name\"\n              >Full name or company name is required</span\n            >\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg bb-stack__item--align-top col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Contact person\"\n          i18n-label=\"@@contact-personal-data.contactPerson.label\"\n          class=\"bb-stack__item--align-bottom\"\n          data-role=\"contact-person\"\n          [(ngModel)]=\"hostRef.contact.contactPerson\"\n          name=\"contactPerson\"\n          [maxLength]=\"70\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          data-role=\"contact-alias\"\n          label=\"Alias\"\n          i18n-label=\"@@contact-personal-data.contactAlias.label\"\n          [(ngModel)]=\"hostRef.contact.alias\"\n          name=\"alias\"\n          [maxLength]=\"70\"\n        >\n        </bb-input-text-ui>\n      </div>\n      <div class=\"bb-block bb-block--lg col-sm-6 col-xs-12\">\n        <bb-input-text-ui\n          label=\"Phone number\"\n          i18n-label=\"@@contact-personal-data.contactPhoneNumber.label\"\n          data-role=\"contact-phone-number\"\n          [(ngModel)]=\"hostRef.contact.phoneNumber\"\n          name=\"phoneNumber\"\n          [maxLength]=\"30\"\n        >\n        </bb-input-text-ui>\n      </div>\n    </div>\n    <div class=\"row bb-block bb-block--lg\">\n      <div class=\"bb-block bb-block--no-margin col-lg-8 col-sm-8 col-xs-12\">\n        <bb-input-email-ui\n          label=\"E-mail\"\n          i18n-label=\"@@contact-personal-data.contactEmail.label\"\n          data-role=\"contact-email\"\n          [(ngModel)]=\"hostRef.contact.emailId\"\n          #emailModel=\"ngModel\"\n          name=\"emailId\"\n          bbEmailDomainValidator\n        >\n        </bb-input-email-ui>\n        <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"emailModel.invalid && emailModel.touched\">\n          <ng-container *ngIf=\"emailModel.errors?.email\">\n            <span i18n=\"@@contact-personal-data.email.errorText\" data-role=\"invalid-email\">Invalid email</span>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"bb-block col-12\" data-role=\"contact-address-container\">\n        <bb-contact-address-data\n          [highlight]=\"false\"\n          [isAddAddress]=\"hostRef.isAddContactAddress\"\n          [viewType]=\"hostRef.viewType\"\n          [address]=\"hostRef.address\"\n          (add)=\"hostRef.onAddressAdd($event)\"\n          (edit)=\"hostRef.onAddressEdit()\"\n          (discard)=\"hostRef.onAddressDiscard($event)\"\n          (delete)=\"hostRef.onAddressDelete($event)\"\n          (submit)=\"hostRef.onAddressSubmit($event)\"\n        >\n        </bb-contact-address-data>\n      </div>\n    </div>\n  </fieldset>\n</div>\n","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Directive } from '@angular/core';\nimport type { ContactPersonalDataComponent } from './contact-personal-data.component';\n\n/**\n * This is an extension slot to be used for customizing contact personal data\n *\n * @usageNotes\n *\n * ### Display contact personal data\n *\n * ```html\n *  <ng-template bbContactPersonalDataCustomizable let-hostRef>\n * {{hostRef.contact.name}}</ng-template>\n * ```\n * @ngModule ContactPersonalDataModule\n */\n@Directive({\n  selector: '[bbContactPersonalDataCustomizable]',\n})\nexport class ContactPersonalDataCustomizableDirective extends BbTemplate<ContactPersonalDataComponent, undefined> {}\n","import { NgModule } from '@angular/core';\nimport { ContactPersonalDataComponent } from './contact-personal-data.component';\nimport { ContactPersonalDataCustomizableDirective } from './contact-personal-data.directive';\nimport { FormsModule } from '@angular/forms';\nimport { ContactAddressDataModule } from '../contact-address-data/contact-address-data.module';\nimport { CommonModule } from '@angular/common';\nimport { NoWhiteSpaceModule } from '../../directives/no-white-space-validator/no-white-space.module';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { InputEmailModule } from '@backbase/ui-ang/input-email';\nimport { EmailDomainModule } from '../../directives/email-domain/email-domain.module';\n\n/**\n * Exports:\n * - ContactPersonalDataComponent\n * - ContactPersonalDataCustomizableDirective\n */\n@NgModule({\n  declarations: [ContactPersonalDataComponent, ContactPersonalDataCustomizableDirective],\n  exports: [ContactPersonalDataComponent, ContactPersonalDataCustomizableDirective],\n  imports: [\n    FormsModule,\n    InputTextModule,\n    InputValidationMessageModule,\n    InputEmailModule,\n    ContactAddressDataModule,\n    CommonModule,\n    NoWhiteSpaceModule,\n    EmailDomainModule,\n  ],\n})\nexport class ContactPersonalDataModule {}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n/**\n * Search box component with debounce\n *\n * @example\n *\n * ```html\n *   <bb-debounce-search\n *     class=\"d-block\"\n *     [debounceTime]=\"debounceTime\"\n *     (searchContacts)=\"onSearch($event)\">\n *   </bb-debounce-search>\n * ```\n * @ngModule DebounceSearchModule\n */\n@Component({\n  selector: 'bb-debounce-search',\n  template: `\n    <bb-search-box-ui\n      [placeholder]=\"placeholder\"\n      [showSearch]=\"true\"\n      [showClear]=\"true\"\n      [aria-label]=\"ariaLabel\"\n      (submit)=\"startSearching($event)\"\n      (clear)=\"clearSearching()\"\n      [ngModel]=\"searchTerm\"\n      (ngModelChange)=\"startSearching($event)\"\n    ></bb-search-box-ui>\n  `,\n})\nexport class DebounceSearchComponent implements OnInit, OnDestroy {\n  private gc$ = new Subject();\n  private debounceSearch$ = new Subject<string>();\n  searchTerm = '';\n\n  /**\n   * Time delay between each search requests\n   */\n  @Input() debounceTime = 300;\n\n  /**\n   * Placeholder text for search input\n   */\n  @Input() placeholder = 'Search';\n\n  /**\n   * See html property `aria-label`\n   */\n  @Input('aria-label') ariaLabel?: string = undefined;\n\n  /**\n   * Changes will be triggered on search\n   */\n  @Output() searchContacts = new EventEmitter<string>();\n\n  ngOnInit() {\n    this.debounceSearch$\n      .pipe(takeUntil(this.gc$), debounceTime(this.debounceTime), distinctUntilChanged())\n      .subscribe((term: string) => {\n        this.searchContacts.emit(term);\n      });\n  }\n\n  /**\n   * Updates the search term.\n   *\n   * @param {string} query - search query text\n   */\n  startSearching(query: string) {\n    this.debounceSearch$.next(query);\n  }\n\n  /**\n   * Updating the search value when cleared.\n   */\n  clearSearching() {\n    this.debounceSearch$.next('');\n  }\n\n  /**\n   * OnDestroy\n   */\n  ngOnDestroy() {\n    this.gc$.next();\n    this.debounceSearch$.complete();\n    this.gc$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DebounceSearchComponent } from './debounce-search.component';\nimport { FormsModule } from '@angular/forms';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\n\n/**\n * Exports:\n * - DebounceSearchComponent\n */\n@NgModule({\n  declarations: [DebounceSearchComponent],\n  exports: [DebounceSearchComponent],\n  imports: [FormsModule, SearchBoxModule],\n})\nexport class DebounceSearchModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ApprovalRecord } from '../../models/types';\n\n/**\n * Component for approval log of a contact.\n *\n * @usageNotes\n *\n * ```html\n * <bb-approval-log\n *   [isPending]=\"hostRef.approvalDetails?.approvalDetails?.status === 'PENDING'\"\n *   [records]=\"hostRef.approvalDetails?.approvalDetails?.records\"\n * ></bb-approval-log>\n * ```\n * @ngModule ApprovalLogModule\n */\n@Component({\n  selector: 'bb-approval-log',\n  templateUrl: 'approval-log.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ApprovalLogComponent {\n  /**\n   * Approval log records of a contact.\n   */\n  @Input() records: ApprovalRecord[] = [];\n\n  /**\n   * Whether contact is currently pending approval\n   */\n  @Input() isPending = false;\n}\n","<bb-item-log-ui [records]=\"records\" [isPending]=\"isPending\">\n  <ng-template bbItemLogRecord let-itemLogRecord>\n    <div class=\"bb-stack bb-stack--align-top\">\n      <bb-icon-ui\n        class=\"bb-item-log-record__icon\"\n        size=\"md\"\n        [name]=\"itemLogRecord?.status === 'REJECTED' ? 'cancel' : 'success'\"\n        [color]=\"itemLogRecord?.status === 'REJECTED' ? 'danger' : 'success'\"\n      >\n      </bb-icon-ui>\n      <div class=\"bb-item-log-record__details\">\n        <span class=\"bb-text-bold\" i18n=\"@@contact-approval-log.status\">\n          { itemLogRecord?.status, select, REJECTED {Rejected} APPROVED {Approved} other {} }\n        </span>\n        <span class=\"text-small\">\n          <ng-container i18n=\"@@contact-approval-log.label\"> by {{ itemLogRecord.userFullName }}</ng-container>\n          <ng-container *ngIf=\"itemLogRecord?.externalUserId\"> ({{ itemLogRecord.externalUserId }})</ng-container>\n        </span>\n        <div *ngIf=\"itemLogRecord?.createdAt as createdAt\" class=\"bb-item-log-record__time\">\n          <time> {{ createdAt | date }}</time>\n          <ng-container i18n=\"@@contact-approval-log-created-at.label\"> at</ng-container>\n          <time> {{ createdAt | date: 'shortTime' }}</time>\n        </div>\n        <div *ngIf=\"itemLogRecord?.comment\" class=\"media\">\n          <div class=\"bb-inline-stack__item\">\n            <bb-icon-ui color=\"secondary\" name=\"forum\" size=\"sm\"></bb-icon-ui>\n          </div>\n          <div class=\"media-body break-word text-small\">{{ itemLogRecord?.comment }}</div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</bb-item-log-ui>\n","import { Component, Input } from '@angular/core';\nimport { ApprovalRecord } from '../../models/types';\n\n/**\n * Component for a collapsible section with an approval log of a contact.\n *\n * @usageNotes\n *\n * ```html\n * <bb-approval-log-collapsible\n *   [isPending]=\"hostRef.approvalDetails?.approvalDetails?.status === 'PENDING'\"\n *   [records]=\"hostRef.approvalDetails?.approvalDetails?.records\"\n * ></bb-approval-log-collapsible>\n * ```\n * @ngModule ApprovalLogModule\n */\n@Component({\n  selector: 'bb-approval-log-collapsible',\n  template: `\n    <bb-collapsible-ui [attr.data-role]=\"'approval-log-toggle'\">\n      <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n        <div class=\"bb-block bb-stack\">\n          <div class=\"bb-stack__item bb-stack__item--fill\">\n            <h3 i18n=\"@@contact-manager-pending-approvals-details.approvalLog\">Approval log</h3>\n          </div>\n          <div class=\"bb-stack__item bb-stack__item--push-right\">\n            <button\n              (click)=\"toggle()\"\n              bbButton\n              color=\"outline\"\n              aria-label=\"Approval log toggle\"\n              i18n-aria-label=\"@@bb-approval-log.toggle.label\"\n              data-role=\"approval-log-toggle-button\"\n              bbTooltip=\"Toggle\"\n              triggers=\"hover focus\"\n              i18n-bbTooltip=\"@@contact-manager-pending-approvals-details.approval-log-toggle.tooltip\"\n            >\n              <bb-icon-ui [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"></bb-icon-ui>\n            </button>\n          </div>\n        </div>\n        <hr />\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <div aria-live=\"assertive\">\n          <bb-approval-log [isPending]=\"isPending\" [records]=\"records\"> </bb-approval-log>\n        </div>\n      </ng-template>\n    </bb-collapsible-ui>\n  `,\n})\nexport class ApprovalLogCollapsibleComponent {\n  /**\n   * Approval log records of a contact.\n   */\n  @Input() records?: ApprovalRecord[] = [];\n\n  /**\n   * Whether contact is currently pending approval\n   */\n  @Input() isPending = false;\n}\n","import { NgModule } from '@angular/core';\nimport { ApprovalLogComponent } from './approval-log.component';\nimport { CommonModule } from '@angular/common';\nimport { ItemLogModule } from '@backbase/ui-ang/item-log';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ApprovalLogCollapsibleComponent } from './approval-log-collapsible.component';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\n\n/**\n * Exports:\n * - ApprovalLogComponent\n * - ApprovalLogCollapsibleComponent\n */\n@NgModule({\n  declarations: [ApprovalLogComponent, ApprovalLogCollapsibleComponent],\n  imports: [ItemLogModule, IconModule, CommonModule, CollapsibleModule],\n  exports: [ApprovalLogComponent, ApprovalLogCollapsibleComponent],\n})\nexport class ApprovalLogModule {}\n","import { SortEvent, SortDirection } from '@backbase/ui-ang/table';\nimport { Directive, EventEmitter, Output } from '@angular/core';\nimport { ApprovalSort } from '@backbase/data-ang/contact-manager';\n\n/**\n * Abstract Base Request List Component\n *\n */\n@Directive()\nexport abstract class RequestListBaseComponent {\n  /**\n   * Direction of current sorting\n   */\n  sortDirection: SortDirection = 'asc';\n\n  /**\n   * Selected sorting column\n   */\n  sortColumn?: string;\n\n  /**\n   * Enum with names of sorting columns\n   */\n  readonly approvalSortEnum = ApprovalSort;\n\n  /**\n   * Event emitted when column is clicked\n   */\n  @Output()\n  sort = new EventEmitter<SortEvent>();\n\n  /**\n   * Sort column method\n   *\n   * @param {string} event - object with column and direction properites\n   */\n  onSort(event: SortEvent) {\n    this.sortColumn = event.direction ? event.column : null;\n    this.sortDirection = event.direction || 'desc';\n    this.sort.emit(event);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'getAriaSort',\n})\nexport class AriaSortPipe implements PipeTransform {\n  transform(value: string, sortColumn: string, sortDirection: string): string | null {\n    const selectedDirection = sortDirection && sortDirection === 'desc' ? 'descending' : 'ascending';\n\n    return sortColumn === value.toUpperCase() ? selectedDirection : null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AriaSortPipe } from './aria-sort.pipe';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [AriaSortPipe],\n  imports: [CommonModule],\n  exports: [AriaSortPipe],\n})\nexport class AriaSortPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'getDirection',\n})\nexport class DirectionSortPipe implements PipeTransform {\n  transform(value: string, sortColumn: string, sortDirection: string): string {\n    return sortColumn === value.toUpperCase() ? sortDirection : '';\n  }\n}\n","import { DirectionSortPipe } from './direction-sort.pipe';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [DirectionSortPipe],\n  imports: [CommonModule],\n  exports: [DirectionSortPipe],\n})\nexport class DirectionSortPipeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["DefaultCountriesList"],"mappings":"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"}