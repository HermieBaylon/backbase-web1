// Global annotations
////
/// @group forms
/// @access private
////

$input-checkbox-checkbox-dimensions: 1.5rem !default;
$input-checkbox-label-left-margin: $spacer-sm !default;
$input-checkbox-checkbox-border-radius: $border-radius-xs !default;
$input-checkbox-bg: $input-bg !default;
$input-checkbox-border-color: $color-neutral-greyer !default;
$input-checkbox-checked-bg: $color-info !default;
$input-checkbox-checked-border-color: $color-info !default;
$input-checkbox-checked-color: $color-neutral-white !default;
$input-checkbox-checkbox-font-size: 1.3rem !default;

.bb-input-checkbox {
  margin-bottom: 0;
  font-weight: inherit; // reset <label> font-weight
  cursor: pointer;
}

.bb-input-checkbox__input {
  position: absolute;
  opacity: 0; // hide <input type="checkbox">

  &:checked,
  &:indeterminate {
    + .bb-input-checkbox__content {
      &::before {
        background-color: $input-checkbox-checked-bg;
        border-color: $input-checkbox-checked-border-color;
      }

      &::after {
        @include material-icons();
        color: $input-checkbox-checked-color;
        font-weight: bold;
        font-size: $input-checkbox-checkbox-font-size;
        line-height: $input-checkbox-checkbox-dimensions;
        // Pixel value line-height fallback for IE11
        @include ms-browsers-only {
          line-height: ($input-checkbox-checkbox-dimensions / 1rem) * $font-size-fallback;
        }
        text-align: center;
      }
    }
  }

  &:checked {
    + .bb-input-checkbox__content {
      &::after {
        content: "check";
      }
    }
  }

  &:indeterminate {
    + .bb-input-checkbox__content {
      &::after {
        content: "remove";
      }
    }
  }

  &:disabled {
    + .bb-input-checkbox__content {
      cursor: not-allowed;

      &::before {
        background-color: $color-neutral-light;
        border-color: $input-checkbox-border-color;
        cursor: not-allowed;
      }

      &::after {
        color: $color-neutral-greyest;
        cursor: not-allowed;
      }
    }
  }

  //TODO: Remove box-shadow when removing $experimental-enable-focus flag below
  &:focus {
    + .bb-input-checkbox__content {
      &::before {
        box-shadow: $input-btn-focus-box-shadow;
      }
    }
  }
  //@deprecated Deprecated as part of the 2022.02 Release:
  //This feature is by default set to true which mean as standard the theme uses the new improved more visible focus for accessibility but can be set to false to revert to the previous less accessible version.
  //This flag will be removed in future major release 2022.09, post which this flag will not be available any more to disable this feature.
  @if $experimental-enable-focus {
    &:focus {
      + .bb-input-checkbox__content {
        &::before {
          box-shadow: $input-box-shadow;
        }
        &::after {
          position: absolute;
          top: calc(50% - 0.99rem);
          right: $input-focus-outline-distance;
          bottom: $input-focus-outline-distance;
          left: $input-focus-outline-distance;
          z-index: $zindex-dropdown;
          width: $input-checkbox-checkbox-dimensions + 0.5rem;
          height: $input-checkbox-checkbox-dimensions + 0.5rem;
          border: $input-focus-border-primary;
          border-radius: $input-checkbox-checkbox-border-radius;
        }
      }
    }
  }
}

.bb-input-checkbox__content {
  position: relative;
  display: inline-flex;
  padding-left: calc(#{$input-checkbox-checkbox-dimensions} + #{$input-checkbox-label-left-margin});

  &::before {
    background-color: $input-checkbox-bg;
    border: $input-border-width solid $input-checkbox-border-color;
    border-radius: $input-checkbox-checkbox-border-radius;
    cursor: pointer;
  }

  &::before,
  &::after {
    position: absolute;
    top: calc(50% - #{$input-checkbox-checkbox-dimensions / 2});
    left: 0;
    width: $input-checkbox-checkbox-dimensions;
    height: $input-checkbox-checkbox-dimensions;
    content: "";
  }
}

.bb-input-checkbox__label {
  margin-bottom: 0;
  cursor: pointer;
}

bb-input-checkbox-ui {
  &.ng-invalid.ng-touched {
    .bb-input-checkbox__content {
      &::before {
        border-color: $input-invalid-border-color;
      }
    }
  }
}
