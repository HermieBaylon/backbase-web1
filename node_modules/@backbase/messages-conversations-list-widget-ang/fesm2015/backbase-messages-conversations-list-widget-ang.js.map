{"version":3,"file":"backbase-messages-conversations-list-widget-ang.js","sources":["../../../../libs/messages-conversations-list-widget-ang/src/model/conversations.ts","../../../../libs/messages-conversations-list-widget-ang/src/messages-conversations-list-widget-ang.service.ts","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table-head/conversations-list-table-head.component.ts","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table-head/conversations-list-table-head.component.html","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table-row/conversations-list-table-row.component.ts","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table-row/conversations-list-table-row.component.html","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table/conversations-list-table.component.ts","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table/conversations-list-table.component.html","../../../../libs/messages-conversations-list-widget-ang/src/messages-conversations-list-widget-ang.component.ts","../../../../libs/messages-conversations-list-widget-ang/src/messages-conversations-list-widget-ang.component.html","../../../../libs/messages-conversations-list-widget-ang/src/messages-conversations-list-widget-ang.module.ts","../../../../libs/messages-conversations-list-widget-ang/backbase-messages-conversations-list-widget-ang.ts"],"sourcesContent":["import { ConversationThread, MessageDraftsGetResponseBody } from '@backbase/messages-v5-http-ang';\n\nexport interface ConvertedData<T> {\n  data: T;\n  totalCount: number;\n}\n\nexport type ConversationsData = ConvertedData<ConversationThread[]>;\nexport type DraftsData = ConvertedData<MessageDraftsGetResponseBody[]>;\n\nexport interface ConversationsDataExpanded extends ConversationsData {\n  params: ConversationsGetReqParams;\n}\n\nexport interface FromParam {\n  from: number;\n}\n\nexport interface DraftsReqParams extends FromParam {\n  size: number;\n}\n\nexport interface ConversationsGetReqParams extends FromParam {\n  size: number;\n  mailboxType?: string;\n  orderBy?: string;\n  direction?: string;\n}\n\nexport interface ConversationsReadRequest {\n  status: ReadUnreadStatusType;\n  ids: string[];\n  additions?: {\n    [key: string]: any;\n  };\n}\n\nexport enum ReadUnreadStatusType {\n  READ = 'READ',\n  UNREAD = 'UNREAD',\n}\n\nexport enum MailboxTypeEnum {\n  inbox = 'inbox',\n  outbox = 'outbox',\n  drafts = 'drafts',\n}\n\nexport interface MessagesConversationsListWidgetContext {\n  conversations: ConversationsDataExpanded;\n  mailboxType: string;\n  itemsPerPage: number;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { SharedMethodsService } from '@backbase/messages-common';\nimport {\n  GetConversationThreadsRequestParams,\n  GetMessageDraftsRequestParams,\n  MessagecenterHttpService,\n  ConversationThread,\n  ConversationThreadsDeleteResponseBody,\n  DeleteDraftsResponseBody,\n  MarkAsReadUnreadPutRequestBody,\n  MarkAsReadUnreadPutResponseBody,\n  MessageDraftsGetResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { ConversationsData, DraftsData } from './model';\n\nconst DefaultConversationsGetReqParams: GetConversationThreadsRequestParams = {\n  direction: 'DESC',\n  from: 0,\n  size: 10,\n  mailboxType: '',\n};\nconst bbEventUnreadConversationCountUpdate = 'bb.event.unread-conversation-count.update';\n\n@Injectable()\nexport class MessagesConversationsListWidgetService {\n  constructor(\n    private readonly messagesService: MessagecenterHttpService,\n    private readonly sharedMethodsService: SharedMethodsService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {}\n\n  deleteConversations(ids: string[]): Observable<ConversationThreadsDeleteResponseBody | null> {\n    return this.messagesService\n      .deleteConversationThreads({ ids })\n      .pipe(tap(() => this.pubSub.publish(bbEventUnreadConversationCountUpdate, undefined)));\n  }\n\n  deleteDrafts(ids: string[]): Observable<DeleteDraftsResponseBody | null> {\n    return this.messagesService.deleteMessageDrafts({ ids });\n  }\n\n  getConversations(\n    params: GetConversationThreadsRequestParams = DefaultConversationsGetReqParams,\n  ): Observable<ConversationsData> {\n    return this.messagesService\n      .getConversationThreads(params, 'response')\n      .pipe(\n        map((response: HttpResponse<ConversationThread[]>) =>\n          this.sharedMethodsService.processData<ConversationThread[]>(response),\n        ),\n      );\n  }\n\n  getDrafts({ from, size }: GetMessageDraftsRequestParams): Observable<DraftsData> {\n    return this.messagesService\n      .getMessageDrafts({ from, size }, 'response')\n      .pipe(\n        map((response: HttpResponse<MessageDraftsGetResponseBody[]>) =>\n          this.sharedMethodsService.processData<MessageDraftsGetResponseBody[]>(response),\n        ),\n      );\n  }\n\n  markConversationsAsReadUnread(\n    params: MarkAsReadUnreadPutRequestBody,\n  ): Observable<MarkAsReadUnreadPutResponseBody | null> {\n    return this.messagesService\n      .putMarkAsReadUnread({ markAsReadUnreadPutRequestBody: params })\n      .pipe(tap(() => this.pubSub.publish(bbEventUnreadConversationCountUpdate, undefined)));\n  }\n}\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { MailboxTypeEnum } from '../../model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { BaseConversationsListPropertiesService, getPropertyValue } from '@backbase/messages-common';\n\n@Component({\n  /* eslint-disable */\n  selector: 'tr[bb-conversations-list-table-head-ui]',\n  /* eslint-enable */\n  templateUrl: './conversations-list-table-head.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n  providers: [BaseConversationsListPropertiesService],\n})\nexport class ConversationsListTableHeadComponent {\n  /**\n   * The stream with the mailbox type.\n   */\n  @Input('mailboxType') set mailboxTypeValue(value: string) {\n    this.mailboxType$$.next(value);\n  }\n\n  readonly hostRef = this;\n\n  private readonly mailboxType$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  /**\n   * The mailbox type enum (`inbox`, `outbox`, `drafts`).\n   */\n  readonly mailboxTypeEnum = MailboxTypeEnum;\n\n  constructor(private readonly properties: BaseConversationsListPropertiesService) {}\n\n  get mailboxType(): Observable<string> {\n    return getPropertyValue(this.mailboxType$$.asObservable(), this.properties.mailboxType);\n  }\n}\n\n@Directive({\n  selector: '[bbConversationsListTableHeadCustomizable]',\n})\nexport class ConversationsListTableHeadCustomizableDirective extends BbTemplate<\n  ConversationsListTableHeadComponent,\n  undefined\n> {}\n","<ng-container\n  bbConversationsListTableHeadCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    mailboxType: mailboxType | async\n  }\"\n></ng-container>\n\n<ng-template bbConversationsListTableHeadCustomizable let-host let-mailboxType=\"context.mailboxType\">\n  <th scope=\"col\" data-role=\"checkbox-column\">\n    <bb-checkbox-group-ui\n      aria-label=\"Select all conversations\"\n      i18n-aria-label=\"\n        Select all conversations@@messages.messagesConversationsList.messagesTable.checkboxGroupAriaLabel\"\n      ngModelGroup=\"ids\"\n    ></bb-checkbox-group-ui>\n  </th>\n  <th scope=\"col\" data-role=\"importance-column\"></th>\n  <th\n    data-role=\"from-column\"\n    scope=\"col\"\n    i18n=\"\n      From|The name of the table head cell called 'From'@@messages.messagesConversationsList.messagesTable.headerFrom\"\n    *ngIf=\"mailboxType !== host.mailboxTypeEnum.drafts\"\n  >\n    From\n  </th>\n  <th scope=\"col\" data-role=\"attachments-column\"></th>\n  <th\n    data-role=\"subject-column\"\n    scope=\"col\"\n    i18n=\"\n      Subject|The name of the table head cell called\n      'Subject'@@messages.messagesConversationsList.messagesTable.headerSubject\"\n  >\n    Subject\n  </th>\n  <th\n    data-role=\"topic-column\"\n    scope=\"col\"\n    i18n=\"\n      Topic|The name of the table head cell called 'Topic'@@messages.messagesConversationsList.messagesTable.headerTopic\"\n  >\n    Topic\n  </th>\n  <th\n    data-role=\"date-column\"\n    scope=\"col\"\n    i18n=\"\n      Date|The name of the table head cell called 'Date'@@messages.messagesConversationsList.messagesTable.headerDate\"\n  >\n    Date\n  </th>\n  <th data-role=\"dropdown-menu-column\" scope=\"col\"></th>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlContainer, NgModelGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { MailboxTypeEnum } from '../../model';\nimport { ConversationThread, MessageDraftsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { BaseConversationsListPropertiesService } from '@backbase/messages-common';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'tr[bb-conversations-list-table-row-ui]',\n  templateUrl: './conversations-list-table-row.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }],\n  providers: [BaseConversationsListPropertiesService],\n})\nexport class ConversationsListTableRowComponent {\n  /**\n   * Conversation object\n   */\n  @Input() conversation: ConversationThread | MessageDraftsGetResponseBody | undefined;\n\n  /**\n   * Identifier if it is draft view\n   */\n  @Input() isDraftView = false;\n\n  /**\n   * Stream with the customer service title.\n   */\n  @Input() customerServiceTitle$!: Observable<string | undefined>;\n\n  /**\n   * Stream with the mailbox type.\n   */\n  @Input() mailboxType: string | undefined;\n\n  /**\n   * Event emitted when this conversation should be marked as read/unread\n   */\n  @Output() read = new EventEmitter();\n\n  /**\n   * Event emitted when this conversation should be removed\n   */\n  @Output() remove = new EventEmitter();\n\n  readonly hostRef = this;\n\n  /**\n   * The mailbox type enum (inbox, outbox, drafts).\n   */\n  readonly mailboxTypeEnum = MailboxTypeEnum;\n\n  /**\n   * The method to toggle the read or unread conversation state.\n   */\n  toggleRead() {\n    this.read.emit();\n  }\n\n  /**\n   * The method to remove a conversation.\n   */\n  emitRemove() {\n    this.remove.emit();\n  }\n}\n\n@Directive({\n  selector: '[bbConversationsListTableRowCustomizable]',\n})\nexport class ConversationsListTableRowCustomizableDirective extends BbTemplate<\n  ConversationsListTableRowComponent,\n  undefined\n> {}\n","<ng-container\n  bbConversationsListTableRowCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    customerServiceTitle: customerServiceTitle$ | async\n  }\"\n></ng-container>\n\n<ng-template bbConversationsListTableRowCustomizable let-host let-customerServiceTitle=\"context.customerServiceTitle\">\n  <td (click)=\"$event.stopPropagation()\" data-role=\"checkbox-cell\">\n    <bb-input-checkbox-ui\n      aria-label=\"Checkbox to select conversation\"\n      i18n-aria-label=\"\n        Checkbox to select conversation@@messages.messagesConversationsList.messagesTable.selectConversationCheckbox\"\n      ngModel\n      [name]=\"host.conversation.id\"\n    ></bb-input-checkbox-ui>\n    <span\n      class=\"sr-only\"\n      i18n=\"Conversation details@@messages.messagesConversationsList.messagesTable.conversation-details\"\n    >\n      Click to open conversation thread, conversation details:\n    </span>\n  </td>\n  <td data-role=\"important-cell\">\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        class=\"bb-stack__item--push-right\"\n        bbTooltip=\"High priority\"\n        i18n-bbTooltip=\"High priority@@messages.messagesConversationsList.messagesTable.highPriorityMessage\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n        *ngIf=\"host.conversation.important\"\n        name=\"error\"\n        color=\"danger\"\n        aria-label=\"High priority\"\n        i18n-aria-label=\"@@messages.messagesConversationsList.messagesTable.highPriorityMessage\"\n      ></bb-icon-ui>\n    </div>\n  </td>\n  <td *ngIf=\"!host.isDraftView\" data-role=\"from-cell\">\n    <span class=\"sr-only\" i18n=\"Messages from@@messages.messagesConversationsList.messagesTable.messagesFrom\"\n      >,From</span\n    >\n    <ng-container [ngSwitch]=\"host.conversation.sender?.id\">\n      <span *ngSwitchCase=\"'customer.service'\">{{ customerServiceTitle }}</span>\n      <span *ngSwitchDefault>{{ host.conversation.sender?.name }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"host.conversation.hasDraft\">\n      <span *ngIf=\"host.conversation.sender?.id\">, </span>\n      <span\n        aria-hidden=\"true\"\n        class=\"text-danger\"\n        i18n=\"Draft@@messages.messagesConversationsList.messagesTable.draftText\"\n        >Draft</span\n      >\n      <span class=\"sr-only\" i18n=\"Contains draft@@messages.messagesConversationsList.messagesTable.containsDraft\"\n        >Contains draft</span\n      >\n    </ng-container>\n  </td>\n  <td data-role=\"has-attachments-cell\">\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        *ngIf=\"host.conversation.hasAttachments\"\n        bbTooltip=\"Contains attachments\"\n        container=\"body\"\n        i18n-bbTooltip=\"\n          Contains attachments|Contains file\n          attachments@@messages.messagesConversationsList.messagesTable.containsFileAttachments\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n        class=\"bb-stack__item--push-right bb-text-support\"\n        name=\"attachment\"\n        aria-label=\"Contains attachments,\"\n        i18n-aria-label=\"@@messages.messagesConversationsList.messagesTable.containsFileAttachments\"\n      ></bb-icon-ui>\n    </div>\n  </td>\n  <td>\n    <ng-container *ngIf=\"host.conversation.subject; else noSubject\">\n      <span class=\"sr-only\" i18n=\"Subject@@messages.messagesConversationsList.messagesTable.subject\">,Subject</span>\n      <span class=\"break-word\" [innerHTML]=\"host.conversation.subject\"></span>\n    </ng-container>\n  </td>\n  <td data-role=\"topic-cell\">\n    <span class=\"sr-only\" i18n=\"Topic@@messages.messagesConversationsList.messagesTable.topic\">,Topic</span>\n    <div class=\"bb-stack\" *ngIf=\"host.conversation.topic && host.conversation.topic.name; else noTopic\">\n      <bb-badge-ui\n        class=\"bb-stack__item\"\n        [text]=\"host.conversation.topic?.name\"\n        [color]=\"host.conversation.topic?.deleted ? 'secondary' : 'primary'\"\n      ></bb-badge-ui>\n      <bb-icon-ui\n        *ngIf=\"host.conversation.topic?.deleted\"\n        name=\"warning\"\n        color=\"warning\"\n        i18n-bbTooltip=\"\n          This topic no longer exists. Contact support for\n          details.@@messages.messagesConversationsList.messagesTable.deletedTopic\"\n        bbTooltip=\"This topic no longer exists. Contact support for details\"\n        aria-label=\"This topic no longer exists. Contact support for details,\"\n        i18n-aria-label=\"@@messages.messagesConversationsList.messagesTable.deletedTopic\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      ></bb-icon-ui>\n    </div>\n  </td>\n  <td data-role=\"date-cell\">\n    <span class=\"sr-only\" i18n=\"Date@@messages.messagesConversationsList.messagesTable.date\">,Date</span>\n    <span aria-hidden=\"true\">{{ host.conversation.timestamp | date: 'shortDate' }}</span>\n    <span class=\"sr-only\">{{ host.conversation.timestamp | date: 'mediumDate' }}</span>\n  </td>\n  <td data-role=\"dropdown-cell\" tabindex=\"-1\">\n    <span\n      class=\"sr-only\"\n      i18n=\"Dropdown menu|Dropdown menu button tooltip@@messages.messagesConversationsList.messagesTable.dropdownMenu\"\n      >Dropdown menu</span\n    >\n    <span\n      bbTooltip=\"Dropdown menu\"\n      container=\"body\"\n      tabindex=\"-1\"\n      i18n-bbTooltip=\"@@messages.messagesConversationsList.messagesTable.dropdownMenu\"\n      triggers=\"hover focus\"\n      class=\"bb-d-inline-block\"\n      placement=\"top right\"\n    >\n      <bb-dropdown-menu-ui\n        icon=\"ellipsis-h\"\n        btnColor=\"link\"\n        iconColor=\"dark\"\n        tabindex=\"-1\"\n        buttonSize=\"sm\"\n        iconSize=\"md\"\n        btnCircle=\"true\"\n        [btnCircle]=\"true\"\n        [dropDownButtonLabel]=\"'Dropdown menu for ' + host.conversation.subject\"\n        i18n-dropDownButtonLabel=\"\n          Dropdown menu aria-label@@messages.messagesConversationsList.messagesTable.dropdownMenuAriaLabel\"\n      >\n        <ng-template bbDropdownMenuItem>\n          <a\n            role=\"menuitem\"\n            data-role=\"mark-as-read-unread\"\n            class=\"dropdown-item\"\n            *ngIf=\"!host.isDraftView\"\n            (bbKeyboardClick)=\"host.toggleRead()\"\n          >\n            <ng-container\n              i18n=\"\n                Mark as Read or Unread|Item text in dropdown\n                menu@@messages.messagesConversationsList.messagesTable.markAsReadDropdownItem\"\n            >\n              {host.conversation.read + '', select, true {Mark as unread} false {Mark as read}}\n            </ng-container>\n          </a>\n          <a\n            role=\"menuitem\"\n            data-role=\"delete\"\n            class=\"dropdown-item\"\n            *ngIf=\"host.conversation.deletable || host.isDraftView\"\n            (bbKeyboardClick)=\"host.emitRemove(host.conversation.id)\"\n          >\n            <ng-container\n              i18n=\"\n                Delete|Item text in dropdown menu@@messages.messagesConversationsList.messagesTable.deleteDropdownItem\"\n              >Delete</ng-container\n            >\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </span>\n  </td>\n\n  <ng-template #noSubject>\n    <span class=\"bb-text-support\" i18n=\"No subject@@messages.messagesConversationsList.messagesTable.subjectEmptyState\"\n      >No subject</span\n    >\n  </ng-template>\n\n  <ng-template #noTopic>\n    <span class=\"bb-text-support\" i18n=\"No subject@@messages.messagesConversationsList.messagesTable.topicEmptyState\"\n      >No topic</span\n    >\n  </ng-template>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { map, take, takeUntil } from 'rxjs/operators';\nimport { BbTemplate, TemplateRegistry } from '@backbase/foundation-ang/core';\nimport { ConversationThread, MessageDraftsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { MailboxTypeEnum, ReadUnreadStatusType } from '../../model';\nimport { BaseConversationsListPropertiesService, getPropertyValue } from '@backbase/messages-common';\n\n@Component({\n  selector: 'bb-conversations-list-table-ui',\n  providers: [TemplateRegistry, BaseConversationsListPropertiesService],\n  templateUrl: './conversations-list-table.component.html',\n})\nexport class ConversationsListTableComponent implements OnInit, OnDestroy {\n  static counter = 0;\n\n  /**\n   * Array of the conversations\n   */\n  @Input()\n  set conversations(value: ConversationThread[]) {\n    this._conversations = value;\n    this.manageSelectionForm(this.selectionsGroupForm);\n  }\n\n  /**\n   * The conversations getter.\n   */\n  get conversations() {\n    return this._conversations;\n  }\n\n  /**\n   * Input stream of reset signals that will trigger selection reset\n   */\n  @Input() reset: Observable<undefined> | undefined;\n\n  /**\n   * The stream with the mailbox type.\n   */\n  @Input('mailboxType') set mailboxTypeValue(value: string) {\n    this.mailboxType$$.next(value);\n  }\n\n  /**\n   * The stream with the customer service title.\n   */\n  @Input() customerServiceTitle$!: Observable<string | undefined>;\n\n  /**\n   * Emits conversation object on select event\n   */\n  @Output() select = new EventEmitter<ConversationThread | MessageDraftsGetResponseBody>();\n\n  /**\n   * Emits id of the conversation that should be marked as read/unread\n   */\n  @Output() read = new EventEmitter();\n\n  /**\n   * Emits id of the conversation that should be removed\n   */\n  @Output() remove = new EventEmitter();\n\n  /**\n   * EventEmitter to update list of the conversations\n   */\n  @Output() update = new EventEmitter();\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `conversations-list-table-component-${ConversationsListTableComponent.counter++}`;\n  readonly hostRef = this;\n\n  private _conversations: ConversationThread[] = [];\n  private readonly readUnreadStatusTypeDefault: ReadUnreadStatusType = ReadUnreadStatusType.READ;\n  private readUnreadStatus = this.readUnreadStatusTypeDefault;\n  private removeId: string | undefined;\n  private selectionsGroupForm: NgForm | undefined;\n  private readonly unsubscribe = new Subject();\n\n  /**\n   * The flag that toggles between the open and closed state of the confirmation modal for conversation removal.\n   */\n  removeModalOpened = false;\n\n  /**\n   * The array containing the IDs of selected conversations.\n   */\n  selectedIdsArray: string[] = [];\n\n  /**\n   * The stream with the flag toggling between the draft and the conversation view.\n   */\n  isDraftView$ = of(false);\n\n  private readonly mailboxType$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  constructor(private readonly properties: BaseConversationsListPropertiesService) {}\n\n  private doesParentContainDropdown(node: any): boolean {\n    return !!(node.parentNode && node.parentNode.closest('.dropdown'));\n  }\n\n  ngOnInit() {\n    if (this.reset) {\n      this.reset.pipe(takeUntil(this.unsubscribe)).subscribe(() => this.resetForm());\n    }\n    this.isDraftView$ = this.mailboxType.pipe(\n      take(1),\n      map(type => type === MailboxTypeEnum.drafts),\n    );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * The flag indicating if the conversation is unread.\n   */\n  get isUnread() {\n    return this.readUnreadStatus === ReadUnreadStatusType.UNREAD;\n  }\n\n  /**\n   * The method to update the list of conversations.\n   */\n  callUpdate() {\n    this.resetForm();\n    this.update.emit();\n  }\n\n  /**\n   * The method to mark a conversation as selected.\n   *\n   * @param event Mouse event\n   * @param conversation Conversation thread data\n   */\n  callSelect(event: MouseEvent, conversation: ConversationThread) {\n    if (this.doesParentContainDropdown(event.target)) {\n      return;\n    }\n    this.select.emit(conversation);\n  }\n\n  /**\n   * The method to mark a conversation as read or unread.\n   *\n   * @param conversationId Conversation id\n   * @param conversationStatus Conversation status\n   */\n  markAsReadUnread(conversationId?: string, conversationStatus?: boolean) {\n    const status: ReadUnreadStatusType =\n      conversationStatus === undefined\n        ? this.readUnreadStatus\n        : conversationStatus\n        ? ReadUnreadStatusType.UNREAD\n        : ReadUnreadStatusType.READ;\n\n    this.read.emit({\n      status,\n      ids: conversationId ? [conversationId] : this.selectedIdsArray,\n    });\n  }\n\n  /**\n   * The method to open the confirmation modal for removal.\n   *\n   * @param id Conversation id\n   */\n  openRemoveModal(id?: string) {\n    this.removeId = id;\n    this.removeModalOpened = true;\n  }\n\n  /**\n   * The method to close the confirmation modal for removal.\n   */\n  closeRemoveModal() {\n    this.removeId = undefined;\n    this.removeModalOpened = false;\n  }\n\n  /**\n   * The method to confirm the remove action and close the modal.\n   */\n  confirmRemoveModal() {\n    this.remove.emit(this.removeId ? [this.removeId] : this.selectedIdsArray);\n\n    this.closeRemoveModal();\n  }\n\n  /**\n   * The method to update the selected conversations form.\n   *\n   * @param ngForm Form object\n   */\n  manageSelectionForm(ngForm?: NgForm) {\n    if (ngForm) {\n      const ids = ngForm.form.value.ids;\n\n      this.selectionsGroupForm = ngForm;\n      this.selectedIdsArray = Object.keys(ids).filter(id => ids[id]);\n\n      if (this.selectedIdsArray.length) {\n        const selectedIdsIncludesUnreadConversation = this.conversations.find(\n          conversation => this.selectedIdsArray.includes(conversation.id) && !conversation.read,\n        );\n\n        this.readUnreadStatus = selectedIdsIncludesUnreadConversation\n          ? ReadUnreadStatusType.READ\n          : ReadUnreadStatusType.UNREAD;\n      } else {\n        this.readUnreadStatus = ReadUnreadStatusType.READ;\n      }\n    }\n  }\n\n  /**\n   * The method to differentiate conversations by IDs in order to optimize loops performance.\n   *\n   * @param _index Index\n   * @param item Conversation thread\n   * @returns Conversation thread id\n   */\n  trackByFn(_index: number, item: ConversationThread): string {\n    return item.id;\n  }\n\n  private resetForm() {\n    if (this.selectionsGroupForm) {\n      this.selectionsGroupForm.reset();\n      this.manageSelectionForm(this.selectionsGroupForm);\n    }\n  }\n\n  get mailboxType(): Observable<string> {\n    return getPropertyValue(this.mailboxType$$.asObservable(), this.properties.mailboxType);\n  }\n}\n\n@Directive({\n  selector: '[bbConversationsListTableCustomizable]',\n})\nexport class ConversationsListTableCustomizableDirective extends BbTemplate<\n  ConversationsListTableComponent,\n  { isDraftView: boolean }\n> {}\n","<ng-container\n  bbConversationsListTableCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    isDraftView: isDraftView$ | async,\n    mailboxType: mailboxType | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbConversationsListTableCustomizable\n  let-host\n  let-isDraftView=\"context.isDraftView\"\n  let-mailboxType=\"context.mailboxType\"\n>\n  <div\n    class=\"sr-only\"\n    i18n=\"Mailbox tab of selected type is open announcement@@messages.messagesConversationsList.openTabType\"\n  >\n    { mailboxType, select, inbox {inbox} outbox {outbox} drafts {drafts} } tab is open,\n  </div>\n  <div class=\"d-md-none\">\n    <div class=\"bb-button-bar\">\n      <ng-container *ngTemplateOutlet=\"reloadBtn\"></ng-container>\n    </div>\n    <table class=\"table\" role=\"presentation\">\n      <tbody role=\"list\">\n        <tr\n          role=\"listitem\"\n          tabindex=\"0\"\n          data-role=\"conversation-mobile\"\n          *ngFor=\"let conversation of host.conversations\"\n          [ngClass]=\"{ 'table-active': !conversation.read }\"\n          (bbKeyboardClick)=\"host.callSelect($event, conversation)\"\n        >\n          <td>\n            <div\n              class=\"text-truncate text-normal bb-text-semi-bold break-word\"\n              *ngIf=\"conversation.subject; else noSubject\"\n              [innerHTML]=\"conversation.subject\"\n            ></div>\n            <div class=\"text-truncate text-small\" *ngIf=\"conversation.sender\">{{ conversation.sender.name }}</div>\n\n            <ng-template #noSubject>\n              <span\n                class=\"bb-text-support\"\n                i18n=\"No subject@@messages.messagesConversationsList.messagesTableMobile.subjectEmptyState\"\n                >No subject</span\n              >\n            </ng-template>\n          </td>\n          <td>\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item text-small\" [attr.aria-label]=\"conversation.timestamp | date: 'mediumDate'\">\n                <span aria-hidden=\"true\">{{ conversation.timestamp | date: 'shortDate' }}</span>\n              </div>\n              <bb-icon-ui\n                *ngIf=\"conversation.important\"\n                bbTooltip=\"High priority\"\n                i18n-bbTooltip=\"High priority@@messages.messagesConversationsList.messagesTable.importantMessage\"\n                container=\"body\"\n                triggers=\"hover\"\n                placement=\"bottom\"\n                class=\"bb-stack__item\"\n                name=\"error\"\n                color=\"danger\"\n                aria-label=\"High priority\"\n                i18n-aria-label=\"@@messages.messagesConversationsList.messagesTable.importantMessage\"\n              ></bb-icon-ui>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"d-none d-md-block\">\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item--push-right\">\n        <ng-container *ngIf=\"host.selectedIdsArray.length; else noneSelectedTpl\">\n          <span class=\"bb-stack__item bb-text-support\">\n            <span\n              data-role=\"selected-conversations-counter\"\n              i18n=\"Selected|Selected conversations count@@messages.messagesConversationsList.selected\"\n              [attr.aria-label]=\"host.selectedIdsArray.length + ' Selected'\"\n            >\n              <span aria-hidden=\"true\">{{ host.selectedIdsArray.length + ' Selected' }}</span>\n            </span>\n          </span>\n          <span class=\"bb-stack__item bb-text-support\">|</span>\n          <a\n            data-role=\"clear-selection\"\n            href=\"#\"\n            class=\"bb-stack__item bb-text-semi-bold\"\n            i18n=\"\n              Clear Selection|Clear selection button on the top of the table\n              list@@messages.messagesConversationsList.clearSelectionButton\"\n            (click)=\"\n              $event.preventDefault(); selectionsGroupForm.reset(); host.manageSelectionForm(selectionsGroupForm)\n            \"\n            >Clear Selection</a\n          >\n          <button\n            bbButton\n            color=\"link\"\n            [circle]=\"true\"\n            data-role=\"mark-as-read-unread\"\n            i18n-aria-label=\"\n              Toggle read status@@messages.messagesConversationsList.messagesTableMobile.toggleReadStatusAriaLabel\"\n            aria-label=\"Toggle read status\"\n            i18n-bbTooltip=\"\n              Toggle read status@@messages.messagesConversationsList.messagesTable.ToggleReadStatusTooltipText\"\n            bbTooltip=\"Toggle read status\"\n            container=\"body\"\n            triggers=\"hover\"\n            *ngIf=\"!isDraftView\"\n            (click)=\"host.selectedIdsArray.length && host.markAsReadUnread()\"\n          >\n            <bb-icon-ui *ngIf=\"host.isUnread; else readIconTpl\" class=\"bb-text-support\" name=\"markunread\"> </bb-icon-ui>\n            <ng-template #readIconTpl>\n              <bb-icon-ui class=\"bb-text-support\" name=\"drafts\"></bb-icon-ui>\n            </ng-template>\n          </button>\n\n          <button\n            bbButton\n            color=\"link\"\n            data-role=\"Delete\"\n            circle=\"true\"\n            aria-label=\"Delete\"\n            i18n-aria-label=\"Delete aria-label@@messages.messagesConversationsList.deleteButtonAriaLabel\"\n            i18n=\"Delete|Delete button on the top of the table list@@messages.messagesConversationsList.deleteButton\"\n            bbTooltip=\"Delete\"\n            i18n-bbTooltip=\"\n              Delete|Delete button on the top of the table list\n              tooltip@@messages.messagesConversationsList.deleteTooltip\"\n            container=\"body\"\n            triggers=\"hover\"\n            (click)=\"host.openRemoveModal()\"\n          >\n            <bb-icon-ui class=\"bb-text-support\" name=\"delete\"></bb-icon-ui>\n          </button>\n        </ng-container>\n        <ng-template #noneSelectedTpl>\n          <span\n            aria-live=\"assertive\"\n            class=\"sr-only\"\n            data-role=\"none-selected-conversations-counter\"\n            i18n=\"None selected|None selected conversations count@@messages.messagesConversationsList.noneSelected\"\n          >\n            None selected\n          </span>\n        </ng-template>\n        <ng-container *ngIf=\"!host.selectedIdsArray.length\">\n          <ng-container *ngTemplateOutlet=\"reloadBtn\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n\n    <form #selectionsGroupForm=\"ngForm\">\n      <table class=\"table table-hover\" data-role=\"conversations-list-table\">\n        <caption class=\"sr-only\" i18n=\"Conversations@@messages.messagesConversationsList.conversationsTable\">\n          Conversations\n        </caption>\n        <thead>\n          <tr\n            bb-conversations-list-table-head-ui\n            (change)=\"host.manageSelectionForm(selectionsGroupForm)\"\n            [mailboxType]=\"mailboxType\"\n          ></tr>\n        </thead>\n        <tbody ngModelGroup=\"ids\">\n          <tr\n            [attr.aria-describedby]=\"'bb-cs-' + conversation.id\"\n            bb-conversations-list-table-row-ui\n            tabindex=\"0\"\n            id=\"bb-cs-{{ conversation.id }}\"\n            class=\"bb-messages-conversations-list-item\"\n            data-role=\"conversation\"\n            *ngFor=\"let conversation of host.conversations; trackBy: trackByFn\"\n            [mailboxType]=\"mailboxType\"\n            [conversation]=\"conversation\"\n            [isDraftView]=\"isDraftView\"\n            [customerServiceTitle$]=\"customerServiceTitle$\"\n            [ngClass]=\"{ 'table-active bb-text-semi-bold': conversation.hasOwnProperty('read') && !conversation.read }\"\n            (change)=\"host.manageSelectionForm(selectionsGroupForm)\"\n            (bbKeyboardClick)=\"host.callSelect($event, conversation)\"\n            (remove)=\"host.openRemoveModal(conversation.id)\"\n            (read)=\"host.markAsReadUnread(conversation.id, conversation.read)\"\n          ></tr>\n        </tbody>\n      </table>\n    </form>\n\n    <bb-modal-ui\n      [isOpen]=\"host.removeModalOpened\"\n      (cancel)=\"host.closeRemoveModal()\"\n      aria-describedby=\"messages-list-table-delete-conversation-modal-subtitle\"\n    >\n      <bb-modal-header-ui>\n        <ng-template bbCustomModalHeader>\n          <span\n            class=\"text-large bb-text-semi-bold\"\n            i18n=\"\n              Delete conversation(s)/draft(s)|Header title of the confirmation modal to delete conversation(s) or\n              draft(s)@@messages.messagesConversationsList.messagesDeleteModal.headerTitle\"\n            >Delete {isDraftView + '', select, true {draft(s)} false {conversation(s)}}?</span\n          >\n        </ng-template>\n      </bb-modal-header-ui>\n      <bb-modal-body-ui>\n        <ng-template bbCustomModalBody>\n          <span\n            id=\"messages-list-table-delete-conversation-modal-subtitle\"\n            i18n=\"\n              Are you sure you want to delete the selected conversation(s)?(s)|Body message of the confirmation modal to\n              delete conversation(s)@@messages.messagesConversationsList.messagesDeleteModal.bodyMessage\"\n            >Are you sure you want to delete the selected {isDraftView + '', select, true {draft(s)} false\n            {conversation(s)}}?</span\n          >\n        </ng-template>\n      </bb-modal-body-ui>\n      <bb-modal-footer-ui>\n        <ng-template bbCustomModalFooter>\n          <bb-button-ui\n            color=\"secondary\"\n            i18n=\"\n              Cancel|Cancel button inside the confirmation modal\n              footer@@messages.messagesConversationsList.messagesDeleteModal.cancelButton\"\n            (click)=\"host.closeRemoveModal()\"\n            >Cancel\n          </bb-button-ui>\n          <bb-button-ui\n            color=\"danger\"\n            i18n=\"\n              Delete|Delete button inside the confirmation modal\n              footer@@messages.messagesConversationsList.messagesDeleteModal.deleteButton\"\n            (click)=\"host.confirmRemoveModal()\"\n            >Delete\n          </bb-button-ui>\n        </ng-template>\n      </bb-modal-footer-ui>\n    </bb-modal-ui>\n  </div>\n\n  <ng-template #reloadBtn>\n    <span\n      bbTooltip=\"Refresh\"\n      i18n-bbTooltip=\"Refresh|Refresh button text@@messagesConversationsList.refreshButton\"\n      triggers=\"hover focus\"\n      placement=\"top\"\n      container=\"body\"\n    >\n      <button\n        bbButton\n        color=\"link\"\n        circle=\"true\"\n        data-role=\"refresh\"\n        aria-label=\"Refresh\"\n        i18n-aria-label=\"@@messagesConversationsList.refreshButton\"\n        (click)=\"host.callUpdate()\"\n      >\n        <bb-icon-ui class=\"bb-text-support\" name=\"loading\"></bb-icon-ui>\n      </button>\n    </span>\n  </ng-template>\n</ng-template>\n","import { Component, Directive, ElementRef, Input, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  catchError,\n  filter,\n  first,\n  map,\n  observeOn,\n  pairwise,\n  scan,\n  switchMap,\n  takeUntil,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { asyncScheduler, BehaviorSubject, combineLatest, merge, Observable, of, Subject } from 'rxjs';\nimport { MessagesConversationsListWidgetService } from './messages-conversations-list-widget-ang.service';\nimport {\n  ConversationsData,\n  ConversationsDataExpanded,\n  ConversationsReadRequest,\n  DraftsData,\n  FromParam,\n  MailboxTypeEnum,\n  MessagesConversationsListWidgetContext,\n  ReadUnreadStatusType,\n} from './model';\nimport {\n  BaseConversationsListPropertiesService,\n  BaseConversationsListWidgetComponent,\n  getPropertyValue,\n  SharedMethodsService,\n  shareReplayOnce,\n} from '@backbase/messages-common';\nimport {\n  ConversationThreadsDeleteResponseBody,\n  DeleteDraftsResponseBody,\n  GetConversationThreadsRequestParams,\n} from '@backbase/messages-v5-http-ang';\n\nexport interface MarkReadUnreadStream {\n  status: ReadUnreadStatusType;\n  changedItems: string[] | null | undefined;\n}\n\nconst FirstPage: FromParam = {\n  from: 0,\n};\n\n@Component({\n  selector: 'bb-messages-conversations-list-widget-ang',\n  providers: [BaseConversationsListPropertiesService],\n  templateUrl: './messages-conversations-list-widget-ang.component.html',\n})\nexport class MessagesConversationsListWidgetComponent\n  extends BaseConversationsListWidgetComponent\n  implements OnDestroy, OnInit\n{\n  readonly hostRef = this;\n\n  /**\n   * Mailbox type property, used for Client widget\n   */\n  @Input('mailboxType') set mailboxTypeValue(value: string) {\n    this.mailboxType$$.next(value);\n  }\n\n  /**\n   * Quantity of items to show per page/to add per request, used for Client and Employee widget\n   */\n  @Input('itemsPerPage') set itemsPerPageValue(value: string | number) {\n    this.itemsPerPage$$.next(Number(value));\n  }\n\n  /**\n   * Event published when Create message modal widget was closed,\n   * used for Client and Employee widget to update list of conversations\n   */\n  @Input('createMessageClosedEventName') set createMessageClosedEventNameValue(value: string) {\n    this.createMessageClosedEventName$$.next(value);\n  }\n\n  /**\n   * Customer service title which should be replaced the name of the sender\n   */\n  @Input('customerServiceTitle') set customerServiceTitleValue(value: string) {\n    this.customerServiceTitle$$.next(value);\n  }\n\n  /**\n   * The notification for the successful message deletion operation.\n   */\n  @ViewChild('messageDeleteSuccess') messageDeleteSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the successful delete operation of multiple messages.\n   */\n  @ViewChild('messageDeleteSuccessMultiple') messageDeleteSuccessMultipleTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the successful deletion of a draft.\n   */\n  @ViewChild('draftDeleteSuccess') draftDeleteSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for succssful deletion of multiple drafts.\n   */\n  @ViewChild('draftDeleteSuccessMultiple') draftDeleteSuccessMultipleTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The loading parameter indicating the starting page for the data to be loaded from.\n   */\n  readonly from = new BehaviorSubject<FromParam>(FirstPage);\n\n  /**\n   * The loading flag.\n   */\n  isLoading = false;\n\n  private readonly itemsPerPage$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly mailboxType$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly createMessageClosedEventName$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly customerServiceTitle$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  /**\n   * The mailbox type enum (`inbox`, `outbox`, `drafts`).\n   */\n  readonly mailboxTypeEnum = MailboxTypeEnum;\n\n  /**\n   * Quantity of items to show per page/to add per request.\n   */\n  readonly itemsPerPage: Observable<number> = getPropertyValue(this.itemsPerPage$$, this.properties.itemsPerPage);\n\n  /**\n   * Mailbox type property, used for Client widget\n   */\n  readonly mailboxType: Observable<string> = getPropertyValue(this.mailboxType$$, this.properties.mailboxType);\n\n  /**\n   * Customer service title to be displayed as a sender\n   */\n  readonly customerServiceTitle: Observable<string> = getPropertyValue(\n    this.customerServiceTitle$$,\n    this.properties.customerServiceTitle,\n  );\n\n  /**\n   * Event published when Create message modal widget was closed,\n   * used for Client and Employee widget to update list of conversations\n   */\n  readonly createMessageClosedEventName: Observable<string> = getPropertyValue(\n    this.createMessageClosedEventName$$.asObservable(),\n    this.properties.createMessageClosedEventName,\n  );\n\n  private readonly conversationsStream: Observable<ConversationsDataExpanded> = this.from.pipe(\n    withLatestFrom(this.itemsPerPage, this.mailboxType),\n    tap(() => (this.isLoading = true)),\n    switchMap(([from, size, mailboxType]) => this.getData(from, size, mailboxType)),\n    scan((acc, items): ConversationsDataExpanded => this.mergeConversationsData(acc, items)),\n    tap(() => (this.isLoading = false)),\n  );\n\n  private readonly destroyed$ = new Subject<void>();\n\n  private readonly resetSelection = new Subject();\n  private readonly markAsReadUnreadSubject = new Subject<ConversationsReadRequest>();\n  private readonly markAsReadUnreadStream: Observable<MarkReadUnreadStream | null | undefined> =\n    this.markAsReadUnreadSubject.pipe(\n      switchMap(params =>\n        this.messagesService.markConversationsAsReadUnread(params).pipe(\n          map(response => ({\n            changedItems: response && response.changedItems,\n            status: params.status,\n          })),\n          catchError(error => this.showErrorNotification(error)),\n        ),\n      ),\n    );\n\n  /**\n   * The stream with the conversations data.\n   */\n  conversations: Observable<ConversationsDataExpanded> = combineLatest([\n    this.conversationsStream,\n    merge(this.markAsReadUnreadStream, of(undefined)).pipe(\n      scan((acc, value) => value && (acc ? { ...acc, ...value } : { ...value })),\n    ),\n  ]).pipe(\n    map(([conversations, mark]) => {\n      /* istanbul ignore next */\n      if (mark) {\n        const flag = mark.status === ReadUnreadStatusType.READ;\n        const data = conversations.data.map(conversation => {\n          if (mark.changedItems && mark.changedItems.includes(conversation.id)) {\n            conversation.read = flag;\n          }\n\n          return conversation;\n        });\n\n        return {\n          data: data,\n          params: conversations.params,\n          totalCount: conversations.totalCount,\n        };\n      }\n\n      return conversations;\n    }),\n    shareReplayOnce(),\n  );\n\n  private readonly firstNewConversationId$ = this.conversations?.pipe(\n    pairwise(),\n    map(([prevConversations, newConversations]) => {\n      let firstNewConversation = newConversations.data[prevConversations.data.length];\n\n      if (prevConversations.data.length >= newConversations.data.length) {\n        firstNewConversation = newConversations.data[0];\n      }\n\n      return firstNewConversation && firstNewConversation.id;\n    }),\n  );\n\n  constructor(\n    private readonly messagesService: MessagesConversationsListWidgetService,\n    readonly properties: BaseConversationsListPropertiesService,\n    readonly shared: SharedMethodsService,\n    readonly activatedRoute: ActivatedRoute,\n    private readonly element: ElementRef,\n  ) {\n    super(shared, activatedRoute, properties);\n\n    this.createMessageClosedEventName\n      .pipe(\n        first(),\n        switchMap(eventName => this.shared.eventBusFactory(eventName)),\n        takeUntil(this.unsubscribe$),\n        tap(() => this.updateConversations()),\n      )\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.firstNewConversationId$\n      ?.pipe(\n        filter(Boolean),\n        map(id => `#bb-cs-${id}`),\n        observeOn(asyncScheduler),\n        map(elemId => this.element.nativeElement.querySelector(`${elemId}`) as HTMLElement),\n        filter<HTMLElement>(Boolean),\n        takeUntil(this.destroyed$),\n      )\n      .subscribe((elemScrollTo: HTMLElement | undefined) => {\n        elemScrollTo?.focus();\n        elemScrollTo?.scrollIntoView(false);\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * Delete conversations\n   *\n   * @param ids Conversations id list\n   */\n  removeConversations(ids: string[]) {\n    merge(this.deleteConversationsStream(ids), this.deleteDraftsStream(ids))\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        () => {\n          this.resetSelection.next();\n          this.updateConversations();\n        },\n        error => this.showErrorNotification(error),\n      );\n  }\n\n  /**\n   * Get conversations data.\n   *\n   * @param params Get conversation thread request params\n   * @returns Conversations stream\n   */\n  getConversations(params: GetConversationThreadsRequestParams): Observable<ConversationsData> {\n    return this.messagesService.getConversations(params).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorResponse = error;\n\n        return of({ params: FirstPage, data: [], totalCount: 0 });\n      }),\n    );\n  }\n\n  /**\n   * Get drafts data.\n   *\n   * @param draftData Draft size and position\n   * @returns Draft stream\n   */\n  getDrafts({ size, from }: { size: number; from: number }): Observable<DraftsData> {\n    return this.messagesService.getDrafts({ size, from }).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorResponse = error;\n\n        return of({ params: FirstPage, data: [], totalCount: 0 });\n      }),\n    );\n  }\n\n  /**\n   * Mark a message as read or unread.\n   *\n   * @param params Conversation read request\n   */\n  markAsReadUnread(params: ConversationsReadRequest) {\n    this.markAsReadUnreadSubject.next(params);\n  }\n\n  /**\n   * Change the starting page for the conversations loading.\n   *\n   * @param event Starting page params\n   */\n  setLoadingParams(event: FromParam) {\n    this.from.next(event);\n\n    this.onPageChange(event.from);\n  }\n\n  /**\n   * The method to change the starting page to the first one.\n   */\n  updateConversations() {\n    this.from.next(FirstPage);\n  }\n\n  /**\n   * Open the `Compose Message` modal.\n   *\n   * @param draftId Draft id\n   */\n  compose(draftId: string) {\n    this.shared.eventBusPublish('bb.event.messages.create.message.open', { draftId });\n  }\n\n  private deleteConversationsStream(ids: string[]): Observable<ConversationThreadsDeleteResponseBody | null> {\n    return this.mailboxType.pipe(\n      filter(mailboxType => mailboxType !== MailboxTypeEnum.drafts),\n      switchMap(() => this.messagesService.deleteConversations(ids)),\n      tap(response => {\n        if (response) {\n          const messageDeletion =\n            response.deletedItems.length > 1 ? this.messageDeleteSuccessMultipleTpl : this.messageDeleteSuccessTpl;\n\n          this.shared.openNotification(messageDeletion);\n        }\n      }),\n    );\n  }\n\n  private deleteDraftsStream(ids: string[]): Observable<DeleteDraftsResponseBody | null> {\n    return this.mailboxType.pipe(\n      filter(mailboxType => mailboxType === MailboxTypeEnum.drafts),\n      switchMap(() => this.messagesService.deleteDrafts(ids)),\n      tap(response => {\n        if (response) {\n          const draftDeletion =\n            response.deleted.length > 1 ? this.draftDeleteSuccessMultipleTpl : this.draftDeleteSuccessTpl;\n\n          this.shared.openNotification(draftDeletion);\n        }\n      }),\n    );\n  }\n\n  private getData(from: FromParam, size: number, mailboxType: string): Observable<ConversationsDataExpanded> {\n    const result = new Subject<ConversationsData>();\n\n    if (mailboxType === MailboxTypeEnum.drafts) {\n      this.getDrafts({ ...from, size }).subscribe(res => result.next(res as ConversationsData));\n    } else this.getConversations({ ...from, size, mailboxType }).subscribe(res => result.next(res));\n\n    return result.pipe(map((response: ConversationsData) => ({ params: { ...from, size, mailboxType }, ...response })));\n  }\n\n  private mergeConversationsData(\n    acc: ConversationsDataExpanded,\n    items: ConversationsDataExpanded,\n  ): ConversationsDataExpanded {\n    return {\n      params: acc.params,\n      data: items.params.from ? [...acc.data, ...items.data] : items.data,\n      totalCount: items.totalCount,\n    };\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesConversationsListCustomizable]',\n})\nexport class MessagesConversationsListCustomizableDirective extends BbTemplate<\n  MessagesConversationsListWidgetComponent,\n  MessagesConversationsListWidgetContext\n> {}\n","<ng-container\n  bbMessagesConversationsListCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    conversations: conversations | async,\n    mailboxType: mailboxType | async,\n    itemsPerPage: itemsPerPage | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbMessagesConversationsListCustomizable\n  let-host\n  let-conversations=\"context.conversations\"\n  let-mailboxType=\"context.mailboxType\"\n  let-itemsPerPage=\"context.itemsPerPage\"\n>\n  <div class=\"bb-messages-conversations-list__container card card-lg\">\n    <ng-container *ngIf=\"conversations?.data; else loadingState\">\n      <ng-container *ngIf=\"!host.errorResponse; else errorState\">\n        <ng-container *ngIf=\"conversations.data.length; else emptyState\">\n          <bb-conversations-list-table-ui\n            [conversations]=\"conversations.data\"\n            [reset]=\"host.resetSelection\"\n            [mailboxType]=\"host.mailboxType | async\"\n            [customerServiceTitle$]=\"host.customerServiceTitle\"\n            (remove)=\"host.removeConversations($event)\"\n            (read)=\"host.markAsReadUnread($event)\"\n            (select)=\"\n              mailboxType === host.mailboxTypeEnum.drafts ? host.openDraft($event) : host.openConversation($event)\n            \"\n            (update)=\"host.updateConversations()\"\n          ></bb-conversations-list-table-ui>\n          <div class=\"p-3 text-center\">\n            <bb-load-button-ui\n              [from]=\"host.from.value.from\"\n              [isLoading]=\"host.isLoading\"\n              [size]=\"itemsPerPage\"\n              [totalCount]=\"conversations.totalCount\"\n              (paramChange)=\"host.setLoadingParams($event)\"\n              data-role=\"load-more-button\"\n              i18n=\"Load more button name@@messages.messagesConversationsList.loadMoreButton\"\n              >Load more</bb-load-button-ui\n            >\n          </div>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <ng-template #emptyState>\n    <div class=\"bb-state-container\">\n      <ng-container [ngSwitch]=\"mailboxType\">\n        <ng-container *ngSwitchCase=\"host.mailboxTypeEnum.drafts\">\n          <bb-empty-state-ui\n            i18n-title=\"Empty state title@@messages.messagesConversationsList.draftsEmptyStateTitle\"\n            title=\"No Drafts\"\n            i18n-subtitle=\"Empty state subtitle@@messages.messagesConversationsList.draftsEmptyStateSubTitle\"\n            subtitle=\"You don't have any drafts to be displayed.\"\n            iconModifier=\"email\"\n            iconColor=\"muted\"\n          ></bb-empty-state-ui>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.mailboxTypeEnum.outbox\">\n          <bb-empty-state-ui\n            i18n-title=\"Empty state title@@messages.messagesConversationsList.emptyStateTitle\"\n            title=\"No Sent Messages\"\n            i18n-subtitle=\"Empty state subtitle@@messages.messagesConversationsList.emptyStateSubtitle\"\n            subtitle=\"You don't have any sent messages to be displayed.\"\n            iconModifier=\"email\"\n            iconColor=\"muted\"\n          ></bb-empty-state-ui>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <bb-empty-state-ui\n            i18n-title=\"Empty state title@@messages.messagesConversationsList.simpleEmptyStateTitle\"\n            title=\"No Conversations\"\n            i18n-subtitle=\"Empty state subtitle@@messages.messagesConversationsList.simpleEmptyStateSubTitle\"\n            subtitle=\"You don't have any conversations to be displayed.\"\n            iconModifier=\"email\"\n            iconColor=\"muted\"\n          ></bb-empty-state-ui>\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <bb-messages-request-error [error]=\"host.errorResponse\"></bb-messages-request-error>\n  </ng-template>\n\n  <ng-template #loadingState>\n    <bb-loading-indicator-ui class=\"py-4\" loaderSize=\"md\"></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n\n<ng-template #messageDeleteSuccess>\n  <span\n    i18n=\"\n      Your conversation has been deleted successfully.|Text of successful conversation\n      deletion@@messages.messagesConversationList.messageSuccessDelete\"\n    >Your conversation has been deleted successfully.</span\n  >\n</ng-template>\n\n<ng-template #messageDeleteSuccessMultiple>\n  <span\n    i18n=\"\n      Your conversations have been deleted successfully.|Text of successful conversations\n      deletion@@messages.messagesConversationList.messageDeleteSuccessMultipleDelete\"\n    >Your conversations have been deleted successfully.</span\n  >\n</ng-template>\n\n<ng-template #draftDeleteSuccess>\n  <span\n    i18n=\"\n      Your draft has been deleted successfully.|Text of successful draft\n      deletion@@messages.messagesConversationList.draftSuccessDelete\"\n    >Your draft has been deleted successfully.</span\n  >\n</ng-template>\n\n<ng-template #draftDeleteSuccessMultiple>\n  <span\n    i18n=\"\n      Your draft have been deleted successfully.|Text of successful draft\n      deletion@@messages.messagesConversationList.draftDeleteSuccessMultipleDelete\"\n    >Your drafts have been deleted successfully.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { MessagesRequestErrorModule, SharedMethodsModule } from '@backbase/messages-common';\n\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { CheckboxGroupModule } from '@backbase/ui-ang/checkbox-group';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n\nimport {\n  MessagesConversationsListCustomizableDirective,\n  MessagesConversationsListWidgetComponent,\n} from './messages-conversations-list-widget-ang.component';\nimport { MessagesConversationsListWidgetService } from './messages-conversations-list-widget-ang.service';\nimport {\n  ConversationsListTableComponent,\n  ConversationsListTableCustomizableDirective,\n} from './components/conversations-list-table/conversations-list-table.component';\nimport {\n  ConversationsListTableHeadComponent,\n  ConversationsListTableHeadCustomizableDirective,\n} from './components/conversations-list-table-head/conversations-list-table-head.component';\nimport {\n  ConversationsListTableRowComponent,\n  ConversationsListTableRowCustomizableDirective,\n} from './components/conversations-list-table-row/conversations-list-table-row.component';\n\nconst components = [\n  MessagesConversationsListWidgetComponent,\n  ConversationsListTableComponent,\n  ConversationsListTableHeadComponent,\n  ConversationsListTableRowComponent,\n];\nconst directives = [\n  MessagesConversationsListCustomizableDirective,\n  ConversationsListTableCustomizableDirective,\n  ConversationsListTableHeadCustomizableDirective,\n  ConversationsListTableRowCustomizableDirective,\n];\nconst uiModules = [\n  BadgeModule,\n  ButtonModule,\n  CheckboxGroupModule,\n  DropdownMenuModule,\n  ModalModule,\n  IconModule,\n  InputCheckboxModule,\n  LoadButtonModule,\n  EmptyStateModule,\n  LoadingIndicatorModule,\n  TooltipModule,\n];\n\nconst innerModules = [MessagesRequestErrorModule];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { MessagesConversationsListWidgetComponent },\n    }),\n    KeyboardClickModule,\n    SharedMethodsModule,\n    FormsModule,\n    ...uiModules,\n    ...innerModules,\n  ],\n  providers: [MessagesConversationsListWidgetService],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n})\nexport class MessagesConversationsListWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}