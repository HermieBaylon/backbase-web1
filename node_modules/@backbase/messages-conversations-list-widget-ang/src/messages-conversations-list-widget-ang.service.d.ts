import { Observable } from 'rxjs';
import { Pubsub } from '@backbase/foundation-ang/web-sdk';
import { SharedMethodsService } from '@backbase/messages-common';
import { GetConversationThreadsRequestParams, GetMessageDraftsRequestParams, MessagecenterHttpService, ConversationThreadsDeleteResponseBody, DeleteDraftsResponseBody, MarkAsReadUnreadPutRequestBody, MarkAsReadUnreadPutResponseBody } from '@backbase/messages-v5-http-ang';
import { ConversationsData, DraftsData } from './model';
import * as i0 from "@angular/core";
export declare class MessagesConversationsListWidgetService {
    private readonly messagesService;
    private readonly sharedMethodsService;
    private readonly pubSub;
    constructor(messagesService: MessagecenterHttpService, sharedMethodsService: SharedMethodsService, pubSub: Pubsub);
    deleteConversations(ids: string[]): Observable<ConversationThreadsDeleteResponseBody | null>;
    deleteDrafts(ids: string[]): Observable<DeleteDraftsResponseBody | null>;
    getConversations(params?: GetConversationThreadsRequestParams): Observable<ConversationsData>;
    getDrafts({ from, size }: GetMessageDraftsRequestParams): Observable<DraftsData>;
    markConversationsAsReadUnread(params: MarkAsReadUnreadPutRequestBody): Observable<MarkAsReadUnreadPutResponseBody | null>;
    static ɵfac: i0.ɵɵFactoryDeclaration<MessagesConversationsListWidgetService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<MessagesConversationsListWidgetService>;
}
