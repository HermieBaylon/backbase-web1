{"version":3,"file":"backbase-messages-conversations-list-widget-ang.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/messages-conversations-list-widget-ang/src/model/conversations.ts","../../../../libs/messages-conversations-list-widget-ang/src/messages-conversations-list-widget-ang.service.ts","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table-head/conversations-list-table-head.component.ts","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table-head/conversations-list-table-head.component.html","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table-row/conversations-list-table-row.component.ts","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table-row/conversations-list-table-row.component.html","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table/conversations-list-table.component.ts","../../../../libs/messages-conversations-list-widget-ang/src/components/conversations-list-table/conversations-list-table.component.html","../../../../libs/messages-conversations-list-widget-ang/src/messages-conversations-list-widget-ang.component.ts","../../../../libs/messages-conversations-list-widget-ang/src/messages-conversations-list-widget-ang.component.html","../../../../libs/messages-conversations-list-widget-ang/src/messages-conversations-list-widget-ang.module.ts","../../../../libs/messages-conversations-list-widget-ang/backbase-messages-conversations-list-widget-ang.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { ConversationThread, MessageDraftsGetResponseBody } from '@backbase/messages-v5-http-ang';\n\nexport interface ConvertedData<T> {\n  data: T;\n  totalCount: number;\n}\n\nexport type ConversationsData = ConvertedData<ConversationThread[]>;\nexport type DraftsData = ConvertedData<MessageDraftsGetResponseBody[]>;\n\nexport interface ConversationsDataExpanded extends ConversationsData {\n  params: ConversationsGetReqParams;\n}\n\nexport interface FromParam {\n  from: number;\n}\n\nexport interface DraftsReqParams extends FromParam {\n  size: number;\n}\n\nexport interface ConversationsGetReqParams extends FromParam {\n  size: number;\n  mailboxType?: string;\n  orderBy?: string;\n  direction?: string;\n}\n\nexport interface ConversationsReadRequest {\n  status: ReadUnreadStatusType;\n  ids: string[];\n  additions?: {\n    [key: string]: any;\n  };\n}\n\nexport enum ReadUnreadStatusType {\n  READ = 'READ',\n  UNREAD = 'UNREAD',\n}\n\nexport enum MailboxTypeEnum {\n  inbox = 'inbox',\n  outbox = 'outbox',\n  drafts = 'drafts',\n}\n\nexport interface MessagesConversationsListWidgetContext {\n  conversations: ConversationsDataExpanded;\n  mailboxType: string;\n  itemsPerPage: number;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { PUBSUB, Pubsub } from '@backbase/foundation-ang/web-sdk';\nimport { SharedMethodsService } from '@backbase/messages-common';\nimport {\n  GetConversationThreadsRequestParams,\n  GetMessageDraftsRequestParams,\n  MessagecenterHttpService,\n  ConversationThread,\n  ConversationThreadsDeleteResponseBody,\n  DeleteDraftsResponseBody,\n  MarkAsReadUnreadPutRequestBody,\n  MarkAsReadUnreadPutResponseBody,\n  MessageDraftsGetResponseBody,\n} from '@backbase/messages-v5-http-ang';\nimport { ConversationsData, DraftsData } from './model';\n\nconst DefaultConversationsGetReqParams: GetConversationThreadsRequestParams = {\n  direction: 'DESC',\n  from: 0,\n  size: 10,\n  mailboxType: '',\n};\nconst bbEventUnreadConversationCountUpdate = 'bb.event.unread-conversation-count.update';\n\n@Injectable()\nexport class MessagesConversationsListWidgetService {\n  constructor(\n    private readonly messagesService: MessagecenterHttpService,\n    private readonly sharedMethodsService: SharedMethodsService,\n    @Inject(PUBSUB) private readonly pubSub: Pubsub,\n  ) {}\n\n  deleteConversations(ids: string[]): Observable<ConversationThreadsDeleteResponseBody | null> {\n    return this.messagesService\n      .deleteConversationThreads({ ids })\n      .pipe(tap(() => this.pubSub.publish(bbEventUnreadConversationCountUpdate, undefined)));\n  }\n\n  deleteDrafts(ids: string[]): Observable<DeleteDraftsResponseBody | null> {\n    return this.messagesService.deleteMessageDrafts({ ids });\n  }\n\n  getConversations(\n    params: GetConversationThreadsRequestParams = DefaultConversationsGetReqParams,\n  ): Observable<ConversationsData> {\n    return this.messagesService\n      .getConversationThreads(params, 'response')\n      .pipe(\n        map((response: HttpResponse<ConversationThread[]>) =>\n          this.sharedMethodsService.processData<ConversationThread[]>(response),\n        ),\n      );\n  }\n\n  getDrafts({ from, size }: GetMessageDraftsRequestParams): Observable<DraftsData> {\n    return this.messagesService\n      .getMessageDrafts({ from, size }, 'response')\n      .pipe(\n        map((response: HttpResponse<MessageDraftsGetResponseBody[]>) =>\n          this.sharedMethodsService.processData<MessageDraftsGetResponseBody[]>(response),\n        ),\n      );\n  }\n\n  markConversationsAsReadUnread(\n    params: MarkAsReadUnreadPutRequestBody,\n  ): Observable<MarkAsReadUnreadPutResponseBody | null> {\n    return this.messagesService\n      .putMarkAsReadUnread({ markAsReadUnreadPutRequestBody: params })\n      .pipe(tap(() => this.pubSub.publish(bbEventUnreadConversationCountUpdate, undefined)));\n  }\n}\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { MailboxTypeEnum } from '../../model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { BaseConversationsListPropertiesService, getPropertyValue } from '@backbase/messages-common';\n\n@Component({\n  /* eslint-disable */\n  selector: 'tr[bb-conversations-list-table-head-ui]',\n  /* eslint-enable */\n  templateUrl: './conversations-list-table-head.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n  providers: [BaseConversationsListPropertiesService],\n})\nexport class ConversationsListTableHeadComponent {\n  /**\n   * The stream with the mailbox type.\n   */\n  @Input('mailboxType') set mailboxTypeValue(value: string) {\n    this.mailboxType$$.next(value);\n  }\n\n  readonly hostRef = this;\n\n  private readonly mailboxType$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  /**\n   * The mailbox type enum (`inbox`, `outbox`, `drafts`).\n   */\n  readonly mailboxTypeEnum = MailboxTypeEnum;\n\n  constructor(private readonly properties: BaseConversationsListPropertiesService) {}\n\n  get mailboxType(): Observable<string> {\n    return getPropertyValue(this.mailboxType$$.asObservable(), this.properties.mailboxType);\n  }\n}\n\n@Directive({\n  selector: '[bbConversationsListTableHeadCustomizable]',\n})\nexport class ConversationsListTableHeadCustomizableDirective extends BbTemplate<\n  ConversationsListTableHeadComponent,\n  undefined\n> {}\n","<ng-container\n  bbConversationsListTableHeadCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    mailboxType: mailboxType | async\n  }\"\n></ng-container>\n\n<ng-template bbConversationsListTableHeadCustomizable let-host let-mailboxType=\"context.mailboxType\">\n  <th scope=\"col\" data-role=\"checkbox-column\">\n    <bb-checkbox-group-ui\n      aria-label=\"Select all conversations\"\n      i18n-aria-label=\"\n        Select all conversations@@messages.messagesConversationsList.messagesTable.checkboxGroupAriaLabel\"\n      ngModelGroup=\"ids\"\n    ></bb-checkbox-group-ui>\n  </th>\n  <th scope=\"col\" data-role=\"importance-column\"></th>\n  <th\n    data-role=\"from-column\"\n    scope=\"col\"\n    i18n=\"\n      From|The name of the table head cell called 'From'@@messages.messagesConversationsList.messagesTable.headerFrom\"\n    *ngIf=\"mailboxType !== host.mailboxTypeEnum.drafts\"\n  >\n    From\n  </th>\n  <th scope=\"col\" data-role=\"attachments-column\"></th>\n  <th\n    data-role=\"subject-column\"\n    scope=\"col\"\n    i18n=\"\n      Subject|The name of the table head cell called\n      'Subject'@@messages.messagesConversationsList.messagesTable.headerSubject\"\n  >\n    Subject\n  </th>\n  <th\n    data-role=\"topic-column\"\n    scope=\"col\"\n    i18n=\"\n      Topic|The name of the table head cell called 'Topic'@@messages.messagesConversationsList.messagesTable.headerTopic\"\n  >\n    Topic\n  </th>\n  <th\n    data-role=\"date-column\"\n    scope=\"col\"\n    i18n=\"\n      Date|The name of the table head cell called 'Date'@@messages.messagesConversationsList.messagesTable.headerDate\"\n  >\n    Date\n  </th>\n  <th data-role=\"dropdown-menu-column\" scope=\"col\"></th>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlContainer, NgModelGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { MailboxTypeEnum } from '../../model';\nimport { ConversationThread, MessageDraftsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { BaseConversationsListPropertiesService } from '@backbase/messages-common';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'tr[bb-conversations-list-table-row-ui]',\n  templateUrl: './conversations-list-table-row.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgModelGroup }],\n  providers: [BaseConversationsListPropertiesService],\n})\nexport class ConversationsListTableRowComponent {\n  /**\n   * Conversation object\n   */\n  @Input() conversation: ConversationThread | MessageDraftsGetResponseBody | undefined;\n\n  /**\n   * Identifier if it is draft view\n   */\n  @Input() isDraftView = false;\n\n  /**\n   * Stream with the customer service title.\n   */\n  @Input() customerServiceTitle$!: Observable<string | undefined>;\n\n  /**\n   * Stream with the mailbox type.\n   */\n  @Input() mailboxType: string | undefined;\n\n  /**\n   * Event emitted when this conversation should be marked as read/unread\n   */\n  @Output() read = new EventEmitter();\n\n  /**\n   * Event emitted when this conversation should be removed\n   */\n  @Output() remove = new EventEmitter();\n\n  readonly hostRef = this;\n\n  /**\n   * The mailbox type enum (inbox, outbox, drafts).\n   */\n  readonly mailboxTypeEnum = MailboxTypeEnum;\n\n  /**\n   * The method to toggle the read or unread conversation state.\n   */\n  toggleRead() {\n    this.read.emit();\n  }\n\n  /**\n   * The method to remove a conversation.\n   */\n  emitRemove() {\n    this.remove.emit();\n  }\n}\n\n@Directive({\n  selector: '[bbConversationsListTableRowCustomizable]',\n})\nexport class ConversationsListTableRowCustomizableDirective extends BbTemplate<\n  ConversationsListTableRowComponent,\n  undefined\n> {}\n","<ng-container\n  bbConversationsListTableRowCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    customerServiceTitle: customerServiceTitle$ | async\n  }\"\n></ng-container>\n\n<ng-template bbConversationsListTableRowCustomizable let-host let-customerServiceTitle=\"context.customerServiceTitle\">\n  <td (click)=\"$event.stopPropagation()\" data-role=\"checkbox-cell\">\n    <bb-input-checkbox-ui\n      aria-label=\"Checkbox to select conversation\"\n      i18n-aria-label=\"\n        Checkbox to select conversation@@messages.messagesConversationsList.messagesTable.selectConversationCheckbox\"\n      ngModel\n      [name]=\"host.conversation.id\"\n    ></bb-input-checkbox-ui>\n    <span\n      class=\"sr-only\"\n      i18n=\"Conversation details@@messages.messagesConversationsList.messagesTable.conversation-details\"\n    >\n      Click to open conversation thread, conversation details:\n    </span>\n  </td>\n  <td data-role=\"important-cell\">\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        class=\"bb-stack__item--push-right\"\n        bbTooltip=\"High priority\"\n        i18n-bbTooltip=\"High priority@@messages.messagesConversationsList.messagesTable.highPriorityMessage\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n        *ngIf=\"host.conversation.important\"\n        name=\"error\"\n        color=\"danger\"\n        aria-label=\"High priority\"\n        i18n-aria-label=\"@@messages.messagesConversationsList.messagesTable.highPriorityMessage\"\n      ></bb-icon-ui>\n    </div>\n  </td>\n  <td *ngIf=\"!host.isDraftView\" data-role=\"from-cell\">\n    <span class=\"sr-only\" i18n=\"Messages from@@messages.messagesConversationsList.messagesTable.messagesFrom\"\n      >,From</span\n    >\n    <ng-container [ngSwitch]=\"host.conversation.sender?.id\">\n      <span *ngSwitchCase=\"'customer.service'\">{{ customerServiceTitle }}</span>\n      <span *ngSwitchDefault>{{ host.conversation.sender?.name }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"host.conversation.hasDraft\">\n      <span *ngIf=\"host.conversation.sender?.id\">, </span>\n      <span\n        aria-hidden=\"true\"\n        class=\"text-danger\"\n        i18n=\"Draft@@messages.messagesConversationsList.messagesTable.draftText\"\n        >Draft</span\n      >\n      <span class=\"sr-only\" i18n=\"Contains draft@@messages.messagesConversationsList.messagesTable.containsDraft\"\n        >Contains draft</span\n      >\n    </ng-container>\n  </td>\n  <td data-role=\"has-attachments-cell\">\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        *ngIf=\"host.conversation.hasAttachments\"\n        bbTooltip=\"Contains attachments\"\n        container=\"body\"\n        i18n-bbTooltip=\"\n          Contains attachments|Contains file\n          attachments@@messages.messagesConversationsList.messagesTable.containsFileAttachments\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n        class=\"bb-stack__item--push-right bb-text-support\"\n        name=\"attachment\"\n        aria-label=\"Contains attachments,\"\n        i18n-aria-label=\"@@messages.messagesConversationsList.messagesTable.containsFileAttachments\"\n      ></bb-icon-ui>\n    </div>\n  </td>\n  <td>\n    <ng-container *ngIf=\"host.conversation.subject; else noSubject\">\n      <span class=\"sr-only\" i18n=\"Subject@@messages.messagesConversationsList.messagesTable.subject\">,Subject</span>\n      <span class=\"break-word\" [innerHTML]=\"host.conversation.subject\"></span>\n    </ng-container>\n  </td>\n  <td data-role=\"topic-cell\">\n    <span class=\"sr-only\" i18n=\"Topic@@messages.messagesConversationsList.messagesTable.topic\">,Topic</span>\n    <div class=\"bb-stack\" *ngIf=\"host.conversation.topic && host.conversation.topic.name; else noTopic\">\n      <bb-badge-ui\n        class=\"bb-stack__item\"\n        [text]=\"host.conversation.topic?.name\"\n        [color]=\"host.conversation.topic?.deleted ? 'secondary' : 'primary'\"\n      ></bb-badge-ui>\n      <bb-icon-ui\n        *ngIf=\"host.conversation.topic?.deleted\"\n        name=\"warning\"\n        color=\"warning\"\n        i18n-bbTooltip=\"\n          This topic no longer exists. Contact support for\n          details.@@messages.messagesConversationsList.messagesTable.deletedTopic\"\n        bbTooltip=\"This topic no longer exists. Contact support for details\"\n        aria-label=\"This topic no longer exists. Contact support for details,\"\n        i18n-aria-label=\"@@messages.messagesConversationsList.messagesTable.deletedTopic\"\n        container=\"body\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      ></bb-icon-ui>\n    </div>\n  </td>\n  <td data-role=\"date-cell\">\n    <span class=\"sr-only\" i18n=\"Date@@messages.messagesConversationsList.messagesTable.date\">,Date</span>\n    <span aria-hidden=\"true\">{{ host.conversation.timestamp | date: 'shortDate' }}</span>\n    <span class=\"sr-only\">{{ host.conversation.timestamp | date: 'mediumDate' }}</span>\n  </td>\n  <td data-role=\"dropdown-cell\" tabindex=\"-1\">\n    <span\n      class=\"sr-only\"\n      i18n=\"Dropdown menu|Dropdown menu button tooltip@@messages.messagesConversationsList.messagesTable.dropdownMenu\"\n      >Dropdown menu</span\n    >\n    <span\n      bbTooltip=\"Dropdown menu\"\n      container=\"body\"\n      tabindex=\"-1\"\n      i18n-bbTooltip=\"@@messages.messagesConversationsList.messagesTable.dropdownMenu\"\n      triggers=\"hover focus\"\n      class=\"bb-d-inline-block\"\n      placement=\"top right\"\n    >\n      <bb-dropdown-menu-ui\n        icon=\"ellipsis-h\"\n        btnColor=\"link\"\n        iconColor=\"dark\"\n        tabindex=\"-1\"\n        buttonSize=\"sm\"\n        iconSize=\"md\"\n        btnCircle=\"true\"\n        [btnCircle]=\"true\"\n        [dropDownButtonLabel]=\"'Dropdown menu for ' + host.conversation.subject\"\n        i18n-dropDownButtonLabel=\"\n          Dropdown menu aria-label@@messages.messagesConversationsList.messagesTable.dropdownMenuAriaLabel\"\n      >\n        <ng-template bbDropdownMenuItem>\n          <a\n            role=\"menuitem\"\n            data-role=\"mark-as-read-unread\"\n            class=\"dropdown-item\"\n            *ngIf=\"!host.isDraftView\"\n            (bbKeyboardClick)=\"host.toggleRead()\"\n          >\n            <ng-container\n              i18n=\"\n                Mark as Read or Unread|Item text in dropdown\n                menu@@messages.messagesConversationsList.messagesTable.markAsReadDropdownItem\"\n            >\n              {host.conversation.read + '', select, true {Mark as unread} false {Mark as read}}\n            </ng-container>\n          </a>\n          <a\n            role=\"menuitem\"\n            data-role=\"delete\"\n            class=\"dropdown-item\"\n            *ngIf=\"host.conversation.deletable || host.isDraftView\"\n            (bbKeyboardClick)=\"host.emitRemove(host.conversation.id)\"\n          >\n            <ng-container\n              i18n=\"\n                Delete|Item text in dropdown menu@@messages.messagesConversationsList.messagesTable.deleteDropdownItem\"\n              >Delete</ng-container\n            >\n          </a>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </span>\n  </td>\n\n  <ng-template #noSubject>\n    <span class=\"bb-text-support\" i18n=\"No subject@@messages.messagesConversationsList.messagesTable.subjectEmptyState\"\n      >No subject</span\n    >\n  </ng-template>\n\n  <ng-template #noTopic>\n    <span class=\"bb-text-support\" i18n=\"No subject@@messages.messagesConversationsList.messagesTable.topicEmptyState\"\n      >No topic</span\n    >\n  </ng-template>\n</ng-template>\n","import { Component, Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { map, take, takeUntil } from 'rxjs/operators';\nimport { BbTemplate, TemplateRegistry } from '@backbase/foundation-ang/core';\nimport { ConversationThread, MessageDraftsGetResponseBody } from '@backbase/messages-v5-http-ang';\nimport { MailboxTypeEnum, ReadUnreadStatusType } from '../../model';\nimport { BaseConversationsListPropertiesService, getPropertyValue } from '@backbase/messages-common';\n\n@Component({\n  selector: 'bb-conversations-list-table-ui',\n  providers: [TemplateRegistry, BaseConversationsListPropertiesService],\n  templateUrl: './conversations-list-table.component.html',\n})\nexport class ConversationsListTableComponent implements OnInit, OnDestroy {\n  static counter = 0;\n\n  /**\n   * Array of the conversations\n   */\n  @Input()\n  set conversations(value: ConversationThread[]) {\n    this._conversations = value;\n    this.manageSelectionForm(this.selectionsGroupForm);\n  }\n\n  /**\n   * The conversations getter.\n   */\n  get conversations() {\n    return this._conversations;\n  }\n\n  /**\n   * Input stream of reset signals that will trigger selection reset\n   */\n  @Input() reset: Observable<undefined> | undefined;\n\n  /**\n   * The stream with the mailbox type.\n   */\n  @Input('mailboxType') set mailboxTypeValue(value: string) {\n    this.mailboxType$$.next(value);\n  }\n\n  /**\n   * The stream with the customer service title.\n   */\n  @Input() customerServiceTitle$!: Observable<string | undefined>;\n\n  /**\n   * Emits conversation object on select event\n   */\n  @Output() select = new EventEmitter<ConversationThread | MessageDraftsGetResponseBody>();\n\n  /**\n   * Emits id of the conversation that should be marked as read/unread\n   */\n  @Output() read = new EventEmitter();\n\n  /**\n   * Emits id of the conversation that should be removed\n   */\n  @Output() remove = new EventEmitter();\n\n  /**\n   * EventEmitter to update list of the conversations\n   */\n  @Output() update = new EventEmitter();\n\n  /**\n   * The unique ID HTML property for each component instance.\n   */\n  readonly id = `conversations-list-table-component-${ConversationsListTableComponent.counter++}`;\n  readonly hostRef = this;\n\n  private _conversations: ConversationThread[] = [];\n  private readonly readUnreadStatusTypeDefault: ReadUnreadStatusType = ReadUnreadStatusType.READ;\n  private readUnreadStatus = this.readUnreadStatusTypeDefault;\n  private removeId: string | undefined;\n  private selectionsGroupForm: NgForm | undefined;\n  private readonly unsubscribe = new Subject();\n\n  /**\n   * The flag that toggles between the open and closed state of the confirmation modal for conversation removal.\n   */\n  removeModalOpened = false;\n\n  /**\n   * The array containing the IDs of selected conversations.\n   */\n  selectedIdsArray: string[] = [];\n\n  /**\n   * The stream with the flag toggling between the draft and the conversation view.\n   */\n  isDraftView$ = of(false);\n\n  private readonly mailboxType$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  constructor(private readonly properties: BaseConversationsListPropertiesService) {}\n\n  private doesParentContainDropdown(node: any): boolean {\n    return !!(node.parentNode && node.parentNode.closest('.dropdown'));\n  }\n\n  ngOnInit() {\n    if (this.reset) {\n      this.reset.pipe(takeUntil(this.unsubscribe)).subscribe(() => this.resetForm());\n    }\n    this.isDraftView$ = this.mailboxType.pipe(\n      take(1),\n      map(type => type === MailboxTypeEnum.drafts),\n    );\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * The flag indicating if the conversation is unread.\n   */\n  get isUnread() {\n    return this.readUnreadStatus === ReadUnreadStatusType.UNREAD;\n  }\n\n  /**\n   * The method to update the list of conversations.\n   */\n  callUpdate() {\n    this.resetForm();\n    this.update.emit();\n  }\n\n  /**\n   * The method to mark a conversation as selected.\n   *\n   * @param event Mouse event\n   * @param conversation Conversation thread data\n   */\n  callSelect(event: MouseEvent, conversation: ConversationThread) {\n    if (this.doesParentContainDropdown(event.target)) {\n      return;\n    }\n    this.select.emit(conversation);\n  }\n\n  /**\n   * The method to mark a conversation as read or unread.\n   *\n   * @param conversationId Conversation id\n   * @param conversationStatus Conversation status\n   */\n  markAsReadUnread(conversationId?: string, conversationStatus?: boolean) {\n    const status: ReadUnreadStatusType =\n      conversationStatus === undefined\n        ? this.readUnreadStatus\n        : conversationStatus\n        ? ReadUnreadStatusType.UNREAD\n        : ReadUnreadStatusType.READ;\n\n    this.read.emit({\n      status,\n      ids: conversationId ? [conversationId] : this.selectedIdsArray,\n    });\n  }\n\n  /**\n   * The method to open the confirmation modal for removal.\n   *\n   * @param id Conversation id\n   */\n  openRemoveModal(id?: string) {\n    this.removeId = id;\n    this.removeModalOpened = true;\n  }\n\n  /**\n   * The method to close the confirmation modal for removal.\n   */\n  closeRemoveModal() {\n    this.removeId = undefined;\n    this.removeModalOpened = false;\n  }\n\n  /**\n   * The method to confirm the remove action and close the modal.\n   */\n  confirmRemoveModal() {\n    this.remove.emit(this.removeId ? [this.removeId] : this.selectedIdsArray);\n\n    this.closeRemoveModal();\n  }\n\n  /**\n   * The method to update the selected conversations form.\n   *\n   * @param ngForm Form object\n   */\n  manageSelectionForm(ngForm?: NgForm) {\n    if (ngForm) {\n      const ids = ngForm.form.value.ids;\n\n      this.selectionsGroupForm = ngForm;\n      this.selectedIdsArray = Object.keys(ids).filter(id => ids[id]);\n\n      if (this.selectedIdsArray.length) {\n        const selectedIdsIncludesUnreadConversation = this.conversations.find(\n          conversation => this.selectedIdsArray.includes(conversation.id) && !conversation.read,\n        );\n\n        this.readUnreadStatus = selectedIdsIncludesUnreadConversation\n          ? ReadUnreadStatusType.READ\n          : ReadUnreadStatusType.UNREAD;\n      } else {\n        this.readUnreadStatus = ReadUnreadStatusType.READ;\n      }\n    }\n  }\n\n  /**\n   * The method to differentiate conversations by IDs in order to optimize loops performance.\n   *\n   * @param _index Index\n   * @param item Conversation thread\n   * @returns Conversation thread id\n   */\n  trackByFn(_index: number, item: ConversationThread): string {\n    return item.id;\n  }\n\n  private resetForm() {\n    if (this.selectionsGroupForm) {\n      this.selectionsGroupForm.reset();\n      this.manageSelectionForm(this.selectionsGroupForm);\n    }\n  }\n\n  get mailboxType(): Observable<string> {\n    return getPropertyValue(this.mailboxType$$.asObservable(), this.properties.mailboxType);\n  }\n}\n\n@Directive({\n  selector: '[bbConversationsListTableCustomizable]',\n})\nexport class ConversationsListTableCustomizableDirective extends BbTemplate<\n  ConversationsListTableComponent,\n  { isDraftView: boolean }\n> {}\n","<ng-container\n  bbConversationsListTableCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    isDraftView: isDraftView$ | async,\n    mailboxType: mailboxType | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbConversationsListTableCustomizable\n  let-host\n  let-isDraftView=\"context.isDraftView\"\n  let-mailboxType=\"context.mailboxType\"\n>\n  <div\n    class=\"sr-only\"\n    i18n=\"Mailbox tab of selected type is open announcement@@messages.messagesConversationsList.openTabType\"\n  >\n    { mailboxType, select, inbox {inbox} outbox {outbox} drafts {drafts} } tab is open,\n  </div>\n  <div class=\"d-md-none\">\n    <div class=\"bb-button-bar\">\n      <ng-container *ngTemplateOutlet=\"reloadBtn\"></ng-container>\n    </div>\n    <table class=\"table\" role=\"presentation\">\n      <tbody role=\"list\">\n        <tr\n          role=\"listitem\"\n          tabindex=\"0\"\n          data-role=\"conversation-mobile\"\n          *ngFor=\"let conversation of host.conversations\"\n          [ngClass]=\"{ 'table-active': !conversation.read }\"\n          (bbKeyboardClick)=\"host.callSelect($event, conversation)\"\n        >\n          <td>\n            <div\n              class=\"text-truncate text-normal bb-text-semi-bold break-word\"\n              *ngIf=\"conversation.subject; else noSubject\"\n              [innerHTML]=\"conversation.subject\"\n            ></div>\n            <div class=\"text-truncate text-small\" *ngIf=\"conversation.sender\">{{ conversation.sender.name }}</div>\n\n            <ng-template #noSubject>\n              <span\n                class=\"bb-text-support\"\n                i18n=\"No subject@@messages.messagesConversationsList.messagesTableMobile.subjectEmptyState\"\n                >No subject</span\n              >\n            </ng-template>\n          </td>\n          <td>\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item text-small\" [attr.aria-label]=\"conversation.timestamp | date: 'mediumDate'\">\n                <span aria-hidden=\"true\">{{ conversation.timestamp | date: 'shortDate' }}</span>\n              </div>\n              <bb-icon-ui\n                *ngIf=\"conversation.important\"\n                bbTooltip=\"High priority\"\n                i18n-bbTooltip=\"High priority@@messages.messagesConversationsList.messagesTable.importantMessage\"\n                container=\"body\"\n                triggers=\"hover\"\n                placement=\"bottom\"\n                class=\"bb-stack__item\"\n                name=\"error\"\n                color=\"danger\"\n                aria-label=\"High priority\"\n                i18n-aria-label=\"@@messages.messagesConversationsList.messagesTable.importantMessage\"\n              ></bb-icon-ui>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div class=\"d-none d-md-block\">\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item--push-right\">\n        <ng-container *ngIf=\"host.selectedIdsArray.length; else noneSelectedTpl\">\n          <span class=\"bb-stack__item bb-text-support\">\n            <span\n              data-role=\"selected-conversations-counter\"\n              i18n=\"Selected|Selected conversations count@@messages.messagesConversationsList.selected\"\n              [attr.aria-label]=\"host.selectedIdsArray.length + ' Selected'\"\n            >\n              <span aria-hidden=\"true\">{{ host.selectedIdsArray.length + ' Selected' }}</span>\n            </span>\n          </span>\n          <span class=\"bb-stack__item bb-text-support\">|</span>\n          <a\n            data-role=\"clear-selection\"\n            href=\"#\"\n            class=\"bb-stack__item bb-text-semi-bold\"\n            i18n=\"\n              Clear Selection|Clear selection button on the top of the table\n              list@@messages.messagesConversationsList.clearSelectionButton\"\n            (click)=\"\n              $event.preventDefault(); selectionsGroupForm.reset(); host.manageSelectionForm(selectionsGroupForm)\n            \"\n            >Clear Selection</a\n          >\n          <button\n            bbButton\n            color=\"link\"\n            [circle]=\"true\"\n            data-role=\"mark-as-read-unread\"\n            i18n-aria-label=\"\n              Toggle read status@@messages.messagesConversationsList.messagesTableMobile.toggleReadStatusAriaLabel\"\n            aria-label=\"Toggle read status\"\n            i18n-bbTooltip=\"\n              Toggle read status@@messages.messagesConversationsList.messagesTable.ToggleReadStatusTooltipText\"\n            bbTooltip=\"Toggle read status\"\n            container=\"body\"\n            triggers=\"hover\"\n            *ngIf=\"!isDraftView\"\n            (click)=\"host.selectedIdsArray.length && host.markAsReadUnread()\"\n          >\n            <bb-icon-ui *ngIf=\"host.isUnread; else readIconTpl\" class=\"bb-text-support\" name=\"markunread\"> </bb-icon-ui>\n            <ng-template #readIconTpl>\n              <bb-icon-ui class=\"bb-text-support\" name=\"drafts\"></bb-icon-ui>\n            </ng-template>\n          </button>\n\n          <button\n            bbButton\n            color=\"link\"\n            data-role=\"Delete\"\n            circle=\"true\"\n            aria-label=\"Delete\"\n            i18n-aria-label=\"Delete aria-label@@messages.messagesConversationsList.deleteButtonAriaLabel\"\n            i18n=\"Delete|Delete button on the top of the table list@@messages.messagesConversationsList.deleteButton\"\n            bbTooltip=\"Delete\"\n            i18n-bbTooltip=\"\n              Delete|Delete button on the top of the table list\n              tooltip@@messages.messagesConversationsList.deleteTooltip\"\n            container=\"body\"\n            triggers=\"hover\"\n            (click)=\"host.openRemoveModal()\"\n          >\n            <bb-icon-ui class=\"bb-text-support\" name=\"delete\"></bb-icon-ui>\n          </button>\n        </ng-container>\n        <ng-template #noneSelectedTpl>\n          <span\n            aria-live=\"assertive\"\n            class=\"sr-only\"\n            data-role=\"none-selected-conversations-counter\"\n            i18n=\"None selected|None selected conversations count@@messages.messagesConversationsList.noneSelected\"\n          >\n            None selected\n          </span>\n        </ng-template>\n        <ng-container *ngIf=\"!host.selectedIdsArray.length\">\n          <ng-container *ngTemplateOutlet=\"reloadBtn\"></ng-container>\n        </ng-container>\n      </div>\n    </div>\n\n    <form #selectionsGroupForm=\"ngForm\">\n      <table class=\"table table-hover\" data-role=\"conversations-list-table\">\n        <caption class=\"sr-only\" i18n=\"Conversations@@messages.messagesConversationsList.conversationsTable\">\n          Conversations\n        </caption>\n        <thead>\n          <tr\n            bb-conversations-list-table-head-ui\n            (change)=\"host.manageSelectionForm(selectionsGroupForm)\"\n            [mailboxType]=\"mailboxType\"\n          ></tr>\n        </thead>\n        <tbody ngModelGroup=\"ids\">\n          <tr\n            [attr.aria-describedby]=\"'bb-cs-' + conversation.id\"\n            bb-conversations-list-table-row-ui\n            tabindex=\"0\"\n            id=\"bb-cs-{{ conversation.id }}\"\n            class=\"bb-messages-conversations-list-item\"\n            data-role=\"conversation\"\n            *ngFor=\"let conversation of host.conversations; trackBy: trackByFn\"\n            [mailboxType]=\"mailboxType\"\n            [conversation]=\"conversation\"\n            [isDraftView]=\"isDraftView\"\n            [customerServiceTitle$]=\"customerServiceTitle$\"\n            [ngClass]=\"{ 'table-active bb-text-semi-bold': conversation.hasOwnProperty('read') && !conversation.read }\"\n            (change)=\"host.manageSelectionForm(selectionsGroupForm)\"\n            (bbKeyboardClick)=\"host.callSelect($event, conversation)\"\n            (remove)=\"host.openRemoveModal(conversation.id)\"\n            (read)=\"host.markAsReadUnread(conversation.id, conversation.read)\"\n          ></tr>\n        </tbody>\n      </table>\n    </form>\n\n    <bb-modal-ui\n      [isOpen]=\"host.removeModalOpened\"\n      (cancel)=\"host.closeRemoveModal()\"\n      aria-describedby=\"messages-list-table-delete-conversation-modal-subtitle\"\n    >\n      <bb-modal-header-ui>\n        <ng-template bbCustomModalHeader>\n          <span\n            class=\"text-large bb-text-semi-bold\"\n            i18n=\"\n              Delete conversation(s)/draft(s)|Header title of the confirmation modal to delete conversation(s) or\n              draft(s)@@messages.messagesConversationsList.messagesDeleteModal.headerTitle\"\n            >Delete {isDraftView + '', select, true {draft(s)} false {conversation(s)}}?</span\n          >\n        </ng-template>\n      </bb-modal-header-ui>\n      <bb-modal-body-ui>\n        <ng-template bbCustomModalBody>\n          <span\n            id=\"messages-list-table-delete-conversation-modal-subtitle\"\n            i18n=\"\n              Are you sure you want to delete the selected conversation(s)?(s)|Body message of the confirmation modal to\n              delete conversation(s)@@messages.messagesConversationsList.messagesDeleteModal.bodyMessage\"\n            >Are you sure you want to delete the selected {isDraftView + '', select, true {draft(s)} false\n            {conversation(s)}}?</span\n          >\n        </ng-template>\n      </bb-modal-body-ui>\n      <bb-modal-footer-ui>\n        <ng-template bbCustomModalFooter>\n          <bb-button-ui\n            color=\"secondary\"\n            i18n=\"\n              Cancel|Cancel button inside the confirmation modal\n              footer@@messages.messagesConversationsList.messagesDeleteModal.cancelButton\"\n            (click)=\"host.closeRemoveModal()\"\n            >Cancel\n          </bb-button-ui>\n          <bb-button-ui\n            color=\"danger\"\n            i18n=\"\n              Delete|Delete button inside the confirmation modal\n              footer@@messages.messagesConversationsList.messagesDeleteModal.deleteButton\"\n            (click)=\"host.confirmRemoveModal()\"\n            >Delete\n          </bb-button-ui>\n        </ng-template>\n      </bb-modal-footer-ui>\n    </bb-modal-ui>\n  </div>\n\n  <ng-template #reloadBtn>\n    <span\n      bbTooltip=\"Refresh\"\n      i18n-bbTooltip=\"Refresh|Refresh button text@@messagesConversationsList.refreshButton\"\n      triggers=\"hover focus\"\n      placement=\"top\"\n      container=\"body\"\n    >\n      <button\n        bbButton\n        color=\"link\"\n        circle=\"true\"\n        data-role=\"refresh\"\n        aria-label=\"Refresh\"\n        i18n-aria-label=\"@@messagesConversationsList.refreshButton\"\n        (click)=\"host.callUpdate()\"\n      >\n        <bb-icon-ui class=\"bb-text-support\" name=\"loading\"></bb-icon-ui>\n      </button>\n    </span>\n  </ng-template>\n</ng-template>\n","import { Component, Directive, ElementRef, Input, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport {\n  catchError,\n  filter,\n  first,\n  map,\n  observeOn,\n  pairwise,\n  scan,\n  switchMap,\n  takeUntil,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { asyncScheduler, BehaviorSubject, combineLatest, merge, Observable, of, Subject } from 'rxjs';\nimport { MessagesConversationsListWidgetService } from './messages-conversations-list-widget-ang.service';\nimport {\n  ConversationsData,\n  ConversationsDataExpanded,\n  ConversationsReadRequest,\n  DraftsData,\n  FromParam,\n  MailboxTypeEnum,\n  MessagesConversationsListWidgetContext,\n  ReadUnreadStatusType,\n} from './model';\nimport {\n  BaseConversationsListPropertiesService,\n  BaseConversationsListWidgetComponent,\n  getPropertyValue,\n  SharedMethodsService,\n  shareReplayOnce,\n} from '@backbase/messages-common';\nimport {\n  ConversationThreadsDeleteResponseBody,\n  DeleteDraftsResponseBody,\n  GetConversationThreadsRequestParams,\n} from '@backbase/messages-v5-http-ang';\n\nexport interface MarkReadUnreadStream {\n  status: ReadUnreadStatusType;\n  changedItems: string[] | null | undefined;\n}\n\nconst FirstPage: FromParam = {\n  from: 0,\n};\n\n@Component({\n  selector: 'bb-messages-conversations-list-widget-ang',\n  providers: [BaseConversationsListPropertiesService],\n  templateUrl: './messages-conversations-list-widget-ang.component.html',\n})\nexport class MessagesConversationsListWidgetComponent\n  extends BaseConversationsListWidgetComponent\n  implements OnDestroy, OnInit\n{\n  readonly hostRef = this;\n\n  /**\n   * Mailbox type property, used for Client widget\n   */\n  @Input('mailboxType') set mailboxTypeValue(value: string) {\n    this.mailboxType$$.next(value);\n  }\n\n  /**\n   * Quantity of items to show per page/to add per request, used for Client and Employee widget\n   */\n  @Input('itemsPerPage') set itemsPerPageValue(value: string | number) {\n    this.itemsPerPage$$.next(Number(value));\n  }\n\n  /**\n   * Event published when Create message modal widget was closed,\n   * used for Client and Employee widget to update list of conversations\n   */\n  @Input('createMessageClosedEventName') set createMessageClosedEventNameValue(value: string) {\n    this.createMessageClosedEventName$$.next(value);\n  }\n\n  /**\n   * Customer service title which should be replaced the name of the sender\n   */\n  @Input('customerServiceTitle') set customerServiceTitleValue(value: string) {\n    this.customerServiceTitle$$.next(value);\n  }\n\n  /**\n   * The notification for the successful message deletion operation.\n   */\n  @ViewChild('messageDeleteSuccess') messageDeleteSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the successful delete operation of multiple messages.\n   */\n  @ViewChild('messageDeleteSuccessMultiple') messageDeleteSuccessMultipleTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for the successful deletion of a draft.\n   */\n  @ViewChild('draftDeleteSuccess') draftDeleteSuccessTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The notification for succssful deletion of multiple drafts.\n   */\n  @ViewChild('draftDeleteSuccessMultiple') draftDeleteSuccessMultipleTpl: TemplateRef<any> | undefined;\n\n  /**\n   * The loading parameter indicating the starting page for the data to be loaded from.\n   */\n  readonly from = new BehaviorSubject<FromParam>(FirstPage);\n\n  /**\n   * The loading flag.\n   */\n  isLoading = false;\n\n  private readonly itemsPerPage$$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly mailboxType$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly createMessageClosedEventName$$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly customerServiceTitle$$ = new BehaviorSubject<string | undefined>(undefined);\n\n  /**\n   * The mailbox type enum (`inbox`, `outbox`, `drafts`).\n   */\n  readonly mailboxTypeEnum = MailboxTypeEnum;\n\n  /**\n   * Quantity of items to show per page/to add per request.\n   */\n  readonly itemsPerPage: Observable<number> = getPropertyValue(this.itemsPerPage$$, this.properties.itemsPerPage);\n\n  /**\n   * Mailbox type property, used for Client widget\n   */\n  readonly mailboxType: Observable<string> = getPropertyValue(this.mailboxType$$, this.properties.mailboxType);\n\n  /**\n   * Customer service title to be displayed as a sender\n   */\n  readonly customerServiceTitle: Observable<string> = getPropertyValue(\n    this.customerServiceTitle$$,\n    this.properties.customerServiceTitle,\n  );\n\n  /**\n   * Event published when Create message modal widget was closed,\n   * used for Client and Employee widget to update list of conversations\n   */\n  readonly createMessageClosedEventName: Observable<string> = getPropertyValue(\n    this.createMessageClosedEventName$$.asObservable(),\n    this.properties.createMessageClosedEventName,\n  );\n\n  private readonly conversationsStream: Observable<ConversationsDataExpanded> = this.from.pipe(\n    withLatestFrom(this.itemsPerPage, this.mailboxType),\n    tap(() => (this.isLoading = true)),\n    switchMap(([from, size, mailboxType]) => this.getData(from, size, mailboxType)),\n    scan((acc, items): ConversationsDataExpanded => this.mergeConversationsData(acc, items)),\n    tap(() => (this.isLoading = false)),\n  );\n\n  private readonly destroyed$ = new Subject<void>();\n\n  private readonly resetSelection = new Subject();\n  private readonly markAsReadUnreadSubject = new Subject<ConversationsReadRequest>();\n  private readonly markAsReadUnreadStream: Observable<MarkReadUnreadStream | null | undefined> =\n    this.markAsReadUnreadSubject.pipe(\n      switchMap(params =>\n        this.messagesService.markConversationsAsReadUnread(params).pipe(\n          map(response => ({\n            changedItems: response && response.changedItems,\n            status: params.status,\n          })),\n          catchError(error => this.showErrorNotification(error)),\n        ),\n      ),\n    );\n\n  /**\n   * The stream with the conversations data.\n   */\n  conversations: Observable<ConversationsDataExpanded> = combineLatest([\n    this.conversationsStream,\n    merge(this.markAsReadUnreadStream, of(undefined)).pipe(\n      scan((acc, value) => value && (acc ? { ...acc, ...value } : { ...value })),\n    ),\n  ]).pipe(\n    map(([conversations, mark]) => {\n      /* istanbul ignore next */\n      if (mark) {\n        const flag = mark.status === ReadUnreadStatusType.READ;\n        const data = conversations.data.map(conversation => {\n          if (mark.changedItems && mark.changedItems.includes(conversation.id)) {\n            conversation.read = flag;\n          }\n\n          return conversation;\n        });\n\n        return {\n          data: data,\n          params: conversations.params,\n          totalCount: conversations.totalCount,\n        };\n      }\n\n      return conversations;\n    }),\n    shareReplayOnce(),\n  );\n\n  private readonly firstNewConversationId$ = this.conversations?.pipe(\n    pairwise(),\n    map(([prevConversations, newConversations]) => {\n      let firstNewConversation = newConversations.data[prevConversations.data.length];\n\n      if (prevConversations.data.length >= newConversations.data.length) {\n        firstNewConversation = newConversations.data[0];\n      }\n\n      return firstNewConversation && firstNewConversation.id;\n    }),\n  );\n\n  constructor(\n    private readonly messagesService: MessagesConversationsListWidgetService,\n    readonly properties: BaseConversationsListPropertiesService,\n    readonly shared: SharedMethodsService,\n    readonly activatedRoute: ActivatedRoute,\n    private readonly element: ElementRef,\n  ) {\n    super(shared, activatedRoute, properties);\n\n    this.createMessageClosedEventName\n      .pipe(\n        first(),\n        switchMap(eventName => this.shared.eventBusFactory(eventName)),\n        takeUntil(this.unsubscribe$),\n        tap(() => this.updateConversations()),\n      )\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.firstNewConversationId$\n      ?.pipe(\n        filter(Boolean),\n        map(id => `#bb-cs-${id}`),\n        observeOn(asyncScheduler),\n        map(elemId => this.element.nativeElement.querySelector(`${elemId}`) as HTMLElement),\n        filter<HTMLElement>(Boolean),\n        takeUntil(this.destroyed$),\n      )\n      .subscribe((elemScrollTo: HTMLElement | undefined) => {\n        elemScrollTo?.focus();\n        elemScrollTo?.scrollIntoView(false);\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * Delete conversations\n   *\n   * @param ids Conversations id list\n   */\n  removeConversations(ids: string[]) {\n    merge(this.deleteConversationsStream(ids), this.deleteDraftsStream(ids))\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        () => {\n          this.resetSelection.next();\n          this.updateConversations();\n        },\n        error => this.showErrorNotification(error),\n      );\n  }\n\n  /**\n   * Get conversations data.\n   *\n   * @param params Get conversation thread request params\n   * @returns Conversations stream\n   */\n  getConversations(params: GetConversationThreadsRequestParams): Observable<ConversationsData> {\n    return this.messagesService.getConversations(params).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorResponse = error;\n\n        return of({ params: FirstPage, data: [], totalCount: 0 });\n      }),\n    );\n  }\n\n  /**\n   * Get drafts data.\n   *\n   * @param draftData Draft size and position\n   * @returns Draft stream\n   */\n  getDrafts({ size, from }: { size: number; from: number }): Observable<DraftsData> {\n    return this.messagesService.getDrafts({ size, from }).pipe(\n      catchError((error: HttpErrorResponse) => {\n        this.errorResponse = error;\n\n        return of({ params: FirstPage, data: [], totalCount: 0 });\n      }),\n    );\n  }\n\n  /**\n   * Mark a message as read or unread.\n   *\n   * @param params Conversation read request\n   */\n  markAsReadUnread(params: ConversationsReadRequest) {\n    this.markAsReadUnreadSubject.next(params);\n  }\n\n  /**\n   * Change the starting page for the conversations loading.\n   *\n   * @param event Starting page params\n   */\n  setLoadingParams(event: FromParam) {\n    this.from.next(event);\n\n    this.onPageChange(event.from);\n  }\n\n  /**\n   * The method to change the starting page to the first one.\n   */\n  updateConversations() {\n    this.from.next(FirstPage);\n  }\n\n  /**\n   * Open the `Compose Message` modal.\n   *\n   * @param draftId Draft id\n   */\n  compose(draftId: string) {\n    this.shared.eventBusPublish('bb.event.messages.create.message.open', { draftId });\n  }\n\n  private deleteConversationsStream(ids: string[]): Observable<ConversationThreadsDeleteResponseBody | null> {\n    return this.mailboxType.pipe(\n      filter(mailboxType => mailboxType !== MailboxTypeEnum.drafts),\n      switchMap(() => this.messagesService.deleteConversations(ids)),\n      tap(response => {\n        if (response) {\n          const messageDeletion =\n            response.deletedItems.length > 1 ? this.messageDeleteSuccessMultipleTpl : this.messageDeleteSuccessTpl;\n\n          this.shared.openNotification(messageDeletion);\n        }\n      }),\n    );\n  }\n\n  private deleteDraftsStream(ids: string[]): Observable<DeleteDraftsResponseBody | null> {\n    return this.mailboxType.pipe(\n      filter(mailboxType => mailboxType === MailboxTypeEnum.drafts),\n      switchMap(() => this.messagesService.deleteDrafts(ids)),\n      tap(response => {\n        if (response) {\n          const draftDeletion =\n            response.deleted.length > 1 ? this.draftDeleteSuccessMultipleTpl : this.draftDeleteSuccessTpl;\n\n          this.shared.openNotification(draftDeletion);\n        }\n      }),\n    );\n  }\n\n  private getData(from: FromParam, size: number, mailboxType: string): Observable<ConversationsDataExpanded> {\n    const result = new Subject<ConversationsData>();\n\n    if (mailboxType === MailboxTypeEnum.drafts) {\n      this.getDrafts({ ...from, size }).subscribe(res => result.next(res as ConversationsData));\n    } else this.getConversations({ ...from, size, mailboxType }).subscribe(res => result.next(res));\n\n    return result.pipe(map((response: ConversationsData) => ({ params: { ...from, size, mailboxType }, ...response })));\n  }\n\n  private mergeConversationsData(\n    acc: ConversationsDataExpanded,\n    items: ConversationsDataExpanded,\n  ): ConversationsDataExpanded {\n    return {\n      params: acc.params,\n      data: items.params.from ? [...acc.data, ...items.data] : items.data,\n      totalCount: items.totalCount,\n    };\n  }\n}\n\n@Directive({\n  selector: '[bbMessagesConversationsListCustomizable]',\n})\nexport class MessagesConversationsListCustomizableDirective extends BbTemplate<\n  MessagesConversationsListWidgetComponent,\n  MessagesConversationsListWidgetContext\n> {}\n","<ng-container\n  bbMessagesConversationsListCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    conversations: conversations | async,\n    mailboxType: mailboxType | async,\n    itemsPerPage: itemsPerPage | async\n  }\"\n></ng-container>\n\n<ng-template\n  bbMessagesConversationsListCustomizable\n  let-host\n  let-conversations=\"context.conversations\"\n  let-mailboxType=\"context.mailboxType\"\n  let-itemsPerPage=\"context.itemsPerPage\"\n>\n  <div class=\"bb-messages-conversations-list__container card card-lg\">\n    <ng-container *ngIf=\"conversations?.data; else loadingState\">\n      <ng-container *ngIf=\"!host.errorResponse; else errorState\">\n        <ng-container *ngIf=\"conversations.data.length; else emptyState\">\n          <bb-conversations-list-table-ui\n            [conversations]=\"conversations.data\"\n            [reset]=\"host.resetSelection\"\n            [mailboxType]=\"host.mailboxType | async\"\n            [customerServiceTitle$]=\"host.customerServiceTitle\"\n            (remove)=\"host.removeConversations($event)\"\n            (read)=\"host.markAsReadUnread($event)\"\n            (select)=\"\n              mailboxType === host.mailboxTypeEnum.drafts ? host.openDraft($event) : host.openConversation($event)\n            \"\n            (update)=\"host.updateConversations()\"\n          ></bb-conversations-list-table-ui>\n          <div class=\"p-3 text-center\">\n            <bb-load-button-ui\n              [from]=\"host.from.value.from\"\n              [isLoading]=\"host.isLoading\"\n              [size]=\"itemsPerPage\"\n              [totalCount]=\"conversations.totalCount\"\n              (paramChange)=\"host.setLoadingParams($event)\"\n              data-role=\"load-more-button\"\n              i18n=\"Load more button name@@messages.messagesConversationsList.loadMoreButton\"\n              >Load more</bb-load-button-ui\n            >\n          </div>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <ng-template #emptyState>\n    <div class=\"bb-state-container\">\n      <ng-container [ngSwitch]=\"mailboxType\">\n        <ng-container *ngSwitchCase=\"host.mailboxTypeEnum.drafts\">\n          <bb-empty-state-ui\n            i18n-title=\"Empty state title@@messages.messagesConversationsList.draftsEmptyStateTitle\"\n            title=\"No Drafts\"\n            i18n-subtitle=\"Empty state subtitle@@messages.messagesConversationsList.draftsEmptyStateSubTitle\"\n            subtitle=\"You don't have any drafts to be displayed.\"\n            iconModifier=\"email\"\n            iconColor=\"muted\"\n          ></bb-empty-state-ui>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"host.mailboxTypeEnum.outbox\">\n          <bb-empty-state-ui\n            i18n-title=\"Empty state title@@messages.messagesConversationsList.emptyStateTitle\"\n            title=\"No Sent Messages\"\n            i18n-subtitle=\"Empty state subtitle@@messages.messagesConversationsList.emptyStateSubtitle\"\n            subtitle=\"You don't have any sent messages to be displayed.\"\n            iconModifier=\"email\"\n            iconColor=\"muted\"\n          ></bb-empty-state-ui>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <bb-empty-state-ui\n            i18n-title=\"Empty state title@@messages.messagesConversationsList.simpleEmptyStateTitle\"\n            title=\"No Conversations\"\n            i18n-subtitle=\"Empty state subtitle@@messages.messagesConversationsList.simpleEmptyStateSubTitle\"\n            subtitle=\"You don't have any conversations to be displayed.\"\n            iconModifier=\"email\"\n            iconColor=\"muted\"\n          ></bb-empty-state-ui>\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <bb-messages-request-error [error]=\"host.errorResponse\"></bb-messages-request-error>\n  </ng-template>\n\n  <ng-template #loadingState>\n    <bb-loading-indicator-ui class=\"py-4\" loaderSize=\"md\"></bb-loading-indicator-ui>\n  </ng-template>\n</ng-template>\n\n<ng-template #messageDeleteSuccess>\n  <span\n    i18n=\"\n      Your conversation has been deleted successfully.|Text of successful conversation\n      deletion@@messages.messagesConversationList.messageSuccessDelete\"\n    >Your conversation has been deleted successfully.</span\n  >\n</ng-template>\n\n<ng-template #messageDeleteSuccessMultiple>\n  <span\n    i18n=\"\n      Your conversations have been deleted successfully.|Text of successful conversations\n      deletion@@messages.messagesConversationList.messageDeleteSuccessMultipleDelete\"\n    >Your conversations have been deleted successfully.</span\n  >\n</ng-template>\n\n<ng-template #draftDeleteSuccess>\n  <span\n    i18n=\"\n      Your draft has been deleted successfully.|Text of successful draft\n      deletion@@messages.messagesConversationList.draftSuccessDelete\"\n    >Your draft has been deleted successfully.</span\n  >\n</ng-template>\n\n<ng-template #draftDeleteSuccessMultiple>\n  <span\n    i18n=\"\n      Your draft have been deleted successfully.|Text of successful draft\n      deletion@@messages.messagesConversationList.draftDeleteSuccessMultipleDelete\"\n    >Your drafts have been deleted successfully.</span\n  >\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { MessagesRequestErrorModule, SharedMethodsModule } from '@backbase/messages-common';\n\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { CheckboxGroupModule } from '@backbase/ui-ang/checkbox-group';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\n\nimport {\n  MessagesConversationsListCustomizableDirective,\n  MessagesConversationsListWidgetComponent,\n} from './messages-conversations-list-widget-ang.component';\nimport { MessagesConversationsListWidgetService } from './messages-conversations-list-widget-ang.service';\nimport {\n  ConversationsListTableComponent,\n  ConversationsListTableCustomizableDirective,\n} from './components/conversations-list-table/conversations-list-table.component';\nimport {\n  ConversationsListTableHeadComponent,\n  ConversationsListTableHeadCustomizableDirective,\n} from './components/conversations-list-table-head/conversations-list-table-head.component';\nimport {\n  ConversationsListTableRowComponent,\n  ConversationsListTableRowCustomizableDirective,\n} from './components/conversations-list-table-row/conversations-list-table-row.component';\n\nconst components = [\n  MessagesConversationsListWidgetComponent,\n  ConversationsListTableComponent,\n  ConversationsListTableHeadComponent,\n  ConversationsListTableRowComponent,\n];\nconst directives = [\n  MessagesConversationsListCustomizableDirective,\n  ConversationsListTableCustomizableDirective,\n  ConversationsListTableHeadCustomizableDirective,\n  ConversationsListTableRowCustomizableDirective,\n];\nconst uiModules = [\n  BadgeModule,\n  ButtonModule,\n  CheckboxGroupModule,\n  DropdownMenuModule,\n  ModalModule,\n  IconModule,\n  InputCheckboxModule,\n  LoadButtonModule,\n  EmptyStateModule,\n  LoadingIndicatorModule,\n  TooltipModule,\n];\n\nconst innerModules = [MessagesRequestErrorModule];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { MessagesConversationsListWidgetComponent },\n    }),\n    KeyboardClickModule,\n    SharedMethodsModule,\n    FormsModule,\n    ...uiModules,\n    ...innerModules,\n  ],\n  providers: [MessagesConversationsListWidgetService],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules, ...innerModules],\n})\nexport class MessagesConversationsListWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tap","map","PUBSUB","Injectable","Inject","BehaviorSubject","getPropertyValue","BaseConversationsListPropertiesService","ControlContainer","NgForm","Component","Input","BbTemplate","Directive","EventEmitter","NgModelGroup","Output","Subject","of","takeUntil","take","TemplateRegistry","withLatestFrom","switchMap","scan","catchError","combineLatest","merge","shareReplayOnce","pairwise","first","filter","observeOn","asyncScheduler","BaseConversationsListWidgetComponent","ViewChild","BadgeModule","ButtonModule","CheckboxGroupModule","DropdownMenuModule","ModalModule","IconModule","InputCheckboxModule","LoadButtonModule","EmptyStateModule","LoadingIndicatorModule","TooltipModule","MessagesRequestErrorModule","CommonModule","KeyboardClickModule","SharedMethodsModule","FormsModule","BackbaseCoreModule","NgModule"],"mappings":"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"}