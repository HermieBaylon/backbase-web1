import { createMocks } from '@backbase/foundation-ang/data-http';
export const ConsentsHttpServiceGetConsentsMocksProvider = createMocks([{
        urlPattern: "/consent/client-api/v2/consents",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "34bf3478-4187-46b1-aab1-20577c5d339c",
                        "tpp": {
                            "id": "0dbbf48e-53dc-4968-8167-6337718f9781",
                            "externalId": "amazon",
                            "name": "Amazon",
                            "website": "https://amazon.com",
                            "imageUrl": "https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png",
                            "isTrusted": true,
                            "mail": "primary@amazon.com",
                            "phonenumber": "8882803321",
                            "address": "Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226",
                            "country": "US"
                        },
                        "status": "ACTIVE",
                        "expiryDate": "2019-03-28T16:41:41.090Z",
                        "numberOfAccounts": 3
                    }, {
                        "id": "ffe7b310-63ff-4c3a-be75-ec5f19da7e9e",
                        "tpp": {
                            "id": "b1e5bca6-2185-42a0-8701-08f4c3497485",
                            "externalId": "netflix",
                            "name": "Netflix",
                            "website": "https://netflix.com",
                            "imageUrl": "https://cdn2.iconfinder.com/data/icons/metro-uinvert-dock/256/Netflix.png",
                            "isTrusted": true,
                            "mail": "support@netflix.com",
                            "phonenumber": "8882803321",
                            "address": "Bowery street 103, 1290 LL, New York, New York, USA",
                            "country": "US"
                        },
                        "status": "REVOKED",
                        "expiryDate": "2019-05-28T16:41:41.090Z",
                        "numberOfAccounts": 1
                    }, {
                        "id": "18dd7b1c-dabf-49bb-b9e3-5f586efd19d3",
                        "tpp": {
                            "id": "b62943b9-811b-446d-ac68-0a38de63d792",
                            "externalId": "some-third-party",
                            "name": "Some third party",
                            "website": "https://some-third-party.com",
                            "isTrusted": false,
                            "mail": "contact@some-third-party.com",
                            "phonenumber": "8882803321",
                            "address": "2967 West Side Avenue, 07649, Angwil, River Edge, New Jersey, USA",
                            "country": "US"
                        },
                        "status": "EXPIRED",
                        "expiryDate": "2018-09-28T16:41:41.090Z",
                        "numberOfAccounts": 2
                    }]
            },
            {
                status: 400,
                body: {
                    "value": {
                        "message": "Bad Request",
                        "errors": [{
                                "message": "Value Exceeded. Must be between {min} and {max}.",
                                "key": "common.api.shoesize",
                                "context": {
                                    "max": "50",
                                    "min": "1"
                                }
                            }]
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "message": "Access to requested resource denied.",
                        "errors": [{
                                "message": "Resource access denied due to an insufficient user quota of {quota}.",
                                "key": "common.api.quota",
                                "context": {
                                    "quota": "someQuota"
                                }
                            }]
                    }
                }
            },
        ]
    }]);
export const ConsentsHttpServiceGetIdByIdgetIdMocksProvider = createMocks([{
        urlPattern: "/consent/client-api/v2/consents/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "34bf3478-4187-46b1-aab1-20577c5d339c",
                    "tpp": {
                        "id": "0dbbf48e-53dc-4968-8167-6337718f9781",
                        "externalId": "amazon",
                        "name": "Amazon",
                        "website": "https://amazon.com",
                        "imageUrl": "https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png",
                        "isTrusted": true,
                        "mail": "primary@amazon.com",
                        "phonenumber": "8882803321",
                        "address": "Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226",
                        "country": "US"
                    },
                    "status": "ACTIVE",
                    "expiryDate": "2019-03-28T16:41:41.090Z",
                    "permissions": ["ReadAccountsDetail", "ReadBalances", "ReadTransactionsDetail"],
                    "accounts": [{
                            "id": "9bf23657-511a-4022-a474-c3617cf1589e",
                            "number": "LV20GOWNKDCDIA03FAQD5",
                            "name": "Ricardo Norton's Current Account",
                            "type": "currentAccount",
                            "currency": "USD",
                            "balance": "9763.34"
                        }, {
                            "id": "dd98797a-a464-4702-ae2f-2214c81a8e69",
                            "number": "AD6548375906DIXVOJTD558B",
                            "name": "Ricardo Norton's Savings Account",
                            "type": "savingsAccount",
                            "currency": "USD",
                            "balance": "3788.61"
                        }, {
                            "id": "c5566c1b-2ebe-45b5-a32e-cf83c3669bbd",
                            "number": "EE511790690392885115",
                            "name": "Ricardo Norton's Credit Card",
                            "type": "creditCard",
                            "currency": "USD",
                            "balance": "2876.76"
                        }, {
                            "id": "cf916772-3676-43a8-89c0-86bd545f84dd",
                            "number": "HR1964204918384144019",
                            "name": "Ricardo Norton's Investment Account",
                            "type": "investmentAccount",
                            "currency": "USD",
                            "balance": "2676.23"
                        }, {
                            "id": "7eaee238-d5a9-40d3-80b9-75a29fea908b",
                            "number": "IE37QNJQ34395947171968",
                            "name": "Ricardo Norton's Mortgage Loan",
                            "type": "mortgage",
                            "currency": "USD",
                            "balance": -150000.0
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "value": {
                        "message": "Bad Request",
                        "errors": [{
                                "message": "Value Exceeded. Must be between {min} and {max}.",
                                "key": "common.api.shoesize",
                                "context": {
                                    "max": "50",
                                    "min": "1"
                                }
                            }]
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "message": "Access to requested resource denied.",
                        "errors": [{
                                "message": "Resource access denied due to an insufficient user quota of {quota}.",
                                "key": "common.api.quota",
                                "context": {
                                    "quota": "someQuota"
                                }
                            }]
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "message": "Resource not found.",
                        "errors": [{
                                "message": "Unable to find the resource requested resource: {resource}.",
                                "key": "common.api.resource",
                                "context": {
                                    "resource": "aResource"
                                }
                            }]
                    }
                }
            },
        ]
    }]);
export const ConsentsHttpServicePostConsentsMocksProvider = createMocks([{
        urlPattern: "/consent/client-api/v2/consents",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "8b3e32ae-88c1-4548-a429-f5834f5aca97"
                }
            },
            {
                status: 400,
                body: {
                    "value": {
                        "message": "Bad Request",
                        "errors": [{
                                "message": "Value Exceeded. Must be between {min} and {max}.",
                                "key": "common.api.shoesize",
                                "context": {
                                    "max": "50",
                                    "min": "1"
                                }
                            }]
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "message": "Access to requested resource denied.",
                        "errors": [{
                                "message": "Resource access denied due to an insufficient user quota of {quota}.",
                                "key": "common.api.quota",
                                "context": {
                                    "quota": "someQuota"
                                }
                            }]
                    }
                }
            },
        ]
    }]);
export const ConsentsHttpServicePostRevokeByIdMocksProvider = createMocks([{
        urlPattern: "/consent/client-api/v2/consents/{id}/revoke",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {}
            },
            {
                status: 400,
                body: {
                    "value": {
                        "message": "Bad Request",
                        "errors": [{
                                "message": "Value Exceeded. Must be between {min} and {max}.",
                                "key": "common.api.shoesize",
                                "context": {
                                    "max": "50",
                                    "min": "1"
                                }
                            }]
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "message": "Access to requested resource denied.",
                        "errors": [{
                                "message": "Resource access denied due to an insufficient user quota of {quota}.",
                                "key": "common.api.quota",
                                "context": {
                                    "quota": "someQuota"
                                }
                            }]
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "message": "Resource not found.",
                        "errors": [{
                                "message": "Unable to find the resource requested resource: {resource}.",
                                "key": "common.api.resource",
                                "context": {
                                    "resource": "aResource"
                                }
                            }]
                    }
                }
            },
        ]
    }]);
export const ConsentsHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/consent/client-api/v2/consents",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "34bf3478-4187-46b1-aab1-20577c5d339c",
                        "tpp": {
                            "id": "0dbbf48e-53dc-4968-8167-6337718f9781",
                            "externalId": "amazon",
                            "name": "Amazon",
                            "website": "https://amazon.com",
                            "imageUrl": "https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png",
                            "isTrusted": true,
                            "mail": "primary@amazon.com",
                            "phonenumber": "8882803321",
                            "address": "Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226",
                            "country": "US"
                        },
                        "status": "ACTIVE",
                        "expiryDate": "2019-03-28T16:41:41.090Z",
                        "numberOfAccounts": 3
                    }, {
                        "id": "ffe7b310-63ff-4c3a-be75-ec5f19da7e9e",
                        "tpp": {
                            "id": "b1e5bca6-2185-42a0-8701-08f4c3497485",
                            "externalId": "netflix",
                            "name": "Netflix",
                            "website": "https://netflix.com",
                            "imageUrl": "https://cdn2.iconfinder.com/data/icons/metro-uinvert-dock/256/Netflix.png",
                            "isTrusted": true,
                            "mail": "support@netflix.com",
                            "phonenumber": "8882803321",
                            "address": "Bowery street 103, 1290 LL, New York, New York, USA",
                            "country": "US"
                        },
                        "status": "REVOKED",
                        "expiryDate": "2019-05-28T16:41:41.090Z",
                        "numberOfAccounts": 1
                    }, {
                        "id": "18dd7b1c-dabf-49bb-b9e3-5f586efd19d3",
                        "tpp": {
                            "id": "b62943b9-811b-446d-ac68-0a38de63d792",
                            "externalId": "some-third-party",
                            "name": "Some third party",
                            "website": "https://some-third-party.com",
                            "isTrusted": false,
                            "mail": "contact@some-third-party.com",
                            "phonenumber": "8882803321",
                            "address": "2967 West Side Avenue, 07649, Angwil, River Edge, New Jersey, USA",
                            "country": "US"
                        },
                        "status": "EXPIRED",
                        "expiryDate": "2018-09-28T16:41:41.090Z",
                        "numberOfAccounts": 2
                    }]
            },
            {
                status: 400,
                body: {
                    "value": {
                        "message": "Bad Request",
                        "errors": [{
                                "message": "Value Exceeded. Must be between {min} and {max}.",
                                "key": "common.api.shoesize",
                                "context": {
                                    "max": "50",
                                    "min": "1"
                                }
                            }]
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "message": "Access to requested resource denied.",
                        "errors": [{
                                "message": "Resource access denied due to an insufficient user quota of {quota}.",
                                "key": "common.api.quota",
                                "context": {
                                    "quota": "someQuota"
                                }
                            }]
                    }
                }
            },
        ]
    },
    {
        urlPattern: "/consent/client-api/v2/consents/{id}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "34bf3478-4187-46b1-aab1-20577c5d339c",
                    "tpp": {
                        "id": "0dbbf48e-53dc-4968-8167-6337718f9781",
                        "externalId": "amazon",
                        "name": "Amazon",
                        "website": "https://amazon.com",
                        "imageUrl": "https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png",
                        "isTrusted": true,
                        "mail": "primary@amazon.com",
                        "phonenumber": "8882803321",
                        "address": "Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226",
                        "country": "US"
                    },
                    "status": "ACTIVE",
                    "expiryDate": "2019-03-28T16:41:41.090Z",
                    "permissions": ["ReadAccountsDetail", "ReadBalances", "ReadTransactionsDetail"],
                    "accounts": [{
                            "id": "9bf23657-511a-4022-a474-c3617cf1589e",
                            "number": "LV20GOWNKDCDIA03FAQD5",
                            "name": "Ricardo Norton's Current Account",
                            "type": "currentAccount",
                            "currency": "USD",
                            "balance": "9763.34"
                        }, {
                            "id": "dd98797a-a464-4702-ae2f-2214c81a8e69",
                            "number": "AD6548375906DIXVOJTD558B",
                            "name": "Ricardo Norton's Savings Account",
                            "type": "savingsAccount",
                            "currency": "USD",
                            "balance": "3788.61"
                        }, {
                            "id": "c5566c1b-2ebe-45b5-a32e-cf83c3669bbd",
                            "number": "EE511790690392885115",
                            "name": "Ricardo Norton's Credit Card",
                            "type": "creditCard",
                            "currency": "USD",
                            "balance": "2876.76"
                        }, {
                            "id": "cf916772-3676-43a8-89c0-86bd545f84dd",
                            "number": "HR1964204918384144019",
                            "name": "Ricardo Norton's Investment Account",
                            "type": "investmentAccount",
                            "currency": "USD",
                            "balance": "2676.23"
                        }, {
                            "id": "7eaee238-d5a9-40d3-80b9-75a29fea908b",
                            "number": "IE37QNJQ34395947171968",
                            "name": "Ricardo Norton's Mortgage Loan",
                            "type": "mortgage",
                            "currency": "USD",
                            "balance": -150000.0
                        }]
                }
            },
            {
                status: 400,
                body: {
                    "value": {
                        "message": "Bad Request",
                        "errors": [{
                                "message": "Value Exceeded. Must be between {min} and {max}.",
                                "key": "common.api.shoesize",
                                "context": {
                                    "max": "50",
                                    "min": "1"
                                }
                            }]
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "message": "Access to requested resource denied.",
                        "errors": [{
                                "message": "Resource access denied due to an insufficient user quota of {quota}.",
                                "key": "common.api.quota",
                                "context": {
                                    "quota": "someQuota"
                                }
                            }]
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "message": "Resource not found.",
                        "errors": [{
                                "message": "Unable to find the resource requested resource: {resource}.",
                                "key": "common.api.resource",
                                "context": {
                                    "resource": "aResource"
                                }
                            }]
                    }
                }
            },
        ]
    },
    {
        urlPattern: "/consent/client-api/v2/consents",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "8b3e32ae-88c1-4548-a429-f5834f5aca97"
                }
            },
            {
                status: 400,
                body: {
                    "value": {
                        "message": "Bad Request",
                        "errors": [{
                                "message": "Value Exceeded. Must be between {min} and {max}.",
                                "key": "common.api.shoesize",
                                "context": {
                                    "max": "50",
                                    "min": "1"
                                }
                            }]
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "message": "Access to requested resource denied.",
                        "errors": [{
                                "message": "Resource access denied due to an insufficient user quota of {quota}.",
                                "key": "common.api.quota",
                                "context": {
                                    "quota": "someQuota"
                                }
                            }]
                    }
                }
            },
        ]
    },
    {
        urlPattern: "/consent/client-api/v2/consents/{id}/revoke",
        method: "POST",
        responses: [
            {
                status: 200,
                body: {}
            },
            {
                status: 400,
                body: {
                    "value": {
                        "message": "Bad Request",
                        "errors": [{
                                "message": "Value Exceeded. Must be between {min} and {max}.",
                                "key": "common.api.shoesize",
                                "context": {
                                    "max": "50",
                                    "min": "1"
                                }
                            }]
                    }
                }
            },
            {
                status: 403,
                body: {
                    "value": {
                        "message": "Access to requested resource denied.",
                        "errors": [{
                                "message": "Resource access denied due to an insufficient user quota of {quota}.",
                                "key": "common.api.quota",
                                "context": {
                                    "quota": "someQuota"
                                }
                            }]
                    }
                }
            },
            {
                status: 404,
                body: {
                    "value": {
                        "message": "Resource not found.",
                        "errors": [{
                                "message": "Unable to find the resource requested resource: {resource}.",
                                "key": "common.api.resource",
                                "context": {
                                    "resource": "aResource"
                                }
                            }]
                    }
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,