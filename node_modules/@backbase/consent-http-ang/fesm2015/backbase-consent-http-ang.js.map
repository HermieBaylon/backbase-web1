{"version":3,"file":"backbase-consent-http-ang.js","sources":["../../model/consentStatus.ts","../../model/permission.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/consentRequests.service.ts","../../api/consentRequests.service.mocks.ts","../../api/consents.service.ts","../../api/consents.service.mocks.ts","../../api/paymentRequests.service.ts","../../api/paymentRequests.service.mocks.ts"],"sourcesContent":["/**\n * Consent client\n * Open banking actions: approve/reject consent, list consents, revoke consent\n *\n * The version of the OpenAPI document: 2.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Status of the consent\n */\nexport type ConsentStatus = 'ACTIVE' | 'REVOKED' | 'EXPIRED';\n\nexport const ConsentStatus = {\n    ACTIVE: 'ACTIVE' as ConsentStatus,\n    REVOKED: 'REVOKED' as ConsentStatus,\n    EXPIRED: 'EXPIRED' as ConsentStatus\n};\n\n","/**\n * Consent client\n * Open banking actions: approve/reject consent, list consents, revoke consent\n *\n * The version of the OpenAPI document: 2.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport type Permission = 'ReadAccountsDetail' | 'ReadBalances' | 'ReadTransactionsDetail' | 'ReadBeneficiariesDetail' | 'ReadDirectDebits' | 'ReadProducts' | 'ReadStandingOrdersDetail' | 'ReadTransactionsCredits' | 'ReadTransactionsDebits';\n\nexport const Permission = {\n    ReadAccountsDetail: 'ReadAccountsDetail' as Permission,\n    ReadBalances: 'ReadBalances' as Permission,\n    ReadTransactionsDetail: 'ReadTransactionsDetail' as Permission,\n    ReadBeneficiariesDetail: 'ReadBeneficiariesDetail' as Permission,\n    ReadDirectDebits: 'ReadDirectDebits' as Permission,\n    ReadProducts: 'ReadProducts' as Permission,\n    ReadStandingOrdersDetail: 'ReadStandingOrdersDetail' as Permission,\n    ReadTransactionsCredits: 'ReadTransactionsCredits' as Permission,\n    ReadTransactionsDebits: 'ReadTransactionsDebits' as Permission\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const CONSENT_BASE_PATH = new InjectionToken<string>('CONSENT_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface ConsentConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class ConsentConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: ConsentConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link ConsentConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link ConsentConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module ConsentConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { ConsentConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class ConsentApiModule {\n    public static forRoot(configurationFactory: () => ConsentConfiguration): ModuleWithProviders<ConsentApiModule> {\n        return {\n            ngModule: ConsentApiModule,\n            providers: [ { provide: ConsentConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ConsentApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: ConsentConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('ConsentApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Consent client\n * Open banking actions: approve/reject consent, list consents, revoke consent\n *\n * The version of the OpenAPI document: 2.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ConsentRequest } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\n\nimport { CONSENT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ConsentConfiguration }                                     from '../configuration';\n\n\nexport interface GetIdByIdRequestParams {\n    /** No description available */\n    [\"id\"]: string;\n}\n\nexport interface PostRejectByIdRequestParams {\n    /** No description available */\n    [\"id\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentRequestsHttpService {\n\n    protected basePath = '/consent';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ConsentConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CONSENT_BASE_PATH) basePath: string, @Optional() configuration: ConsentConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve a Consent Request.\n     * Retrieve a Consent Request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdById(requestParameters: GetIdByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConsentRequest>;\n    /**\n     * Retrieve a Consent Request.\n     * Retrieve a Consent Request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdById(requestParameters: GetIdByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConsentRequest>>;\n    /**\n     * Retrieve a Consent Request.\n     * Retrieve a Consent Request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdById(requestParameters: GetIdByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConsentRequest>>;\n    /**\n     * Retrieve a Consent Request.\n     * Retrieve a Consent Request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdById(requestParameters: GetIdByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getIdById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ConsentRequest>(`${this.configuration.basePath}/client-api/v2/consent-requests/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getIdByIdUrl(requestParameters: GetIdByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getIdById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/consent-requests/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Reject Consent Request.\n     * Reject Consent Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectById(requestParameters: PostRejectByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<string>;\n    /**\n     * Reject Consent Request.\n     * Reject Consent Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectById(requestParameters: PostRejectByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<string>>;\n    /**\n     * Reject Consent Request.\n     * Reject Consent Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectById(requestParameters: PostRejectByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<string>>;\n    /**\n     * Reject Consent Request.\n     * Reject Consent Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectById(requestParameters: PostRejectByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postRejectById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<string>(`${this.configuration.basePath}/client-api/v2/consent-requests/${encodeURIComponent(String(_id))}/reject`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postRejectByIdUrl(requestParameters: PostRejectByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postRejectById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/consent-requests/${encodeURIComponent(String(_id))}/reject`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /consent/client-api/v2/consent-requests/{id} URL pattern\n*/\nexport const ConsentRequestsHttpServiceGetIdByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/consent-requests/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"34bf3478-4187-46b1-aab1-20577c5d339c\",\n  \"tpp\" : {\n    \"id\" : \"0dbbf48e-53dc-4968-8167-6337718f9781\",\n    \"externalId\" : \"amazon\",\n    \"name\" : \"Amazon\",\n    \"website\" : \"https://amazon.com\",\n    \"imageUrl\" : \"https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"primary@amazon.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226\",\n    \"country\" : \"US\"\n  },\n  \"expiryDate\" : \"2019-03-28T16:41:41.090Z\",\n  \"permissions\" : [ \"ReadAccountsDetail\", \"ReadBalances\", \"ReadTransactionsDetail\" ],\n  \"allowConsentRedirectUrl\" : \"https://amazon.com\",\n  \"rejectConsentRedirectUrl\" : \"https://google.com\",\n  \"accounts\" : [ {\n    \"id\" : \"9bf23657-511a-4022-a474-c3617cf1589e\",\n    \"number\" : \"LV20GOWNKDCDIA03FAQD5\",\n    \"name\" : \"Ricardo Norton's Current Account\",\n    \"type\" : \"currentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"9763.34\"\n  }, {\n    \"id\" : \"dd98797a-a464-4702-ae2f-2214c81a8e69\",\n    \"number\" : \"AD6548375906DIXVOJTD558B\",\n    \"name\" : \"Ricardo Norton's Savings Account\",\n    \"type\" : \"savingsAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"3788.61\"\n  }, {\n    \"id\" : \"c5566c1b-2ebe-45b5-a32e-cf83c3669bbd\",\n    \"number\" : \"EE511790690392885115\",\n    \"name\" : \"Ricardo Norton's Credit Card\",\n    \"type\" : \"creditCard\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2876.76\"\n  }, {\n    \"id\" : \"cf916772-3676-43a8-89c0-86bd545f84dd\",\n    \"number\" : \"HR1964204918384144019\",\n    \"name\" : \"Ricardo Norton's Investment Account\",\n    \"type\" : \"investmentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2676.23\"\n  }, {\n    \"id\" : \"7eaee238-d5a9-40d3-80b9-75a29fea908b\",\n    \"number\" : \"IE37QNJQ34395947171968\",\n    \"name\" : \"Ricardo Norton's Mortgage Loan\",\n    \"type\" : \"mortgage\",\n    \"currency\" : \"USD\",\n    \"balance\" : -150000.0\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /consent/client-api/v2/consent-requests/{id}/reject URL pattern\n*/\nexport const ConsentRequestsHttpServicePostRejectByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/consent-requests/{id}/reject\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n\nexport const ConsentRequestsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/consent/client-api/v2/consent-requests/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"34bf3478-4187-46b1-aab1-20577c5d339c\",\n  \"tpp\" : {\n    \"id\" : \"0dbbf48e-53dc-4968-8167-6337718f9781\",\n    \"externalId\" : \"amazon\",\n    \"name\" : \"Amazon\",\n    \"website\" : \"https://amazon.com\",\n    \"imageUrl\" : \"https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"primary@amazon.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226\",\n    \"country\" : \"US\"\n  },\n  \"expiryDate\" : \"2019-03-28T16:41:41.090Z\",\n  \"permissions\" : [ \"ReadAccountsDetail\", \"ReadBalances\", \"ReadTransactionsDetail\" ],\n  \"allowConsentRedirectUrl\" : \"https://amazon.com\",\n  \"rejectConsentRedirectUrl\" : \"https://google.com\",\n  \"accounts\" : [ {\n    \"id\" : \"9bf23657-511a-4022-a474-c3617cf1589e\",\n    \"number\" : \"LV20GOWNKDCDIA03FAQD5\",\n    \"name\" : \"Ricardo Norton's Current Account\",\n    \"type\" : \"currentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"9763.34\"\n  }, {\n    \"id\" : \"dd98797a-a464-4702-ae2f-2214c81a8e69\",\n    \"number\" : \"AD6548375906DIXVOJTD558B\",\n    \"name\" : \"Ricardo Norton's Savings Account\",\n    \"type\" : \"savingsAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"3788.61\"\n  }, {\n    \"id\" : \"c5566c1b-2ebe-45b5-a32e-cf83c3669bbd\",\n    \"number\" : \"EE511790690392885115\",\n    \"name\" : \"Ricardo Norton's Credit Card\",\n    \"type\" : \"creditCard\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2876.76\"\n  }, {\n    \"id\" : \"cf916772-3676-43a8-89c0-86bd545f84dd\",\n    \"number\" : \"HR1964204918384144019\",\n    \"name\" : \"Ricardo Norton's Investment Account\",\n    \"type\" : \"investmentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2676.23\"\n  }, {\n    \"id\" : \"7eaee238-d5a9-40d3-80b9-75a29fea908b\",\n    \"number\" : \"IE37QNJQ34395947171968\",\n    \"name\" : \"Ricardo Norton's Mortgage Loan\",\n    \"type\" : \"mortgage\",\n    \"currency\" : \"USD\",\n    \"balance\" : -150000.0\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/consent/client-api/v2/consent-requests/{id}/reject\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Consent client\n * Open banking actions: approve/reject consent, list consents, revoke consent\n *\n * The version of the OpenAPI document: 2.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { Consent } from '../model/models';\nimport { ConsentListItem } from '../model/models';\nimport { ConsentPost } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { Identifier } from '../model/models';\nimport { NotFoundError } from '../model/models';\n\nimport { CONSENT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ConsentConfiguration }                                     from '../configuration';\n\n\nexport interface GetIdByIdgetIdRequestParams {\n    /** No description available */\n    [\"id\"]: string;\n}\n\nexport interface PostConsentsRequestParams {\n    /** Create Consent */\n    [\"consentPost\"]?: ConsentPost;\n}\n\nexport interface PostRevokeByIdRequestParams {\n    /** No description available */\n    [\"id\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsHttpService {\n\n    protected basePath = '/consent';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ConsentConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CONSENT_BASE_PATH) basePath: string, @Optional() configuration: ConsentConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Consents List.\n     * Consents List\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConsents(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ConsentListItem>>;\n    /**\n     * Consents List.\n     * Consents List\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConsents(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ConsentListItem>>>;\n    /**\n     * Consents List.\n     * Consents List\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConsents(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ConsentListItem>>>;\n    /**\n     * Consents List.\n     * Consents List\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConsents(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ConsentListItem>>(`${this.configuration.basePath}/client-api/v2/consents`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getConsentsUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/consents`;\n    }\n\n    /**\n     * Consent Information.\n     * Consent Information\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdByIdgetId(requestParameters: GetIdByIdgetIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Consent>;\n    /**\n     * Consent Information.\n     * Consent Information\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdByIdgetId(requestParameters: GetIdByIdgetIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Consent>>;\n    /**\n     * Consent Information.\n     * Consent Information\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdByIdgetId(requestParameters: GetIdByIdgetIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Consent>>;\n    /**\n     * Consent Information.\n     * Consent Information\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdByIdgetId(requestParameters: GetIdByIdgetIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getIdByIdgetId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Consent>(`${this.configuration.basePath}/client-api/v2/consents/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getIdByIdgetIdUrl(requestParameters: GetIdByIdgetIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getIdByIdgetId.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/consents/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Create Consent.\n     * Create Consent\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConsents(requestParameters: PostConsentsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Identifier>;\n    /**\n     * Create Consent.\n     * Create Consent\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConsents(requestParameters: PostConsentsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Identifier>>;\n    /**\n     * Create Consent.\n     * Create Consent\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConsents(requestParameters: PostConsentsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Identifier>>;\n    /**\n     * Create Consent.\n     * Create Consent\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConsents(requestParameters: PostConsentsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _consentPost = requestParameters[\"consentPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Identifier>(`${this.configuration.basePath}/client-api/v2/consents`,\n            _consentPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postConsentsUrl(requestParameters: PostConsentsRequestParams): string {\n        const _consentPost = requestParameters[\"consentPost\"];\n        return `${this.configuration.basePath}/client-api/v2/consents`;\n    }\n\n    /**\n     * Revoke Consent.\n     * Revoke Consent\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRevokeById(requestParameters: PostRevokeByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<string>;\n    /**\n     * Revoke Consent.\n     * Revoke Consent\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRevokeById(requestParameters: PostRevokeByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<string>>;\n    /**\n     * Revoke Consent.\n     * Revoke Consent\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRevokeById(requestParameters: PostRevokeByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<string>>;\n    /**\n     * Revoke Consent.\n     * Revoke Consent\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRevokeById(requestParameters: PostRevokeByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postRevokeById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<string>(`${this.configuration.basePath}/client-api/v2/consents/${encodeURIComponent(String(_id))}/revoke`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postRevokeByIdUrl(requestParameters: PostRevokeByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postRevokeById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/consents/${encodeURIComponent(String(_id))}/revoke`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /consent/client-api/v2/consents URL pattern\n*/\nexport const ConsentsHttpServiceGetConsentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/consents\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"34bf3478-4187-46b1-aab1-20577c5d339c\",\n  \"tpp\" : {\n    \"id\" : \"0dbbf48e-53dc-4968-8167-6337718f9781\",\n    \"externalId\" : \"amazon\",\n    \"name\" : \"Amazon\",\n    \"website\" : \"https://amazon.com\",\n    \"imageUrl\" : \"https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"primary@amazon.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226\",\n    \"country\" : \"US\"\n  },\n  \"status\" : \"ACTIVE\",\n  \"expiryDate\" : \"2019-03-28T16:41:41.090Z\",\n  \"numberOfAccounts\" : 3\n}, {\n  \"id\" : \"ffe7b310-63ff-4c3a-be75-ec5f19da7e9e\",\n  \"tpp\" : {\n    \"id\" : \"b1e5bca6-2185-42a0-8701-08f4c3497485\",\n    \"externalId\" : \"netflix\",\n    \"name\" : \"Netflix\",\n    \"website\" : \"https://netflix.com\",\n    \"imageUrl\" : \"https://cdn2.iconfinder.com/data/icons/metro-uinvert-dock/256/Netflix.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"support@netflix.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Bowery street 103, 1290 LL, New York, New York, USA\",\n    \"country\" : \"US\"\n  },\n  \"status\" : \"REVOKED\",\n  \"expiryDate\" : \"2019-05-28T16:41:41.090Z\",\n  \"numberOfAccounts\" : 1\n}, {\n  \"id\" : \"18dd7b1c-dabf-49bb-b9e3-5f586efd19d3\",\n  \"tpp\" : {\n    \"id\" : \"b62943b9-811b-446d-ac68-0a38de63d792\",\n    \"externalId\" : \"some-third-party\",\n    \"name\" : \"Some third party\",\n    \"website\" : \"https://some-third-party.com\",\n    \"isTrusted\" : false,\n    \"mail\" : \"contact@some-third-party.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"2967 West Side Avenue, 07649, Angwil, River Edge, New Jersey, USA\",\n    \"country\" : \"US\"\n  },\n  \"status\" : \"EXPIRED\",\n  \"expiryDate\" : \"2018-09-28T16:41:41.090Z\",\n  \"numberOfAccounts\" : 2\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /consent/client-api/v2/consents/{id} URL pattern\n*/\nexport const ConsentsHttpServiceGetIdByIdgetIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/consents/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"34bf3478-4187-46b1-aab1-20577c5d339c\",\n  \"tpp\" : {\n    \"id\" : \"0dbbf48e-53dc-4968-8167-6337718f9781\",\n    \"externalId\" : \"amazon\",\n    \"name\" : \"Amazon\",\n    \"website\" : \"https://amazon.com\",\n    \"imageUrl\" : \"https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"primary@amazon.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226\",\n    \"country\" : \"US\"\n  },\n  \"status\" : \"ACTIVE\",\n  \"expiryDate\" : \"2019-03-28T16:41:41.090Z\",\n  \"permissions\" : [ \"ReadAccountsDetail\", \"ReadBalances\", \"ReadTransactionsDetail\" ],\n  \"accounts\" : [ {\n    \"id\" : \"9bf23657-511a-4022-a474-c3617cf1589e\",\n    \"number\" : \"LV20GOWNKDCDIA03FAQD5\",\n    \"name\" : \"Ricardo Norton's Current Account\",\n    \"type\" : \"currentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"9763.34\"\n  }, {\n    \"id\" : \"dd98797a-a464-4702-ae2f-2214c81a8e69\",\n    \"number\" : \"AD6548375906DIXVOJTD558B\",\n    \"name\" : \"Ricardo Norton's Savings Account\",\n    \"type\" : \"savingsAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"3788.61\"\n  }, {\n    \"id\" : \"c5566c1b-2ebe-45b5-a32e-cf83c3669bbd\",\n    \"number\" : \"EE511790690392885115\",\n    \"name\" : \"Ricardo Norton's Credit Card\",\n    \"type\" : \"creditCard\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2876.76\"\n  }, {\n    \"id\" : \"cf916772-3676-43a8-89c0-86bd545f84dd\",\n    \"number\" : \"HR1964204918384144019\",\n    \"name\" : \"Ricardo Norton's Investment Account\",\n    \"type\" : \"investmentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2676.23\"\n  }, {\n    \"id\" : \"7eaee238-d5a9-40d3-80b9-75a29fea908b\",\n    \"number\" : \"IE37QNJQ34395947171968\",\n    \"name\" : \"Ricardo Norton's Mortgage Loan\",\n    \"type\" : \"mortgage\",\n    \"currency\" : \"USD\",\n    \"balance\" : -150000.0\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /consent/client-api/v2/consents URL pattern\n*/\nexport const ConsentsHttpServicePostConsentsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/consents\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"8b3e32ae-88c1-4548-a429-f5834f5aca97\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /consent/client-api/v2/consents/{id}/revoke URL pattern\n*/\nexport const ConsentsHttpServicePostRevokeByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/consents/{id}/revoke\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n\nexport const ConsentsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/consent/client-api/v2/consents\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"34bf3478-4187-46b1-aab1-20577c5d339c\",\n  \"tpp\" : {\n    \"id\" : \"0dbbf48e-53dc-4968-8167-6337718f9781\",\n    \"externalId\" : \"amazon\",\n    \"name\" : \"Amazon\",\n    \"website\" : \"https://amazon.com\",\n    \"imageUrl\" : \"https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"primary@amazon.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226\",\n    \"country\" : \"US\"\n  },\n  \"status\" : \"ACTIVE\",\n  \"expiryDate\" : \"2019-03-28T16:41:41.090Z\",\n  \"numberOfAccounts\" : 3\n}, {\n  \"id\" : \"ffe7b310-63ff-4c3a-be75-ec5f19da7e9e\",\n  \"tpp\" : {\n    \"id\" : \"b1e5bca6-2185-42a0-8701-08f4c3497485\",\n    \"externalId\" : \"netflix\",\n    \"name\" : \"Netflix\",\n    \"website\" : \"https://netflix.com\",\n    \"imageUrl\" : \"https://cdn2.iconfinder.com/data/icons/metro-uinvert-dock/256/Netflix.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"support@netflix.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Bowery street 103, 1290 LL, New York, New York, USA\",\n    \"country\" : \"US\"\n  },\n  \"status\" : \"REVOKED\",\n  \"expiryDate\" : \"2019-05-28T16:41:41.090Z\",\n  \"numberOfAccounts\" : 1\n}, {\n  \"id\" : \"18dd7b1c-dabf-49bb-b9e3-5f586efd19d3\",\n  \"tpp\" : {\n    \"id\" : \"b62943b9-811b-446d-ac68-0a38de63d792\",\n    \"externalId\" : \"some-third-party\",\n    \"name\" : \"Some third party\",\n    \"website\" : \"https://some-third-party.com\",\n    \"isTrusted\" : false,\n    \"mail\" : \"contact@some-third-party.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"2967 West Side Avenue, 07649, Angwil, River Edge, New Jersey, USA\",\n    \"country\" : \"US\"\n  },\n  \"status\" : \"EXPIRED\",\n  \"expiryDate\" : \"2018-09-28T16:41:41.090Z\",\n  \"numberOfAccounts\" : 2\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/consent/client-api/v2/consents/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"34bf3478-4187-46b1-aab1-20577c5d339c\",\n  \"tpp\" : {\n    \"id\" : \"0dbbf48e-53dc-4968-8167-6337718f9781\",\n    \"externalId\" : \"amazon\",\n    \"name\" : \"Amazon\",\n    \"website\" : \"https://amazon.com\",\n    \"imageUrl\" : \"https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"primary@amazon.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226\",\n    \"country\" : \"US\"\n  },\n  \"status\" : \"ACTIVE\",\n  \"expiryDate\" : \"2019-03-28T16:41:41.090Z\",\n  \"permissions\" : [ \"ReadAccountsDetail\", \"ReadBalances\", \"ReadTransactionsDetail\" ],\n  \"accounts\" : [ {\n    \"id\" : \"9bf23657-511a-4022-a474-c3617cf1589e\",\n    \"number\" : \"LV20GOWNKDCDIA03FAQD5\",\n    \"name\" : \"Ricardo Norton's Current Account\",\n    \"type\" : \"currentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"9763.34\"\n  }, {\n    \"id\" : \"dd98797a-a464-4702-ae2f-2214c81a8e69\",\n    \"number\" : \"AD6548375906DIXVOJTD558B\",\n    \"name\" : \"Ricardo Norton's Savings Account\",\n    \"type\" : \"savingsAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"3788.61\"\n  }, {\n    \"id\" : \"c5566c1b-2ebe-45b5-a32e-cf83c3669bbd\",\n    \"number\" : \"EE511790690392885115\",\n    \"name\" : \"Ricardo Norton's Credit Card\",\n    \"type\" : \"creditCard\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2876.76\"\n  }, {\n    \"id\" : \"cf916772-3676-43a8-89c0-86bd545f84dd\",\n    \"number\" : \"HR1964204918384144019\",\n    \"name\" : \"Ricardo Norton's Investment Account\",\n    \"type\" : \"investmentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2676.23\"\n  }, {\n    \"id\" : \"7eaee238-d5a9-40d3-80b9-75a29fea908b\",\n    \"number\" : \"IE37QNJQ34395947171968\",\n    \"name\" : \"Ricardo Norton's Mortgage Loan\",\n    \"type\" : \"mortgage\",\n    \"currency\" : \"USD\",\n    \"balance\" : -150000.0\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/consent/client-api/v2/consents\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"8b3e32ae-88c1-4548-a429-f5834f5aca97\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/consent/client-api/v2/consents/{id}/revoke\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Consent client\n * Open banking actions: approve/reject consent, list consents, revoke consent\n *\n * The version of the OpenAPI document: 2.3.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PaymentPost } from '../model/models';\nimport { PaymentRequest } from '../model/models';\n\nimport { CONSENT_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ConsentConfiguration }                                     from '../configuration';\n\n\nexport interface GetIdByIdgetPaymentRequestByIdRequestParams {\n    /** No description available */\n    [\"id\"]: string;\n}\n\nexport interface PostConfirmByIdRequestParams {\n    /** No description available */\n    [\"id\"]: string;\n    /** Confirm Payment Request */\n    [\"paymentPost\"]?: PaymentPost;\n}\n\nexport interface PostRejectByIdpostRejectRequestParams {\n    /** No description available */\n    [\"id\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentRequestsHttpService {\n\n    protected basePath = '/consent';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ConsentConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CONSENT_BASE_PATH) basePath: string, @Optional() configuration: ConsentConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve a Payment Request.\n     * Retrieve a Payment Request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdByIdgetPaymentRequestById(requestParameters: GetIdByIdgetPaymentRequestByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PaymentRequest>;\n    /**\n     * Retrieve a Payment Request.\n     * Retrieve a Payment Request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdByIdgetPaymentRequestById(requestParameters: GetIdByIdgetPaymentRequestByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PaymentRequest>>;\n    /**\n     * Retrieve a Payment Request.\n     * Retrieve a Payment Request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdByIdgetPaymentRequestById(requestParameters: GetIdByIdgetPaymentRequestByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PaymentRequest>>;\n    /**\n     * Retrieve a Payment Request.\n     * Retrieve a Payment Request.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getIdByIdgetPaymentRequestById(requestParameters: GetIdByIdgetPaymentRequestByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getIdByIdgetPaymentRequestById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PaymentRequest>(`${this.configuration.basePath}/client-api/v2/payment-requests/${encodeURIComponent(String(_id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getIdByIdgetPaymentRequestByIdUrl(requestParameters: GetIdByIdgetPaymentRequestByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getIdByIdgetPaymentRequestById.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-requests/${encodeURIComponent(String(_id))}`;\n    }\n\n    /**\n     * Confirm Payment Request.\n     * Confirm Payment Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConfirmById(requestParameters: PostConfirmByIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<string>;\n    /**\n     * Confirm Payment Request.\n     * Confirm Payment Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConfirmById(requestParameters: PostConfirmByIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<string>>;\n    /**\n     * Confirm Payment Request.\n     * Confirm Payment Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConfirmById(requestParameters: PostConfirmByIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<string>>;\n    /**\n     * Confirm Payment Request.\n     * Confirm Payment Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postConfirmById(requestParameters: PostConfirmByIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postConfirmById.');\n        }\n        const _paymentPost = requestParameters[\"paymentPost\"];\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<string>(`${this.configuration.basePath}/client-api/v2/payment-requests/${encodeURIComponent(String(_id))}/confirm`,\n            _paymentPost,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postConfirmByIdUrl(requestParameters: PostConfirmByIdRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postConfirmById.');\n        }\n        const _paymentPost = requestParameters[\"paymentPost\"];\n        return `${this.configuration.basePath}/client-api/v2/payment-requests/${encodeURIComponent(String(_id))}/confirm`;\n    }\n\n    /**\n     * Reject Payment Request.\n     * Reject Payment Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectByIdpostReject(requestParameters: PostRejectByIdpostRejectRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<string>;\n    /**\n     * Reject Payment Request.\n     * Reject Payment Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectByIdpostReject(requestParameters: PostRejectByIdpostRejectRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<string>>;\n    /**\n     * Reject Payment Request.\n     * Reject Payment Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectByIdpostReject(requestParameters: PostRejectByIdpostRejectRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<string>>;\n    /**\n     * Reject Payment Request.\n     * Reject Payment Request\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postRejectByIdpostReject(requestParameters: PostRejectByIdpostRejectRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postRejectByIdpostReject.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<string>(`${this.configuration.basePath}/client-api/v2/payment-requests/${encodeURIComponent(String(_id))}/reject`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postRejectByIdpostRejectUrl(requestParameters: PostRejectByIdpostRejectRequestParams): string {\n        const _id = requestParameters[\"id\"];\n        if (_id === null || _id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling postRejectByIdpostReject.');\n        }\n        return `${this.configuration.basePath}/client-api/v2/payment-requests/${encodeURIComponent(String(_id))}/reject`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /consent/client-api/v2/payment-requests/{id} URL pattern\n*/\nexport const PaymentRequestsHttpServiceGetIdByIdgetPaymentRequestByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/payment-requests/{id}\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"34bf3478-4187-46b1-aab1-20577c5d339c\",\n  \"tpp\" : {\n    \"id\" : \"0dbbf48e-53dc-4968-8167-6337718f9781\",\n    \"externalId\" : \"amazon\",\n    \"name\" : \"Amazon\",\n    \"website\" : \"https://amazon.com\",\n    \"imageUrl\" : \"https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"primary@amazon.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226\",\n    \"country\" : \"US\"\n  },\n  \"amount\" : \"100.00\",\n  \"currency\" : \"USD\",\n  \"allowPaymentRedirectUrl\" : \"https://amazon.com\",\n  \"rejectPaymentRedirectUrl\" : \"https://google.com\",\n  \"details\" : \"Purchase of 1 year subscription for Amazon AWS for Backbase R&D B.V.\",\n  \"selectedAccount\" : {\n    \"id\" : \"c5566c1b-2ebe-45b5-a32e-cf83c3669bbd\",\n    \"number\" : \"EE511790690392885115\",\n    \"name\" : \"Ricardo Norton's Credit Card\",\n    \"type\" : \"creditCard\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2876.76\"\n  },\n  \"accounts\" : [ {\n    \"id\" : \"9bf23657-511a-4022-a474-c3617cf1589e\",\n    \"number\" : \"LV20GOWNKDCDIA03FAQD5\",\n    \"name\" : \"Ricardo Norton's Current Account\",\n    \"type\" : \"currentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"9763.34\"\n  }, {\n    \"id\" : \"dd98797a-a464-4702-ae2f-2214c81a8e69\",\n    \"number\" : \"AD6548375906DIXVOJTD558B\",\n    \"name\" : \"Ricardo Norton's Savings Account\",\n    \"type\" : \"savingsAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"3788.61\"\n  }, {\n    \"id\" : \"c5566c1b-2ebe-45b5-a32e-cf83c3669bbd\",\n    \"number\" : \"EE511790690392885115\",\n    \"name\" : \"Ricardo Norton's Credit Card\",\n    \"type\" : \"creditCard\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2876.76\"\n  }, {\n    \"id\" : \"cf916772-3676-43a8-89c0-86bd545f84dd\",\n    \"number\" : \"HR1964204918384144019\",\n    \"name\" : \"Ricardo Norton's Investment Account\",\n    \"type\" : \"investmentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2676.23\"\n  }, {\n    \"id\" : \"7eaee238-d5a9-40d3-80b9-75a29fea908b\",\n    \"number\" : \"IE37QNJQ34395947171968\",\n    \"name\" : \"Ricardo Norton's Mortgage Loan\",\n    \"type\" : \"mortgage\",\n    \"currency\" : \"USD\",\n    \"balance\" : -150000.0\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /consent/client-api/v2/payment-requests/{id}/confirm URL pattern\n*/\nexport const PaymentRequestsHttpServicePostConfirmByIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/payment-requests/{id}/confirm\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /consent/client-api/v2/payment-requests/{id}/reject URL pattern\n*/\nexport const PaymentRequestsHttpServicePostRejectByIdpostRejectMocksProvider: Provider = createMocks([{\n        urlPattern: \"/consent/client-api/v2/payment-requests/{id}/reject\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: { }\n                },\n                {\n                    status: 400,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n                },\n    ]\n}]);\n\nexport const PaymentRequestsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/consent/client-api/v2/payment-requests/{id}\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"34bf3478-4187-46b1-aab1-20577c5d339c\",\n  \"tpp\" : {\n    \"id\" : \"0dbbf48e-53dc-4968-8167-6337718f9781\",\n    \"externalId\" : \"amazon\",\n    \"name\" : \"Amazon\",\n    \"website\" : \"https://amazon.com\",\n    \"imageUrl\" : \"https://cdn0.iconfinder.com/data/icons/most-usable-logos/120/Amazon-48.png\",\n    \"isTrusted\" : true,\n    \"mail\" : \"primary@amazon.com\",\n    \"phonenumber\" : \"8882803321\",\n    \"address\" : \"Amazon.com, Inc. Customer Service PO Box 81226 Seattle, WA 98108-1226\",\n    \"country\" : \"US\"\n  },\n  \"amount\" : \"100.00\",\n  \"currency\" : \"USD\",\n  \"allowPaymentRedirectUrl\" : \"https://amazon.com\",\n  \"rejectPaymentRedirectUrl\" : \"https://google.com\",\n  \"details\" : \"Purchase of 1 year subscription for Amazon AWS for Backbase R&D B.V.\",\n  \"selectedAccount\" : {\n    \"id\" : \"c5566c1b-2ebe-45b5-a32e-cf83c3669bbd\",\n    \"number\" : \"EE511790690392885115\",\n    \"name\" : \"Ricardo Norton's Credit Card\",\n    \"type\" : \"creditCard\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2876.76\"\n  },\n  \"accounts\" : [ {\n    \"id\" : \"9bf23657-511a-4022-a474-c3617cf1589e\",\n    \"number\" : \"LV20GOWNKDCDIA03FAQD5\",\n    \"name\" : \"Ricardo Norton's Current Account\",\n    \"type\" : \"currentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"9763.34\"\n  }, {\n    \"id\" : \"dd98797a-a464-4702-ae2f-2214c81a8e69\",\n    \"number\" : \"AD6548375906DIXVOJTD558B\",\n    \"name\" : \"Ricardo Norton's Savings Account\",\n    \"type\" : \"savingsAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"3788.61\"\n  }, {\n    \"id\" : \"c5566c1b-2ebe-45b5-a32e-cf83c3669bbd\",\n    \"number\" : \"EE511790690392885115\",\n    \"name\" : \"Ricardo Norton's Credit Card\",\n    \"type\" : \"creditCard\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2876.76\"\n  }, {\n    \"id\" : \"cf916772-3676-43a8-89c0-86bd545f84dd\",\n    \"number\" : \"HR1964204918384144019\",\n    \"name\" : \"Ricardo Norton's Investment Account\",\n    \"type\" : \"investmentAccount\",\n    \"currency\" : \"USD\",\n    \"balance\" : \"2676.23\"\n  }, {\n    \"id\" : \"7eaee238-d5a9-40d3-80b9-75a29fea908b\",\n    \"number\" : \"IE37QNJQ34395947171968\",\n    \"name\" : \"Ricardo Norton's Mortgage Loan\",\n    \"type\" : \"mortgage\",\n    \"currency\" : \"USD\",\n    \"balance\" : -150000.0\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/consent/client-api/v2/payment-requests/{id}/confirm\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/consent/client-api/v2/payment-requests/{id}/reject\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: { }\n            },\n\n            {\n                status: 400,\n                body: {\n  \"value\" : {\n    \"message\" : \"Bad Request\",\n    \"errors\" : [ {\n      \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n      \"key\" : \"common.api.shoesize\",\n      \"context\" : {\n        \"max\" : \"50\",\n        \"min\" : \"1\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"value\" : {\n    \"message\" : \"Access to requested resource denied.\",\n    \"errors\" : [ {\n      \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n      \"key\" : \"common.api.quota\",\n      \"context\" : {\n        \"quota\" : \"someQuota\"\n      }\n    } ]\n  }\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"value\" : {\n    \"message\" : \"Resource not found.\",\n    \"errors\" : [ {\n      \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n      \"key\" : \"common.api.resource\",\n      \"context\" : {\n        \"resource\" : \"aResource\"\n      }\n    } ]\n  }\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":";;;;;;;MAmBa,aAAa,GAAG;IACzB,MAAM,EAAE,QAAyB;IACjC,OAAO,EAAE,SAA0B;IACnC,OAAO,EAAE,SAA0B;;;MCN1B,UAAU,GAAG;IACtB,kBAAkB,EAAE,oBAAkC;IACtD,YAAY,EAAE,cAA4B;IAC1C,sBAAsB,EAAE,wBAAsC;IAC9D,uBAAuB,EAAE,yBAAuC;IAChE,gBAAgB,EAAE,kBAAgC;IAClD,YAAY,EAAE,cAA4B;IAC1C,wBAAwB,EAAE,0BAAwC;IAClE,uBAAuB,EAAE,yBAAuC;IAChE,sBAAsB,EAAE,wBAAsC;;;MCvBrD,iBAAiB,GAAG,IAAI,cAAc,CAAS,mBAAmB,EAAE;MACpE,kBAAkB,GAAG;IAC9B,KAAK,EAAE,GAAG;IACV,KAAK,EAAE,KAAK;IACZ,KAAK,EAAE,GAAG;IACV,OAAO,EAAE,GAAG;;;MCaH,oBAAoB;IAe7B,YAAY,0BAA0D,EAAE;QACpE,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,uBAAuB,CAAC,eAAe,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAC/C,IAAI,uBAAuB,CAAC,WAAW,EAAE;YACrC,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;SAC1D;aACI;YACD,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACzB;KACJ;IASM,uBAAuB,CAAE,YAAsB;QAClD,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAS,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,IAAI,KAAK,SAAS,EAAE;YACpB,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;KACf;IASM,kBAAkB,CAAC,OAAiB;QACvC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,OAAO,SAAS,CAAC;SACpB;QAED,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,IAAI,KAAK,SAAS,EAAE;YACpB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;KACf;IAYM,UAAU,CAAC,IAAY;QAC1B,MAAM,QAAQ,GAAW,IAAI,MAAM,CAAC,+DAA+D,EAAE,GAAG,CAAC,CAAC;QAC1G,OAAO,IAAI,KAAK,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,6BAA6B,CAAC,CAAC;KACzG;IAEM,gBAAgB,CAAC,GAAW;QAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACpC,OAAO,OAAO,KAAK,KAAK,UAAU;cAC5B,KAAK,EAAE;cACP,KAAK,CAAC;KACf;CACJ;MAEY,YAAY,GAAG,IAAI,cAAc,CAAC,sCAAsC;;MCpGxE,gBAAgB;IAQzB,YAAqC,YAA8B,EAC1C,IAAgB,EAChB,kBAA6C,EACzD,MAA4B;QAGrC,IAAI,YAAY,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;SAC9F;QACD,IAAI,CAAC,IAAI,EAAE;YACP,MAAM,IAAI,KAAK,CAAC,+DAA+D;gBAC/E,0DAA0D,CAAC,CAAC;SAC/D;QAED,IAAI,kBAAkB,EAAE;YACpB,kBAAkB,CAAC,eAAe,CAAC,YAAY,EAAE;gBAC7C,OAAO,EAAE,EAAE;gBACX,WAAW,EAAE,MAAM,CAAC,QAAQ,IAAI,EAAE;gBAClC,OAAO,EAAE,EAAE;aACd,CAAC,CAAC;SACN;KACJ;IA5BM,OAAO,OAAO,CAAC,oBAAgD;QAClE,OAAO;YACH,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE,UAAU,EAAE,oBAAoB,EAAE,CAAE;SACrF,CAAC;KACL;;8GANQ,gBAAgB,kBAQ0B,gBAAgB;+GAR1D,gBAAgB;+GAAhB,gBAAgB,aAFb,EAAE,YAHF,EAAE;4FAKL,gBAAgB;kBAN5B,QAAQ;mBAAC;oBACR,OAAO,EAAO,EAAE;oBAChB,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAO,EAAE;oBAChB,SAAS,EAAK,EAAE;iBACjB;0DASsD,gBAAgB;0BAArD,QAAQ;;0BAAI,QAAQ;;0BACpB,QAAQ;;0BACR,QAAQ;;;MChBb,wBAAwB;IACjC,SAAS,CAAC,CAAS;QACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,WAAW,CAAC,CAAS;QACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,SAAS,CAAC,CAAS;QACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;IACD,WAAW,CAAC,CAAS;QACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;KAChC;;;MCyBQ,0BAA0B;IAOnC,YAAsB,UAAsB,EAAyC,QAAgB,EAAc,aAAmC;QAAhI,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,UAAU,CAAC;QACzB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAI9C,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAiCM,SAAS,CAAC,iBAAyC,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QACjK,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SAC1F;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EACzI;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,YAAY,CAAC,iBAAyC;QACzD,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SAC1F;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;KAC7G;IAiCM,cAAc,CAAC,iBAA8C,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3K,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;SAC/F;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EACzI,IAAI,EACJ;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,iBAAiB,CAAC,iBAA8C;QACnE,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;SAC/F;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;KACpH;;wHAhNQ,0BAA0B,4CAO+B,iBAAiB;4HAP1E,0BAA0B,cAFzB,MAAM;4FAEP,0BAA0B;kBAHtC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,iBAAiB;;0BAAqB,QAAQ;;;MC5CvG,gDAAgD,GAAa,WAAW,CAAC,CAAC;QAC/E,UAAU,EAAE,8CAA8C;QAC1D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,IAAI,EAAG,sCAAsC;oBAC7C,KAAK,EAAG;wBACN,IAAI,EAAG,sCAAsC;wBAC7C,YAAY,EAAG,QAAQ;wBACvB,MAAM,EAAG,QAAQ;wBACjB,SAAS,EAAG,oBAAoB;wBAChC,UAAU,EAAG,4EAA4E;wBACzF,WAAW,EAAG,IAAI;wBAClB,MAAM,EAAG,oBAAoB;wBAC7B,aAAa,EAAG,YAAY;wBAC5B,SAAS,EAAG,uEAAuE;wBACnF,SAAS,EAAG,IAAI;qBACjB;oBACD,YAAY,EAAG,0BAA0B;oBACzC,aAAa,EAAG,CAAE,oBAAoB,EAAE,cAAc,EAAE,wBAAwB,CAAE;oBAClF,yBAAyB,EAAG,oBAAoB;oBAChD,0BAA0B,EAAG,oBAAoB;oBACjD,UAAU,EAAG,CAAE;4BACb,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,0BAA0B;4BACrC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sBAAsB;4BACjC,MAAM,EAAG,8BAA8B;4BACvC,MAAM,EAAG,YAAY;4BACrB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,qCAAqC;4BAC9C,MAAM,EAAG,mBAAmB;4BAC5B,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,wBAAwB;4BACnC,MAAM,EAAG,gCAAgC;4BACzC,MAAM,EAAG,UAAU;4BACnB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,CAAC,QAAQ;yBACtB,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,qDAAqD,GAAa,WAAW,CAAC,CAAC;QACpF,UAAU,EAAE,qDAAqD;QACjE,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,uCAAuC,GAAa,WAAW,CACxE;IACA;QACI,UAAU,EAAE,8CAA8C;QAC1D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,IAAI,EAAG,sCAAsC;oBAC7C,KAAK,EAAG;wBACN,IAAI,EAAG,sCAAsC;wBAC7C,YAAY,EAAG,QAAQ;wBACvB,MAAM,EAAG,QAAQ;wBACjB,SAAS,EAAG,oBAAoB;wBAChC,UAAU,EAAG,4EAA4E;wBACzF,WAAW,EAAG,IAAI;wBAClB,MAAM,EAAG,oBAAoB;wBAC7B,aAAa,EAAG,YAAY;wBAC5B,SAAS,EAAG,uEAAuE;wBACnF,SAAS,EAAG,IAAI;qBACjB;oBACD,YAAY,EAAG,0BAA0B;oBACzC,aAAa,EAAG,CAAE,oBAAoB,EAAE,cAAc,EAAE,wBAAwB,CAAE;oBAClF,yBAAyB,EAAG,oBAAoB;oBAChD,0BAA0B,EAAG,oBAAoB;oBACjD,UAAU,EAAG,CAAE;4BACb,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,0BAA0B;4BACrC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sBAAsB;4BACjC,MAAM,EAAG,8BAA8B;4BACvC,MAAM,EAAG,YAAY;4BACrB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,qCAAqC;4BAC9C,MAAM,EAAG,mBAAmB;4BAC5B,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,wBAAwB;4BACnC,MAAM,EAAG,gCAAgC;4BACzC,MAAM,EAAG,UAAU;4BACnB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,CAAC,QAAQ;yBACtB,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,qDAAqD;QACjE,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;CACA;;MC7SY,mBAAmB;IAO5B,YAAsB,UAAsB,EAAyC,QAAgB,EAAc,aAAmC;QAAhI,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,UAAU,CAAC;QACzB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAI9C,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IA6BM,WAAW,CAAC,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAExH,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,yBAAyB,EACtG;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,cAAc;QACjB,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,yBAAyB,CAAC;KAClE;IAiCM,cAAc,CAAC,iBAA8C,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3K,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;SAC/F;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,2BAA2B,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAC1H;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,iBAAiB,CAAC,iBAA8C;QACnE,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;SAC/F;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,2BAA2B,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;KACrG;IAiCM,YAAY,CAAC,iBAA4C,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QACvK,MAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;QAEtD,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,yBAAyB,EAC3F,YAAY,EACZ;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,eAAe,CAAC,iBAA4C;QAC/D,MAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;QACtD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,yBAAyB,CAAC;KAClE;IAiCM,cAAc,CAAC,iBAA8C,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3K,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;SAC/F;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,2BAA2B,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EACjI,IAAI,EACJ;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,iBAAiB,CAAC,iBAA8C;QACnE,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;SAC/F;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,2BAA2B,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;KAC5G;;iHAhWQ,mBAAmB,4CAOsC,iBAAiB;qHAP1E,mBAAmB,cAFlB,MAAM;4FAEP,mBAAmB;kBAH/B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,iBAAiB;;0BAAqB,QAAQ;;;MCpDvG,2CAA2C,GAAa,WAAW,CAAC,CAAC;QAC1E,UAAU,EAAE,iCAAiC;QAC7C,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,CAAE;wBAC1B,IAAI,EAAG,sCAAsC;wBAC7C,KAAK,EAAG;4BACN,IAAI,EAAG,sCAAsC;4BAC7C,YAAY,EAAG,QAAQ;4BACvB,MAAM,EAAG,QAAQ;4BACjB,SAAS,EAAG,oBAAoB;4BAChC,UAAU,EAAG,4EAA4E;4BACzF,WAAW,EAAG,IAAI;4BAClB,MAAM,EAAG,oBAAoB;4BAC7B,aAAa,EAAG,YAAY;4BAC5B,SAAS,EAAG,uEAAuE;4BACnF,SAAS,EAAG,IAAI;yBACjB;wBACD,QAAQ,EAAG,QAAQ;wBACnB,YAAY,EAAG,0BAA0B;wBACzC,kBAAkB,EAAG,CAAC;qBACvB,EAAE;wBACD,IAAI,EAAG,sCAAsC;wBAC7C,KAAK,EAAG;4BACN,IAAI,EAAG,sCAAsC;4BAC7C,YAAY,EAAG,SAAS;4BACxB,MAAM,EAAG,SAAS;4BAClB,SAAS,EAAG,qBAAqB;4BACjC,UAAU,EAAG,2EAA2E;4BACxF,WAAW,EAAG,IAAI;4BAClB,MAAM,EAAG,qBAAqB;4BAC9B,aAAa,EAAG,YAAY;4BAC5B,SAAS,EAAG,qDAAqD;4BACjE,SAAS,EAAG,IAAI;yBACjB;wBACD,QAAQ,EAAG,SAAS;wBACpB,YAAY,EAAG,0BAA0B;wBACzC,kBAAkB,EAAG,CAAC;qBACvB,EAAE;wBACD,IAAI,EAAG,sCAAsC;wBAC7C,KAAK,EAAG;4BACN,IAAI,EAAG,sCAAsC;4BAC7C,YAAY,EAAG,kBAAkB;4BACjC,MAAM,EAAG,kBAAkB;4BAC3B,SAAS,EAAG,8BAA8B;4BAC1C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,8BAA8B;4BACvC,aAAa,EAAG,YAAY;4BAC5B,SAAS,EAAG,mEAAmE;4BAC/E,SAAS,EAAG,IAAI;yBACjB;wBACD,QAAQ,EAAG,SAAS;wBACpB,YAAY,EAAG,0BAA0B;wBACzC,kBAAkB,EAAG,CAAC;qBACvB,CAAE;aACc;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,8CAA8C,GAAa,WAAW,CAAC,CAAC;QAC7E,UAAU,EAAE,sCAAsC;QAClD,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,IAAI,EAAG,sCAAsC;oBAC7C,KAAK,EAAG;wBACN,IAAI,EAAG,sCAAsC;wBAC7C,YAAY,EAAG,QAAQ;wBACvB,MAAM,EAAG,QAAQ;wBACjB,SAAS,EAAG,oBAAoB;wBAChC,UAAU,EAAG,4EAA4E;wBACzF,WAAW,EAAG,IAAI;wBAClB,MAAM,EAAG,oBAAoB;wBAC7B,aAAa,EAAG,YAAY;wBAC5B,SAAS,EAAG,uEAAuE;wBACnF,SAAS,EAAG,IAAI;qBACjB;oBACD,QAAQ,EAAG,QAAQ;oBACnB,YAAY,EAAG,0BAA0B;oBACzC,aAAa,EAAG,CAAE,oBAAoB,EAAE,cAAc,EAAE,wBAAwB,CAAE;oBAClF,UAAU,EAAG,CAAE;4BACb,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,0BAA0B;4BACrC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sBAAsB;4BACjC,MAAM,EAAG,8BAA8B;4BACvC,MAAM,EAAG,YAAY;4BACrB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,qCAAqC;4BAC9C,MAAM,EAAG,mBAAmB;4BAC5B,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,wBAAwB;4BACnC,MAAM,EAAG,gCAAgC;4BACzC,MAAM,EAAG,UAAU;4BACnB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,CAAC,QAAQ;yBACtB,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,4CAA4C,GAAa,WAAW,CAAC,CAAC;QAC3E,UAAU,EAAE,iCAAiC;QAC7C,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,IAAI,EAAG,sCAAsC;iBAC9C;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,8CAA8C,GAAa,WAAW,CAAC,CAAC;QAC7E,UAAU,EAAE,6CAA6C;QACzD,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,gCAAgC,GAAa,WAAW,CACjE;IACA;QACI,UAAU,EAAE,iCAAiC;QAC7C,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,CAAE;wBACtB,IAAI,EAAG,sCAAsC;wBAC7C,KAAK,EAAG;4BACN,IAAI,EAAG,sCAAsC;4BAC7C,YAAY,EAAG,QAAQ;4BACvB,MAAM,EAAG,QAAQ;4BACjB,SAAS,EAAG,oBAAoB;4BAChC,UAAU,EAAG,4EAA4E;4BACzF,WAAW,EAAG,IAAI;4BAClB,MAAM,EAAG,oBAAoB;4BAC7B,aAAa,EAAG,YAAY;4BAC5B,SAAS,EAAG,uEAAuE;4BACnF,SAAS,EAAG,IAAI;yBACjB;wBACD,QAAQ,EAAG,QAAQ;wBACnB,YAAY,EAAG,0BAA0B;wBACzC,kBAAkB,EAAG,CAAC;qBACvB,EAAE;wBACD,IAAI,EAAG,sCAAsC;wBAC7C,KAAK,EAAG;4BACN,IAAI,EAAG,sCAAsC;4BAC7C,YAAY,EAAG,SAAS;4BACxB,MAAM,EAAG,SAAS;4BAClB,SAAS,EAAG,qBAAqB;4BACjC,UAAU,EAAG,2EAA2E;4BACxF,WAAW,EAAG,IAAI;4BAClB,MAAM,EAAG,qBAAqB;4BAC9B,aAAa,EAAG,YAAY;4BAC5B,SAAS,EAAG,qDAAqD;4BACjE,SAAS,EAAG,IAAI;yBACjB;wBACD,QAAQ,EAAG,SAAS;wBACpB,YAAY,EAAG,0BAA0B;wBACzC,kBAAkB,EAAG,CAAC;qBACvB,EAAE;wBACD,IAAI,EAAG,sCAAsC;wBAC7C,KAAK,EAAG;4BACN,IAAI,EAAG,sCAAsC;4BAC7C,YAAY,EAAG,kBAAkB;4BACjC,MAAM,EAAG,kBAAkB;4BAC3B,SAAS,EAAG,8BAA8B;4BAC1C,WAAW,EAAG,KAAK;4BACnB,MAAM,EAAG,8BAA8B;4BACvC,aAAa,EAAG,YAAY;4BAC5B,SAAS,EAAG,mEAAmE;4BAC/E,SAAS,EAAG,IAAI;yBACjB;wBACD,QAAQ,EAAG,SAAS;wBACpB,YAAY,EAAG,0BAA0B;wBACzC,kBAAkB,EAAG,CAAC;qBACvB,CAAE;aACU;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,sCAAsC;QAClD,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,IAAI,EAAG,sCAAsC;oBAC7C,KAAK,EAAG;wBACN,IAAI,EAAG,sCAAsC;wBAC7C,YAAY,EAAG,QAAQ;wBACvB,MAAM,EAAG,QAAQ;wBACjB,SAAS,EAAG,oBAAoB;wBAChC,UAAU,EAAG,4EAA4E;wBACzF,WAAW,EAAG,IAAI;wBAClB,MAAM,EAAG,oBAAoB;wBAC7B,aAAa,EAAG,YAAY;wBAC5B,SAAS,EAAG,uEAAuE;wBACnF,SAAS,EAAG,IAAI;qBACjB;oBACD,QAAQ,EAAG,QAAQ;oBACnB,YAAY,EAAG,0BAA0B;oBACzC,aAAa,EAAG,CAAE,oBAAoB,EAAE,cAAc,EAAE,wBAAwB,CAAE;oBAClF,UAAU,EAAG,CAAE;4BACb,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,0BAA0B;4BACrC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sBAAsB;4BACjC,MAAM,EAAG,8BAA8B;4BACvC,MAAM,EAAG,YAAY;4BACrB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,qCAAqC;4BAC9C,MAAM,EAAG,mBAAmB;4BAC5B,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,wBAAwB;4BACnC,MAAM,EAAG,gCAAgC;4BACzC,MAAM,EAAG,UAAU;4BACnB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,CAAC,QAAQ;yBACtB,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,iCAAiC;QAC7C,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,IAAI,EAAG,sCAAsC;iBAC9C;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,6CAA6C;QACzD,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;CACA;;MCnkBY,0BAA0B;IAOnC,YAAsB,UAAsB,EAAyC,QAAgB,EAAc,aAAmC;QAAhI,eAAU,GAAV,UAAU,CAAY;QALlC,aAAQ,GAAG,UAAU,CAAC;QACzB,mBAAc,GAAG,IAAI,WAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAI9C,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACtC;QACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC5B;YACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1C;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;KAC/E;IAGO,eAAe,CAAC,UAAsB,EAAE,KAAU,EAAE,GAAY;QACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;YAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SACjE;aAAM;YACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAEO,wBAAwB,CAAC,UAAsB,EAAE,KAAW,EAAE,GAAY;QAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,OAAO,UAAU,CAAC;SACrB;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrB,KAAe,CAAC,OAAO,CAAE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;aACxG;iBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;gBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;oBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC7B,KAAc,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpD;qBAAM;oBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/D;SACJ;aAAM,IAAI,GAAG,IAAI,IAAI,EAAE;YACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SAC9C;aAAM;YACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACtE;QACD,OAAO,UAAU,CAAC;KACrB;IAiCM,8BAA8B,CAAC,iBAA8D,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC3M,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;SAC/G;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EACzI;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,iCAAiC,CAAC,iBAA8D;QACnG,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;SAC/G;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;KAC7G;IAiCM,eAAe,CAAC,iBAA+C,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC7K,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;SAChG;QACD,MAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;QAEtD,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAID,MAAM,QAAQ,GAAa;YACvB,kBAAkB;SACrB,CAAC;QACF,MAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAC1I,YAAY,EACZ;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,kBAAkB,CAAC,iBAA+C;QACrE,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;SAChG;QACD,MAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,CAAC;QACtD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC;KACrH;IAiCM,wBAAwB,CAAC,iBAAwD,EAAE,UAAe,MAAM,EAAE,iBAA0B,KAAK,EAAE,OAAiD;QAC/L,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,oFAAoF,CAAC,CAAC;SACzG;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,IAAI,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC;QACvF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAExC,MAAM,iBAAiB,GAAa;gBAChC,kBAAkB;aACrB,CAAC;YACF,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;SACvF;QACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAGD,IAAI,YAAY,GAAoB,MAAM,CAAC;QAC3C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YACxE,YAAY,GAAG,MAAM,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EACzI,IAAI,EACJ;YACI,YAAY,EAAO,YAAY;YAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;KACL;IAEM,2BAA2B,CAAC,iBAAwD;QACvF,MAAM,GAAG,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;YACnC,MAAM,IAAI,KAAK,CAAC,oFAAoF,CAAC,CAAC;SACzG;QACD,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,mCAAmC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;KACpH;;wHAxSQ,0BAA0B,4CAO+B,iBAAiB;4HAP1E,0BAA0B,cAFzB,MAAM;4FAEP,0BAA0B;kBAHtC,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAQkD,QAAQ;;0BAAI,MAAM;2BAAC,iBAAiB;;0BAAqB,QAAQ;;;MCpDvG,qEAAqE,GAAa,WAAW,CAAC,CAAC;QACpG,UAAU,EAAE,8CAA8C;QAC1D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,IAAI,EAAG,sCAAsC;oBAC7C,KAAK,EAAG;wBACN,IAAI,EAAG,sCAAsC;wBAC7C,YAAY,EAAG,QAAQ;wBACvB,MAAM,EAAG,QAAQ;wBACjB,SAAS,EAAG,oBAAoB;wBAChC,UAAU,EAAG,4EAA4E;wBACzF,WAAW,EAAG,IAAI;wBAClB,MAAM,EAAG,oBAAoB;wBAC7B,aAAa,EAAG,YAAY;wBAC5B,SAAS,EAAG,uEAAuE;wBACnF,SAAS,EAAG,IAAI;qBACjB;oBACD,QAAQ,EAAG,QAAQ;oBACnB,UAAU,EAAG,KAAK;oBAClB,yBAAyB,EAAG,oBAAoB;oBAChD,0BAA0B,EAAG,oBAAoB;oBACjD,SAAS,EAAG,sEAAsE;oBAClF,iBAAiB,EAAG;wBAClB,IAAI,EAAG,sCAAsC;wBAC7C,QAAQ,EAAG,sBAAsB;wBACjC,MAAM,EAAG,8BAA8B;wBACvC,MAAM,EAAG,YAAY;wBACrB,UAAU,EAAG,KAAK;wBAClB,SAAS,EAAG,SAAS;qBACtB;oBACD,UAAU,EAAG,CAAE;4BACb,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,0BAA0B;4BACrC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sBAAsB;4BACjC,MAAM,EAAG,8BAA8B;4BACvC,MAAM,EAAG,YAAY;4BACrB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,qCAAqC;4BAC9C,MAAM,EAAG,mBAAmB;4BAC5B,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,wBAAwB;4BACnC,MAAM,EAAG,gCAAgC;4BACzC,MAAM,EAAG,UAAU;4BACnB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,CAAC,QAAQ;yBACtB,CAAE;iBACJ;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,sDAAsD,GAAa,WAAW,CAAC,CAAC;QACrF,UAAU,EAAE,sDAAsD;QAClE,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAIS,+DAA+D,GAAa,WAAW,CAAC,CAAC;QAC9F,UAAU,EAAE,qDAAqD;QACjE,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YACH;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACgB;YACD;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACxB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACgB;SACZ;KACJ,CAAC,EAAE;MAES,uCAAuC,GAAa,WAAW,CACxE;IACA;QACI,UAAU,EAAE,8CAA8C;QAC1D,MAAM,EAAE,KAAK;QACb,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,IAAI,EAAG,sCAAsC;oBAC7C,KAAK,EAAG;wBACN,IAAI,EAAG,sCAAsC;wBAC7C,YAAY,EAAG,QAAQ;wBACvB,MAAM,EAAG,QAAQ;wBACjB,SAAS,EAAG,oBAAoB;wBAChC,UAAU,EAAG,4EAA4E;wBACzF,WAAW,EAAG,IAAI;wBAClB,MAAM,EAAG,oBAAoB;wBAC7B,aAAa,EAAG,YAAY;wBAC5B,SAAS,EAAG,uEAAuE;wBACnF,SAAS,EAAG,IAAI;qBACjB;oBACD,QAAQ,EAAG,QAAQ;oBACnB,UAAU,EAAG,KAAK;oBAClB,yBAAyB,EAAG,oBAAoB;oBAChD,0BAA0B,EAAG,oBAAoB;oBACjD,SAAS,EAAG,sEAAsE;oBAClF,iBAAiB,EAAG;wBAClB,IAAI,EAAG,sCAAsC;wBAC7C,QAAQ,EAAG,sBAAsB;wBACjC,MAAM,EAAG,8BAA8B;wBACvC,MAAM,EAAG,YAAY;wBACrB,UAAU,EAAG,KAAK;wBAClB,SAAS,EAAG,SAAS;qBACtB;oBACD,UAAU,EAAG,CAAE;4BACb,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,0BAA0B;4BACrC,MAAM,EAAG,kCAAkC;4BAC3C,MAAM,EAAG,gBAAgB;4BACzB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,sBAAsB;4BACjC,MAAM,EAAG,8BAA8B;4BACvC,MAAM,EAAG,YAAY;4BACrB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,uBAAuB;4BAClC,MAAM,EAAG,qCAAqC;4BAC9C,MAAM,EAAG,mBAAmB;4BAC5B,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,SAAS;yBACtB,EAAE;4BACD,IAAI,EAAG,sCAAsC;4BAC7C,QAAQ,EAAG,wBAAwB;4BACnC,MAAM,EAAG,gCAAgC;4BACzC,MAAM,EAAG,UAAU;4BACnB,UAAU,EAAG,KAAK;4BAClB,SAAS,EAAG,CAAC,QAAQ;yBACtB,CAAE;iBACJ;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,sDAAsD;QAClE,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;IACG;QACI,UAAU,EAAE,qDAAqD;QACjE,MAAM,EAAE,MAAM;QACd,SAAS,EAAE;YAEP;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAG;aACZ;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,aAAa;wBACzB,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,kDAAkD;gCAC9D,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,KAAK,EAAG,IAAI;oCACZ,KAAK,EAAG,GAAG;iCACZ;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,sCAAsC;wBAClD,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,sEAAsE;gCAClF,KAAK,EAAG,kBAAkB;gCAC1B,SAAS,EAAG;oCACV,OAAO,EAAG,WAAW;iCACtB;6BACF,CAAE;qBACJ;iBACF;aACY;YAED;gBACI,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACpB,OAAO,EAAG;wBACR,SAAS,EAAG,qBAAqB;wBACjC,QAAQ,EAAG,CAAE;gCACX,SAAS,EAAG,6DAA6D;gCACzE,KAAK,EAAG,qBAAqB;gCAC7B,SAAS,EAAG;oCACV,UAAU,EAAG,WAAW;iCACzB;6BACF,CAAE;qBACJ;iBACF;aACY;SACR;KACJ;CACA;;;;"}