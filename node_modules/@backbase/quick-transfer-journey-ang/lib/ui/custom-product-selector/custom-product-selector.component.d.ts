import { EventEmitter } from '@angular/core';
import { ControlValueAccessor, NgControl } from '@angular/forms';
import { AccountItem } from '../../models/items.model';
import * as i0 from "@angular/core";
export declare class CustomProductSelectorComponent implements ControlValueAccessor {
    parentFormControl: NgControl;
    constructor(parentFormControl: NgControl);
    open: EventEmitter<boolean>;
    emptyLabel: string | undefined;
    /**
     * Selected account
     */
    account: AccountItem | undefined;
    /**
     * parent touched state
     */
    touched: boolean;
    ariaDescribedby: string | undefined;
    writeValue(model: any | null): void;
    onChange: (_: any) => void;
    onTouched: () => void;
    registerOnChange(fn: () => void): void;
    registerOnTouched(fn: () => void): void;
    markAsTouched(): void;
    /**
     * Method to open from account selector
     */
    openAccountSelectorView(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomProductSelectorComponent, [{ optional: true; self: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CustomProductSelectorComponent, "bb-custom-product-selector", never, { "emptyLabel": "emptyLabel"; "account": "account"; "touched": "touched"; "ariaDescribedby": "aria-describedby"; }, { "open": "open"; }, never, never>;
}
