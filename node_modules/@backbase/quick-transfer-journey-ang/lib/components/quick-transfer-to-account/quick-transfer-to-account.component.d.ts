import { AfterViewInit, ElementRef, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { AccountItem, Contact } from '../../models/items.model';
import { CallState } from '../../models/state.model';
import { ViewState } from '../../models/view.model';
import { QuickTransferStoreService } from '../../store/store.service';
import { BaseAccountSelectorComponent } from '../account-selector-base/account-selector-base.component';
import * as i0 from "@angular/core";
export declare class QuickTransferToAccountComponent extends BaseAccountSelectorComponent implements OnInit, AfterViewInit {
    readonly store: QuickTransferStoreService;
    /**
     * Show My Accounts or Contacts tabs, It is My Accounts by default
     */
    selectedTab: number;
    /**
     * Stream of contacts
     */
    readonly contacts$: Observable<Contact[] | undefined>;
    /**
     * Stream of toPayee
     */
    readonly selectedToPayeeId$: Observable<string>;
    /**
     * Stream of fromAccount
     */
    readonly selectedFromAccount$: Observable<AccountItem | undefined>;
    /**
     * Stream of contactsCallState
     */
    readonly contactsCallState$: Observable<CallState | undefined>;
    /**
     * Stream to indicate if contacts are going to be rendered
     */
    renderContacts$: Observable<boolean>;
    /**
     * Selector of the to account button to be focused
     */
    toAccountSelector: string;
    /**
     * Enum for current View
     */
    readonly viewState: typeof ViewState;
    backbutton: ElementRef;
    constructor(store: QuickTransferStoreService);
    /**
     * If not yet called the contacts, accounts and external accounts API call it
     */
    ngOnInit(): void;
    ngAfterViewInit(): void;
    /**
     * Method to switch tabs
     *
     * @param ev
     */
    onTabSelect(ev: number): void;
    /**
     * Method to set payee
     *
     * @param id
     */
    pickPayee(id: string): void;
    /**
     * Method to dispatch store action for fetching contacts
     */
    getContacts(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<QuickTransferToAccountComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<QuickTransferToAccountComponent, "bb-quick-transfer-to-account-ui", never, {}, {}, never, never>;
}
