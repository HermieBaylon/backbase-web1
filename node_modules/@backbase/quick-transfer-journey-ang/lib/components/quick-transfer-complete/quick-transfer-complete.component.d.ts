import { AfterViewInit, ElementRef } from '@angular/core';
import { Observable } from 'rxjs';
import { QuickTransferJourneyConfiguration } from '../../models/config.model';
import { AccountItem, TransferAmount } from '../../models/items.model';
import { CallState, LoadingState } from '../../models/state.model';
import { QuickTransferStoreService } from '../../store/store.service';
import * as i0 from "@angular/core";
export declare class QuickTransferCompleteComponent implements AfterViewInit {
    private readonly store;
    constructor(store: QuickTransferStoreService);
    readonly id: string;
    /**
     * success image path
     */
    successImg: string | undefined;
    /**
     * success image path for reduced motion
     */
    successImgNoMotion: string | undefined;
    /**
     * unique time to reload animated svg everytime
     */
    readonly timestamp: number;
    /**
     * Stream of transfer amount
     */
    readonly amount$: Observable<TransferAmount | undefined>;
    /**
     * Stream of toPayee
     */
    readonly toPayee$: Observable<AccountItem | undefined>;
    /**
     * Stream of paymentOrderCallState
     */
    readonly paymentOrderCallState$: Observable<CallState>;
    /**
     * Enum for loadingstate
     */
    readonly loadingstate: typeof LoadingState;
    /**
     * Quick Transfer configuration
     */
    config?: QuickTransferJourneyConfiguration;
    doneButton: ElementRef;
    ngAfterViewInit(): void;
    /**
     * Method to call resetWidget
     */
    restart(): void;
    /**
     * Method to get back to form for trying transfer again
     */
    tryAgain(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<QuickTransferCompleteComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<QuickTransferCompleteComponent, "bb-quick-transfer-complete-ui", never, { "successImg": "successImg"; "successImgNoMotion": "successImgNoMotion"; "config": "config"; }, {}, never, never>;
}
