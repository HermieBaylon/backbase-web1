import { Observable } from 'rxjs';
import { QuickTransferJourneyConfiguration } from '../../models/config.model';
import { Arrangement } from '../../models/items.model';
import { CallState, LoadingState } from '../../models/state.model';
import { QuickTransferStoreService } from '../../store/store.service';
import * as i0 from "@angular/core";
export declare class BaseAccountSelectorComponent {
    readonly store: QuickTransferStoreService;
    /**
     * Quick Transfer configuration
     */
    config?: QuickTransferJourneyConfiguration;
    constructor(store: QuickTransferStoreService);
    /**
     * Stream of accounts
     */
    accounts$?: Observable<Arrangement[]>;
    /**
     * Stream of external accounts
     */
    extAccounts$?: Observable<Arrangement[]>;
    /**
     * Stream of accountsCallState
     */
    readonly accountsCallState$: Observable<CallState | undefined>;
    /**
     * Enum for loadingstate
     */
    readonly loadingstate: typeof LoadingState;
    /**
     * Stream of extAccountsCallState
     */
    readonly extAccountsCallState$: Observable<CallState | undefined>;
    /**
     * Method to navigate back to the main Form
     */
    backToForm(fromSelector: string): void;
    /**
     * Method to dispatch store action for fetching the accounts
     */
    getAccounts(): void;
    /**
     * Method to dispatch store action for fetching external accounts
     */
    getExtAccounts(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BaseAccountSelectorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BaseAccountSelectorComponent, "ng-component", never, { "config": "config"; }, {}, never, never>;
}
