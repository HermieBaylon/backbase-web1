import { HttpErrorResponse } from '@angular/common/http';
import { AccountItem, Arrangement, Contact, ExternalAccount, TransferAmount } from './items.model';
import { ViewState } from './view.model';
export interface QuickTransferState {
    accountsCallState: CallState;
    extAccountsCallState: CallState;
    contactsCallState: CallState;
    transferOrderCallState: CallState;
    viewState: ViewState;
    debitAccounts: Arrangement[] | undefined;
    creditAccounts: Arrangement[] | undefined;
    contacts: Contact[] | undefined;
    extAccounts: ExternalAccount[] | undefined;
    fromAccount: AccountItem | undefined;
    payeeTo: AccountItem | undefined;
    amount: TransferAmount | undefined;
    defaultCurrency: string;
    isModalOpen: boolean;
    touchedFields: string[];
    focusElement: string | undefined;
}
/** Enum representing different possible loading states of ajax call */
export declare enum LoadingState {
    INIT = "INIT",
    LOADING = "LOADING",
    LOADED = "LOADED"
}
/** Enum representing error state of ajax call */
export interface ErrorState {
    error: HttpErrorResponse;
}
/**
 * Enum representing call state, which allows combining the loading and
 * error states into one property.
 */
export declare type CallState = LoadingState | ErrorState;
export declare enum ProgressStatus {
    CONFIRMATION_PENDING = "CONFIRMATION_PENDING",
    USER_DECLINED = "USER_DECLINED",
    SYSTEM_DECLINED = "SYSTEM_DECLINED",
    PENDING_APPROVAL = "PENDING_APPROVAL",
    SENDING = "SENDING",
    ACCEPTED = "ACCEPTED",
    REJECTED = "REJECTED",
    PROCESSED = "PROCESSED",
    NO_PROGRESS = "NO_PROGRESS"
}
export interface ErrorMessage {
    name: string;
    message: string;
}
