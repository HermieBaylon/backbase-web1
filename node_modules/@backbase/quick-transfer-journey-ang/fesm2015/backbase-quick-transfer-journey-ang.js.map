{"version":3,"file":"backbase-quick-transfer-journey-ang.js","sources":["../../../../libs/quick-transfer-journey/src/lib/communication.service.ts","../../../../libs/quick-transfer-journey/src/lib/models/state.model.ts","../../../../libs/quick-transfer-journey/src/lib/models/view.model.ts","../../../../libs/quick-transfer-journey/src/lib/store/actions.ts","../../../../libs/quick-transfer-journey/src/lib/constants/initital-state.ts","../../../../libs/quick-transfer-journey/src/lib/store/selectors.ts","../../../../libs/quick-transfer-journey/src/lib/store/store.service.ts","../../../../libs/quick-transfer-journey/src/lib/components/account-selector-base/account-selector-base.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-accounts/quick-transfer-accounts.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-accounts/quick-transfer-accounts.component.html","../../../../libs/quick-transfer-journey/src/lib/constants/component-selectors.ts","../../../../libs/quick-transfer-journey/src/lib/utils/helpers.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-complete/quick-transfer-complete.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-complete/quick-transfer-complete.component.html","../../../../libs/quick-transfer-journey/src/lib/models/config.model.ts","../../../../libs/quick-transfer-journey/src/lib/utils/payment-mapper.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-confirmation-modal/quick-transfer-confirmation-modal.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-confirmation-modal/quick-transfer-confirmation-modal.component.html","../../../../libs/quick-transfer-journey/src/lib/ui/custom-product-selector/custom-product-selector.component.ts","../../../../libs/quick-transfer-journey/src/lib/ui/custom-product-selector/custom-product-selector.component.html","../../../../libs/quick-transfer-journey/src/lib/ui/validation-message/validation-message.component.ts","../../../../libs/quick-transfer-journey/src/lib/ui/validation-message/validation-message.component.html","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-form/quick-transfer-form.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-form/quick-transfer-form.component.html","../../../../libs/quick-transfer-journey/src/lib/utils/arrangement-filter.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-from-account/quick-transfer-from-account.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-from-account/quick-transfer-from-account.component.html","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-to-account/quick-transfer-to-account.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-to-account/quick-transfer-to-account.component.html","../../../../libs/quick-transfer-journey/src/lib/animations.ts","../../../../libs/quick-transfer-journey/src/lib/services/config.service.ts","../../../../libs/quick-transfer-journey/src/lib/quick-transfer-journey.component.ts","../../../../libs/quick-transfer-journey/src/lib/quick-transfer-journey.component.html","../../../../libs/quick-transfer-journey/src/lib/constants/accounts-variables.ts","../../../../libs/quick-transfer-journey/src/lib/utils/arrangement-mapper.ts","../../../../libs/quick-transfer-journey/src/lib/services/quick-transfer-http.service.ts","../../../../libs/quick-transfer-journey/src/lib/store/effects.ts","../../../../libs/quick-transfer-journey/src/lib/store/reducer.ts","../../../../libs/quick-transfer-journey/src/lib/store/store.module.ts","../../../../libs/quick-transfer-journey/src/lib/quick-transfer-journey.module.ts","../../../../libs/quick-transfer-journey/src/backbase-quick-transfer-journey-ang.ts"],"sourcesContent":["export abstract class CommunicationService {\n  abstract transferSucceeded(): void;\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { AccountItem, Arrangement, Contact, ExternalAccount, TransferAmount } from './items.model';\nimport { ViewState } from './view.model';\n\nexport interface QuickTransferState {\n  accountsCallState: CallState;\n  extAccountsCallState: CallState;\n  contactsCallState: CallState;\n  transferOrderCallState: CallState;\n  viewState: ViewState;\n  debitAccounts: Arrangement[] | undefined;\n  creditAccounts: Arrangement[] | undefined;\n  contacts: Contact[] | undefined;\n  extAccounts: ExternalAccount[] | undefined;\n  fromAccount: AccountItem | undefined;\n  payeeTo: AccountItem | undefined;\n  amount: TransferAmount | undefined;\n  defaultCurrency: string;\n  isModalOpen: boolean;\n  touchedFields: string[];\n  focusElement: string | undefined;\n}\n\n/** Enum representing different possible loading states of ajax call */\nexport enum LoadingState {\n  INIT = 'INIT',\n  LOADING = 'LOADING',\n  LOADED = 'LOADED',\n}\n\n/** Enum representing error state of ajax call */\nexport interface ErrorState {\n  error: HttpErrorResponse;\n}\n\n/**\n * Enum representing call state, which allows combining the loading and\n * error states into one property.\n */\nexport type CallState = LoadingState | ErrorState;\n\nexport enum ProgressStatus {\n  CONFIRMATION_PENDING = 'CONFIRMATION_PENDING',\n  USER_DECLINED = 'USER_DECLINED',\n  SYSTEM_DECLINED = 'SYSTEM_DECLINED',\n  PENDING_APPROVAL = 'PENDING_APPROVAL',\n  SENDING = 'SENDING',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n  PROCESSED = 'PROCESSED',\n  NO_PROGRESS = 'NO_PROGRESS',\n}\n\nexport interface ErrorMessage {\n  name: string;\n  message: string;\n}\n","/** Enum representing different view states */\nexport enum ViewState {\n  FORM = 'FORM',\n  FROM = 'FROM',\n  PAYEE = 'PAYEE',\n  COMPLETE = 'COMPLETE',\n  REVIEW = 'REVIEW',\n}\n\nexport enum Location {\n  FROM = 'FROM',\n  TO = 'TO',\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { PaymentOrdersPost } from '@backbase/data-ang/payment-order';\nimport { createAction, props } from '@ngrx/store';\nimport { Arrangement, Contact, ExternalAccount } from '../models/items.model';\nimport { ViewState } from '../models/view.model';\n\nexport const accountsFetch = createAction('[Accounts API] fetching accounts');\n\nexport const contactsFetch = createAction('[Contacts API] fetching contacts');\n\nexport const externalAccountsFetch = createAction('[Payments API] fetching external accounts');\n\n// Success\nexport const accountsFetchSuccess = createAction(\n  '[Accounts API] accounts fetched success',\n  props<{ debitAccounts: Arrangement[]; creditAccounts: Arrangement[] }>(),\n);\n\nexport const contactsFetchSuccess = createAction(\n  '[Contacts API] contacts fetched success',\n  props<{ contacts: Contact[] }>(),\n);\n\nexport const extAccountsFetchSuccess = createAction(\n  '[Payments API] external accounts fetched success',\n  props<{ extAccounts: ExternalAccount[] | undefined }>(),\n);\n\n// Error\nexport const accountsFetchError = createAction(\n  '[Accounts API] accounts fetching error',\n  props<{ error: HttpErrorResponse }>(),\n);\n\nexport const contactsFetchError = createAction(\n  '[Contacts API] contacts fetching error',\n  props<{ error: HttpErrorResponse }>(),\n);\n\nexport const extAccountsFetchError = createAction(\n  '[Payments API] external accounts fetching error',\n  props<{ error: HttpErrorResponse }>(),\n);\n\nexport const openView = createAction(\n  '[Quick Transfer Widget] current view changed',\n  props<{ view: ViewState; focus?: string }>(),\n);\n\nexport const setPayeeAccount = createAction('[Quick Transfer Widget] payee account picked up', props<{ id: string }>());\n\nexport const setFromAccount = createAction(\n  '[Quick Transfer Widget] From Account changed',\n  props<{ accountId: string }>(),\n);\n\nexport const sendTransferOrder = createAction(\n  '[Payments Order API] send transfer order',\n  props<{ reqData: PaymentOrdersPost }>(),\n);\nexport const transferOrderSuccess = createAction('[Payments Order API] transfer order is successful');\n\nexport const transferOrderError = createAction(\n  '[Payments Order API] transfer order is failed',\n  props<{ error: HttpErrorResponse }>(),\n);\n\nexport const setAmount = createAction(\n  '[Quick Transfer Widget] Transfer Amount Set',\n  props<{ amount: string; defaultCurrency?: string }>(),\n);\n\nexport const setModalOpen = createAction(\n  '[Quick Transfer Widget] Confirmation Modal Open',\n  props<{ isOpen: boolean }>(),\n);\n\nexport const resetWidget = createAction('[Quick Transfer Widget] Reset widget', props<{ focus?: string }>());\n\nexport const resetFocus = createAction('[Quick Transfer Widget] Reset Focus Element');\n\nexport const setFieldTouched = createAction(\n  '[Quick Transfer Widget] Set Field Touched',\n  props<{ fieldName: string }>(),\n);\n\nexport const setDefaultCurrency = createAction(\n  '[Quick Transfer Widget] Default Currency changed',\n  props<{ currency: string }>(),\n);\n","import { LoadingState, QuickTransferState } from '../models/state.model';\nimport { ViewState } from '../models/view.model';\n\nexport const FEATURE_STORE_SELECTOR = 'quick-transfer-store';\nexport const initialState: QuickTransferState = {\n  debitAccounts: undefined,\n  creditAccounts: undefined,\n  contacts: undefined,\n  extAccounts: undefined,\n  viewState: ViewState.FORM,\n  fromAccount: undefined,\n  payeeTo: undefined,\n  amount: undefined,\n  defaultCurrency: '',\n  accountsCallState: LoadingState.INIT,\n  extAccountsCallState: LoadingState.INIT,\n  contactsCallState: LoadingState.INIT,\n  transferOrderCallState: LoadingState.INIT,\n  isModalOpen: false,\n  touchedFields: [],\n  focusElement: undefined,\n};\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { FEATURE_STORE_SELECTOR } from '../constants/initital-state';\nimport { QuickTransferState as State } from '../models/state.model';\n\nconst child = createFeatureSelector<State>(FEATURE_STORE_SELECTOR);\n\nexport const selectFromAccount = createSelector(child, (state: State) => state['fromAccount']);\nexport const selectDebitAccounts = createSelector(child, (state: State) => state['debitAccounts']);\nexport const selectCreditAccounts = createSelector(child, (state: State) => state['creditAccounts']);\nexport const selectExtAccounts = createSelector(child, (state: State) => state['extAccounts']);\nexport const selectContacts = createSelector(child, (state: State) => state['contacts']);\nexport const selectAccountsCallState = createSelector(child, (state: State) => state['accountsCallState']);\nexport const selectContactsCallState = createSelector(child, (state: State) => state['contactsCallState']);\nexport const selectExtAccountsCallState = createSelector(child, (state: State) => state['extAccountsCallState']);\nexport const selectTransferOrderCallState = createSelector(child, (state: State) => state['transferOrderCallState']);\nexport const selectViewState = createSelector(child, (state: State) => state['viewState']);\nexport const selectPayeeAccount = createSelector(child, (state: State) => state['payeeTo']);\nexport const selectAmount = createSelector(child, (state: State) => state['amount']);\nexport const selectIsModalOpen = createSelector(child, (state: State) => state['isModalOpen']);\nexport const selectTouchedFields = createSelector(child, (state: State) => state['touchedFields']);\nexport const selectFocusElement = createSelector(child, (state: State) => state['focusElement']);\n","import { Injectable } from '@angular/core';\nimport { PaymentOrdersPost } from '@backbase/data-ang/payment-order';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AccountItem, Arrangement, Contact, ExternalAccount, TransferAmount } from '../models/items.model';\nimport { CallState, QuickTransferState } from '../models/state.model';\nimport { ViewState } from '../models/view.model';\nimport {\n  accountsFetch,\n  contactsFetch,\n  externalAccountsFetch,\n  openView,\n  resetFocus,\n  resetWidget,\n  sendTransferOrder,\n  setAmount,\n  setDefaultCurrency,\n  setFieldTouched,\n  setFromAccount,\n  setModalOpen,\n  setPayeeAccount,\n} from './actions';\nimport {\n  selectAccountsCallState,\n  selectAmount,\n  selectContacts,\n  selectContactsCallState,\n  selectCreditAccounts,\n  selectDebitAccounts,\n  selectExtAccounts,\n  selectExtAccountsCallState,\n  selectFocusElement,\n  selectFromAccount,\n  selectIsModalOpen,\n  selectPayeeAccount,\n  selectTouchedFields,\n  selectTransferOrderCallState,\n  selectViewState,\n} from './selectors';\n\n@Injectable()\nexport class QuickTransferStoreService {\n  /**\n   * Stream of api call state for fetching accounts\n   */\n  readonly accountsCallState$: Observable<CallState> = this.store.select(selectAccountsCallState);\n  /**\n   * Stream of api call state for fetching contacts\n   */\n  readonly contactsCallState$: Observable<CallState> = this.store.select(selectContactsCallState);\n  /**\n   * Stream of api call state for fetching external accounts\n   */\n  readonly extAccountsCallState$: Observable<CallState> = this.store.select(selectExtAccountsCallState);\n  /**\n   * Stream of current view state\n   */\n  readonly currentView$: Observable<ViewState> = this.store.select(selectViewState);\n  /**\n   * Stream of debit accounts\n   */\n  readonly debitAccounts$: Observable<Arrangement[] | undefined> = this.store.select(selectDebitAccounts);\n  /**\n   * Stream of credit accounts\n   */\n  readonly creditAccounts$: Observable<Arrangement[] | undefined> = this.store.select(selectCreditAccounts);\n  /**\n   * Stream of external accounts\n   */\n  readonly extAccounts$: Observable<ExternalAccount[] | undefined> = this.store.select(selectExtAccounts);\n  /**\n   * Stream of contacts\n   */\n  readonly contacts$: Observable<Contact[] | undefined> = this.store.select(selectContacts);\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccount$: Observable<AccountItem | undefined> = this.store.select(selectFromAccount);\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.select(selectPayeeAccount);\n  /**\n   * Stream of transfer amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.select(selectAmount);\n  /**\n   * Boolean flag for the confirmation modal\n   */\n  readonly isModalOpen$: Observable<boolean> = this.store.select(selectIsModalOpen);\n  /**\n   * Stream of touched fields.\n   */\n  readonly touchedFields$: Observable<string[] | undefined> = this.store.select(selectTouchedFields);\n\n  /**\n   * Stream of Element selector to be focused.\n   */\n  readonly focusElement$: Observable<string | undefined> = this.store.select(selectFocusElement);\n  /**\n   * Boolean flag for transfer order state loading\n   */\n  readonly paymentOrderCallState$: Observable<CallState> = this.store.select(selectTransferOrderCallState);\n\n  constructor(private readonly store: Store<QuickTransferState>) {}\n\n  /**\n   * Method to set initial accounts after fetching\n   */\n  fetchAccounts() {\n    this.store.dispatch(accountsFetch());\n  }\n\n  /**\n   * Method to set initial external accounts after fetching\n   */\n  fetchExtAccounts() {\n    this.store.dispatch(externalAccountsFetch());\n  }\n\n  /**\n   * Method to set initial contacts after fetching\n   */\n  fetchContacts() {\n    this.store.dispatch(contactsFetch());\n  }\n\n  /**\n   * Method to set initial contacts after fetching\n   */\n  sendTranferOrder(reqData: PaymentOrdersPost) {\n    this.store.dispatch(sendTransferOrder({ reqData }));\n  }\n\n  /**\n   * Method to set initial accounts after fetching\n   */\n  setView(view: ViewState, focus?: string) {\n    this.store.dispatch(openView({ view, focus }));\n  }\n\n  /**\n   * Method to set toPayee for account\n   */\n  setPayee(id: string) {\n    this.store.dispatch(setPayeeAccount({ id }));\n  }\n\n  /**\n   * Method to set initial accounts after fetching\n   */\n  selectFromAccount(accountId: string) {\n    this.store.dispatch(setFromAccount({ accountId }));\n  }\n  /**\n   * Method to set transfer amount\n   */\n  setAmount({ amount, defaultCurrency }: { amount: string; defaultCurrency?: string }) {\n    this.store.dispatch(setAmount({ amount, defaultCurrency }));\n  }\n  /**\n   * Method to open/close confirmation modal\n   */\n  setModalOpen(isOpen: boolean) {\n    this.store.dispatch(setModalOpen({ isOpen }));\n  }\n  /**\n   * Method to set form submitted\n   */\n  setTouchedField(fieldName: string) {\n    this.store.dispatch(setFieldTouched({ fieldName }));\n  }\n  /**\n   * Method to reset the widget\n   */\n  reset(focus?: string) {\n    this.store.dispatch(resetWidget({ focus }));\n  }\n  /**\n   * Method to set form submitted\n   */\n  resetFocus() {\n    this.store.dispatch(resetFocus());\n  }\n  /**\n   * Method to pass default currency into the store\n   */\n  updateDefaultCurrency(currency: string) {\n    this.store.dispatch(setDefaultCurrency({ currency }));\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { Arrangement } from '../../models/items.model';\nimport { CallState, LoadingState } from '../../models/state.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\n\n@Component({\n  template: '',\n})\nexport class BaseAccountSelectorComponent {\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n\n  constructor(readonly store: QuickTransferStoreService) {}\n  /**\n   * Stream of accounts\n   */\n  accounts$?: Observable<Arrangement[]>;\n  /**\n   * Stream of external accounts\n   */\n  extAccounts$?: Observable<Arrangement[]>;\n  /**\n   * Stream of accountsCallState\n   */\n  readonly accountsCallState$: Observable<CallState | undefined> = this.store.accountsCallState$;\n  /**\n   * Enum for loadingstate\n   */\n  readonly loadingstate = LoadingState;\n  /**\n   * Stream of extAccountsCallState\n   */\n  readonly extAccountsCallState$: Observable<CallState | undefined> = this.store.extAccountsCallState$;\n\n  /**\n   * Method to navigate back to the main Form\n   */\n  backToForm(fromSelector: string) {\n    this.store.setView(ViewState.FORM, fromSelector);\n  }\n  /**\n   * Method to dispatch store action for fetching the accounts\n   */\n  getAccounts() {\n    this.store.fetchAccounts();\n  }\n  /**\n   * Method to dispatch store action for fetching external accounts\n   */\n  getExtAccounts() {\n    this.store.fetchExtAccounts();\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { Arrangement } from '../../models/items.model';\n\n@Component({\n  selector: 'bb-quick-transfer-accounts-ui',\n  templateUrl: './quick-transfer-accounts.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferAccountsComponent {\n  /**\n   * Arrangements that are in the type of Account or Contact or ExternalAccount\n   */\n  @Input() arrangements: Arrangement[] | undefined;\n  /**\n   * Selected account to apply \"selected\" css\n   */\n  @Input() selected: string | undefined;\n  /**\n   * Id of account that is selected at the other account selector\n   */\n  @Input() selectedCounterPartyAccount: string | undefined;\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n  /**\n   * Output to inform which account or contact is selected\n   */\n  @Output() select = new EventEmitter<string>();\n  /**\n   * Emit event to inform parent with the picked account id\n   *\n   * @param id\n   */\n  pick(id: string) {\n    this.select.emit(id);\n  }\n}\n","<button\n  bbButton\n  color=\"unstyled\"\n  *ngFor=\"let arrangement of arrangements\"\n  class=\"bb-quick-transfer__product-item bb-stack\"\n  [class.bb-quick-transfer--selected-bg]=\"arrangement.uuid === selected\"\n  (click)=\"pick(arrangement.uuid)\"\n  [disabled]=\"arrangement.uuid === selectedCounterPartyAccount\"\n>\n  <bb-product-item-basic-account-ui\n    [highlight]=\"config?.uiComponentProps.productItemHighlight\"\n    [title]=\"arrangement.name\"\n    [amount]=\"arrangement?.balance\"\n    [productNumber]=\"arrangement.number\"\n    [currency]=\"arrangement?.currency\"\n    [productNumberFormat]=\"config?.uiComponentProps.accountNumberFormat\"\n    [showCurrencySymbol]=\"config?.uiComponentProps.mapCurrency\"\n    [active]=\"false\"\n    [class.bb-quick-transfer--disabled]=\"arrangement.uuid === selectedCounterPartyAccount\"\n  ></bb-product-item-basic-account-ui>\n</button>\n","export const TO_ACCOUNT = '[data-role=\"select-payee-button\"] button';\nexport const FROM_ACCOUNT = '[data-role=\"select-from-button\"] button';\n","import { AbstractControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Get params from all router-outlet scopes\n */\nexport function getRouteParams(route: ActivatedRoute) {\n  let params = route.snapshot.params;\n  params = { ...route.snapshot.queryParams, ...params };\n  if (route.children) {\n    for (const r of route.children) {\n      params = { ...getRouteParams(r), ...params };\n    }\n  }\n  return params;\n}\n\n/** Amount value should be positive value **/\nexport function nonZeroValidator(control: AbstractControl): { [key: string]: any } | null {\n  if (!control.value || Number(control.value) <= 0) {\n    return { nonZero: true };\n  } else {\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n}\n\nexport function generateId() {\n  return Math.floor(Math.random() * Date.now()).toString();\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FROM_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { AccountItem, TransferAmount } from '../../models/items.model';\nimport { CallState, ErrorState, LoadingState } from '../../models/state.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { generateId } from '../../utils/helpers';\n\n@Component({\n  selector: 'bb-quick-transfer-complete-ui',\n  templateUrl: './quick-transfer-complete.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferCompleteComponent implements AfterViewInit {\n  constructor(private readonly store: QuickTransferStoreService) {}\n  readonly id = generateId();\n  /**\n   * success image path\n   */\n  @Input() successImg: string | undefined;\n  /**\n   * success image path for reduced motion\n   */\n  @Input() successImgNoMotion: string | undefined;\n  /**\n   * unique time to reload animated svg everytime\n   */\n  readonly timestamp = new Date().getTime();\n  /**\n   * Stream of transfer amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.amount$;\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.toPayee$;\n  /**\n   * Stream of paymentOrderCallState\n   */\n  readonly paymentOrderCallState$: Observable<CallState> = this.store.paymentOrderCallState$.pipe(\n    map(state => {\n      if ((state as ErrorState).error) {\n        const error = (state as ErrorState).error;\n        const cancelTransactionSigningMessage = `Your Transfer Has Been Cancelled.`;\n        const defaultErrorMessage = `Oops, something went wrong!`;\n        const transactionSigningCancelErrorText = 'rejected_by_user';\n        const message =\n          error.statusText === transactionSigningCancelErrorText\n            ? $localize`:@@quick-transfer.cancel-transaction-signing.fail-message:${cancelTransactionSigningMessage}`\n            : $localize`:@@quick-transfer.complete.fail-message:${defaultErrorMessage}`;\n\n        return { ...error, message };\n      }\n      return state;\n    }),\n  );\n  /**\n   * Enum for loadingstate\n   */\n  readonly loadingstate = LoadingState;\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n\n  @ViewChild('done') doneButton!: ElementRef;\n\n  ngAfterViewInit() {\n    this.doneButton.nativeElement.focus();\n  }\n  /**\n   * Method to call resetWidget\n   */\n  restart() {\n    this.store.reset(FROM_ACCOUNT);\n  }\n  /**\n   * Method to get back to form for trying transfer again\n   */\n  tryAgain() {\n    this.store.setView(ViewState.FORM, FROM_ACCOUNT);\n  }\n}\n","<div class=\"bb-quick-transfer__complete\">\n  <ng-container *ngIf=\"(paymentOrderCallState$ | async) === loadingstate.LOADED; else paymentOrderFail\">\n    <div\n      role=\"dialog\"\n      attr.aria-describedby=\"payment-success-img-{{ id }} payment-success-title-{{ id }} payment-success-description-{{\n        id\n      }}\"\n    >\n      <div class=\"bb-text-align-right bb-block\">\n        <button\n          bbButton\n          color=\"unstyled\"\n          class=\"btn-unstyled--focusable\"\n          (click)=\"restart()\"\n          data-role=\"clear-icon-button\"\n          aria-label=\"close transfer\"\n          i18-aria-label=\"Close transfer|Text for close transfer@@quick-transfer.complete.close.button\"\n        >\n          <bb-icon-ui name=\"clear\" size=\"lg\"></bb-icon-ui>\n        </button>\n      </div>\n      <div class=\"bb-text-align-center flex-fill bb-block bb-block--lg\">\n        <picture>\n          <source srcset=\"{{ successImgNoMotion }}\" media=\"(prefers-reduced-motion: reduce)\" />\n          <img\n            id=\"payment-success-img-{{ id }}\"\n            srcset=\"{{ successImg + '?' + timestamp }}\"\n            alt=\"Transfer succeeded!\"\n            i18n-alt=\"Transfer succeeded|Text for transfer succeeded@@quick-transfer.complete.transfer-succeeded\"\n            data-role=\"transfer-success-anim\"\n            class=\"img-fluid\"\n          />\n        </picture>\n        <bb-header-ui\n          id=\"payment-success-title-{{ id }}\"\n          headingClasses=\"bb-text-semi-bold h5\"\n          headingType=\"h3\"\n          heading=\"Well done!\"\n          i18n-heading=\"Well Done!|Text for well done@@quick-transfer.complete.well-done\"\n        ></bb-header-ui>\n        <span\n          class=\"bb-text-support bb-subtitle\"\n          *ngIf=\"amount$ | async as amount\"\n          id=\"payment-success-description-{{ id }}\"\n          ><span i18n=\"Success Transfer|Text for success transfer@@quick-transfer.complete.success-message\"\n            >You just transferred\n          </span>\n          <bb-amount-ui\n            [currency]=\"amount.currency\"\n            [amount]=\"amount.amount\"\n            [mapCurrency]=\"config?.uiComponentProps.mapCurrency\"\n            [showPlusSign]=\"false\"\n          ></bb-amount-ui>\n          <span i18n=\"Transfer To|Text for success transfer to@@quick-transfer.complete.success-message-to\"> to </span>\n          <ng-container *ngIf=\"toPayee$ | async as toPayee\"\n            ><span>{{ toPayee.name }}.</span></ng-container\n          >\n        </span>\n      </div>\n      <div class=\"bb-text-align-center bb-block bb-block--sm\">\n        <button\n          bbButton\n          color=\"secondary\"\n          (click)=\"restart()\"\n          i18n=\"Done button|Transfer Done@@quick-transfer.complete.button.transfer-done\"\n          data-role=\"transfer-done\"\n          #done\n        >\n          Done\n        </button>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<ng-template #paymentOrderFail>\n  <div role=\"dialog\" attr.aria-describedby=\"payment-error-title-{{ id }} payment-error-description-{{ id }}\">\n    <div class=\"bb-text-align-right bb-block bb-block--xl\">\n      <button\n        bbButton\n        color=\"unstyled\"\n        (click)=\"tryAgain()\"\n        data-role=\"clear-icon-button\"\n        aria-label=\"close transfer\"\n        i18-aria-label=\"Close transfer|Text for close transfer@@quick-transfer.complete.close.button\"\n      >\n        <bb-icon-ui name=\"clear\" size=\"lg\"></bb-icon-ui>\n      </button>\n    </div>\n    <div\n      class=\"bb-text-align-center flex-fill bb-block bb-block--xl\"\n      data-role=\"transfer-fail-message\"\n      *ngIf=\"paymentOrderCallState$ | async as errorState\"\n    >\n      <bb-icon-ui\n        color=\"danger\"\n        class=\"bb-quick-transfer__fail-icon bb-block bb-block--md\"\n        name=\"error-outline\"\n        size=\"xxl\"\n        data-role=\"complete-error-outline\"\n      ></bb-icon-ui>\n\n      <bb-header-ui\n        id=\"payment-error-title-{{ id }}\"\n        headingClasses=\"bb-text-semi-bold h5\"\n        headingType=\"h3\"\n        [heading]=\"errorState.message\"\n      ></bb-header-ui>\n      <span\n        id=\"payment-error-description-{{ id }}\"\n        class=\"bb-text-support bb-subtitle\"\n        i18n=\"Transfer Failed Sub-Message|Extra Text for the failed transfer@@quick-transfer.complete.fail-sub.message\"\n        >Our system was unable to process your transfer at the moment.</span\n      >\n    </div>\n    <div class=\"bb-text-align-center bb-block bb-block--sm\">\n      <button\n        bbButton\n        color=\"secondary\"\n        i18n=\"Try again button|Transfer Fail@@quick-transfer.complete.button.try-again\"\n        data-role=\"transfer-try-again-button\"\n        (click)=\"tryAgain()\"\n        #done\n      >\n        Try again\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Arrangement, Contact } from './items.model';\nimport { ViewState } from './view.model';\n\nexport interface BaseObject<T> {\n  [key: string]: T;\n}\n\nexport enum QuickTransferProductKinds {\n  currentAccount = 'Current Account',\n  savingsAccount = 'Savings Account',\n  creditCard = 'Credit Card',\n  loanAccount = 'Loan',\n  connectedAccounts = 'Connected Account',\n  contacts = 'Contact',\n}\n\nexport interface ValidationMessage {\n  name: string;\n  message: string;\n}\n\n/**\n * @deprecated since version 1.1.0 use `QuickTransferJourneyConfiguration` instead\n */\nexport interface FilterState extends BaseObject<Array<string | number | boolean> | string> {\n  key: string;\n  value: Array<string | number | boolean>;\n}\n\nexport interface QuickTransferBaseField {\n  validationMessages?: ValidationMessage[];\n  validators?: Array<ValidatorFn>;\n  asyncValidators?: Array<AsyncValidatorFn>;\n  label?: string;\n}\n\nexport interface QuickTransferField extends QuickTransferBaseField {\n  productKinds?: QuickTransferProductKinds[];\n  connectedAccountsSubHeader?: string;\n  mapItems?: (items: Arrangement[]) => Arrangement[];\n  mapContacts?: (items: Contact[]) => Contact[];\n  /** @deprecated since version 1.1.0, use `mapItems` instead */\n  otherFilters?: FilterState[];\n}\nexport interface QuickTransferAmountField extends QuickTransferBaseField {\n  initialCurrency: string;\n  autoDecimal: boolean;\n  maxLength?: number;\n  placeholder?: string;\n  wrapperClasses?: string;\n  required?: boolean;\n}\nexport interface PaymentTypes {\n  internal: string;\n  external?: string;\n  contact?: string;\n}\nexport interface DisabledCombination {\n  from: QuickTransferProductKinds;\n  to: QuickTransferProductKinds;\n}\n\nexport interface QuickTransferFields {\n  fromAccount: QuickTransferField;\n  toAccount: QuickTransferField;\n  amount: QuickTransferAmountField;\n}\n\nexport interface UiComponentProps {\n  mapCurrency?: boolean;\n  accountNumberFormat?: AccountNumberFormat;\n  productItemHighlight?: boolean;\n}\n\nexport interface AccountNumberFormat {\n  length?: number;\n  maskRange?: [number, number];\n  segments?: number | Array<number>;\n}\n\nexport interface QuickTransferJourneyConfiguration {\n  fields: QuickTransferFields;\n  businessFunction?: string;\n  successEvents?: string;\n  paymentTypes: PaymentTypes;\n  disabledCombinations: DisabledCombination[];\n  productSummaryQueryParameters?: BaseObject<any>;\n  uiComponentProps: UiComponentProps;\n  titles: Titles;\n}\n\nexport interface Titles {\n  [ViewState.FORM]: string;\n  [ViewState.FROM]: string;\n  [ViewState.PAYEE]: string;\n  [ViewState.REVIEW]: string;\n}\n\n/**\n * @deprecated since version 1.1.0 use `QuickTransferJourneyConfiguration` instead\n */\nexport interface QuickTransferConfigType {\n  fields: QuickTransferFields;\n  businessFunction?: string;\n  successEvents?: string;\n  paymentTypes: PaymentTypes;\n  disabledCombinations: DisabledCombination[];\n  productSummaryQueryParameters?: BaseObject<any>;\n  uiComponentProps: UiComponentProps;\n}\n","import { InvolvedPartyRole, PaymentOrdersPost, SchemeNames } from '@backbase/data-ang/payment-order';\nimport { PaymentTypes, QuickTransferProductKinds } from '../models/config.model';\nimport { AccountItem, TransferAmount } from '../models/items.model';\n\nexport const getCurrentDate = () => new Date().toISOString().slice(0, 10);\n\nexport const mapPaymentData = (\n  fromAccount: AccountItem,\n  toAccount: AccountItem,\n  amount: TransferAmount,\n  paymentTypes: PaymentTypes,\n): PaymentOrdersPost => {\n  const { connectedAccounts, contacts } = QuickTransferProductKinds;\n  const _fromAccount = fromAccount.productKindName === connectedAccounts ? toAccount : fromAccount;\n  const _toAccount = fromAccount.productKindName === connectedAccounts ? fromAccount : toAccount;\n  const _role =\n    fromAccount.productKindName === connectedAccounts ? InvolvedPartyRole.DEBTOR : InvolvedPartyRole.CREDITOR;\n\n  function getPaymentType() {\n    switch (_toAccount.productKindName) {\n      case connectedAccounts:\n        return paymentTypes.external;\n      case contacts:\n        return paymentTypes.contact;\n      default:\n        return paymentTypes.internal;\n    }\n  }\n  function getScheme() {\n    switch (_toAccount.productKindName) {\n      case connectedAccounts:\n        return SchemeNames.EXTERNALID;\n      case contacts:\n        return SchemeNames.BBAN;\n      default:\n        return SchemeNames.ID;\n    }\n  }\n\n  const originatorAccount = {\n    identification: {\n      identification: _fromAccount.uuid,\n      schemeName: SchemeNames.ID,\n    },\n  };\n\n  const identification = {\n    identification: _toAccount.productKindName === contacts ? _toAccount.number : _toAccount.uuid,\n    schemeName: getScheme(),\n  };\n\n  const transferTransactionInformation = {\n    instructedAmount: {\n      amount: amount.amount,\n      currencyCode: amount.currency,\n    },\n    counterparty: {\n      name: _toAccount.name,\n      role: _role,\n    },\n    counterpartyAccount: {\n      identification,\n      ...(_toAccount.productKindName === contacts && {\n        selectedContact: { contactId: _toAccount.uuid, accountId: '' },\n      }),\n    },\n  };\n\n  return {\n    originatorAccount,\n    requestedExecutionDate: getCurrentDate(),\n    paymentType: getPaymentType(),\n    transferTransactionInformation,\n  };\n};\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy } from '@angular/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PaymentTypes, QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { AccountItem, TransferAmount } from '../../models/items.model';\nimport { CallState, LoadingState } from '../../models/state.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { mapPaymentData } from '../../utils/payment-mapper';\n\n@Component({\n  selector: 'bb-quick-transfer-confirmation-modal-ui',\n  templateUrl: './quick-transfer-confirmation-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferConfirmationModalComponent implements OnDestroy {\n  /**\n   * success events array\n   */\n  @Input() paymentTypes?: PaymentTypes;\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n  /**\n   * Subscriptions for form fields\n   */\n  subscriptions$: Subscription | undefined;\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.toPayee$;\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccount$: Observable<AccountItem | undefined> = this.store.fromAccount$;\n  /**\n   * Stream of transfer amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.amount$;\n\n  /**\n   * Stream of isModalOpen\n   */\n  readonly isOpen$: Observable<boolean> = this.store.isModalOpen$;\n  /**\n   * Stream of loading\n   */\n  readonly paymentOrderCallState$: Observable<CallState> = this.store.paymentOrderCallState$;\n  /**\n   * Enum for loadingstate\n   */\n  readonly loadingstate = LoadingState;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n\n  constructor(private readonly store: QuickTransferStoreService) {}\n  /**\n   * close the modal\n   */\n  closeModal() {\n    this.store.setModalOpen(false);\n  }\n  /**\n   * close the modal\n   */\n  handleConfirm() {\n    this.subscriptions$ = combineLatest([this.fromAccount$, this.toPayee$, this.amount$])\n      .pipe(take(1))\n      .subscribe(([fromAccount, toPayee, amount]) => {\n        if (fromAccount && toPayee && amount) {\n          const postData = mapPaymentData(fromAccount, toPayee, amount, this.paymentTypes || ({} as PaymentTypes));\n          this.store.sendTranferOrder(postData);\n        }\n      });\n  }\n  ngOnDestroy() {\n    if (this.subscriptions$) {\n      this.subscriptions$.unsubscribe();\n    }\n  }\n}\n","<bb-modal-ui\n  class=\"bb-quick-transfer__modal\"\n  [isOpen]=\"isOpen$ | async\"\n  (cancel)=\"closeModal()\"\n  (confirm)=\"handleConfirm()\"\n>\n  <bb-modal-header-ui [title]=\"config?.titles?.[viewState.FORM]\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div class=\"bb-block bb-block--md\" *ngIf=\"amount$ | async as amount\" data-role=\"quick-transfer-review-amount\">\n        <label\n          class=\"bb-block bb-block--xs font-weight-normal bb-text-support bb-subtitle\"\n          i18n=\"Amount label|Label for transfer amount@@quick-transfer.confirmation-modal.amount-label\"\n          >Amount</label\n        ><br />\n        <bb-amount-ui\n          data-role=\"confirmation-amount\"\n          class=\"bb-highlight\"\n          [currency]=\"amount.currency\"\n          [amount]=\"amount.amount\"\n          [mapCurrency]=\"true\"\n          [showPlusSign]=\"false\"\n        ></bb-amount-ui>\n      </div>\n      <div class=\"bb-stack\">\n        <div\n          class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--spacing-lg bb-quick-transfer__modal-from bb-stack__item--fill\"\n          *ngIf=\"fromAccount$ | async as fromAccount\"\n        >\n          <div class=\"bb-quick-transfer__modal-wrap\">\n            <label\n              class=\"bb-text-support bb-subtitle font-weight-normal bb-block bb-block--xs\"\n              i18n=\"\n                From account label|Label for account to be transferred\n                from@@quick-transfer.confirmation-modal.from-label\"\n              >From</label\n            >\n            <div>\n              <bb-product-item-basic-account-ui\n                data-role=\"confirmation-from-account\"\n                [title]=\"fromAccount.name\"\n                [productNumber]=\"fromAccount.number\"\n                [amount]=\"fromAccount?.balance\"\n                [currency]=\"fromAccount?.currency\"\n                [productNumberFormat]=\"config?.uiComponentProps.accountNumberFormat\"\n                [showCurrencySymbol]=\"config?.uiComponentProps.mapCurrency\"\n                [highlight]=\"config?.uiComponentProps.productItemHighlight\"\n                [active]=\"false\"\n              ></bb-product-item-basic-account-ui>\n            </div>\n          </div>\n        </div>\n        <div class=\"bb-stack__item bb-stack__item--spacing-lg\" aria-hidden=\"true\">\n          <bb-icon-ui name=\"arrow-forward\" size=\"md\"></bb-icon-ui>\n        </div>\n        <div\n          class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--fill\"\n          *ngIf=\"toPayee$ | async as toAccount\"\n        >\n          <div class=\"bb-quick-transfer__modal-wrap\">\n            <label\n              class=\"bb-text-support bb-subtitle font-weight-normal bb-block bb-block--xs\"\n              i18n=\"To account label|Label for account to be transferred to@@quick-transfer.confirmation-modal.to-label\"\n              >To</label\n            >\n            <div>\n              <bb-product-item-basic-account-ui\n                data-role=\"confirmation-to-account\"\n                [title]=\"toAccount.name\"\n                [productNumber]=\"toAccount.number\"\n                [amount]=\"toAccount?.balance\"\n                [currency]=\"toAccount?.currency\"\n                [productNumberFormat]=\"config?.uiComponentProps.accountNumberFormat\"\n                [showCurrencySymbol]=\"config?.uiComponentProps.mapCurrency\"\n                [highlight]=\"config?.uiComponentProps.productItemHighlight\"\n                [active]=\"false\"\n              ></bb-product-item-basic-account-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <bb-load-button-ui\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          (click)=\"handleConfirm()\"\n          i18n=\"Confirm button|Button for to confirm transfer@@quick-transfer.confirmation-modal.confirm\"\n          data-role=\"modal-confirm-button\"\n          [isLoading]=\"(paymentOrderCallState$ | async) === loadingstate.LOADING\"\n        >\n          Confirm transfer\n        </bb-load-button-ui>\n        <button\n          bbButton\n          data-role=\"cancel-button\"\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"closeModal()\"\n          [disabled]=\"(paymentOrderCallState$ | async) === loadingstate.LOADING\"\n        >\n          <span\n            i18n=\"Cancel button|Button for to cancel transfer confirmation@@quick-transfer.confirmation-modal.cancel\"\n            >Cancel</span\n          >\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Optional, Output, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { AccountItem } from '../../models/items.model';\n\n@Component({\n  selector: 'bb-custom-product-selector',\n  templateUrl: './custom-product-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomProductSelectorComponent implements ControlValueAccessor {\n  constructor(@Optional() @Self() public parentFormControl: NgControl) {\n    if (this.parentFormControl) {\n      this.parentFormControl.valueAccessor = this;\n    }\n  }\n\n  @Output() open = new EventEmitter<boolean>();\n\n  @Input() emptyLabel: string | undefined;\n\n  /**\n   * Selected account\n   */\n  @Input() account: AccountItem | undefined;\n\n  /**\n   * parent touched state\n   */\n  @Input() touched = false;\n\n  @Input('aria-describedby') ariaDescribedby: string | undefined;\n\n  writeValue(model: any | null): void {\n    if (!model) {\n      return;\n    }\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  markAsTouched() {\n    this.onTouched();\n  }\n  /**\n   * Method to open from account selector\n   */\n  openAccountSelectorView(): void {\n    this.open.emit(true);\n  }\n}\n","<button\n  bbButton\n  color=\"unstyled\"\n  [class.border-danger]=\"touched && parentFormControl?.invalid\"\n  [attr.aria-describedby]=\"ariaDescribedby\"\n  class=\"bb-stack form-control bb-quick-transfer-selector-field\"\n  (click)=\"openAccountSelectorView()\"\n>\n  <span\n    class=\"bb-stack__item bb-stack__item--fill bb-text-semi-bold bb-ellipsis--single-line\"\n    *ngIf=\"account; else accountTemplate\"\n    >{{ account.name }}</span\n  >\n  <ng-template #accountTemplate>\n    <span class=\"bb-stack__item bb-stack__item--fill bb-text-support\">{{ emptyLabel }}</span>\n  </ng-template>\n  <bb-icon-ui name=\"angle-right\" cropped class=\"bb-text-support bb-stack__item\"></bb-icon-ui>\n</button>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { fadeSlideAnimation } from '@backbase/ui-ang/util';\nimport { ErrorMessage } from '../../models/state.model';\n\n@Component({\n  selector: 'bb-quick-transfer-validation-message',\n  templateUrl: './validation-message.component.html',\n  animations: [fadeSlideAnimation],\n})\nexport class QuickTransferValidationMessageComponent implements OnInit {\n  /**\n   * The form control instance\n   */\n  @Input() control!: FormControl;\n  /**\n   * List of validation messages\n   */\n  @Input() validationMessages!: Array<ErrorMessage>;\n  /**\n   * Id of validation message\n   */\n  @Input() id!: string;\n\n  requiredMessage!: string;\n\n  ngOnInit() {\n    this.requiredMessage = this.getValidationMessage('required');\n  }\n\n  getValidationMessage(error?: string): string {\n    const validation = this.validationMessages?.find(msg => !!this.control?.errors?.[error || msg.name]);\n    return validation?.message || '';\n  }\n}\n","<bb-input-validation-message-ui\n  data-role=\"input-error\"\n  *ngIf=\"control?.touched && control?.invalid\"\n  [showErrors]=\"control?.touched && control?.invalid\"\n  [@fadeSlideInOut]\n>\n  <ng-container *ngIf=\"control?.errors?.['required']; else invalidError\">\n    <span data-role=\"required-error\" [attr.id]=\"id\" *ngIf=\"requiredMessage\">\n      {{ requiredMessage }}\n    </span>\n  </ng-container>\n\n  <ng-template #invalidError>\n    <span data-role=\"required-error\" [attr.id]=\"id\" *ngIf=\"getValidationMessage() as validationMessage\">\n      {{ validationMessage }}</span\n    >\n  </ng-template>\n</bb-input-validation-message-ui>\n","import { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport BigNumber from 'bignumber.js';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, first, take, takeUntil } from 'rxjs/operators';\nimport { QuickTransferAmountField, QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { AccountItem, TransferAmount } from '../../models/items.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\n\n@Component({\n  selector: 'bb-quick-transfer-form-ui',\n  templateUrl: './quick-transfer-form.component.html',\n})\nexport class QuickTransferFormComponent implements OnInit, OnDestroy, AfterViewInit {\n  /**\n   * The format used for bignumber;\n   */\n  private readonly format: BigNumber.Format;\n  private readonly decimalSeparator: string;\n\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.toPayee$;\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccount$: Observable<AccountItem | undefined> = this.store.fromAccount$;\n  /**\n   * Stream of amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.amount$;\n  /**\n   * Stream of touchedFields\n   */\n  readonly touchedFields$: Observable<string[] | undefined> = this.store.touchedFields$;\n  /**\n   * The reactive form\n   */\n  form?: FormGroup;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n  /**\n   * unique key used for ids\n   */\n  readonly id = new Date().getTime();\n\n  /**\n   * Stream of the current view\n   */\n  readonly currentView$: Observable<ViewState | undefined> = this.store.currentView$;\n  /**\n   * Stream of the current view\n   */\n  get amountConfig(): QuickTransferAmountField | undefined {\n    return this.config?.fields.amount;\n  }\n\n  @ViewChild('formElement') formEl!: ElementRef;\n\n  destroy$ = new Subject();\n\n  constructor(\n    private readonly store: QuickTransferStoreService,\n    private readonly formBuilder: FormBuilder,\n    @Inject(LOCALE_ID) private readonly locale: string,\n  ) {\n    this.decimalSeparator = getLocaleNumberSymbol(this.locale, NumberSymbol.CurrencyDecimal);\n    this.format = {\n      groupSeparator: '',\n      decimalSeparator: this.decimalSeparator,\n      groupSize: 3,\n    };\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.form\n      ?.get('amountGroup.amount')\n      ?.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroy$))\n      .subscribe(change => {\n        this.storeAmountValue(change);\n      });\n    this.touchedFields$.pipe(take(1)).subscribe(fields => {\n      if (fields?.length) {\n        fields.forEach(field => {\n          this.form?.get(field)?.markAsTouched();\n        });\n      }\n    });\n    //Set Initial form data from store\n    combineLatest([\n      this.amount$.pipe(take(1)),\n      this.toPayee$.pipe(take(1)),\n      this.fromAccount$.pipe(distinctUntilChanged()), // To have account preselected by route params\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([amount, toAccount, fromAccount]) => {\n        const amountVal = amount?.amount;\n        this.form?.patchValue({\n          amountGroup: {\n            amount: amountVal ? new BigNumber(amountVal).toFormat(this.format) : '',\n            currency: amount?.currency || this.amountConfig?.initialCurrency,\n          },\n          toAccount,\n          fromAccount,\n        });\n      });\n  }\n\n  ngAfterViewInit() {\n    this.store.focusElement$.pipe(distinctUntilChanged(), filter(Boolean), takeUntil(this.destroy$)).subscribe(el => {\n      const focusElement = this.formEl.nativeElement.querySelector(el);\n      if (focusElement) {\n        focusElement.focus({ preventScroll: true });\n        this.store.resetFocus();\n      }\n    });\n    this.amount$\n      .pipe(\n        filter(amount => !amount),\n        take(1),\n      )\n      .subscribe(() => {\n        this.form?.get('amountGroup.amount')?.patchValue(' ');\n        this.form?.reset();\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Method to open from account selector\n   */\n  openFromAccount(): void {\n    this.store.setView(ViewState.FROM);\n    this.store.setTouchedField('fromAccount');\n  }\n  /**\n   * Method to open to account selector\n   */\n  openPayeeAccount() {\n    this.store.setView(ViewState.PAYEE);\n    this.store.setTouchedField('toAccount');\n  }\n  /**\n   * Method to store amount input value\n   */\n  private storeAmountValue(amount: string) {\n    this.store.setAmount({ amount: amount?.replace(this.decimalSeparator, '.') });\n  }\n\n  /**\n   * Method to handle transfer\n   */\n  async openConfirmation() {\n    const currentView = await this.currentView$.pipe(first()).toPromise();\n    if (currentView === ViewState.FORM && this.form?.valid) {\n      this.storeAmountValue(this.form.value.amountGroup.amount);\n      this.store.setModalOpen(true);\n    } else {\n      this.setTouched('amountGroup.amount');\n      this.setTouched('fromAccount');\n      this.setTouched('toAccount');\n    }\n  }\n\n  /**\n   * Method to check field Validity\n   */\n  isFieldValid(fieldName: string) {\n    const control = this.form?.get(fieldName);\n    return control && (control.valid || control.untouched);\n  }\n  /**\n   * Method to set field as touched\n   */\n  setTouched(fieldName: string) {\n    const control = this.form?.get(fieldName);\n    if (control) {\n      control.markAsTouched();\n      this.store.setTouchedField(fieldName);\n    }\n  }\n\n  private initializeForm(): void {\n    const { fromAccount, toAccount, amount } = this.config?.fields || {};\n\n    this.form = this.formBuilder.group({\n      amountGroup: this.formBuilder.group({\n        amount: ['', amount?.validators || [], amount?.asyncValidators || []],\n        currency: ['', Validators.required],\n      }),\n      fromAccount: ['', fromAccount?.validators || [], fromAccount?.asyncValidators || []],\n      toAccount: ['', toAccount?.validators || [], toAccount?.asyncValidators || []],\n    });\n  }\n}\n","<div class=\"bb-quick-transfer__view bb-quick-transfer__view--form\">\n  <div class=\"bb-block bb-quick-transfer__heading\">\n    <div class=\"bb-stack\">\n      <bb-header-ui\n        [heading]=\"config?.titles?.[viewState.FORM]\"\n        data-role=\"quick-transfer-header\"\n        headingType=\"h2\"\n        headingClasses=\"bb-block bb-block--lg\"\n        class=\"bb-stack__item bb-stack__item--fill\"\n      ></bb-header-ui>\n    </div>\n  </div>\n  <form\n    class=\"bb-quick-transfer__form\"\n    [formGroup]=\"form\"\n    data-role=\"quick-transfer-form\"\n    (ngSubmit)=\"openConfirmation()\"\n    #formElement\n  >\n    <fieldset [disabled]=\"(currentView$ | async) !== viewState.FORM\">\n      <legend class=\"sr-only\" i18n=\"Legend|Quick transfer form legend@@quick-transfer.form.legend\">\n        Quick transfer Form\n      </legend>\n      <div class=\"bb-block bb-block--lg\">\n        <label class=\"bb-label\" data-role=\"from-label\">{{ config?.fields?.fromAccount?.label }}</label>\n        <bb-custom-product-selector\n          [touched]=\"!isFieldValid('fromAccount')\"\n          formControlName=\"fromAccount\"\n          (focusout)=\"setTouched('fromAccount')\"\n          [account]=\"fromAccount$ | async\"\n          (open)=\"openFromAccount()\"\n          data-role=\"select-from-button\"\n          emptyLabel=\"Select your account\"\n          aria-describedby=\"{{ 'fromAccount-errors-' + id }}\"\n          i18n-emptyLabel=\"Select Account|Quick transfer input for account@@quick-transfer.form.from\"\n        ></bb-custom-product-selector>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'fromAccount-errors-' + id }}\"\n          [control]=\"form?.get('fromAccount')\"\n          [validationMessages]=\"config?.fields?.fromAccount?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div class=\"bb-block bb-block--lg\">\n        <label\n          class=\"bb-label\"\n          data-role=\"payee-label\"\n          i18n=\"Input label|Quick transfer input label for beneficiary@@quick-transfer.form.to.label\"\n          >{{ config?.fields?.toAccount?.label }}</label\n        >\n        <bb-custom-product-selector\n          [touched]=\"!isFieldValid('toAccount')\"\n          formControlName=\"toAccount\"\n          (focusout)=\"setTouched('toAccount')\"\n          [account]=\"toPayee$ | async\"\n          (open)=\"openPayeeAccount()\"\n          data-role=\"select-payee-button\"\n          emptyLabel=\"Select beneficiary\"\n          aria-describedby=\"{{ 'toAccount-errors-' + id }}\"\n          i18n-emptyLabel=\"Select beneficiary|Quick transfer input for beneficiary@@quick-transfer.form.to\"\n        ></bb-custom-product-selector>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'toAccount-errors-' + id }}\"\n          [control]=\"form?.get('toAccount')\"\n          [validationMessages]=\"config?.fields?.toAccount?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div\n        class=\"bb-block bb-block--xl\"\n        formGroupName=\"amountGroup\"\n        [class.was-validated]=\"!isFieldValid('amountGroup.amount')\"\n      >\n        <label\n          class=\"bb-label\"\n          for=\"{{ 'amount-' + id }}\"\n          i18n=\"Amount of transfer|Quick transfer input for amount@@quick-transfer.form.amount\"\n          >{{ config?.fields?.amount?.label }}</label\n        >\n        <bb-amount-input-ui\n          formControlName=\"amount\"\n          data-role=\"amount-input\"\n          [id]=\"'amount-' + id\"\n          [autoDecimal]=\"amountConfig?.autoDecimal\"\n          (focusout)=\"setTouched('amountGroup.amount')\"\n          [wrapperClasses]=\"amountConfig?.wrapperClasses\"\n          [mapCurrency]=\"config?.uiComponentProps.mapCurrency\"\n          [currency]=\"(fromAccount$ | async)?.currency || amountConfig?.initialCurrency\"\n          [required]=\"amountConfig?.required\"\n          aria-describedby=\"{{ 'amount-errors-' + id }}\"\n          [placeholder]=\"amountConfig?.placeholder\"\n        ></bb-amount-input-ui>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'amount-errors-' + id }}\"\n          [control]=\"form?.get('amountGroup.amount')\"\n          [validationMessages]=\"amountConfig?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div class=\"bb-block bb-block--sm\">\n        <button\n          bbButton\n          color=\"primary\"\n          data-role=\"open-confirmation\"\n          [block]=\"true\"\n          i18n=\"Approve button|Transfer the amount@@quick-transfer.button.transfer-now\"\n          type=\"submit\"\n        >\n          Transfer Now\n        </button>\n      </div>\n    </fieldset>\n  </form>\n</div>\n","import {\n  BaseObject,\n  DisabledCombination,\n  FilterState,\n  QuickTransferProductKinds as ProductKinds,\n} from '../models/config.model';\nimport { AccountItem, Arrangement, ExternalAccount } from '../models/items.model';\nimport { Location } from '../models/view.model';\n\nexport const filterByProductKinds = (\n  arrangements: Arrangement[] | undefined,\n  productKinds: ProductKinds[] | undefined,\n): Array<Arrangement> => {\n  const _arrangements = arrangements || [];\n\n  return _arrangements.filter((arrangement: Arrangement) =>\n    productKinds ? productKinds.includes(arrangement.productKindName as ProductKinds) : true,\n  );\n};\n\n/**\n * @deprecated since version 1.1.0, use `mapItems` instead\n */\nexport const filterByOtherProps = (arrangements: Arrangement[], filters: FilterState[] | undefined): Arrangement[] => {\n  const _arrangements = arrangements || [];\n\n  return _arrangements.filter((arr: Arrangement) =>\n    filters && filters.length\n      ? filters.every(({ key, value }: FilterState) => {\n          return value.some(v => arr.defaultRecord && v === (arr.defaultRecord as BaseObject<any>)[key]);\n        })\n      : true,\n  );\n};\n\nexport const filterByDisabledCombinations = (\n  arrangements: Array<Arrangement | ExternalAccount> | undefined,\n  counterPartyAccount: Arrangement | AccountItem | undefined,\n  disabledCombinations: DisabledCombination[] | undefined,\n  location: Location,\n): Array<Arrangement | ExternalAccount> => {\n  if (!arrangements) return [];\n  const combinations = disabledCombinations || [];\n  // Disable a transfer from connected to connected and connected to contacts account by default\n  combinations.push({\n    from: ProductKinds.connectedAccounts,\n    to: ProductKinds.connectedAccounts,\n  });\n  combinations.push({ from: ProductKinds.connectedAccounts, to: ProductKinds.contacts });\n\n  const disabledProductKinds = combinations\n    .filter((i: DisabledCombination) => {\n      return location === Location.FROM\n        ? i.to === counterPartyAccount?.productKindName\n        : i.from === counterPartyAccount?.productKindName;\n    })\n    .map(i => (location === Location.FROM ? i.from : i.to));\n\n  return arrangements.filter(arr => !disabledProductKinds.includes(arr.productKindName as ProductKinds));\n};\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, pluck, take, withLatestFrom } from 'rxjs/operators';\nimport { FROM_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferProductKinds as ProductKinds } from '../../models/config.model';\nimport { AccountItem, Arrangement, ExternalAccount } from '../../models/items.model';\nimport { LoadingState } from '../../models/state.model';\nimport { Location, ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { filterByDisabledCombinations } from '../../utils/arrangement-filter';\nimport { BaseAccountSelectorComponent } from '../account-selector-base/account-selector-base.component';\n\n@Component({\n  selector: 'bb-quick-transfer-from-account-ui',\n  templateUrl: './quick-transfer-from-account.component.html',\n  providers: [QuickTransferStoreService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferFromAccountComponent extends BaseAccountSelectorComponent implements OnInit, AfterViewInit {\n  constructor(readonly store: QuickTransferStoreService) {\n    super(store);\n  }\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccountId$: Observable<string | undefined> = this.store.fromAccount$.pipe(\n    filter(Boolean),\n    pluck('uuid'),\n  );\n  /**\n   * Stream of toPayee\n   */\n  readonly selectedToPayee$: Observable<AccountItem | undefined> = this.store.toPayee$.pipe(take(1));\n\n  /**\n   * Selector of the to account button to be focused\n   */\n  fromAccountSelector = FROM_ACCOUNT;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n\n  @ViewChild('back') backbutton!: ElementRef;\n\n  ngAfterViewInit() {\n    this.backbutton.nativeElement.focus({ preventScroll: true });\n  }\n\n  /**\n   * Method to handle selecting from account\n   *\n   * @param id\n   */\n  handleSelectFrom(id: string) {\n    this.store.selectFromAccount(id);\n  }\n\n  /**\n   * If not yet called the accounts API call it\n   */\n  ngOnInit() {\n    const { fields, disabledCombinations } = this.config || {};\n    const { productKinds } = fields?.fromAccount || {};\n\n    combineLatest([this.extAccountsCallState$, this.accountsCallState$])\n      .pipe(take(1))\n      .subscribe(([extAccountsState, accountsState]) => {\n        if (extAccountsState === LoadingState.INIT && productKinds?.includes(ProductKinds.connectedAccounts)) {\n          this.getExtAccounts();\n        }\n        if (accountsState === LoadingState.INIT) this.getAccounts();\n      });\n\n    this.accounts$ = this.store.debitAccounts$.pipe(\n      take(1),\n      withLatestFrom(this.selectedToPayee$.pipe(take(1))),\n      map(\n        ([accounts, toPayee]) =>\n          filterByDisabledCombinations(accounts, toPayee, disabledCombinations, Location.FROM) as Arrangement[],\n      ),\n    );\n\n    this.extAccounts$ = this.store.extAccounts$.pipe(\n      withLatestFrom(this.selectedToPayee$.pipe(take(1))),\n      map(\n        ([accounts, toPayee]) =>\n          filterByDisabledCombinations(accounts, toPayee, disabledCombinations, Location.FROM) as ExternalAccount[],\n      ),\n    );\n  }\n}\n","<div class=\"bb-quick-transfer__view\">\n  <div class=\"bb-quick-transfer__heading bb-stack bb-quick-transfer__heading--border\" data-role=\"from-account-header\">\n    <button\n      (click)=\"backToForm(fromAccountSelector)\"\n      bbButton\n      aria-label=\"back to form\"\n      i18-aria-label=\"Back button|Quick transfer back button@@quick-transfer.fromaccount.back.button\"\n      color=\"unstyled\"\n      class=\"bb-stack__item btn-unstyled--focusable bb-block bb-block--lg\"\n      #back\n    >\n      <bb-icon-ui name=\"arrow-back\"></bb-icon-ui>\n    </button>\n    <bb-header-ui\n      class=\"bb-stack__item\"\n      headingClasses=\"h3 bb-block bb-block--lg\"\n      [heading]=\"config?.titles?.[viewState.FROM]\"\n      headingType=\"h2\"\n    ></bb-header-ui>\n  </div>\n  <div class=\"bb-quick-transfer__tabs-content scrollable-box-content\" data-role=\"from-account\">\n    <ng-container\n      *ngIf=\"{ internal: accountsCallState$ | async, external: extAccountsCallState$ | async } as callStates\"\n    >\n      <ng-container *ngIf=\"callStates.internal && callStates.external\">\n        <ng-container [ngSwitch]=\"true\">\n          <ng-container\n            *ngSwitchCase=\"callStates.internal === loadingstate.LOADING && callStates.external === loadingstate.LOADING\"\n          >\n            <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"!!callStates.internal['error'] && !!callStates.external['error']\">\n            <ng-container *ngTemplateOutlet=\"errorCase\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <ng-container *ngIf=\"callStates.internal !== loadingstate.LOADING; else loadingState\">\n              <ng-container *ngIf=\"callStates.internal === loadingstate.LOADED\">\n                <div *ngIf=\"accounts$ | async as accounts\">\n                  <bb-quick-transfer-accounts-ui\n                    data-role=\"internal-accounts\"\n                    [arrangements]=\"accounts\"\n                    (select)=\"handleSelectFrom($event)\"\n                    [selected]=\"fromAccountId$ | async\"\n                    [selectedCounterPartyAccount]=\"(selectedToPayee$ | async)?.uuid\"\n                    [config]=\"config\"\n                  ></bb-quick-transfer-accounts-ui>\n                </div>\n              </ng-container>\n              <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.internal['error']\">\n                <bb-icon-ui\n                  name=\"error-outline\"\n                  size=\"md\"\n                  class=\"bb-stack__item bb-stack__item--align-top\"\n                ></bb-icon-ui>\n                <div class=\"bb-subtitle\">\n                  <span i18n=\"Fetch accounts error|Fetch accounts error@@quick-transfer.fetch-accounts.error-message\">\n                    We could not retrieve data for your internal accounts.</span\n                  >\n                  <br />\n                  <button\n                    bbButton\n                    color=\"link-text\"\n                    data-role=\"reload-accounts\"\n                    (click)=\"getAccounts()\"\n                    i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                  >\n                    Reload\n                  </button>\n                </div>\n              </div>\n            </ng-container>\n\n            <div *ngIf=\"callStates.external !== loadingstate.LOADED || (extAccounts$ | async) as extAccounts\">\n              <h3\n                class=\"bb-subheader bb-text-support bb-quick-transfer__subheader bb-block bb-block--no-margin bb-inline-stack h4\"\n                *ngIf=\"\n                  (extAccounts.length || callStates.external !== loadingstate.LOADED) &&\n                  config?.fields?.fromAccount?.connectedAccountsSubHeader as subHeader\n                \"\n              >\n                <bb-icon-ui name=\"insert-link\" cropped class=\"bb-inline-stack__item--spacing-sm\"></bb-icon-ui>\n                <span\n                  data-role=\"external-accounts-header\"\n                  i18n=\"\n                    Account type subheader|Quick transfer 'connected accounts' type\n                    subheader@@quick-transfer.from.account-type-subheader\"\n                >\n                  {{ subHeader }}\n                </span>\n              </h3>\n              <ng-container *ngIf=\"callStates.external !== loadingstate.LOADING; else loadingState\">\n                <bb-quick-transfer-accounts-ui\n                  data-role=\"external-accounts\"\n                  *ngIf=\"callStates.external === loadingstate.LOADED\"\n                  [arrangements]=\"extAccounts\"\n                  (select)=\"handleSelectFrom($event)\"\n                  [selected]=\"fromAccountId$ | async\"\n                  [config]=\"config\"\n                ></bb-quick-transfer-accounts-ui>\n                <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.external['error']\">\n                  <bb-icon-ui\n                    name=\"error-outline\"\n                    size=\"md\"\n                    class=\"bb-stack__item bb-stack__item--align-top\"\n                  ></bb-icon-ui>\n                  <div class=\"bb-subtitle\">\n                    <span\n                      i18n=\"\n                        Fetch external accounts error|Fetch external accounts\n                        error@@quick-transfer.fetch-external-accounts.error-message\"\n                    >\n                      We could not retrieve data for your external accounts.</span\n                    >\n                    <br />\n                    <button\n                      bbButton\n                      color=\"link-text\"\n                      data-role=\"reload-accounts\"\n                      (click)=\"getExtAccounts()\"\n                      i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                    >\n                      Reload\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n            </div>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #loadingState let-size=\"$implicit\">\n  <div class=\"bb-loading-indicator\">\n    <bb-loading-indicator-ui [loaderSize]=\"size || 'sm'\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n<ng-template #errorCase>\n  <div class=\"bb-quick-transfer__heading\">\n    <div class=\"bb-state-container\" data-role=\"double-error-state\">\n      <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n      <bb-empty-state-ui\n        title=\"No data retrieved\"\n        class=\"bb-block bb-block--md\"\n        iconClasses=\"\"\n        iconSize=\"xxl\"\n        message=\"We could not retrieve data for your accounts.\"\n        i18n-message=\"Could not retrieve data|Fetch accounts error@@quick-transfer.fetch-data.error-message\"\n        iconModifier=\"error-outline\"\n      ></bb-empty-state-ui>\n      <button\n        bbButton\n        buttonSize=\"sm\"\n        color=\"primary\"\n        (click)=\"getAccounts(); getExtAccounts()\"\n        data-role=\"reload-accounts\"\n        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n      >\n        Reload\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { tabsAnim } from '@backbase/ui-ang/util';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, pluck, take, withLatestFrom } from 'rxjs/operators';\nimport { TO_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferProductKinds as ProductKinds } from '../../models/config.model';\nimport { AccountItem, Contact, ExternalAccount } from '../../models/items.model';\nimport { CallState, LoadingState } from '../../models/state.model';\nimport { Location, ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { filterByDisabledCombinations } from '../../utils/arrangement-filter';\nimport { BaseAccountSelectorComponent } from '../account-selector-base/account-selector-base.component';\n\n@Component({\n  selector: 'bb-quick-transfer-to-account-ui',\n  templateUrl: './quick-transfer-to-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [tabsAnim],\n})\nexport class QuickTransferToAccountComponent extends BaseAccountSelectorComponent implements OnInit, AfterViewInit {\n  /**\n   * Show My Accounts or Contacts tabs, It is My Accounts by default\n   */\n  selectedTab = 0;\n  /**\n   * Stream of contacts\n   */\n  readonly contacts$: Observable<Contact[] | undefined> = this.store.contacts$;\n  /**\n   * Stream of toPayee\n   */\n  readonly selectedToPayeeId$: Observable<string> = this.store.toPayee$.pipe(filter(Boolean), pluck('uuid'));\n  /**\n   * Stream of fromAccount\n   */\n  readonly selectedFromAccount$: Observable<AccountItem | undefined> = this.store.fromAccount$.pipe(take(1));\n  /**\n   * Stream of contactsCallState\n   */\n  readonly contactsCallState$: Observable<CallState | undefined> = this.store.contactsCallState$;\n  /**\n   * Stream to indicate if contacts are going to be rendered\n   */\n  renderContacts$ = this.selectedFromAccount$.pipe(\n    map(account => {\n      const { toAccount } = this.config?.fields || {};\n      const { connectedAccounts, contacts } = ProductKinds;\n      const isCounterPartyConnectedAccount = account?.productKindName === connectedAccounts;\n      const isContactsSetInConfig = toAccount?.productKinds ? toAccount?.productKinds.includes(contacts) : true;\n      return !isCounterPartyConnectedAccount && isContactsSetInConfig;\n    }),\n  );\n  /**\n   * Selector of the to account button to be focused\n   */\n  toAccountSelector = TO_ACCOUNT;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n\n  @ViewChild('back') backbutton!: ElementRef;\n\n  constructor(readonly store: QuickTransferStoreService) {\n    super(store);\n  }\n  /**\n   * If not yet called the contacts, accounts and external accounts API call it\n   */\n  ngOnInit() {\n    const { fields, disabledCombinations } = this.config || {};\n    const { productKinds } = fields?.toAccount || {};\n\n    combineLatest([this.extAccountsCallState$, this.accountsCallState$])\n      .pipe(take(1))\n      .subscribe(([extAccountsState, accountsState]) => {\n        if (extAccountsState === LoadingState.INIT && productKinds?.includes(ProductKinds.connectedAccounts)) {\n          this.getExtAccounts();\n        }\n        if (accountsState === LoadingState.INIT) this.getAccounts();\n      });\n\n    this.accounts$ = this.store.creditAccounts$.pipe(\n      take(1),\n      withLatestFrom(this.selectedFromAccount$),\n      map(([accounts, fromAccount]) =>\n        filterByDisabledCombinations(accounts, fromAccount, disabledCombinations, Location.TO),\n      ),\n    );\n\n    this.extAccounts$ = this.store.extAccounts$.pipe(\n      withLatestFrom(this.selectedFromAccount$),\n      map(\n        ([accounts, fromAccount]) =>\n          filterByDisabledCombinations(accounts, fromAccount, disabledCombinations, Location.TO) as ExternalAccount[],\n      ),\n    );\n  }\n\n  ngAfterViewInit() {\n    this.backbutton.nativeElement.focus({ preventScroll: true });\n  }\n\n  /**\n   * Method to switch tabs\n   *\n   * @param ev\n   */\n  onTabSelect(ev: number) {\n    this.selectedTab = ev;\n    if (ev === 1) {\n      this.contactsCallState$\n        .pipe(\n          take(1),\n          filter(s => s === LoadingState.INIT),\n        )\n        .subscribe(() => {\n          this.getContacts();\n        });\n    }\n  }\n  /**\n   * Method to set payee\n   *\n   * @param id\n   */\n  pickPayee(id: string) {\n    this.store.setPayee(id);\n  }\n  /**\n   * Method to dispatch store action for fetching contacts\n   */\n  getContacts() {\n    this.store.fetchContacts();\n  }\n}\n","<div class=\"bb-quick-transfer__view\">\n  <div\n    class=\"bb-quick-transfer__heading bb-stack\"\n    [class.bb-quick-transfer__heading--border]=\"!(renderContacts$ | async)\"\n    data-role=\"to-account-header\"\n  >\n    <button\n      (click)=\"backToForm(toAccountSelector)\"\n      bbButton\n      aria-label=\"back to form\"\n      i18-aria-label=\"Back button|Quick transfer back button@@quick-transfer.to-account.back.button\"\n      color=\"unstyled\"\n      class=\"bb-stack__item btn-unstyled--focusable bb-block bb-block--xs\"\n      [class.bb-stack__item--align-top]=\"!(renderContacts$ | async)\"\n      #back\n    >\n      <bb-icon-ui name=\"arrow-back\"></bb-icon-ui>\n    </button>\n    <bb-header-ui\n      class=\"bb-stack__item\"\n      headingClasses=\"bb-block bb-block--{{ (renderContacts$ | async) ? 'sm' : 'lg' }} h3\"\n      [heading]=\"config?.titles?.[viewState.PAYEE]\"\n      headingType=\"h2\"\n    ></bb-header-ui>\n  </div>\n  <div class=\"bb-quick-transfer__tabs-container\">\n    <bb-tab-group-ui *ngIf=\"renderContacts$ | async\" [initialSelection]=\"0\" (select)=\"onTabSelect($event)\">\n      <bb-tab-ui\n        data-role=\"account-tab-header\"\n        i18n=\"Tab header for to-accounts|Quick transfer 'my accounts' tab header@@quick-transfer.to.tabs.account-header\"\n        >My Accounts</bb-tab-ui\n      >\n      <bb-tab-ui\n        data-role=\"contacts-tab-header\"\n        i18n=\"Tab header for to-contacts|Quick transfer 'contacts' tab header@@quick-transfer.to.tabs.contact-header\"\n        >Contacts</bb-tab-ui\n      >\n    </bb-tab-group-ui>\n    <div class=\"bb-quick-transfer__tabs-content scrollable-box-content\" [@tabsAnimation]=\"selectedTab\">\n      <div *ngIf=\"selectedTab === 0\" data-role=\"quick-transfer-accounts-tab\">\n        <ng-container\n          *ngIf=\"{ internal: accountsCallState$ | async, external: extAccountsCallState$ | async } as callStates\"\n        >\n          <ng-container *ngIf=\"callStates.internal && callStates.external\">\n            <ng-container [ngSwitch]=\"true\">\n              <ng-container\n                *ngSwitchCase=\"\n                  callStates.internal === loadingstate.LOADING && callStates.external === loadingstate.LOADING\n                \"\n              >\n                <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"!!callStates.internal['error'] && !!callStates.external['error']\">\n                <ng-container *ngTemplateOutlet=\"errorCase\"></ng-container>\n              </ng-container>\n              <ng-container *ngSwitchDefault>\n                <ng-container *ngIf=\"callStates.internal !== loadingstate.LOADING; else loadingState\">\n                  <ng-container *ngIf=\"callStates.internal === loadingstate.LOADED\">\n                    <div *ngIf=\"accounts$ | async as accounts\">\n                      <bb-quick-transfer-accounts-ui\n                        data-role=\"internal-accounts\"\n                        [arrangements]=\"accounts\"\n                        (select)=\"pickPayee($event)\"\n                        [selected]=\"selectedToPayeeId$ | async\"\n                        [selectedCounterPartyAccount]=\"(selectedFromAccount$ | async)?.uuid\"\n                        [config]=\"config\"\n                      ></bb-quick-transfer-accounts-ui>\n                    </div>\n                  </ng-container>\n                  <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.internal['error']\">\n                    <bb-icon-ui\n                      name=\"error-outline\"\n                      size=\"md\"\n                      class=\"bb-stack__item bb-stack__item--align-top\"\n                    ></bb-icon-ui>\n                    <div class=\"bb-subtitle\">\n                      <span\n                        i18n=\"Fetch accounts error|Fetch accounts error@@quick-transfer.fetch-accounts.error-message\"\n                      >\n                        We could not retrieve data for your internal accounts.</span\n                      >\n                      <br />\n                      <button\n                        bbButton\n                        color=\"link-text\"\n                        data-role=\"reload-accounts\"\n                        (click)=\"getAccounts()\"\n                        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                      >\n                        Reload\n                      </button>\n                    </div>\n                  </div>\n                </ng-container>\n\n                <div *ngIf=\"callStates.external !== loadingstate.LOADED || (extAccounts$ | async) as extAccounts\">\n                  <h3\n                    class=\"bb-subheader bb-text-support bb-quick-transfer__subheader bb-block bb-block--no-margin bb-inline-stack\"\n                    *ngIf=\"\n                      (extAccounts.length || callStates.external !== loadingstate.LOADED) &&\n                      config?.fields?.toAccount?.connectedAccountsSubHeader as subHeader\n                    \"\n                  >\n                    <bb-icon-ui name=\"insert-link\" cropped class=\"bb-inline-stack__item--spacing-sm\"></bb-icon-ui>\n                    <span\n                      data-role=\"external-accounts-header\"\n                      i18n=\"\n                        Account type subheader|Quick transfer 'connected accounts' type\n                        subheader@@quick-transfer.to.account-type-subheader\"\n                    >\n                      {{ subHeader }}\n                    </span>\n                  </h3>\n                  <ng-container *ngIf=\"callStates.external !== loadingstate.LOADING; else loadingState\">\n                    <bb-quick-transfer-accounts-ui\n                      data-role=\"external-accounts\"\n                      *ngIf=\"callStates.external === loadingstate.LOADED\"\n                      [arrangements]=\"extAccounts\"\n                      (select)=\"pickPayee($event)\"\n                      [selected]=\"selectedToPayeeId$ | async\"\n                      [config]=\"config\"\n                    ></bb-quick-transfer-accounts-ui>\n                    <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.external['error']\">\n                      <bb-icon-ui\n                        name=\"error-outline\"\n                        size=\"md\"\n                        class=\"bb-stack__item bb-stack__item--align-top\"\n                      ></bb-icon-ui>\n                      <div class=\"bb-subtitle\">\n                        <span\n                          i18n=\"\n                            Fetch external accounts error|Fetch external accounts\n                            error@@quick-transfer.fetch-external-accounts.error-message\"\n                        >\n                          We could not retrieve data for your external accounts.</span\n                        >\n                        <br />\n                        <button\n                          bbButton\n                          color=\"link-text\"\n                          data-role=\"reload-accounts\"\n                          (click)=\"getExtAccounts()\"\n                          i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                        >\n                          Reload\n                        </button>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div *ngIf=\"selectedTab === 1\" data-role=\"quick-transfer-contacts-tab\">\n        <ng-container *ngIf=\"contactsCallState$ | async as contactsCallState\">\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"contactsCallState === loadingstate.LOADED\">\n              <div *ngIf=\"contacts$ | async as contacts\">\n                <bb-quick-transfer-accounts-ui\n                  [arrangements]=\"contacts\"\n                  (select)=\"pickPayee($event)\"\n                  [selected]=\"selectedToPayeeId$ | async\"\n                  [config]=\"config\"\n                ></bb-quick-transfer-accounts-ui>\n              </div>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"contactsCallState === loadingstate.LOADING\">\n              <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"!!contactsCallState.error\">\n              <div class=\"bb-quick-transfer__heading\">\n                <div class=\"bb-state-container\" data-role=\"contacts-error-state\">\n                  <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n                  <bb-empty-state-ui\n                    title=\"No data retrieved\"\n                    class=\"bb-block bb-block--md\"\n                    iconClasses=\"\"\n                    iconSize=\"xxl\"\n                    message=\"We could not retrieve data for your contacts.\"\n                    i18n-message=\"\n                      Could not retrieve contacts|Fetch contacts error@@quick-transfer.fetch-contacts.error-message\"\n                    iconModifier=\"error-outline\"\n                  ></bb-empty-state-ui>\n                  <button\n                    bbButton\n                    buttonSize=\"sm\"\n                    color=\"primary\"\n                    (click)=\"getContacts()\"\n                    data-role=\"reload-accounts\"\n                    i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                  >\n                    Reload\n                  </button>\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #loadingState let-size=\"$implicit\">\n  <div class=\"bb-loading-indicator\">\n    <bb-loading-indicator-ui [loaderSize]=\"size || 'sm'\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n<ng-template #errorCase>\n  <div class=\"bb-quick-transfer__heading\">\n    <div class=\"bb-state-container\" data-role=\"double-error-state\">\n      <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n      <bb-empty-state-ui\n        title=\"No data retrieved\"\n        class=\"bb-block bb-block--md\"\n        iconClasses=\"\"\n        message=\"We could not retrieve data for your accounts.\"\n        i18n-message=\"Could not retrieve data|Fetch accounts error@@quick-transfer.fetch-data.error-message\"\n        iconModifier=\"error-outline\"\n      ></bb-empty-state-ui>\n      <button\n        bbButton\n        buttonSize=\"sm\"\n        color=\"primary\"\n        (click)=\"getAccounts(); getExtAccounts()\"\n        data-role=\"reload-accounts\"\n        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n      >\n        Reload\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { animate, animation, style, transition, trigger, useAnimation } from '@angular/animations';\n\nconst timing = '200ms ease-in';\nconst distances = {\n  normalX: 'translateX(0%)',\n  right: 'translateX(100%)',\n  left: 'translateX(-100%)',\n  normalY: 'translateY(0%)',\n  bottom: 'translateY(100%)',\n};\n\nconst slideAnimation = animation([\n  style({\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    transform: '{{from}}',\n    display: 'block',\n    top: 0,\n  }),\n  animate(timing, style({ transform: '{{to}}' })),\n]);\n\nexport function slide2D(from: string, to: string) {\n  return [\n    transition(':enter', [\n      useAnimation(slideAnimation, {\n        params: { from, to },\n      }),\n    ]),\n    transition(':leave', [\n      useAnimation(slideAnimation, {\n        params: { from: to, to: from },\n      }),\n    ]),\n  ];\n}\n\n// used to animate account selector view\nexport const slideLeftAnimation = trigger('slideLeft', slide2D(distances.right, distances.normalX));\n\n// used to animate the main view \"form view\"\nexport const slideRightAnimation = trigger('slideRight', slide2D(distances.left, distances.normalX));\n\n// used for transition of the success/fail screen\nexport const slideUpAnimation = trigger('slideUp', slide2D(distances.bottom, distances.normalY));\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport {\n  BaseObject,\n  DisabledCombination,\n  PaymentTypes,\n  QuickTransferAmountField as AmountField,\n  QuickTransferField as Field,\n  QuickTransferFields,\n  QuickTransferJourneyConfiguration,\n  QuickTransferProductKinds as ProductKinds,\n  Titles,\n  UiComponentProps,\n} from '../models/config.model';\nimport { Arrangement, Contact } from '../models/items.model';\nimport { ViewState } from '../models/view.model';\nimport { nonZeroValidator } from '../utils/helpers';\n\nconst fromAccount: Field = {\n  productKinds: [\n    ProductKinds.savingsAccount,\n    ProductKinds.currentAccount,\n    ProductKinds.creditCard,\n    ProductKinds.loanAccount,\n    ProductKinds.connectedAccounts,\n  ],\n  label: $localize`:@@quick-transfer.form.label:From`,\n  mapItems: accounts => {\n    return accounts.filter((account: Arrangement) => ['EUR', 'AED', 'USD'].includes(account?.currency || ''));\n  },\n  connectedAccountsSubHeader: $localize`:@@quick-transfer-initiator-connected-acc-subheader:Connected Accounts`,\n  validators: [Validators.required],\n  validationMessages: [\n    {\n      name: 'required',\n      message: $localize`:@@quick-transfer-initiator-validation-required:Account is required`,\n    },\n  ],\n};\n\nconst toAccount: Field = {\n  productKinds: [\n    ProductKinds.savingsAccount,\n    ProductKinds.currentAccount,\n    ProductKinds.creditCard,\n    ProductKinds.loanAccount,\n    ProductKinds.connectedAccounts,\n    ProductKinds.contacts,\n  ],\n  label: $localize`:@@quick-transfer.to.label:To`,\n  mapContacts: (contacts: Contact[]) => contacts.filter(contact => !!contact.number),\n  connectedAccountsSubHeader: $localize`:@@quick-transfer-counterparty-connected-acc-subheader:Connected Accounts`,\n  validators: [Validators.required],\n  validationMessages: [\n    {\n      name: 'required',\n      message: $localize`:@@quick-transfer-counterparty-validation-required:Beneficiary is required`,\n    },\n  ],\n};\n\nconst amount: AmountField = {\n  initialCurrency: 'USD',\n  autoDecimal: true,\n  placeholder: '0.00',\n  wrapperClasses: 'bb-amount-input__field--large',\n  label: $localize`:@@quick-transfer.amount.label:Amount`,\n  validationMessages: [\n    {\n      name: 'nonZero',\n      message: $localize`:@@quick-transfer-counterparty-validation-invalid-amount:Transfer amount is required`,\n    },\n  ],\n  validators: [nonZeroValidator],\n};\n\nconst configDefaults: QuickTransferJourneyConfiguration = {\n  fields: { fromAccount, toAccount, amount },\n  businessFunction: 'A2A Transfer',\n  titles: {\n    [ViewState.FORM]: $localize`:@@quick-transfer-journey.title:Quick Transfer`,\n    [ViewState.FROM]: $localize`:@@quick-transfer-journey.initiator-title:Transfer from`,\n    [ViewState.PAYEE]: $localize`:@@quick-transfer-journey.counterparty-title:Transfer to`,\n    [ViewState.REVIEW]: $localize`:@@quick-transfer-journey.review-title:Quick Transfer`,\n  },\n  paymentTypes: {\n    internal: 'INTERNAL_TRANSFER',\n    external: 'EXTERNAL_A2A',\n    contact: 'INTRABANK_TRANSFER',\n  },\n  disabledCombinations: [\n    { from: ProductKinds.loanAccount, to: ProductKinds.loanAccount },\n    { from: ProductKinds.creditCard, to: ProductKinds.creditCard },\n  ],\n  uiComponentProps: {\n    mapCurrency: true,\n    accountNumberFormat: {\n      segments: 0,\n      length: 0,\n      maskRange: [0, 0],\n    },\n  },\n};\n\nexport const QuickTransferJourneyConfigurationToken = new InjectionToken<QuickTransferJourneyConfiguration>(\n  'QuickTransferJourneyConfigurationToken injection token',\n);\n\n@Injectable()\nexport class QuickTransferJourneyConfigService {\n  private _config: QuickTransferJourneyConfiguration;\n\n  constructor(\n    @Optional()\n    @Inject(QuickTransferJourneyConfigurationToken)\n    private readonly config: QuickTransferJourneyConfiguration,\n  ) {\n    this._config = { ...configDefaults, ...(this.config || {}) };\n  }\n\n  get defaults(): QuickTransferJourneyConfiguration {\n    return configDefaults;\n  }\n\n  get fields(): QuickTransferFields {\n    return this._config.fields;\n  }\n\n  get businessFunction(): string | undefined {\n    return this._config.businessFunction;\n  }\n\n  get paymentTypes(): PaymentTypes {\n    return this._config.paymentTypes;\n  }\n\n  get disabledCombinations(): DisabledCombination[] {\n    return this._config.disabledCombinations;\n  }\n\n  get productSummaryQueryParameters(): BaseObject<any> | undefined {\n    return this._config.productSummaryQueryParameters;\n  }\n  get uiComponentProps(): UiComponentProps {\n    return this._config.uiComponentProps;\n  }\n  get titles(): Titles {\n    return this._config.titles;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { fadeInAnimation, slideUpAnimation } from '@backbase/ui-ang/util';\nimport { Observable, Subscription } from 'rxjs';\nimport { concatMap, filter, map, startWith, take, withLatestFrom } from 'rxjs/operators';\nimport { slideLeftAnimation, slideRightAnimation } from './animations';\nimport { Arrangement } from './models/items.model';\nimport { LoadingState } from './models/state.model';\nimport { Location, ViewState } from './models/view.model';\nimport { QuickTransferJourneyConfigService } from './services/config.service';\nimport { QuickTransferStoreService } from './store/store.service';\nimport { filterByDisabledCombinations } from './utils/arrangement-filter';\nimport { getRouteParams } from './utils/helpers';\n\n@Component({\n  selector: 'bb-quick-transfer-journey',\n  templateUrl: 'quick-transfer-journey.component.html',\n  providers: [QuickTransferJourneyConfigService, QuickTransferStoreService],\n  animations: [slideRightAnimation, slideLeftAnimation, fadeInAnimation, slideUpAnimation],\n})\nexport class QuickTransferJourneyComponent implements OnInit, OnDestroy {\n  subscription$ = new Subscription();\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n  /**\n   * Stream of the current view\n   */\n  readonly currentView$: Observable<ViewState | undefined> = this.store.currentView$;\n\n  /**\n   * Success image path\n   */\n  readonly successImg = 'assets/bb-quick-transfer-widget-ang/succeed.svg';\n  /**\n   * Fail image path\n   */\n  readonly successImgNoMotion = 'assets/bb-quick-transfer-widget-ang/no-motion.svg';\n\n  constructor(\n    private readonly store: QuickTransferStoreService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    readonly config: QuickTransferJourneyConfigService,\n  ) {}\n\n  ngOnInit() {\n    this.subscription$ = this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        startWith(getRouteParams(this.activatedRoute.root)),\n        withLatestFrom(this.store.touchedFields$, this.store.accountsCallState$),\n        map(([_, touchedFields, callState]) => {\n          if (callState === LoadingState.INIT) this.store.fetchAccounts();\n          return !touchedFields?.includes('fromAccount'); // Indicate if there is already selected account by user\n        }),\n        filter(Boolean),\n        concatMap(() => this.applyDisabledCombination(getRouteParams(this.activatedRoute.root).selectedAccount)),\n      )\n      .subscribe(() => {\n        const selectedAccountId = getRouteParams(this.activatedRoute.root).selectedAccount;\n        this.store.selectFromAccount(selectedAccountId);\n      });\n    this.store.updateDefaultCurrency(this.config.fields?.amount?.initialCurrency);\n  }\n\n  ngOnDestroy() {\n    this.store.reset();\n    this.subscription$.unsubscribe();\n  }\n\n  /**\n   * Apply disabled combination filtration for selected product summary item in app level\n   */\n  applyDisabledCombination(id: string) {\n    const { disabledCombinations } = this.config || {};\n    return this.store.debitAccounts$.pipe(\n      filter(Boolean),\n      take(1),\n      withLatestFrom(this.store.toPayee$),\n      map(([acc, toPayee]) => {\n        const _accounts = filterByDisabledCombinations(\n          acc as Arrangement[],\n          toPayee,\n          disabledCombinations,\n          Location.FROM,\n        );\n        return _accounts.some((item: Arrangement) => item.uuid === id);\n      }),\n      filter(Boolean),\n    );\n  }\n}\n","<div class=\"bb-quick-transfer\" *ngIf=\"currentView$ | async as currentView\">\n  <bb-quick-transfer-form-ui\n    [config]=\"config\"\n    *ngIf=\"currentView === viewState.FORM || currentView === viewState.COMPLETE as formView\"\n    [@slideRight]\n  ></bb-quick-transfer-form-ui>\n  <bb-quick-transfer-from-account-ui\n    *ngIf=\"currentView === viewState.FROM as fromView\"\n    [config]=\"config\"\n    [@slideLeft]\n  ></bb-quick-transfer-from-account-ui>\n  <bb-quick-transfer-to-account-ui\n    *ngIf=\"currentView === viewState.PAYEE as payeeView\"\n    [config]=\"config\"\n    [@slideLeft]\n  ></bb-quick-transfer-to-account-ui>\n  <div class=\"bb-quick-transfer__success-overlay\" *ngIf=\"currentView === viewState.COMPLETE\" [@fadeIn]></div>\n  <bb-quick-transfer-complete-ui\n    *ngIf=\"currentView === viewState.COMPLETE\"\n    [successImg]=\"successImg\"\n    [successImgNoMotion]=\"successImgNoMotion\"\n    [config]=\"config\"\n    [@slideUp]\n  ></bb-quick-transfer-complete-ui>\n\n  <bb-quick-transfer-confirmation-modal-ui\n    [paymentTypes]=\"config.paymentTypes\"\n    [config]=\"config\"\n  ></bb-quick-transfer-confirmation-modal-ui>\n</div>\n","export const RESOURCE_NAME = 'Payments';\nexport const PRIVILEGE = 'create';\nexport const LIST_SIZE = 1000000;\nexport const EXTERNAL_ID = 'EXTERNAL_ID';\nexport const FROM_PAGES = 0;\nexport const PAGE_SIZE = 100;\n","import { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { Arrangement } from '../models/items.model';\n\n/**\n * Method to extract ProductKind array from ProductsummaryGET response\n *\n * @param res\n */\nexport const responseToProductList = (res: ProductSummaryItem[]): Arrangement[] => {\n  return res?.map(record => {\n    let balance: number | undefined;\n    switch (record.productKindName) {\n      case 'Term Deposit':\n        balance = record.principalAmount;\n        break;\n      case 'Investment Account':\n        balance = record.currentInvestmentValue;\n        break;\n      default:\n        balance = record.bookedBalance;\n        break;\n    }\n\n    return {\n      uuid: record.id,\n      balance: balance || 0,\n      name: record.displayName,\n      currency: record.currency,\n      number: record.IBAN || record.BBAN || record.BIC || record.number,\n      externalTransferAllowed: record.externalTransferAllowed,\n      productKindName: record.productKindName,\n      defaultRecord: record,\n    } as Arrangement;\n  });\n};\n","import { Injectable, OnDestroy, Optional } from '@angular/core';\nimport { ProductSummaryHttpService, ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { ContactsGetResponseBodyItem, ContactsHttpService } from '@backbase/data-ang/contact-manager';\nimport {\n  PaymentOrdersHttpService,\n  PaymentOrdersPost,\n  PaymentOrdersPostResponse,\n} from '@backbase/data-ang/payment-order';\nimport {\n  A2aClientHttpService,\n  DetailedExternalAccount,\n  ExternalAccountGetResponse,\n} from '@backbase/data-ang/payment-order-a2a';\nimport { CapabilityData, TransactionSigningHelperService } from '@backbase/identity-auth/transaction-signing';\nimport { Observable, of, Subject } from 'rxjs';\nimport { exhaustMap, map, pluck, takeUntil } from 'rxjs/operators';\nimport { FROM_PAGES, PAGE_SIZE, PRIVILEGE, RESOURCE_NAME } from '../constants/accounts-variables';\nimport { QuickTransferProductKinds as ProductKinds } from '../models/config.model';\nimport { Arrangement, Contact, ExternalAccount } from '../models/items.model';\nimport { ProgressStatus } from '../models/state.model';\nimport { QuickTransferJourneyConfigService } from '../services/config.service';\nimport { filterByOtherProps, filterByProductKinds } from '../utils/arrangement-filter';\nimport { responseToProductList } from '../utils/arrangement-mapper';\n\n@Injectable()\nexport class QuickTransferHttpService implements OnDestroy {\n  private destroy$ = new Subject();\n  paymentOrderResponse$ = new Subject<PaymentOrdersPostResponse | undefined>();\n\n  /**\n   * Product Summary default parameters\n   */\n  private productSummaryParameters = {\n    resourceName: RESOURCE_NAME,\n    privilege: PRIVILEGE,\n    from: FROM_PAGES,\n    size: PAGE_SIZE,\n    businessFunction: 'A2A Transfer',\n  };\n\n  constructor(\n    private readonly productSummaryDataHttpService: ProductSummaryHttpService,\n    private readonly contactService: ContactsHttpService,\n    private readonly paymentA2AService: A2aClientHttpService,\n    private readonly paymentOrderService: PaymentOrdersHttpService,\n    @Optional() private readonly transactionSigningHelper: TransactionSigningHelperService,\n    private readonly configService: QuickTransferJourneyConfigService,\n  ) {\n    const { productSummaryQueryParameters, businessFunction } = this.configService || {};\n\n    this.productSummaryParameters = {\n      ...this.productSummaryParameters,\n      ...productSummaryQueryParameters,\n      ...(businessFunction ? { businessFunction } : undefined),\n    };\n  }\n\n  /**\n   * Load debit accounts\n   */\n  getDebitAccounts(): Observable<Arrangement[]> {\n    const { fields } = this.configService || {};\n    const { productKinds, mapItems, otherFilters } = fields?.fromAccount || {};\n    return this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction({\n        ...this.productSummaryParameters,\n        debitAccount: true,\n      })\n      .pipe(\n        map((res: Array<ProductSummaryItem>) => responseToProductList(res)),\n        map(accounts => filterByProductKinds(accounts, productKinds)),\n        map(accounts => filterByOtherProps(accounts, otherFilters) as Arrangement[]),\n        map(accounts => (mapItems && accounts?.length ? mapItems(accounts) : accounts)),\n      );\n  }\n\n  /**\n   * Load credit accounts\n   */\n  getCreditAccounts(): Observable<Arrangement[]> {\n    const { fields } = this.configService || {};\n    const { productKinds, mapItems, otherFilters } = fields?.toAccount || {};\n    return this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction({\n        ...this.productSummaryParameters,\n        creditAccount: true,\n      })\n      .pipe(\n        map((res: Array<ProductSummaryItem>) => responseToProductList(res)),\n        map(accounts => filterByProductKinds(accounts, productKinds)),\n        map(accounts => filterByOtherProps(accounts, otherFilters) as Arrangement[]),\n        map(accounts => (mapItems && accounts?.length ? mapItems(accounts) : accounts)),\n      );\n  }\n\n  /**\n   * Load contacts\n   */\n  getContacts(): Observable<Contact[]> {\n    const mapContacts = this.configService.fields.toAccount.mapContacts;\n    return this.contactService.getContacts({}).pipe(\n      map((contacts: Array<ContactsGetResponseBodyItem>) =>\n        contacts?.map(\n          contact =>\n            ({\n              uuid: contact.id,\n              name: contact.name,\n              number: contact.accounts[0].accountNumber || contact.accounts[0].IBAN,\n              productKindName: ProductKinds.contacts,\n              defaultRecord: contact,\n            } as Contact),\n        ),\n      ),\n      map(contacts => (mapContacts && contacts?.length ? mapContacts(contacts) : contacts)),\n    );\n  }\n\n  /**\n   * Get external accounts\n   */\n  getExternalAccounts(): Observable<ExternalAccount[] | undefined> {\n    return this.paymentA2AService.getAll().pipe(\n      map((body: ExternalAccountGetResponse) => {\n        if (body.accounts) {\n          return body.accounts\n            .filter(({ status }: DetailedExternalAccount) => status === 'Active')\n            .map(\n              ({ externalAccountId, accountNickName, accountNumber, bankName }: DetailedExternalAccount) =>\n                ({\n                  uuid: externalAccountId,\n                  name: accountNickName || bankName,\n                  number: accountNumber,\n                  productKindName: ProductKinds.connectedAccounts,\n                } as ExternalAccount),\n            );\n        }\n        return;\n      }),\n    );\n  }\n\n  /**\n   * Post method to initiate payment order\n   */\n  sendPaymentOrder(paymentOrdersPost: PaymentOrdersPost): Observable<PaymentOrdersPostResponse | undefined> {\n    return this.paymentOrderService.postPaymentOrders({ paymentOrdersPost }).pipe(\n      exhaustMap(response => {\n        if (this.transactionSigningHelper?.isTransactionSigningResponse(response as CapabilityData)) {\n          this.handleTransactionSigning(response as CapabilityData);\n          return this.paymentOrderResponse$.asObservable();\n        } else {\n          return of(response);\n        }\n      }),\n    );\n  }\n\n  getPaymentProgressStatus(data?: CapabilityData): Observable<string | undefined> {\n    const paymentOrderId = (data?.['payment-order-id'] || '') as string;\n    return this.paymentOrderService\n      .getProgressStatusByPaymentOrderId({ paymentOrderId }, 'body')\n      .pipe(pluck('progressStatus'));\n  }\n\n  handleTransactionSigning(response: CapabilityData) {\n    if (!this.transactionSigningHelper) return;\n    const paymentOrderId = response['payment-order-id'];\n\n    if (paymentOrderId) {\n      this.transactionSigningHelper.getTransactionInfo({\n        data: response,\n        asyncPollingOptions: {\n          pollInterval: 1000,\n          maxRetries: 3,\n          pollUntilFn: this.isPaymentConfirmed,\n          complete$: this.destroy$,\n        },\n        fetchFn: this.getPaymentProgressStatus.bind(this),\n        onSuccess: this.onTransactionSigningSuccess.bind(this, paymentOrderId),\n        onRejected: this.onTransactionFail.bind(this, paymentOrderId),\n        onDeclined: this.onTransactionFail.bind(this),\n        onError: this.onTransactionFail.bind(this),\n      });\n    }\n  }\n\n  isPaymentConfirmed(status: string) {\n    return !!status && status !== ProgressStatus.CONFIRMATION_PENDING && status !== ProgressStatus.SENDING;\n  }\n\n  onTransactionSigningSuccess(paymentOrderId: string) {\n    this.paymentOrderService\n      .getPaymentOrderById({ paymentOrderId }, 'body')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(response => {\n        this.paymentOrderResponse$.next(response);\n      });\n  }\n\n  onTransactionFail() {\n    this.paymentOrderResponse$.next();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, Optional } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\nimport { CommunicationService } from '../communication.service';\nimport { FROM_ACCOUNT, TO_ACCOUNT } from '../constants/component-selectors';\nimport { Contact } from '../models/items.model';\nimport { ProgressStatus } from '../models/state.model';\nimport { ViewState } from '../models/view.model';\nimport { QuickTransferHttpService } from '../services/quick-transfer-http.service';\nimport {\n  accountsFetch,\n  accountsFetchError,\n  accountsFetchSuccess,\n  contactsFetch,\n  contactsFetchError,\n  contactsFetchSuccess,\n  extAccountsFetchError,\n  extAccountsFetchSuccess,\n  externalAccountsFetch,\n  openView,\n  sendTransferOrder,\n  setFromAccount,\n  setPayeeAccount,\n  transferOrderError,\n  transferOrderSuccess,\n} from './actions';\n\n@Injectable()\nexport class QuickTransferEffects {\n  constructor(\n    private actions$: Actions,\n    private readonly httpService: QuickTransferHttpService,\n    @Optional() private communicationService: CommunicationService,\n  ) {}\n\n  fetchAccounts = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(accountsFetch),\n        exhaustMap(() => {\n          return combineLatest([this.httpService.getCreditAccounts(), this.httpService.getDebitAccounts()]).pipe(\n            map(([creditAccounts, debitAccounts]) => accountsFetchSuccess({ debitAccounts, creditAccounts })),\n            catchError(error =>\n              of(accountsFetchError({ error: new HttpErrorResponse({ error: error || 'Accounts Fetch Error' }) })),\n            ),\n          );\n        }),\n      ),\n  );\n\n  fetchContacts = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(contactsFetch),\n        exhaustMap(() => {\n          return this.httpService.getContacts().pipe(\n            map((contacts: Contact[]) => contactsFetchSuccess({ contacts })),\n            catchError(error =>\n              of(contactsFetchError({ error: new HttpErrorResponse({ error: error || 'Contacts Fetch Error' }) })),\n            ),\n          );\n        }),\n      ),\n  );\n\n  fetchExtAccounts = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(externalAccountsFetch),\n        exhaustMap(() => {\n          return this.httpService.getExternalAccounts().pipe(\n            map(extAccounts => extAccountsFetchSuccess({ extAccounts })),\n            catchError(error =>\n              of(\n                extAccountsFetchError({\n                  error: new HttpErrorResponse({ error: error || 'External Accounts Fetch Error' }),\n                }),\n              ),\n            ),\n          );\n        }),\n      ),\n  );\n\n  sendTransferOrder = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(sendTransferOrder),\n        exhaustMap(action => {\n          return this.httpService.sendPaymentOrder(action.reqData).pipe(\n            map(resp => {\n              if (!!resp?.id && resp.status !== ProgressStatus.REJECTED) {\n                if (this.communicationService) {\n                  this.communicationService.transferSucceeded();\n                }\n                return transferOrderSuccess();\n              } else {\n                return transferOrderError({ error: new HttpErrorResponse({ error: 'Transfer Order Post Error' }) });\n              }\n            }),\n            catchError(error => of(transferOrderError({ error }))),\n          );\n        }),\n      ),\n  );\n\n  setPayeeAccount = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(setPayeeAccount),\n        map(() => openView({ view: ViewState.FORM, focus: TO_ACCOUNT })),\n      ),\n  );\n\n  pickFromAccount = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(setFromAccount),\n        map(() => openView({ view: ViewState.FORM, focus: FROM_ACCOUNT })),\n      ),\n  );\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { initialState } from '../constants/initital-state';\nimport { AccountItem, Arrangement, TransferAmount } from '../models/items.model';\nimport { LoadingState } from '../models/state.model';\nimport { ViewState } from '../models/view.model';\nimport {\n  accountsFetch,\n  accountsFetchError,\n  accountsFetchSuccess,\n  contactsFetch,\n  contactsFetchError,\n  contactsFetchSuccess,\n  extAccountsFetchError,\n  extAccountsFetchSuccess,\n  externalAccountsFetch,\n  openView,\n  resetFocus,\n  resetWidget,\n  sendTransferOrder,\n  setAmount,\n  setDefaultCurrency,\n  setFieldTouched,\n  setFromAccount,\n  setModalOpen,\n  setPayeeAccount,\n  transferOrderError,\n  transferOrderSuccess,\n} from './actions';\n\nfunction onlyUnique(value: any, index: number, self: any[]) {\n  return self.indexOf(value) === index;\n}\n\nexport const quickTransferReducer = createReducer(\n  initialState,\n  on(accountsFetch, state => ({\n    ...state,\n    accountsCallState: LoadingState.LOADING,\n  })),\n  on(accountsFetchError, (state, { error }) => ({\n    ...state,\n    accountsCallState: { error },\n  })),\n  on(accountsFetchSuccess, (state, { debitAccounts, creditAccounts }) => ({\n    ...state,\n    debitAccounts,\n    creditAccounts,\n    accountsCallState: LoadingState.LOADED,\n  })),\n  on(contactsFetch, state => ({\n    ...state,\n    contactsCallState: LoadingState.LOADING,\n  })),\n  on(contactsFetchError, (state, { error }) => ({\n    ...state,\n    contactsCallState: { error },\n  })),\n  on(contactsFetchSuccess, (state, { contacts }) => ({\n    ...state,\n    contacts,\n    contactsCallState: LoadingState.LOADED,\n  })),\n  on(externalAccountsFetch, state => ({\n    ...state,\n    extAccountsCallState: LoadingState.LOADING,\n  })),\n  on(extAccountsFetchSuccess, (state, { extAccounts }) => ({\n    ...state,\n    extAccounts,\n    extAccountsCallState: LoadingState.LOADED,\n  })),\n  on(extAccountsFetchError, (state, { error }) => ({\n    ...state,\n    extAccountsCallState: { error },\n  })),\n  on(setFromAccount, (state, { accountId }) => {\n    const _accounts = [...(state.extAccounts || []), ...(state.debitAccounts || [])];\n    const account = _accounts.find((a: Arrangement) => a.uuid === accountId) || {};\n    const currency = (account as Arrangement)?.currency || state.defaultCurrency;\n    return {\n      ...state,\n      fromAccount: account as AccountItem,\n      amount: { amount: state.amount?.amount || '', currency },\n    };\n  }),\n  on(setPayeeAccount, (state, { id }) => {\n    const _accounts = [...(state.extAccounts || []), ...(state.creditAccounts || []), ...(state.contacts || [])];\n    const account = _accounts.find(e => e.uuid === id) as AccountItem;\n    return {\n      ...state,\n      payeeTo: account,\n    };\n  }),\n  on(setModalOpen, (state, { isOpen }) => {\n    return {\n      ...state,\n      isModalOpen: isOpen,\n    };\n  }),\n  on(setAmount, (state, { amount, defaultCurrency }) => {\n    const newAmount = {\n      amount,\n      currency: state.amount?.currency ? state.amount.currency : defaultCurrency,\n    } as TransferAmount;\n    return {\n      ...state,\n      amount: newAmount,\n    };\n  }),\n  on(openView, (state, { view, focus }) => {\n    return {\n      ...state,\n      viewState: view,\n      focusElement: focus,\n    };\n  }),\n  on(resetFocus, state => {\n    return {\n      ...state,\n      focusElement: undefined,\n    };\n  }),\n  on(sendTransferOrder, state => ({\n    ...state,\n    transferOrderCallState: LoadingState.LOADING,\n  })),\n  on(transferOrderSuccess, state => ({\n    ...state,\n    transferOrderCallState: LoadingState.LOADED,\n    isModalOpen: false,\n    viewState: ViewState.COMPLETE,\n  })),\n  on(transferOrderError, (state, { error }) => ({\n    ...state,\n    transferOrderCallState: { error },\n    isModalOpen: false,\n    viewState: ViewState.COMPLETE,\n  })),\n  on(resetWidget, (state, { focus }) => ({\n    ...state,\n    transferOrderCallState: LoadingState.INIT,\n    viewState: ViewState.FORM,\n    payeeTo: undefined,\n    amount: undefined,\n    fromAccount: undefined,\n    touchedFields: [],\n    focusElement: focus || undefined,\n  })),\n  on(setFieldTouched, (state, { fieldName }) => ({\n    ...state,\n    touchedFields: [...state.touchedFields, fieldName].filter(onlyUnique),\n  })),\n  on(setDefaultCurrency, (state, { currency }) => ({\n    ...state,\n    defaultCurrency: currency,\n  })),\n);\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { FEATURE_STORE_SELECTOR } from '../constants/initital-state';\nimport { QuickTransferEffects } from './effects';\nimport { quickTransferReducer } from './reducer';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    StoreModule.forFeature(FEATURE_STORE_SELECTOR, quickTransferReducer),\n    EffectsModule.forFeature([QuickTransferEffects]),\n  ],\n  providers: [QuickTransferEffects],\n})\nexport class QuickTransferStoreModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { AmountInputModule } from '@backbase/ui-ang/amount-input';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CurrencyInputModule } from '@backbase/ui-ang/currency-input';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { TabModule } from '@backbase/ui-ang/tab';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { BaseAccountSelectorComponent } from './components/account-selector-base/account-selector-base.component';\nimport { QuickTransferAccountsComponent } from './components/quick-transfer-accounts/quick-transfer-accounts.component';\nimport { QuickTransferCompleteComponent } from './components/quick-transfer-complete/quick-transfer-complete.component';\nimport { QuickTransferConfirmationModalComponent } from './components/quick-transfer-confirmation-modal/quick-transfer-confirmation-modal.component';\nimport { QuickTransferFormComponent } from './components/quick-transfer-form/quick-transfer-form.component';\nimport { QuickTransferFromAccountComponent } from './components/quick-transfer-from-account/quick-transfer-from-account.component';\nimport { QuickTransferToAccountComponent } from './components/quick-transfer-to-account/quick-transfer-to-account.component';\nimport { QuickTransferJourneyComponent } from './quick-transfer-journey.component';\nimport { QuickTransferJourneyConfigService } from './services/config.service';\nimport { QuickTransferHttpService } from './services/quick-transfer-http.service';\nimport { QuickTransferStoreModule } from './store/store.module';\nimport { CustomProductSelectorComponent } from './ui/custom-product-selector/custom-product-selector.component';\nimport { QuickTransferValidationMessageComponent } from './ui/validation-message/validation-message.component';\n\nconst uiModules = [\n  InputValidationMessageModule,\n  ButtonModule,\n  HeaderModule,\n  IconModule,\n  CurrencyInputModule,\n  TooltipModule,\n  ProductItemBasicAccountModule,\n  TabModule,\n  LoadingIndicatorModule,\n  ModalModule,\n  LoadButtonModule,\n  EmptyStateModule,\n  AmountModule,\n  AmountInputModule,\n];\n\nconst components = [\n  QuickTransferFormComponent,\n  BaseAccountSelectorComponent,\n  QuickTransferFromAccountComponent,\n  QuickTransferAccountsComponent,\n  QuickTransferToAccountComponent,\n  QuickTransferConfirmationModalComponent,\n  QuickTransferCompleteComponent,\n  CustomProductSelectorComponent,\n  QuickTransferJourneyComponent,\n  QuickTransferValidationMessageComponent,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [CommonModule, ReactiveFormsModule, QuickTransferStoreModule, ...uiModules],\n  exports: [...components, QuickTransferStoreModule, ...uiModules],\n  providers: [QuickTransferHttpService, QuickTransferJourneyConfigService],\n})\nexport class QuickTransferJourneyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.QuickTransferStoreService","i1","i2","i3","i5","i6","i4","i7","i8","i4.CustomProductSelectorComponent","i5.QuickTransferValidationMessageComponent","ProductKinds","i4.QuickTransferAccountsComponent","i5.QuickTransferAccountsComponent","i3.QuickTransferJourneyConfigService","i4.QuickTransferFormComponent","i5.QuickTransferFromAccountComponent","i6.QuickTransferToAccountComponent","i7.QuickTransferCompleteComponent","i8.QuickTransferConfirmationModalComponent","slideUpAnimation","i6.QuickTransferJourneyConfigService","i2.QuickTransferHttpService","i3.CommunicationService"],"mappings":"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"}