{"version":3,"file":"validation-message.component.js","sourceRoot":"","sources":["../../../../../../../libs/quick-transfer-journey/src/lib/ui/validation-message/validation-message.component.ts","../../../../../../../libs/quick-transfer-journey/src/lib/ui/validation-message/validation-message.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAU,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;;;;AAQ3D,MAAM,OAAO,uCAAuC;IAgBlD,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;IAC/D,CAAC;IAED,oBAAoB,CAAC,KAAc;;QACjC,MAAM,UAAU,GAAG,MAAA,IAAI,CAAC,kBAAkB,0CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,eAAC,OAAA,CAAC,CAAC,CAAA,MAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,MAAM,0CAAG,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,CAAA,CAAA,EAAA,CAAC,CAAC;QACrG,OAAO,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,OAAO,KAAI,EAAE,CAAC;IACnC,CAAC;;wJAvBU,uCAAuC;4IAAvC,uCAAuC,gKCVpD,mpBAkBA,0PDVc,CAAC,kBAAkB,CAAC;4FAErB,uCAAuC;kBALnD,SAAS;mBAAC;oBACT,QAAQ,EAAE,sCAAsC;oBAChD,WAAW,EAAE,qCAAqC;oBAClD,UAAU,EAAE,CAAC,kBAAkB,CAAC;iBACjC;8BAKU,OAAO;sBAAf,KAAK;gBAIG,kBAAkB;sBAA1B,KAAK;gBAIG,EAAE;sBAAV,KAAK","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { fadeSlideAnimation } from '@backbase/ui-ang/util';\nimport { ErrorMessage } from '../../models/state.model';\n\n@Component({\n  selector: 'bb-quick-transfer-validation-message',\n  templateUrl: './validation-message.component.html',\n  animations: [fadeSlideAnimation],\n})\nexport class QuickTransferValidationMessageComponent implements OnInit {\n  /**\n   * The form control instance\n   */\n  @Input() control!: FormControl;\n  /**\n   * List of validation messages\n   */\n  @Input() validationMessages!: Array<ErrorMessage>;\n  /**\n   * Id of validation message\n   */\n  @Input() id!: string;\n\n  requiredMessage!: string;\n\n  ngOnInit() {\n    this.requiredMessage = this.getValidationMessage('required');\n  }\n\n  getValidationMessage(error?: string): string {\n    const validation = this.validationMessages?.find(msg => !!this.control?.errors?.[error || msg.name]);\n    return validation?.message || '';\n  }\n}\n","<bb-input-validation-message-ui\n  data-role=\"input-error\"\n  *ngIf=\"control?.touched && control?.invalid\"\n  [showErrors]=\"control?.touched && control?.invalid\"\n  [@fadeSlideInOut]\n>\n  <ng-container *ngIf=\"control?.errors?.['required']; else invalidError\">\n    <span data-role=\"required-error\" [attr.id]=\"id\" *ngIf=\"requiredMessage\">\n      {{ requiredMessage }}\n    </span>\n  </ng-container>\n\n  <ng-template #invalidError>\n    <span data-role=\"required-error\" [attr.id]=\"id\" *ngIf=\"getValidationMessage() as validationMessage\">\n      {{ validationMessage }}</span\n    >\n  </ng-template>\n</bb-input-validation-message-ui>\n"]}