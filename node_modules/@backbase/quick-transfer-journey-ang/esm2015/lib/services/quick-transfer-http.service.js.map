{"version":3,"file":"quick-transfer-http.service.js","sourceRoot":"","sources":["../../../../../../libs/quick-transfer-journey/src/lib/services/quick-transfer-http.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy, Optional } from '@angular/core';\nimport { ProductSummaryHttpService, ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { ContactsGetResponseBodyItem, ContactsHttpService } from '@backbase/data-ang/contact-manager';\nimport {\n  PaymentOrdersHttpService,\n  PaymentOrdersPost,\n  PaymentOrdersPostResponse,\n} from '@backbase/data-ang/payment-order';\nimport {\n  A2aClientHttpService,\n  DetailedExternalAccount,\n  ExternalAccountGetResponse,\n} from '@backbase/data-ang/payment-order-a2a';\nimport { CapabilityData, TransactionSigningHelperService } from '@backbase/identity-auth/transaction-signing';\nimport { Observable, of, Subject } from 'rxjs';\nimport { exhaustMap, map, pluck, takeUntil } from 'rxjs/operators';\nimport { FROM_PAGES, PAGE_SIZE, PRIVILEGE, RESOURCE_NAME } from '../constants/accounts-variables';\nimport { QuickTransferProductKinds as ProductKinds } from '../models/config.model';\nimport { Arrangement, Contact, ExternalAccount } from '../models/items.model';\nimport { ProgressStatus } from '../models/state.model';\nimport { QuickTransferJourneyConfigService } from '../services/config.service';\nimport { filterByOtherProps, filterByProductKinds } from '../utils/arrangement-filter';\nimport { responseToProductList } from '../utils/arrangement-mapper';\n\n@Injectable()\nexport class QuickTransferHttpService implements OnDestroy {\n  private destroy$ = new Subject();\n  paymentOrderResponse$ = new Subject<PaymentOrdersPostResponse | undefined>();\n\n  /**\n   * Product Summary default parameters\n   */\n  private productSummaryParameters = {\n    resourceName: RESOURCE_NAME,\n    privilege: PRIVILEGE,\n    from: FROM_PAGES,\n    size: PAGE_SIZE,\n    businessFunction: 'A2A Transfer',\n  };\n\n  constructor(\n    private readonly productSummaryDataHttpService: ProductSummaryHttpService,\n    private readonly contactService: ContactsHttpService,\n    private readonly paymentA2AService: A2aClientHttpService,\n    private readonly paymentOrderService: PaymentOrdersHttpService,\n    @Optional() private readonly transactionSigningHelper: TransactionSigningHelperService,\n    private readonly configService: QuickTransferJourneyConfigService,\n  ) {\n    const { productSummaryQueryParameters, businessFunction } = this.configService || {};\n\n    this.productSummaryParameters = {\n      ...this.productSummaryParameters,\n      ...productSummaryQueryParameters,\n      ...(businessFunction ? { businessFunction } : undefined),\n    };\n  }\n\n  /**\n   * Load debit accounts\n   */\n  getDebitAccounts(): Observable<Arrangement[]> {\n    const { fields } = this.configService || {};\n    const { productKinds, mapItems, otherFilters } = fields?.fromAccount || {};\n    return this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction({\n        ...this.productSummaryParameters,\n        debitAccount: true,\n      })\n      .pipe(\n        map((res: Array<ProductSummaryItem>) => responseToProductList(res)),\n        map(accounts => filterByProductKinds(accounts, productKinds)),\n        map(accounts => filterByOtherProps(accounts, otherFilters) as Arrangement[]),\n        map(accounts => (mapItems && accounts?.length ? mapItems(accounts) : accounts)),\n      );\n  }\n\n  /**\n   * Load credit accounts\n   */\n  getCreditAccounts(): Observable<Arrangement[]> {\n    const { fields } = this.configService || {};\n    const { productKinds, mapItems, otherFilters } = fields?.toAccount || {};\n    return this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction({\n        ...this.productSummaryParameters,\n        creditAccount: true,\n      })\n      .pipe(\n        map((res: Array<ProductSummaryItem>) => responseToProductList(res)),\n        map(accounts => filterByProductKinds(accounts, productKinds)),\n        map(accounts => filterByOtherProps(accounts, otherFilters) as Arrangement[]),\n        map(accounts => (mapItems && accounts?.length ? mapItems(accounts) : accounts)),\n      );\n  }\n\n  /**\n   * Load contacts\n   */\n  getContacts(): Observable<Contact[]> {\n    const mapContacts = this.configService.fields.toAccount.mapContacts;\n    return this.contactService.getContacts({}).pipe(\n      map((contacts: Array<ContactsGetResponseBodyItem>) =>\n        contacts?.map(\n          contact =>\n            ({\n              uuid: contact.id,\n              name: contact.name,\n              number: contact.accounts[0].accountNumber || contact.accounts[0].IBAN,\n              productKindName: ProductKinds.contacts,\n              defaultRecord: contact,\n            } as Contact),\n        ),\n      ),\n      map(contacts => (mapContacts && contacts?.length ? mapContacts(contacts) : contacts)),\n    );\n  }\n\n  /**\n   * Get external accounts\n   */\n  getExternalAccounts(): Observable<ExternalAccount[] | undefined> {\n    return this.paymentA2AService.getAll().pipe(\n      map((body: ExternalAccountGetResponse) => {\n        if (body.accounts) {\n          return body.accounts\n            .filter(({ status }: DetailedExternalAccount) => status === 'Active')\n            .map(\n              ({ externalAccountId, accountNickName, accountNumber, bankName }: DetailedExternalAccount) =>\n                ({\n                  uuid: externalAccountId,\n                  name: accountNickName || bankName,\n                  number: accountNumber,\n                  productKindName: ProductKinds.connectedAccounts,\n                } as ExternalAccount),\n            );\n        }\n        return;\n      }),\n    );\n  }\n\n  /**\n   * Post method to initiate payment order\n   */\n  sendPaymentOrder(paymentOrdersPost: PaymentOrdersPost): Observable<PaymentOrdersPostResponse | undefined> {\n    return this.paymentOrderService.postPaymentOrders({ paymentOrdersPost }).pipe(\n      exhaustMap(response => {\n        if (this.transactionSigningHelper?.isTransactionSigningResponse(response as CapabilityData)) {\n          this.handleTransactionSigning(response as CapabilityData);\n          return this.paymentOrderResponse$.asObservable();\n        } else {\n          return of(response);\n        }\n      }),\n    );\n  }\n\n  getPaymentProgressStatus(data?: CapabilityData): Observable<string | undefined> {\n    const paymentOrderId = (data?.['payment-order-id'] || '') as string;\n    return this.paymentOrderService\n      .getProgressStatusByPaymentOrderId({ paymentOrderId }, 'body')\n      .pipe(pluck('progressStatus'));\n  }\n\n  handleTransactionSigning(response: CapabilityData) {\n    if (!this.transactionSigningHelper) return;\n    const paymentOrderId = response['payment-order-id'];\n\n    if (paymentOrderId) {\n      this.transactionSigningHelper.getTransactionInfo({\n        data: response,\n        asyncPollingOptions: {\n          pollInterval: 1000,\n          maxRetries: 3,\n          pollUntilFn: this.isPaymentConfirmed,\n          complete$: this.destroy$,\n        },\n        fetchFn: this.getPaymentProgressStatus.bind(this),\n        onSuccess: this.onTransactionSigningSuccess.bind(this, paymentOrderId),\n        onRejected: this.onTransactionFail.bind(this, paymentOrderId),\n        onDeclined: this.onTransactionFail.bind(this),\n        onError: this.onTransactionFail.bind(this),\n      });\n    }\n  }\n\n  isPaymentConfirmed(status: string) {\n    return !!status && status !== ProgressStatus.CONFIRMATION_PENDING && status !== ProgressStatus.SENDING;\n  }\n\n  onTransactionSigningSuccess(paymentOrderId: string) {\n    this.paymentOrderService\n      .getPaymentOrderById({ paymentOrderId }, 'body')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(response => {\n        this.paymentOrderResponse$.next(response);\n      });\n  }\n\n  onTransactionFail() {\n    this.paymentOrderResponse$.next();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n"]}