{"version":3,"file":"config.model.js","sourceRoot":"","sources":["../../../../../../libs/quick-transfer-journey/src/lib/models/config.model.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAMzC,MAAM,CAAN,IAAY,yBAOX;AAPD,WAAY,yBAAyB;IACnC,+DAAkC,CAAA;IAClC,+DAAkC,CAAA;IAClC,uDAA0B,CAAA;IAC1B,iDAAoB,CAAA;IACpB,oEAAuC,CAAA;IACvC,iDAAoB,CAAA;AACtB,CAAC,EAPW,yBAAyB,KAAzB,yBAAyB,QAOpC","sourcesContent":["import { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Arrangement, Contact } from './items.model';\nimport { ViewState } from './view.model';\n\nexport interface BaseObject<T> {\n  [key: string]: T;\n}\n\nexport enum QuickTransferProductKinds {\n  currentAccount = 'Current Account',\n  savingsAccount = 'Savings Account',\n  creditCard = 'Credit Card',\n  loanAccount = 'Loan',\n  connectedAccounts = 'Connected Account',\n  contacts = 'Contact',\n}\n\nexport interface ValidationMessage {\n  name: string;\n  message: string;\n}\n\n/**\n * @deprecated since version 1.1.0 use `QuickTransferJourneyConfiguration` instead\n */\nexport interface FilterState extends BaseObject<Array<string | number | boolean> | string> {\n  key: string;\n  value: Array<string | number | boolean>;\n}\n\nexport interface QuickTransferBaseField {\n  validationMessages?: ValidationMessage[];\n  validators?: Array<ValidatorFn>;\n  asyncValidators?: Array<AsyncValidatorFn>;\n  label?: string;\n}\n\nexport interface QuickTransferField extends QuickTransferBaseField {\n  productKinds?: QuickTransferProductKinds[];\n  connectedAccountsSubHeader?: string;\n  mapItems?: (items: Arrangement[]) => Arrangement[];\n  mapContacts?: (items: Contact[]) => Contact[];\n  /** @deprecated since version 1.1.0, use `mapItems` instead */\n  otherFilters?: FilterState[];\n}\nexport interface QuickTransferAmountField extends QuickTransferBaseField {\n  initialCurrency: string;\n  autoDecimal: boolean;\n  maxLength?: number;\n  placeholder?: string;\n  wrapperClasses?: string;\n  required?: boolean;\n}\nexport interface PaymentTypes {\n  internal: string;\n  external?: string;\n  contact?: string;\n}\nexport interface DisabledCombination {\n  from: QuickTransferProductKinds;\n  to: QuickTransferProductKinds;\n}\n\nexport interface QuickTransferFields {\n  fromAccount: QuickTransferField;\n  toAccount: QuickTransferField;\n  amount: QuickTransferAmountField;\n}\n\nexport interface UiComponentProps {\n  mapCurrency?: boolean;\n  accountNumberFormat?: AccountNumberFormat;\n  productItemHighlight?: boolean;\n}\n\nexport interface AccountNumberFormat {\n  length?: number;\n  maskRange?: [number, number];\n  segments?: number | Array<number>;\n}\n\nexport interface QuickTransferJourneyConfiguration {\n  fields: QuickTransferFields;\n  businessFunction?: string;\n  successEvents?: string;\n  paymentTypes: PaymentTypes;\n  disabledCombinations: DisabledCombination[];\n  productSummaryQueryParameters?: BaseObject<any>;\n  uiComponentProps: UiComponentProps;\n  titles: Titles;\n}\n\nexport interface Titles {\n  [ViewState.FORM]: string;\n  [ViewState.FROM]: string;\n  [ViewState.PAYEE]: string;\n  [ViewState.REVIEW]: string;\n}\n\n/**\n * @deprecated since version 1.1.0 use `QuickTransferJourneyConfiguration` instead\n */\nexport interface QuickTransferConfigType {\n  fields: QuickTransferFields;\n  businessFunction?: string;\n  successEvents?: string;\n  paymentTypes: PaymentTypes;\n  disabledCombinations: DisabledCombination[];\n  productSummaryQueryParameters?: BaseObject<any>;\n  uiComponentProps: UiComponentProps;\n}\n"]}