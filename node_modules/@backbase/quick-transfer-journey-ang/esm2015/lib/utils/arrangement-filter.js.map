{"version":3,"file":"arrangement-filter.js","sourceRoot":"","sources":["../../../../../../libs/quick-transfer-journey/src/lib/utils/arrangement-filter.ts"],"names":[],"mappings":"AAAA,OAAO,EAIL,yBAAyB,IAAI,YAAY,GAC1C,MAAM,wBAAwB,CAAC;AAEhC,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAEhD,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAClC,YAAuC,EACvC,YAAwC,EACpB,EAAE;IACtB,MAAM,aAAa,GAAG,YAAY,IAAI,EAAE,CAAC;IAEzC,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC,WAAwB,EAAE,EAAE,CACvD,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,eAA+B,CAAC,CAAC,CAAC,CAAC,IAAI,CACzF,CAAC;AACJ,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,YAA2B,EAAE,OAAkC,EAAiB,EAAE;IACnH,MAAM,aAAa,GAAG,YAAY,IAAI,EAAE,CAAC;IAEzC,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC,GAAgB,EAAE,EAAE,CAC/C,OAAO,IAAI,OAAO,CAAC,MAAM;QACvB,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAe,EAAE,EAAE;YAC5C,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,IAAI,CAAC,KAAM,GAAG,CAAC,aAAiC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC;QACJ,CAAC,CAAC,IAAI,CACT,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAC1C,YAA8D,EAC9D,mBAA0D,EAC1D,oBAAuD,EACvD,QAAkB,EACoB,EAAE;IACxC,IAAI,CAAC,YAAY;QAAE,OAAO,EAAE,CAAC;IAC7B,MAAM,YAAY,GAAG,oBAAoB,IAAI,EAAE,CAAC;IAChD,8FAA8F;IAC9F,YAAY,CAAC,IAAI,CAAC;QAChB,IAAI,EAAE,YAAY,CAAC,iBAAiB;QACpC,EAAE,EAAE,YAAY,CAAC,iBAAiB;KACnC,CAAC,CAAC;IACH,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,iBAAiB,EAAE,EAAE,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEvF,MAAM,oBAAoB,GAAG,YAAY;SACtC,MAAM,CAAC,CAAC,CAAsB,EAAE,EAAE;QACjC,OAAO,QAAQ,KAAK,QAAQ,CAAC,IAAI;YAC/B,CAAC,CAAC,CAAC,CAAC,EAAE,MAAK,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,eAAe,CAAA;YAC/C,CAAC,CAAC,CAAC,CAAC,IAAI,MAAK,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,eAAe,CAAA,CAAC;IACtD,CAAC,CAAC;SACD,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE1D,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC,eAA+B,CAAC,CAAC,CAAC;AACzG,CAAC,CAAC","sourcesContent":["import {\n  BaseObject,\n  DisabledCombination,\n  FilterState,\n  QuickTransferProductKinds as ProductKinds,\n} from '../models/config.model';\nimport { AccountItem, Arrangement, ExternalAccount } from '../models/items.model';\nimport { Location } from '../models/view.model';\n\nexport const filterByProductKinds = (\n  arrangements: Arrangement[] | undefined,\n  productKinds: ProductKinds[] | undefined,\n): Array<Arrangement> => {\n  const _arrangements = arrangements || [];\n\n  return _arrangements.filter((arrangement: Arrangement) =>\n    productKinds ? productKinds.includes(arrangement.productKindName as ProductKinds) : true,\n  );\n};\n\n/**\n * @deprecated since version 1.1.0, use `mapItems` instead\n */\nexport const filterByOtherProps = (arrangements: Arrangement[], filters: FilterState[] | undefined): Arrangement[] => {\n  const _arrangements = arrangements || [];\n\n  return _arrangements.filter((arr: Arrangement) =>\n    filters && filters.length\n      ? filters.every(({ key, value }: FilterState) => {\n          return value.some(v => arr.defaultRecord && v === (arr.defaultRecord as BaseObject<any>)[key]);\n        })\n      : true,\n  );\n};\n\nexport const filterByDisabledCombinations = (\n  arrangements: Array<Arrangement | ExternalAccount> | undefined,\n  counterPartyAccount: Arrangement | AccountItem | undefined,\n  disabledCombinations: DisabledCombination[] | undefined,\n  location: Location,\n): Array<Arrangement | ExternalAccount> => {\n  if (!arrangements) return [];\n  const combinations = disabledCombinations || [];\n  // Disable a transfer from connected to connected and connected to contacts account by default\n  combinations.push({\n    from: ProductKinds.connectedAccounts,\n    to: ProductKinds.connectedAccounts,\n  });\n  combinations.push({ from: ProductKinds.connectedAccounts, to: ProductKinds.contacts });\n\n  const disabledProductKinds = combinations\n    .filter((i: DisabledCombination) => {\n      return location === Location.FROM\n        ? i.to === counterPartyAccount?.productKindName\n        : i.from === counterPartyAccount?.productKindName;\n    })\n    .map(i => (location === Location.FROM ? i.from : i.to));\n\n  return arrangements.filter(arr => !disabledProductKinds.includes(arr.productKindName as ProductKinds));\n};\n"]}