{"version":3,"file":"account-selector-base.component.js","sourceRoot":"","sources":["../../../../../../../libs/quick-transfer-journey/src/lib/components/account-selector-base/account-selector-base.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAIjD,OAAO,EAAa,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACnE,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;;;AAKtE,MAAM,OAAO,4BAA4B;IAMvC,YAAqB,KAAgC;QAAhC,UAAK,GAAL,KAAK,CAA2B;QASrD;;WAEG;QACM,uBAAkB,GAAsC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;QAC/F;;WAEG;QACM,iBAAY,GAAG,YAAY,CAAC;QACrC;;WAEG;QACM,0BAAqB,GAAsC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;IApB7C,CAAC;IAsBzD;;OAEG;IACH,UAAU,CAAC,YAAoB;QAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACnD,CAAC;IACD;;OAEG;IACH,WAAW;QACT,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IACD;;OAEG;IACH,cAAc;QACZ,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;IAChC,CAAC;;6IA7CU,4BAA4B;iIAA5B,4BAA4B,kFAF7B,EAAE;4FAED,4BAA4B;kBAHxC,SAAS;mBAAC;oBACT,QAAQ,EAAE,EAAE;iBACb;gHAKU,MAAM;sBAAd,KAAK","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { Arrangement } from '../../models/items.model';\nimport { CallState, LoadingState } from '../../models/state.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\n\n@Component({\n  template: '',\n})\nexport class BaseAccountSelectorComponent {\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n\n  constructor(readonly store: QuickTransferStoreService) {}\n  /**\n   * Stream of accounts\n   */\n  accounts$?: Observable<Arrangement[]>;\n  /**\n   * Stream of external accounts\n   */\n  extAccounts$?: Observable<Arrangement[]>;\n  /**\n   * Stream of accountsCallState\n   */\n  readonly accountsCallState$: Observable<CallState | undefined> = this.store.accountsCallState$;\n  /**\n   * Enum for loadingstate\n   */\n  readonly loadingstate = LoadingState;\n  /**\n   * Stream of extAccountsCallState\n   */\n  readonly extAccountsCallState$: Observable<CallState | undefined> = this.store.extAccountsCallState$;\n\n  /**\n   * Method to navigate back to the main Form\n   */\n  backToForm(fromSelector: string) {\n    this.store.setView(ViewState.FORM, fromSelector);\n  }\n  /**\n   * Method to dispatch store action for fetching the accounts\n   */\n  getAccounts() {\n    this.store.fetchAccounts();\n  }\n  /**\n   * Method to dispatch store action for fetching external accounts\n   */\n  getExtAccounts() {\n    this.store.fetchExtAccounts();\n  }\n}\n"]}