{"version":3,"file":"quick-transfer-form.component.js","sourceRoot":"","sources":["../../../../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-form/quick-transfer-form.component.ts","../../../../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-form/quick-transfer-form.component.html"],"names":[],"mappings":"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","sourcesContent":["import { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport BigNumber from 'bignumber.js';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, first, take, takeUntil } from 'rxjs/operators';\nimport { QuickTransferAmountField, QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { AccountItem, TransferAmount } from '../../models/items.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\n\n@Component({\n  selector: 'bb-quick-transfer-form-ui',\n  templateUrl: './quick-transfer-form.component.html',\n})\nexport class QuickTransferFormComponent implements OnInit, OnDestroy, AfterViewInit {\n  /**\n   * The format used for bignumber;\n   */\n  private readonly format: BigNumber.Format;\n  private readonly decimalSeparator: string;\n\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.toPayee$;\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccount$: Observable<AccountItem | undefined> = this.store.fromAccount$;\n  /**\n   * Stream of amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.amount$;\n  /**\n   * Stream of touchedFields\n   */\n  readonly touchedFields$: Observable<string[] | undefined> = this.store.touchedFields$;\n  /**\n   * The reactive form\n   */\n  form?: FormGroup;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n  /**\n   * unique key used for ids\n   */\n  readonly id = new Date().getTime();\n\n  /**\n   * Stream of the current view\n   */\n  readonly currentView$: Observable<ViewState | undefined> = this.store.currentView$;\n  /**\n   * Stream of the current view\n   */\n  get amountConfig(): QuickTransferAmountField | undefined {\n    return this.config?.fields.amount;\n  }\n\n  @ViewChild('formElement') formEl!: ElementRef;\n\n  destroy$ = new Subject();\n\n  constructor(\n    private readonly store: QuickTransferStoreService,\n    private readonly formBuilder: FormBuilder,\n    @Inject(LOCALE_ID) private readonly locale: string,\n  ) {\n    this.decimalSeparator = getLocaleNumberSymbol(this.locale, NumberSymbol.CurrencyDecimal);\n    this.format = {\n      groupSeparator: '',\n      decimalSeparator: this.decimalSeparator,\n      groupSize: 3,\n    };\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.form\n      ?.get('amountGroup.amount')\n      ?.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroy$))\n      .subscribe(change => {\n        this.storeAmountValue(change);\n      });\n    this.touchedFields$.pipe(take(1)).subscribe(fields => {\n      if (fields?.length) {\n        fields.forEach(field => {\n          this.form?.get(field)?.markAsTouched();\n        });\n      }\n    });\n    //Set Initial form data from store\n    combineLatest([\n      this.amount$.pipe(take(1)),\n      this.toPayee$.pipe(take(1)),\n      this.fromAccount$.pipe(distinctUntilChanged()), // To have account preselected by route params\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([amount, toAccount, fromAccount]) => {\n        const amountVal = amount?.amount;\n        this.form?.patchValue({\n          amountGroup: {\n            amount: amountVal ? new BigNumber(amountVal).toFormat(this.format) : '',\n            currency: amount?.currency || this.amountConfig?.initialCurrency,\n          },\n          toAccount,\n          fromAccount,\n        });\n      });\n  }\n\n  ngAfterViewInit() {\n    this.store.focusElement$.pipe(distinctUntilChanged(), filter(Boolean), takeUntil(this.destroy$)).subscribe(el => {\n      const focusElement = this.formEl.nativeElement.querySelector(el);\n      if (focusElement) {\n        focusElement.focus({ preventScroll: true });\n        this.store.resetFocus();\n      }\n    });\n    this.amount$\n      .pipe(\n        filter(amount => !amount),\n        take(1),\n      )\n      .subscribe(() => {\n        this.form?.get('amountGroup.amount')?.patchValue(' ');\n        this.form?.reset();\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Method to open from account selector\n   */\n  openFromAccount(): void {\n    this.store.setView(ViewState.FROM);\n    this.store.setTouchedField('fromAccount');\n  }\n  /**\n   * Method to open to account selector\n   */\n  openPayeeAccount() {\n    this.store.setView(ViewState.PAYEE);\n    this.store.setTouchedField('toAccount');\n  }\n  /**\n   * Method to store amount input value\n   */\n  private storeAmountValue(amount: string) {\n    this.store.setAmount({ amount: amount?.replace(this.decimalSeparator, '.') });\n  }\n\n  /**\n   * Method to handle transfer\n   */\n  async openConfirmation() {\n    const currentView = await this.currentView$.pipe(first()).toPromise();\n    if (currentView === ViewState.FORM && this.form?.valid) {\n      this.storeAmountValue(this.form.value.amountGroup.amount);\n      this.store.setModalOpen(true);\n    } else {\n      this.setTouched('amountGroup.amount');\n      this.setTouched('fromAccount');\n      this.setTouched('toAccount');\n    }\n  }\n\n  /**\n   * Method to check field Validity\n   */\n  isFieldValid(fieldName: string) {\n    const control = this.form?.get(fieldName);\n    return control && (control.valid || control.untouched);\n  }\n  /**\n   * Method to set field as touched\n   */\n  setTouched(fieldName: string) {\n    const control = this.form?.get(fieldName);\n    if (control) {\n      control.markAsTouched();\n      this.store.setTouchedField(fieldName);\n    }\n  }\n\n  private initializeForm(): void {\n    const { fromAccount, toAccount, amount } = this.config?.fields || {};\n\n    this.form = this.formBuilder.group({\n      amountGroup: this.formBuilder.group({\n        amount: ['', amount?.validators || [], amount?.asyncValidators || []],\n        currency: ['', Validators.required],\n      }),\n      fromAccount: ['', fromAccount?.validators || [], fromAccount?.asyncValidators || []],\n      toAccount: ['', toAccount?.validators || [], toAccount?.asyncValidators || []],\n    });\n  }\n}\n","<div class=\"bb-quick-transfer__view bb-quick-transfer__view--form\">\n  <div class=\"bb-block bb-quick-transfer__heading\">\n    <div class=\"bb-stack\">\n      <bb-header-ui\n        [heading]=\"config?.titles?.[viewState.FORM]\"\n        data-role=\"quick-transfer-header\"\n        headingType=\"h2\"\n        headingClasses=\"bb-block bb-block--lg\"\n        class=\"bb-stack__item bb-stack__item--fill\"\n      ></bb-header-ui>\n    </div>\n  </div>\n  <form\n    class=\"bb-quick-transfer__form\"\n    [formGroup]=\"form\"\n    data-role=\"quick-transfer-form\"\n    (ngSubmit)=\"openConfirmation()\"\n    #formElement\n  >\n    <fieldset [disabled]=\"(currentView$ | async) !== viewState.FORM\">\n      <legend class=\"sr-only\" i18n=\"Legend|Quick transfer form legend@@quick-transfer.form.legend\">\n        Quick transfer Form\n      </legend>\n      <div class=\"bb-block bb-block--lg\">\n        <label class=\"bb-label\" data-role=\"from-label\">{{ config?.fields?.fromAccount?.label }}</label>\n        <bb-custom-product-selector\n          [touched]=\"!isFieldValid('fromAccount')\"\n          formControlName=\"fromAccount\"\n          (focusout)=\"setTouched('fromAccount')\"\n          [account]=\"fromAccount$ | async\"\n          (open)=\"openFromAccount()\"\n          data-role=\"select-from-button\"\n          emptyLabel=\"Select your account\"\n          aria-describedby=\"{{ 'fromAccount-errors-' + id }}\"\n          i18n-emptyLabel=\"Select Account|Quick transfer input for account@@quick-transfer.form.from\"\n        ></bb-custom-product-selector>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'fromAccount-errors-' + id }}\"\n          [control]=\"form?.get('fromAccount')\"\n          [validationMessages]=\"config?.fields?.fromAccount?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div class=\"bb-block bb-block--lg\">\n        <label\n          class=\"bb-label\"\n          data-role=\"payee-label\"\n          i18n=\"Input label|Quick transfer input label for beneficiary@@quick-transfer.form.to.label\"\n          >{{ config?.fields?.toAccount?.label }}</label\n        >\n        <bb-custom-product-selector\n          [touched]=\"!isFieldValid('toAccount')\"\n          formControlName=\"toAccount\"\n          (focusout)=\"setTouched('toAccount')\"\n          [account]=\"toPayee$ | async\"\n          (open)=\"openPayeeAccount()\"\n          data-role=\"select-payee-button\"\n          emptyLabel=\"Select beneficiary\"\n          aria-describedby=\"{{ 'toAccount-errors-' + id }}\"\n          i18n-emptyLabel=\"Select beneficiary|Quick transfer input for beneficiary@@quick-transfer.form.to\"\n        ></bb-custom-product-selector>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'toAccount-errors-' + id }}\"\n          [control]=\"form?.get('toAccount')\"\n          [validationMessages]=\"config?.fields?.toAccount?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div\n        class=\"bb-block bb-block--xl\"\n        formGroupName=\"amountGroup\"\n        [class.was-validated]=\"!isFieldValid('amountGroup.amount')\"\n      >\n        <label\n          class=\"bb-label\"\n          for=\"{{ 'amount-' + id }}\"\n          i18n=\"Amount of transfer|Quick transfer input for amount@@quick-transfer.form.amount\"\n          >{{ config?.fields?.amount?.label }}</label\n        >\n        <bb-amount-input-ui\n          formControlName=\"amount\"\n          data-role=\"amount-input\"\n          [id]=\"'amount-' + id\"\n          [autoDecimal]=\"amountConfig?.autoDecimal\"\n          (focusout)=\"setTouched('amountGroup.amount')\"\n          [wrapperClasses]=\"amountConfig?.wrapperClasses\"\n          [mapCurrency]=\"config?.uiComponentProps.mapCurrency\"\n          [currency]=\"(fromAccount$ | async)?.currency || amountConfig?.initialCurrency\"\n          [required]=\"amountConfig?.required\"\n          aria-describedby=\"{{ 'amount-errors-' + id }}\"\n          [placeholder]=\"amountConfig?.placeholder\"\n        ></bb-amount-input-ui>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'amount-errors-' + id }}\"\n          [control]=\"form?.get('amountGroup.amount')\"\n          [validationMessages]=\"amountConfig?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div class=\"bb-block bb-block--sm\">\n        <button\n          bbButton\n          color=\"primary\"\n          data-role=\"open-confirmation\"\n          [block]=\"true\"\n          i18n=\"Approve button|Transfer the amount@@quick-transfer.button.transfer-now\"\n          type=\"submit\"\n        >\n          Transfer Now\n        </button>\n      </div>\n    </fieldset>\n  </form>\n</div>\n"]}