{"version":3,"file":"quick-transfer-complete.component.js","sourceRoot":"","sources":["../../../../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-complete/quick-transfer-complete.component.ts","../../../../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-complete/quick-transfer-complete.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAiB,uBAAuB,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAEhH,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,EAAE,YAAY,EAAE,MAAM,qCAAqC,CAAC;AAGnE,OAAO,EAAyB,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAC/E,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;AACtE,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;AAOjD,MAAM,OAAO,8BAA8B;IACzC,YAA6B,KAAgC;QAAhC,UAAK,GAAL,KAAK,CAA2B;QACpD,OAAE,GAAG,UAAU,EAAE,CAAC;QAS3B;;WAEG;QACM,cAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC1C;;WAEG;QACM,YAAO,GAA2C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9E;;WAEG;QACM,aAAQ,GAAwC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC7E;;WAEG;QACM,2BAAsB,GAA0B,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAC7F,GAAG,CAAC,KAAK,CAAC,EAAE;YACV,IAAK,KAAoB,CAAC,KAAK,EAAE;gBAC/B,MAAM,KAAK,GAAI,KAAoB,CAAC,KAAK,CAAC;gBAC1C,MAAM,+BAA+B,GAAG,mCAAmC,CAAC;gBAC5E,MAAM,mBAAmB,GAAG,6BAA6B,CAAC;gBAC1D,MAAM,iCAAiC,GAAG,kBAAkB,CAAC;gBAC7D,MAAM,OAAO,GACX,KAAK,CAAC,UAAU,KAAK,iCAAiC;oBACpD,CAAC,CAAC,SAAS,CAAA,6DAA6D,+BAA+B,EAAE;oBACzG,CAAC,CAAC,SAAS,CAAA,2CAA2C,mBAAmB,EAAE,CAAC;gBAEhF,uCAAY,KAAK,KAAE,OAAO,IAAG;aAC9B;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CACH,CAAC;QACF;;WAEG;QACM,iBAAY,GAAG,YAAY,CAAC;IA7C2B,CAAC;IAqDjE,eAAe;QACb,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACxC,CAAC;IACD;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC;IACD;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACnD,CAAC;;+IApEU,8BAA8B;mIAA9B,8BAA8B,2QChB3C,g3JAiIA;4FDjHa,8BAA8B;kBAL1C,SAAS;mBAAC;oBACT,QAAQ,EAAE,+BAA+B;oBACzC,WAAW,EAAE,0CAA0C;oBACvD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;gHAOU,UAAU;sBAAlB,KAAK;gBAIG,kBAAkB;sBAA1B,KAAK;gBAwCG,MAAM;sBAAd,KAAK;gBAEa,UAAU;sBAA5B,SAAS;uBAAC,MAAM","sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FROM_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { AccountItem, TransferAmount } from '../../models/items.model';\nimport { CallState, ErrorState, LoadingState } from '../../models/state.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { generateId } from '../../utils/helpers';\n\n@Component({\n  selector: 'bb-quick-transfer-complete-ui',\n  templateUrl: './quick-transfer-complete.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferCompleteComponent implements AfterViewInit {\n  constructor(private readonly store: QuickTransferStoreService) {}\n  readonly id = generateId();\n  /**\n   * success image path\n   */\n  @Input() successImg: string | undefined;\n  /**\n   * success image path for reduced motion\n   */\n  @Input() successImgNoMotion: string | undefined;\n  /**\n   * unique time to reload animated svg everytime\n   */\n  readonly timestamp = new Date().getTime();\n  /**\n   * Stream of transfer amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.amount$;\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.toPayee$;\n  /**\n   * Stream of paymentOrderCallState\n   */\n  readonly paymentOrderCallState$: Observable<CallState> = this.store.paymentOrderCallState$.pipe(\n    map(state => {\n      if ((state as ErrorState).error) {\n        const error = (state as ErrorState).error;\n        const cancelTransactionSigningMessage = `Your Transfer Has Been Cancelled.`;\n        const defaultErrorMessage = `Oops, something went wrong!`;\n        const transactionSigningCancelErrorText = 'rejected_by_user';\n        const message =\n          error.statusText === transactionSigningCancelErrorText\n            ? $localize`:@@quick-transfer.cancel-transaction-signing.fail-message:${cancelTransactionSigningMessage}`\n            : $localize`:@@quick-transfer.complete.fail-message:${defaultErrorMessage}`;\n\n        return { ...error, message };\n      }\n      return state;\n    }),\n  );\n  /**\n   * Enum for loadingstate\n   */\n  readonly loadingstate = LoadingState;\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n\n  @ViewChild('done') doneButton!: ElementRef;\n\n  ngAfterViewInit() {\n    this.doneButton.nativeElement.focus();\n  }\n  /**\n   * Method to call resetWidget\n   */\n  restart() {\n    this.store.reset(FROM_ACCOUNT);\n  }\n  /**\n   * Method to get back to form for trying transfer again\n   */\n  tryAgain() {\n    this.store.setView(ViewState.FORM, FROM_ACCOUNT);\n  }\n}\n","<div class=\"bb-quick-transfer__complete\">\n  <ng-container *ngIf=\"(paymentOrderCallState$ | async) === loadingstate.LOADED; else paymentOrderFail\">\n    <div\n      role=\"dialog\"\n      attr.aria-describedby=\"payment-success-img-{{ id }} payment-success-title-{{ id }} payment-success-description-{{\n        id\n      }}\"\n    >\n      <div class=\"bb-text-align-right bb-block\">\n        <button\n          bbButton\n          color=\"unstyled\"\n          class=\"btn-unstyled--focusable\"\n          (click)=\"restart()\"\n          data-role=\"clear-icon-button\"\n          aria-label=\"close transfer\"\n          i18-aria-label=\"Close transfer|Text for close transfer@@quick-transfer.complete.close.button\"\n        >\n          <bb-icon-ui name=\"clear\" size=\"lg\"></bb-icon-ui>\n        </button>\n      </div>\n      <div class=\"bb-text-align-center flex-fill bb-block bb-block--lg\">\n        <picture>\n          <source srcset=\"{{ successImgNoMotion }}\" media=\"(prefers-reduced-motion: reduce)\" />\n          <img\n            id=\"payment-success-img-{{ id }}\"\n            srcset=\"{{ successImg + '?' + timestamp }}\"\n            alt=\"Transfer succeeded!\"\n            i18n-alt=\"Transfer succeeded|Text for transfer succeeded@@quick-transfer.complete.transfer-succeeded\"\n            data-role=\"transfer-success-anim\"\n            class=\"img-fluid\"\n          />\n        </picture>\n        <bb-header-ui\n          id=\"payment-success-title-{{ id }}\"\n          headingClasses=\"bb-text-semi-bold h5\"\n          headingType=\"h3\"\n          heading=\"Well done!\"\n          i18n-heading=\"Well Done!|Text for well done@@quick-transfer.complete.well-done\"\n        ></bb-header-ui>\n        <span\n          class=\"bb-text-support bb-subtitle\"\n          *ngIf=\"amount$ | async as amount\"\n          id=\"payment-success-description-{{ id }}\"\n          ><span i18n=\"Success Transfer|Text for success transfer@@quick-transfer.complete.success-message\"\n            >You just transferred\n          </span>\n          <bb-amount-ui\n            [currency]=\"amount.currency\"\n            [amount]=\"amount.amount\"\n            [mapCurrency]=\"config?.uiComponentProps.mapCurrency\"\n            [showPlusSign]=\"false\"\n          ></bb-amount-ui>\n          <span i18n=\"Transfer To|Text for success transfer to@@quick-transfer.complete.success-message-to\"> to </span>\n          <ng-container *ngIf=\"toPayee$ | async as toPayee\"\n            ><span>{{ toPayee.name }}.</span></ng-container\n          >\n        </span>\n      </div>\n      <div class=\"bb-text-align-center bb-block bb-block--sm\">\n        <button\n          bbButton\n          color=\"secondary\"\n          (click)=\"restart()\"\n          i18n=\"Done button|Transfer Done@@quick-transfer.complete.button.transfer-done\"\n          data-role=\"transfer-done\"\n          #done\n        >\n          Done\n        </button>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<ng-template #paymentOrderFail>\n  <div role=\"dialog\" attr.aria-describedby=\"payment-error-title-{{ id }} payment-error-description-{{ id }}\">\n    <div class=\"bb-text-align-right bb-block bb-block--xl\">\n      <button\n        bbButton\n        color=\"unstyled\"\n        (click)=\"tryAgain()\"\n        data-role=\"clear-icon-button\"\n        aria-label=\"close transfer\"\n        i18-aria-label=\"Close transfer|Text for close transfer@@quick-transfer.complete.close.button\"\n      >\n        <bb-icon-ui name=\"clear\" size=\"lg\"></bb-icon-ui>\n      </button>\n    </div>\n    <div\n      class=\"bb-text-align-center flex-fill bb-block bb-block--xl\"\n      data-role=\"transfer-fail-message\"\n      *ngIf=\"paymentOrderCallState$ | async as errorState\"\n    >\n      <bb-icon-ui\n        color=\"danger\"\n        class=\"bb-quick-transfer__fail-icon bb-block bb-block--md\"\n        name=\"error-outline\"\n        size=\"xxl\"\n        data-role=\"complete-error-outline\"\n      ></bb-icon-ui>\n\n      <bb-header-ui\n        id=\"payment-error-title-{{ id }}\"\n        headingClasses=\"bb-text-semi-bold h5\"\n        headingType=\"h3\"\n        [heading]=\"errorState.message\"\n      ></bb-header-ui>\n      <span\n        id=\"payment-error-description-{{ id }}\"\n        class=\"bb-text-support bb-subtitle\"\n        i18n=\"Transfer Failed Sub-Message|Extra Text for the failed transfer@@quick-transfer.complete.fail-sub.message\"\n        >Our system was unable to process your transfer at the moment.</span\n      >\n    </div>\n    <div class=\"bb-text-align-center bb-block bb-block--sm\">\n      <button\n        bbButton\n        color=\"secondary\"\n        i18n=\"Try again button|Transfer Fail@@quick-transfer.complete.button.try-again\"\n        data-role=\"transfer-try-again-button\"\n        (click)=\"tryAgain()\"\n        #done\n      >\n        Try again\n      </button>\n    </div>\n  </div>\n</ng-template>\n"]}