{"version":3,"file":"quick-transfer-from-account.component.js","sourceRoot":"","sources":["../../../../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-from-account/quick-transfer-from-account.component.ts","../../../../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-from-account/quick-transfer-from-account.component.html"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, pluck, take, withLatestFrom } from 'rxjs/operators';\nimport { FROM_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferProductKinds as ProductKinds } from '../../models/config.model';\nimport { AccountItem, Arrangement, ExternalAccount } from '../../models/items.model';\nimport { LoadingState } from '../../models/state.model';\nimport { Location, ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { filterByDisabledCombinations } from '../../utils/arrangement-filter';\nimport { BaseAccountSelectorComponent } from '../account-selector-base/account-selector-base.component';\n\n@Component({\n  selector: 'bb-quick-transfer-from-account-ui',\n  templateUrl: './quick-transfer-from-account.component.html',\n  providers: [QuickTransferStoreService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferFromAccountComponent extends BaseAccountSelectorComponent implements OnInit, AfterViewInit {\n  constructor(readonly store: QuickTransferStoreService) {\n    super(store);\n  }\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccountId$: Observable<string | undefined> = this.store.fromAccount$.pipe(\n    filter(Boolean),\n    pluck('uuid'),\n  );\n  /**\n   * Stream of toPayee\n   */\n  readonly selectedToPayee$: Observable<AccountItem | undefined> = this.store.toPayee$.pipe(take(1));\n\n  /**\n   * Selector of the to account button to be focused\n   */\n  fromAccountSelector = FROM_ACCOUNT;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n\n  @ViewChild('back') backbutton!: ElementRef;\n\n  ngAfterViewInit() {\n    this.backbutton.nativeElement.focus({ preventScroll: true });\n  }\n\n  /**\n   * Method to handle selecting from account\n   *\n   * @param id\n   */\n  handleSelectFrom(id: string) {\n    this.store.selectFromAccount(id);\n  }\n\n  /**\n   * If not yet called the accounts API call it\n   */\n  ngOnInit() {\n    const { fields, disabledCombinations } = this.config || {};\n    const { productKinds } = fields?.fromAccount || {};\n\n    combineLatest([this.extAccountsCallState$, this.accountsCallState$])\n      .pipe(take(1))\n      .subscribe(([extAccountsState, accountsState]) => {\n        if (extAccountsState === LoadingState.INIT && productKinds?.includes(ProductKinds.connectedAccounts)) {\n          this.getExtAccounts();\n        }\n        if (accountsState === LoadingState.INIT) this.getAccounts();\n      });\n\n    this.accounts$ = this.store.debitAccounts$.pipe(\n      take(1),\n      withLatestFrom(this.selectedToPayee$.pipe(take(1))),\n      map(\n        ([accounts, toPayee]) =>\n          filterByDisabledCombinations(accounts, toPayee, disabledCombinations, Location.FROM) as Arrangement[],\n      ),\n    );\n\n    this.extAccounts$ = this.store.extAccounts$.pipe(\n      withLatestFrom(this.selectedToPayee$.pipe(take(1))),\n      map(\n        ([accounts, toPayee]) =>\n          filterByDisabledCombinations(accounts, toPayee, disabledCombinations, Location.FROM) as ExternalAccount[],\n      ),\n    );\n  }\n}\n","<div class=\"bb-quick-transfer__view\">\n  <div class=\"bb-quick-transfer__heading bb-stack bb-quick-transfer__heading--border\" data-role=\"from-account-header\">\n    <button\n      (click)=\"backToForm(fromAccountSelector)\"\n      bbButton\n      aria-label=\"back to form\"\n      i18-aria-label=\"Back button|Quick transfer back button@@quick-transfer.fromaccount.back.button\"\n      color=\"unstyled\"\n      class=\"bb-stack__item btn-unstyled--focusable bb-block bb-block--lg\"\n      #back\n    >\n      <bb-icon-ui name=\"arrow-back\"></bb-icon-ui>\n    </button>\n    <bb-header-ui\n      class=\"bb-stack__item\"\n      headingClasses=\"h3 bb-block bb-block--lg\"\n      [heading]=\"config?.titles?.[viewState.FROM]\"\n      headingType=\"h2\"\n    ></bb-header-ui>\n  </div>\n  <div class=\"bb-quick-transfer__tabs-content scrollable-box-content\" data-role=\"from-account\">\n    <ng-container\n      *ngIf=\"{ internal: accountsCallState$ | async, external: extAccountsCallState$ | async } as callStates\"\n    >\n      <ng-container *ngIf=\"callStates.internal && callStates.external\">\n        <ng-container [ngSwitch]=\"true\">\n          <ng-container\n            *ngSwitchCase=\"callStates.internal === loadingstate.LOADING && callStates.external === loadingstate.LOADING\"\n          >\n            <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"!!callStates.internal['error'] && !!callStates.external['error']\">\n            <ng-container *ngTemplateOutlet=\"errorCase\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <ng-container *ngIf=\"callStates.internal !== loadingstate.LOADING; else loadingState\">\n              <ng-container *ngIf=\"callStates.internal === loadingstate.LOADED\">\n                <div *ngIf=\"accounts$ | async as accounts\">\n                  <bb-quick-transfer-accounts-ui\n                    data-role=\"internal-accounts\"\n                    [arrangements]=\"accounts\"\n                    (select)=\"handleSelectFrom($event)\"\n                    [selected]=\"fromAccountId$ | async\"\n                    [selectedCounterPartyAccount]=\"(selectedToPayee$ | async)?.uuid\"\n                    [config]=\"config\"\n                  ></bb-quick-transfer-accounts-ui>\n                </div>\n              </ng-container>\n              <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.internal['error']\">\n                <bb-icon-ui\n                  name=\"error-outline\"\n                  size=\"md\"\n                  class=\"bb-stack__item bb-stack__item--align-top\"\n                ></bb-icon-ui>\n                <div class=\"bb-subtitle\">\n                  <span i18n=\"Fetch accounts error|Fetch accounts error@@quick-transfer.fetch-accounts.error-message\">\n                    We could not retrieve data for your internal accounts.</span\n                  >\n                  <br />\n                  <button\n                    bbButton\n                    color=\"link-text\"\n                    data-role=\"reload-accounts\"\n                    (click)=\"getAccounts()\"\n                    i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                  >\n                    Reload\n                  </button>\n                </div>\n              </div>\n            </ng-container>\n\n            <div *ngIf=\"callStates.external !== loadingstate.LOADED || (extAccounts$ | async) as extAccounts\">\n              <h3\n                class=\"bb-subheader bb-text-support bb-quick-transfer__subheader bb-block bb-block--no-margin bb-inline-stack h4\"\n                *ngIf=\"\n                  (extAccounts.length || callStates.external !== loadingstate.LOADED) &&\n                  config?.fields?.fromAccount?.connectedAccountsSubHeader as subHeader\n                \"\n              >\n                <bb-icon-ui name=\"insert-link\" cropped class=\"bb-inline-stack__item--spacing-sm\"></bb-icon-ui>\n                <span\n                  data-role=\"external-accounts-header\"\n                  i18n=\"\n                    Account type subheader|Quick transfer 'connected accounts' type\n                    subheader@@quick-transfer.from.account-type-subheader\"\n                >\n                  {{ subHeader }}\n                </span>\n              </h3>\n              <ng-container *ngIf=\"callStates.external !== loadingstate.LOADING; else loadingState\">\n                <bb-quick-transfer-accounts-ui\n                  data-role=\"external-accounts\"\n                  *ngIf=\"callStates.external === loadingstate.LOADED\"\n                  [arrangements]=\"extAccounts\"\n                  (select)=\"handleSelectFrom($event)\"\n                  [selected]=\"fromAccountId$ | async\"\n                  [config]=\"config\"\n                ></bb-quick-transfer-accounts-ui>\n                <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.external['error']\">\n                  <bb-icon-ui\n                    name=\"error-outline\"\n                    size=\"md\"\n                    class=\"bb-stack__item bb-stack__item--align-top\"\n                  ></bb-icon-ui>\n                  <div class=\"bb-subtitle\">\n                    <span\n                      i18n=\"\n                        Fetch external accounts error|Fetch external accounts\n                        error@@quick-transfer.fetch-external-accounts.error-message\"\n                    >\n                      We could not retrieve data for your external accounts.</span\n                    >\n                    <br />\n                    <button\n                      bbButton\n                      color=\"link-text\"\n                      data-role=\"reload-accounts\"\n                      (click)=\"getExtAccounts()\"\n                      i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                    >\n                      Reload\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n            </div>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #loadingState let-size=\"$implicit\">\n  <div class=\"bb-loading-indicator\">\n    <bb-loading-indicator-ui [loaderSize]=\"size || 'sm'\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n<ng-template #errorCase>\n  <div class=\"bb-quick-transfer__heading\">\n    <div class=\"bb-state-container\" data-role=\"double-error-state\">\n      <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n      <bb-empty-state-ui\n        title=\"No data retrieved\"\n        class=\"bb-block bb-block--md\"\n        iconClasses=\"\"\n        iconSize=\"xxl\"\n        message=\"We could not retrieve data for your accounts.\"\n        i18n-message=\"Could not retrieve data|Fetch accounts error@@quick-transfer.fetch-data.error-message\"\n        iconModifier=\"error-outline\"\n      ></bb-empty-state-ui>\n      <button\n        bbButton\n        buttonSize=\"sm\"\n        color=\"primary\"\n        (click)=\"getAccounts(); getExtAccounts()\"\n        data-role=\"reload-accounts\"\n        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n      >\n        Reload\n      </button>\n    </div>\n  </div>\n</ng-template>\n"]}