{"version":3,"file":"quick-transfer-to-account.component.js","sourceRoot":"","sources":["../../../../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-to-account/quick-transfer-to-account.component.ts","../../../../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-to-account/quick-transfer-to-account.component.html"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { tabsAnim } from '@backbase/ui-ang/util';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, pluck, take, withLatestFrom } from 'rxjs/operators';\nimport { TO_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferProductKinds as ProductKinds } from '../../models/config.model';\nimport { AccountItem, Contact, ExternalAccount } from '../../models/items.model';\nimport { CallState, LoadingState } from '../../models/state.model';\nimport { Location, ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { filterByDisabledCombinations } from '../../utils/arrangement-filter';\nimport { BaseAccountSelectorComponent } from '../account-selector-base/account-selector-base.component';\n\n@Component({\n  selector: 'bb-quick-transfer-to-account-ui',\n  templateUrl: './quick-transfer-to-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [tabsAnim],\n})\nexport class QuickTransferToAccountComponent extends BaseAccountSelectorComponent implements OnInit, AfterViewInit {\n  /**\n   * Show My Accounts or Contacts tabs, It is My Accounts by default\n   */\n  selectedTab = 0;\n  /**\n   * Stream of contacts\n   */\n  readonly contacts$: Observable<Contact[] | undefined> = this.store.contacts$;\n  /**\n   * Stream of toPayee\n   */\n  readonly selectedToPayeeId$: Observable<string> = this.store.toPayee$.pipe(filter(Boolean), pluck('uuid'));\n  /**\n   * Stream of fromAccount\n   */\n  readonly selectedFromAccount$: Observable<AccountItem | undefined> = this.store.fromAccount$.pipe(take(1));\n  /**\n   * Stream of contactsCallState\n   */\n  readonly contactsCallState$: Observable<CallState | undefined> = this.store.contactsCallState$;\n  /**\n   * Stream to indicate if contacts are going to be rendered\n   */\n  renderContacts$ = this.selectedFromAccount$.pipe(\n    map(account => {\n      const { toAccount } = this.config?.fields || {};\n      const { connectedAccounts, contacts } = ProductKinds;\n      const isCounterPartyConnectedAccount = account?.productKindName === connectedAccounts;\n      const isContactsSetInConfig = toAccount?.productKinds ? toAccount?.productKinds.includes(contacts) : true;\n      return !isCounterPartyConnectedAccount && isContactsSetInConfig;\n    }),\n  );\n  /**\n   * Selector of the to account button to be focused\n   */\n  toAccountSelector = TO_ACCOUNT;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n\n  @ViewChild('back') backbutton!: ElementRef;\n\n  constructor(readonly store: QuickTransferStoreService) {\n    super(store);\n  }\n  /**\n   * If not yet called the contacts, accounts and external accounts API call it\n   */\n  ngOnInit() {\n    const { fields, disabledCombinations } = this.config || {};\n    const { productKinds } = fields?.toAccount || {};\n\n    combineLatest([this.extAccountsCallState$, this.accountsCallState$])\n      .pipe(take(1))\n      .subscribe(([extAccountsState, accountsState]) => {\n        if (extAccountsState === LoadingState.INIT && productKinds?.includes(ProductKinds.connectedAccounts)) {\n          this.getExtAccounts();\n        }\n        if (accountsState === LoadingState.INIT) this.getAccounts();\n      });\n\n    this.accounts$ = this.store.creditAccounts$.pipe(\n      take(1),\n      withLatestFrom(this.selectedFromAccount$),\n      map(([accounts, fromAccount]) =>\n        filterByDisabledCombinations(accounts, fromAccount, disabledCombinations, Location.TO),\n      ),\n    );\n\n    this.extAccounts$ = this.store.extAccounts$.pipe(\n      withLatestFrom(this.selectedFromAccount$),\n      map(\n        ([accounts, fromAccount]) =>\n          filterByDisabledCombinations(accounts, fromAccount, disabledCombinations, Location.TO) as ExternalAccount[],\n      ),\n    );\n  }\n\n  ngAfterViewInit() {\n    this.backbutton.nativeElement.focus({ preventScroll: true });\n  }\n\n  /**\n   * Method to switch tabs\n   *\n   * @param ev\n   */\n  onTabSelect(ev: number) {\n    this.selectedTab = ev;\n    if (ev === 1) {\n      this.contactsCallState$\n        .pipe(\n          take(1),\n          filter(s => s === LoadingState.INIT),\n        )\n        .subscribe(() => {\n          this.getContacts();\n        });\n    }\n  }\n  /**\n   * Method to set payee\n   *\n   * @param id\n   */\n  pickPayee(id: string) {\n    this.store.setPayee(id);\n  }\n  /**\n   * Method to dispatch store action for fetching contacts\n   */\n  getContacts() {\n    this.store.fetchContacts();\n  }\n}\n","<div class=\"bb-quick-transfer__view\">\n  <div\n    class=\"bb-quick-transfer__heading bb-stack\"\n    [class.bb-quick-transfer__heading--border]=\"!(renderContacts$ | async)\"\n    data-role=\"to-account-header\"\n  >\n    <button\n      (click)=\"backToForm(toAccountSelector)\"\n      bbButton\n      aria-label=\"back to form\"\n      i18-aria-label=\"Back button|Quick transfer back button@@quick-transfer.to-account.back.button\"\n      color=\"unstyled\"\n      class=\"bb-stack__item btn-unstyled--focusable bb-block bb-block--xs\"\n      [class.bb-stack__item--align-top]=\"!(renderContacts$ | async)\"\n      #back\n    >\n      <bb-icon-ui name=\"arrow-back\"></bb-icon-ui>\n    </button>\n    <bb-header-ui\n      class=\"bb-stack__item\"\n      headingClasses=\"bb-block bb-block--{{ (renderContacts$ | async) ? 'sm' : 'lg' }} h3\"\n      [heading]=\"config?.titles?.[viewState.PAYEE]\"\n      headingType=\"h2\"\n    ></bb-header-ui>\n  </div>\n  <div class=\"bb-quick-transfer__tabs-container\">\n    <bb-tab-group-ui *ngIf=\"renderContacts$ | async\" [initialSelection]=\"0\" (select)=\"onTabSelect($event)\">\n      <bb-tab-ui\n        data-role=\"account-tab-header\"\n        i18n=\"Tab header for to-accounts|Quick transfer 'my accounts' tab header@@quick-transfer.to.tabs.account-header\"\n        >My Accounts</bb-tab-ui\n      >\n      <bb-tab-ui\n        data-role=\"contacts-tab-header\"\n        i18n=\"Tab header for to-contacts|Quick transfer 'contacts' tab header@@quick-transfer.to.tabs.contact-header\"\n        >Contacts</bb-tab-ui\n      >\n    </bb-tab-group-ui>\n    <div class=\"bb-quick-transfer__tabs-content scrollable-box-content\" [@tabsAnimation]=\"selectedTab\">\n      <div *ngIf=\"selectedTab === 0\" data-role=\"quick-transfer-accounts-tab\">\n        <ng-container\n          *ngIf=\"{ internal: accountsCallState$ | async, external: extAccountsCallState$ | async } as callStates\"\n        >\n          <ng-container *ngIf=\"callStates.internal && callStates.external\">\n            <ng-container [ngSwitch]=\"true\">\n              <ng-container\n                *ngSwitchCase=\"\n                  callStates.internal === loadingstate.LOADING && callStates.external === loadingstate.LOADING\n                \"\n              >\n                <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"!!callStates.internal['error'] && !!callStates.external['error']\">\n                <ng-container *ngTemplateOutlet=\"errorCase\"></ng-container>\n              </ng-container>\n              <ng-container *ngSwitchDefault>\n                <ng-container *ngIf=\"callStates.internal !== loadingstate.LOADING; else loadingState\">\n                  <ng-container *ngIf=\"callStates.internal === loadingstate.LOADED\">\n                    <div *ngIf=\"accounts$ | async as accounts\">\n                      <bb-quick-transfer-accounts-ui\n                        data-role=\"internal-accounts\"\n                        [arrangements]=\"accounts\"\n                        (select)=\"pickPayee($event)\"\n                        [selected]=\"selectedToPayeeId$ | async\"\n                        [selectedCounterPartyAccount]=\"(selectedFromAccount$ | async)?.uuid\"\n                        [config]=\"config\"\n                      ></bb-quick-transfer-accounts-ui>\n                    </div>\n                  </ng-container>\n                  <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.internal['error']\">\n                    <bb-icon-ui\n                      name=\"error-outline\"\n                      size=\"md\"\n                      class=\"bb-stack__item bb-stack__item--align-top\"\n                    ></bb-icon-ui>\n                    <div class=\"bb-subtitle\">\n                      <span\n                        i18n=\"Fetch accounts error|Fetch accounts error@@quick-transfer.fetch-accounts.error-message\"\n                      >\n                        We could not retrieve data for your internal accounts.</span\n                      >\n                      <br />\n                      <button\n                        bbButton\n                        color=\"link-text\"\n                        data-role=\"reload-accounts\"\n                        (click)=\"getAccounts()\"\n                        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                      >\n                        Reload\n                      </button>\n                    </div>\n                  </div>\n                </ng-container>\n\n                <div *ngIf=\"callStates.external !== loadingstate.LOADED || (extAccounts$ | async) as extAccounts\">\n                  <h3\n                    class=\"bb-subheader bb-text-support bb-quick-transfer__subheader bb-block bb-block--no-margin bb-inline-stack\"\n                    *ngIf=\"\n                      (extAccounts.length || callStates.external !== loadingstate.LOADED) &&\n                      config?.fields?.toAccount?.connectedAccountsSubHeader as subHeader\n                    \"\n                  >\n                    <bb-icon-ui name=\"insert-link\" cropped class=\"bb-inline-stack__item--spacing-sm\"></bb-icon-ui>\n                    <span\n                      data-role=\"external-accounts-header\"\n                      i18n=\"\n                        Account type subheader|Quick transfer 'connected accounts' type\n                        subheader@@quick-transfer.to.account-type-subheader\"\n                    >\n                      {{ subHeader }}\n                    </span>\n                  </h3>\n                  <ng-container *ngIf=\"callStates.external !== loadingstate.LOADING; else loadingState\">\n                    <bb-quick-transfer-accounts-ui\n                      data-role=\"external-accounts\"\n                      *ngIf=\"callStates.external === loadingstate.LOADED\"\n                      [arrangements]=\"extAccounts\"\n                      (select)=\"pickPayee($event)\"\n                      [selected]=\"selectedToPayeeId$ | async\"\n                      [config]=\"config\"\n                    ></bb-quick-transfer-accounts-ui>\n                    <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.external['error']\">\n                      <bb-icon-ui\n                        name=\"error-outline\"\n                        size=\"md\"\n                        class=\"bb-stack__item bb-stack__item--align-top\"\n                      ></bb-icon-ui>\n                      <div class=\"bb-subtitle\">\n                        <span\n                          i18n=\"\n                            Fetch external accounts error|Fetch external accounts\n                            error@@quick-transfer.fetch-external-accounts.error-message\"\n                        >\n                          We could not retrieve data for your external accounts.</span\n                        >\n                        <br />\n                        <button\n                          bbButton\n                          color=\"link-text\"\n                          data-role=\"reload-accounts\"\n                          (click)=\"getExtAccounts()\"\n                          i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                        >\n                          Reload\n                        </button>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div *ngIf=\"selectedTab === 1\" data-role=\"quick-transfer-contacts-tab\">\n        <ng-container *ngIf=\"contactsCallState$ | async as contactsCallState\">\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"contactsCallState === loadingstate.LOADED\">\n              <div *ngIf=\"contacts$ | async as contacts\">\n                <bb-quick-transfer-accounts-ui\n                  [arrangements]=\"contacts\"\n                  (select)=\"pickPayee($event)\"\n                  [selected]=\"selectedToPayeeId$ | async\"\n                  [config]=\"config\"\n                ></bb-quick-transfer-accounts-ui>\n              </div>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"contactsCallState === loadingstate.LOADING\">\n              <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"!!contactsCallState.error\">\n              <div class=\"bb-quick-transfer__heading\">\n                <div class=\"bb-state-container\" data-role=\"contacts-error-state\">\n                  <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n                  <bb-empty-state-ui\n                    title=\"No data retrieved\"\n                    class=\"bb-block bb-block--md\"\n                    iconClasses=\"\"\n                    iconSize=\"xxl\"\n                    message=\"We could not retrieve data for your contacts.\"\n                    i18n-message=\"\n                      Could not retrieve contacts|Fetch contacts error@@quick-transfer.fetch-contacts.error-message\"\n                    iconModifier=\"error-outline\"\n                  ></bb-empty-state-ui>\n                  <button\n                    bbButton\n                    buttonSize=\"sm\"\n                    color=\"primary\"\n                    (click)=\"getContacts()\"\n                    data-role=\"reload-accounts\"\n                    i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                  >\n                    Reload\n                  </button>\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #loadingState let-size=\"$implicit\">\n  <div class=\"bb-loading-indicator\">\n    <bb-loading-indicator-ui [loaderSize]=\"size || 'sm'\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n<ng-template #errorCase>\n  <div class=\"bb-quick-transfer__heading\">\n    <div class=\"bb-state-container\" data-role=\"double-error-state\">\n      <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n      <bb-empty-state-ui\n        title=\"No data retrieved\"\n        class=\"bb-block bb-block--md\"\n        iconClasses=\"\"\n        message=\"We could not retrieve data for your accounts.\"\n        i18n-message=\"Could not retrieve data|Fetch accounts error@@quick-transfer.fetch-data.error-message\"\n        iconModifier=\"error-outline\"\n      ></bb-empty-state-ui>\n      <button\n        bbButton\n        buttonSize=\"sm\"\n        color=\"primary\"\n        (click)=\"getAccounts(); getExtAccounts()\"\n        data-role=\"reload-accounts\"\n        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n      >\n        Reload\n      </button>\n    </div>\n  </div>\n</ng-template>\n"]}