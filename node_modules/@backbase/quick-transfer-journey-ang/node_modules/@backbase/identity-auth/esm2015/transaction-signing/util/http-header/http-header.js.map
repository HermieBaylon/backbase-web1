{"version":3,"file":"http-header.js","sourceRoot":"","sources":["../../../../../../../libs/identity-auth/transaction-signing/util/http-header/http-header.ts"],"names":[],"mappings":"AAEA,SAAS,0BAA0B,CAAC,OAAoB,EAAE,IAAY;IACpE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,CAAC;IAC3E,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,SAAS,CAAC;AAC5D,CAAC;AAED,MAAM,UAAU,wBAAwB,CACtC,QAA0B,EAC1B,MAAc,EACd,SAAiB,EACjB,WAAmB;IAEnB,MAAM,eAAe,GAAG,0BAA0B,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAChF,OAAO,QAAQ,CAAC,MAAM,KAAK,MAAM,IAAI,eAAe,KAAK,WAAW,CAAC;AACvE,CAAC","sourcesContent":["import { HttpHeaders, HttpResponseBase } from '@angular/common/http';\n\nfunction getHttpHeaderValueWithName(headers: HttpHeaders, name: string): string | undefined {\n  const headerKey = headers.keys().find((key) => key.toLowerCase() === name);\n  return (headerKey && headers.get(headerKey)) || undefined;\n}\n\nexport function hasStatusWithHeaderValue(\n  response: HttpResponseBase,\n  status: number,\n  headerKey: string,\n  headerValue: string,\n) {\n  const authHeaderValue = getHttpHeaderValueWithName(response.headers, headerKey);\n  return response.status === status && authHeaderValue === headerValue;\n}\n"]}