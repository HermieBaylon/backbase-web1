import { CommonModule } from '@angular/common';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { AlertModule } from '@backbase/ui-ang/alert';
import { AmountModule } from '@backbase/ui-ang/amount';
import { ButtonModule } from '@backbase/ui-ang/button';
import { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import { HeaderModule } from '@backbase/ui-ang/header';
import { IconModule } from '@backbase/ui-ang/icon';
import { InputTextModule } from '@backbase/ui-ang/input-text';
import { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { ModalModule } from '@backbase/ui-ang/modal';
import { ProgressbarModule } from '@backbase/ui-ang/progressbar';
import { TransactionSigningComponent } from './feature/transaction-signing.component';
import { TransactionSigningInterceptor } from './interceptor/transaction-signing.interceptor';
import { TransactionSigningService } from './service/transaction-signing.service';
import { TransactionSigningActionPendingComponent, TransactionSigningErrorComponent, TransactionSigningHardTokenComponent, TransactionSigningHeaderComponent, TransactionSigningInterfaceComponent, TransactionSigningOobDeviceComponent, TransactionSigningOobSelectDeviceComponent, TransactionSigningSmsOtpComponent, } from './ui';
import { TransactionAmountPipe, TRANSACTION_SIGNING_CONFIG } from './util';
import * as i0 from "@angular/core";
const tsDefaults = {
    useRedirectFlow: false,
    pollingCycleTime: 3000,
    enableResendPushNotification: false,
};
const providers = [
    TransactionSigningService,
    {
        provide: HTTP_INTERCEPTORS,
        useClass: TransactionSigningInterceptor,
        multi: true,
    },
];
const defaultConfigProviders = [
    {
        provide: TRANSACTION_SIGNING_CONFIG,
        useValue: tsDefaults,
    },
];
const uiComponents = [
    ModalModule,
    HeaderModule,
    ButtonModule,
    ReactiveFormsModule,
    AmountModule,
    InputTextModule,
    InputValidationMessageModule,
    LoadingIndicatorModule,
    EmptyStateModule,
    AlertModule,
    IconModule,
    ProgressbarModule,
    DropdownSingleSelectModule,
];
const components = [
    TransactionSigningComponent,
    TransactionSigningErrorComponent,
    TransactionSigningInterfaceComponent,
    TransactionSigningActionPendingComponent,
    TransactionSigningHeaderComponent,
    TransactionSigningHardTokenComponent,
    TransactionSigningOobDeviceComponent,
    TransactionSigningOobSelectDeviceComponent,
    TransactionSigningSmsOtpComponent,
    TransactionAmountPipe,
];
/**
 * Module used to initialize Transaction Signing with a configuration
 */
export class TransactionSigningModule {
    /**
     * Creates a configured TransactionSigningModule.
     *
     * This should be called only once per app.
     *
     * @usageNotes
     *
     * ### Example
     *
     * ```
     * @NgModule({
     *   imports: [
     *     TransactionSigningModule.withConfig({
     *        useRedirectFlow: true,
     *        pollingCycleTime: 5000,
     *        enableResendPushNotification: true,
     *     })
     *   ]
     * })
     * class AppModule {}
     * ```
     */
    static withConfig(config) {
        return {
            ngModule: TransactionSigningModule,
            providers: [
                {
                    provide: TRANSACTION_SIGNING_CONFIG,
                    useValue: Object.assign(Object.assign({}, tsDefaults), config),
                },
                ...providers,
            ],
        };
    }
}
/** @nocollapse */ TransactionSigningModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ TransactionSigningModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningModule, declarations: [TransactionSigningComponent,
        TransactionSigningErrorComponent,
        TransactionSigningInterfaceComponent,
        TransactionSigningActionPendingComponent,
        TransactionSigningHeaderComponent,
        TransactionSigningHardTokenComponent,
        TransactionSigningOobDeviceComponent,
        TransactionSigningOobSelectDeviceComponent,
        TransactionSigningSmsOtpComponent,
        TransactionAmountPipe], imports: [CommonModule, ModalModule,
        HeaderModule,
        ButtonModule,
        ReactiveFormsModule,
        AmountModule,
        InputTextModule,
        InputValidationMessageModule,
        LoadingIndicatorModule,
        EmptyStateModule,
        AlertModule,
        IconModule,
        ProgressbarModule,
        DropdownSingleSelectModule], exports: [TransactionSigningComponent] });
/** @nocollapse */ TransactionSigningModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningModule, providers: [...providers, ...defaultConfigProviders], imports: [[CommonModule, ...uiComponents]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...uiComponents],
                    declarations: [...components],
                    providers: [...providers, ...defaultConfigProviders],
                    exports: [TransactionSigningComponent],
                }]
        }] });
//# sourceMappingURL=transaction-signing.module.js.map