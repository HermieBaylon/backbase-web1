import { Injectable } from '@angular/core';
import { catchError } from 'rxjs/operators';
import { TransactionSigningService } from '../service/transaction-signing.service';
import * as i0 from "@angular/core";
import * as i1 from "../service/transaction-signing.service";
/**
 * Interceptor used to check for reauthentication errors
 */
export class TransactionSigningInterceptor {
    constructor(transactionSigningService) {
        this.transactionSigningService = transactionSigningService;
    }
    intercept(request, next) {
        return next
            .handle(request)
            .pipe(catchError((error) => this.transactionSigningService.initiateTransactionSigning(error)));
    }
}
/** @nocollapse */ TransactionSigningInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningInterceptor, deps: [{ token: i1.TransactionSigningService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ TransactionSigningInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningInterceptor });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TransactionSigningInterceptor, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.TransactionSigningService }]; } });
//# sourceMappingURL=transaction-signing.interceptor.js.map