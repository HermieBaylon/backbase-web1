{"version":3,"file":"interface.component.js","sourceRoot":"","sources":["../../../../../../../libs/identity-auth/transaction-signing/ui/interface/interface.component.ts","../../../../../../../libs/identity-auth/transaction-signing/ui/interface/interface.component.html"],"names":[],"mappings":"AAAA,iDAAiD;AACjD,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;AAShG,MAAM,OAAO,oCAAoC;IALjD;QAMY,YAAO,GAAG,IAAI,YAAY,EAAS,CAAC;QACpC,gBAAW,GAAG,IAAI,YAAY,EAAQ,CAAC;QACvC,SAAI,GAAG,IAAI,YAAY,EAAU,CAAC;QAClC,SAAI,GAAG,IAAI,YAAY,EAAU,CAAC;QAC5C;;WAEG;QACM,cAAS,GAAG,KAAK,CAAC;QAwClB,iBAAY,GAAoB;YACvC,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,QAAQ;SACnB,CAAC;KAGH;IAtBC;;OAEG;IACH,IAAI,aAAa;QACf,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAClD;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;IAED,IACI,aAAa,CAAC,OAAwB;QACxC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACvD,IAAI,CAAC,oBAAoB,mCAAQ,IAAI,CAAC,qBAAqB,GAAK,OAAO,CAAE,CAAC;IAC5E,CAAC;;qJA9CU,oCAAoC;yIAApC,oCAAoC,yZCVjD,0oFA6DA;4FDnDa,oCAAoC;kBALhD,SAAS;mBAAC;oBACT,QAAQ,EAAE,kCAAkC;oBAC5C,WAAW,EAAE,0BAA0B;oBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAEW,OAAO;sBAAhB,MAAM;gBACG,WAAW;sBAApB,MAAM;gBACG,IAAI;sBAAb,MAAM;gBACG,IAAI;sBAAb,MAAM;gBAIE,SAAS;sBAAjB,KAAK;gBAIG,KAAK;sBAAb,KAAK;gBAIG,eAAe;sBAAvB,KAAK;gBAIG,aAAa;sBAArB,KAAK;gBAKG,4BAA4B;sBAApC,KAAK;gBAKG,cAAc;sBAAtB,KAAK;gBAaF,aAAa;sBADhB,KAAK","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { CapabilityData, ChallengeError } from '../../util';\n\n@Component({\n  selector: 'bb-transaction-signing-interface',\n  templateUrl: 'interface.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionSigningInterfaceComponent {\n  @Output() failure = new EventEmitter<Error>();\n  @Output() postSuccess = new EventEmitter<void>();\n  @Output() poll = new EventEmitter<object>();\n  @Output() post = new EventEmitter<object>();\n  /**\n   * Whether a signing is pending.\n   */\n  @Input() isPending = false;\n  /**\n   * An error received during signing.\n   */\n  @Input() error: ChallengeError | undefined;\n  /**\n   * Data defining the transaction.\n   */\n  @Input() transactionData: CapabilityData | undefined;\n  /**\n   * The type of challenge.\n   */\n  @Input() challengeType: string | undefined;\n\n  /**\n   * Enable the resending of push notifications\n   */\n  @Input() enableResendPushNotification!: boolean;\n\n  /**\n   * An error received during authentication.\n   */\n  @Input() challengeError: ChallengeError | undefined;\n\n  /**\n   * The data involved in the challenge.\n   */\n  get challengeData() {\n    if (!this.currentChallengeData) {\n      throw new Error('No current challenge data set');\n    }\n    return this.currentChallengeData;\n  }\n\n  @Input()\n  set challengeData(newData: any | undefined) {\n    this.previousChallengeData = this.currentChallengeData;\n    this.currentChallengeData = { ...this.previousChallengeData, ...newData };\n  }\n\n  readonly modalOptions: NgbModalOptions = {\n    keyboard: false,\n    backdrop: 'static',\n  };\n  previousChallengeData: any | undefined;\n  private currentChallengeData: any | undefined;\n}\n","<bb-modal-ui [isOpen]=\"true\" [modalOptions]=\"modalOptions\">\n  <bb-modal-header-ui data-role=\"ts-modal\">\n    <ng-template bbCustomModalHeader>\n      <bb-transaction-signing-header [data]=\"transactionData\"></bb-transaction-signing-header>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <hr class=\"mt-0\" />\n      <bb-transaction-signing-action-pending *ngIf=\"isPending\"></bb-transaction-signing-action-pending>\n      <ng-container *ngIf=\"!isPending\">\n        <bb-transaction-signing-error\n          *ngIf=\"challengeError\"\n          [error]=\"challengeError\"\n          (closeModal)=\"failure.emit($event)\"\n        >\n        </bb-transaction-signing-error>\n        <bb-transaction-signing-hard-token\n          *ngIf=\"challengeType === 'hard-token-auth'\"\n          [data]=\"challengeData\"\n          [error]=\"error\"\n          (submitResponse)=\"post.emit($event)\"\n          (cancel)=\"post.emit({ responseType: 'confirmation-abort' })\"\n          (acceptError)=\"failure.emit($event)\"\n        >\n        </bb-transaction-signing-hard-token>\n        <bb-transaction-signing-oob-select-device\n          *ngIf=\"challengeType === 'oob-ts-select-device'\"\n          [data]=\"challengeData\"\n          [error]=\"error\"\n          (submitResponse)=\"post.emit($event)\"\n          (cancel)=\"post.emit({ responseType: 'confirmation-abort' })\"\n          (acceptError)=\"failure.emit($event)\"\n        >\n        </bb-transaction-signing-oob-select-device>\n        <bb-transaction-signing-oob-device\n          *ngIf=\"challengeType === 'oob-uaf-auth'\"\n          [data]=\"challengeData\"\n          [enableResendPushNotification]=\"enableResendPushNotification\"\n          [error]=\"error\"\n          (poll)=\"poll.emit({ responseType: 'system-poll' })\"\n          (cancel)=\"post.emit({ responseType: 'confirmation-abort' })\"\n          (acceptError)=\"failure.emit($event)\"\n          (resend)=\"post.emit({ responseType: 'pn-resend' })\"\n        >\n        </bb-transaction-signing-oob-device>\n        <bb-transaction-signing-sms-otp\n          *ngIf=\"challengeType === 'sms-otp-auth'\"\n          [data]=\"challengeData\"\n          [previousData]=\"previousChallengeData\"\n          [error]=\"error\"\n          (submitResponse)=\"post.emit($event)\"\n          (cancel)=\"post.emit({ responseType: 'confirmation-abort' })\"\n          (acceptError)=\"failure.emit($event)\"\n          (resend)=\"post.emit({ responseType: 'otp-resend' })\"\n        >\n        </bb-transaction-signing-sms-otp>\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>\n"]}