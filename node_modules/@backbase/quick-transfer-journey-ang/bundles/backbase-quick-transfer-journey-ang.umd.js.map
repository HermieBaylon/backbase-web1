{"version":3,"file":"backbase-quick-transfer-journey-ang.umd.js","sources":["../../../../libs/quick-transfer-journey/src/lib/communication.service.ts","../../../../libs/quick-transfer-journey/src/lib/models/state.model.ts","../../../../libs/quick-transfer-journey/src/lib/models/view.model.ts","../../../../libs/quick-transfer-journey/src/lib/store/actions.ts","../../../../libs/quick-transfer-journey/src/lib/constants/initital-state.ts","../../../../libs/quick-transfer-journey/src/lib/store/selectors.ts","../../../../libs/quick-transfer-journey/src/lib/store/store.service.ts","../../../../libs/quick-transfer-journey/src/lib/components/account-selector-base/account-selector-base.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-accounts/quick-transfer-accounts.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-accounts/quick-transfer-accounts.component.html","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/quick-transfer-journey/src/lib/constants/component-selectors.ts","../../../../libs/quick-transfer-journey/src/lib/utils/helpers.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-complete/quick-transfer-complete.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-complete/quick-transfer-complete.component.html","../../../../libs/quick-transfer-journey/src/lib/models/config.model.ts","../../../../libs/quick-transfer-journey/src/lib/utils/payment-mapper.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-confirmation-modal/quick-transfer-confirmation-modal.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-confirmation-modal/quick-transfer-confirmation-modal.component.html","../../../../libs/quick-transfer-journey/src/lib/ui/custom-product-selector/custom-product-selector.component.ts","../../../../libs/quick-transfer-journey/src/lib/ui/custom-product-selector/custom-product-selector.component.html","../../../../libs/quick-transfer-journey/src/lib/ui/validation-message/validation-message.component.ts","../../../../libs/quick-transfer-journey/src/lib/ui/validation-message/validation-message.component.html","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-form/quick-transfer-form.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-form/quick-transfer-form.component.html","../../../../libs/quick-transfer-journey/src/lib/utils/arrangement-filter.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-from-account/quick-transfer-from-account.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-from-account/quick-transfer-from-account.component.html","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-to-account/quick-transfer-to-account.component.ts","../../../../libs/quick-transfer-journey/src/lib/components/quick-transfer-to-account/quick-transfer-to-account.component.html","../../../../libs/quick-transfer-journey/src/lib/animations.ts","../../../../libs/quick-transfer-journey/src/lib/services/config.service.ts","../../../../libs/quick-transfer-journey/src/lib/quick-transfer-journey.component.ts","../../../../libs/quick-transfer-journey/src/lib/quick-transfer-journey.component.html","../../../../libs/quick-transfer-journey/src/lib/constants/accounts-variables.ts","../../../../libs/quick-transfer-journey/src/lib/utils/arrangement-mapper.ts","../../../../libs/quick-transfer-journey/src/lib/services/quick-transfer-http.service.ts","../../../../libs/quick-transfer-journey/src/lib/store/effects.ts","../../../../libs/quick-transfer-journey/src/lib/store/reducer.ts","../../../../libs/quick-transfer-journey/src/lib/store/store.module.ts","../../../../libs/quick-transfer-journey/src/lib/quick-transfer-journey.module.ts","../../../../libs/quick-transfer-journey/src/backbase-quick-transfer-journey-ang.ts"],"sourcesContent":["export abstract class CommunicationService {\n  abstract transferSucceeded(): void;\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { AccountItem, Arrangement, Contact, ExternalAccount, TransferAmount } from './items.model';\nimport { ViewState } from './view.model';\n\nexport interface QuickTransferState {\n  accountsCallState: CallState;\n  extAccountsCallState: CallState;\n  contactsCallState: CallState;\n  transferOrderCallState: CallState;\n  viewState: ViewState;\n  debitAccounts: Arrangement[] | undefined;\n  creditAccounts: Arrangement[] | undefined;\n  contacts: Contact[] | undefined;\n  extAccounts: ExternalAccount[] | undefined;\n  fromAccount: AccountItem | undefined;\n  payeeTo: AccountItem | undefined;\n  amount: TransferAmount | undefined;\n  defaultCurrency: string;\n  isModalOpen: boolean;\n  touchedFields: string[];\n  focusElement: string | undefined;\n}\n\n/** Enum representing different possible loading states of ajax call */\nexport enum LoadingState {\n  INIT = 'INIT',\n  LOADING = 'LOADING',\n  LOADED = 'LOADED',\n}\n\n/** Enum representing error state of ajax call */\nexport interface ErrorState {\n  error: HttpErrorResponse;\n}\n\n/**\n * Enum representing call state, which allows combining the loading and\n * error states into one property.\n */\nexport type CallState = LoadingState | ErrorState;\n\nexport enum ProgressStatus {\n  CONFIRMATION_PENDING = 'CONFIRMATION_PENDING',\n  USER_DECLINED = 'USER_DECLINED',\n  SYSTEM_DECLINED = 'SYSTEM_DECLINED',\n  PENDING_APPROVAL = 'PENDING_APPROVAL',\n  SENDING = 'SENDING',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n  PROCESSED = 'PROCESSED',\n  NO_PROGRESS = 'NO_PROGRESS',\n}\n\nexport interface ErrorMessage {\n  name: string;\n  message: string;\n}\n","/** Enum representing different view states */\nexport enum ViewState {\n  FORM = 'FORM',\n  FROM = 'FROM',\n  PAYEE = 'PAYEE',\n  COMPLETE = 'COMPLETE',\n  REVIEW = 'REVIEW',\n}\n\nexport enum Location {\n  FROM = 'FROM',\n  TO = 'TO',\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { PaymentOrdersPost } from '@backbase/data-ang/payment-order';\nimport { createAction, props } from '@ngrx/store';\nimport { Arrangement, Contact, ExternalAccount } from '../models/items.model';\nimport { ViewState } from '../models/view.model';\n\nexport const accountsFetch = createAction('[Accounts API] fetching accounts');\n\nexport const contactsFetch = createAction('[Contacts API] fetching contacts');\n\nexport const externalAccountsFetch = createAction('[Payments API] fetching external accounts');\n\n// Success\nexport const accountsFetchSuccess = createAction(\n  '[Accounts API] accounts fetched success',\n  props<{ debitAccounts: Arrangement[]; creditAccounts: Arrangement[] }>(),\n);\n\nexport const contactsFetchSuccess = createAction(\n  '[Contacts API] contacts fetched success',\n  props<{ contacts: Contact[] }>(),\n);\n\nexport const extAccountsFetchSuccess = createAction(\n  '[Payments API] external accounts fetched success',\n  props<{ extAccounts: ExternalAccount[] | undefined }>(),\n);\n\n// Error\nexport const accountsFetchError = createAction(\n  '[Accounts API] accounts fetching error',\n  props<{ error: HttpErrorResponse }>(),\n);\n\nexport const contactsFetchError = createAction(\n  '[Contacts API] contacts fetching error',\n  props<{ error: HttpErrorResponse }>(),\n);\n\nexport const extAccountsFetchError = createAction(\n  '[Payments API] external accounts fetching error',\n  props<{ error: HttpErrorResponse }>(),\n);\n\nexport const openView = createAction(\n  '[Quick Transfer Widget] current view changed',\n  props<{ view: ViewState; focus?: string }>(),\n);\n\nexport const setPayeeAccount = createAction('[Quick Transfer Widget] payee account picked up', props<{ id: string }>());\n\nexport const setFromAccount = createAction(\n  '[Quick Transfer Widget] From Account changed',\n  props<{ accountId: string }>(),\n);\n\nexport const sendTransferOrder = createAction(\n  '[Payments Order API] send transfer order',\n  props<{ reqData: PaymentOrdersPost }>(),\n);\nexport const transferOrderSuccess = createAction('[Payments Order API] transfer order is successful');\n\nexport const transferOrderError = createAction(\n  '[Payments Order API] transfer order is failed',\n  props<{ error: HttpErrorResponse }>(),\n);\n\nexport const setAmount = createAction(\n  '[Quick Transfer Widget] Transfer Amount Set',\n  props<{ amount: string; defaultCurrency?: string }>(),\n);\n\nexport const setModalOpen = createAction(\n  '[Quick Transfer Widget] Confirmation Modal Open',\n  props<{ isOpen: boolean }>(),\n);\n\nexport const resetWidget = createAction('[Quick Transfer Widget] Reset widget', props<{ focus?: string }>());\n\nexport const resetFocus = createAction('[Quick Transfer Widget] Reset Focus Element');\n\nexport const setFieldTouched = createAction(\n  '[Quick Transfer Widget] Set Field Touched',\n  props<{ fieldName: string }>(),\n);\n\nexport const setDefaultCurrency = createAction(\n  '[Quick Transfer Widget] Default Currency changed',\n  props<{ currency: string }>(),\n);\n","import { LoadingState, QuickTransferState } from '../models/state.model';\nimport { ViewState } from '../models/view.model';\n\nexport const FEATURE_STORE_SELECTOR = 'quick-transfer-store';\nexport const initialState: QuickTransferState = {\n  debitAccounts: undefined,\n  creditAccounts: undefined,\n  contacts: undefined,\n  extAccounts: undefined,\n  viewState: ViewState.FORM,\n  fromAccount: undefined,\n  payeeTo: undefined,\n  amount: undefined,\n  defaultCurrency: '',\n  accountsCallState: LoadingState.INIT,\n  extAccountsCallState: LoadingState.INIT,\n  contactsCallState: LoadingState.INIT,\n  transferOrderCallState: LoadingState.INIT,\n  isModalOpen: false,\n  touchedFields: [],\n  focusElement: undefined,\n};\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { FEATURE_STORE_SELECTOR } from '../constants/initital-state';\nimport { QuickTransferState as State } from '../models/state.model';\n\nconst child = createFeatureSelector<State>(FEATURE_STORE_SELECTOR);\n\nexport const selectFromAccount = createSelector(child, (state: State) => state['fromAccount']);\nexport const selectDebitAccounts = createSelector(child, (state: State) => state['debitAccounts']);\nexport const selectCreditAccounts = createSelector(child, (state: State) => state['creditAccounts']);\nexport const selectExtAccounts = createSelector(child, (state: State) => state['extAccounts']);\nexport const selectContacts = createSelector(child, (state: State) => state['contacts']);\nexport const selectAccountsCallState = createSelector(child, (state: State) => state['accountsCallState']);\nexport const selectContactsCallState = createSelector(child, (state: State) => state['contactsCallState']);\nexport const selectExtAccountsCallState = createSelector(child, (state: State) => state['extAccountsCallState']);\nexport const selectTransferOrderCallState = createSelector(child, (state: State) => state['transferOrderCallState']);\nexport const selectViewState = createSelector(child, (state: State) => state['viewState']);\nexport const selectPayeeAccount = createSelector(child, (state: State) => state['payeeTo']);\nexport const selectAmount = createSelector(child, (state: State) => state['amount']);\nexport const selectIsModalOpen = createSelector(child, (state: State) => state['isModalOpen']);\nexport const selectTouchedFields = createSelector(child, (state: State) => state['touchedFields']);\nexport const selectFocusElement = createSelector(child, (state: State) => state['focusElement']);\n","import { Injectable } from '@angular/core';\nimport { PaymentOrdersPost } from '@backbase/data-ang/payment-order';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AccountItem, Arrangement, Contact, ExternalAccount, TransferAmount } from '../models/items.model';\nimport { CallState, QuickTransferState } from '../models/state.model';\nimport { ViewState } from '../models/view.model';\nimport {\n  accountsFetch,\n  contactsFetch,\n  externalAccountsFetch,\n  openView,\n  resetFocus,\n  resetWidget,\n  sendTransferOrder,\n  setAmount,\n  setDefaultCurrency,\n  setFieldTouched,\n  setFromAccount,\n  setModalOpen,\n  setPayeeAccount,\n} from './actions';\nimport {\n  selectAccountsCallState,\n  selectAmount,\n  selectContacts,\n  selectContactsCallState,\n  selectCreditAccounts,\n  selectDebitAccounts,\n  selectExtAccounts,\n  selectExtAccountsCallState,\n  selectFocusElement,\n  selectFromAccount,\n  selectIsModalOpen,\n  selectPayeeAccount,\n  selectTouchedFields,\n  selectTransferOrderCallState,\n  selectViewState,\n} from './selectors';\n\n@Injectable()\nexport class QuickTransferStoreService {\n  /**\n   * Stream of api call state for fetching accounts\n   */\n  readonly accountsCallState$: Observable<CallState> = this.store.select(selectAccountsCallState);\n  /**\n   * Stream of api call state for fetching contacts\n   */\n  readonly contactsCallState$: Observable<CallState> = this.store.select(selectContactsCallState);\n  /**\n   * Stream of api call state for fetching external accounts\n   */\n  readonly extAccountsCallState$: Observable<CallState> = this.store.select(selectExtAccountsCallState);\n  /**\n   * Stream of current view state\n   */\n  readonly currentView$: Observable<ViewState> = this.store.select(selectViewState);\n  /**\n   * Stream of debit accounts\n   */\n  readonly debitAccounts$: Observable<Arrangement[] | undefined> = this.store.select(selectDebitAccounts);\n  /**\n   * Stream of credit accounts\n   */\n  readonly creditAccounts$: Observable<Arrangement[] | undefined> = this.store.select(selectCreditAccounts);\n  /**\n   * Stream of external accounts\n   */\n  readonly extAccounts$: Observable<ExternalAccount[] | undefined> = this.store.select(selectExtAccounts);\n  /**\n   * Stream of contacts\n   */\n  readonly contacts$: Observable<Contact[] | undefined> = this.store.select(selectContacts);\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccount$: Observable<AccountItem | undefined> = this.store.select(selectFromAccount);\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.select(selectPayeeAccount);\n  /**\n   * Stream of transfer amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.select(selectAmount);\n  /**\n   * Boolean flag for the confirmation modal\n   */\n  readonly isModalOpen$: Observable<boolean> = this.store.select(selectIsModalOpen);\n  /**\n   * Stream of touched fields.\n   */\n  readonly touchedFields$: Observable<string[] | undefined> = this.store.select(selectTouchedFields);\n\n  /**\n   * Stream of Element selector to be focused.\n   */\n  readonly focusElement$: Observable<string | undefined> = this.store.select(selectFocusElement);\n  /**\n   * Boolean flag for transfer order state loading\n   */\n  readonly paymentOrderCallState$: Observable<CallState> = this.store.select(selectTransferOrderCallState);\n\n  constructor(private readonly store: Store<QuickTransferState>) {}\n\n  /**\n   * Method to set initial accounts after fetching\n   */\n  fetchAccounts() {\n    this.store.dispatch(accountsFetch());\n  }\n\n  /**\n   * Method to set initial external accounts after fetching\n   */\n  fetchExtAccounts() {\n    this.store.dispatch(externalAccountsFetch());\n  }\n\n  /**\n   * Method to set initial contacts after fetching\n   */\n  fetchContacts() {\n    this.store.dispatch(contactsFetch());\n  }\n\n  /**\n   * Method to set initial contacts after fetching\n   */\n  sendTranferOrder(reqData: PaymentOrdersPost) {\n    this.store.dispatch(sendTransferOrder({ reqData }));\n  }\n\n  /**\n   * Method to set initial accounts after fetching\n   */\n  setView(view: ViewState, focus?: string) {\n    this.store.dispatch(openView({ view, focus }));\n  }\n\n  /**\n   * Method to set toPayee for account\n   */\n  setPayee(id: string) {\n    this.store.dispatch(setPayeeAccount({ id }));\n  }\n\n  /**\n   * Method to set initial accounts after fetching\n   */\n  selectFromAccount(accountId: string) {\n    this.store.dispatch(setFromAccount({ accountId }));\n  }\n  /**\n   * Method to set transfer amount\n   */\n  setAmount({ amount, defaultCurrency }: { amount: string; defaultCurrency?: string }) {\n    this.store.dispatch(setAmount({ amount, defaultCurrency }));\n  }\n  /**\n   * Method to open/close confirmation modal\n   */\n  setModalOpen(isOpen: boolean) {\n    this.store.dispatch(setModalOpen({ isOpen }));\n  }\n  /**\n   * Method to set form submitted\n   */\n  setTouchedField(fieldName: string) {\n    this.store.dispatch(setFieldTouched({ fieldName }));\n  }\n  /**\n   * Method to reset the widget\n   */\n  reset(focus?: string) {\n    this.store.dispatch(resetWidget({ focus }));\n  }\n  /**\n   * Method to set form submitted\n   */\n  resetFocus() {\n    this.store.dispatch(resetFocus());\n  }\n  /**\n   * Method to pass default currency into the store\n   */\n  updateDefaultCurrency(currency: string) {\n    this.store.dispatch(setDefaultCurrency({ currency }));\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { Arrangement } from '../../models/items.model';\nimport { CallState, LoadingState } from '../../models/state.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\n\n@Component({\n  template: '',\n})\nexport class BaseAccountSelectorComponent {\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n\n  constructor(readonly store: QuickTransferStoreService) {}\n  /**\n   * Stream of accounts\n   */\n  accounts$?: Observable<Arrangement[]>;\n  /**\n   * Stream of external accounts\n   */\n  extAccounts$?: Observable<Arrangement[]>;\n  /**\n   * Stream of accountsCallState\n   */\n  readonly accountsCallState$: Observable<CallState | undefined> = this.store.accountsCallState$;\n  /**\n   * Enum for loadingstate\n   */\n  readonly loadingstate = LoadingState;\n  /**\n   * Stream of extAccountsCallState\n   */\n  readonly extAccountsCallState$: Observable<CallState | undefined> = this.store.extAccountsCallState$;\n\n  /**\n   * Method to navigate back to the main Form\n   */\n  backToForm(fromSelector: string) {\n    this.store.setView(ViewState.FORM, fromSelector);\n  }\n  /**\n   * Method to dispatch store action for fetching the accounts\n   */\n  getAccounts() {\n    this.store.fetchAccounts();\n  }\n  /**\n   * Method to dispatch store action for fetching external accounts\n   */\n  getExtAccounts() {\n    this.store.fetchExtAccounts();\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { Arrangement } from '../../models/items.model';\n\n@Component({\n  selector: 'bb-quick-transfer-accounts-ui',\n  templateUrl: './quick-transfer-accounts.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferAccountsComponent {\n  /**\n   * Arrangements that are in the type of Account or Contact or ExternalAccount\n   */\n  @Input() arrangements: Arrangement[] | undefined;\n  /**\n   * Selected account to apply \"selected\" css\n   */\n  @Input() selected: string | undefined;\n  /**\n   * Id of account that is selected at the other account selector\n   */\n  @Input() selectedCounterPartyAccount: string | undefined;\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n  /**\n   * Output to inform which account or contact is selected\n   */\n  @Output() select = new EventEmitter<string>();\n  /**\n   * Emit event to inform parent with the picked account id\n   *\n   * @param id\n   */\n  pick(id: string) {\n    this.select.emit(id);\n  }\n}\n","<button\n  bbButton\n  color=\"unstyled\"\n  *ngFor=\"let arrangement of arrangements\"\n  class=\"bb-quick-transfer__product-item bb-stack\"\n  [class.bb-quick-transfer--selected-bg]=\"arrangement.uuid === selected\"\n  (click)=\"pick(arrangement.uuid)\"\n  [disabled]=\"arrangement.uuid === selectedCounterPartyAccount\"\n>\n  <bb-product-item-basic-account-ui\n    [highlight]=\"config?.uiComponentProps.productItemHighlight\"\n    [title]=\"arrangement.name\"\n    [amount]=\"arrangement?.balance\"\n    [productNumber]=\"arrangement.number\"\n    [currency]=\"arrangement?.currency\"\n    [productNumberFormat]=\"config?.uiComponentProps.accountNumberFormat\"\n    [showCurrencySymbol]=\"config?.uiComponentProps.mapCurrency\"\n    [active]=\"false\"\n    [class.bb-quick-transfer--disabled]=\"arrangement.uuid === selectedCounterPartyAccount\"\n  ></bb-product-item-basic-account-ui>\n</button>\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export const TO_ACCOUNT = '[data-role=\"select-payee-button\"] button';\nexport const FROM_ACCOUNT = '[data-role=\"select-from-button\"] button';\n","import { AbstractControl } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Get params from all router-outlet scopes\n */\nexport function getRouteParams(route: ActivatedRoute) {\n  let params = route.snapshot.params;\n  params = { ...route.snapshot.queryParams, ...params };\n  if (route.children) {\n    for (const r of route.children) {\n      params = { ...getRouteParams(r), ...params };\n    }\n  }\n  return params;\n}\n\n/** Amount value should be positive value **/\nexport function nonZeroValidator(control: AbstractControl): { [key: string]: any } | null {\n  if (!control.value || Number(control.value) <= 0) {\n    return { nonZero: true };\n  } else {\n    // eslint-disable-next-line no-null/no-null\n    return null;\n  }\n}\n\nexport function generateId() {\n  return Math.floor(Math.random() * Date.now()).toString();\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FROM_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { AccountItem, TransferAmount } from '../../models/items.model';\nimport { CallState, ErrorState, LoadingState } from '../../models/state.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { generateId } from '../../utils/helpers';\n\n@Component({\n  selector: 'bb-quick-transfer-complete-ui',\n  templateUrl: './quick-transfer-complete.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferCompleteComponent implements AfterViewInit {\n  constructor(private readonly store: QuickTransferStoreService) {}\n  readonly id = generateId();\n  /**\n   * success image path\n   */\n  @Input() successImg: string | undefined;\n  /**\n   * success image path for reduced motion\n   */\n  @Input() successImgNoMotion: string | undefined;\n  /**\n   * unique time to reload animated svg everytime\n   */\n  readonly timestamp = new Date().getTime();\n  /**\n   * Stream of transfer amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.amount$;\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.toPayee$;\n  /**\n   * Stream of paymentOrderCallState\n   */\n  readonly paymentOrderCallState$: Observable<CallState> = this.store.paymentOrderCallState$.pipe(\n    map(state => {\n      if ((state as ErrorState).error) {\n        const error = (state as ErrorState).error;\n        const cancelTransactionSigningMessage = `Your Transfer Has Been Cancelled.`;\n        const defaultErrorMessage = `Oops, something went wrong!`;\n        const transactionSigningCancelErrorText = 'rejected_by_user';\n        const message =\n          error.statusText === transactionSigningCancelErrorText\n            ? $localize`:@@quick-transfer.cancel-transaction-signing.fail-message:${cancelTransactionSigningMessage}`\n            : $localize`:@@quick-transfer.complete.fail-message:${defaultErrorMessage}`;\n\n        return { ...error, message };\n      }\n      return state;\n    }),\n  );\n  /**\n   * Enum for loadingstate\n   */\n  readonly loadingstate = LoadingState;\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n\n  @ViewChild('done') doneButton!: ElementRef;\n\n  ngAfterViewInit() {\n    this.doneButton.nativeElement.focus();\n  }\n  /**\n   * Method to call resetWidget\n   */\n  restart() {\n    this.store.reset(FROM_ACCOUNT);\n  }\n  /**\n   * Method to get back to form for trying transfer again\n   */\n  tryAgain() {\n    this.store.setView(ViewState.FORM, FROM_ACCOUNT);\n  }\n}\n","<div class=\"bb-quick-transfer__complete\">\n  <ng-container *ngIf=\"(paymentOrderCallState$ | async) === loadingstate.LOADED; else paymentOrderFail\">\n    <div\n      role=\"dialog\"\n      attr.aria-describedby=\"payment-success-img-{{ id }} payment-success-title-{{ id }} payment-success-description-{{\n        id\n      }}\"\n    >\n      <div class=\"bb-text-align-right bb-block\">\n        <button\n          bbButton\n          color=\"unstyled\"\n          class=\"btn-unstyled--focusable\"\n          (click)=\"restart()\"\n          data-role=\"clear-icon-button\"\n          aria-label=\"close transfer\"\n          i18-aria-label=\"Close transfer|Text for close transfer@@quick-transfer.complete.close.button\"\n        >\n          <bb-icon-ui name=\"clear\" size=\"lg\"></bb-icon-ui>\n        </button>\n      </div>\n      <div class=\"bb-text-align-center flex-fill bb-block bb-block--lg\">\n        <picture>\n          <source srcset=\"{{ successImgNoMotion }}\" media=\"(prefers-reduced-motion: reduce)\" />\n          <img\n            id=\"payment-success-img-{{ id }}\"\n            srcset=\"{{ successImg + '?' + timestamp }}\"\n            alt=\"Transfer succeeded!\"\n            i18n-alt=\"Transfer succeeded|Text for transfer succeeded@@quick-transfer.complete.transfer-succeeded\"\n            data-role=\"transfer-success-anim\"\n            class=\"img-fluid\"\n          />\n        </picture>\n        <bb-header-ui\n          id=\"payment-success-title-{{ id }}\"\n          headingClasses=\"bb-text-semi-bold h5\"\n          headingType=\"h3\"\n          heading=\"Well done!\"\n          i18n-heading=\"Well Done!|Text for well done@@quick-transfer.complete.well-done\"\n        ></bb-header-ui>\n        <span\n          class=\"bb-text-support bb-subtitle\"\n          *ngIf=\"amount$ | async as amount\"\n          id=\"payment-success-description-{{ id }}\"\n          ><span i18n=\"Success Transfer|Text for success transfer@@quick-transfer.complete.success-message\"\n            >You just transferred\n          </span>\n          <bb-amount-ui\n            [currency]=\"amount.currency\"\n            [amount]=\"amount.amount\"\n            [mapCurrency]=\"config?.uiComponentProps.mapCurrency\"\n            [showPlusSign]=\"false\"\n          ></bb-amount-ui>\n          <span i18n=\"Transfer To|Text for success transfer to@@quick-transfer.complete.success-message-to\"> to </span>\n          <ng-container *ngIf=\"toPayee$ | async as toPayee\"\n            ><span>{{ toPayee.name }}.</span></ng-container\n          >\n        </span>\n      </div>\n      <div class=\"bb-text-align-center bb-block bb-block--sm\">\n        <button\n          bbButton\n          color=\"secondary\"\n          (click)=\"restart()\"\n          i18n=\"Done button|Transfer Done@@quick-transfer.complete.button.transfer-done\"\n          data-role=\"transfer-done\"\n          #done\n        >\n          Done\n        </button>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<ng-template #paymentOrderFail>\n  <div role=\"dialog\" attr.aria-describedby=\"payment-error-title-{{ id }} payment-error-description-{{ id }}\">\n    <div class=\"bb-text-align-right bb-block bb-block--xl\">\n      <button\n        bbButton\n        color=\"unstyled\"\n        (click)=\"tryAgain()\"\n        data-role=\"clear-icon-button\"\n        aria-label=\"close transfer\"\n        i18-aria-label=\"Close transfer|Text for close transfer@@quick-transfer.complete.close.button\"\n      >\n        <bb-icon-ui name=\"clear\" size=\"lg\"></bb-icon-ui>\n      </button>\n    </div>\n    <div\n      class=\"bb-text-align-center flex-fill bb-block bb-block--xl\"\n      data-role=\"transfer-fail-message\"\n      *ngIf=\"paymentOrderCallState$ | async as errorState\"\n    >\n      <bb-icon-ui\n        color=\"danger\"\n        class=\"bb-quick-transfer__fail-icon bb-block bb-block--md\"\n        name=\"error-outline\"\n        size=\"xxl\"\n        data-role=\"complete-error-outline\"\n      ></bb-icon-ui>\n\n      <bb-header-ui\n        id=\"payment-error-title-{{ id }}\"\n        headingClasses=\"bb-text-semi-bold h5\"\n        headingType=\"h3\"\n        [heading]=\"errorState.message\"\n      ></bb-header-ui>\n      <span\n        id=\"payment-error-description-{{ id }}\"\n        class=\"bb-text-support bb-subtitle\"\n        i18n=\"Transfer Failed Sub-Message|Extra Text for the failed transfer@@quick-transfer.complete.fail-sub.message\"\n        >Our system was unable to process your transfer at the moment.</span\n      >\n    </div>\n    <div class=\"bb-text-align-center bb-block bb-block--sm\">\n      <button\n        bbButton\n        color=\"secondary\"\n        i18n=\"Try again button|Transfer Fail@@quick-transfer.complete.button.try-again\"\n        data-role=\"transfer-try-again-button\"\n        (click)=\"tryAgain()\"\n        #done\n      >\n        Try again\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Arrangement, Contact } from './items.model';\nimport { ViewState } from './view.model';\n\nexport interface BaseObject<T> {\n  [key: string]: T;\n}\n\nexport enum QuickTransferProductKinds {\n  currentAccount = 'Current Account',\n  savingsAccount = 'Savings Account',\n  creditCard = 'Credit Card',\n  loanAccount = 'Loan',\n  connectedAccounts = 'Connected Account',\n  contacts = 'Contact',\n}\n\nexport interface ValidationMessage {\n  name: string;\n  message: string;\n}\n\n/**\n * @deprecated since version 1.1.0 use `QuickTransferJourneyConfiguration` instead\n */\nexport interface FilterState extends BaseObject<Array<string | number | boolean> | string> {\n  key: string;\n  value: Array<string | number | boolean>;\n}\n\nexport interface QuickTransferBaseField {\n  validationMessages?: ValidationMessage[];\n  validators?: Array<ValidatorFn>;\n  asyncValidators?: Array<AsyncValidatorFn>;\n  label?: string;\n}\n\nexport interface QuickTransferField extends QuickTransferBaseField {\n  productKinds?: QuickTransferProductKinds[];\n  connectedAccountsSubHeader?: string;\n  mapItems?: (items: Arrangement[]) => Arrangement[];\n  mapContacts?: (items: Contact[]) => Contact[];\n  /** @deprecated since version 1.1.0, use `mapItems` instead */\n  otherFilters?: FilterState[];\n}\nexport interface QuickTransferAmountField extends QuickTransferBaseField {\n  initialCurrency: string;\n  autoDecimal: boolean;\n  maxLength?: number;\n  placeholder?: string;\n  wrapperClasses?: string;\n  required?: boolean;\n}\nexport interface PaymentTypes {\n  internal: string;\n  external?: string;\n  contact?: string;\n}\nexport interface DisabledCombination {\n  from: QuickTransferProductKinds;\n  to: QuickTransferProductKinds;\n}\n\nexport interface QuickTransferFields {\n  fromAccount: QuickTransferField;\n  toAccount: QuickTransferField;\n  amount: QuickTransferAmountField;\n}\n\nexport interface UiComponentProps {\n  mapCurrency?: boolean;\n  accountNumberFormat?: AccountNumberFormat;\n  productItemHighlight?: boolean;\n}\n\nexport interface AccountNumberFormat {\n  length?: number;\n  maskRange?: [number, number];\n  segments?: number | Array<number>;\n}\n\nexport interface QuickTransferJourneyConfiguration {\n  fields: QuickTransferFields;\n  businessFunction?: string;\n  successEvents?: string;\n  paymentTypes: PaymentTypes;\n  disabledCombinations: DisabledCombination[];\n  productSummaryQueryParameters?: BaseObject<any>;\n  uiComponentProps: UiComponentProps;\n  titles: Titles;\n}\n\nexport interface Titles {\n  [ViewState.FORM]: string;\n  [ViewState.FROM]: string;\n  [ViewState.PAYEE]: string;\n  [ViewState.REVIEW]: string;\n}\n\n/**\n * @deprecated since version 1.1.0 use `QuickTransferJourneyConfiguration` instead\n */\nexport interface QuickTransferConfigType {\n  fields: QuickTransferFields;\n  businessFunction?: string;\n  successEvents?: string;\n  paymentTypes: PaymentTypes;\n  disabledCombinations: DisabledCombination[];\n  productSummaryQueryParameters?: BaseObject<any>;\n  uiComponentProps: UiComponentProps;\n}\n","import { InvolvedPartyRole, PaymentOrdersPost, SchemeNames } from '@backbase/data-ang/payment-order';\nimport { PaymentTypes, QuickTransferProductKinds } from '../models/config.model';\nimport { AccountItem, TransferAmount } from '../models/items.model';\n\nexport const getCurrentDate = () => new Date().toISOString().slice(0, 10);\n\nexport const mapPaymentData = (\n  fromAccount: AccountItem,\n  toAccount: AccountItem,\n  amount: TransferAmount,\n  paymentTypes: PaymentTypes,\n): PaymentOrdersPost => {\n  const { connectedAccounts, contacts } = QuickTransferProductKinds;\n  const _fromAccount = fromAccount.productKindName === connectedAccounts ? toAccount : fromAccount;\n  const _toAccount = fromAccount.productKindName === connectedAccounts ? fromAccount : toAccount;\n  const _role =\n    fromAccount.productKindName === connectedAccounts ? InvolvedPartyRole.DEBTOR : InvolvedPartyRole.CREDITOR;\n\n  function getPaymentType() {\n    switch (_toAccount.productKindName) {\n      case connectedAccounts:\n        return paymentTypes.external;\n      case contacts:\n        return paymentTypes.contact;\n      default:\n        return paymentTypes.internal;\n    }\n  }\n  function getScheme() {\n    switch (_toAccount.productKindName) {\n      case connectedAccounts:\n        return SchemeNames.EXTERNALID;\n      case contacts:\n        return SchemeNames.BBAN;\n      default:\n        return SchemeNames.ID;\n    }\n  }\n\n  const originatorAccount = {\n    identification: {\n      identification: _fromAccount.uuid,\n      schemeName: SchemeNames.ID,\n    },\n  };\n\n  const identification = {\n    identification: _toAccount.productKindName === contacts ? _toAccount.number : _toAccount.uuid,\n    schemeName: getScheme(),\n  };\n\n  const transferTransactionInformation = {\n    instructedAmount: {\n      amount: amount.amount,\n      currencyCode: amount.currency,\n    },\n    counterparty: {\n      name: _toAccount.name,\n      role: _role,\n    },\n    counterpartyAccount: {\n      identification,\n      ...(_toAccount.productKindName === contacts && {\n        selectedContact: { contactId: _toAccount.uuid, accountId: '' },\n      }),\n    },\n  };\n\n  return {\n    originatorAccount,\n    requestedExecutionDate: getCurrentDate(),\n    paymentType: getPaymentType(),\n    transferTransactionInformation,\n  };\n};\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy } from '@angular/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PaymentTypes, QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { AccountItem, TransferAmount } from '../../models/items.model';\nimport { CallState, LoadingState } from '../../models/state.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { mapPaymentData } from '../../utils/payment-mapper';\n\n@Component({\n  selector: 'bb-quick-transfer-confirmation-modal-ui',\n  templateUrl: './quick-transfer-confirmation-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferConfirmationModalComponent implements OnDestroy {\n  /**\n   * success events array\n   */\n  @Input() paymentTypes?: PaymentTypes;\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n  /**\n   * Subscriptions for form fields\n   */\n  subscriptions$: Subscription | undefined;\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.toPayee$;\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccount$: Observable<AccountItem | undefined> = this.store.fromAccount$;\n  /**\n   * Stream of transfer amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.amount$;\n\n  /**\n   * Stream of isModalOpen\n   */\n  readonly isOpen$: Observable<boolean> = this.store.isModalOpen$;\n  /**\n   * Stream of loading\n   */\n  readonly paymentOrderCallState$: Observable<CallState> = this.store.paymentOrderCallState$;\n  /**\n   * Enum for loadingstate\n   */\n  readonly loadingstate = LoadingState;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n\n  constructor(private readonly store: QuickTransferStoreService) {}\n  /**\n   * close the modal\n   */\n  closeModal() {\n    this.store.setModalOpen(false);\n  }\n  /**\n   * close the modal\n   */\n  handleConfirm() {\n    this.subscriptions$ = combineLatest([this.fromAccount$, this.toPayee$, this.amount$])\n      .pipe(take(1))\n      .subscribe(([fromAccount, toPayee, amount]) => {\n        if (fromAccount && toPayee && amount) {\n          const postData = mapPaymentData(fromAccount, toPayee, amount, this.paymentTypes || ({} as PaymentTypes));\n          this.store.sendTranferOrder(postData);\n        }\n      });\n  }\n  ngOnDestroy() {\n    if (this.subscriptions$) {\n      this.subscriptions$.unsubscribe();\n    }\n  }\n}\n","<bb-modal-ui\n  class=\"bb-quick-transfer__modal\"\n  [isOpen]=\"isOpen$ | async\"\n  (cancel)=\"closeModal()\"\n  (confirm)=\"handleConfirm()\"\n>\n  <bb-modal-header-ui [title]=\"config?.titles?.[viewState.FORM]\"></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div class=\"bb-block bb-block--md\" *ngIf=\"amount$ | async as amount\" data-role=\"quick-transfer-review-amount\">\n        <label\n          class=\"bb-block bb-block--xs font-weight-normal bb-text-support bb-subtitle\"\n          i18n=\"Amount label|Label for transfer amount@@quick-transfer.confirmation-modal.amount-label\"\n          >Amount</label\n        ><br />\n        <bb-amount-ui\n          data-role=\"confirmation-amount\"\n          class=\"bb-highlight\"\n          [currency]=\"amount.currency\"\n          [amount]=\"amount.amount\"\n          [mapCurrency]=\"true\"\n          [showPlusSign]=\"false\"\n        ></bb-amount-ui>\n      </div>\n      <div class=\"bb-stack\">\n        <div\n          class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--spacing-lg bb-quick-transfer__modal-from bb-stack__item--fill\"\n          *ngIf=\"fromAccount$ | async as fromAccount\"\n        >\n          <div class=\"bb-quick-transfer__modal-wrap\">\n            <label\n              class=\"bb-text-support bb-subtitle font-weight-normal bb-block bb-block--xs\"\n              i18n=\"\n                From account label|Label for account to be transferred\n                from@@quick-transfer.confirmation-modal.from-label\"\n              >From</label\n            >\n            <div>\n              <bb-product-item-basic-account-ui\n                data-role=\"confirmation-from-account\"\n                [title]=\"fromAccount.name\"\n                [productNumber]=\"fromAccount.number\"\n                [amount]=\"fromAccount?.balance\"\n                [currency]=\"fromAccount?.currency\"\n                [productNumberFormat]=\"config?.uiComponentProps.accountNumberFormat\"\n                [showCurrencySymbol]=\"config?.uiComponentProps.mapCurrency\"\n                [highlight]=\"config?.uiComponentProps.productItemHighlight\"\n                [active]=\"false\"\n              ></bb-product-item-basic-account-ui>\n            </div>\n          </div>\n        </div>\n        <div class=\"bb-stack__item bb-stack__item--spacing-lg\" aria-hidden=\"true\">\n          <bb-icon-ui name=\"arrow-forward\" size=\"md\"></bb-icon-ui>\n        </div>\n        <div\n          class=\"bb-stack__item bb-stack__item--align-top bb-stack__item--fill\"\n          *ngIf=\"toPayee$ | async as toAccount\"\n        >\n          <div class=\"bb-quick-transfer__modal-wrap\">\n            <label\n              class=\"bb-text-support bb-subtitle font-weight-normal bb-block bb-block--xs\"\n              i18n=\"To account label|Label for account to be transferred to@@quick-transfer.confirmation-modal.to-label\"\n              >To</label\n            >\n            <div>\n              <bb-product-item-basic-account-ui\n                data-role=\"confirmation-to-account\"\n                [title]=\"toAccount.name\"\n                [productNumber]=\"toAccount.number\"\n                [amount]=\"toAccount?.balance\"\n                [currency]=\"toAccount?.currency\"\n                [productNumberFormat]=\"config?.uiComponentProps.accountNumberFormat\"\n                [showCurrencySymbol]=\"config?.uiComponentProps.mapCurrency\"\n                [highlight]=\"config?.uiComponentProps.productItemHighlight\"\n                [active]=\"false\"\n              ></bb-product-item-basic-account-ui>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <bb-load-button-ui\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          (click)=\"handleConfirm()\"\n          i18n=\"Confirm button|Button for to confirm transfer@@quick-transfer.confirmation-modal.confirm\"\n          data-role=\"modal-confirm-button\"\n          [isLoading]=\"(paymentOrderCallState$ | async) === loadingstate.LOADING\"\n        >\n          Confirm transfer\n        </bb-load-button-ui>\n        <button\n          bbButton\n          data-role=\"cancel-button\"\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"closeModal()\"\n          [disabled]=\"(paymentOrderCallState$ | async) === loadingstate.LOADING\"\n        >\n          <span\n            i18n=\"Cancel button|Button for to cancel transfer confirmation@@quick-transfer.confirmation-modal.cancel\"\n            >Cancel</span\n          >\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Optional, Output, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { AccountItem } from '../../models/items.model';\n\n@Component({\n  selector: 'bb-custom-product-selector',\n  templateUrl: './custom-product-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomProductSelectorComponent implements ControlValueAccessor {\n  constructor(@Optional() @Self() public parentFormControl: NgControl) {\n    if (this.parentFormControl) {\n      this.parentFormControl.valueAccessor = this;\n    }\n  }\n\n  @Output() open = new EventEmitter<boolean>();\n\n  @Input() emptyLabel: string | undefined;\n\n  /**\n   * Selected account\n   */\n  @Input() account: AccountItem | undefined;\n\n  /**\n   * parent touched state\n   */\n  @Input() touched = false;\n\n  @Input('aria-describedby') ariaDescribedby: string | undefined;\n\n  writeValue(model: any | null): void {\n    if (!model) {\n      return;\n    }\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  markAsTouched() {\n    this.onTouched();\n  }\n  /**\n   * Method to open from account selector\n   */\n  openAccountSelectorView(): void {\n    this.open.emit(true);\n  }\n}\n","<button\n  bbButton\n  color=\"unstyled\"\n  [class.border-danger]=\"touched && parentFormControl?.invalid\"\n  [attr.aria-describedby]=\"ariaDescribedby\"\n  class=\"bb-stack form-control bb-quick-transfer-selector-field\"\n  (click)=\"openAccountSelectorView()\"\n>\n  <span\n    class=\"bb-stack__item bb-stack__item--fill bb-text-semi-bold bb-ellipsis--single-line\"\n    *ngIf=\"account; else accountTemplate\"\n    >{{ account.name }}</span\n  >\n  <ng-template #accountTemplate>\n    <span class=\"bb-stack__item bb-stack__item--fill bb-text-support\">{{ emptyLabel }}</span>\n  </ng-template>\n  <bb-icon-ui name=\"angle-right\" cropped class=\"bb-text-support bb-stack__item\"></bb-icon-ui>\n</button>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { fadeSlideAnimation } from '@backbase/ui-ang/util';\nimport { ErrorMessage } from '../../models/state.model';\n\n@Component({\n  selector: 'bb-quick-transfer-validation-message',\n  templateUrl: './validation-message.component.html',\n  animations: [fadeSlideAnimation],\n})\nexport class QuickTransferValidationMessageComponent implements OnInit {\n  /**\n   * The form control instance\n   */\n  @Input() control!: FormControl;\n  /**\n   * List of validation messages\n   */\n  @Input() validationMessages!: Array<ErrorMessage>;\n  /**\n   * Id of validation message\n   */\n  @Input() id!: string;\n\n  requiredMessage!: string;\n\n  ngOnInit() {\n    this.requiredMessage = this.getValidationMessage('required');\n  }\n\n  getValidationMessage(error?: string): string {\n    const validation = this.validationMessages?.find(msg => !!this.control?.errors?.[error || msg.name]);\n    return validation?.message || '';\n  }\n}\n","<bb-input-validation-message-ui\n  data-role=\"input-error\"\n  *ngIf=\"control?.touched && control?.invalid\"\n  [showErrors]=\"control?.touched && control?.invalid\"\n  [@fadeSlideInOut]\n>\n  <ng-container *ngIf=\"control?.errors?.['required']; else invalidError\">\n    <span data-role=\"required-error\" [attr.id]=\"id\" *ngIf=\"requiredMessage\">\n      {{ requiredMessage }}\n    </span>\n  </ng-container>\n\n  <ng-template #invalidError>\n    <span data-role=\"required-error\" [attr.id]=\"id\" *ngIf=\"getValidationMessage() as validationMessage\">\n      {{ validationMessage }}</span\n    >\n  </ng-template>\n</bb-input-validation-message-ui>\n","import { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport BigNumber from 'bignumber.js';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, first, take, takeUntil } from 'rxjs/operators';\nimport { QuickTransferAmountField, QuickTransferJourneyConfiguration } from '../../models/config.model';\nimport { AccountItem, TransferAmount } from '../../models/items.model';\nimport { ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\n\n@Component({\n  selector: 'bb-quick-transfer-form-ui',\n  templateUrl: './quick-transfer-form.component.html',\n})\nexport class QuickTransferFormComponent implements OnInit, OnDestroy, AfterViewInit {\n  /**\n   * The format used for bignumber;\n   */\n  private readonly format: BigNumber.Format;\n  private readonly decimalSeparator: string;\n\n  /**\n   * Quick Transfer configuration\n   */\n  @Input() config?: QuickTransferJourneyConfiguration;\n  /**\n   * Stream of toPayee\n   */\n  readonly toPayee$: Observable<AccountItem | undefined> = this.store.toPayee$;\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccount$: Observable<AccountItem | undefined> = this.store.fromAccount$;\n  /**\n   * Stream of amount\n   */\n  readonly amount$: Observable<TransferAmount | undefined> = this.store.amount$;\n  /**\n   * Stream of touchedFields\n   */\n  readonly touchedFields$: Observable<string[] | undefined> = this.store.touchedFields$;\n  /**\n   * The reactive form\n   */\n  form?: FormGroup;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n  /**\n   * unique key used for ids\n   */\n  readonly id = new Date().getTime();\n\n  /**\n   * Stream of the current view\n   */\n  readonly currentView$: Observable<ViewState | undefined> = this.store.currentView$;\n  /**\n   * Stream of the current view\n   */\n  get amountConfig(): QuickTransferAmountField | undefined {\n    return this.config?.fields.amount;\n  }\n\n  @ViewChild('formElement') formEl!: ElementRef;\n\n  destroy$ = new Subject();\n\n  constructor(\n    private readonly store: QuickTransferStoreService,\n    private readonly formBuilder: FormBuilder,\n    @Inject(LOCALE_ID) private readonly locale: string,\n  ) {\n    this.decimalSeparator = getLocaleNumberSymbol(this.locale, NumberSymbol.CurrencyDecimal);\n    this.format = {\n      groupSeparator: '',\n      decimalSeparator: this.decimalSeparator,\n      groupSize: 3,\n    };\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.form\n      ?.get('amountGroup.amount')\n      ?.valueChanges.pipe(distinctUntilChanged(), takeUntil(this.destroy$))\n      .subscribe(change => {\n        this.storeAmountValue(change);\n      });\n    this.touchedFields$.pipe(take(1)).subscribe(fields => {\n      if (fields?.length) {\n        fields.forEach(field => {\n          this.form?.get(field)?.markAsTouched();\n        });\n      }\n    });\n    //Set Initial form data from store\n    combineLatest([\n      this.amount$.pipe(take(1)),\n      this.toPayee$.pipe(take(1)),\n      this.fromAccount$.pipe(distinctUntilChanged()), // To have account preselected by route params\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([amount, toAccount, fromAccount]) => {\n        const amountVal = amount?.amount;\n        this.form?.patchValue({\n          amountGroup: {\n            amount: amountVal ? new BigNumber(amountVal).toFormat(this.format) : '',\n            currency: amount?.currency || this.amountConfig?.initialCurrency,\n          },\n          toAccount,\n          fromAccount,\n        });\n      });\n  }\n\n  ngAfterViewInit() {\n    this.store.focusElement$.pipe(distinctUntilChanged(), filter(Boolean), takeUntil(this.destroy$)).subscribe(el => {\n      const focusElement = this.formEl.nativeElement.querySelector(el);\n      if (focusElement) {\n        focusElement.focus({ preventScroll: true });\n        this.store.resetFocus();\n      }\n    });\n    this.amount$\n      .pipe(\n        filter(amount => !amount),\n        take(1),\n      )\n      .subscribe(() => {\n        this.form?.get('amountGroup.amount')?.patchValue(' ');\n        this.form?.reset();\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Method to open from account selector\n   */\n  openFromAccount(): void {\n    this.store.setView(ViewState.FROM);\n    this.store.setTouchedField('fromAccount');\n  }\n  /**\n   * Method to open to account selector\n   */\n  openPayeeAccount() {\n    this.store.setView(ViewState.PAYEE);\n    this.store.setTouchedField('toAccount');\n  }\n  /**\n   * Method to store amount input value\n   */\n  private storeAmountValue(amount: string) {\n    this.store.setAmount({ amount: amount?.replace(this.decimalSeparator, '.') });\n  }\n\n  /**\n   * Method to handle transfer\n   */\n  async openConfirmation() {\n    const currentView = await this.currentView$.pipe(first()).toPromise();\n    if (currentView === ViewState.FORM && this.form?.valid) {\n      this.storeAmountValue(this.form.value.amountGroup.amount);\n      this.store.setModalOpen(true);\n    } else {\n      this.setTouched('amountGroup.amount');\n      this.setTouched('fromAccount');\n      this.setTouched('toAccount');\n    }\n  }\n\n  /**\n   * Method to check field Validity\n   */\n  isFieldValid(fieldName: string) {\n    const control = this.form?.get(fieldName);\n    return control && (control.valid || control.untouched);\n  }\n  /**\n   * Method to set field as touched\n   */\n  setTouched(fieldName: string) {\n    const control = this.form?.get(fieldName);\n    if (control) {\n      control.markAsTouched();\n      this.store.setTouchedField(fieldName);\n    }\n  }\n\n  private initializeForm(): void {\n    const { fromAccount, toAccount, amount } = this.config?.fields || {};\n\n    this.form = this.formBuilder.group({\n      amountGroup: this.formBuilder.group({\n        amount: ['', amount?.validators || [], amount?.asyncValidators || []],\n        currency: ['', Validators.required],\n      }),\n      fromAccount: ['', fromAccount?.validators || [], fromAccount?.asyncValidators || []],\n      toAccount: ['', toAccount?.validators || [], toAccount?.asyncValidators || []],\n    });\n  }\n}\n","<div class=\"bb-quick-transfer__view bb-quick-transfer__view--form\">\n  <div class=\"bb-block bb-quick-transfer__heading\">\n    <div class=\"bb-stack\">\n      <bb-header-ui\n        [heading]=\"config?.titles?.[viewState.FORM]\"\n        data-role=\"quick-transfer-header\"\n        headingType=\"h2\"\n        headingClasses=\"bb-block bb-block--lg\"\n        class=\"bb-stack__item bb-stack__item--fill\"\n      ></bb-header-ui>\n    </div>\n  </div>\n  <form\n    class=\"bb-quick-transfer__form\"\n    [formGroup]=\"form\"\n    data-role=\"quick-transfer-form\"\n    (ngSubmit)=\"openConfirmation()\"\n    #formElement\n  >\n    <fieldset [disabled]=\"(currentView$ | async) !== viewState.FORM\">\n      <legend class=\"sr-only\" i18n=\"Legend|Quick transfer form legend@@quick-transfer.form.legend\">\n        Quick transfer Form\n      </legend>\n      <div class=\"bb-block bb-block--lg\">\n        <label class=\"bb-label\" data-role=\"from-label\">{{ config?.fields?.fromAccount?.label }}</label>\n        <bb-custom-product-selector\n          [touched]=\"!isFieldValid('fromAccount')\"\n          formControlName=\"fromAccount\"\n          (focusout)=\"setTouched('fromAccount')\"\n          [account]=\"fromAccount$ | async\"\n          (open)=\"openFromAccount()\"\n          data-role=\"select-from-button\"\n          emptyLabel=\"Select your account\"\n          aria-describedby=\"{{ 'fromAccount-errors-' + id }}\"\n          i18n-emptyLabel=\"Select Account|Quick transfer input for account@@quick-transfer.form.from\"\n        ></bb-custom-product-selector>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'fromAccount-errors-' + id }}\"\n          [control]=\"form?.get('fromAccount')\"\n          [validationMessages]=\"config?.fields?.fromAccount?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div class=\"bb-block bb-block--lg\">\n        <label\n          class=\"bb-label\"\n          data-role=\"payee-label\"\n          i18n=\"Input label|Quick transfer input label for beneficiary@@quick-transfer.form.to.label\"\n          >{{ config?.fields?.toAccount?.label }}</label\n        >\n        <bb-custom-product-selector\n          [touched]=\"!isFieldValid('toAccount')\"\n          formControlName=\"toAccount\"\n          (focusout)=\"setTouched('toAccount')\"\n          [account]=\"toPayee$ | async\"\n          (open)=\"openPayeeAccount()\"\n          data-role=\"select-payee-button\"\n          emptyLabel=\"Select beneficiary\"\n          aria-describedby=\"{{ 'toAccount-errors-' + id }}\"\n          i18n-emptyLabel=\"Select beneficiary|Quick transfer input for beneficiary@@quick-transfer.form.to\"\n        ></bb-custom-product-selector>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'toAccount-errors-' + id }}\"\n          [control]=\"form?.get('toAccount')\"\n          [validationMessages]=\"config?.fields?.toAccount?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div\n        class=\"bb-block bb-block--xl\"\n        formGroupName=\"amountGroup\"\n        [class.was-validated]=\"!isFieldValid('amountGroup.amount')\"\n      >\n        <label\n          class=\"bb-label\"\n          for=\"{{ 'amount-' + id }}\"\n          i18n=\"Amount of transfer|Quick transfer input for amount@@quick-transfer.form.amount\"\n          >{{ config?.fields?.amount?.label }}</label\n        >\n        <bb-amount-input-ui\n          formControlName=\"amount\"\n          data-role=\"amount-input\"\n          [id]=\"'amount-' + id\"\n          [autoDecimal]=\"amountConfig?.autoDecimal\"\n          (focusout)=\"setTouched('amountGroup.amount')\"\n          [wrapperClasses]=\"amountConfig?.wrapperClasses\"\n          [mapCurrency]=\"config?.uiComponentProps.mapCurrency\"\n          [currency]=\"(fromAccount$ | async)?.currency || amountConfig?.initialCurrency\"\n          [required]=\"amountConfig?.required\"\n          aria-describedby=\"{{ 'amount-errors-' + id }}\"\n          [placeholder]=\"amountConfig?.placeholder\"\n        ></bb-amount-input-ui>\n        <bb-quick-transfer-validation-message\n          id=\"{{ 'amount-errors-' + id }}\"\n          [control]=\"form?.get('amountGroup.amount')\"\n          [validationMessages]=\"amountConfig?.validationMessages\"\n        ></bb-quick-transfer-validation-message>\n      </div>\n      <div class=\"bb-block bb-block--sm\">\n        <button\n          bbButton\n          color=\"primary\"\n          data-role=\"open-confirmation\"\n          [block]=\"true\"\n          i18n=\"Approve button|Transfer the amount@@quick-transfer.button.transfer-now\"\n          type=\"submit\"\n        >\n          Transfer Now\n        </button>\n      </div>\n    </fieldset>\n  </form>\n</div>\n","import {\n  BaseObject,\n  DisabledCombination,\n  FilterState,\n  QuickTransferProductKinds as ProductKinds,\n} from '../models/config.model';\nimport { AccountItem, Arrangement, ExternalAccount } from '../models/items.model';\nimport { Location } from '../models/view.model';\n\nexport const filterByProductKinds = (\n  arrangements: Arrangement[] | undefined,\n  productKinds: ProductKinds[] | undefined,\n): Array<Arrangement> => {\n  const _arrangements = arrangements || [];\n\n  return _arrangements.filter((arrangement: Arrangement) =>\n    productKinds ? productKinds.includes(arrangement.productKindName as ProductKinds) : true,\n  );\n};\n\n/**\n * @deprecated since version 1.1.0, use `mapItems` instead\n */\nexport const filterByOtherProps = (arrangements: Arrangement[], filters: FilterState[] | undefined): Arrangement[] => {\n  const _arrangements = arrangements || [];\n\n  return _arrangements.filter((arr: Arrangement) =>\n    filters && filters.length\n      ? filters.every(({ key, value }: FilterState) => {\n          return value.some(v => arr.defaultRecord && v === (arr.defaultRecord as BaseObject<any>)[key]);\n        })\n      : true,\n  );\n};\n\nexport const filterByDisabledCombinations = (\n  arrangements: Array<Arrangement | ExternalAccount> | undefined,\n  counterPartyAccount: Arrangement | AccountItem | undefined,\n  disabledCombinations: DisabledCombination[] | undefined,\n  location: Location,\n): Array<Arrangement | ExternalAccount> => {\n  if (!arrangements) return [];\n  const combinations = disabledCombinations || [];\n  // Disable a transfer from connected to connected and connected to contacts account by default\n  combinations.push({\n    from: ProductKinds.connectedAccounts,\n    to: ProductKinds.connectedAccounts,\n  });\n  combinations.push({ from: ProductKinds.connectedAccounts, to: ProductKinds.contacts });\n\n  const disabledProductKinds = combinations\n    .filter((i: DisabledCombination) => {\n      return location === Location.FROM\n        ? i.to === counterPartyAccount?.productKindName\n        : i.from === counterPartyAccount?.productKindName;\n    })\n    .map(i => (location === Location.FROM ? i.from : i.to));\n\n  return arrangements.filter(arr => !disabledProductKinds.includes(arr.productKindName as ProductKinds));\n};\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, pluck, take, withLatestFrom } from 'rxjs/operators';\nimport { FROM_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferProductKinds as ProductKinds } from '../../models/config.model';\nimport { AccountItem, Arrangement, ExternalAccount } from '../../models/items.model';\nimport { LoadingState } from '../../models/state.model';\nimport { Location, ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { filterByDisabledCombinations } from '../../utils/arrangement-filter';\nimport { BaseAccountSelectorComponent } from '../account-selector-base/account-selector-base.component';\n\n@Component({\n  selector: 'bb-quick-transfer-from-account-ui',\n  templateUrl: './quick-transfer-from-account.component.html',\n  providers: [QuickTransferStoreService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickTransferFromAccountComponent extends BaseAccountSelectorComponent implements OnInit, AfterViewInit {\n  constructor(readonly store: QuickTransferStoreService) {\n    super(store);\n  }\n  /**\n   * Stream of fromAccount\n   */\n  readonly fromAccountId$: Observable<string | undefined> = this.store.fromAccount$.pipe(\n    filter(Boolean),\n    pluck('uuid'),\n  );\n  /**\n   * Stream of toPayee\n   */\n  readonly selectedToPayee$: Observable<AccountItem | undefined> = this.store.toPayee$.pipe(take(1));\n\n  /**\n   * Selector of the to account button to be focused\n   */\n  fromAccountSelector = FROM_ACCOUNT;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n\n  @ViewChild('back') backbutton!: ElementRef;\n\n  ngAfterViewInit() {\n    this.backbutton.nativeElement.focus({ preventScroll: true });\n  }\n\n  /**\n   * Method to handle selecting from account\n   *\n   * @param id\n   */\n  handleSelectFrom(id: string) {\n    this.store.selectFromAccount(id);\n  }\n\n  /**\n   * If not yet called the accounts API call it\n   */\n  ngOnInit() {\n    const { fields, disabledCombinations } = this.config || {};\n    const { productKinds } = fields?.fromAccount || {};\n\n    combineLatest([this.extAccountsCallState$, this.accountsCallState$])\n      .pipe(take(1))\n      .subscribe(([extAccountsState, accountsState]) => {\n        if (extAccountsState === LoadingState.INIT && productKinds?.includes(ProductKinds.connectedAccounts)) {\n          this.getExtAccounts();\n        }\n        if (accountsState === LoadingState.INIT) this.getAccounts();\n      });\n\n    this.accounts$ = this.store.debitAccounts$.pipe(\n      take(1),\n      withLatestFrom(this.selectedToPayee$.pipe(take(1))),\n      map(\n        ([accounts, toPayee]) =>\n          filterByDisabledCombinations(accounts, toPayee, disabledCombinations, Location.FROM) as Arrangement[],\n      ),\n    );\n\n    this.extAccounts$ = this.store.extAccounts$.pipe(\n      withLatestFrom(this.selectedToPayee$.pipe(take(1))),\n      map(\n        ([accounts, toPayee]) =>\n          filterByDisabledCombinations(accounts, toPayee, disabledCombinations, Location.FROM) as ExternalAccount[],\n      ),\n    );\n  }\n}\n","<div class=\"bb-quick-transfer__view\">\n  <div class=\"bb-quick-transfer__heading bb-stack bb-quick-transfer__heading--border\" data-role=\"from-account-header\">\n    <button\n      (click)=\"backToForm(fromAccountSelector)\"\n      bbButton\n      aria-label=\"back to form\"\n      i18-aria-label=\"Back button|Quick transfer back button@@quick-transfer.fromaccount.back.button\"\n      color=\"unstyled\"\n      class=\"bb-stack__item btn-unstyled--focusable bb-block bb-block--lg\"\n      #back\n    >\n      <bb-icon-ui name=\"arrow-back\"></bb-icon-ui>\n    </button>\n    <bb-header-ui\n      class=\"bb-stack__item\"\n      headingClasses=\"h3 bb-block bb-block--lg\"\n      [heading]=\"config?.titles?.[viewState.FROM]\"\n      headingType=\"h2\"\n    ></bb-header-ui>\n  </div>\n  <div class=\"bb-quick-transfer__tabs-content scrollable-box-content\" data-role=\"from-account\">\n    <ng-container\n      *ngIf=\"{ internal: accountsCallState$ | async, external: extAccountsCallState$ | async } as callStates\"\n    >\n      <ng-container *ngIf=\"callStates.internal && callStates.external\">\n        <ng-container [ngSwitch]=\"true\">\n          <ng-container\n            *ngSwitchCase=\"callStates.internal === loadingstate.LOADING && callStates.external === loadingstate.LOADING\"\n          >\n            <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"!!callStates.internal['error'] && !!callStates.external['error']\">\n            <ng-container *ngTemplateOutlet=\"errorCase\"></ng-container>\n          </ng-container>\n          <ng-container *ngSwitchDefault>\n            <ng-container *ngIf=\"callStates.internal !== loadingstate.LOADING; else loadingState\">\n              <ng-container *ngIf=\"callStates.internal === loadingstate.LOADED\">\n                <div *ngIf=\"accounts$ | async as accounts\">\n                  <bb-quick-transfer-accounts-ui\n                    data-role=\"internal-accounts\"\n                    [arrangements]=\"accounts\"\n                    (select)=\"handleSelectFrom($event)\"\n                    [selected]=\"fromAccountId$ | async\"\n                    [selectedCounterPartyAccount]=\"(selectedToPayee$ | async)?.uuid\"\n                    [config]=\"config\"\n                  ></bb-quick-transfer-accounts-ui>\n                </div>\n              </ng-container>\n              <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.internal['error']\">\n                <bb-icon-ui\n                  name=\"error-outline\"\n                  size=\"md\"\n                  class=\"bb-stack__item bb-stack__item--align-top\"\n                ></bb-icon-ui>\n                <div class=\"bb-subtitle\">\n                  <span i18n=\"Fetch accounts error|Fetch accounts error@@quick-transfer.fetch-accounts.error-message\">\n                    We could not retrieve data for your internal accounts.</span\n                  >\n                  <br />\n                  <button\n                    bbButton\n                    color=\"link-text\"\n                    data-role=\"reload-accounts\"\n                    (click)=\"getAccounts()\"\n                    i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                  >\n                    Reload\n                  </button>\n                </div>\n              </div>\n            </ng-container>\n\n            <div *ngIf=\"callStates.external !== loadingstate.LOADED || (extAccounts$ | async) as extAccounts\">\n              <h3\n                class=\"bb-subheader bb-text-support bb-quick-transfer__subheader bb-block bb-block--no-margin bb-inline-stack h4\"\n                *ngIf=\"\n                  (extAccounts.length || callStates.external !== loadingstate.LOADED) &&\n                  config?.fields?.fromAccount?.connectedAccountsSubHeader as subHeader\n                \"\n              >\n                <bb-icon-ui name=\"insert-link\" cropped class=\"bb-inline-stack__item--spacing-sm\"></bb-icon-ui>\n                <span\n                  data-role=\"external-accounts-header\"\n                  i18n=\"\n                    Account type subheader|Quick transfer 'connected accounts' type\n                    subheader@@quick-transfer.from.account-type-subheader\"\n                >\n                  {{ subHeader }}\n                </span>\n              </h3>\n              <ng-container *ngIf=\"callStates.external !== loadingstate.LOADING; else loadingState\">\n                <bb-quick-transfer-accounts-ui\n                  data-role=\"external-accounts\"\n                  *ngIf=\"callStates.external === loadingstate.LOADED\"\n                  [arrangements]=\"extAccounts\"\n                  (select)=\"handleSelectFrom($event)\"\n                  [selected]=\"fromAccountId$ | async\"\n                  [config]=\"config\"\n                ></bb-quick-transfer-accounts-ui>\n                <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.external['error']\">\n                  <bb-icon-ui\n                    name=\"error-outline\"\n                    size=\"md\"\n                    class=\"bb-stack__item bb-stack__item--align-top\"\n                  ></bb-icon-ui>\n                  <div class=\"bb-subtitle\">\n                    <span\n                      i18n=\"\n                        Fetch external accounts error|Fetch external accounts\n                        error@@quick-transfer.fetch-external-accounts.error-message\"\n                    >\n                      We could not retrieve data for your external accounts.</span\n                    >\n                    <br />\n                    <button\n                      bbButton\n                      color=\"link-text\"\n                      data-role=\"reload-accounts\"\n                      (click)=\"getExtAccounts()\"\n                      i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                    >\n                      Reload\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n            </div>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #loadingState let-size=\"$implicit\">\n  <div class=\"bb-loading-indicator\">\n    <bb-loading-indicator-ui [loaderSize]=\"size || 'sm'\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n<ng-template #errorCase>\n  <div class=\"bb-quick-transfer__heading\">\n    <div class=\"bb-state-container\" data-role=\"double-error-state\">\n      <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n      <bb-empty-state-ui\n        title=\"No data retrieved\"\n        class=\"bb-block bb-block--md\"\n        iconClasses=\"\"\n        iconSize=\"xxl\"\n        message=\"We could not retrieve data for your accounts.\"\n        i18n-message=\"Could not retrieve data|Fetch accounts error@@quick-transfer.fetch-data.error-message\"\n        iconModifier=\"error-outline\"\n      ></bb-empty-state-ui>\n      <button\n        bbButton\n        buttonSize=\"sm\"\n        color=\"primary\"\n        (click)=\"getAccounts(); getExtAccounts()\"\n        data-role=\"reload-accounts\"\n        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n      >\n        Reload\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { tabsAnim } from '@backbase/ui-ang/util';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, pluck, take, withLatestFrom } from 'rxjs/operators';\nimport { TO_ACCOUNT } from '../../constants/component-selectors';\nimport { QuickTransferProductKinds as ProductKinds } from '../../models/config.model';\nimport { AccountItem, Contact, ExternalAccount } from '../../models/items.model';\nimport { CallState, LoadingState } from '../../models/state.model';\nimport { Location, ViewState } from '../../models/view.model';\nimport { QuickTransferStoreService } from '../../store/store.service';\nimport { filterByDisabledCombinations } from '../../utils/arrangement-filter';\nimport { BaseAccountSelectorComponent } from '../account-selector-base/account-selector-base.component';\n\n@Component({\n  selector: 'bb-quick-transfer-to-account-ui',\n  templateUrl: './quick-transfer-to-account.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [tabsAnim],\n})\nexport class QuickTransferToAccountComponent extends BaseAccountSelectorComponent implements OnInit, AfterViewInit {\n  /**\n   * Show My Accounts or Contacts tabs, It is My Accounts by default\n   */\n  selectedTab = 0;\n  /**\n   * Stream of contacts\n   */\n  readonly contacts$: Observable<Contact[] | undefined> = this.store.contacts$;\n  /**\n   * Stream of toPayee\n   */\n  readonly selectedToPayeeId$: Observable<string> = this.store.toPayee$.pipe(filter(Boolean), pluck('uuid'));\n  /**\n   * Stream of fromAccount\n   */\n  readonly selectedFromAccount$: Observable<AccountItem | undefined> = this.store.fromAccount$.pipe(take(1));\n  /**\n   * Stream of contactsCallState\n   */\n  readonly contactsCallState$: Observable<CallState | undefined> = this.store.contactsCallState$;\n  /**\n   * Stream to indicate if contacts are going to be rendered\n   */\n  renderContacts$ = this.selectedFromAccount$.pipe(\n    map(account => {\n      const { toAccount } = this.config?.fields || {};\n      const { connectedAccounts, contacts } = ProductKinds;\n      const isCounterPartyConnectedAccount = account?.productKindName === connectedAccounts;\n      const isContactsSetInConfig = toAccount?.productKinds ? toAccount?.productKinds.includes(contacts) : true;\n      return !isCounterPartyConnectedAccount && isContactsSetInConfig;\n    }),\n  );\n  /**\n   * Selector of the to account button to be focused\n   */\n  toAccountSelector = TO_ACCOUNT;\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n\n  @ViewChild('back') backbutton!: ElementRef;\n\n  constructor(readonly store: QuickTransferStoreService) {\n    super(store);\n  }\n  /**\n   * If not yet called the contacts, accounts and external accounts API call it\n   */\n  ngOnInit() {\n    const { fields, disabledCombinations } = this.config || {};\n    const { productKinds } = fields?.toAccount || {};\n\n    combineLatest([this.extAccountsCallState$, this.accountsCallState$])\n      .pipe(take(1))\n      .subscribe(([extAccountsState, accountsState]) => {\n        if (extAccountsState === LoadingState.INIT && productKinds?.includes(ProductKinds.connectedAccounts)) {\n          this.getExtAccounts();\n        }\n        if (accountsState === LoadingState.INIT) this.getAccounts();\n      });\n\n    this.accounts$ = this.store.creditAccounts$.pipe(\n      take(1),\n      withLatestFrom(this.selectedFromAccount$),\n      map(([accounts, fromAccount]) =>\n        filterByDisabledCombinations(accounts, fromAccount, disabledCombinations, Location.TO),\n      ),\n    );\n\n    this.extAccounts$ = this.store.extAccounts$.pipe(\n      withLatestFrom(this.selectedFromAccount$),\n      map(\n        ([accounts, fromAccount]) =>\n          filterByDisabledCombinations(accounts, fromAccount, disabledCombinations, Location.TO) as ExternalAccount[],\n      ),\n    );\n  }\n\n  ngAfterViewInit() {\n    this.backbutton.nativeElement.focus({ preventScroll: true });\n  }\n\n  /**\n   * Method to switch tabs\n   *\n   * @param ev\n   */\n  onTabSelect(ev: number) {\n    this.selectedTab = ev;\n    if (ev === 1) {\n      this.contactsCallState$\n        .pipe(\n          take(1),\n          filter(s => s === LoadingState.INIT),\n        )\n        .subscribe(() => {\n          this.getContacts();\n        });\n    }\n  }\n  /**\n   * Method to set payee\n   *\n   * @param id\n   */\n  pickPayee(id: string) {\n    this.store.setPayee(id);\n  }\n  /**\n   * Method to dispatch store action for fetching contacts\n   */\n  getContacts() {\n    this.store.fetchContacts();\n  }\n}\n","<div class=\"bb-quick-transfer__view\">\n  <div\n    class=\"bb-quick-transfer__heading bb-stack\"\n    [class.bb-quick-transfer__heading--border]=\"!(renderContacts$ | async)\"\n    data-role=\"to-account-header\"\n  >\n    <button\n      (click)=\"backToForm(toAccountSelector)\"\n      bbButton\n      aria-label=\"back to form\"\n      i18-aria-label=\"Back button|Quick transfer back button@@quick-transfer.to-account.back.button\"\n      color=\"unstyled\"\n      class=\"bb-stack__item btn-unstyled--focusable bb-block bb-block--xs\"\n      [class.bb-stack__item--align-top]=\"!(renderContacts$ | async)\"\n      #back\n    >\n      <bb-icon-ui name=\"arrow-back\"></bb-icon-ui>\n    </button>\n    <bb-header-ui\n      class=\"bb-stack__item\"\n      headingClasses=\"bb-block bb-block--{{ (renderContacts$ | async) ? 'sm' : 'lg' }} h3\"\n      [heading]=\"config?.titles?.[viewState.PAYEE]\"\n      headingType=\"h2\"\n    ></bb-header-ui>\n  </div>\n  <div class=\"bb-quick-transfer__tabs-container\">\n    <bb-tab-group-ui *ngIf=\"renderContacts$ | async\" [initialSelection]=\"0\" (select)=\"onTabSelect($event)\">\n      <bb-tab-ui\n        data-role=\"account-tab-header\"\n        i18n=\"Tab header for to-accounts|Quick transfer 'my accounts' tab header@@quick-transfer.to.tabs.account-header\"\n        >My Accounts</bb-tab-ui\n      >\n      <bb-tab-ui\n        data-role=\"contacts-tab-header\"\n        i18n=\"Tab header for to-contacts|Quick transfer 'contacts' tab header@@quick-transfer.to.tabs.contact-header\"\n        >Contacts</bb-tab-ui\n      >\n    </bb-tab-group-ui>\n    <div class=\"bb-quick-transfer__tabs-content scrollable-box-content\" [@tabsAnimation]=\"selectedTab\">\n      <div *ngIf=\"selectedTab === 0\" data-role=\"quick-transfer-accounts-tab\">\n        <ng-container\n          *ngIf=\"{ internal: accountsCallState$ | async, external: extAccountsCallState$ | async } as callStates\"\n        >\n          <ng-container *ngIf=\"callStates.internal && callStates.external\">\n            <ng-container [ngSwitch]=\"true\">\n              <ng-container\n                *ngSwitchCase=\"\n                  callStates.internal === loadingstate.LOADING && callStates.external === loadingstate.LOADING\n                \"\n              >\n                <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n              </ng-container>\n              <ng-container *ngSwitchCase=\"!!callStates.internal['error'] && !!callStates.external['error']\">\n                <ng-container *ngTemplateOutlet=\"errorCase\"></ng-container>\n              </ng-container>\n              <ng-container *ngSwitchDefault>\n                <ng-container *ngIf=\"callStates.internal !== loadingstate.LOADING; else loadingState\">\n                  <ng-container *ngIf=\"callStates.internal === loadingstate.LOADED\">\n                    <div *ngIf=\"accounts$ | async as accounts\">\n                      <bb-quick-transfer-accounts-ui\n                        data-role=\"internal-accounts\"\n                        [arrangements]=\"accounts\"\n                        (select)=\"pickPayee($event)\"\n                        [selected]=\"selectedToPayeeId$ | async\"\n                        [selectedCounterPartyAccount]=\"(selectedFromAccount$ | async)?.uuid\"\n                        [config]=\"config\"\n                      ></bb-quick-transfer-accounts-ui>\n                    </div>\n                  </ng-container>\n                  <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.internal['error']\">\n                    <bb-icon-ui\n                      name=\"error-outline\"\n                      size=\"md\"\n                      class=\"bb-stack__item bb-stack__item--align-top\"\n                    ></bb-icon-ui>\n                    <div class=\"bb-subtitle\">\n                      <span\n                        i18n=\"Fetch accounts error|Fetch accounts error@@quick-transfer.fetch-accounts.error-message\"\n                      >\n                        We could not retrieve data for your internal accounts.</span\n                      >\n                      <br />\n                      <button\n                        bbButton\n                        color=\"link-text\"\n                        data-role=\"reload-accounts\"\n                        (click)=\"getAccounts()\"\n                        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                      >\n                        Reload\n                      </button>\n                    </div>\n                  </div>\n                </ng-container>\n\n                <div *ngIf=\"callStates.external !== loadingstate.LOADED || (extAccounts$ | async) as extAccounts\">\n                  <h3\n                    class=\"bb-subheader bb-text-support bb-quick-transfer__subheader bb-block bb-block--no-margin bb-inline-stack\"\n                    *ngIf=\"\n                      (extAccounts.length || callStates.external !== loadingstate.LOADED) &&\n                      config?.fields?.toAccount?.connectedAccountsSubHeader as subHeader\n                    \"\n                  >\n                    <bb-icon-ui name=\"insert-link\" cropped class=\"bb-inline-stack__item--spacing-sm\"></bb-icon-ui>\n                    <span\n                      data-role=\"external-accounts-header\"\n                      i18n=\"\n                        Account type subheader|Quick transfer 'connected accounts' type\n                        subheader@@quick-transfer.to.account-type-subheader\"\n                    >\n                      {{ subHeader }}\n                    </span>\n                  </h3>\n                  <ng-container *ngIf=\"callStates.external !== loadingstate.LOADING; else loadingState\">\n                    <bb-quick-transfer-accounts-ui\n                      data-role=\"external-accounts\"\n                      *ngIf=\"callStates.external === loadingstate.LOADED\"\n                      [arrangements]=\"extAccounts\"\n                      (select)=\"pickPayee($event)\"\n                      [selected]=\"selectedToPayeeId$ | async\"\n                      [config]=\"config\"\n                    ></bb-quick-transfer-accounts-ui>\n                    <div class=\"bb-quick-transfer__subheader bb-stack\" *ngIf=\"callStates.external['error']\">\n                      <bb-icon-ui\n                        name=\"error-outline\"\n                        size=\"md\"\n                        class=\"bb-stack__item bb-stack__item--align-top\"\n                      ></bb-icon-ui>\n                      <div class=\"bb-subtitle\">\n                        <span\n                          i18n=\"\n                            Fetch external accounts error|Fetch external accounts\n                            error@@quick-transfer.fetch-external-accounts.error-message\"\n                        >\n                          We could not retrieve data for your external accounts.</span\n                        >\n                        <br />\n                        <button\n                          bbButton\n                          color=\"link-text\"\n                          data-role=\"reload-accounts\"\n                          (click)=\"getExtAccounts()\"\n                          i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                        >\n                          Reload\n                        </button>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div *ngIf=\"selectedTab === 1\" data-role=\"quick-transfer-contacts-tab\">\n        <ng-container *ngIf=\"contactsCallState$ | async as contactsCallState\">\n          <ng-container [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"contactsCallState === loadingstate.LOADED\">\n              <div *ngIf=\"contacts$ | async as contacts\">\n                <bb-quick-transfer-accounts-ui\n                  [arrangements]=\"contacts\"\n                  (select)=\"pickPayee($event)\"\n                  [selected]=\"selectedToPayeeId$ | async\"\n                  [config]=\"config\"\n                ></bb-quick-transfer-accounts-ui>\n              </div>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"contactsCallState === loadingstate.LOADING\">\n              <ng-container *ngTemplateOutlet=\"loadingState; context: { $implicit: 'md' }\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"!!contactsCallState.error\">\n              <div class=\"bb-quick-transfer__heading\">\n                <div class=\"bb-state-container\" data-role=\"contacts-error-state\">\n                  <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n                  <bb-empty-state-ui\n                    title=\"No data retrieved\"\n                    class=\"bb-block bb-block--md\"\n                    iconClasses=\"\"\n                    iconSize=\"xxl\"\n                    message=\"We could not retrieve data for your contacts.\"\n                    i18n-message=\"\n                      Could not retrieve contacts|Fetch contacts error@@quick-transfer.fetch-contacts.error-message\"\n                    iconModifier=\"error-outline\"\n                  ></bb-empty-state-ui>\n                  <button\n                    bbButton\n                    buttonSize=\"sm\"\n                    color=\"primary\"\n                    (click)=\"getContacts()\"\n                    data-role=\"reload-accounts\"\n                    i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n                  >\n                    Reload\n                  </button>\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #loadingState let-size=\"$implicit\">\n  <div class=\"bb-loading-indicator\">\n    <bb-loading-indicator-ui [loaderSize]=\"size || 'sm'\"></bb-loading-indicator-ui>\n  </div>\n</ng-template>\n<ng-template #errorCase>\n  <div class=\"bb-quick-transfer__heading\">\n    <div class=\"bb-state-container\" data-role=\"double-error-state\">\n      <!-- Use empty string for iconClasses to overwrite its default value 'text-muted' -->\n      <bb-empty-state-ui\n        title=\"No data retrieved\"\n        class=\"bb-block bb-block--md\"\n        iconClasses=\"\"\n        message=\"We could not retrieve data for your accounts.\"\n        i18n-message=\"Could not retrieve data|Fetch accounts error@@quick-transfer.fetch-data.error-message\"\n        iconModifier=\"error-outline\"\n      ></bb-empty-state-ui>\n      <button\n        bbButton\n        buttonSize=\"sm\"\n        color=\"primary\"\n        (click)=\"getAccounts(); getExtAccounts()\"\n        data-role=\"reload-accounts\"\n        i18n=\"Reload button|Reload accounts@@quick-transfer.button.reload-accounts\"\n      >\n        Reload\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { animate, animation, style, transition, trigger, useAnimation } from '@angular/animations';\n\nconst timing = '200ms ease-in';\nconst distances = {\n  normalX: 'translateX(0%)',\n  right: 'translateX(100%)',\n  left: 'translateX(-100%)',\n  normalY: 'translateY(0%)',\n  bottom: 'translateY(100%)',\n};\n\nconst slideAnimation = animation([\n  style({\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    transform: '{{from}}',\n    display: 'block',\n    top: 0,\n  }),\n  animate(timing, style({ transform: '{{to}}' })),\n]);\n\nexport function slide2D(from: string, to: string) {\n  return [\n    transition(':enter', [\n      useAnimation(slideAnimation, {\n        params: { from, to },\n      }),\n    ]),\n    transition(':leave', [\n      useAnimation(slideAnimation, {\n        params: { from: to, to: from },\n      }),\n    ]),\n  ];\n}\n\n// used to animate account selector view\nexport const slideLeftAnimation = trigger('slideLeft', slide2D(distances.right, distances.normalX));\n\n// used to animate the main view \"form view\"\nexport const slideRightAnimation = trigger('slideRight', slide2D(distances.left, distances.normalX));\n\n// used for transition of the success/fail screen\nexport const slideUpAnimation = trigger('slideUp', slide2D(distances.bottom, distances.normalY));\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport {\n  BaseObject,\n  DisabledCombination,\n  PaymentTypes,\n  QuickTransferAmountField as AmountField,\n  QuickTransferField as Field,\n  QuickTransferFields,\n  QuickTransferJourneyConfiguration,\n  QuickTransferProductKinds as ProductKinds,\n  Titles,\n  UiComponentProps,\n} from '../models/config.model';\nimport { Arrangement, Contact } from '../models/items.model';\nimport { ViewState } from '../models/view.model';\nimport { nonZeroValidator } from '../utils/helpers';\n\nconst fromAccount: Field = {\n  productKinds: [\n    ProductKinds.savingsAccount,\n    ProductKinds.currentAccount,\n    ProductKinds.creditCard,\n    ProductKinds.loanAccount,\n    ProductKinds.connectedAccounts,\n  ],\n  label: $localize`:@@quick-transfer.form.label:From`,\n  mapItems: accounts => {\n    return accounts.filter((account: Arrangement) => ['EUR', 'AED', 'USD'].includes(account?.currency || ''));\n  },\n  connectedAccountsSubHeader: $localize`:@@quick-transfer-initiator-connected-acc-subheader:Connected Accounts`,\n  validators: [Validators.required],\n  validationMessages: [\n    {\n      name: 'required',\n      message: $localize`:@@quick-transfer-initiator-validation-required:Account is required`,\n    },\n  ],\n};\n\nconst toAccount: Field = {\n  productKinds: [\n    ProductKinds.savingsAccount,\n    ProductKinds.currentAccount,\n    ProductKinds.creditCard,\n    ProductKinds.loanAccount,\n    ProductKinds.connectedAccounts,\n    ProductKinds.contacts,\n  ],\n  label: $localize`:@@quick-transfer.to.label:To`,\n  mapContacts: (contacts: Contact[]) => contacts.filter(contact => !!contact.number),\n  connectedAccountsSubHeader: $localize`:@@quick-transfer-counterparty-connected-acc-subheader:Connected Accounts`,\n  validators: [Validators.required],\n  validationMessages: [\n    {\n      name: 'required',\n      message: $localize`:@@quick-transfer-counterparty-validation-required:Beneficiary is required`,\n    },\n  ],\n};\n\nconst amount: AmountField = {\n  initialCurrency: 'USD',\n  autoDecimal: true,\n  placeholder: '0.00',\n  wrapperClasses: 'bb-amount-input__field--large',\n  label: $localize`:@@quick-transfer.amount.label:Amount`,\n  validationMessages: [\n    {\n      name: 'nonZero',\n      message: $localize`:@@quick-transfer-counterparty-validation-invalid-amount:Transfer amount is required`,\n    },\n  ],\n  validators: [nonZeroValidator],\n};\n\nconst configDefaults: QuickTransferJourneyConfiguration = {\n  fields: { fromAccount, toAccount, amount },\n  businessFunction: 'A2A Transfer',\n  titles: {\n    [ViewState.FORM]: $localize`:@@quick-transfer-journey.title:Quick Transfer`,\n    [ViewState.FROM]: $localize`:@@quick-transfer-journey.initiator-title:Transfer from`,\n    [ViewState.PAYEE]: $localize`:@@quick-transfer-journey.counterparty-title:Transfer to`,\n    [ViewState.REVIEW]: $localize`:@@quick-transfer-journey.review-title:Quick Transfer`,\n  },\n  paymentTypes: {\n    internal: 'INTERNAL_TRANSFER',\n    external: 'EXTERNAL_A2A',\n    contact: 'INTRABANK_TRANSFER',\n  },\n  disabledCombinations: [\n    { from: ProductKinds.loanAccount, to: ProductKinds.loanAccount },\n    { from: ProductKinds.creditCard, to: ProductKinds.creditCard },\n  ],\n  uiComponentProps: {\n    mapCurrency: true,\n    accountNumberFormat: {\n      segments: 0,\n      length: 0,\n      maskRange: [0, 0],\n    },\n  },\n};\n\nexport const QuickTransferJourneyConfigurationToken = new InjectionToken<QuickTransferJourneyConfiguration>(\n  'QuickTransferJourneyConfigurationToken injection token',\n);\n\n@Injectable()\nexport class QuickTransferJourneyConfigService {\n  private _config: QuickTransferJourneyConfiguration;\n\n  constructor(\n    @Optional()\n    @Inject(QuickTransferJourneyConfigurationToken)\n    private readonly config: QuickTransferJourneyConfiguration,\n  ) {\n    this._config = { ...configDefaults, ...(this.config || {}) };\n  }\n\n  get defaults(): QuickTransferJourneyConfiguration {\n    return configDefaults;\n  }\n\n  get fields(): QuickTransferFields {\n    return this._config.fields;\n  }\n\n  get businessFunction(): string | undefined {\n    return this._config.businessFunction;\n  }\n\n  get paymentTypes(): PaymentTypes {\n    return this._config.paymentTypes;\n  }\n\n  get disabledCombinations(): DisabledCombination[] {\n    return this._config.disabledCombinations;\n  }\n\n  get productSummaryQueryParameters(): BaseObject<any> | undefined {\n    return this._config.productSummaryQueryParameters;\n  }\n  get uiComponentProps(): UiComponentProps {\n    return this._config.uiComponentProps;\n  }\n  get titles(): Titles {\n    return this._config.titles;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { fadeInAnimation, slideUpAnimation } from '@backbase/ui-ang/util';\nimport { Observable, Subscription } from 'rxjs';\nimport { concatMap, filter, map, startWith, take, withLatestFrom } from 'rxjs/operators';\nimport { slideLeftAnimation, slideRightAnimation } from './animations';\nimport { Arrangement } from './models/items.model';\nimport { LoadingState } from './models/state.model';\nimport { Location, ViewState } from './models/view.model';\nimport { QuickTransferJourneyConfigService } from './services/config.service';\nimport { QuickTransferStoreService } from './store/store.service';\nimport { filterByDisabledCombinations } from './utils/arrangement-filter';\nimport { getRouteParams } from './utils/helpers';\n\n@Component({\n  selector: 'bb-quick-transfer-journey',\n  templateUrl: 'quick-transfer-journey.component.html',\n  providers: [QuickTransferJourneyConfigService, QuickTransferStoreService],\n  animations: [slideRightAnimation, slideLeftAnimation, fadeInAnimation, slideUpAnimation],\n})\nexport class QuickTransferJourneyComponent implements OnInit, OnDestroy {\n  subscription$ = new Subscription();\n  /**\n   * Enum for current View\n   */\n  readonly viewState = ViewState;\n  /**\n   * Stream of the current view\n   */\n  readonly currentView$: Observable<ViewState | undefined> = this.store.currentView$;\n\n  /**\n   * Success image path\n   */\n  readonly successImg = 'assets/bb-quick-transfer-widget-ang/succeed.svg';\n  /**\n   * Fail image path\n   */\n  readonly successImgNoMotion = 'assets/bb-quick-transfer-widget-ang/no-motion.svg';\n\n  constructor(\n    private readonly store: QuickTransferStoreService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    readonly config: QuickTransferJourneyConfigService,\n  ) {}\n\n  ngOnInit() {\n    this.subscription$ = this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        startWith(getRouteParams(this.activatedRoute.root)),\n        withLatestFrom(this.store.touchedFields$, this.store.accountsCallState$),\n        map(([_, touchedFields, callState]) => {\n          if (callState === LoadingState.INIT) this.store.fetchAccounts();\n          return !touchedFields?.includes('fromAccount'); // Indicate if there is already selected account by user\n        }),\n        filter(Boolean),\n        concatMap(() => this.applyDisabledCombination(getRouteParams(this.activatedRoute.root).selectedAccount)),\n      )\n      .subscribe(() => {\n        const selectedAccountId = getRouteParams(this.activatedRoute.root).selectedAccount;\n        this.store.selectFromAccount(selectedAccountId);\n      });\n    this.store.updateDefaultCurrency(this.config.fields?.amount?.initialCurrency);\n  }\n\n  ngOnDestroy() {\n    this.store.reset();\n    this.subscription$.unsubscribe();\n  }\n\n  /**\n   * Apply disabled combination filtration for selected product summary item in app level\n   */\n  applyDisabledCombination(id: string) {\n    const { disabledCombinations } = this.config || {};\n    return this.store.debitAccounts$.pipe(\n      filter(Boolean),\n      take(1),\n      withLatestFrom(this.store.toPayee$),\n      map(([acc, toPayee]) => {\n        const _accounts = filterByDisabledCombinations(\n          acc as Arrangement[],\n          toPayee,\n          disabledCombinations,\n          Location.FROM,\n        );\n        return _accounts.some((item: Arrangement) => item.uuid === id);\n      }),\n      filter(Boolean),\n    );\n  }\n}\n","<div class=\"bb-quick-transfer\" *ngIf=\"currentView$ | async as currentView\">\n  <bb-quick-transfer-form-ui\n    [config]=\"config\"\n    *ngIf=\"currentView === viewState.FORM || currentView === viewState.COMPLETE as formView\"\n    [@slideRight]\n  ></bb-quick-transfer-form-ui>\n  <bb-quick-transfer-from-account-ui\n    *ngIf=\"currentView === viewState.FROM as fromView\"\n    [config]=\"config\"\n    [@slideLeft]\n  ></bb-quick-transfer-from-account-ui>\n  <bb-quick-transfer-to-account-ui\n    *ngIf=\"currentView === viewState.PAYEE as payeeView\"\n    [config]=\"config\"\n    [@slideLeft]\n  ></bb-quick-transfer-to-account-ui>\n  <div class=\"bb-quick-transfer__success-overlay\" *ngIf=\"currentView === viewState.COMPLETE\" [@fadeIn]></div>\n  <bb-quick-transfer-complete-ui\n    *ngIf=\"currentView === viewState.COMPLETE\"\n    [successImg]=\"successImg\"\n    [successImgNoMotion]=\"successImgNoMotion\"\n    [config]=\"config\"\n    [@slideUp]\n  ></bb-quick-transfer-complete-ui>\n\n  <bb-quick-transfer-confirmation-modal-ui\n    [paymentTypes]=\"config.paymentTypes\"\n    [config]=\"config\"\n  ></bb-quick-transfer-confirmation-modal-ui>\n</div>\n","export const RESOURCE_NAME = 'Payments';\nexport const PRIVILEGE = 'create';\nexport const LIST_SIZE = 1000000;\nexport const EXTERNAL_ID = 'EXTERNAL_ID';\nexport const FROM_PAGES = 0;\nexport const PAGE_SIZE = 100;\n","import { ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { Arrangement } from '../models/items.model';\n\n/**\n * Method to extract ProductKind array from ProductsummaryGET response\n *\n * @param res\n */\nexport const responseToProductList = (res: ProductSummaryItem[]): Arrangement[] => {\n  return res?.map(record => {\n    let balance: number | undefined;\n    switch (record.productKindName) {\n      case 'Term Deposit':\n        balance = record.principalAmount;\n        break;\n      case 'Investment Account':\n        balance = record.currentInvestmentValue;\n        break;\n      default:\n        balance = record.bookedBalance;\n        break;\n    }\n\n    return {\n      uuid: record.id,\n      balance: balance || 0,\n      name: record.displayName,\n      currency: record.currency,\n      number: record.IBAN || record.BBAN || record.BIC || record.number,\n      externalTransferAllowed: record.externalTransferAllowed,\n      productKindName: record.productKindName,\n      defaultRecord: record,\n    } as Arrangement;\n  });\n};\n","import { Injectable, OnDestroy, Optional } from '@angular/core';\nimport { ProductSummaryHttpService, ProductSummaryItem } from '@backbase/data-ang/arrangements';\nimport { ContactsGetResponseBodyItem, ContactsHttpService } from '@backbase/data-ang/contact-manager';\nimport {\n  PaymentOrdersHttpService,\n  PaymentOrdersPost,\n  PaymentOrdersPostResponse,\n} from '@backbase/data-ang/payment-order';\nimport {\n  A2aClientHttpService,\n  DetailedExternalAccount,\n  ExternalAccountGetResponse,\n} from '@backbase/data-ang/payment-order-a2a';\nimport { CapabilityData, TransactionSigningHelperService } from '@backbase/identity-auth/transaction-signing';\nimport { Observable, of, Subject } from 'rxjs';\nimport { exhaustMap, map, pluck, takeUntil } from 'rxjs/operators';\nimport { FROM_PAGES, PAGE_SIZE, PRIVILEGE, RESOURCE_NAME } from '../constants/accounts-variables';\nimport { QuickTransferProductKinds as ProductKinds } from '../models/config.model';\nimport { Arrangement, Contact, ExternalAccount } from '../models/items.model';\nimport { ProgressStatus } from '../models/state.model';\nimport { QuickTransferJourneyConfigService } from '../services/config.service';\nimport { filterByOtherProps, filterByProductKinds } from '../utils/arrangement-filter';\nimport { responseToProductList } from '../utils/arrangement-mapper';\n\n@Injectable()\nexport class QuickTransferHttpService implements OnDestroy {\n  private destroy$ = new Subject();\n  paymentOrderResponse$ = new Subject<PaymentOrdersPostResponse | undefined>();\n\n  /**\n   * Product Summary default parameters\n   */\n  private productSummaryParameters = {\n    resourceName: RESOURCE_NAME,\n    privilege: PRIVILEGE,\n    from: FROM_PAGES,\n    size: PAGE_SIZE,\n    businessFunction: 'A2A Transfer',\n  };\n\n  constructor(\n    private readonly productSummaryDataHttpService: ProductSummaryHttpService,\n    private readonly contactService: ContactsHttpService,\n    private readonly paymentA2AService: A2aClientHttpService,\n    private readonly paymentOrderService: PaymentOrdersHttpService,\n    @Optional() private readonly transactionSigningHelper: TransactionSigningHelperService,\n    private readonly configService: QuickTransferJourneyConfigService,\n  ) {\n    const { productSummaryQueryParameters, businessFunction } = this.configService || {};\n\n    this.productSummaryParameters = {\n      ...this.productSummaryParameters,\n      ...productSummaryQueryParameters,\n      ...(businessFunction ? { businessFunction } : undefined),\n    };\n  }\n\n  /**\n   * Load debit accounts\n   */\n  getDebitAccounts(): Observable<Arrangement[]> {\n    const { fields } = this.configService || {};\n    const { productKinds, mapItems, otherFilters } = fields?.fromAccount || {};\n    return this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction({\n        ...this.productSummaryParameters,\n        debitAccount: true,\n      })\n      .pipe(\n        map((res: Array<ProductSummaryItem>) => responseToProductList(res)),\n        map(accounts => filterByProductKinds(accounts, productKinds)),\n        map(accounts => filterByOtherProps(accounts, otherFilters) as Arrangement[]),\n        map(accounts => (mapItems && accounts?.length ? mapItems(accounts) : accounts)),\n      );\n  }\n\n  /**\n   * Load credit accounts\n   */\n  getCreditAccounts(): Observable<Arrangement[]> {\n    const { fields } = this.configService || {};\n    const { productKinds, mapItems, otherFilters } = fields?.toAccount || {};\n    return this.productSummaryDataHttpService\n      .getArrangementsByBusinessFunction({\n        ...this.productSummaryParameters,\n        creditAccount: true,\n      })\n      .pipe(\n        map((res: Array<ProductSummaryItem>) => responseToProductList(res)),\n        map(accounts => filterByProductKinds(accounts, productKinds)),\n        map(accounts => filterByOtherProps(accounts, otherFilters) as Arrangement[]),\n        map(accounts => (mapItems && accounts?.length ? mapItems(accounts) : accounts)),\n      );\n  }\n\n  /**\n   * Load contacts\n   */\n  getContacts(): Observable<Contact[]> {\n    const mapContacts = this.configService.fields.toAccount.mapContacts;\n    return this.contactService.getContacts({}).pipe(\n      map((contacts: Array<ContactsGetResponseBodyItem>) =>\n        contacts?.map(\n          contact =>\n            ({\n              uuid: contact.id,\n              name: contact.name,\n              number: contact.accounts[0].accountNumber || contact.accounts[0].IBAN,\n              productKindName: ProductKinds.contacts,\n              defaultRecord: contact,\n            } as Contact),\n        ),\n      ),\n      map(contacts => (mapContacts && contacts?.length ? mapContacts(contacts) : contacts)),\n    );\n  }\n\n  /**\n   * Get external accounts\n   */\n  getExternalAccounts(): Observable<ExternalAccount[] | undefined> {\n    return this.paymentA2AService.getAll().pipe(\n      map((body: ExternalAccountGetResponse) => {\n        if (body.accounts) {\n          return body.accounts\n            .filter(({ status }: DetailedExternalAccount) => status === 'Active')\n            .map(\n              ({ externalAccountId, accountNickName, accountNumber, bankName }: DetailedExternalAccount) =>\n                ({\n                  uuid: externalAccountId,\n                  name: accountNickName || bankName,\n                  number: accountNumber,\n                  productKindName: ProductKinds.connectedAccounts,\n                } as ExternalAccount),\n            );\n        }\n        return;\n      }),\n    );\n  }\n\n  /**\n   * Post method to initiate payment order\n   */\n  sendPaymentOrder(paymentOrdersPost: PaymentOrdersPost): Observable<PaymentOrdersPostResponse | undefined> {\n    return this.paymentOrderService.postPaymentOrders({ paymentOrdersPost }).pipe(\n      exhaustMap(response => {\n        if (this.transactionSigningHelper?.isTransactionSigningResponse(response as CapabilityData)) {\n          this.handleTransactionSigning(response as CapabilityData);\n          return this.paymentOrderResponse$.asObservable();\n        } else {\n          return of(response);\n        }\n      }),\n    );\n  }\n\n  getPaymentProgressStatus(data?: CapabilityData): Observable<string | undefined> {\n    const paymentOrderId = (data?.['payment-order-id'] || '') as string;\n    return this.paymentOrderService\n      .getProgressStatusByPaymentOrderId({ paymentOrderId }, 'body')\n      .pipe(pluck('progressStatus'));\n  }\n\n  handleTransactionSigning(response: CapabilityData) {\n    if (!this.transactionSigningHelper) return;\n    const paymentOrderId = response['payment-order-id'];\n\n    if (paymentOrderId) {\n      this.transactionSigningHelper.getTransactionInfo({\n        data: response,\n        asyncPollingOptions: {\n          pollInterval: 1000,\n          maxRetries: 3,\n          pollUntilFn: this.isPaymentConfirmed,\n          complete$: this.destroy$,\n        },\n        fetchFn: this.getPaymentProgressStatus.bind(this),\n        onSuccess: this.onTransactionSigningSuccess.bind(this, paymentOrderId),\n        onRejected: this.onTransactionFail.bind(this, paymentOrderId),\n        onDeclined: this.onTransactionFail.bind(this),\n        onError: this.onTransactionFail.bind(this),\n      });\n    }\n  }\n\n  isPaymentConfirmed(status: string) {\n    return !!status && status !== ProgressStatus.CONFIRMATION_PENDING && status !== ProgressStatus.SENDING;\n  }\n\n  onTransactionSigningSuccess(paymentOrderId: string) {\n    this.paymentOrderService\n      .getPaymentOrderById({ paymentOrderId }, 'body')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(response => {\n        this.paymentOrderResponse$.next(response);\n      });\n  }\n\n  onTransactionFail() {\n    this.paymentOrderResponse$.next();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, Optional } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\nimport { CommunicationService } from '../communication.service';\nimport { FROM_ACCOUNT, TO_ACCOUNT } from '../constants/component-selectors';\nimport { Contact } from '../models/items.model';\nimport { ProgressStatus } from '../models/state.model';\nimport { ViewState } from '../models/view.model';\nimport { QuickTransferHttpService } from '../services/quick-transfer-http.service';\nimport {\n  accountsFetch,\n  accountsFetchError,\n  accountsFetchSuccess,\n  contactsFetch,\n  contactsFetchError,\n  contactsFetchSuccess,\n  extAccountsFetchError,\n  extAccountsFetchSuccess,\n  externalAccountsFetch,\n  openView,\n  sendTransferOrder,\n  setFromAccount,\n  setPayeeAccount,\n  transferOrderError,\n  transferOrderSuccess,\n} from './actions';\n\n@Injectable()\nexport class QuickTransferEffects {\n  constructor(\n    private actions$: Actions,\n    private readonly httpService: QuickTransferHttpService,\n    @Optional() private communicationService: CommunicationService,\n  ) {}\n\n  fetchAccounts = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(accountsFetch),\n        exhaustMap(() => {\n          return combineLatest([this.httpService.getCreditAccounts(), this.httpService.getDebitAccounts()]).pipe(\n            map(([creditAccounts, debitAccounts]) => accountsFetchSuccess({ debitAccounts, creditAccounts })),\n            catchError(error =>\n              of(accountsFetchError({ error: new HttpErrorResponse({ error: error || 'Accounts Fetch Error' }) })),\n            ),\n          );\n        }),\n      ),\n  );\n\n  fetchContacts = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(contactsFetch),\n        exhaustMap(() => {\n          return this.httpService.getContacts().pipe(\n            map((contacts: Contact[]) => contactsFetchSuccess({ contacts })),\n            catchError(error =>\n              of(contactsFetchError({ error: new HttpErrorResponse({ error: error || 'Contacts Fetch Error' }) })),\n            ),\n          );\n        }),\n      ),\n  );\n\n  fetchExtAccounts = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(externalAccountsFetch),\n        exhaustMap(() => {\n          return this.httpService.getExternalAccounts().pipe(\n            map(extAccounts => extAccountsFetchSuccess({ extAccounts })),\n            catchError(error =>\n              of(\n                extAccountsFetchError({\n                  error: new HttpErrorResponse({ error: error || 'External Accounts Fetch Error' }),\n                }),\n              ),\n            ),\n          );\n        }),\n      ),\n  );\n\n  sendTransferOrder = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(sendTransferOrder),\n        exhaustMap(action => {\n          return this.httpService.sendPaymentOrder(action.reqData).pipe(\n            map(resp => {\n              if (!!resp?.id && resp.status !== ProgressStatus.REJECTED) {\n                if (this.communicationService) {\n                  this.communicationService.transferSucceeded();\n                }\n                return transferOrderSuccess();\n              } else {\n                return transferOrderError({ error: new HttpErrorResponse({ error: 'Transfer Order Post Error' }) });\n              }\n            }),\n            catchError(error => of(transferOrderError({ error }))),\n          );\n        }),\n      ),\n  );\n\n  setPayeeAccount = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(setPayeeAccount),\n        map(() => openView({ view: ViewState.FORM, focus: TO_ACCOUNT })),\n      ),\n  );\n\n  pickFromAccount = createEffect(\n    (): Observable<Action> =>\n      this.actions$.pipe(\n        ofType(setFromAccount),\n        map(() => openView({ view: ViewState.FORM, focus: FROM_ACCOUNT })),\n      ),\n  );\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { initialState } from '../constants/initital-state';\nimport { AccountItem, Arrangement, TransferAmount } from '../models/items.model';\nimport { LoadingState } from '../models/state.model';\nimport { ViewState } from '../models/view.model';\nimport {\n  accountsFetch,\n  accountsFetchError,\n  accountsFetchSuccess,\n  contactsFetch,\n  contactsFetchError,\n  contactsFetchSuccess,\n  extAccountsFetchError,\n  extAccountsFetchSuccess,\n  externalAccountsFetch,\n  openView,\n  resetFocus,\n  resetWidget,\n  sendTransferOrder,\n  setAmount,\n  setDefaultCurrency,\n  setFieldTouched,\n  setFromAccount,\n  setModalOpen,\n  setPayeeAccount,\n  transferOrderError,\n  transferOrderSuccess,\n} from './actions';\n\nfunction onlyUnique(value: any, index: number, self: any[]) {\n  return self.indexOf(value) === index;\n}\n\nexport const quickTransferReducer = createReducer(\n  initialState,\n  on(accountsFetch, state => ({\n    ...state,\n    accountsCallState: LoadingState.LOADING,\n  })),\n  on(accountsFetchError, (state, { error }) => ({\n    ...state,\n    accountsCallState: { error },\n  })),\n  on(accountsFetchSuccess, (state, { debitAccounts, creditAccounts }) => ({\n    ...state,\n    debitAccounts,\n    creditAccounts,\n    accountsCallState: LoadingState.LOADED,\n  })),\n  on(contactsFetch, state => ({\n    ...state,\n    contactsCallState: LoadingState.LOADING,\n  })),\n  on(contactsFetchError, (state, { error }) => ({\n    ...state,\n    contactsCallState: { error },\n  })),\n  on(contactsFetchSuccess, (state, { contacts }) => ({\n    ...state,\n    contacts,\n    contactsCallState: LoadingState.LOADED,\n  })),\n  on(externalAccountsFetch, state => ({\n    ...state,\n    extAccountsCallState: LoadingState.LOADING,\n  })),\n  on(extAccountsFetchSuccess, (state, { extAccounts }) => ({\n    ...state,\n    extAccounts,\n    extAccountsCallState: LoadingState.LOADED,\n  })),\n  on(extAccountsFetchError, (state, { error }) => ({\n    ...state,\n    extAccountsCallState: { error },\n  })),\n  on(setFromAccount, (state, { accountId }) => {\n    const _accounts = [...(state.extAccounts || []), ...(state.debitAccounts || [])];\n    const account = _accounts.find((a: Arrangement) => a.uuid === accountId) || {};\n    const currency = (account as Arrangement)?.currency || state.defaultCurrency;\n    return {\n      ...state,\n      fromAccount: account as AccountItem,\n      amount: { amount: state.amount?.amount || '', currency },\n    };\n  }),\n  on(setPayeeAccount, (state, { id }) => {\n    const _accounts = [...(state.extAccounts || []), ...(state.creditAccounts || []), ...(state.contacts || [])];\n    const account = _accounts.find(e => e.uuid === id) as AccountItem;\n    return {\n      ...state,\n      payeeTo: account,\n    };\n  }),\n  on(setModalOpen, (state, { isOpen }) => {\n    return {\n      ...state,\n      isModalOpen: isOpen,\n    };\n  }),\n  on(setAmount, (state, { amount, defaultCurrency }) => {\n    const newAmount = {\n      amount,\n      currency: state.amount?.currency ? state.amount.currency : defaultCurrency,\n    } as TransferAmount;\n    return {\n      ...state,\n      amount: newAmount,\n    };\n  }),\n  on(openView, (state, { view, focus }) => {\n    return {\n      ...state,\n      viewState: view,\n      focusElement: focus,\n    };\n  }),\n  on(resetFocus, state => {\n    return {\n      ...state,\n      focusElement: undefined,\n    };\n  }),\n  on(sendTransferOrder, state => ({\n    ...state,\n    transferOrderCallState: LoadingState.LOADING,\n  })),\n  on(transferOrderSuccess, state => ({\n    ...state,\n    transferOrderCallState: LoadingState.LOADED,\n    isModalOpen: false,\n    viewState: ViewState.COMPLETE,\n  })),\n  on(transferOrderError, (state, { error }) => ({\n    ...state,\n    transferOrderCallState: { error },\n    isModalOpen: false,\n    viewState: ViewState.COMPLETE,\n  })),\n  on(resetWidget, (state, { focus }) => ({\n    ...state,\n    transferOrderCallState: LoadingState.INIT,\n    viewState: ViewState.FORM,\n    payeeTo: undefined,\n    amount: undefined,\n    fromAccount: undefined,\n    touchedFields: [],\n    focusElement: focus || undefined,\n  })),\n  on(setFieldTouched, (state, { fieldName }) => ({\n    ...state,\n    touchedFields: [...state.touchedFields, fieldName].filter(onlyUnique),\n  })),\n  on(setDefaultCurrency, (state, { currency }) => ({\n    ...state,\n    defaultCurrency: currency,\n  })),\n);\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { FEATURE_STORE_SELECTOR } from '../constants/initital-state';\nimport { QuickTransferEffects } from './effects';\nimport { quickTransferReducer } from './reducer';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    StoreModule.forFeature(FEATURE_STORE_SELECTOR, quickTransferReducer),\n    EffectsModule.forFeature([QuickTransferEffects]),\n  ],\n  providers: [QuickTransferEffects],\n})\nexport class QuickTransferStoreModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { AmountInputModule } from '@backbase/ui-ang/amount-input';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CurrencyInputModule } from '@backbase/ui-ang/currency-input';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { TabModule } from '@backbase/ui-ang/tab';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { BaseAccountSelectorComponent } from './components/account-selector-base/account-selector-base.component';\nimport { QuickTransferAccountsComponent } from './components/quick-transfer-accounts/quick-transfer-accounts.component';\nimport { QuickTransferCompleteComponent } from './components/quick-transfer-complete/quick-transfer-complete.component';\nimport { QuickTransferConfirmationModalComponent } from './components/quick-transfer-confirmation-modal/quick-transfer-confirmation-modal.component';\nimport { QuickTransferFormComponent } from './components/quick-transfer-form/quick-transfer-form.component';\nimport { QuickTransferFromAccountComponent } from './components/quick-transfer-from-account/quick-transfer-from-account.component';\nimport { QuickTransferToAccountComponent } from './components/quick-transfer-to-account/quick-transfer-to-account.component';\nimport { QuickTransferJourneyComponent } from './quick-transfer-journey.component';\nimport { QuickTransferJourneyConfigService } from './services/config.service';\nimport { QuickTransferHttpService } from './services/quick-transfer-http.service';\nimport { QuickTransferStoreModule } from './store/store.module';\nimport { CustomProductSelectorComponent } from './ui/custom-product-selector/custom-product-selector.component';\nimport { QuickTransferValidationMessageComponent } from './ui/validation-message/validation-message.component';\n\nconst uiModules = [\n  InputValidationMessageModule,\n  ButtonModule,\n  HeaderModule,\n  IconModule,\n  CurrencyInputModule,\n  TooltipModule,\n  ProductItemBasicAccountModule,\n  TabModule,\n  LoadingIndicatorModule,\n  ModalModule,\n  LoadButtonModule,\n  EmptyStateModule,\n  AmountModule,\n  AmountInputModule,\n];\n\nconst components = [\n  QuickTransferFormComponent,\n  BaseAccountSelectorComponent,\n  QuickTransferFromAccountComponent,\n  QuickTransferAccountsComponent,\n  QuickTransferToAccountComponent,\n  QuickTransferConfirmationModalComponent,\n  QuickTransferCompleteComponent,\n  CustomProductSelectorComponent,\n  QuickTransferJourneyComponent,\n  QuickTransferValidationMessageComponent,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [CommonModule, ReactiveFormsModule, QuickTransferStoreModule, ...uiModules],\n  exports: [...components, QuickTransferStoreModule, ...uiModules],\n  providers: [QuickTransferHttpService, QuickTransferJourneyConfigService],\n})\nexport class QuickTransferJourneyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["ViewState","createAction","props","createFeatureSelector","createSelector","i1","i0","Injectable","i1.QuickTransferStoreService","Component","Input","EventEmitter","i2","i3","ChangeDetectionStrategy","Output","map","templateObject_1","i4","i5","i6","ViewChild","QuickTransferProductKinds","InvolvedPartyRole","SchemeNames","combineLatest","take","i7","i8","Optional","Self","fadeSlideAnimation","Subject","getLocaleNumberSymbol","NumberSymbol","distinctUntilChanged","takeUntil","BigNumber","filter","first","Validators","LOCALE_ID","i4.CustomProductSelectorComponent","i5.QuickTransferValidationMessageComponent","Inject","ProductKinds","pluck","withLatestFrom","i4.QuickTransferAccountsComponent","i5.QuickTransferAccountsComponent","i9","tabsAnim","animation","style","animate","transition","useAnimation","trigger","InjectionToken","Subscription","NavigationEnd","startWith","concatMap","i3.QuickTransferJourneyConfigService","i4.QuickTransferFormComponent","i5.QuickTransferFromAccountComponent","i6.QuickTransferToAccountComponent","i7.QuickTransferCompleteComponent","i8.QuickTransferConfirmationModalComponent","fadeInAnimation","slideUpAnimation","exhaustMap","of","i6.QuickTransferJourneyConfigService","createEffect","ofType","catchError","HttpErrorResponse","i2.QuickTransferHttpService","i3.CommunicationService","createReducer","on","StoreModule","EffectsModule","NgModule","InputValidationMessageModule","ButtonModule","HeaderModule","IconModule","CurrencyInputModule","TooltipModule","ProductItemBasicAccountModule","TabModule","LoadingIndicatorModule","ModalModule","LoadButtonModule","EmptyStateModule","AmountModule","AmountInputModule","CommonModule","ReactiveFormsModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAA,oBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,oBAAA,GAAA;SAEC;QAAA,OAAA,oBAAA,CAAA;IAAA,CAAA,EAAA;;ICqBD;IACA,IAAY,YAIX,CAAA;IAJD,CAAA,UAAY,YAAY,EAAA;IACtB,IAAA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACb,IAAA,YAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;IACnB,IAAA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;IACnB,CAAC,EAJW,YAAY,KAAZ,YAAY,GAIvB,EAAA,CAAA,CAAA,CAAA;IAaD,IAAY,cAUX,CAAA;IAVD,CAAA,UAAY,cAAc,EAAA;IACxB,IAAA,cAAA,CAAA,sBAAA,CAAA,GAAA,sBAA6C,CAAA;IAC7C,IAAA,cAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;IAC/B,IAAA,cAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;IACnC,IAAA,cAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;IACrC,IAAA,cAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;IACnB,IAAA,cAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;IACrB,IAAA,cAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;IACrB,IAAA,cAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;IACvB,IAAA,cAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;IAC7B,CAAC,EAVW,cAAc,KAAd,cAAc,GAUzB,EAAA,CAAA,CAAA;;ICnDD;AACYA,+BAMX;IAND,CAAA,UAAY,SAAS,EAAA;IACnB,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACb,IAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACb,IAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;IACf,IAAA,SAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;IACrB,IAAA,SAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;IACnB,CAAC,EANWA,iBAAS,KAATA,iBAAS,GAMpB,EAAA,CAAA,CAAA,CAAA;IAED,IAAY,QAGX,CAAA;IAHD,CAAA,UAAY,QAAQ,EAAA;IAClB,IAAA,QAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACb,IAAA,QAAA,CAAA,IAAA,CAAA,GAAA,IAAS,CAAA;IACX,CAAC,EAHW,QAAQ,KAAR,QAAQ,GAGnB,EAAA,CAAA,CAAA;;ICNM,IAAM,aAAa,GAAGC,eAAY,CAAC,kCAAkC,CAAC,CAAC;IAEvE,IAAM,aAAa,GAAGA,eAAY,CAAC,kCAAkC,CAAC,CAAC;IAEvE,IAAM,qBAAqB,GAAGA,eAAY,CAAC,2CAA2C,CAAC,CAAC;IAE/F;IACO,IAAM,oBAAoB,GAAGA,eAAY,CAC9C,yCAAyC,EACzCC,QAAK,EAAmE,CACzE,CAAC;IAEK,IAAM,oBAAoB,GAAGD,eAAY,CAC9C,yCAAyC,EACzCC,QAAK,EAA2B,CACjC,CAAC;IAEK,IAAM,uBAAuB,GAAGD,eAAY,CACjD,kDAAkD,EAClDC,QAAK,EAAkD,CACxD,CAAC;IAEF;IACO,IAAM,kBAAkB,GAAGD,eAAY,CAC5C,wCAAwC,EACxCC,QAAK,EAAgC,CACtC,CAAC;IAEK,IAAM,kBAAkB,GAAGD,eAAY,CAC5C,wCAAwC,EACxCC,QAAK,EAAgC,CACtC,CAAC;IAEK,IAAM,qBAAqB,GAAGD,eAAY,CAC/C,iDAAiD,EACjDC,QAAK,EAAgC,CACtC,CAAC;IAEK,IAAM,QAAQ,GAAGD,eAAY,CAClC,8CAA8C,EAC9CC,QAAK,EAAuC,CAC7C,CAAC;IAEK,IAAM,eAAe,GAAGD,eAAY,CAAC,iDAAiD,EAAEC,QAAK,EAAkB,CAAC,CAAC;IAEjH,IAAM,cAAc,GAAGD,eAAY,CACxC,8CAA8C,EAC9CC,QAAK,EAAyB,CAC/B,CAAC;IAEK,IAAM,iBAAiB,GAAGD,eAAY,CAC3C,0CAA0C,EAC1CC,QAAK,EAAkC,CACxC,CAAC;IACK,IAAM,oBAAoB,GAAGD,eAAY,CAAC,mDAAmD,CAAC,CAAC;IAE/F,IAAM,kBAAkB,GAAGA,eAAY,CAC5C,+CAA+C,EAC/CC,QAAK,EAAgC,CACtC,CAAC;IAEK,IAAM,SAAS,GAAGD,eAAY,CACnC,6CAA6C,EAC7CC,QAAK,EAAgD,CACtD,CAAC;IAEK,IAAM,YAAY,GAAGD,eAAY,CACtC,iDAAiD,EACjDC,QAAK,EAAuB,CAC7B,CAAC;IAEK,IAAM,WAAW,GAAGD,eAAY,CAAC,sCAAsC,EAAEC,QAAK,EAAsB,CAAC,CAAC;IAEtG,IAAM,UAAU,GAAGD,eAAY,CAAC,6CAA6C,CAAC,CAAC;IAE/E,IAAM,eAAe,GAAGA,eAAY,CACzC,2CAA2C,EAC3CC,QAAK,EAAyB,CAC/B,CAAC;IAEK,IAAM,kBAAkB,GAAGD,eAAY,CAC5C,kDAAkD,EAClDC,QAAK,EAAwB,CAC9B;;ICtFM,IAAM,sBAAsB,GAAG,sBAAsB,CAAC;IACtD,IAAM,YAAY,GAAuB;IAC9C,IAAA,aAAa,EAAE,SAAS;IACxB,IAAA,cAAc,EAAE,SAAS;IACzB,IAAA,QAAQ,EAAE,SAAS;IACnB,IAAA,WAAW,EAAE,SAAS;QACtB,SAAS,EAAEF,iBAAS,CAAC,IAAI;IACzB,IAAA,WAAW,EAAE,SAAS;IACtB,IAAA,OAAO,EAAE,SAAS;IAClB,IAAA,MAAM,EAAE,SAAS;IACjB,IAAA,eAAe,EAAE,EAAE;QACnB,iBAAiB,EAAE,YAAY,CAAC,IAAI;QACpC,oBAAoB,EAAE,YAAY,CAAC,IAAI;QACvC,iBAAiB,EAAE,YAAY,CAAC,IAAI;QACpC,sBAAsB,EAAE,YAAY,CAAC,IAAI;IACzC,IAAA,WAAW,EAAE,KAAK;IAClB,IAAA,aAAa,EAAE,EAAE;IACjB,IAAA,YAAY,EAAE,SAAS;KACxB;;ICjBD,IAAM,KAAK,GAAGG,wBAAqB,CAAQ,sBAAsB,CAAC,CAAC;IAE5D,IAAM,iBAAiB,GAAGC,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,aAAa,CAAC,CAApB,EAAoB,CAAC,CAAC;IACxF,IAAM,mBAAmB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,eAAe,CAAC,CAAtB,EAAsB,CAAC,CAAC;IAC5F,IAAM,oBAAoB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,gBAAgB,CAAC,CAAvB,EAAuB,CAAC,CAAC;IAC9F,IAAM,iBAAiB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,aAAa,CAAC,CAApB,EAAoB,CAAC,CAAC;IACxF,IAAM,cAAc,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,UAAU,CAAC,CAAjB,EAAiB,CAAC,CAAC;IAClF,IAAM,uBAAuB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,mBAAmB,CAAC,CAA1B,EAA0B,CAAC,CAAC;IACpG,IAAM,uBAAuB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,mBAAmB,CAAC,CAA1B,EAA0B,CAAC,CAAC;IACpG,IAAM,0BAA0B,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,sBAAsB,CAAC,CAA7B,EAA6B,CAAC,CAAC;IAC1G,IAAM,4BAA4B,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,wBAAwB,CAAC,CAA/B,EAA+B,CAAC,CAAC;IAC9G,IAAM,eAAe,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,WAAW,CAAC,CAAlB,EAAkB,CAAC,CAAC;IACpF,IAAM,kBAAkB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,SAAS,CAAC,CAAhB,EAAgB,CAAC,CAAC;IACrF,IAAM,YAAY,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,QAAQ,CAAC,CAAf,EAAe,CAAC,CAAC;IAC9E,IAAM,iBAAiB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,aAAa,CAAC,CAApB,EAAoB,CAAC,CAAC;IACxF,IAAM,mBAAmB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,eAAe,CAAC,CAAtB,EAAsB,CAAC,CAAC;IAC5F,IAAM,kBAAkB,GAAGA,iBAAc,CAAC,KAAK,EAAE,UAAC,KAAY,EAAK,EAAA,OAAA,KAAK,CAAC,cAAc,CAAC,CAArB,EAAqB,CAAC;;ICqBhG,IAAA,yBAAA,kBAAA,YAAA;IA+DE,IAAA,SAAA,yBAAA,CAA6B,KAAgC,EAAA;IAAhC,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;IA9D7D;;IAEG;YACM,IAAkB,CAAA,kBAAA,GAA0B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;IAChG;;IAEG;YACM,IAAkB,CAAA,kBAAA,GAA0B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;IAChG;;IAEG;YACM,IAAqB,CAAA,qBAAA,GAA0B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;IACtG;;IAEG;YACM,IAAY,CAAA,YAAA,GAA0B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAClF;;IAEG;YACM,IAAc,CAAA,cAAA,GAA0C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;IACxG;;IAEG;YACM,IAAe,CAAA,eAAA,GAA0C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;IAC1G;;IAEG;YACM,IAAY,CAAA,YAAA,GAA8C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;IACxG;;IAEG;YACM,IAAS,CAAA,SAAA,GAAsC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAC1F;;IAEG;YACM,IAAY,CAAA,YAAA,GAAwC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAClG;;IAEG;YACM,IAAQ,CAAA,QAAA,GAAwC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAC/F;;IAEG;YACM,IAAO,CAAA,OAAA,GAA2C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC3F;;IAEG;YACM,IAAY,CAAA,YAAA,GAAwB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;IAClF;;IAEG;YACM,IAAc,CAAA,cAAA,GAAqC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;IAEnG;;IAEG;YACM,IAAa,CAAA,aAAA,GAAmC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAC/F;;IAEG;YACM,IAAsB,CAAA,sBAAA,GAA0B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC;SAExC;IAEjE;;IAEG;IACH,IAAA,yBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;YACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;SACtC,CAAA;IAED;;IAEG;IACH,IAAA,yBAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,YAAA;YACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC,CAAC;SAC9C,CAAA;IAED;;IAEG;IACH,IAAA,yBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;YACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC;SACtC,CAAA;IAED;;IAEG;QACH,yBAAgB,CAAA,SAAA,CAAA,gBAAA,GAAhB,UAAiB,OAA0B,EAAA;IACzC,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,OAAO,EAAA,OAAA,EAAE,CAAC,CAAC,CAAC;SACrD,CAAA;IAED;;IAEG;IACH,IAAA,yBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,IAAe,EAAE,KAAc,EAAA;IACrC,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAA,IAAA,EAAE,KAAK,EAAA,KAAA,EAAE,CAAC,CAAC,CAAC;SAChD,CAAA;IAED;;IAEG;QACH,yBAAQ,CAAA,SAAA,CAAA,QAAA,GAAR,UAAS,EAAU,EAAA;IACjB,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,EAAE,EAAA,EAAA,EAAE,CAAC,CAAC,CAAC;SAC9C,CAAA;IAED;;IAEG;QACH,yBAAiB,CAAA,SAAA,CAAA,iBAAA,GAAjB,UAAkB,SAAiB,EAAA;IACjC,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,SAAS,EAAA,SAAA,EAAE,CAAC,CAAC,CAAC;SACpD,CAAA;IACD;;IAEG;QACH,yBAAS,CAAA,SAAA,CAAA,SAAA,GAAT,UAAU,EAAyE,EAAA;gBAAvE,MAAM,GAAA,EAAA,CAAA,MAAA,EAAE,eAAe,GAAA,EAAA,CAAA,eAAA,CAAA;IACjC,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,MAAM,EAAA,MAAA,EAAE,eAAe,EAAA,eAAA,EAAE,CAAC,CAAC,CAAC;SAC7D,CAAA;IACD;;IAEG;QACH,yBAAY,CAAA,SAAA,CAAA,YAAA,GAAZ,UAAa,MAAe,EAAA;IAC1B,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,MAAM,EAAA,MAAA,EAAE,CAAC,CAAC,CAAC;SAC/C,CAAA;IACD;;IAEG;QACH,yBAAe,CAAA,SAAA,CAAA,eAAA,GAAf,UAAgB,SAAiB,EAAA;IAC/B,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,SAAS,EAAA,SAAA,EAAE,CAAC,CAAC,CAAC;SACrD,CAAA;IACD;;IAEG;QACH,yBAAK,CAAA,SAAA,CAAA,KAAA,GAAL,UAAM,KAAc,EAAA;IAClB,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,KAAK,EAAA,KAAA,EAAE,CAAC,CAAC,CAAC;SAC7C,CAAA;IACD;;IAEG;IACH,IAAA,yBAAA,CAAA,SAAA,CAAA,UAAU,GAAV,YAAA;YACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;SACnC,CAAA;IACD;;IAEG;QACH,yBAAqB,CAAA,SAAA,CAAA,qBAAA,GAArB,UAAsB,QAAgB,EAAA;IACpC,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,QAAQ,EAAA,QAAA,EAAE,CAAC,CAAC,CAAC;SACvD,CAAA;;;oKApJU,yBAAyB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,aAAA,CAAA,KAAA,EAAA,CAAA,EAAA,MAAA,EAAAC,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;wKAAzB,yBAAyB,EAAA,CAAA,CAAA;sHAAzB,yBAAyB,EAAA,UAAA,EAAA,CAAA;sBADrCC,aAAU;;;AC7BX,QAAA,4BAAA,kBAAA,YAAA;IAME,IAAA,SAAA,4BAAA,CAAqB,KAAgC,EAAA;IAAhC,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;IASrD;;IAEG;YACM,IAAA,CAAA,kBAAkB,GAAsC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;IAC/F;;IAEG;IACM,QAAA,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;IACrC;;IAEG;YACM,IAAA,CAAA,qBAAqB,GAAsC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC;SApB5C;IAsBzD;;IAEG;QACH,4BAAU,CAAA,SAAA,CAAA,UAAA,GAAV,UAAW,YAAoB,EAAA;YAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,CAACP,iBAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;SAClD,CAAA;IACD;;IAEG;IACH,IAAA,4BAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,QAAA,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;SAC5B,CAAA;IACD;;IAEG;IACH,IAAA,4BAAA,CAAA,SAAA,CAAA,cAAc,GAAd,YAAA;IACE,QAAA,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;SAC/B,CAAA;;;uKA7CU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAQ,yBAAA,EAAA,CAAA,EAAA,MAAA,EAAAF,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA5B,mBAAA,4BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,4BAA4B,6FAF7B,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;sHAED,4BAA4B,EAAA,UAAA,EAAA,CAAA;sBAHxCG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,EAAE;qBACb,CAAA;iHAKU,MAAM,EAAA,CAAA;0BAAdC,QAAK;;;ACNR,QAAA,8BAAA,kBAAA,YAAA;IALA,IAAA,SAAA,8BAAA,GAAA;IAsBE;;IAEG;IACO,QAAA,IAAA,CAAA,MAAM,GAAG,IAAIC,eAAY,EAAU,CAAC;SAS/C;IARC;;;;IAIG;QACH,8BAAI,CAAA,SAAA,CAAA,IAAA,GAAJ,UAAK,EAAU,EAAA;IACb,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACtB,CAAA;;;yKA5BU,8BAA8B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAL,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA9B,mBAAA,8BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,8BAA8B,6PCT3C,w4BAqBA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAD,eAAA,CAAA,gCAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,cAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAO,aAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAAP,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDZa,8BAA8B,EAAA,UAAA,EAAA,CAAA;sBAL1CG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,+BAA+B;IACzC,oBAAA,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEK,0BAAuB,CAAC,MAAM;qBAChD,CAAA;kCAKU,YAAY,EAAA,CAAA;0BAApBJ,QAAK;oBAIG,QAAQ,EAAA,CAAA;0BAAhBA,QAAK;oBAIG,2BAA2B,EAAA,CAAA;0BAAnCA,QAAK;oBAIG,MAAM,EAAA,CAAA;0BAAdA,QAAK;oBAII,MAAM,EAAA,CAAA;0BAAfK,SAAM;;;IE7BT;;;;;;;;;;;;;IAagF;IAChF;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC,EAAA;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAA,EAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,EAAA,EAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtG,IAAA,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEc,SAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAA;IAC1B,IAAA,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;IACrC,QAAA,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;IAC9F,IAAA,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IACvC,IAAA,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;IAEM,IAAI,QAAQ,GAAG,YAAA;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAA;IAC3C,QAAA,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACjD,YAAA,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,SAAA;IACD,QAAA,OAAO,CAAC,CAAC;IACb,KAAC,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;IAEe,SAAA,MAAM,CAAC,CAAC,EAAE,CAAC,EAAA;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,gBAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,SAAA;IACL,IAAA,OAAO,CAAC,CAAC;IACb,CAAC;IAEK,SAAU,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAA;IACpD,IAAA,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;IAAE,QAAA,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;IAC1H,QAAA,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IAAE,YAAA,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;IAAE,gBAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClJ,IAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;IAEe,SAAA,OAAO,CAAC,UAAU,EAAE,SAAS,EAAA;IACzC,IAAA,OAAO,UAAU,MAAM,EAAE,GAAG,EAAA,EAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;IACzE,CAAC;IAEe,SAAA,UAAU,CAAC,WAAW,EAAE,aAAa,EAAA;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;IAEK,SAAU,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAA;IACvD,IAAA,SAAS,KAAK,CAAC,KAAK,EAAA,EAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAA,EAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAC5G,IAAA,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAA;IACrD,QAAA,SAAS,SAAS,CAAC,KAAK,EAAA,EAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAAE,SAAA;IAAC,QAAA,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAAE,SAAA,EAAE;IAC3F,QAAA,SAAS,QAAQ,CAAC,KAAK,EAAA,EAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAAE,SAAA;IAAC,QAAA,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAAE,SAAA,EAAE;IAC9F,QAAA,SAAS,IAAI,CAAC,MAAM,EAAA,EAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;IAC9G,QAAA,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1E,KAAC,CAAC,CAAC;IACP,CAAC;IAEe,SAAA,WAAW,CAAC,OAAO,EAAE,IAAI,EAAA;IACrC,IAAA,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,YAAA,EAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAAE,YAAA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAA,EAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,SAAS,IAAI,CAAC,CAAC,EAAA,EAAI,OAAO,UAAU,CAAC,EAAI,EAAA,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,SAAS,IAAI,CAAC,EAAE,EAAA;IACZ,QAAA,IAAI,CAAC;IAAE,YAAA,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;IAC9D,QAAA,OAAO,CAAC;gBAAE,IAAI;IACV,gBAAA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;IAAE,oBAAA,OAAO,CAAC,CAAC;IAC7J,gBAAA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;IAAE,oBAAA,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IACxC,gBAAA,QAAQ,EAAE,CAAC,CAAC,CAAC;IACT,oBAAA,KAAK,CAAC,CAAC;IAAC,oBAAA,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;IAC9B,oBAAA,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;IAAC,wBAAA,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IACxD,oBAAA,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;IAAC,wBAAA,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAAC,wBAAA,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;IACjD,oBAAA,KAAK,CAAC;IAAE,wBAAA,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAAC,wBAAA,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;IACjD,oBAAA;IACI,wBAAA,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;IAAE,yBAAA;IAC5G,wBAAA,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAAE,4BAAA,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;IAAE,yBAAA;IACtF,wBAAA,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAAE,4BAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;IAAE,yBAAA;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAAE,4BAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAAC,4BAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;IAAE,yBAAA;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;IAAE,4BAAA,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IACtB,wBAAA,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;IAC9B,iBAAA;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC9B,aAAA;IAAC,YAAA,OAAO,CAAC,EAAE;IAAE,gBAAA,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;IAAE,aAAA;IAAS,oBAAA;IAAE,gBAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAAE,aAAA;IAC1D,QAAA,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;IAAE,YAAA,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;IAEM,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAA;QAC9D,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,YAAA,EAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAA;QACtB,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;IAEa,SAAA,YAAY,CAAC,CAAC,EAAE,CAAC,EAAA;QAC7B,KAAK,IAAI,CAAC,IAAI,CAAC;IAAE,QAAA,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAAE,YAAA,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClH,CAAC;IAEK,SAAU,QAAQ,CAAC,CAAC,EAAA;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC9E,IAAA,IAAI,CAAC;IAAE,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,IAAA,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;YAAE,OAAO;IAC1C,YAAA,IAAI,EAAE,YAAA;IACF,gBAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;wBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;IACnC,gBAAA,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;iBAC3C;aACJ,CAAC;IACF,IAAA,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;IAEe,SAAA,MAAM,CAAC,CAAC,EAAE,CAAC,EAAA;IACvB,IAAA,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3D,IAAA,IAAI,CAAC,CAAC;IAAE,QAAA,OAAO,CAAC,CAAC;IACjB,IAAA,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;IAAE,YAAA,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC9E,KAAA;IACD,IAAA,OAAO,KAAK,EAAE;IAAE,QAAA,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;IAAE,KAAA;IAC/B,YAAA;YACJ,IAAI;IACA,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;IAAE,gBAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpD,SAAA;IACO,gBAAA;IAAE,YAAA,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;IAAE,SAAA;IACpC,KAAA;IACD,IAAA,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,QAAQ,GAAA;IACpB,IAAA,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;IAC9C,QAAA,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,IAAA,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,cAAc,GAAA;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;IAAE,QAAA,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,IAAA,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAA;IACxC,IAAA,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;IAAE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjF,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;IACpB,gBAAA,IAAI,CAAC,EAAE;IAAE,oBAAA,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrD,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,aAAA;IACJ,SAAA;IACD,IAAA,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;IAEK,SAAU,OAAO,CAAC,CAAC,EAAA;QACrB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;aAEe,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,EAAA;QAC3D,IAAI,CAAC,MAAM,CAAC,aAAa;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IACvF,IAAA,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IAC9D,IAAA,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAc,EAAA,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACtH,SAAS,IAAI,CAAC,CAAC,EAAA,EAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAA,EAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAI,EAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IAC1I,IAAA,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAE,KAAA;IAAC,IAAA,OAAO,CAAC,EAAE;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAE,KAAA,EAAE;QAClF,SAAS,IAAI,CAAC,CAAC,EAAA,EAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IACxH,IAAA,SAAS,OAAO,CAAC,KAAK,EAAA,EAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;IAClD,IAAA,SAAS,MAAM,CAAC,KAAK,EAAA,EAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;IAClD,IAAA,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAA,EAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;IAAE,QAAA,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;IAEK,SAAU,gBAAgB,CAAC,CAAC,EAAA;QAC9B,IAAI,CAAC,EAAE,CAAC,CAAC;IACT,IAAA,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAA,EAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5I,IAAA,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAI,EAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAI,EAAA,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;IAEK,SAAU,aAAa,CAAC,CAAC,EAAA;QAC3B,IAAI,CAAC,MAAM,CAAC,aAAa;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACnC,IAAA,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAA,EAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACjN,SAAS,IAAI,CAAC,CAAC,EAAI,EAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAA,EAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAI,EAAA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IAChK,IAAA,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,EAAI,EAAA,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;IAEe,SAAA,oBAAoB,CAAC,MAAM,EAAE,GAAG,EAAA;QAC5C,IAAI,MAAM,CAAC,cAAc,EAAE;IAAE,QAAA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IAAE,KAAA;IAAM,SAAA;IAAE,QAAA,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;IAAE,KAAA;IAC/G,IAAA,OAAO,MAAM,CAAC;IAClB,CAAC;IAAA,CAAC;IAEF,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAA;IACnD,IAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC,EAAA;IACd,IAAA,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;IAEI,SAAU,YAAY,CAAC,GAAG,EAAA;IAC5B,IAAA,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;IAAE,QAAA,OAAO,GAAG,CAAC;QACtC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,GAAG,IAAI,IAAI;YAAE,KAAK,IAAI,CAAC,IAAI,GAAG;IAAE,YAAA,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAAE,gBAAA,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzI,IAAA,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAChC,IAAA,OAAO,MAAM,CAAC;IAClB,CAAC;IAEK,SAAU,eAAe,CAAC,GAAG,EAAA;IAC/B,IAAA,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;IAEK,SAAU,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAA;IAC3D,IAAA,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;IACnL,IAAA,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClG,CAAC;IAEK,SAAU,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAA;QAClE,IAAI,IAAI,KAAK,GAAG;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;IACxE,IAAA,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;IAAE,QAAA,MAAM,IAAI,SAAS,CAAC,yEAAyE,CAAC,CAAC;IAClL,IAAA,OAAO,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAC9G;;IC9OO,IAAM,UAAU,GAAG,0CAA0C,CAAC;IAC9D,IAAM,YAAY,GAAG,yCAAyC;;ICErE;;IAEG;IACG,SAAU,cAAc,CAAC,KAAqB,EAAA;;IAClD,IAAA,IAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;QACnC,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAA,EAAK,MAAM,CAAE,CAAC;QACtD,IAAI,KAAK,CAAC,QAAQ,EAAE;;gBAClB,KAAgB,IAAA,KAAA,QAAA,CAAA,KAAK,CAAC,QAAQ,CAAA,gBAAA,EAAE,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA;IAA3B,gBAAA,IAAM,CAAC,GAAA,EAAA,CAAA,KAAA,CAAA;IACV,gBAAA,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,cAAc,CAAC,CAAC,CAAC,CAAK,EAAA,MAAM,CAAE,CAAC;IAC9C,aAAA;;;;;;;;;IACF,KAAA;IACD,IAAA,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;IACM,SAAU,gBAAgB,CAAC,OAAwB,EAAA;IACvD,IAAA,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IAChD,QAAA,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC1B,KAAA;IAAM,SAAA;;IAEL,QAAA,OAAO,IAAI,CAAC;IACb,KAAA;IACH,CAAC;aAEe,UAAU,GAAA;IACxB,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC3D;;ACbA,QAAA,8BAAA,kBAAA,YAAA;IACE,IAAA,SAAA,8BAAA,CAA6B,KAAgC,EAAA;IAAhC,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;IACpD,QAAA,IAAE,CAAA,EAAA,GAAG,UAAU,EAAE,CAAC;IAS3B;;IAEG;YACM,IAAA,CAAA,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;IAC1C;;IAEG;YACM,IAAA,CAAA,OAAO,GAA2C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;IAC9E;;IAEG;YACM,IAAA,CAAA,QAAQ,GAAwC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7E;;IAEG;IACM,QAAA,IAAA,CAAA,sBAAsB,GAA0B,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAC7FC,aAAG,CAAC,UAAA,KAAK,EAAA;gBACP,IAAK,KAAoB,CAAC,KAAK,EAAE;IAC/B,gBAAA,IAAM,KAAK,GAAI,KAAoB,CAAC,KAAK,CAAC;oBAC1C,IAAM,+BAA+B,GAAG,mCAAmC,CAAC;oBAC5E,IAAM,mBAAmB,GAAG,6BAA6B,CAAC;oBAC1D,IAAM,iCAAiC,GAAG,kBAAkB,CAAC;IAC7D,gBAAA,IAAM,OAAO,GACX,KAAK,CAAC,UAAU,KAAK,iCAAiC;IACpD,sBAAE,SAAS,CAAAC,kBAAA,KAAAA,kBAAA,GAAA,oBAAA,CAAA,CAAA,4DAAA,EAAA,EAAA,CAAA,EAAA,CAAA,4DAA6D,EAA+B,EAAE,KAAjC,+BAA+B,CAAA,GACrG,SAAS,qHAAA,0CAA2C,EAAmB,EAAE,CAArB,CAAA,CAAA,EAAA,mBAAmB,CAAE,CAAC;IAEhF,gBAAA,OAAY,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,CAAE,EAAA,EAAA,OAAO,EAAA,OAAA,EAAG,CAAA,CAAA;IAC9B,aAAA;IACD,YAAA,OAAO,KAAK,CAAC;aACd,CAAC,CACH,CAAC;IACF;;IAEG;IACM,QAAA,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;SA7C4B;IAqDjE,IAAA,8BAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;IACE,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACvC,CAAA;IACD;;IAEG;IACH,IAAA,8BAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SAChC,CAAA;IACD;;IAEG;IACH,IAAA,8BAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAACjB,iBAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;SAClD,CAAA;;;yKApEU,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAQ,yBAAA,EAAA,CAAA,EAAA,MAAA,EAAAF,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA9B,mBAAA,8BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,8BAA8B,sRChB3C,g3JAiIA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,aAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,eAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAD,aAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAAb,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDjHa,8BAA8B,EAAA,UAAA,EAAA,CAAA;sBAL1CG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,+BAA+B;IACzC,oBAAA,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEK,0BAAuB,CAAC,MAAM;qBAChD,CAAA;iHAOU,UAAU,EAAA,CAAA;0BAAlBJ,QAAK;oBAIG,kBAAkB,EAAA,CAAA;0BAA1BA,QAAK;oBAwCG,MAAM,EAAA,CAAA;0BAAdA,QAAK;oBAEa,UAAU,EAAA,CAAA;0BAA5BW,YAAS;2BAAC,MAAM,CAAA;;;;AE5DPC,+CAOX;IAPD,CAAA,UAAY,yBAAyB,EAAA;IACnC,IAAA,yBAAA,CAAA,gBAAA,CAAA,GAAA,iBAAkC,CAAA;IAClC,IAAA,yBAAA,CAAA,gBAAA,CAAA,GAAA,iBAAkC,CAAA;IAClC,IAAA,yBAAA,CAAA,YAAA,CAAA,GAAA,aAA0B,CAAA;IAC1B,IAAA,yBAAA,CAAA,aAAA,CAAA,GAAA,MAAoB,CAAA;IACpB,IAAA,yBAAA,CAAA,mBAAA,CAAA,GAAA,mBAAuC,CAAA;IACvC,IAAA,yBAAA,CAAA,UAAA,CAAA,GAAA,SAAoB,CAAA;IACtB,CAAC,EAPWA,iCAAyB,KAAzBA,iCAAyB,GAOpC,EAAA,CAAA,CAAA;;ICXM,IAAM,cAAc,GAAG,cAAM,OAAA,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAArC,EAAqC,CAAC;IAEnE,IAAM,cAAc,GAAG,UAC5B,WAAwB,EACxB,SAAsB,EACtB,MAAsB,EACtB,YAA0B,EAAA;QAElB,IAAA,iBAAiB,GAAeA,iCAAyB,CAAA,iBAAxC,EAAE,QAAQ,GAAKA,iCAAyB,CAAA,QAA9B,CAA+B;IAClE,IAAA,IAAM,YAAY,GAAG,WAAW,CAAC,eAAe,KAAK,iBAAiB,GAAG,SAAS,GAAG,WAAW,CAAC;IACjG,IAAA,IAAM,UAAU,GAAG,WAAW,CAAC,eAAe,KAAK,iBAAiB,GAAG,WAAW,GAAG,SAAS,CAAC;IAC/F,IAAA,IAAM,KAAK,GACT,WAAW,CAAC,eAAe,KAAK,iBAAiB,GAAGC,sBAAiB,CAAC,MAAM,GAAGA,sBAAiB,CAAC,QAAQ,CAAC;IAE5G,IAAA,SAAS,cAAc,GAAA;YACrB,QAAQ,UAAU,CAAC,eAAe;IAChC,YAAA,KAAK,iBAAiB;oBACpB,OAAO,YAAY,CAAC,QAAQ,CAAC;IAC/B,YAAA,KAAK,QAAQ;oBACX,OAAO,YAAY,CAAC,OAAO,CAAC;IAC9B,YAAA;oBACE,OAAO,YAAY,CAAC,QAAQ,CAAC;IAChC,SAAA;SACF;IACD,IAAA,SAAS,SAAS,GAAA;YAChB,QAAQ,UAAU,CAAC,eAAe;IAChC,YAAA,KAAK,iBAAiB;oBACpB,OAAOC,gBAAW,CAAC,UAAU,CAAC;IAChC,YAAA,KAAK,QAAQ;oBACX,OAAOA,gBAAW,CAAC,IAAI,CAAC;IAC1B,YAAA;oBACE,OAAOA,gBAAW,CAAC,EAAE,CAAC;IACzB,SAAA;SACF;IAED,IAAA,IAAM,iBAAiB,GAAG;IACxB,QAAA,cAAc,EAAE;gBACd,cAAc,EAAE,YAAY,CAAC,IAAI;gBACjC,UAAU,EAAEA,gBAAW,CAAC,EAAE;IAC3B,SAAA;SACF,CAAC;IAEF,IAAA,IAAM,cAAc,GAAG;IACrB,QAAA,cAAc,EAAE,UAAU,CAAC,eAAe,KAAK,QAAQ,GAAG,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI;YAC7F,UAAU,EAAE,SAAS,EAAE;SACxB,CAAC;IAEF,IAAA,IAAM,8BAA8B,GAAG;IACrC,QAAA,gBAAgB,EAAE;gBAChB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,YAAY,EAAE,MAAM,CAAC,QAAQ;IAC9B,SAAA;IACD,QAAA,YAAY,EAAE;gBACZ,IAAI,EAAE,UAAU,CAAC,IAAI;IACrB,YAAA,IAAI,EAAE,KAAK;IACZ,SAAA;IACD,QAAA,mBAAmB,EAAA,MAAA,CAAA,MAAA,CAAA,EACjB,cAAc,EAAA,cAAA,EACX,GAAC,UAAU,CAAC,eAAe,KAAK,QAAQ,IAAI;gBAC7C,eAAe,EAAE,EAAE,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE;IAC/D,SAAA,EACF;SACF,CAAC;QAEF,OAAO;IACL,QAAA,iBAAiB,EAAA,iBAAA;YACjB,sBAAsB,EAAE,cAAc,EAAE;YACxC,WAAW,EAAE,cAAc,EAAE;IAC7B,QAAA,8BAA8B,EAAA,8BAAA;SAC/B,CAAC;IACJ,CAAC;;AC3DD,QAAA,uCAAA,kBAAA,YAAA;IA2CE,IAAA,SAAA,uCAAA,CAA6B,KAAgC,EAAA;IAAhC,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;IA9B7D;;IAEG;YACM,IAAA,CAAA,QAAQ,GAAwC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7E;;IAEG;YACM,IAAA,CAAA,YAAY,GAAwC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;IACrF;;IAEG;YACM,IAAA,CAAA,OAAO,GAA2C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;IAE9E;;IAEG;YACM,IAAA,CAAA,OAAO,GAAwB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;IAChE;;IAEG;YACM,IAAA,CAAA,sBAAsB,GAA0B,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;IAC3F;;IAEG;IACM,QAAA,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;IACrC;;IAEG;IACM,QAAA,IAAS,CAAA,SAAA,GAAGxB,iBAAS,CAAC;SAEkC;IACjE;;IAEG;IACH,IAAA,uCAAA,CAAA,SAAA,CAAA,UAAU,GAAV,YAAA;IACE,QAAA,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAChC,CAAA;IACD;;IAEG;IACH,IAAA,uCAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;YAAA,IASC,KAAA,GAAA,IAAA,CAAA;IARC,QAAA,IAAI,CAAC,cAAc,GAAGyB,kBAAa,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAClF,aAAA,IAAI,CAACC,cAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,UAAC,EAA8B,EAAA;oBAA9B,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAA8B,EAA7B,WAAW,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,MAAM,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IACvC,YAAA,IAAI,WAAW,IAAI,OAAO,IAAI,MAAM,EAAE;IACpC,gBAAA,IAAM,QAAQ,GAAG,cAAc,CAAC,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE,KAAI,CAAC,YAAY,IAAK,EAAmB,CAAC,CAAC;IACzG,gBAAA,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACvC,aAAA;IACH,SAAC,CAAC,CAAC;SACN,CAAA;IACD,IAAA,uCAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;YACE,IAAI,IAAI,CAAC,cAAc,EAAE;IACvB,YAAA,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACnC,SAAA;SACF,CAAA;;;kLAnEU,uCAAuC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAlB,yBAAA,EAAA,CAAA,EAAA,MAAA,EAAAF,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAvC,mBAAA,uCAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uCAAuC,sJCfpD,2vJAiHA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,eAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,eAAA,CAAA,gCAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,cAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,eAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,aAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAR,eAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAAe,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAf,eAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,EAAA,EAAA,IAAA,EAAAgB,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAD,aAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAArB,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDlGa,uCAAuC,EAAA,UAAA,EAAA,CAAA;sBALnDG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,yCAAyC;IACnD,oBAAA,WAAW,EAAE,oDAAoD;wBACjE,eAAe,EAAEK,0BAAuB,CAAC,MAAM;qBAChD,CAAA;iHAKU,YAAY,EAAA,CAAA;0BAApBJ,QAAK;oBAIG,MAAM,EAAA,CAAA;0BAAdA,QAAK;;;AEdR,QAAA,8BAAA,kBAAA,YAAA;IACE,IAAA,SAAA,8BAAA,CAAuC,iBAA4B,EAAA;IAA5B,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAW;IAMzD,QAAA,IAAA,CAAA,IAAI,GAAG,IAAIC,eAAY,EAAW,CAAC;IAS7C;;IAEG;IACM,QAAA,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;IAUzB,QAAA,IAAA,CAAA,QAAQ,GAAG,UAAC,CAAM,EAAA,GAAO,CAAC;IAC1B,QAAA,IAAA,CAAA,SAAS,GAAG,YAAA,GAAQ,CAAC;YA5BnB,IAAI,IAAI,CAAC,iBAAiB,EAAE;IAC1B,YAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,GAAG,IAAI,CAAC;IAC7C,SAAA;SACF;QAkBD,8BAAU,CAAA,SAAA,CAAA,UAAA,GAAV,UAAW,KAAiB,EAAA;YAC1B,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO;IACR,SAAA;SACF,CAAA;QAKD,8BAAgB,CAAA,SAAA,CAAA,gBAAA,GAAhB,UAAiB,EAAc,EAAA;IAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB,CAAA;QAED,8BAAiB,CAAA,SAAA,CAAA,iBAAA,GAAjB,UAAkB,EAAc,EAAA;IAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACrB,CAAA;IAED,IAAA,8BAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;YACE,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB,CAAA;IACD;;IAEG;IACH,IAAA,8BAAA,CAAA,SAAA,CAAA,uBAAuB,GAAvB,YAAA;IACE,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtB,CAAA;;;yKAhDU,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAN,eAAA,CAAA,SAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAAC,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA9B,mBAAA,8BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,8BAA8B,gPCT3C,0sBAkBA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,aAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAAZ,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDTa,8BAA8B,EAAA,UAAA,EAAA,CAAA;sBAL1CG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,4BAA4B;IACtC,oBAAA,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEK,0BAAuB,CAAC,MAAM;qBAChD,CAAA;;;kCAEce,WAAQ;;kCAAIC,OAAI;;6BAMnB,IAAI,EAAA,CAAA;0BAAbf,SAAM;oBAEE,UAAU,EAAA,CAAA;0BAAlBL,QAAK;oBAKG,OAAO,EAAA,CAAA;0BAAfA,QAAK;oBAKG,OAAO,EAAA,CAAA;0BAAfA,QAAK;oBAEqB,eAAe,EAAA,CAAA;0BAAzCA,QAAK;2BAAC,kBAAkB,CAAA;;;AEpB3B,QAAA,uCAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,uCAAA,GAAA;;IAgBE,IAAA,uCAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;SAC9D,CAAA;QAED,uCAAoB,CAAA,SAAA,CAAA,oBAAA,GAApB,UAAqB,KAAc,EAAA;YAAnC,IAGC,KAAA,GAAA,IAAA,CAAA;;YAFC,IAAM,UAAU,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,kBAAkB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC,UAAA,GAAG,EAAI,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA,CAAA,OAAA,CAAC,EAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,0CAAG,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,CAAA,CAAA,EAAA,CAAC,CAAC;YACrG,OAAO,CAAA,UAAU,KAAA,IAAA,IAAV,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAV,UAAU,CAAE,OAAO,KAAI,EAAE,CAAC;SAClC,CAAA;;;kLAvBU,uCAAuC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAJ,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAvC,mBAAA,uCAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uCAAuC,ECVpD,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,QAAA,EAAA,mpBAkBA,EDVc,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAD,eAAA,CAAA,+BAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAO,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAACmB,uBAAkB,CAAC,EAAA,CAAA,CAAA;sHAErB,uCAAuC,EAAA,UAAA,EAAA,CAAA;sBALnDtB,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,sCAAsC;IAChD,oBAAA,WAAW,EAAE,qCAAqC;wBAClD,UAAU,EAAE,CAACsB,uBAAkB,CAAC;qBACjC,CAAA;kCAKU,OAAO,EAAA,CAAA;0BAAfrB,QAAK;oBAIG,kBAAkB,EAAA,CAAA;0BAA1BA,QAAK;oBAIG,EAAE,EAAA,CAAA;0BAAVA,QAAK;;;AEGR,QAAA,0BAAA,kBAAA,YAAA;IAuDE,IAAA,SAAA,0BAAA,CACmB,KAAgC,EAChC,WAAwB,EACL,MAAc,EAAA;IAFjC,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;IAChC,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;IACL,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;IA/CpD;;IAEG;YACM,IAAA,CAAA,QAAQ,GAAwC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC7E;;IAEG;YACM,IAAA,CAAA,YAAY,GAAwC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;IACrF;;IAEG;YACM,IAAA,CAAA,OAAO,GAA2C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;IAC9E;;IAEG;YACM,IAAA,CAAA,cAAc,GAAqC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;IAKtF;;IAEG;IACM,QAAA,IAAS,CAAA,SAAA,GAAGV,iBAAS,CAAC;IAC/B;;IAEG;YACM,IAAA,CAAA,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;IAEnC;;IAEG;YACM,IAAA,CAAA,YAAY,GAAsC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;IAUnF,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAIgC,YAAO,EAAE,CAAC;IAOvB,QAAA,IAAI,CAAC,gBAAgB,GAAGC,wBAAqB,CAAC,IAAI,CAAC,MAAM,EAAEC,eAAY,CAAC,eAAe,CAAC,CAAC;YACzF,IAAI,CAAC,MAAM,GAAG;IACZ,YAAA,cAAc,EAAE,EAAE;gBAClB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;IACvC,YAAA,SAAS,EAAE,CAAC;aACb,CAAC;SACH;IAnBD,IAAA,MAAA,CAAA,cAAA,CAAI,0BAAY,CAAA,SAAA,EAAA,cAAA,EAAA;IAHhB;;IAEG;IACH,QAAA,GAAA,EAAA,YAAA;;gBACE,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,MAAM,CAAC,MAAM,CAAC;aACnC;;;IAAA,KAAA,CAAA,CAAA;IAmBD,IAAA,0BAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YAAA,IAiCC,KAAA,GAAA,IAAA,CAAA;;YAhCC,IAAI,CAAC,cAAc,EAAE,CAAC;IACtB,QAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MACL,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,CAAC,oBAAoB,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CACzB,YAAY,CAAC,IAAI,CAACC,8BAAoB,EAAE,EAAEC,mBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,CACnE,SAAS,CAAC,UAAA,MAAM,EAAA;IACf,YAAA,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAChC,SAAC,CAAC,CAAC;IACL,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAACV,cAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,MAAM,EAAA;IAChD,YAAA,IAAI,MAAM,KAAN,IAAA,IAAA,MAAM,uBAAN,MAAM,CAAE,MAAM,EAAE;IAClB,gBAAA,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,EAAA;;wBAClB,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,CAAC,KAAK,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,EAAE,CAAC;IACzC,iBAAC,CAAC,CAAC;IACJ,aAAA;IACH,SAAC,CAAC,CAAC;;IAEH,QAAAD,kBAAa,CAAC;gBACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAACC,cAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAACA,cAAI,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAACS,8BAAoB,EAAE,CAAC;aAC/C,CAAC;IACC,aAAA,IAAI,CAACC,mBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC,UAAC,EAAgC,EAAA;oBAAhC,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAAgC,EAA/B,MAAM,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,SAAS,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,WAAW,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;gBACzC,IAAM,SAAS,GAAG,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,MAAM,CAAC;gBACjC,CAAA,EAAA,GAAA,KAAI,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC;IACpB,gBAAA,WAAW,EAAE;wBACX,MAAM,EAAE,SAAS,GAAG,IAAIC,6BAAS,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE;wBACvE,QAAQ,EAAE,CAAA,MAAM,KAAN,IAAA,IAAA,MAAM,uBAAN,MAAM,CAAE,QAAQ,MAAI,MAAA,KAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,CAAA;IACjE,iBAAA;IACD,gBAAA,SAAS,EAAA,SAAA;IACT,gBAAA,WAAW,EAAA,WAAA;IACZ,aAAA,CAAC,CAAC;IACL,SAAC,CAAC,CAAC;SACN,CAAA;IAED,IAAA,0BAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;YAAA,IAiBC,KAAA,GAAA,IAAA,CAAA;YAhBC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAACF,8BAAoB,EAAE,EAAEG,gBAAM,CAAC,OAAO,CAAC,EAAEF,mBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,EAAE,EAAA;IAC3G,YAAA,IAAM,YAAY,GAAG,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACjE,YAAA,IAAI,YAAY,EAAE;oBAChB,YAAY,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5C,gBAAA,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IACzB,aAAA;IACH,SAAC,CAAC,CAAC;IACH,QAAA,IAAI,CAAC,OAAO;IACT,aAAA,IAAI,CACHE,gBAAM,CAAC,UAAA,MAAM,IAAI,OAAA,CAAC,MAAM,CAAA,EAAA,CAAC,EACzBZ,cAAI,CAAC,CAAC,CAAC,CACR;IACA,aAAA,SAAS,CAAC,YAAA;;gBACT,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,oBAAoB,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,CAAC,GAAG,CAAC,CAAC;gBACtD,CAAA,EAAA,GAAA,KAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,EAAE,CAAC;IACrB,SAAC,CAAC,CAAC;SACN,CAAA;IAED,IAAA,0BAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACrB,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC1B,CAAA;IAED;;IAEG;IACH,IAAA,0BAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;YACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC1B,iBAAS,CAAC,IAAI,CAAC,CAAC;IACnC,QAAA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;SAC3C,CAAA;IACD;;IAEG;IACH,IAAA,0BAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,YAAA;YACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAACA,iBAAS,CAAC,KAAK,CAAC,CAAC;IACpC,QAAA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;SACzC,CAAA;IACD;;IAEG;QACK,0BAAgB,CAAA,SAAA,CAAA,gBAAA,GAAhB,UAAiB,MAAc,EAAA;IACrC,QAAA,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;SAC/E,CAAA;IAED;;IAEG;IACG,IAAA,0BAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,YAAA;;;;;;IACgB,oBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,YAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAACuC,eAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAA,CAAA;;IAA/D,wBAAA,WAAW,GAAG,EAAiD,CAAA,IAAA,EAAA,CAAA;IACrE,wBAAA,IAAI,WAAW,KAAKvC,iBAAS,CAAC,IAAI,KAAI,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAA,EAAE;IACtD,4BAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC1D,4BAAA,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,yBAAA;IAAM,6BAAA;IACL,4BAAA,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IACtC,4BAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC/B,4BAAA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IAC9B,yBAAA;;;;;SACF,CAAA;IAED;;IAEG;QACH,0BAAY,CAAA,SAAA,CAAA,YAAA,GAAZ,UAAa,SAAiB,EAAA;;IAC5B,QAAA,IAAM,OAAO,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC,SAAS,CAAC,CAAC;YAC1C,OAAO,OAAO,KAAK,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC;SACxD,CAAA;IACD;;IAEG;QACH,0BAAU,CAAA,SAAA,CAAA,UAAA,GAAV,UAAW,SAAiB,EAAA;;IAC1B,QAAA,IAAM,OAAO,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC,SAAS,CAAC,CAAC;IAC1C,QAAA,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,aAAa,EAAE,CAAC;IACxB,YAAA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACvC,SAAA;SACF,CAAA;IAEO,IAAA,0BAAA,CAAA,SAAA,CAAA,cAAc,GAAd,YAAA;;IACA,QAAA,IAAA,KAAqC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,MAAM,KAAI,EAAE,EAA5D,WAAW,iBAAA,EAAE,SAAS,eAAA,EAAE,MAAM,YAA8B,CAAC;YAErE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACjC,YAAA,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBAClC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAA,MAAM,KAAN,IAAA,IAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,UAAU,KAAI,EAAE,EAAE,CAAA,MAAM,KAAN,IAAA,IAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,eAAe,KAAI,EAAE,CAAC;IACrE,gBAAA,QAAQ,EAAE,CAAC,EAAE,EAAEwC,eAAU,CAAC,QAAQ,CAAC;iBACpC,CAAC;gBACF,WAAW,EAAE,CAAC,EAAE,EAAE,CAAA,WAAW,KAAX,IAAA,IAAA,WAAW,KAAX,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAW,CAAE,UAAU,KAAI,EAAE,EAAE,CAAA,WAAW,KAAX,IAAA,IAAA,WAAW,KAAX,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAW,CAAE,eAAe,KAAI,EAAE,CAAC;gBACpF,SAAS,EAAE,CAAC,EAAE,EAAE,CAAA,SAAS,KAAT,IAAA,IAAA,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,UAAU,KAAI,EAAE,EAAE,CAAA,SAAS,KAAT,IAAA,IAAA,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,eAAe,KAAI,EAAE,CAAC;IAC/E,SAAA,CAAC,CAAC;SACJ,CAAA;;;IAhMU,mBAAA,0BAAA,CAAA,IAAA,GAAAlC,aAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,0BAA0B,gGA0D3BmC,YAAS,EAAA,CAAA,EAAA,MAAA,EAAAnC,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IA1DR,mBAAA,0BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,0BAA0B,iNCzBvC,ktJA+GA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAO,eAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA6B,8BAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,SAAA,EAAA,SAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,uCAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,oBAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAvB,eAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAR,eAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAe,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAC,aAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;sHDtFa,0BAA0B,EAAA,UAAA,EAAA,CAAA;sBAJtCnB,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,2BAA2B;IACrC,oBAAA,WAAW,EAAE,sCAAsC;qBACpD,CAAA;;;kCA2DImC,SAAM;mCAACH,YAAS,CAAA;;6BAhDV,MAAM,EAAA,CAAA;0BAAd/B,QAAK;oBAyCoB,MAAM,EAAA,CAAA;0BAA/BW,YAAS;2BAAC,aAAa,CAAA;;;IEnEnB,IAAM,oBAAoB,GAAG,UAClC,YAAuC,EACvC,YAAwC,EAAA;IAExC,IAAA,IAAM,aAAa,GAAG,YAAY,IAAI,EAAE,CAAC;QAEzC,OAAO,aAAa,CAAC,MAAM,CAAC,UAAC,WAAwB,EAAA,EACnD,OAAA,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,eAA+B,CAAC,GAAG,IAAI,CAAA,EAAA,CACzF,CAAC;IACJ,CAAC,CAAC;IAEF;;IAEG;IACI,IAAM,kBAAkB,GAAG,UAAC,YAA2B,EAAE,OAAkC,EAAA;IAChG,IAAA,IAAM,aAAa,GAAG,YAAY,IAAI,EAAE,CAAC;IAEzC,IAAA,OAAO,aAAa,CAAC,MAAM,CAAC,UAAC,GAAgB,EAC3C,EAAA,OAAA,OAAO,IAAI,OAAO,CAAC,MAAM;IACvB,UAAE,OAAO,CAAC,KAAK,CAAC,UAAC,EAA2B,EAAA;oBAAzB,GAAG,GAAA,EAAA,CAAA,GAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;gBACzB,OAAO,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA,EAAI,OAAA,GAAG,CAAC,aAAa,IAAI,CAAC,KAAM,GAAG,CAAC,aAAiC,CAAC,GAAG,CAAC,CAAA,EAAA,CAAC,CAAC;IACjG,SAAC,CAAC;IACJ,UAAE,IAAI,CAJR,EAIQ,CACT,CAAC;IACJ,CAAC,CAAC;IAEK,IAAM,4BAA4B,GAAG,UAC1C,YAA8D,EAC9D,mBAA0D,EAC1D,oBAAuD,EACvD,QAAkB,EAAA;IAElB,IAAA,IAAI,CAAC,YAAY;IAAE,QAAA,OAAO,EAAE,CAAC;IAC7B,IAAA,IAAM,YAAY,GAAG,oBAAoB,IAAI,EAAE,CAAC;;QAEhD,YAAY,CAAC,IAAI,CAAC;YAChB,IAAI,EAAEwB,iCAAY,CAAC,iBAAiB;YACpC,EAAE,EAAEA,iCAAY,CAAC,iBAAiB;IACnC,KAAA,CAAC,CAAC;IACH,IAAA,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAEA,iCAAY,CAAC,iBAAiB,EAAE,EAAE,EAAEA,iCAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEvF,IAAM,oBAAoB,GAAG,YAAY;aACtC,MAAM,CAAC,UAAC,CAAsB,EAAA;IAC7B,QAAA,OAAO,QAAQ,KAAK,QAAQ,CAAC,IAAI;kBAC7B,CAAC,CAAC,EAAE,MAAK,mBAAmB,KAAnB,IAAA,IAAA,mBAAmB,KAAnB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,mBAAmB,CAAE,eAAe,CAAA;kBAC7C,CAAC,CAAC,IAAI,MAAK,mBAAmB,KAAnB,IAAA,IAAA,mBAAmB,KAAnB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,mBAAmB,CAAE,eAAe,CAAA,CAAC;IACtD,KAAC,CAAC;aACD,GAAG,CAAC,UAAA,CAAC,EAAI,EAAA,QAAC,QAAQ,KAAK,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,EAAC,EAAA,CAAC,CAAC;QAE1D,OAAO,YAAY,CAAC,MAAM,CAAC,UAAA,GAAG,EAAA,EAAI,OAAA,CAAC,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC,eAA+B,CAAC,CAAnE,EAAmE,CAAC,CAAC;IACzG,CAAC;;ACzCD,QAAA,iCAAA,kBAAA,UAAA,MAAA,EAAA;QAAuD,SAA4B,CAAA,iCAAA,EAAA,MAAA,CAAA,CAAA;IACjF,IAAA,SAAA,iCAAA,CAAqB,KAAgC,EAAA;YAArD,IACE,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IACb,IAAA,CAAA;IAFoB,QAAA,KAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;IAGrD;;IAEG;YACM,KAAA,CAAA,cAAc,GAAmC,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CACpFP,gBAAM,CAAC,OAAO,CAAC,EACfQ,eAAK,CAAC,MAAM,CAAC,CACd,CAAC;IACF;;IAEG;IACM,QAAA,KAAA,CAAA,gBAAgB,GAAwC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAACpB,cAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnG;;IAEG;IACH,QAAA,KAAmB,CAAA,mBAAA,GAAG,YAAY,CAAC;IACnC;;IAEG;IACM,QAAA,KAAS,CAAA,SAAA,GAAG1B,iBAAS,CAAC;;SApB9B;IAwBD,IAAA,iCAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;IACE,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;SAC9D,CAAA;IAED;;;;IAIG;QACH,iCAAgB,CAAA,SAAA,CAAA,gBAAA,GAAhB,UAAiB,EAAU,EAAA;IACzB,QAAA,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;SAClC,CAAA;IAED;;IAEG;IACH,IAAA,iCAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YAAA,IA6BC,KAAA,GAAA,IAAA,CAAA;IA5BO,QAAA,IAAA,EAAmC,GAAA,IAAI,CAAC,MAAM,IAAI,EAAE,EAAlD,MAAM,GAAA,EAAA,CAAA,MAAA,EAAE,oBAAoB,GAAA,EAAA,CAAA,oBAAsB,CAAC;IACnD,QAAA,IAAA,YAAY,GAAK,CAAA,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,WAAW,KAAI,EAAE,EAAA,YAA9B,CAA+B;YAEnDyB,kBAAa,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACjE,aAAA,IAAI,CAACC,cAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,UAAC,EAAiC,EAAA;IAAjC,YAAA,IAAA,EAAA,GAAA,aAAiC,EAAhC,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IAC1C,YAAA,IAAI,gBAAgB,KAAK,YAAY,CAAC,IAAI,KAAI,YAAY,KAAZ,IAAA,IAAA,YAAY,uBAAZ,YAAY,CAAE,QAAQ,CAACmB,iCAAY,CAAC,iBAAiB,CAAC,CAAA,EAAE;oBACpG,KAAI,CAAC,cAAc,EAAE,CAAC;IACvB,aAAA;IACD,YAAA,IAAI,aAAa,KAAK,YAAY,CAAC,IAAI;oBAAE,KAAI,CAAC,WAAW,EAAE,CAAC;IAC9D,SAAC,CAAC,CAAC;IAEL,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAC7CnB,cAAI,CAAC,CAAC,CAAC,EACPqB,wBAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAACrB,cAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACnDV,aAAG,CACD,UAAC,EAAmB,EAAA;IAAnB,YAAA,IAAA,EAAA,GAAA,aAAmB,EAAlB,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;gBACjB,OAAA,4BAA4B,CAAC,QAAQ,EAAE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,CAAC,IAAI,CAAkB,CAAA;aAAA,CACxG,CACF,CAAC;IAEF,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAC9C+B,wBAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAACrB,cAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACnDV,aAAG,CACD,UAAC,EAAmB,EAAA;IAAnB,YAAA,IAAA,EAAA,GAAA,aAAmB,EAAlB,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;gBACjB,OAAA,4BAA4B,CAAC,QAAQ,EAAE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,CAAC,IAAI,CAAsB,CAAA;aAAA,CAC5G,CACF,CAAC;SACH,CAAA;;KAxEH,CAAuD,4BAA4B;4KAAtE,iCAAiC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAR,yBAAA,EAAA,CAAA,EAAA,MAAA,EAAAF,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAjC,mBAAA,iCAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iCAAiC,EAHjC,QAAA,EAAA,mCAAA,EAAA,SAAA,EAAA,CAAC,yBAAyB,CAAC,gKCfxC,66OAqKA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,aAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,eAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAmC,8BAAA,EAAA,QAAA,EAAA,+BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,UAAA,EAAA,6BAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7B,aAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,WAAA,EAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,eAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,aAAA,EAAA,cAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAO,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,aAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAAtB,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHDnJa,iCAAiC,EAAA,UAAA,EAAA,CAAA;sBAN7CG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,mCAAmC;IAC7C,oBAAA,WAAW,EAAE,8CAA8C;wBAC3D,SAAS,EAAE,CAAC,yBAAyB,CAAC;wBACtC,eAAe,EAAEK,0BAAuB,CAAC,MAAM;qBAChD,CAAA;iHA0BoB,UAAU,EAAA,CAAA;0BAA5BO,YAAS;2BAAC,MAAM,CAAA;;;AExBnB,QAAA,+BAAA,kBAAA,UAAA,MAAA,EAAA;QAAqD,SAA4B,CAAA,+BAAA,EAAA,MAAA,CAAA,CAAA;IA4C/E,IAAA,SAAA,+BAAA,CAAqB,KAAgC,EAAA;YAArD,IACE,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAK,CAAC,IACb,IAAA,CAAA;IAFoB,QAAA,KAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;IA3CrD;;IAEG;IACH,QAAA,KAAW,CAAA,WAAA,GAAG,CAAC,CAAC;IAChB;;IAEG;YACM,KAAA,CAAA,SAAS,GAAsC,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC7E;;IAEG;YACM,KAAA,CAAA,kBAAkB,GAAuB,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAACiB,gBAAM,CAAC,OAAO,CAAC,EAAEQ,eAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3G;;IAEG;IACM,QAAA,KAAA,CAAA,oBAAoB,GAAwC,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAACpB,cAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3G;;IAEG;YACM,KAAA,CAAA,kBAAkB,GAAsC,KAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;IAC/F;;IAEG;IACH,QAAA,KAAe,CAAA,eAAA,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAC9CV,aAAG,CAAC,UAAA,OAAO,EAAA;;IACD,YAAA,IAAA,SAAS,GAAK,CAAA,CAAA,CAAA,EAAA,GAAA,KAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,KAAI,EAAE,WAA9B,CAA+B;gBACxC,IAAA,iBAAiB,GAAe6B,iCAAY,CAAA,iBAA3B,EAAE,QAAQ,GAAKA,iCAAY,CAAA,QAAjB,CAAkB;gBACrD,IAAM,8BAA8B,GAAG,CAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,eAAe,MAAK,iBAAiB,CAAC;gBACtF,IAAM,qBAAqB,GAAG,CAAA,SAAS,KAAT,IAAA,IAAA,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,YAAY,IAAG,SAAS,KAAT,IAAA,IAAA,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;IAC1G,YAAA,OAAO,CAAC,8BAA8B,IAAI,qBAAqB,CAAC;aACjE,CAAC,CACH,CAAC;IACF;;IAEG;IACH,QAAA,KAAiB,CAAA,iBAAA,GAAG,UAAU,CAAC;IAC/B;;IAEG;IACM,QAAA,KAAS,CAAA,SAAA,GAAG7C,iBAAS,CAAC;;SAM9B;IACD;;IAEG;IACH,IAAA,+BAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YAAA,IA4BC,KAAA,GAAA,IAAA,CAAA;IA3BO,QAAA,IAAA,EAAmC,GAAA,IAAI,CAAC,MAAM,IAAI,EAAE,EAAlD,MAAM,GAAA,EAAA,CAAA,MAAA,EAAE,oBAAoB,GAAA,EAAA,CAAA,oBAAsB,CAAC;IACnD,QAAA,IAAA,YAAY,GAAK,CAAA,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,SAAS,KAAI,EAAE,EAAA,YAA5B,CAA6B;YAEjDyB,kBAAa,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACjE,aAAA,IAAI,CAACC,cAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,UAAC,EAAiC,EAAA;IAAjC,YAAA,IAAA,EAAA,GAAA,aAAiC,EAAhC,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IAC1C,YAAA,IAAI,gBAAgB,KAAK,YAAY,CAAC,IAAI,KAAI,YAAY,KAAZ,IAAA,IAAA,YAAY,uBAAZ,YAAY,CAAE,QAAQ,CAACmB,iCAAY,CAAC,iBAAiB,CAAC,CAAA,EAAE;oBACpG,KAAI,CAAC,cAAc,EAAE,CAAC;IACvB,aAAA;IACD,YAAA,IAAI,aAAa,KAAK,YAAY,CAAC,IAAI;oBAAE,KAAI,CAAC,WAAW,EAAE,CAAC;IAC9D,SAAC,CAAC,CAAC;YAEL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAC9CnB,cAAI,CAAC,CAAC,CAAC,EACPqB,wBAAc,CAAC,IAAI,CAAC,oBAAoB,CAAC,EACzC/B,aAAG,CAAC,UAAC,EAAuB,EAAA;IAAvB,YAAA,IAAA,EAAA,GAAA,aAAuB,EAAtB,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,WAAW,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;gBACzB,OAAA,4BAA4B,CAAC,QAAQ,EAAE,WAAW,EAAE,oBAAoB,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAA;aAAA,CACvF,CACF,CAAC;YAEF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAC9C+B,wBAAc,CAAC,IAAI,CAAC,oBAAoB,CAAC,EACzC/B,aAAG,CACD,UAAC,EAAuB,EAAA;IAAvB,YAAA,IAAA,EAAA,GAAA,aAAuB,EAAtB,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,WAAW,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;gBACrB,OAAA,4BAA4B,CAAC,QAAQ,EAAE,WAAW,EAAE,oBAAoB,EAAE,QAAQ,CAAC,EAAE,CAAsB,CAAA;aAAA,CAC9G,CACF,CAAC;SACH,CAAA;IAED,IAAA,+BAAA,CAAA,SAAA,CAAA,eAAe,GAAf,YAAA;IACE,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;SAC9D,CAAA;IAED;;;;IAIG;QACH,+BAAW,CAAA,SAAA,CAAA,WAAA,GAAX,UAAY,EAAU,EAAA;YAAtB,IAYC,KAAA,GAAA,IAAA,CAAA;IAXC,QAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,EAAE,KAAK,CAAC,EAAE;IACZ,YAAA,IAAI,CAAC,kBAAkB;qBACpB,IAAI,CACHU,cAAI,CAAC,CAAC,CAAC,EACPY,gBAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,YAAY,CAAC,IAAI,CAAvB,EAAuB,CAAC,CACrC;IACA,iBAAA,SAAS,CAAC,YAAA;oBACT,KAAI,CAAC,WAAW,EAAE,CAAC;IACrB,aAAC,CAAC,CAAC;IACN,SAAA;SACF,CAAA;IACD;;;;IAIG;QACH,+BAAS,CAAA,SAAA,CAAA,SAAA,GAAT,UAAU,EAAU,EAAA;IAClB,QAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACzB,CAAA;IACD;;IAEG;IACH,IAAA,+BAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,QAAA,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;SAC5B,CAAA;;KAnHH,CAAqD,4BAA4B;0KAApE,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA9B,yBAAA,EAAA,CAAA,EAAA,MAAA,EAAAF,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA/B,mBAAA,+BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,+BAA+B,ECnB5C,QAAA,EAAA,iCAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,YAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,MAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,QAAA,EAAA,omWA4OA,ED3Nc,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,aAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,eAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,eAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,eAAA,CAAA,YAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA+B,8BAAA,EAAA,QAAA,EAAA,+BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,UAAA,EAAA,6BAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7B,eAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,aAAA,EAAA,cAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,aAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,WAAA,EAAA,eAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAsB,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,aAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,aAAA,CAAA,SAAA,EAAA,EAAA,UAAA,EAAA,CAACC,aAAQ,CAAC,EAAA,eAAA,EAAA7C,aAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;sHAEX,+BAA+B,EAAA,UAAA,EAAA,CAAA;sBAN3CG,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,iCAAiC;IAC3C,oBAAA,WAAW,EAAE,4CAA4C;wBACzD,eAAe,EAAEK,0BAAuB,CAAC,MAAM;wBAC/C,UAAU,EAAE,CAACqC,aAAQ,CAAC;qBACvB,CAAA;iHA2CoB,UAAU,EAAA,CAAA;0BAA5B9B,YAAS;2BAAC,MAAM,CAAA;;;IE3DnB,IAAM,MAAM,GAAG,eAAe,CAAC;IAC/B,IAAM,SAAS,GAAG;IAChB,IAAA,OAAO,EAAE,gBAAgB;IACzB,IAAA,KAAK,EAAE,kBAAkB;IACzB,IAAA,IAAI,EAAE,mBAAmB;IACzB,IAAA,OAAO,EAAE,gBAAgB;IACzB,IAAA,MAAM,EAAE,kBAAkB;KAC3B,CAAC;IAEF,IAAM,cAAc,GAAG+B,oBAAS,CAAC;IAC/B,IAAAC,gBAAK,CAAC;IACJ,QAAA,QAAQ,EAAE,UAAU;IACpB,QAAA,MAAM,EAAE,MAAM;IACd,QAAA,KAAK,EAAE,MAAM;IACb,QAAA,SAAS,EAAE,UAAU;IACrB,QAAA,OAAO,EAAE,OAAO;IAChB,QAAA,GAAG,EAAE,CAAC;SACP,CAAC;QACFC,kBAAO,CAAC,MAAM,EAAED,gBAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IAChD,CAAA,CAAC,CAAC;IAEa,SAAA,OAAO,CAAC,IAAY,EAAE,EAAU,EAAA;QAC9C,OAAO;YACLE,qBAAU,CAAC,QAAQ,EAAE;gBACnBC,uBAAY,CAAC,cAAc,EAAE;IAC3B,gBAAA,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE,EAAE,IAAA,EAAE;iBACrB,CAAC;aACH,CAAC;YACFD,qBAAU,CAAC,QAAQ,EAAE;gBACnBC,uBAAY,CAAC,cAAc,EAAE;oBAC3B,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE;iBAC/B,CAAC;aACH,CAAC;SACH,CAAC;IACJ,CAAC;IAED;IACO,IAAM,kBAAkB,GAAGC,kBAAO,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAEpG;IACO,IAAM,mBAAmB,GAAGA,kBAAO,CAAC,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAErG;IACO,IAAM,gBAAgB,GAAGA,kBAAO,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;;;IC3BhG,IAAM,WAAW,GAAU;IACzB,IAAA,YAAY,EAAE;IACZ,QAAAZ,iCAAY,CAAC,cAAc;IAC3B,QAAAA,iCAAY,CAAC,cAAc;IAC3B,QAAAA,iCAAY,CAAC,UAAU;IACvB,QAAAA,iCAAY,CAAC,WAAW;IACxB,QAAAA,iCAAY,CAAC,iBAAiB;IAC/B,KAAA;IACD,IAAA,KAAK,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,mCAAA,CAAA,EAAA,CAAA,mCAAmC,CAAA,CAAA,CAAA,CAAA;QACnD,QAAQ,EAAE,UAAA,QAAQ,EAAA;YAChB,OAAO,QAAQ,CAAC,MAAM,CAAC,UAAC,OAAoB,EAAA,EAAK,OAAA,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,QAAQ,KAAI,EAAE,CAAC,CAAA,EAAA,CAAC,CAAC;SAC3G;IACD,IAAA,0BAA0B,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,wEAAA,CAAA,EAAA,CAAA,wEAAwE,CAAA,CAAA,CAAA,CAAA;IAC7G,IAAA,UAAU,EAAE,CAACL,eAAU,CAAC,QAAQ,CAAC;IACjC,IAAA,kBAAkB,EAAE;IAClB,QAAA;IACE,YAAA,IAAI,EAAE,UAAU;IAChB,YAAA,OAAO,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,qEAAA,CAAA,EAAA,CAAA,qEAAqE,CAAA,CAAA,CAAA,CAAA;IACxF,SAAA;IACF,KAAA;KACF,CAAC;IAEF,IAAM,SAAS,GAAU;IACvB,IAAA,YAAY,EAAE;IACZ,QAAAK,iCAAY,CAAC,cAAc;IAC3B,QAAAA,iCAAY,CAAC,cAAc;IAC3B,QAAAA,iCAAY,CAAC,UAAU;IACvB,QAAAA,iCAAY,CAAC,WAAW;IACxB,QAAAA,iCAAY,CAAC,iBAAiB;IAC9B,QAAAA,iCAAY,CAAC,QAAQ;IACtB,KAAA;IACD,IAAA,KAAK,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,+BAAA,CAAA,EAAA,CAAA,+BAA+B,CAAA,CAAA,CAAA,CAAA;QAC/C,WAAW,EAAE,UAAC,QAAmB,EAAA,EAAK,OAAA,QAAQ,CAAC,MAAM,CAAC,UAAA,OAAO,IAAI,OAAA,CAAC,CAAC,OAAO,CAAC,MAAM,CAAhB,EAAgB,CAAC,CAAA,EAAA;IAClF,IAAA,0BAA0B,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,2EAAA,CAAA,EAAA,CAAA,2EAA2E,CAAA,CAAA,CAAA,CAAA;IAChH,IAAA,UAAU,EAAE,CAACL,eAAU,CAAC,QAAQ,CAAC;IACjC,IAAA,kBAAkB,EAAE;IAClB,QAAA;IACE,YAAA,IAAI,EAAE,UAAU;IAChB,YAAA,OAAO,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,4EAAA,CAAA,EAAA,CAAA,4EAA4E,CAAA,CAAA,CAAA,CAAA;IAC/F,SAAA;IACF,KAAA;KACF,CAAC;IAEF,IAAM,MAAM,GAAgB;IAC1B,IAAA,eAAe,EAAE,KAAK;IACtB,IAAA,WAAW,EAAE,IAAI;IACjB,IAAA,WAAW,EAAE,MAAM;IACnB,IAAA,cAAc,EAAE,+BAA+B;IAC/C,IAAA,KAAK,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,uCAAA,CAAA,EAAA,CAAA,uCAAuC,CAAA,CAAA,CAAA,CAAA;IACvD,IAAA,kBAAkB,EAAE;IAClB,QAAA;IACE,YAAA,IAAI,EAAE,SAAS;IACf,YAAA,OAAO,EAAE,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,sFAAA,CAAA,EAAA,CAAA,sFAAsF,CAAA,CAAA,CAAA,CAAA;IACzG,SAAA;IACF,KAAA;QACD,UAAU,EAAE,CAAC,gBAAgB,CAAC;KAC/B,CAAC;IAEF,IAAM,cAAc,GAAsC;QACxD,MAAM,EAAE,EAAE,WAAW,EAAA,WAAA,EAAE,SAAS,EAAA,SAAA,EAAE,MAAM,EAAA,MAAA,EAAE;IAC1C,IAAA,gBAAgB,EAAE,cAAc;QAChC,MAAM,GAAA,EAAA,GAAA,EAAA;IACJ,QAAA,EAAA,CAACxC,iBAAS,CAAC,IAAI,IAAG,SAAS,CAAA,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,gDAAA,CAAA,EAAA,CAAA,gDAAgD,CAAA,CAAA,CAAA,CAAA;IAC3E,QAAA,EAAA,CAACA,iBAAS,CAAC,IAAI,IAAG,SAAS,CAAA,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,yDAAA,CAAA,EAAA,CAAA,yDAAyD,CAAA,CAAA,CAAA,CAAA;IACpF,QAAA,EAAA,CAACA,iBAAS,CAAC,KAAK,IAAG,SAAS,CAAA,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,0DAAA,CAAA,EAAA,CAAA,0DAA0D,CAAA,CAAA,CAAA,CAAA;IACtF,QAAA,EAAA,CAACA,iBAAS,CAAC,MAAM,IAAG,SAAS,CAAA,iBAAA,KAAA,iBAAA,GAAA,oBAAA,CAAA,CAAA,uDAAA,CAAA,EAAA,CAAA,uDAAuD,CAAA,CAAA,CAAA,CAAA;IACrF,QAAA,EAAA,CAAA;IACD,IAAA,YAAY,EAAE;IACZ,QAAA,QAAQ,EAAE,mBAAmB;IAC7B,QAAA,QAAQ,EAAE,cAAc;IACxB,QAAA,OAAO,EAAE,oBAAoB;IAC9B,KAAA;IACD,IAAA,oBAAoB,EAAE;YACpB,EAAE,IAAI,EAAE6C,iCAAY,CAAC,WAAW,EAAE,EAAE,EAAEA,iCAAY,CAAC,WAAW,EAAE;YAChE,EAAE,IAAI,EAAEA,iCAAY,CAAC,UAAU,EAAE,EAAE,EAAEA,iCAAY,CAAC,UAAU,EAAE;IAC/D,KAAA;IACD,IAAA,gBAAgB,EAAE;IAChB,QAAA,WAAW,EAAE,IAAI;IACjB,QAAA,mBAAmB,EAAE;IACnB,YAAA,QAAQ,EAAE,CAAC;IACX,YAAA,MAAM,EAAE,CAAC;IACT,YAAA,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClB,SAAA;IACF,KAAA;KACF,CAAC;QAEW,sCAAsC,GAAG,IAAIa,iBAAc,CACtE,wDAAwD,EACxD;AAGF,QAAA,iCAAA,kBAAA,YAAA;IAGE,IAAA,SAAA,iCAAA,CAGmB,MAAyC,EAAA;IAAzC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAmC;YAE1D,IAAI,CAAC,OAAO,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAc,CAAK,GAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAG,CAAC;SAC9D;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,iCAAQ,CAAA,SAAA,EAAA,UAAA,EAAA;IAAZ,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,cAAc,CAAC;aACvB;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,iCAAM,CAAA,SAAA,EAAA,QAAA,EAAA;IAAV,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aAC5B;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,iCAAgB,CAAA,SAAA,EAAA,kBAAA,EAAA;IAApB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;aACtC;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,iCAAY,CAAA,SAAA,EAAA,cAAA,EAAA;IAAhB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;aAClC;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,iCAAoB,CAAA,SAAA,EAAA,sBAAA,EAAA;IAAxB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;aAC1C;;;IAAA,KAAA,CAAA,CAAA;IAED,IAAA,MAAA,CAAA,cAAA,CAAI,iCAA6B,CAAA,SAAA,EAAA,+BAAA,EAAA;IAAjC,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,6BAA6B,CAAC;aACnD;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,iCAAgB,CAAA,SAAA,EAAA,kBAAA,EAAA;IAApB,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;aACtC;;;IAAA,KAAA,CAAA,CAAA;IACD,IAAA,MAAA,CAAA,cAAA,CAAI,iCAAM,CAAA,SAAA,EAAA,QAAA,EAAA;IAAV,QAAA,GAAA,EAAA,YAAA;IACE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;aAC5B;;;IAAA,KAAA,CAAA,CAAA;;;IAvCU,mBAAA,iCAAA,CAAA,IAAA,GAAApD,aAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,iCAAiC,kBAKlC,sCAAsC,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;gLALrC,iCAAiC,EAAA,CAAA,CAAA;sHAAjC,iCAAiC,EAAA,UAAA,EAAA,CAAA;sBAD7CC,aAAU;;;kCAKNsB,WAAQ;;kCACRe,SAAM;mCAAC,sCAAsC,CAAA;;;;;AC9FlD,QAAA,6BAAA,kBAAA,YAAA;IAoBE,IAAA,SAAA,6BAAA,CACmB,KAAgC,EACzC,MAAc,EACd,cAA8B,EAC7B,MAAyC,EAAA;IAHjC,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;IACzC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;IACd,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;IAC7B,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAmC;IAvBpD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAIe,iBAAY,EAAE,CAAC;IACnC;;IAEG;IACM,QAAA,IAAS,CAAA,SAAA,GAAG3D,iBAAS,CAAC;IAC/B;;IAEG;YACM,IAAA,CAAA,YAAY,GAAsC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;IAEnF;;IAEG;IACM,QAAA,IAAU,CAAA,UAAA,GAAG,iDAAiD,CAAC;IACxE;;IAEG;IACM,QAAA,IAAkB,CAAA,kBAAA,GAAG,mDAAmD,CAAC;SAO9E;IAEJ,IAAA,6BAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YAAA,IAkBC,KAAA,GAAA,IAAA,CAAA;;IAjBC,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;iBACpC,IAAI,CACHsC,gBAAM,CAAC,UAAA,KAAK,EAAI,EAAA,OAAA,KAAK,YAAYsB,kBAAa,GAAA,CAAC,EAC/CC,mBAAS,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EACnDd,wBAAc,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,EACxE/B,aAAG,CAAC,UAAC,EAA6B,EAAA;oBAA7B,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAA6B,EAA5B,CAAC,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,SAAS,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IAC/B,YAAA,IAAI,SAAS,KAAK,YAAY,CAAC,IAAI;IAAE,gBAAA,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAChE,OAAO,EAAC,aAAa,KAAA,IAAA,IAAb,aAAa,KAAb,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,aAAa,CAAE,QAAQ,CAAC,aAAa,CAAC,CAAA,CAAC;IACjD,SAAC,CAAC,EACFsB,gBAAM,CAAC,OAAO,CAAC,EACfwB,mBAAS,CAAC,YAAA,EAAM,OAAA,KAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC,CAAvF,EAAuF,CAAC,CACzG;IACA,aAAA,SAAS,CAAC,YAAA;IACT,YAAA,IAAM,iBAAiB,GAAG,cAAc,CAAC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,eAAe,CAAC;IACnF,YAAA,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;IAClD,SAAC,CAAC,CAAC;YACL,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,MAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,eAAe,CAAC,CAAC;SAC/E,CAAA;IAED,IAAA,6BAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACnB,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC,CAAA;IAED;;IAEG;QACH,6BAAwB,CAAA,SAAA,CAAA,wBAAA,GAAxB,UAAyB,EAAU,EAAA;YACzB,IAAA,oBAAoB,GAAK,CAAA,IAAI,CAAC,MAAM,IAAI,EAAE,EAAA,oBAAtB,CAAuB;IACnD,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CACnCxB,gBAAM,CAAC,OAAO,CAAC,EACfZ,cAAI,CAAC,CAAC,CAAC,EACPqB,wBAAc,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EACnC/B,aAAG,CAAC,UAAC,EAAc,EAAA;IAAd,YAAA,IAAA,EAAA,GAAA,aAAc,EAAb,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IAChB,YAAA,IAAM,SAAS,GAAG,4BAA4B,CAC5C,GAAoB,EACpB,OAAO,EACP,oBAAoB,EACpB,QAAQ,CAAC,IAAI,CACd,CAAC;IACF,YAAA,OAAO,SAAS,CAAC,IAAI,CAAC,UAAC,IAAiB,EAAK,EAAA,OAAA,IAAI,CAAC,IAAI,KAAK,EAAE,CAAhB,EAAgB,CAAC,CAAC;IACjE,SAAC,CAAC,EACFsB,gBAAM,CAAC,OAAO,CAAC,CAChB,CAAC;SACH,CAAA;;;wKAxEU,6BAA6B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA9B,yBAAA,EAAA,EAAA,EAAA,KAAA,EAAAI,eAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,eAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAmD,iCAAA,EAAA,CAAA,EAAA,MAAA,EAAAzD,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAA7B,mBAAA,6BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,6BAA6B,oDAH7B,CAAC,iCAAiC,EAAE,yBAAyB,CAAC,ECjB3E,QAAA,EAAAA,aAAA,EAAA,QAAA,EAAA,qpCA8BA,EDZc,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA0D,0BAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,iCAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,+BAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,8BAAA,EAAA,QAAA,EAAA,+BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,oBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,uCAAA,EAAA,QAAA,EAAA,yCAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAlB,aAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,aAAA,CAAA,SAAA,EAAA,EAAA,UAAA,EAAA,CAAC,mBAAmB,EAAE,kBAAkB,EAAEmB,oBAAe,EAAEC,qBAAgB,CAAC,EAAA,CAAA,CAAA;sHAE7E,6BAA6B,EAAA,UAAA,EAAA,CAAA;sBANzC7D,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,2BAA2B;IACrC,oBAAA,WAAW,EAAE,uCAAuC;IACpD,oBAAA,SAAS,EAAE,CAAC,iCAAiC,EAAE,yBAAyB,CAAC;wBACzE,UAAU,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,EAAE4D,oBAAe,EAAEC,qBAAgB,CAAC;qBACzF,CAAA;;;IEnBM,IAAM,aAAa,GAAG,UAAU,CAAC;IACjC,IAAM,SAAS,GAAG,QAAQ,CAAC;IAC3B,IAAM,SAAS,GAAG,OAAO,CAAC;IAC1B,IAAM,WAAW,GAAG,aAAa,CAAC;IAClC,IAAM,UAAU,GAAG,CAAC,CAAC;IACrB,IAAM,SAAS,GAAG,GAAG;;ICF5B;;;;IAIG;IACI,IAAM,qBAAqB,GAAG,UAAC,GAAyB,EAAA;QAC7D,OAAO,GAAG,KAAH,IAAA,IAAA,GAAG,KAAH,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAG,CAAE,GAAG,CAAC,UAAA,MAAM,EAAA;IACpB,QAAA,IAAI,OAA2B,CAAC;YAChC,QAAQ,MAAM,CAAC,eAAe;IAC5B,YAAA,KAAK,cAAc;IACjB,gBAAA,OAAO,GAAG,MAAM,CAAC,eAAe,CAAC;oBACjC,MAAM;IACR,YAAA,KAAK,oBAAoB;IACvB,gBAAA,OAAO,GAAG,MAAM,CAAC,sBAAsB,CAAC;oBACxC,MAAM;IACR,YAAA;IACE,gBAAA,OAAO,GAAG,MAAM,CAAC,aAAa,CAAC;oBAC/B,MAAM;IACT,SAAA;YAED,OAAO;gBACL,IAAI,EAAE,MAAM,CAAC,EAAE;gBACf,OAAO,EAAE,OAAO,IAAI,CAAC;gBACrB,IAAI,EAAE,MAAM,CAAC,WAAW;gBACxB,QAAQ,EAAE,MAAM,CAAC,QAAQ;IACzB,YAAA,MAAM,EAAE,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM;gBACjE,uBAAuB,EAAE,MAAM,CAAC,uBAAuB;gBACvD,eAAe,EAAE,MAAM,CAAC,eAAe;IACvC,YAAA,aAAa,EAAE,MAAM;aACP,CAAC;IACnB,KAAC,CAAC,CAAC;IACL,CAAC;;ACTD,QAAA,wBAAA,kBAAA,YAAA;QAeE,SACmB,wBAAA,CAAA,6BAAwD,EACxD,cAAmC,EACnC,iBAAuC,EACvC,mBAA6C,EACjC,wBAAyD,EACrE,aAAgD,EAAA;IALhD,QAAA,IAA6B,CAAA,6BAAA,GAA7B,6BAA6B,CAA2B;IACxD,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAqB;IACnC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAsB;IACvC,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAA0B;IACjC,QAAA,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAAiC;IACrE,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAmC;IApB3D,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAItC,YAAO,EAAE,CAAC;IACjC,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAIA,YAAO,EAAyC,CAAC;IAE7E;;IAEG;YACK,IAAA,CAAA,wBAAwB,GAAG;IACjC,YAAA,YAAY,EAAE,aAAa;IAC3B,YAAA,SAAS,EAAE,SAAS;IACpB,YAAA,IAAI,EAAE,UAAU;IAChB,YAAA,IAAI,EAAE,SAAS;IACf,YAAA,gBAAgB,EAAE,cAAc;aACjC,CAAC;IAUM,QAAA,IAAA,EAAsD,GAAA,IAAI,CAAC,aAAa,IAAI,EAAE,EAA5E,6BAA6B,GAAA,EAAA,CAAA,6BAAA,EAAE,gBAAgB,GAAA,EAAA,CAAA,gBAA6B,CAAC;IAErF,QAAA,IAAI,CAAC,wBAAwB,GACxB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,wBAAwB,CAAA,EAC7B,6BAA6B,CAAA,GAC5B,gBAAgB,GAAG,EAAE,gBAAgB,EAAA,gBAAA,EAAE,GAAG,SAAS,EACxD,CAAC;SACH;IAED;;IAEG;IACH,IAAA,wBAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,YAAA;YACU,IAAA,MAAM,GAAK,CAAA,IAAI,CAAC,aAAa,IAAI,EAAE,EAAA,MAA7B,CAA8B;IACtC,QAAA,IAAA,EAA2C,GAAA,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,WAAW,KAAI,EAAE,EAAlE,YAAY,GAAA,EAAA,CAAA,YAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,QAAA,EAAE,YAAY,kBAA8B,CAAC;YAC3E,OAAO,IAAI,CAAC,6BAA6B;iBACtC,iCAAiC,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC7B,IAAI,CAAC,wBAAwB,KAChC,YAAY,EAAE,IAAI,EAClB,CAAA,CAAA;iBACD,IAAI,CACHhB,aAAG,CAAC,UAAC,GAA8B,EAAK,EAAA,OAAA,qBAAqB,CAAC,GAAG,CAAC,CAA1B,EAA0B,CAAC,EACnEA,aAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,oBAAoB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAA,EAAA,CAAC,EAC7DA,aAAG,CAAC,UAAA,QAAQ,EAAI,EAAA,OAAA,kBAAkB,CAAC,QAAQ,EAAE,YAAY,CAAkB,GAAA,CAAC,EAC5EA,aAAG,CAAC,UAAA,QAAQ,EAAA,EAAI,QAAC,QAAQ,KAAI,QAAQ,aAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,MAAM,CAAA,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,EAA7D,EAA8D,CAAC,CAChF,CAAC;SACL,CAAA;IAED;;IAEG;IACH,IAAA,wBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,YAAA;YACU,IAAA,MAAM,GAAK,CAAA,IAAI,CAAC,aAAa,IAAI,EAAE,EAAA,MAA7B,CAA8B;IACtC,QAAA,IAAA,EAA2C,GAAA,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAM,CAAE,SAAS,KAAI,EAAE,EAAhE,YAAY,GAAA,EAAA,CAAA,YAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,QAAA,EAAE,YAAY,kBAA4B,CAAC;YACzE,OAAO,IAAI,CAAC,6BAA6B;iBACtC,iCAAiC,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC7B,IAAI,CAAC,wBAAwB,KAChC,aAAa,EAAE,IAAI,EACnB,CAAA,CAAA;iBACD,IAAI,CACHA,aAAG,CAAC,UAAC,GAA8B,EAAK,EAAA,OAAA,qBAAqB,CAAC,GAAG,CAAC,CAA1B,EAA0B,CAAC,EACnEA,aAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,oBAAoB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAA,EAAA,CAAC,EAC7DA,aAAG,CAAC,UAAA,QAAQ,EAAI,EAAA,OAAA,kBAAkB,CAAC,QAAQ,EAAE,YAAY,CAAkB,GAAA,CAAC,EAC5EA,aAAG,CAAC,UAAA,QAAQ,EAAA,EAAI,QAAC,QAAQ,KAAI,QAAQ,aAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,MAAM,CAAA,GAAG,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,EAA7D,EAA8D,CAAC,CAChF,CAAC;SACL,CAAA;IAED;;IAEG;IACH,IAAA,wBAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;YACE,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;IACpE,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7CA,aAAG,CAAC,UAAC,QAA4C,EAC/C,EAAA,OAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,GAAG,CACX,UAAA,OAAO,EAAA,EACL,QAAC;gBACC,IAAI,EAAE,OAAO,CAAC,EAAE;gBAChB,IAAI,EAAE,OAAO,CAAC,IAAI;IAClB,YAAA,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI;gBACrE,eAAe,EAAE6B,iCAAY,CAAC,QAAQ;IACtC,YAAA,aAAa,EAAE,OAAO;aACX,EAAA,EAAA,CAChB,CATD,EASC,CACF,EACD7B,aAAG,CAAC,UAAA,QAAQ,EAAA,EAAI,QAAC,WAAW,KAAI,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,MAAM,CAAA,GAAG,WAAW,CAAC,QAAQ,CAAC,GAAG,QAAQ,EAAnE,EAAoE,CAAC,CACtF,CAAC;SACH,CAAA;IAED;;IAEG;IACH,IAAA,wBAAA,CAAA,SAAA,CAAA,mBAAmB,GAAnB,YAAA;IACE,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,IAAI,CACzCA,aAAG,CAAC,UAAC,IAAgC,EAAA;gBACnC,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,OAAO,IAAI,CAAC,QAAQ;yBACjB,MAAM,CAAC,UAAC,EAAmC,EAAA;IAAjC,oBAAA,IAAA,MAAM,GAAA,EAAA,CAAA,MAAA,CAAA;wBAAgC,OAAA,MAAM,KAAK,QAAQ,CAAA;IAAnB,iBAAmB,CAAC;yBACpE,GAAG,CACF,UAAC,EAAwF,EAAA;4BAAtF,iBAAiB,GAAA,EAAA,CAAA,iBAAA,EAAE,eAAe,GAAA,EAAA,CAAA,eAAA,EAAE,aAAa,GAAA,EAAA,CAAA,aAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;IAC5D,oBAAA,QAAC;IACC,wBAAA,IAAI,EAAE,iBAAiB;4BACvB,IAAI,EAAE,eAAe,IAAI,QAAQ;IACjC,wBAAA,MAAM,EAAE,aAAa;4BACrB,eAAe,EAAE6B,iCAAY,CAAC,iBAAiB;yBAC5B,EAAA;IALrB,iBAKqB,CACxB,CAAC;IACL,aAAA;gBACD,OAAO;aACR,CAAC,CACH,CAAC;SACH,CAAA;IAED;;IAEG;QACH,wBAAgB,CAAA,SAAA,CAAA,gBAAA,GAAhB,UAAiB,iBAAoC,EAAA;YAArD,IAWC,KAAA,GAAA,IAAA,CAAA;IAVC,QAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,EAAA,iBAAA,EAAE,CAAC,CAAC,IAAI,CAC3E0B,oBAAU,CAAC,UAAA,QAAQ,EAAA;;IACjB,YAAA,IAAI,CAAA,EAAA,GAAA,KAAI,CAAC,wBAAwB,0CAAE,4BAA4B,CAAC,QAA0B,CAAC,EAAE;IAC3F,gBAAA,KAAI,CAAC,wBAAwB,CAAC,QAA0B,CAAC,CAAC;IAC1D,gBAAA,OAAO,KAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;IAClD,aAAA;IAAM,iBAAA;IACL,gBAAA,OAAOC,OAAE,CAAC,QAAQ,CAAC,CAAC;IACrB,aAAA;aACF,CAAC,CACH,CAAC;SACH,CAAA;QAED,wBAAwB,CAAA,SAAA,CAAA,wBAAA,GAAxB,UAAyB,IAAqB,EAAA;IAC5C,QAAA,IAAM,cAAc,IAAI,CAAA,IAAI,KAAJ,IAAA,IAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAG,kBAAkB,CAAC,KAAI,EAAE,CAAW,CAAC;YACpE,OAAO,IAAI,CAAC,mBAAmB;IAC5B,aAAA,iCAAiC,CAAC,EAAE,cAAc,gBAAA,EAAE,EAAE,MAAM,CAAC;IAC7D,aAAA,IAAI,CAAC1B,eAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;SAClC,CAAA;QAED,wBAAwB,CAAA,SAAA,CAAA,wBAAA,GAAxB,UAAyB,QAAwB,EAAA;YAC/C,IAAI,CAAC,IAAI,CAAC,wBAAwB;gBAAE,OAAO;IAC3C,QAAA,IAAM,cAAc,GAAG,QAAQ,CAAC,kBAAkB,CAAC,CAAC;IAEpD,QAAA,IAAI,cAAc,EAAE;IAClB,YAAA,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC;IAC/C,gBAAA,IAAI,EAAE,QAAQ;IACd,gBAAA,mBAAmB,EAAE;IACnB,oBAAA,YAAY,EAAE,IAAI;IAClB,oBAAA,UAAU,EAAE,CAAC;wBACb,WAAW,EAAE,IAAI,CAAC,kBAAkB;wBACpC,SAAS,EAAE,IAAI,CAAC,QAAQ;IACzB,iBAAA;oBACD,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;oBACjD,SAAS,EAAE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC;oBACtE,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC;oBAC7D,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC7C,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;IAC3C,aAAA,CAAC,CAAC;IACJ,SAAA;SACF,CAAA;QAED,wBAAkB,CAAA,SAAA,CAAA,kBAAA,GAAlB,UAAmB,MAAc,EAAA;IAC/B,QAAA,OAAO,CAAC,CAAC,MAAM,IAAI,MAAM,KAAK,cAAc,CAAC,oBAAoB,IAAI,MAAM,KAAK,cAAc,CAAC,OAAO,CAAC;SACxG,CAAA;QAED,wBAA2B,CAAA,SAAA,CAAA,2BAAA,GAA3B,UAA4B,cAAsB,EAAA;YAAlD,IAOC,KAAA,GAAA,IAAA,CAAA;IANC,QAAA,IAAI,CAAC,mBAAmB;IACrB,aAAA,mBAAmB,CAAC,EAAE,cAAc,gBAAA,EAAE,EAAE,MAAM,CAAC;IAC/C,aAAA,IAAI,CAACV,mBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC9B,SAAS,CAAC,UAAA,QAAQ,EAAA;IACjB,YAAA,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5C,SAAC,CAAC,CAAC;SACN,CAAA;IAED,IAAA,wBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,YAAA;IACE,QAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;SACnC,CAAA;IAED,IAAA,wBAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACrB,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC1B,CAAA;;;mKArLU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA/B,eAAA,CAAA,yBAAA,EAAA,EAAA,EAAA,KAAA,EAAAO,eAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,eAAA,CAAA,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,eAAA,CAAA,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,eAAA,CAAA,+BAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAsD,iCAAA,EAAA,CAAA,EAAA,MAAA,EAAAnE,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;uKAAxB,wBAAwB,EAAA,CAAA,CAAA;sHAAxB,wBAAwB,EAAA,UAAA,EAAA,CAAA;sBADpCC,aAAU;;;kCAqBNsB,WAAQ;;;;ICdb,IAAA,oBAAA,kBAAA,YAAA;IACE,IAAA,SAAA,oBAAA,CACU,QAAiB,EACR,WAAqC,EAClC,oBAA0C,EAAA;YAHhE,IAII,KAAA,GAAA,IAAA,CAAA;IAHM,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;IACR,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAA0B;IAClC,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;IAGhE,QAAA,IAAa,CAAA,aAAA,GAAG6C,iBAAY,CAC1B,YAAA,EACE,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChBC,WAAM,CAAC,aAAa,CAAC,EACrBJ,oBAAU,CAAC,YAAA;gBACT,OAAO9C,kBAAa,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,EAAE,KAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,IAAI,CACpGT,aAAG,CAAC,UAAC,EAA+B,EAAA;IAA/B,gBAAA,IAAA,EAAA,GAAA,aAA+B,EAA9B,cAAc,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;oBAAM,OAAA,oBAAoB,CAAC,EAAE,aAAa,eAAA,EAAE,cAAc,EAAA,cAAA,EAAE,CAAC,CAAA;IAAvD,aAAuD,CAAC,EACjG4D,oBAAU,CAAC,UAAA,KAAK,EAAA,EACd,OAAAJ,OAAE,CAAC,kBAAkB,CAAC,EAAE,KAAK,EAAE,IAAIK,sBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,sBAAsB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA,EAAA,CACrG,CACF,CAAC;IACJ,SAAC,CAAC,CACH,CAVD,EAUC,CACJ,CAAC;IAEF,QAAA,IAAa,CAAA,aAAA,GAAGH,iBAAY,CAC1B,YAAA,EACE,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChBC,WAAM,CAAC,aAAa,CAAC,EACrBJ,oBAAU,CAAC,YAAA;gBACT,OAAO,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,CACxCvD,aAAG,CAAC,UAAC,QAAmB,IAAK,OAAA,oBAAoB,CAAC,EAAE,QAAQ,EAAA,QAAA,EAAE,CAAC,CAAlC,EAAkC,CAAC,EAChE4D,oBAAU,CAAC,UAAA,KAAK,EAAA,EACd,OAAAJ,OAAE,CAAC,kBAAkB,CAAC,EAAE,KAAK,EAAE,IAAIK,sBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,sBAAsB,EAAE,CAAC,EAAE,CAAC,CAAC,CAApG,EAAoG,CACrG,CACF,CAAC;IACJ,SAAC,CAAC,CACH,CAVD,EAUC,CACJ,CAAC;IAEF,QAAA,IAAgB,CAAA,gBAAA,GAAGH,iBAAY,CAC7B,YAAA,EACE,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChBC,WAAM,CAAC,qBAAqB,CAAC,EAC7BJ,oBAAU,CAAC,YAAA;IACT,YAAA,OAAO,KAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,IAAI,CAChDvD,aAAG,CAAC,UAAA,WAAW,EAAA,EAAI,OAAA,uBAAuB,CAAC,EAAE,WAAW,aAAA,EAAE,CAAC,CAAxC,EAAwC,CAAC,EAC5D4D,oBAAU,CAAC,UAAA,KAAK,EACd,EAAA,OAAAJ,OAAE,CACA,qBAAqB,CAAC;oBACpB,KAAK,EAAE,IAAIK,sBAAiB,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,+BAA+B,EAAE,CAAC;IAClF,aAAA,CAAC,CACH,CAAA,EAAA,CACF,CACF,CAAC;IACJ,SAAC,CAAC,CACH,CAdD,EAcC,CACJ,CAAC;YAEF,IAAiB,CAAA,iBAAA,GAAGH,iBAAY,CAC9B,YACE,EAAA,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChBC,WAAM,CAAC,iBAAiB,CAAC,EACzBJ,oBAAU,CAAC,UAAA,MAAM,EAAA;IACf,YAAA,OAAO,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC3DvD,aAAG,CAAC,UAAA,IAAI,EAAA;IACN,gBAAA,IAAI,CAAC,EAAC,IAAI,KAAJ,IAAA,IAAA,IAAI,uBAAJ,IAAI,CAAE,EAAE,CAAA,IAAI,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC,QAAQ,EAAE;wBACzD,IAAI,KAAI,CAAC,oBAAoB,EAAE;IAC7B,wBAAA,KAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,CAAC;IAC/C,qBAAA;wBACD,OAAO,oBAAoB,EAAE,CAAC;IAC/B,iBAAA;IAAM,qBAAA;IACL,oBAAA,OAAO,kBAAkB,CAAC,EAAE,KAAK,EAAE,IAAI6D,sBAAiB,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,EAAE,CAAC,CAAC;IACrG,iBAAA;iBACF,CAAC,EACFD,oBAAU,CAAC,UAAA,KAAK,EAAA,EAAI,OAAAJ,OAAE,CAAC,kBAAkB,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC,CAAjC,EAAiC,CAAC,CACvD,CAAC;IACJ,SAAC,CAAC,CACH,CAjBD,EAiBC,CACJ,CAAC;IAEF,QAAA,IAAA,CAAA,eAAe,GAAGE,iBAAY,CAC5B,YAAA,EACE,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChBC,WAAM,CAAC,eAAe,CAAC,EACvB3D,aAAG,CAAC,YAAA,EAAM,OAAA,QAAQ,CAAC,EAAE,IAAI,EAAEhB,iBAAS,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,GAAA,CAAC,CACjE,CAHD,EAGC,CACJ,CAAC;IAEF,QAAA,IAAA,CAAA,eAAe,GAAG0E,iBAAY,CAC5B,YAAA,EACE,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChBC,WAAM,CAAC,cAAc,CAAC,EACtB3D,aAAG,CAAC,YAAA,EAAM,OAAA,QAAQ,CAAC,EAAE,IAAI,EAAEhB,iBAAS,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,GAAA,CAAC,CACnE,CAHD,EAGC,CACJ,CAAC;SAvFE;;;+JALO,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAK,eAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAAyE,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAAzE,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;mKAApB,oBAAoB,EAAA,CAAA,CAAA;sHAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;sBADhCC,aAAU;;;kCAKNsB,WAAQ;;;;ICNb,SAAS,UAAU,CAAC,KAAU,EAAE,KAAa,EAAE,IAAW,EAAA;QACxD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;IACvC,CAAC;IAEM,IAAM,oBAAoB,GAAGmD,gBAAa,CAC/C,YAAY,EACZC,KAAE,CAAC,aAAa,EAAE,UAAA,KAAK,EAAI,EAAA,QACtB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,CACR,EAAA,EAAA,iBAAiB,EAAE,YAAY,CAAC,OAAO,EAAA,CAAA,EAFd,EAGzB,CAAC,EACHA,KAAE,CAAC,kBAAkB,EAAE,UAAC,KAAK,EAAE,EAAS,EAAA;IAAP,IAAA,IAAA,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;QAAO,wCACxC,KAAK,CAAA,EAAA,EACR,iBAAiB,EAAE,EAAE,KAAK,EAAA,KAAA,EAAE,EAAA,CAAA,EAC5B;IAH2C,CAG3C,CAAC,EACHA,KAAE,CAAC,oBAAoB,EAAE,UAAC,KAAK,EAAE,EAAiC,EAAA;YAA/B,aAAa,GAAA,EAAA,CAAA,aAAA,EAAE,cAAc,GAAA,EAAA,CAAA,cAAA,CAAA;IAAO,IAAA,QAClE,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,KACR,aAAa,EAAA,aAAA,EACb,cAAc,EAAA,cAAA,EACd,iBAAiB,EAAE,YAAY,CAAC,MAAM,EACtC,CAAA,EAAA;IALqE,CAKrE,CAAC,EACHA,KAAE,CAAC,aAAa,EAAE,UAAA,KAAK,EAAI,EAAA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACtB,KAAK,CAAA,EAAA,EACR,iBAAiB,EAAE,YAAY,CAAC,OAAO,KACvC,EAAA,CAAC,EACHA,KAAE,CAAC,kBAAkB,EAAE,UAAC,KAAK,EAAE,EAAS,EAAA;IAAP,IAAA,IAAA,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;QAAO,QACxC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,CACR,EAAA,EAAA,iBAAiB,EAAE,EAAE,KAAK,EAAA,KAAA,EAAE,EAAA,CAAA,EAC5B;IAH2C,CAG3C,CAAC,EACHA,KAAE,CAAC,oBAAoB,EAAE,UAAC,KAAK,EAAE,EAAY,EAAA;IAAV,IAAA,IAAA,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;QAAO,wCAC7C,KAAK,CAAA,EAAA,EACR,QAAQ,EAAA,QAAA,EACR,iBAAiB,EAAE,YAAY,CAAC,MAAM,EAAA,CAAA,EACtC;IAJgD,CAIhD,CAAC,EACHA,KAAE,CAAC,qBAAqB,EAAE,UAAA,KAAK,EAAI,EAAA,wCAC9B,KAAK,CAAA,EAAA,EACR,oBAAoB,EAAE,YAAY,CAAC,OAAO,EAC1C,CAAA,EAAA,EAAA,CAAC,EACHA,KAAE,CAAC,uBAAuB,EAAE,UAAC,KAAK,EAAE,EAAe,EAAA;IAAb,IAAA,IAAA,WAAW,GAAA,EAAA,CAAA,WAAA,CAAA;QAAO,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACnD,KAAK,CACR,EAAA,EAAA,WAAW,EAAA,WAAA,EACX,oBAAoB,EAAE,YAAY,CAAC,MAAM,EAAA,CAAA,EACzC;IAJsD,CAItD,CAAC,EACHA,KAAE,CAAC,qBAAqB,EAAE,UAAC,KAAK,EAAE,EAAS,EAAA;IAAP,IAAA,IAAA,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;QAAO,wCAC3C,KAAK,CAAA,EAAA,EACR,oBAAoB,EAAE,EAAE,KAAK,EAAA,KAAA,EAAE,EAC/B,CAAA,EAAA;IAH8C,CAG9C,CAAC,EACHA,KAAE,CAAC,cAAc,EAAE,UAAC,KAAK,EAAE,EAAa,EAAA;IAAX,IAAA,IAAA,SAAS,GAAA,EAAA,CAAA,SAAA,CAAA;;IACpC,IAAA,IAAM,SAAS,GAAO,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,EAAC,KAAK,CAAC,WAAW,IAAI,EAAE,EAAM,CAAA,EAAA,MAAA,EAAC,KAAK,CAAC,aAAa,IAAI,EAAE,GAAE,CAAC;QACjF,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,UAAC,CAAc,EAAK,EAAA,OAAA,CAAC,CAAC,IAAI,KAAK,SAAS,CAAA,EAAA,CAAC,IAAI,EAAE,CAAC;IAC/E,IAAA,IAAM,QAAQ,GAAG,CAAA,CAAC,EAAA,GAAA,OAAuB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,KAAI,KAAK,CAAC,eAAe,CAAC;QAC7E,OACK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,KACR,WAAW,EAAE,OAAsB,EACnC,MAAM,EAAE,EAAE,MAAM,EAAE,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,KAAI,EAAE,EAAE,QAAQ,EAAA,QAAA,EAAE,EACxD,CAAA,CAAA;IACJ,CAAC,CAAC,EACFA,KAAE,CAAC,eAAe,EAAE,UAAC,KAAK,EAAE,EAAM,EAAA;IAAJ,IAAA,IAAA,EAAE,GAAA,EAAA,CAAA,EAAA,CAAA;QAC9B,IAAM,SAAS,GAAO,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,EAAC,KAAK,CAAC,WAAW,IAAI,EAAE,EAAM,CAAA,EAAA,MAAA,EAAC,KAAK,CAAC,cAAc,IAAI,EAAE,EAAC,CAAA,EAAA,MAAA,EAAM,KAAK,CAAC,QAAQ,IAAI,EAAE,EAAC,CAAC,CAAC;IAC7G,IAAA,IAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,UAAA,CAAC,EAAA,EAAI,OAAA,CAAC,CAAC,IAAI,KAAK,EAAE,CAAb,EAAa,CAAgB,CAAC;IAClE,IAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,KAAK,CAAA,EAAA,EACR,OAAO,EAAE,OAAO,EAChB,CAAA,CAAA;IACJ,CAAC,CAAC,EACFA,KAAE,CAAC,YAAY,EAAE,UAAC,KAAK,EAAE,EAAU,EAAA;IAAR,IAAA,IAAA,MAAM,GAAA,EAAA,CAAA,MAAA,CAAA;IAC/B,IAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,KAAK,CAAA,EAAA,EACR,WAAW,EAAE,MAAM,EACnB,CAAA,CAAA;IACJ,CAAC,CAAC,EACFA,KAAE,CAAC,SAAS,EAAE,UAAC,KAAK,EAAE,EAA2B,EAAA;YAAzB,MAAM,GAAA,EAAA,CAAA,MAAA,EAAE,eAAe,GAAA,EAAA,CAAA,eAAA,CAAA;;IAC7C,IAAA,IAAM,SAAS,GAAG;IAChB,QAAA,MAAM,EAAA,MAAA;IACN,QAAA,QAAQ,EAAE,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,MAAM,0CAAE,QAAQ,IAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,eAAe;SACzD,CAAC;IACpB,IAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,KAAK,CAAA,EAAA,EACR,MAAM,EAAE,SAAS,EACjB,CAAA,CAAA;IACJ,CAAC,CAAC,EACFA,KAAE,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,EAAe,EAAA;YAAb,IAAI,GAAA,EAAA,CAAA,IAAA,EAAE,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;QAChC,OACK,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,KACR,SAAS,EAAE,IAAI,EACf,YAAY,EAAE,KAAK,EACnB,CAAA,CAAA;IACJ,CAAC,CAAC,EACFA,KAAE,CAAC,UAAU,EAAE,UAAA,KAAK,EAAA;IAClB,IAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,KAAK,CAAA,EAAA,EACR,YAAY,EAAE,SAAS,EACvB,CAAA,CAAA;IACJ,CAAC,CAAC,EACFA,KAAE,CAAC,iBAAiB,EAAE,UAAA,KAAK,EAAA,EAAI,wCAC1B,KAAK,CAAA,EAAA,EACR,sBAAsB,EAAE,YAAY,CAAC,OAAO,EAAA,CAAA,EAFf,EAG7B,CAAC,EACHA,KAAE,CAAC,oBAAoB,EAAE,UAAA,KAAK,EAAA,EAAI,QAC7B,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,KACR,sBAAsB,EAAE,YAAY,CAAC,MAAM,EAC3C,WAAW,EAAE,KAAK,EAClB,SAAS,EAAEjF,iBAAS,CAAC,QAAQ,KAC7B,EAAA,CAAC,EACHiF,KAAE,CAAC,kBAAkB,EAAE,UAAC,KAAK,EAAE,EAAS,EAAA;IAAP,IAAA,IAAA,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;IAAO,IAAA,QACxC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,KACR,sBAAsB,EAAE,EAAE,KAAK,EAAA,KAAA,EAAE,EACjC,WAAW,EAAE,KAAK,EAClB,SAAS,EAAEjF,iBAAS,CAAC,QAAQ,EAC7B,CAAA,EAAA;IAL2C,CAK3C,CAAC,EACHiF,KAAE,CAAC,WAAW,EAAE,UAAC,KAAK,EAAE,EAAS,EAAA;IAAP,IAAA,IAAA,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;QAAO,QACjC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,KACR,sBAAsB,EAAE,YAAY,CAAC,IAAI,EACzC,SAAS,EAAEjF,iBAAS,CAAC,IAAI,EACzB,OAAO,EAAE,SAAS,EAClB,MAAM,EAAE,SAAS,EACjB,WAAW,EAAE,SAAS,EACtB,aAAa,EAAE,EAAE,EACjB,YAAY,EAAE,KAAK,IAAI,SAAS,EAChC,CAAA,EAAA;IAToC,CASpC,CAAC,EACHiF,KAAE,CAAC,eAAe,EAAE,UAAC,KAAK,EAAE,EAAa,EAAA;IAAX,IAAA,IAAA,SAAS,GAAA,EAAA,CAAA,SAAA,CAAA;IAAO,IAAA,QACzC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,KACR,aAAa,EAAE,aAAI,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAA,KAAK,CAAC,aAAa,CAAE,CAAA,EAAA,CAAA,SAAS,CAAE,CAAA,CAAA,MAAM,CAAC,UAAU,CAAC,EACrE,CAAA,EAAA;IAH4C,CAG5C,CAAC,EACHA,KAAE,CAAC,kBAAkB,EAAE,UAAC,KAAK,EAAE,EAAY,EAAA;IAAV,IAAA,IAAA,QAAQ,GAAA,EAAA,CAAA,QAAA,CAAA;QAAO,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC3C,KAAK,CACR,EAAA,EAAA,eAAe,EAAE,QAAQ,EAAA,CAAA,EACzB;IAH8C,CAG9C,CAAC,CACJ;;AC7ID,QAAA,wBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,wBAAA,GAAA;;;;mKAAa,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA3E,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oKAAxB,wBAAwB,EAAA,OAAA,EAAA,CAAAD,aAAA,CAAA,kBAAA,EAAAO,eAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,CAAA;IAAxB,mBAAA,wBAAA,CAAA,IAAA,GAAAN,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,wBAAwB,EAFxB,SAAA,EAAA,CAAC,oBAAoB,CAAC,EAJxB,OAAA,EAAA,CAAA;IACP,YAAA4E,cAAW,CAAC,UAAU,CAAC,sBAAsB,EAAE,oBAAoB,CAAC;IACpE,YAAAC,kBAAa,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,CAAC;aACjD,CAAA,EAAA,CAAA,CAAA;sHAGU,wBAAwB,EAAA,UAAA,EAAA,CAAA;sBARpCC,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;IACR,oBAAA,YAAY,EAAE,EAAE;IAChB,oBAAA,OAAO,EAAE;IACP,wBAAAF,cAAW,CAAC,UAAU,CAAC,sBAAsB,EAAE,oBAAoB,CAAC;IACpE,wBAAAC,kBAAa,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,CAAC;IACjD,qBAAA;wBACD,SAAS,EAAE,CAAC,oBAAoB,CAAC;qBAClC,CAAA;;;ICiBD,IAAM,SAAS,GAAG;QAChBE,iCAA4B;QAC5BC,eAAY;QACZC,iBAAY;QACZC,aAAU;QACVC,iCAAmB;QACnBC,8BAAa;QACbC,kCAA6B;QAC7BC,cAAS;QACTC,yBAAsB;QACtBC,gBAAW;QACXC,mBAAgB;QAChBC,qBAAgB;QAChBC,eAAY;QACZC,sBAAiB;KAClB,CAAC;IAEF,IAAM,UAAU,GAAG;QACjB,0BAA0B;QAC1B,4BAA4B;QAC5B,iCAAiC;QACjC,8BAA8B;QAC9B,+BAA+B;QAC/B,uCAAuC;QACvC,8BAA8B;QAC9B,8BAA8B;QAC9B,6BAA6B;QAC7B,uCAAuC;KACxC,CAAC;AAQF,QAAA,0BAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,0BAAA,GAAA;;;;qKAAa,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA5F,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;IAA1B,mBAAA,0BAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,0BAA0B,iBAlBrC,0BAA0B;YAC1B,4BAA4B;YAC5B,iCAAiC;YACjC,8BAA8B;YAC9B,+BAA+B;YAC/B,uCAAuC;YACvC,8BAA8B;YAC9B,8BAA8B;YAC9B,6BAA6B;YAC7B,uCAAuC,aAK7B6F,eAAY,EAAEC,wBAAmB,EAAE,wBAAwB,EA/BrEf,iCAA4B;YAC5BC,eAAY;YACZC,iBAAY;YACZC,aAAU;YACVC,iCAAmB;YACnBC,8BAAa;YACbC,kCAA6B;YAC7BC,cAAS;YACTC,yBAAsB;YACtBC,gBAAW;YACXC,mBAAgB;YAChBC,qBAAgB;YAChBC,eAAY;IACZ,QAAAC,sBAAiB,aAIjB,0BAA0B;YAC1B,4BAA4B;YAC5B,iCAAiC;YACjC,8BAA8B;YAC9B,+BAA+B;YAC/B,uCAAuC;YACvC,8BAA8B;YAC9B,8BAA8B;YAC9B,6BAA6B;YAC7B,uCAAuC,EAMd,wBAAwB,EAhCjDb,iCAA4B;YAC5BC,eAAY;YACZC,iBAAY;YACZC,aAAU;YACVC,iCAAmB;YACnBC,8BAAa;YACbC,kCAA6B;YAC7BC,cAAS;YACTC,yBAAsB;YACtBC,gBAAW;YACXC,mBAAgB;YAChBC,qBAAgB;YAChBC,eAAY;YACZC,sBAAiB,CAAA,EAAA,CAAA,CAAA;sKAsBN,0BAA0B,EAAA,SAAA,EAF1B,CAAC,wBAAwB,EAAE,iCAAiC,CAAC,EAAA,OAAA,EAAA,gBAF9DC,eAAY,EAAEC,wBAAmB,EAAE,wBAAwB,UAAK,SAAS,CAAA,CAAA,EAC1D,wBAAwB,EAhCjDf,iCAA4B;YAC5BC,eAAY;YACZC,iBAAY;YACZC,aAAU;YACVC,iCAAmB;YACnBC,8BAAa;YACbC,kCAA6B;YAC7BC,cAAS;YACTC,yBAAsB;YACtBC,gBAAW;YACXC,mBAAgB;YAChBC,qBAAgB;YAChBC,eAAY;YACZC,sBAAiB,CAAA,EAAA,CAAA,CAAA;sHAsBN,0BAA0B,EAAA,UAAA,EAAA,CAAA;sBANtCd,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACR,YAAY,EAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAM,UAAU,CAAC,CAAA;wBAC7B,OAAO,EAAA,aAAA,CAAA,CAAGe,eAAY,EAAEC,wBAAmB,EAAE,wBAAwB,CAAA,EAAA,MAAA,CAAK,SAAS,CAAC,CAAA;IACpF,oBAAA,OAAO,uDAAM,UAAU,CAAA,CAAA,EAAA,CAAE,wBAAwB,CAAA,CAAA,EAAA,MAAA,CAAK,SAAS,CAAC,CAAA;IAChE,oBAAA,SAAS,EAAE,CAAC,wBAAwB,EAAE,iCAAiC,CAAC;qBACzE,CAAA;;;IClED;;IAEG;;;;;;;;;;;;;;;;;;;;;;;;;;"}