import * as i0 from '@angular/core';
import { Injectable, Component, Input, Directive, EventEmitter, Output, NgModule } from '@angular/core';
import * as i1$9 from '@backbase/foundation-ang/core';
import { BbTemplate, BackbaseCoreModule } from '@backbase/foundation-ang/core';
import * as i2 from '@backbase/user-common';
import { InputBase, ManageProfileEmailAddressFormComponent, EditEmailAddressComponent, ManageEmailAddressComponent, NewEmailAddressComponent, ManageEmailAddressesComponent, PhoneNumberInputBase, ManageProfilePhoneNumberFormComponent, ManageProfilePostalAddressFormComponent, EditPhoneNumberComponent, ManagePhoneNumberComponent, NewPhoneNumberComponent, ManagePhoneNumbersComponent, EditPostalAddressComponent, ManagePostalAddressComponent, NewPostalAddressComponent, ManagePostalAddressesComponent, ManageProfileComponent, filterInputParameters, convertCommaSeparatedStringToStringArray, ManageProfilePreferencesService, ManageProfileService, UserCommonModule } from '@backbase/user-common';
import { __rest } from 'tslib';
import { map, pluck, switchMap, first, tap, catchError } from 'rxjs/operators';
import * as i1 from '@backbase/data-ang/user';
import * as i3$2 from '@backbase/ui-ang/notification';
import { NotificationModule } from '@backbase/ui-ang/notification';
import * as i1$1 from '@backbase/ui-ang/alert';
import { AlertModule } from '@backbase/ui-ang/alert';
import * as i4 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i1$2 from '@backbase/ui-ang/dropdown-single-select';
import { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';
import * as i2$1 from '@backbase/ui-ang/input-validation-message';
import { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';
import * as i3 from '@angular/forms';
import { ReactiveFormsModule } from '@angular/forms';
import * as i1$3 from '@backbase/ui-ang/input-email';
import { InputEmailModule } from '@backbase/ui-ang/input-email';
import * as i1$4 from '@backbase/ui-ang/input-checkbox';
import { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';
import * as i5$1 from '@backbase/ui-ang/load-button';
import { LoadButtonModule } from '@backbase/ui-ang/load-button';
import * as i4$1 from '@backbase/ui-ang/icon';
import { IconModule } from '@backbase/ui-ang/icon';
import * as i1$5 from '@backbase/ui-ang/modal';
import { ModalModule } from '@backbase/ui-ang/modal';
import * as i5 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';
import * as i3$1 from '@backbase/ui-ang/button';
import { ButtonModule } from '@backbase/ui-ang/button';
import * as i1$6 from '@backbase/ui-ang/badge';
import { BadgeModule } from '@backbase/ui-ang/badge';
import * as i2$2 from '@backbase/ui-ang/empty-state';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import * as i1$7 from '@backbase/ui-ang/input-phone';
import { InputPhoneModule } from '@backbase/ui-ang/input-phone';
import * as i1$8 from '@backbase/ui-ang/input-text';
import { InputTextModule } from '@backbase/ui-ang/input-text';
import * as i5$2 from '@backbase/ui-ang/phone-number-format-pipe';
import { PhoneNumberModule, PhoneNumberPipe } from '@backbase/ui-ang/phone-number-format-pipe';
import { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';
import { BehaviorSubject, of } from 'rxjs';
import * as i3$3 from '@backbase/ui-ang/loading-indicator';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import * as i4$2 from '@backbase/ui-ang/common-error-state';
import { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';

class UserManageProfileService {
    constructor(data, manageProfileService) {
        this.data = data;
        this.manageProfileService = manageProfileService;
    }
    getUserProfile() {
        return this.data.getOwnUserProfile().pipe(map(this.manageProfileService.sortUserContactListsByPrimary));
    }
    createElectronicAddressRecord(electronicAddress) {
        return this.data.addOwnElectronicAddress({ electronicAddress });
    }
    updateElectronicAddressRecord(electronicAddress) {
        const { key } = electronicAddress, record = __rest(electronicAddress, ["key"]);
        return this.data.updateOwnElectronicAddress({
            electronicAddressKey: electronicAddress.key,
            electronicAddress: record,
        });
    }
    deleteElectronicAddressRecord(electronicAddress) {
        return this.data.deleteOwnElectronicAddress({ electronicAddressKey: electronicAddress.key });
    }
    createPhoneAddressRecord(phoneAddress) {
        return this.data.addOwnPhoneAddress({ phoneAddress });
    }
    updatePhoneAddressRecord(phoneAddress) {
        const { key } = phoneAddress, record = __rest(phoneAddress, ["key"]);
        return this.data.updateOwnPhoneAddress({
            phoneAddressKey: phoneAddress.key,
            phoneAddress: record,
        });
    }
    deletePhoneAddressRecord(phoneAddress) {
        return this.data.deleteOwnPhoneAddress({ phoneAddressKey: phoneAddress.key });
    }
    createPostalAddressRecord(postalAddress) {
        return this.data.addOwnPostalAddress({ postalAddress });
    }
    updatePostalAddressRecord(postalAddress) {
        const { key } = postalAddress, record = __rest(postalAddress, ["key"]);
        return this.data.updateOwnPostalAddress({
            postalAddressKey: postalAddress.key,
            postalAddress: record,
        });
    }
    deletePostalAddressRecord(postalAddress) {
        return this.data.deleteOwnPostalAddress({ postalAddressKey: postalAddress.key });
    }
}
UserManageProfileService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileService, deps: [{ token: i1.UserProfileManagementService }, { token: i2.ManageProfileService }], target: i0.ɵɵFactoryTarget.Injectable });
UserManageProfileService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.UserProfileManagementService }, { type: i2.ManageProfileService }]; } });

class UserProfileFormErrorsComponent {
    get hasErrors() {
        if (!this.formGroup) {
            throw new Error('formGroup must be initialised to type FormGroup');
        }
        return Boolean(this.formGroup && this.formGroup.touched && this.hasBeenSubmittedWithErrors);
    }
}
UserProfileFormErrorsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormErrorsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
UserProfileFormErrorsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormErrorsComponent, selector: "bb-user-profile-form-errors", inputs: { formGroup: "formGroup", hasBeenSubmittedWithErrors: "hasBeenSubmittedWithErrors" }, ngImport: i0, template: "<bb-alert-ui *ngIf=\"hasErrors\" i18n-title=\"Form errors title|Title for the form errors list@@bb-user-email-address-form.errors.title\"\n  title=\"There is a problem, please check the form\">\n  <ng-content></ng-content>\n</bb-alert-ui>", components: [{ type: i1$1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormErrorsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-profile-form-errors',
                    templateUrl: './user-profile-form-errors.component.html',
                }]
        }], propDecorators: { formGroup: [{
                type: Input
            }], hasBeenSubmittedWithErrors: [{
                type: Input
            }] } });

class UserEmailAddressTypeInputComponent extends InputBase {
    ngOnInit() {
        if (this.emailAddressTypes && !this.emailAddressTypes.includes(this.fieldControl.value)) {
            this.fieldControl.setValue(this.emailAddressTypes[0]);
        }
    }
}
UserEmailAddressTypeInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserEmailAddressTypeInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressTypeInputComponent, selector: "bb-user-email-address-type-input", inputs: { emailAddressTypes: "emailAddressTypes" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserEmailAddressTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEmailAddressTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-email-manage-type\"\n      i18n-label=\"Email address type label|Label for the email address type field@@bb-user-user-email-address-type-input.label\"\n      label=\"Email address type\"\n      [options]=\"hostRef.emailAddressTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserEmailAddressTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserEmailAddressTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$2.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserEmailAddressTypeInputCustomizableDirective; }), selector: "[bbUserEmailAddressTypeInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserEmailAddressTypeErrorsCustomizableDirective; }), selector: "[bbUserEmailAddressTypeErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-email-address-type-input',
                    templateUrl: './user-email-address-type-input.component.html',
                }]
        }], propDecorators: { emailAddressTypes: [{
                type: Input
            }] } });
class UserEmailAddressTypeInputCustomizableDirective extends BbTemplate {
}
UserEmailAddressTypeInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressTypeInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressTypeInputCustomizableDirective, selector: "[bbUserEmailAddressTypeInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressTypeInputCustomizable]',
                }]
        }] });
class UserEmailAddressTypeErrorsCustomizableDirective extends BbTemplate {
}
UserEmailAddressTypeErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressTypeErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressTypeErrorsCustomizableDirective, selector: "[bbUserEmailAddressTypeErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressTypeErrorsCustomizable]',
                }]
        }] });

class UserEmailAddressInputComponent extends InputBase {
}
UserEmailAddressInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserEmailAddressInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressInputComponent, selector: "bb-user-email-address-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserEmailAddressInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEmailAddressInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-email-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-email-manage-email\"\n      i18n-label=\"Email address label|Label for the email address field@@bb-user-email-address-input.label\"\n      label=\"Email address\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"255\">\n    </bb-input-email-ui>\n\n    <ng-container bbUserEmailAddressInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserEmailAddressInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Email address required error|Error to say that email address is a required field@@bb-user-email-address-input.errors.required\">\n      You must enter an email address.\n    </span>\n    <span *ngIf=\"hostRef.fieldControl.errors?.email\" i18n=\"Email address format error|Error to say that email address is formatted incorrectly@@bb-user-email-address-input.errors.formatted\">\n      Email address must be in a valid format.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$3.InputEmailComponent; }), selector: "bb-input-email-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserEmailAddressInputCustomizableDirective; }), selector: "[bbUserEmailAddressInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserEmailAddressInputErrorsCustomizableDirective; }), selector: "[bbUserEmailAddressInputErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-email-address-input',
                    templateUrl: './user-email-address-input.component.html',
                }]
        }] });
class UserEmailAddressInputCustomizableDirective extends BbTemplate {
}
UserEmailAddressInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressInputCustomizableDirective, selector: "[bbUserEmailAddressInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressInputCustomizable]',
                }]
        }] });
class UserEmailAddressInputErrorsCustomizableDirective extends BbTemplate {
}
UserEmailAddressInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressInputErrorsCustomizableDirective, selector: "[bbUserEmailAddressInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressInputErrorsCustomizable]',
                }]
        }] });

class UserPrimaryCheckboxInputComponent extends InputBase {
    constructor() {
        super(...arguments);
        this.availableTypes = {
            address: 'postalAddress',
            phone: 'phoneNumber',
            email: 'emailAddress',
        };
    }
    ngOnInit() {
        this.id = this.generateId('email-checkbox');
    }
    generateId(elementKey) {
        return `${elementKey}-${Math.random().toString(36).substring(2, 9)}`;
    }
}
UserPrimaryCheckboxInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPrimaryCheckboxInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPrimaryCheckboxInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPrimaryCheckboxInputComponent, selector: "bb-user-primary-checkbox-input", inputs: { type: "type" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPrimaryCheckboxInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPrimaryCheckboxInputCustomizable let-hostRef>\n  <div class=\"form-group\">\n    <div [formGroup]=\"hostRef.formGroup\">\n      <bb-input-checkbox-ui *ngIf=\"hostRef.type === hostRef.availableTypes.email\" data-role=\"user-manage-profile-email-manage-primary\" [id]=\"hostRef.id\" i18n-label=\"Primary email address label|Label for the is primary email address field@@bb-user-primary-checkbox-input.email-address-label\"\n        label=\"This is my primary email address\" [formControlName]=\"hostRef.fieldName\">\n      </bb-input-checkbox-ui>\n      <bb-input-checkbox-ui *ngIf=\"hostRef.type === hostRef.availableTypes.phone\" data-role=\"user-manage-profile-phone-manage-primary\" [id]=\"hostRef.id\" i18n-label=\"Primary phone number label|Label for the is primary phone number field@@bb-user-primary-checkbox-input.phone-number-label\"\n        label=\"This is my primary phone number\" [formControlName]=\"hostRef.fieldName\">\n      </bb-input-checkbox-ui>\n      <bb-input-checkbox-ui *ngIf=\"hostRef.type === hostRef.availableTypes.address\" data-role=\"user-manage-profile-postal-manage-primary\" [id]=\"hostRef.id\" i18n-label=\"Primary postal address label|Label for the is primary postal address field@@bb-user-primary-checkbox-input.postal-address-label\"\n        label=\"This is my primary address\" [formControlName]=\"hostRef.fieldName\">\n      </bb-input-checkbox-ui>\n    </div>\n  </div>\n</ng-template>", components: [{ type: i0.forwardRef(function () { return i1$4.InputCheckboxComponent; }), selector: "bb-input-checkbox-ui", inputs: ["indeterminate"], outputs: ["indeterminateChange"] }], directives: [{ type: i0.forwardRef(function () { return UserPrimaryCheckboxInputCustomizableDirective; }), selector: "[bbUserPrimaryCheckboxInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPrimaryCheckboxInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-primary-checkbox-input',
                    templateUrl: './user-primary-checkbox-input.component.html',
                }]
        }], propDecorators: { type: [{
                type: Input
            }] } });
class UserPrimaryCheckboxInputCustomizableDirective extends BbTemplate {
}
UserPrimaryCheckboxInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPrimaryCheckboxInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPrimaryCheckboxInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPrimaryCheckboxInputCustomizableDirective, selector: "[bbUserPrimaryCheckboxInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPrimaryCheckboxInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPrimaryCheckboxInputCustomizable]',
                }]
        }] });

// eslint-disable-next-line @angular-eslint/directive-class-suffix
class UserModalBase {
    constructor() {
        /**
         * Whether the modal is open.
         * Defaults to false.
         */
        this.isOpen = false;
        this.close = new EventEmitter();
        this.dismiss = new EventEmitter();
    }
    closeModal() {
        this.close.emit();
    }
    dismissModal() {
        this.dismiss.emit();
    }
}
UserModalBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserModalBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });
UserModalBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserModalBase, selector: "[bbUserModalBase]", inputs: { isOpen: "isOpen" }, outputs: { close: "close", dismiss: "dismiss" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserModalBase, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserModalBase]',
                }]
        }], propDecorators: { isOpen: [{
                type: Input
            }], close: [{
                type: Output
            }], dismiss: [{
                type: Output
            }] } });

class UserProfileFormCancelModalComponent extends UserModalBase {
}
UserProfileFormCancelModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormCancelModalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserProfileFormCancelModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormCancelModalComponent, selector: "bb-user-profile-form-cancel-modal", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserProfileFormCancelModalCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserProfileFormCancelModalCustomizable let-hostRef>\n  <bb-modal-ui [isOpen]=\"hostRef.isOpen\" (cancel)=\"hostRef.dismissModal()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Discard changes modal title|Title of the confirmation modal for discarding working changes@@bb-user-profile-form-cancel-modal.title\"\n          heading=\"Discard changes?\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody\n        i18n=\"Discard changes modal body|Body text of the confirmation modal for discarding working changes@@bb-user-profile-form-cancel-modal.body\">\n        Are you sure you want to cancel and discard all changes?\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          data-role=\"user-manage-profile-modal-cancel-button\"\n          color=\"secondary\"\n          (click)=\"hostRef.dismissModal()\"\n          i18n=\"Dismiss discard modal button|Text of the button that dismisses the discard changes confirmation modal@@bb-user-profile-form-cancel-modal.cancel\">\n          Continue editing\n        </button>\n        <button bbButton\n          data-role=\"user-manage-profile-modal-confirm-button\"\n          color=\"danger\"\n          (click)=\"hostRef.closeModal()\"\n          i18n=\"Confirm discard modal button|Text of the button that confirms the discard changes confirmation modal@@bb-user-profile-form-cancel-modal.confirm\">\n          Discard changes\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$5.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i1$5.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i1$5.ModalBodyComponent; }), selector: "bb-modal-body-ui" }, { type: i0.forwardRef(function () { return i1$5.ModalFooterComponent; }), selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i0.forwardRef(function () { return UserProfileFormCancelModalCustomizableDirective; }), selector: "[bbUserProfileFormCancelModalCustomizable]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalHeaderDirective; }), selector: "ng-template[bbCustomModalHeader]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalFooterDirective; }), selector: "ng-template[bbCustomModalFooter]" }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormCancelModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-profile-form-cancel-modal',
                    templateUrl: './user-profile-form-cancel-modal.component.html',
                }]
        }] });
class UserProfileFormCancelModalCustomizableDirective extends BbTemplate {
}
UserProfileFormCancelModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormCancelModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserProfileFormCancelModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormCancelModalCustomizableDirective, selector: "[bbUserProfileFormCancelModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormCancelModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserProfileFormCancelModalCustomizable]',
                }]
        }] });

class UserProfileFormDeleteEmailAddressModalComponent extends UserModalBase {
}
UserProfileFormDeleteEmailAddressModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeleteEmailAddressModalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserProfileFormDeleteEmailAddressModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormDeleteEmailAddressModalComponent, selector: "bb-user-profile-form-delete-email-address-modal", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserProfileFormDeleteEmailAddressModalCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserProfileFormDeleteEmailAddressModalCustomizable let-hostRef>\n  <bb-modal-ui data-role=\"user-manage-profile-delete-email-modal\" [isOpen]=\"hostRef.isOpen\"\n    (cancel)=\"hostRef.dismissModal()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Delete email address modal title|Title of the confirmation modal for deleting an email address@@bb-user-profile-form-delete-email-address-modal.title\"\n          heading=\"Delete email address?\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody\n        i18n=\"Delete email address modal body|Body text of the confirmation modal for deleting an email address@@bb-user-profile-form-delete-email-address-modal.body\">\n        Are you sure you want to delete this email address? This action can not be undone\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-cancel-button\"\n          color=\"secondary\"\n          (click)=\"hostRef.dismissModal()\"\n          i18n=\"Dismiss delete email address modal button|Text of the button that dismisses the delete an email address modal@@bb-user-profile-form-delete-email-address-modal.dismiss\">\n          Cancel\n        </button>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-confirm-button\"\n          color=\"danger\"\n          (click)=\"hostRef.closeModal()\"\n          i18n=\"Confirm delete email address modal button|Text of the button that confirms the delete an email address modal@@bb-user-profile-form-delete-email-address-modal.confirm\">\n          Delete email address\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$5.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i1$5.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i1$5.ModalBodyComponent; }), selector: "bb-modal-body-ui" }, { type: i0.forwardRef(function () { return i1$5.ModalFooterComponent; }), selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i0.forwardRef(function () { return UserProfileFormDeleteEmailAddressModalCustomizableDirective; }), selector: "[bbUserProfileFormDeleteEmailAddressModalCustomizable]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalHeaderDirective; }), selector: "ng-template[bbCustomModalHeader]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalFooterDirective; }), selector: "ng-template[bbCustomModalFooter]" }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeleteEmailAddressModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-profile-form-delete-email-address-modal',
                    templateUrl: './user-profile-form-delete-email-address-modal.component.html',
                }]
        }] });
class UserProfileFormDeleteEmailAddressModalCustomizableDirective extends BbTemplate {
}
UserProfileFormDeleteEmailAddressModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeleteEmailAddressModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserProfileFormDeleteEmailAddressModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormDeleteEmailAddressModalCustomizableDirective, selector: "[bbUserProfileFormDeleteEmailAddressModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeleteEmailAddressModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserProfileFormDeleteEmailAddressModalCustomizable]',
                }]
        }] });

class UserEmailAddressFormComponent extends ManageProfileEmailAddressFormComponent {
}
UserEmailAddressFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressFormComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserEmailAddressFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressFormComponent, selector: "bb-user-email-address-form", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserEmailAddressFormCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEmailAddressFormCustomizable let-hostRef>\n  <form #emailAddressFormElement *ngIf=\"hostRef.form\" [formGroup]=\"hostRef.form\" (submit)=\"hostRef.handleSubmit()\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-user-profile-form-errors [formGroup]=\"hostRef.form\" [hasBeenSubmittedWithErrors]=\"hostRef.showFormErrors && !hostRef.form.valid\">\n        <ng-container bbUserEmailAddressFormErrorsCustomizable [bbHostRef]=\"hostRef\">\n        </ng-container>\n      </bb-user-profile-form-errors>\n\n      <bb-user-email-address-type-input\n        fieldName=\"type\"\n        [formGroup]=\"hostRef.form\"\n        [emailAddressTypes]=\"hostRef.types\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-email-address-type-input>\n\n      <bb-user-email-address-input\n        fieldName=\"address\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-email-address-input>\n\n      <bb-user-primary-checkbox-input fieldName=\"primary\" type=\"emailAddress\" [formGroup]=\"hostRef.form\">\n      </bb-user-primary-checkbox-input>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <bb-load-button-ui\n        data-role=\"user-manage-profile-email-manage-save\"\n        type=\"submit\"\n        class=\"bb-button-bar__button\"\n        [isLoading]=\"hostRef.isSubmitting\"\n        [disabled]=\"hostRef.isSubmitting\"\n        i18n=\"Save email address button|Text of the button that triggers saving of new email address@@bb-user-email-address-form.save-button\">\n        Save email address\n      </bb-load-button-ui>\n      <button bbButton\n        data-role=\"user-manage-profile-manage-cancel-button\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.handleCancelClick()\"\n        i18n=\"Cancel button|Text of the button that triggers cancellation of new email address@@bb-user-email-address-form.cancel-button\">\n        Cancel\n      </button>\n      <button bbButton\n        data-role=\"user-manage-profile-email-delete-button\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        *ngIf=\"hostRef.showDeleteButton\"\n        color=\"link\"\n        (click)=\"hostRef.handleDelete()\">\n        <bb-icon-ui name=\"delete\"></bb-icon-ui>\n        <span i18n=\"Delete email address button|Text for the button that allows the user to delete an email address@@bb-user-email-address-form.delete-button\">\n          Delete\n        </span>\n      </button>\n    </div>\n  </form>\n\n  <bb-user-profile-form-cancel-modal [isOpen]=\"hostRef.isCancelModalOpen\" (dismiss)=\"hostRef.dismissCancelModal()\"\n    (close)=\"hostRef.closeCancelModal()\">\n  </bb-user-profile-form-cancel-modal>\n\n  <bb-user-profile-form-delete-email-address-modal [isOpen]=\"hostRef.isDeleteModalOpen\" (dismiss)=\"hostRef.dismissDeleteModal()\"\n    (close)=\"hostRef.closeDeleteModal()\">\n  </bb-user-profile-form-delete-email-address-modal>\n</ng-template>\n\n<ng-template bbUserEmailAddressFormErrorsCustomizable let-hostRef>\n  <p *ngIf=\"hostRef.form.controls.type.errors?.required\">\n    <u i18n=\"Type required error|Error to say that type is a required field@@bb-user-email-address-form.errors.type-required\">\n      You must enter a type.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.address.errors?.required\">\n    <u i18n=\"Email address required error|Error to say that email address is a required field@@bb-user-email-address-form.errors.address-required\">\n      You must enter an email address.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.address.errors?.email\">\n    <u i18n=\"Email address format error|Error to say that email address is formatted incorrectly@@bb-user-email-address-form.errors.address-formatted\">\n      Email address must be in a valid format.\n    </u>\n  </p>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserProfileFormErrorsComponent; }), selector: "bb-user-profile-form-errors", inputs: ["formGroup", "hasBeenSubmittedWithErrors"] }, { type: i0.forwardRef(function () { return UserEmailAddressTypeInputComponent; }), selector: "bb-user-email-address-type-input", inputs: ["emailAddressTypes"] }, { type: i0.forwardRef(function () { return UserEmailAddressInputComponent; }), selector: "bb-user-email-address-input" }, { type: i0.forwardRef(function () { return UserPrimaryCheckboxInputComponent; }), selector: "bb-user-primary-checkbox-input", inputs: ["type"] }, { type: i0.forwardRef(function () { return i5$1.LoadButtonComponent; }), selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i0.forwardRef(function () { return i4$1.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return UserProfileFormCancelModalComponent; }), selector: "bb-user-profile-form-cancel-modal" }, { type: i0.forwardRef(function () { return UserProfileFormDeleteEmailAddressModalComponent; }), selector: "bb-user-profile-form-delete-email-address-modal" }], directives: [{ type: i0.forwardRef(function () { return UserEmailAddressFormCustomizableDirective; }), selector: "[bbUserEmailAddressFormCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return UserEmailAddressFormErrorsCustomizableDirective; }), selector: "[bbUserEmailAddressFormErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressFormComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-email-address-form',
                    templateUrl: './user-email-address-form.component.html',
                }]
        }] });
class UserEmailAddressFormCustomizableDirective extends BbTemplate {
}
UserEmailAddressFormCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressFormCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressFormCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressFormCustomizableDirective, selector: "[bbUserEmailAddressFormCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressFormCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressFormCustomizable]',
                }]
        }] });
class UserEmailAddressFormErrorsCustomizableDirective extends BbTemplate {
}
UserEmailAddressFormErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressFormErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressFormErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressFormErrorsCustomizableDirective, selector: "[bbUserEmailAddressFormErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressFormErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressFormErrorsCustomizable]',
                }]
        }] });

class UserEditEmailAddressComponent extends EditEmailAddressComponent {
    constructor(manageProfileService, manageProfilePreferencesService, cd, notificationService) {
        super(manageProfilePreferencesService, cd, notificationService);
        this.manageProfileService = manageProfileService;
        this.manageProfilePreferencesService = manageProfilePreferencesService;
        this.cd = cd;
        this.notificationService = notificationService;
    }
    handleSaveClick(emailAddressData) {
        this.isSubmitting = true;
        this.manageProfileService
            .updateElectronicAddressRecord(emailAddressData)
            .pipe(this.handleUpdateResponse()).connect();
    }
    handleDeleteClick(emailAddressData) {
        this.isSubmitting = true;
        this.manageProfileService
            .deleteElectronicAddressRecord(emailAddressData)
            .pipe(this.handleDeleteResponse()).connect();
    }
}
UserEditEmailAddressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditEmailAddressComponent, deps: [{ token: UserManageProfileService }, { token: i2.ManageProfilePreferencesService }, { token: i0.ChangeDetectorRef }, { token: i3$2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
UserEditEmailAddressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserEditEmailAddressComponent, selector: "bb-user-edit-email-address", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserEditEmailAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEditEmailAddressCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-email-edit-container\">\n    <ng-container bbUserEditEmailAddressTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-email-address-form\n      [data]=\"hostRef.emailAddressData\"\n      [count]=\"hostRef.emailAddressCount\"\n      [types]=\"hostRef.emailAddressTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\"\n      (delete)=\"hostRef.handleDeleteClick($event)\">\n    </bb-user-email-address-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserEditEmailAddressTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"Edit email address title|Text for the title of the edit email address card@@bb-user-edit-email-address.title\"\n      heading=\"Edit email address\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationUpdateSuccess>\n  <span data-role=\"user-manage-profile-email-edit-success-notification\" i18n=\"Email Address update notification|Notification text for when the email address is updated@@bb-user-edit-email-address.notification.update-success\">\n    Changes saved successfully\n  </span>\n</ng-template>\n\n<ng-template #notificationDeleteSuccess>\n  <span data-role=\"user-manage-profile-delete-email-success-notification\" i18n=\"Email Address delete notification|Notification text for when the email address is deleted@@bb-user-edit-email-address.notification.delete-success\">\n    Email address successfully deleted\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Email Address action failed notification|Notification text for when the email address action failed@@bb-user-edit-email-address.notification.failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserEmailAddressFormComponent; }), selector: "bb-user-email-address-form" }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserEditEmailAddressCustomizableDirective; }), selector: "[bbUserEditEmailAddressCustomizable]" }, { type: i0.forwardRef(function () { return UserEditEmailAddressTitleCustomizableDirective; }), selector: "[bbUserEditEmailAddressTitleCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditEmailAddressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-edit-email-address',
                    templateUrl: './user-edit-email-address.component.html',
                }]
        }], ctorParameters: function () { return [{ type: UserManageProfileService }, { type: i2.ManageProfilePreferencesService }, { type: i0.ChangeDetectorRef }, { type: i3$2.NotificationService }]; } });
class UserEditEmailAddressCustomizableDirective extends BbTemplate {
}
UserEditEmailAddressCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditEmailAddressCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEditEmailAddressCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEditEmailAddressCustomizableDirective, selector: "[bbUserEditEmailAddressCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditEmailAddressCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEditEmailAddressCustomizable]',
                }]
        }] });
class UserEditEmailAddressTitleCustomizableDirective extends BbTemplate {
}
UserEditEmailAddressTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditEmailAddressTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEditEmailAddressTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEditEmailAddressTitleCustomizableDirective, selector: "[bbUserEditEmailAddressTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditEmailAddressTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEditEmailAddressTitleCustomizable]',
                }]
        }] });

class UserManageEmailAddressComponent extends ManageEmailAddressComponent {
}
UserManageEmailAddressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserManageEmailAddressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserManageEmailAddressComponent, selector: "bb-user-manage-email-address", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserManageEmailAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManageEmailAddressCustomizable let-hostRef>\n  <div *ngIf=\"hostRef.electronicAddress && !hostRef.managingEmailAddress\"\n    class=\"bb-stack\"\n    data-role=\"user-manage-profile-email-item\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-stack bb-stack--wrap\">\n        <strong class=\"bb-stack__item\">{{hostRef.electronicAddress.type}}</strong>\n        <bb-badge-ui\n          class=\"bb-stack_item\"\n          *ngIf=\"hostRef.electronicAddress.primary\"\n          color=\"success\"\n          i18n-text=\"Primary email address text|Text for the primary email address badge@@bb-user-manage-email-address.primary\"\n          text=\"Primary\">\n        </bb-badge-ui>\n        <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-right bb-text-align-left--sm-down break-word\">\n          {{hostRef.electronicAddress.address}}\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-stack__item\">\n      <button bbButton\n        data-role=\"user-manage-profile-manage-button\"\n        color=\"link\"\n        [disabled]=\"hostRef.disableManage\"\n        (click)=\"hostRef.handleManageEmailAddress()\"\n        i18n=\"Manage email address button|Text for the button that allows the user to manage an email address@@bb-user-manage-email-address.manage-email-button\"\n        attr.aria-label=\"Manage {{hostRef.electronicAddress.primary ? 'primary ' : ''}}{{hostRef.electronicAddress.type}} email address, {{hostRef.electronicAddress.address}}\"\n        i18n-attr.aria-label=\"Manage email address button aria label@@bb-user-manage-email-address.manage-email-button.aria-label\">\n        Manage\n      </button>\n    </div>\n  </div>\n\n  <bb-user-edit-email-address *ngIf=\"hostRef.managingEmailAddress\"\n    (close)=\"hostRef.handleCloseEditEmailAddress()\"\n    (closeAfterSave)=\"hostRef.handleCloseEditEmailAddressAfterSave()\"\n    [emailAddressTypes]=\"hostRef.emailAddressTypes\"\n    [emailAddressData]=\"hostRef.electronicAddress\"\n    [emailAddressCount]=\"hostRef.emailAddressCount\"\n    [notificationDismissTime]=\"hostRef.dismissTimeout\">\n  </bb-user-edit-email-address>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$6.BadgeComponent; }), selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i0.forwardRef(function () { return UserEditEmailAddressComponent; }), selector: "bb-user-edit-email-address" }], directives: [{ type: i0.forwardRef(function () { return UserManageEmailAddressCustomizableDirective; }), selector: "[bbUserManageEmailAddressCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-manage-email-address',
                    templateUrl: './user-manage-email-address.component.html',
                }]
        }] });
class UserManageEmailAddressCustomizableDirective extends BbTemplate {
}
UserManageEmailAddressCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManageEmailAddressCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManageEmailAddressCustomizableDirective, selector: "[bbUserManageEmailAddressCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManageEmailAddressCustomizable]',
                }]
        }] });

class UserNewEmailAddressComponent extends NewEmailAddressComponent {
    constructor(manageProfileService, manageProfilePreferencesService, cd, notificationService) {
        super(manageProfilePreferencesService, cd, notificationService);
        this.manageProfileService = manageProfileService;
        this.manageProfilePreferencesService = manageProfilePreferencesService;
        this.cd = cd;
        this.notificationService = notificationService;
    }
    handleSaveClick(emailAddress) {
        this.isSubmitting = true;
        this.manageProfileService
            .createElectronicAddressRecord(emailAddress)
            .pipe(this.handleServiceResponse()).connect();
    }
}
UserNewEmailAddressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewEmailAddressComponent, deps: [{ token: UserManageProfileService }, { token: i2.ManageProfilePreferencesService }, { token: i0.ChangeDetectorRef }, { token: i3$2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
UserNewEmailAddressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserNewEmailAddressComponent, selector: "bb-user-new-email-address", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserNewEmailAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserNewEmailAddressCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-email-add-container\">\n    <ng-container bbUserNewEmailAddressTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-email-address-form\n      [data]=\"hostRef.newEmailAddressData\"\n      [types]=\"hostRef.emailAddressTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\">\n    </bb-user-email-address-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserNewEmailAddressTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"New email address title|Text for the title of the new email address card@@bb-user-new-email-address.title\"\n      heading=\"Add email address\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span data-role=\"user-manage-profile-email-add-success-notification\" i18n=\"Email Address creation notification|Notification text for when the email address is created@@bb-user-new-email-address.notification.creation-success\">\n    Email address successfully added\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Email Address creation failed notification|Notification text for when the email address failed to create@@bb-user-new-email-address.notification.creation-failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserEmailAddressFormComponent; }), selector: "bb-user-email-address-form" }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserNewEmailAddressCustomizableDirective; }), selector: "[bbUserNewEmailAddressCustomizable]" }, { type: i0.forwardRef(function () { return UserNewEmailAddressTitleCustomizableDirective; }), selector: "[bbUserNewEmailAddressTitleCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewEmailAddressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-new-email-address',
                    templateUrl: './user-new-email-address.component.html',
                }]
        }], ctorParameters: function () { return [{ type: UserManageProfileService }, { type: i2.ManageProfilePreferencesService }, { type: i0.ChangeDetectorRef }, { type: i3$2.NotificationService }]; } });
class UserNewEmailAddressCustomizableDirective extends BbTemplate {
}
UserNewEmailAddressCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewEmailAddressCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserNewEmailAddressCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserNewEmailAddressCustomizableDirective, selector: "[bbUserNewEmailAddressCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewEmailAddressCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserNewEmailAddressCustomizable]',
                }]
        }] });
class UserNewEmailAddressTitleCustomizableDirective extends BbTemplate {
}
UserNewEmailAddressTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewEmailAddressTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserNewEmailAddressTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserNewEmailAddressTitleCustomizableDirective, selector: "[bbUserNewEmailAddressTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewEmailAddressTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserNewEmailAddressTitleCustomizable]',
                }]
        }] });

class UserManageEmailAddressesComponent extends ManageEmailAddressesComponent {
}
UserManageEmailAddressesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserManageEmailAddressesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserManageEmailAddressesComponent, selector: "bb-user-manage-email-addresses", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserManageEmailAddressesCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManageEmailAddressesCustomizable let-hostRef>\n  <div class=\"card card-lg\">\n    <ng-container bbUserManageEmailAddressesTitleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n    <ng-container *ngIf=\"hostRef.emailAddresses && hostRef.emailAddresses.length; else emptyState\">\n      <div *ngFor=\"let emailAddressDetails of hostRef.emailAddresses | slice:0:maxEmailAddresses; index as i\"\n        class=\"card-section {{ hostRef.isManagingEmailAddressIndex === i ? 'card-section--highlight' : '' }}\">\n        <bb-user-manage-email-address\n          [electronicAddress]=\"emailAddressDetails\"\n          [emailAddressCount]=\"hostRef.emailAddresses.length\"\n          [disableManage]=\"hostRef.disableManage\"\n          [emailAddressTypes]=\"hostRef.emailAddressTypes\"\n          (updateProfile)=\"hostRef.updateUserProfileData()\"\n          (manageEmail)=\"hostRef.handleManageEmailOpen(i)\"\n          (cancelManageEmail)=\"hostRef.handleManageEmailClosed()\"\n          [dismissTimeout]=\"hostRef.dismissTimeout\">\n        </bb-user-manage-email-address>\n      </div>\n    </ng-container>\n\n    <ng-template #emptyState>\n      <div class=\"card-section\">\n        <bb-empty-state-ui\n          data-role=\"user-manage-profile-email-empty-state\"\n          [showIcon]=\"false\"\n          i18n-title=\"Email addresses not found text|Text for no email addresses found@@bb-user-manage-email-addresses.none-found\"\n          title=\"No email addresses\">\n        </bb-empty-state-ui>\n      </div>\n    </ng-template>\n\n    <div class=\"card-section card-section--highlight\" *ngIf=\"hostRef.isAddingEmailAddress\">\n      <bb-user-new-email-address\n        (close)=\"hostRef.handleManageEmailClosed()\"\n        (closeAfterSave)=\"hostRef.updateUserProfileData()\"\n        [emailAddressTypes]=\"hostRef.emailAddressTypes\"\n        [notificationDismissTime]=\"hostRef.dismissTimeout\">\n      </bb-user-new-email-address>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.isAddButtonAvailable && !hostRef.isAddingEmailAddress\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button bbButton\n          data-role=\"user-manage-profile-email-add-button\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          [disabled]=\"hostRef.disableManage\"\n          (click)=\"hostRef.handleAddNewEmailAddress()\">\n          <bb-icon-ui name=\"create-payment\"></bb-icon-ui>\n          <span i18n=\"Add email address button|Text for the button that allows the user to add a new email address@@bb-user-manage-email-addresses.add-email-button\">\n            Add Email Address\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbUserManageEmailAddressesTitleCustomizable let-hostRef>\n  <bb-header-ui\n    headingType=\"h3\"\n    class=\"card-header\"\n    i18n-heading=\"Email addresses section title|Title text for the email addresses management section@@bb-user-manage-email-addresses.title\"\n    heading=\"Email addresses\">\n  </bb-header-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserManageEmailAddressComponent; }), selector: "bb-user-manage-email-address" }, { type: i0.forwardRef(function () { return i2$2.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0.forwardRef(function () { return UserNewEmailAddressComponent; }), selector: "bb-user-new-email-address" }, { type: i0.forwardRef(function () { return i4$1.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserManageEmailAddressesCustomizableDirective; }), selector: "[bbUserManageEmailAddressesCustomizable]" }, { type: i0.forwardRef(function () { return UserManageEmailAddressesTitleCustomizableDirective; }), selector: "[bbUserManageEmailAddressesTitleCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i4.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "slice": i0.forwardRef(function () { return i4.SlicePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-manage-email-addresses',
                    templateUrl: './user-manage-email-addresses.component.html',
                }]
        }] });
class UserManageEmailAddressesCustomizableDirective extends BbTemplate {
}
UserManageEmailAddressesCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManageEmailAddressesCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManageEmailAddressesCustomizableDirective, selector: "[bbUserManageEmailAddressesCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManageEmailAddressesCustomizable]',
                }]
        }] });
class UserManageEmailAddressesTitleCustomizableDirective extends BbTemplate {
}
UserManageEmailAddressesTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManageEmailAddressesTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManageEmailAddressesTitleCustomizableDirective, selector: "[bbUserManageEmailAddressesTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManageEmailAddressesTitleCustomizable]',
                }]
        }] });

class UserPhoneNumberTypeInputComponent extends InputBase {
    ngOnInit() {
        if (this.phoneNumberTypes && !this.phoneNumberTypes.includes(this.fieldControl.value)) {
            this.fieldControl.setValue(this.phoneNumberTypes[0]);
        }
    }
}
UserPhoneNumberTypeInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPhoneNumberTypeInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberTypeInputComponent, selector: "bb-user-phone-number-type-input", inputs: { phoneNumberTypes: "phoneNumberTypes" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPhoneNumberTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPhoneNumberTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-phone-manage-type\"\n      i18n-label=\"Phone number type label|Label for the phone number type field@@bb-user-user-phone-number-type-input.label\"\n      label=\"Phone number type\"\n      [options]=\"hostRef.phoneNumberTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserPhoneNumberTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPhoneNumberTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$2.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPhoneNumberTypeInputCustomizableDirective; }), selector: "[bbUserPhoneNumberTypeInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPhoneNumberTypeErrorsCustomizableDirective; }), selector: "[bbUserPhoneNumberTypeErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-phone-number-type-input',
                    templateUrl: './user-phone-number-type-input.component.html',
                }]
        }], propDecorators: { phoneNumberTypes: [{
                type: Input
            }] } });
class UserPhoneNumberTypeInputCustomizableDirective extends BbTemplate {
}
UserPhoneNumberTypeInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPhoneNumberTypeInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberTypeInputCustomizableDirective, selector: "[bbUserPhoneNumberTypeInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPhoneNumberTypeInputCustomizable]',
                }]
        }] });
class UserPhoneNumberTypeErrorsCustomizableDirective extends BbTemplate {
}
UserPhoneNumberTypeErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPhoneNumberTypeErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberTypeErrorsCustomizableDirective, selector: "[bbUserPhoneNumberTypeErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPhoneNumberTypeErrorsCustomizable]',
                }]
        }] });

class UserPhoneNumberInputComponent extends PhoneNumberInputBase {
}
UserPhoneNumberInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPhoneNumberInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberInputComponent, selector: "bb-user-phone-number-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPhoneNumberInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPhoneNumberInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-phone-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-phone-manage-phone\"\n      i18n-label=\"Phone number label|Label for the phone-number field@@bb-user-phone-number-input.label\"\n      label=\"Phone number\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"30\">\n    </bb-input-phone-ui>\n\n    <ng-container bbUserPhoneNumberInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPhoneNumberInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Phone number required error|Error to say that phone-number is a required field@@bb-user-phone-number-input.errors.required\">\n      You must enter a phone number.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$7.InputPhoneComponent; }), selector: "bb-input-phone-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "ariaLabel", "autocomplete", "countryList", "dropdownPosition", "clearable", "searchable", "defaultCountryIsoCode", "enableCountryCode"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPhoneNumberInputCustomizableDirective; }), selector: "[bbUserPhoneNumberInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPhoneNumberInputErrorsCustomizableDirective; }), selector: "[bbUserPhoneNumberInputErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-phone-number-input',
                    templateUrl: './user-phone-number-input.component.html',
                }]
        }] });
class UserPhoneNumberInputCustomizableDirective extends BbTemplate {
}
UserPhoneNumberInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPhoneNumberInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberInputCustomizableDirective, selector: "[bbUserPhoneNumberInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPhoneNumberInputCustomizable]',
                }]
        }] });
class UserPhoneNumberInputErrorsCustomizableDirective extends BbTemplate {
}
UserPhoneNumberInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPhoneNumberInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberInputErrorsCustomizableDirective, selector: "[bbUserPhoneNumberInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPhoneNumberInputErrorsCustomizable]',
                }]
        }] });

class UserProfileFormDeletePhoneAddressModalComponent extends UserModalBase {
}
UserProfileFormDeletePhoneAddressModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeletePhoneAddressModalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserProfileFormDeletePhoneAddressModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormDeletePhoneAddressModalComponent, selector: "bb-user-profile-form-delete-phone-address-modal", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserProfileFormDeletePhoneAddressModalCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserProfileFormDeletePhoneAddressModalCustomizable let-hostRef>\n  <bb-modal-ui data-role=\"user-manage-profile-delete-phone-modal\" [isOpen]=\"hostRef.isOpen\"\n    (cancel)=\"hostRef.dismissModal()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Delete phone address modal title|Title of the confirmation modal for deleting an phone address@@bb-user-profile-form-delete-phone-address-modal.title\"\n          heading=\"Delete phone number?\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody\n        i18n=\"Delete phone address modal body|Body text of the confirmation modal for deleting an phone address@@bb-user-profile-form-delete-phone-address-modal.body\">\n        Are you sure you want to delete this phone number? This action can not be undone\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-cancel-button\"\n          color=\"secondary\"\n          (click)=\"hostRef.dismissModal()\"\n          i18n=\"Dismiss delete phone address modal button|Text of the button that dismisses the delete an phone address modal@@bb-user-profile-form-delete-phone-address-modal.dismiss\">\n          Cancel\n        </button>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-confirm-button\"\n          color=\"danger\"\n          (click)=\"hostRef.closeModal()\"\n          i18n=\"Confirm delete phone address modal button|Text of the button that confirms the delete an phone address modal@@bb-user-profile-form-delete-phone-address-modal.confirm\">\n          Delete phone number\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$5.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i1$5.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i1$5.ModalBodyComponent; }), selector: "bb-modal-body-ui" }, { type: i0.forwardRef(function () { return i1$5.ModalFooterComponent; }), selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i0.forwardRef(function () { return UserProfileFormDeletePhoneAddressModalCustomizableDirective; }), selector: "[bbUserProfileFormDeletePhoneAddressModalCustomizable]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalHeaderDirective; }), selector: "ng-template[bbCustomModalHeader]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalFooterDirective; }), selector: "ng-template[bbCustomModalFooter]" }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeletePhoneAddressModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-profile-form-delete-phone-address-modal',
                    templateUrl: './user-profile-form-delete-phone-address-modal.component.html',
                }]
        }] });
class UserProfileFormDeletePhoneAddressModalCustomizableDirective extends BbTemplate {
}
UserProfileFormDeletePhoneAddressModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeletePhoneAddressModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserProfileFormDeletePhoneAddressModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormDeletePhoneAddressModalCustomizableDirective, selector: "[bbUserProfileFormDeletePhoneAddressModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeletePhoneAddressModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserProfileFormDeletePhoneAddressModalCustomizable]',
                }]
        }] });

class UserPhoneNumberFormComponent extends ManageProfilePhoneNumberFormComponent {
}
UserPhoneNumberFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberFormComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPhoneNumberFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberFormComponent, selector: "bb-user-phone-number-form", inputs: { phoneNumberCountryCode: "phoneNumberCountryCode", phoneNumberDebounceTime: "phoneNumberDebounceTime", enablePhoneNumberFormatter: "enablePhoneNumberFormatter" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPhoneNumberFormCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPhoneNumberFormCustomizable let-hostRef>\n  <form #phoneNumberFormElement *ngIf=\"hostRef.form\" [formGroup]=\"hostRef.form\" (submit)=\"hostRef.handleSubmit()\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-user-profile-form-errors [formGroup]=\"hostRef.form\" [hasBeenSubmittedWithErrors]=\"hostRef.showFormErrors && !hostRef.form.valid\">\n        <ng-container bbUserPhoneNumberFormErrorsCustomizable [bbHostRef]=\"hostRef\">\n        </ng-container>\n      </bb-user-profile-form-errors>\n\n      <bb-user-phone-number-type-input\n        fieldName=\"type\"\n        [formGroup]=\"hostRef.form\"\n        [phoneNumberTypes]=\"hostRef.types\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-phone-number-type-input>\n\n      <bb-user-phone-number-input\n        fieldName=\"number\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\"\n        [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n        [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n        [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\">\n      </bb-user-phone-number-input>\n\n      <bb-user-primary-checkbox-input fieldName=\"primary\" type=\"phoneNumber\" [formGroup]=\"hostRef.form\">\n      </bb-user-primary-checkbox-input>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <bb-load-button-ui\n        data-role=\"user-manage-profile-phone-manage-save\"\n        type=\"submit\"\n        class=\"bb-button-bar__button\"\n        [isLoading]=\"hostRef.isSubmitting\"\n        [disabled]=\"hostRef.isSubmitting\"\n        i18n=\"Save phone number button|Text of the button that triggers saving of new phone number@@bb-user-phone-number-form.save-button\">\n        Save phone number\n      </bb-load-button-ui>\n      <button bbButton\n        data-role=\"user-manage-profile-manage-cancel-button\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.handleCancelClick()\"\n        i18n=\"Cancel button|Text of the button that triggers cancellation of new phone number@@bb-user-phone-number-form.cancel-button\">\n        Cancel\n      </button>\n      <button bbButton\n        data-role=\"user-manage-profile-phone-delete-button\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        *ngIf=\"hostRef.showDeleteButton\"\n        color=\"link\"\n        (click)=\"hostRef.handleDelete()\">\n        <bb-icon-ui name=\"delete\"></bb-icon-ui>\n        <span i18n=\"Delete phone number button|Text for the button that allows the user to delete a phone number@@bb-user-phone-number-form.delete-button\">\n          Delete\n        </span>\n      </button>\n    </div>\n  </form>\n\n  <bb-user-profile-form-cancel-modal [isOpen]=\"hostRef.isCancelModalOpen\" (dismiss)=\"hostRef.dismissCancelModal()\"\n    (close)=\"hostRef.closeCancelModal()\">\n  </bb-user-profile-form-cancel-modal>\n\n  <bb-user-profile-form-delete-phone-address-modal [isOpen]=\"hostRef.isDeleteModalOpen\" (dismiss)=\"hostRef.dismissDeleteModal()\"\n    (close)=\"hostRef.closeDeleteModal()\">\n  </bb-user-profile-form-delete-phone-address-modal>\n</ng-template>\n\n<ng-template bbUserPhoneNumberFormErrorsCustomizable let-hostRef>\n  <p *ngIf=\"hostRef.form.controls.type.errors?.required\">\n    <u i18n=\"Type required error|Error to say that type is a required field@@bb-user-phone-number-form.errors.type-required\">\n      You must enter a type.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.number.errors?.required\">\n    <u i18n=\"Phone number required error|Error to say that phone number is a required field@@bb-user-phone-number-form.errors.number-required\">\n      You must enter a phone number.\n    </u>\n  </p>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserProfileFormErrorsComponent; }), selector: "bb-user-profile-form-errors", inputs: ["formGroup", "hasBeenSubmittedWithErrors"] }, { type: i0.forwardRef(function () { return UserPhoneNumberTypeInputComponent; }), selector: "bb-user-phone-number-type-input", inputs: ["phoneNumberTypes"] }, { type: i0.forwardRef(function () { return UserPhoneNumberInputComponent; }), selector: "bb-user-phone-number-input" }, { type: i0.forwardRef(function () { return UserPrimaryCheckboxInputComponent; }), selector: "bb-user-primary-checkbox-input", inputs: ["type"] }, { type: i0.forwardRef(function () { return i5$1.LoadButtonComponent; }), selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i0.forwardRef(function () { return i4$1.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return UserProfileFormCancelModalComponent; }), selector: "bb-user-profile-form-cancel-modal" }, { type: i0.forwardRef(function () { return UserProfileFormDeletePhoneAddressModalComponent; }), selector: "bb-user-profile-form-delete-phone-address-modal" }], directives: [{ type: i0.forwardRef(function () { return UserPhoneNumberFormCustomizableDirective; }), selector: "[bbUserPhoneNumberFormCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return UserPhoneNumberFormErrorsCustomizableDirective; }), selector: "[bbUserPhoneNumberFormErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberFormComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-phone-number-form',
                    templateUrl: './user-phone-number-form.component.html',
                }]
        }], propDecorators: { phoneNumberCountryCode: [{
                type: Input
            }], phoneNumberDebounceTime: [{
                type: Input
            }], enablePhoneNumberFormatter: [{
                type: Input
            }] } });
class UserPhoneNumberFormCustomizableDirective extends BbTemplate {
}
UserPhoneNumberFormCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberFormCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPhoneNumberFormCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberFormCustomizableDirective, selector: "[bbUserPhoneNumberFormCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberFormCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPhoneNumberFormCustomizable]',
                }]
        }] });
class UserPhoneNumberFormErrorsCustomizableDirective extends BbTemplate {
}
UserPhoneNumberFormErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberFormErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPhoneNumberFormErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberFormErrorsCustomizableDirective, selector: "[bbUserPhoneNumberFormErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberFormErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPhoneNumberFormErrorsCustomizable]',
                }]
        }] });

class UserPostalAddressTypeInputComponent extends InputBase {
    ngOnInit() {
        if (this.postalAddressTypes && !this.postalAddressTypes.includes(this.fieldControl.value)) {
            this.fieldControl.setValue(this.postalAddressTypes[0]);
        }
    }
}
UserPostalAddressTypeInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalAddressTypeInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressTypeInputComponent, selector: "bb-user-postal-address-type-input", inputs: { postalAddressTypes: "postalAddressTypes" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalAddressTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalAddressTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-postal-manage-type\"\n      i18n-label=\"Postal address type label|Label for the postal address type field@@bb-user-user-postal-address-type-input.label\"\n      label=\"Address type\"\n      [options]=\"hostRef.postalAddressTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserPostalAddressTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalAddressTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$2.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPostalAddressTypeInputCustomizableDirective; }), selector: "[bbUserPostalAddressTypeInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPostalAddressTypeErrorsCustomizableDirective; }), selector: "[bbUserPostalAddressTypeErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-address-type-input',
                    templateUrl: './user-postal-address-type-input.component.html',
                }]
        }], propDecorators: { postalAddressTypes: [{
                type: Input
            }] } });
class UserPostalAddressTypeInputCustomizableDirective extends BbTemplate {
}
UserPostalAddressTypeInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalAddressTypeInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressTypeInputCustomizableDirective, selector: "[bbUserPostalAddressTypeInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalAddressTypeInputCustomizable]',
                }]
        }] });
class UserPostalAddressTypeErrorsCustomizableDirective extends BbTemplate {
}
UserPostalAddressTypeErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalAddressTypeErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressTypeErrorsCustomizableDirective, selector: "[bbUserPostalAddressTypeErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalAddressTypeErrorsCustomizable]',
                }]
        }] });

class UserPostalBuildingNumberInputComponent extends InputBase {
}
UserPostalBuildingNumberInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalBuildingNumberInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalBuildingNumberInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalBuildingNumberInputComponent, selector: "bb-user-postal-building-number-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalBuildingNumberInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalBuildingNumberInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-postal-manage-line-1\"\n      i18n-label=\"Building number label|Label for the building number field@@bb-user-postal-building-number-input.label\"\n      label=\"Address line 1\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"255\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalBuildingNumberInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalBuildingNumberInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Building number required error|Error to say that postal building number is a required field@@bb-user-postal-building-number-input.errors.required\">\n      You must enter a value for Address line 1.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$8.InputTextComponent; }), selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPostalBuildingNumberInputCustomizableDirective; }), selector: "[bbUserPostalBuildingNumberInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPostalBuildingNumberInputErrorsCustomizableDirective; }), selector: "[bbUserPostalBuildingNumberInputErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalBuildingNumberInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-building-number-input',
                    templateUrl: './user-postal-building-number-input.component.html',
                }]
        }] });
class UserPostalBuildingNumberInputCustomizableDirective extends BbTemplate {
}
UserPostalBuildingNumberInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalBuildingNumberInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalBuildingNumberInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalBuildingNumberInputCustomizableDirective, selector: "[bbUserPostalBuildingNumberInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalBuildingNumberInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalBuildingNumberInputCustomizable]',
                }]
        }] });
class UserPostalBuildingNumberInputErrorsCustomizableDirective extends BbTemplate {
}
UserPostalBuildingNumberInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalBuildingNumberInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalBuildingNumberInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalBuildingNumberInputErrorsCustomizableDirective, selector: "[bbUserPostalBuildingNumberInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalBuildingNumberInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalBuildingNumberInputErrorsCustomizable]',
                }]
        }] });

class UserPostalStreetNameInputComponent extends InputBase {
}
UserPostalStreetNameInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalStreetNameInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalStreetNameInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalStreetNameInputComponent, selector: "bb-user-postal-street-name-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalStreetNameInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalStreetNameInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-postal-manage-line-2\"\n      i18n-label=\"Street name label|Label for the street name field@@bb-user-postal-street-name-input.label\"\n      label=\"Address line 2 (optional)\"\n      [formControlName]=\"hostRef.fieldName\"\n      [maxLength]=\"255\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalStreetNameInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$8.InputTextComponent; }), selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }], directives: [{ type: i0.forwardRef(function () { return UserPostalStreetNameInputCustomizableDirective; }), selector: "[bbUserPostalStreetNameInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return UserPostalStreetNameInputErrorsCustomizableDirective; }), selector: "[bbUserPostalStreetNameInputErrorsCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalStreetNameInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-street-name-input',
                    templateUrl: './user-postal-street-name-input.component.html',
                }]
        }] });
class UserPostalStreetNameInputCustomizableDirective extends BbTemplate {
}
UserPostalStreetNameInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalStreetNameInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalStreetNameInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalStreetNameInputCustomizableDirective, selector: "[bbUserPostalStreetNameInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalStreetNameInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalStreetNameInputCustomizable]',
                }]
        }] });
class UserPostalStreetNameInputErrorsCustomizableDirective extends BbTemplate {
}
UserPostalStreetNameInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalStreetNameInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalStreetNameInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalStreetNameInputErrorsCustomizableDirective, selector: "[bbUserPostalStreetNameInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalStreetNameInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalStreetNameInputErrorsCustomizable]',
                }]
        }] });

class UserPostalTownNameInputComponent extends InputBase {
}
UserPostalTownNameInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalTownNameInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalTownNameInputComponent, selector: "bb-user-postal-town-name-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalTownNameInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalTownNameInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-postal-manage-city\"\n      i18n-label=\"Town name label|Label for the town name field@@bb-user-postal-town-name-input.label\"\n      label=\"City or town\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"35\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalTownNameInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalTownNameInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Town name required error|Error to say that postal town name is a required field@@bb-user-postal-town-name-input.errors.required\">\n      You must enter a value for City or town.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$8.InputTextComponent; }), selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPostalTownNameInputCustomizableDirective; }), selector: "[bbUserPostalTownNameInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPostalTownNameInputErrorsCustomizableDirective; }), selector: "[bbUserPostalTownNameInputErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-town-name-input',
                    templateUrl: './user-postal-town-name-input.component.html',
                }]
        }] });
class UserPostalTownNameInputCustomizableDirective extends BbTemplate {
}
UserPostalTownNameInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalTownNameInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalTownNameInputCustomizableDirective, selector: "[bbUserPostalTownNameInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalTownNameInputCustomizable]',
                }]
        }] });
class UserPostalTownNameInputErrorsCustomizableDirective extends BbTemplate {
}
UserPostalTownNameInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalTownNameInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalTownNameInputErrorsCustomizableDirective, selector: "[bbUserPostalTownNameInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalTownNameInputErrorsCustomizable]',
                }]
        }] });

class UserPostalCountrySubDivisionInputComponent extends InputBase {
}
UserPostalCountrySubDivisionInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalCountrySubDivisionInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalCountrySubDivisionInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalCountrySubDivisionInputComponent, selector: "bb-user-postal-country-sub-division-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalCountrySubDivisionInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalCountrySubDivisionInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-postal-manage-state\"\n      i18n-label=\"Country sub-division label|Label for the country sub-division field@@bb-user-postal-country-sub-division-input.label\"\n      label=\"State, province or region\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"35\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalCountrySubDivisionInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalCountrySubDivisionInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Country sub-division required error|Error to say that postal country sub-division is a required field@@bb-user-postal-country-sub-division-input.errors.required\">\n      You must enter a value for State, province or region.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$8.InputTextComponent; }), selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPostalCountrySubDivisionInputCustomizableDirective; }), selector: "[bbUserPostalCountrySubDivisionInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPostalCountrySubDivisionInputErrorsCustomizableDirective; }), selector: "[bbUserPostalCountrySubDivisionInputErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalCountrySubDivisionInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-country-sub-division-input',
                    templateUrl: './user-postal-country-sub-division-input.component.html',
                }]
        }] });
class UserPostalCountrySubDivisionInputCustomizableDirective extends BbTemplate {
}
UserPostalCountrySubDivisionInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalCountrySubDivisionInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalCountrySubDivisionInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalCountrySubDivisionInputCustomizableDirective, selector: "[bbUserPostalCountrySubDivisionInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalCountrySubDivisionInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalCountrySubDivisionInputCustomizable]',
                }]
        }] });
class UserPostalCountrySubDivisionInputErrorsCustomizableDirective extends BbTemplate {
}
UserPostalCountrySubDivisionInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalCountrySubDivisionInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalCountrySubDivisionInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalCountrySubDivisionInputErrorsCustomizableDirective, selector: "[bbUserPostalCountrySubDivisionInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalCountrySubDivisionInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalCountrySubDivisionInputErrorsCustomizable]',
                }]
        }] });

class UserPostalPostalCodeInputComponent extends InputBase {
}
UserPostalPostalCodeInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalPostalCodeInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalPostalCodeInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalPostalCodeInputComponent, selector: "bb-user-postal-postal-code-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalPostalCodeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalPostalCodeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--xs\"\n      data-role=\"user-manage-profile-postal-manage-post-code\"\n      i18n-label=\"Postal code label|Label for the postal code field@@bb-user-postal-postal-code-input.label\"\n      label=\"Postal or ZIP code\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"16\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalPostalCodeInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalPostalCodeInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Postal code required error|Error to say that postal postal code is a required field@@bb-user-postal-postal-code-input.errors.required\">\n      You must enter a value for Postal or ZIP code.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$8.InputTextComponent; }), selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i0.forwardRef(function () { return i2$1.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPostalPostalCodeInputCustomizableDirective; }), selector: "[bbUserPostalPostalCodeInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPostalPostalCodeInputErrorsCustomizableDirective; }), selector: "[bbUserPostalPostalCodeInputErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalPostalCodeInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-postal-code-input',
                    templateUrl: './user-postal-postal-code-input.component.html',
                }]
        }] });
class UserPostalPostalCodeInputCustomizableDirective extends BbTemplate {
}
UserPostalPostalCodeInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalPostalCodeInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalPostalCodeInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalPostalCodeInputCustomizableDirective, selector: "[bbUserPostalPostalCodeInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalPostalCodeInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalPostalCodeInputCustomizable]',
                }]
        }] });
class UserPostalPostalCodeInputErrorsCustomizableDirective extends BbTemplate {
}
UserPostalPostalCodeInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalPostalCodeInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalPostalCodeInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalPostalCodeInputErrorsCustomizableDirective, selector: "[bbUserPostalPostalCodeInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalPostalCodeInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalPostalCodeInputErrorsCustomizable]',
                }]
        }] });

class UserProfileFormDeletePostalAddressModalComponent extends UserModalBase {
}
UserProfileFormDeletePostalAddressModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeletePostalAddressModalComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserProfileFormDeletePostalAddressModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormDeletePostalAddressModalComponent, selector: "bb-user-profile-form-delete-postal-address-modal", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserProfileFormDeletePostalAddressModalCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserProfileFormDeletePostalAddressModalCustomizable let-hostRef>\n  <bb-modal-ui data-role=\"user-manage-profile-delete-postal-modal\" [isOpen]=\"hostRef.isOpen\"\n    (cancel)=\"hostRef.dismissModal()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Delete postal address modal title|Title of the confirmation modal for deleting an postal address@@bb-user-profile-form-delete-postal-address-modal.title\"\n          heading=\"Delete address?\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody\n        i18n=\"Delete postal address modal body|Body text of the confirmation modal for deleting an postal address@@bb-user-profile-form-delete-postal-address-modal.body\">\n        Are you sure you want to delete this address? This action can not be undone\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-cancel-button\"\n          color=\"secondary\"\n          (click)=\"hostRef.dismissModal()\"\n          i18n=\"Dismiss delete postal address modal button|Text of the button that dismisses the delete an postal address modal@@bb-user-profile-form-delete-postal-address-modal.dismiss\">\n          Cancel\n        </button>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-confirm-button\"\n          color=\"danger\"\n          (click)=\"hostRef.closeModal()\"\n          i18n=\"Confirm delete postal address modal button|Text of the button that confirms the delete an postal address modal@@bb-user-profile-form-delete-postal-address-modal.confirm\">\n          Delete address\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$5.ModalComponent; }), selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i0.forwardRef(function () { return i1$5.ModalHeaderComponent; }), selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i1$5.ModalBodyComponent; }), selector: "bb-modal-body-ui" }, { type: i0.forwardRef(function () { return i1$5.ModalFooterComponent; }), selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i0.forwardRef(function () { return UserProfileFormDeletePostalAddressModalCustomizableDirective; }), selector: "[bbUserProfileFormDeletePostalAddressModalCustomizable]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalHeaderDirective; }), selector: "ng-template[bbCustomModalHeader]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalBodyDirective; }), selector: "ng-template[bbCustomModalBody]" }, { type: i0.forwardRef(function () { return i1$5.CustomModalFooterDirective; }), selector: "ng-template[bbCustomModalFooter]" }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeletePostalAddressModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-profile-form-delete-postal-address-modal',
                    templateUrl: './user-profile-form-delete-postal-address-modal.component.html',
                }]
        }] });
class UserProfileFormDeletePostalAddressModalCustomizableDirective extends BbTemplate {
}
UserProfileFormDeletePostalAddressModalCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeletePostalAddressModalCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserProfileFormDeletePostalAddressModalCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormDeletePostalAddressModalCustomizableDirective, selector: "[bbUserProfileFormDeletePostalAddressModalCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormDeletePostalAddressModalCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserProfileFormDeletePostalAddressModalCustomizable]',
                }]
        }] });

class UserPostalAddressFormComponent extends ManageProfilePostalAddressFormComponent {
}
UserPostalAddressFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressFormComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalAddressFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressFormComponent, selector: "bb-user-postal-address-form", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalAddressFormCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalAddressFormCustomizable let-hostRef>\n  <form #postalAddressFormElement *ngIf=\"hostRef.form\" [formGroup]=\"hostRef.form\" (submit)=\"hostRef.handleSubmit()\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-user-profile-form-errors [formGroup]=\"hostRef.form\" [hasBeenSubmittedWithErrors]=\"hostRef.showFormErrors && !hostRef.form.valid\">\n        <ng-container bbUserPostalAddressFormErrorsCustomizable [bbHostRef]=\"hostRef\">\n        </ng-container>\n      </bb-user-profile-form-errors>\n\n      <bb-user-postal-address-type-input\n        fieldName=\"type\"\n        [formGroup]=\"hostRef.form\"\n        [postalAddressTypes]=\"hostRef.types\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-address-type-input>\n\n      <bb-user-postal-building-number-input\n        fieldName=\"buildingNumber\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-building-number-input>\n\n      <bb-user-postal-street-name-input\n        fieldName=\"streetName\"\n        [formGroup]=\"hostRef.form\">\n      </bb-user-postal-street-name-input>\n\n      <bb-user-postal-town-name-input\n        fieldName=\"townName\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-town-name-input>\n\n      <bb-user-postal-country-sub-division-input\n        fieldName=\"countrySubDivision\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-country-sub-division-input>\n\n      <bb-user-postal-postal-code-input\n        fieldName=\"postalCode\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-postal-code-input>\n\n      <bb-user-primary-checkbox-input fieldName=\"primary\" type=\"postalAddress\" [formGroup]=\"hostRef.form\">\n      </bb-user-primary-checkbox-input>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <bb-load-button-ui\n        data-role=\"user-manage-profile-postal-manage-save\"\n        type=\"submit\"\n        class=\"bb-button-bar__button\"\n        [isLoading]=\"hostRef.isSubmitting\"\n        [disabled]=\"hostRef.isSubmitting\"\n        i18n=\"Save postal address button|Text of the button that triggers saving of new postal address@@bb-user-postal-address-form.save-button\">\n        Save address\n      </bb-load-button-ui>\n      <button bbButton\n        data-role=\"user-manage-profile-manage-cancel-button\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.handleCancelClick()\"\n        i18n=\"Cancel button|Text of the button that triggers cancellation of new postal address@@bb-user-postal-address-form.cancel-button\">\n        Cancel\n      </button>\n      <button bbButton\n        data-role=\"user-manage-profile-postal-delete-button\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        *ngIf=\"hostRef.showDeleteButton\"\n        color=\"link\"\n        (click)=\"hostRef.handleDelete()\">\n        <bb-icon-ui name=\"delete\"></bb-icon-ui>\n        <span i18n=\"Delete postal address button|Text for the button that allows the user to delete a postal address@@bb-user-postal-address-form.delete-button\">\n          Delete\n        </span>\n      </button>\n    </div>\n  </form>\n\n  <bb-user-profile-form-cancel-modal [isOpen]=\"hostRef.isCancelModalOpen\" (dismiss)=\"hostRef.dismissCancelModal()\"\n    (close)=\"hostRef.closeCancelModal()\">\n  </bb-user-profile-form-cancel-modal>\n\n  <bb-user-profile-form-delete-postal-address-modal [isOpen]=\"hostRef.isDeleteModalOpen\" (dismiss)=\"hostRef.dismissDeleteModal()\"\n    (close)=\"hostRef.closeDeleteModal()\">\n  </bb-user-profile-form-delete-postal-address-modal>\n</ng-template>\n\n<ng-template bbUserPostalAddressFormErrorsCustomizable let-hostRef>\n  <p *ngIf=\"hostRef.form.controls.type.errors?.required\">\n    <u i18n=\"Type required error|Error to say that type is a required field@@bb-user-postal-address-form.errors.type-required\">\n      You must enter a type.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.buildingNumber.errors?.required\">\n    <u i18n=\"Building number required error|Error to say that building number is a required field@@bb-user-postal-address-form.errors.building-number-required\">\n      You must enter a value for Address line 1.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.townName.errors?.required\">\n    <u i18n=\"Town name required error|Error to say that town name is a required field@@bb-user-postal-address-form.errors.town-name-required\">\n      You must enter a value for City or town.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.countrySubDivision.errors?.required\">\n    <u i18n=\"Country sub division required error|Error to say that country sub division is a required field@@bb-user-postal-address-form.errors.country-sub-division-required\">\n      You must enter a value for State, province or region.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.postalCode.errors?.required\">\n    <u i18n=\"Postal code required error|Error to say that postal code is a required field@@bb-user-postal-address-form.errors.postal-code-required\">\n      You must enter a value for Postal or ZIP code.\n    </u>\n  </p>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserProfileFormErrorsComponent; }), selector: "bb-user-profile-form-errors", inputs: ["formGroup", "hasBeenSubmittedWithErrors"] }, { type: i0.forwardRef(function () { return UserPostalAddressTypeInputComponent; }), selector: "bb-user-postal-address-type-input", inputs: ["postalAddressTypes"] }, { type: i0.forwardRef(function () { return UserPostalBuildingNumberInputComponent; }), selector: "bb-user-postal-building-number-input" }, { type: i0.forwardRef(function () { return UserPostalStreetNameInputComponent; }), selector: "bb-user-postal-street-name-input" }, { type: i0.forwardRef(function () { return UserPostalTownNameInputComponent; }), selector: "bb-user-postal-town-name-input" }, { type: i0.forwardRef(function () { return UserPostalCountrySubDivisionInputComponent; }), selector: "bb-user-postal-country-sub-division-input" }, { type: i0.forwardRef(function () { return UserPostalPostalCodeInputComponent; }), selector: "bb-user-postal-postal-code-input" }, { type: i0.forwardRef(function () { return UserPrimaryCheckboxInputComponent; }), selector: "bb-user-primary-checkbox-input", inputs: ["type"] }, { type: i0.forwardRef(function () { return i5$1.LoadButtonComponent; }), selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }, { type: i0.forwardRef(function () { return i4$1.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return UserProfileFormCancelModalComponent; }), selector: "bb-user-profile-form-cancel-modal" }, { type: i0.forwardRef(function () { return UserProfileFormDeletePostalAddressModalComponent; }), selector: "bb-user-profile-form-delete-postal-address-modal" }], directives: [{ type: i0.forwardRef(function () { return UserPostalAddressFormCustomizableDirective; }), selector: "[bbUserPostalAddressFormCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return UserPostalAddressFormErrorsCustomizableDirective; }), selector: "[bbUserPostalAddressFormErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressFormComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-address-form',
                    templateUrl: './user-postal-address-form.component.html',
                }]
        }] });
class UserPostalAddressFormCustomizableDirective extends BbTemplate {
}
UserPostalAddressFormCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressFormCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalAddressFormCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressFormCustomizableDirective, selector: "[bbUserPostalAddressFormCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressFormCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalAddressFormCustomizable]',
                }]
        }] });
class UserPostalAddressFormErrorsCustomizableDirective extends BbTemplate {
}
UserPostalAddressFormErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressFormErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalAddressFormErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressFormErrorsCustomizableDirective, selector: "[bbUserPostalAddressFormErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressFormErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalAddressFormErrorsCustomizable]',
                }]
        }] });

const uiModules$a = [AlertModule];
class UserProfileFormErrorsModule {
}
UserProfileFormErrorsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormErrorsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserProfileFormErrorsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormErrorsModule, declarations: [UserProfileFormErrorsComponent], imports: [CommonModule, AlertModule], exports: [UserProfileFormErrorsComponent, AlertModule] });
UserProfileFormErrorsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormErrorsModule, imports: [[CommonModule, ...uiModules$a], AlertModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormErrorsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...uiModules$a],
                    declarations: [UserProfileFormErrorsComponent],
                    exports: [UserProfileFormErrorsComponent, ...uiModules$a],
                }]
        }] });

const uiModules$9 = [InputCheckboxModule];
class UserProfileFormBaseInputsModule {
}
UserProfileFormBaseInputsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormBaseInputsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserProfileFormBaseInputsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormBaseInputsModule, declarations: [UserPrimaryCheckboxInputComponent, UserPrimaryCheckboxInputCustomizableDirective], imports: [CommonModule, ReactiveFormsModule, InputCheckboxModule], exports: [UserPrimaryCheckboxInputComponent, UserPrimaryCheckboxInputCustomizableDirective, InputCheckboxModule] });
UserProfileFormBaseInputsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormBaseInputsModule, imports: [[CommonModule, ReactiveFormsModule, ...uiModules$9], InputCheckboxModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormBaseInputsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ReactiveFormsModule, ...uiModules$9],
                    declarations: [UserPrimaryCheckboxInputComponent, UserPrimaryCheckboxInputCustomizableDirective],
                    exports: [UserPrimaryCheckboxInputComponent, UserPrimaryCheckboxInputCustomizableDirective, ...uiModules$9],
                }]
        }] });

const uiModules$8 = [DropdownSingleSelectModule, InputEmailModule, InputValidationMessageModule];
class UserProfileFormEmailAddressInputsModule {
}
UserProfileFormEmailAddressInputsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormEmailAddressInputsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserProfileFormEmailAddressInputsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormEmailAddressInputsModule, declarations: [UserEmailAddressTypeInputComponent,
        UserEmailAddressTypeInputCustomizableDirective,
        UserEmailAddressTypeErrorsCustomizableDirective,
        UserEmailAddressInputComponent,
        UserEmailAddressInputCustomizableDirective,
        UserEmailAddressInputErrorsCustomizableDirective], imports: [CommonModule, ReactiveFormsModule, DropdownSingleSelectModule, InputEmailModule, InputValidationMessageModule], exports: [UserEmailAddressTypeInputComponent,
        UserEmailAddressTypeInputCustomizableDirective,
        UserEmailAddressTypeErrorsCustomizableDirective,
        UserEmailAddressInputComponent,
        UserEmailAddressInputCustomizableDirective,
        UserEmailAddressInputErrorsCustomizableDirective, DropdownSingleSelectModule, InputEmailModule, InputValidationMessageModule] });
UserProfileFormEmailAddressInputsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormEmailAddressInputsModule, imports: [[CommonModule, ReactiveFormsModule, ...uiModules$8], DropdownSingleSelectModule, InputEmailModule, InputValidationMessageModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormEmailAddressInputsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ReactiveFormsModule, ...uiModules$8],
                    declarations: [
                        UserEmailAddressTypeInputComponent,
                        UserEmailAddressTypeInputCustomizableDirective,
                        UserEmailAddressTypeErrorsCustomizableDirective,
                        UserEmailAddressInputComponent,
                        UserEmailAddressInputCustomizableDirective,
                        UserEmailAddressInputErrorsCustomizableDirective,
                    ],
                    exports: [
                        UserEmailAddressTypeInputComponent,
                        UserEmailAddressTypeInputCustomizableDirective,
                        UserEmailAddressTypeErrorsCustomizableDirective,
                        UserEmailAddressInputComponent,
                        UserEmailAddressInputCustomizableDirective,
                        UserEmailAddressInputErrorsCustomizableDirective,
                        ...uiModules$8,
                    ],
                }]
        }] });

const uiModules$7 = [DropdownSingleSelectModule, InputPhoneModule, InputValidationMessageModule, PhoneNumberModule];
class UserProfileFormPhoneNumberInputsModule {
}
UserProfileFormPhoneNumberInputsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormPhoneNumberInputsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserProfileFormPhoneNumberInputsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormPhoneNumberInputsModule, declarations: [UserPhoneNumberTypeInputComponent,
        UserPhoneNumberTypeInputCustomizableDirective,
        UserPhoneNumberTypeErrorsCustomizableDirective,
        UserPhoneNumberInputComponent,
        UserPhoneNumberInputCustomizableDirective,
        UserPhoneNumberInputErrorsCustomizableDirective], imports: [CommonModule, ReactiveFormsModule, DropdownSingleSelectModule, InputPhoneModule, InputValidationMessageModule, PhoneNumberModule], exports: [UserPhoneNumberTypeInputComponent,
        UserPhoneNumberTypeInputCustomizableDirective,
        UserPhoneNumberTypeErrorsCustomizableDirective,
        UserPhoneNumberInputComponent,
        UserPhoneNumberInputCustomizableDirective,
        UserPhoneNumberInputErrorsCustomizableDirective, DropdownSingleSelectModule, InputPhoneModule, InputValidationMessageModule, PhoneNumberModule] });
UserProfileFormPhoneNumberInputsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormPhoneNumberInputsModule, providers: [PhoneNumberPipe], imports: [[CommonModule, ReactiveFormsModule, ...uiModules$7], DropdownSingleSelectModule, InputPhoneModule, InputValidationMessageModule, PhoneNumberModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormPhoneNumberInputsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ReactiveFormsModule, ...uiModules$7],
                    declarations: [
                        UserPhoneNumberTypeInputComponent,
                        UserPhoneNumberTypeInputCustomizableDirective,
                        UserPhoneNumberTypeErrorsCustomizableDirective,
                        UserPhoneNumberInputComponent,
                        UserPhoneNumberInputCustomizableDirective,
                        UserPhoneNumberInputErrorsCustomizableDirective,
                    ],
                    providers: [PhoneNumberPipe],
                    exports: [
                        UserPhoneNumberTypeInputComponent,
                        UserPhoneNumberTypeInputCustomizableDirective,
                        UserPhoneNumberTypeErrorsCustomizableDirective,
                        UserPhoneNumberInputComponent,
                        UserPhoneNumberInputCustomizableDirective,
                        UserPhoneNumberInputErrorsCustomizableDirective,
                        ...uiModules$7,
                    ],
                }]
        }] });

const uiModules$6 = [DropdownSingleSelectModule, InputTextModule, InputValidationMessageModule];
class UserProfileFormPostalAddressInputsModule {
}
UserProfileFormPostalAddressInputsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormPostalAddressInputsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserProfileFormPostalAddressInputsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormPostalAddressInputsModule, declarations: [UserPostalAddressTypeInputComponent,
        UserPostalAddressTypeInputCustomizableDirective,
        UserPostalAddressTypeErrorsCustomizableDirective,
        UserPostalBuildingNumberInputComponent,
        UserPostalBuildingNumberInputCustomizableDirective,
        UserPostalBuildingNumberInputErrorsCustomizableDirective,
        UserPostalCountrySubDivisionInputComponent,
        UserPostalCountrySubDivisionInputCustomizableDirective,
        UserPostalCountrySubDivisionInputErrorsCustomizableDirective,
        UserPostalPostalCodeInputComponent,
        UserPostalPostalCodeInputCustomizableDirective,
        UserPostalPostalCodeInputErrorsCustomizableDirective,
        UserPostalStreetNameInputComponent,
        UserPostalStreetNameInputCustomizableDirective,
        UserPostalStreetNameInputErrorsCustomizableDirective,
        UserPostalTownNameInputComponent,
        UserPostalTownNameInputCustomizableDirective,
        UserPostalTownNameInputErrorsCustomizableDirective], imports: [CommonModule, ReactiveFormsModule, DropdownSingleSelectModule, InputTextModule, InputValidationMessageModule], exports: [UserPostalAddressTypeInputComponent,
        UserPostalAddressTypeInputCustomizableDirective,
        UserPostalAddressTypeErrorsCustomizableDirective,
        UserPostalBuildingNumberInputComponent,
        UserPostalBuildingNumberInputCustomizableDirective,
        UserPostalBuildingNumberInputErrorsCustomizableDirective,
        UserPostalCountrySubDivisionInputComponent,
        UserPostalCountrySubDivisionInputCustomizableDirective,
        UserPostalCountrySubDivisionInputErrorsCustomizableDirective,
        UserPostalPostalCodeInputComponent,
        UserPostalPostalCodeInputCustomizableDirective,
        UserPostalPostalCodeInputErrorsCustomizableDirective,
        UserPostalStreetNameInputComponent,
        UserPostalStreetNameInputCustomizableDirective,
        UserPostalStreetNameInputErrorsCustomizableDirective,
        UserPostalTownNameInputComponent,
        UserPostalTownNameInputCustomizableDirective,
        UserPostalTownNameInputErrorsCustomizableDirective, DropdownSingleSelectModule, InputTextModule, InputValidationMessageModule] });
UserProfileFormPostalAddressInputsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormPostalAddressInputsModule, imports: [[CommonModule, ReactiveFormsModule, ...uiModules$6], DropdownSingleSelectModule, InputTextModule, InputValidationMessageModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormPostalAddressInputsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ReactiveFormsModule, ...uiModules$6],
                    declarations: [
                        UserPostalAddressTypeInputComponent,
                        UserPostalAddressTypeInputCustomizableDirective,
                        UserPostalAddressTypeErrorsCustomizableDirective,
                        UserPostalBuildingNumberInputComponent,
                        UserPostalBuildingNumberInputCustomizableDirective,
                        UserPostalBuildingNumberInputErrorsCustomizableDirective,
                        UserPostalCountrySubDivisionInputComponent,
                        UserPostalCountrySubDivisionInputCustomizableDirective,
                        UserPostalCountrySubDivisionInputErrorsCustomizableDirective,
                        UserPostalPostalCodeInputComponent,
                        UserPostalPostalCodeInputCustomizableDirective,
                        UserPostalPostalCodeInputErrorsCustomizableDirective,
                        UserPostalStreetNameInputComponent,
                        UserPostalStreetNameInputCustomizableDirective,
                        UserPostalStreetNameInputErrorsCustomizableDirective,
                        UserPostalTownNameInputComponent,
                        UserPostalTownNameInputCustomizableDirective,
                        UserPostalTownNameInputErrorsCustomizableDirective,
                    ],
                    exports: [
                        UserPostalAddressTypeInputComponent,
                        UserPostalAddressTypeInputCustomizableDirective,
                        UserPostalAddressTypeErrorsCustomizableDirective,
                        UserPostalBuildingNumberInputComponent,
                        UserPostalBuildingNumberInputCustomizableDirective,
                        UserPostalBuildingNumberInputErrorsCustomizableDirective,
                        UserPostalCountrySubDivisionInputComponent,
                        UserPostalCountrySubDivisionInputCustomizableDirective,
                        UserPostalCountrySubDivisionInputErrorsCustomizableDirective,
                        UserPostalPostalCodeInputComponent,
                        UserPostalPostalCodeInputCustomizableDirective,
                        UserPostalPostalCodeInputErrorsCustomizableDirective,
                        UserPostalStreetNameInputComponent,
                        UserPostalStreetNameInputCustomizableDirective,
                        UserPostalStreetNameInputErrorsCustomizableDirective,
                        UserPostalTownNameInputComponent,
                        UserPostalTownNameInputCustomizableDirective,
                        UserPostalTownNameInputErrorsCustomizableDirective,
                        ...uiModules$6,
                    ],
                }]
        }] });

const uiModules$5 = [ModalModule, ButtonModule, HeaderModule];
const components = [
    UserModalBase,
    UserProfileFormCancelModalComponent,
    UserProfileFormCancelModalCustomizableDirective,
    UserProfileFormDeleteEmailAddressModalComponent,
    UserProfileFormDeleteEmailAddressModalCustomizableDirective,
    UserProfileFormDeletePhoneAddressModalComponent,
    UserProfileFormDeletePhoneAddressModalCustomizableDirective,
    UserProfileFormDeletePostalAddressModalComponent,
    UserProfileFormDeletePostalAddressModalCustomizableDirective,
];
class UserProfileFormModalsModule {
}
UserProfileFormModalsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormModalsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserProfileFormModalsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormModalsModule, declarations: [UserModalBase,
        UserProfileFormCancelModalComponent,
        UserProfileFormCancelModalCustomizableDirective,
        UserProfileFormDeleteEmailAddressModalComponent,
        UserProfileFormDeleteEmailAddressModalCustomizableDirective,
        UserProfileFormDeletePhoneAddressModalComponent,
        UserProfileFormDeletePhoneAddressModalCustomizableDirective,
        UserProfileFormDeletePostalAddressModalComponent,
        UserProfileFormDeletePostalAddressModalCustomizableDirective], imports: [CommonModule, ReactiveFormsModule, NgbModalModule, ModalModule, ButtonModule, HeaderModule], exports: [UserModalBase,
        UserProfileFormCancelModalComponent,
        UserProfileFormCancelModalCustomizableDirective,
        UserProfileFormDeleteEmailAddressModalComponent,
        UserProfileFormDeleteEmailAddressModalCustomizableDirective,
        UserProfileFormDeletePhoneAddressModalComponent,
        UserProfileFormDeletePhoneAddressModalCustomizableDirective,
        UserProfileFormDeletePostalAddressModalComponent,
        UserProfileFormDeletePostalAddressModalCustomizableDirective, ModalModule, ButtonModule, HeaderModule] });
UserProfileFormModalsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormModalsModule, imports: [[CommonModule, ReactiveFormsModule, NgbModalModule, ...uiModules$5], ModalModule, ButtonModule, HeaderModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormModalsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ReactiveFormsModule, NgbModalModule, ...uiModules$5],
                    declarations: [...components],
                    exports: [...components, ...uiModules$5],
                }]
        }] });

const uiModules$4 = [ButtonModule, LoadButtonModule, IconModule, ReactiveFormsModule];
const componentModules$3 = [
    UserProfileFormBaseInputsModule,
    UserProfileFormEmailAddressInputsModule,
    UserProfileFormPhoneNumberInputsModule,
    UserProfileFormPostalAddressInputsModule,
    UserProfileFormErrorsModule,
    UserProfileFormModalsModule,
];
class UserProfileFormsModule {
}
UserProfileFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserProfileFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormsModule, declarations: [UserEmailAddressFormComponent,
        UserEmailAddressFormCustomizableDirective,
        UserEmailAddressFormErrorsCustomizableDirective,
        UserPhoneNumberFormComponent,
        UserPhoneNumberFormCustomizableDirective,
        UserPhoneNumberFormErrorsCustomizableDirective,
        UserPostalAddressFormComponent,
        UserPostalAddressFormCustomizableDirective,
        UserPostalAddressFormErrorsCustomizableDirective], imports: [CommonModule, UserProfileFormBaseInputsModule,
        UserProfileFormEmailAddressInputsModule,
        UserProfileFormPhoneNumberInputsModule,
        UserProfileFormPostalAddressInputsModule,
        UserProfileFormErrorsModule,
        UserProfileFormModalsModule, ButtonModule, LoadButtonModule, IconModule, ReactiveFormsModule], exports: [UserEmailAddressFormComponent,
        UserEmailAddressFormCustomizableDirective,
        UserEmailAddressFormErrorsCustomizableDirective,
        UserPhoneNumberFormComponent,
        UserPhoneNumberFormCustomizableDirective,
        UserPhoneNumberFormErrorsCustomizableDirective,
        UserPostalAddressFormComponent,
        UserPostalAddressFormCustomizableDirective,
        UserPostalAddressFormErrorsCustomizableDirective, ButtonModule, LoadButtonModule, IconModule, ReactiveFormsModule, UserProfileFormBaseInputsModule,
        UserProfileFormEmailAddressInputsModule,
        UserProfileFormPhoneNumberInputsModule,
        UserProfileFormPostalAddressInputsModule,
        UserProfileFormErrorsModule,
        UserProfileFormModalsModule] });
UserProfileFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormsModule, imports: [[CommonModule, ...componentModules$3, ...uiModules$4], ButtonModule, LoadButtonModule, IconModule, ReactiveFormsModule, UserProfileFormBaseInputsModule,
        UserProfileFormEmailAddressInputsModule,
        UserProfileFormPhoneNumberInputsModule,
        UserProfileFormPostalAddressInputsModule,
        UserProfileFormErrorsModule,
        UserProfileFormModalsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...componentModules$3, ...uiModules$4],
                    declarations: [
                        UserEmailAddressFormComponent,
                        UserEmailAddressFormCustomizableDirective,
                        UserEmailAddressFormErrorsCustomizableDirective,
                        UserPhoneNumberFormComponent,
                        UserPhoneNumberFormCustomizableDirective,
                        UserPhoneNumberFormErrorsCustomizableDirective,
                        UserPostalAddressFormComponent,
                        UserPostalAddressFormCustomizableDirective,
                        UserPostalAddressFormErrorsCustomizableDirective,
                    ],
                    exports: [
                        UserEmailAddressFormComponent,
                        UserEmailAddressFormCustomizableDirective,
                        UserEmailAddressFormErrorsCustomizableDirective,
                        UserPhoneNumberFormComponent,
                        UserPhoneNumberFormCustomizableDirective,
                        UserPhoneNumberFormErrorsCustomizableDirective,
                        UserPostalAddressFormComponent,
                        UserPostalAddressFormCustomizableDirective,
                        UserPostalAddressFormErrorsCustomizableDirective,
                        ...uiModules$4,
                        ...componentModules$3,
                    ],
                }]
        }] });

const uiModules$3 = [ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule];
const componentModules$2 = [UserProfileFormsModule];
class UserManageEmailAddressesModule {
}
UserManageEmailAddressesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserManageEmailAddressesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesModule, declarations: [UserManageEmailAddressComponent,
        UserManageEmailAddressCustomizableDirective,
        UserManageEmailAddressesComponent,
        UserManageEmailAddressesCustomizableDirective,
        UserManageEmailAddressesTitleCustomizableDirective,
        UserManageEmailAddressesComponent,
        UserNewEmailAddressComponent,
        UserNewEmailAddressCustomizableDirective,
        UserNewEmailAddressTitleCustomizableDirective,
        UserEditEmailAddressComponent,
        UserEditEmailAddressCustomizableDirective,
        UserEditEmailAddressTitleCustomizableDirective], imports: [CommonModule, UserProfileFormsModule, ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule], exports: [UserManageEmailAddressComponent,
        UserManageEmailAddressCustomizableDirective,
        UserManageEmailAddressesComponent,
        UserManageEmailAddressesCustomizableDirective,
        UserManageEmailAddressesTitleCustomizableDirective,
        UserManageEmailAddressesComponent,
        UserNewEmailAddressComponent,
        UserNewEmailAddressCustomizableDirective,
        UserNewEmailAddressTitleCustomizableDirective,
        UserEditEmailAddressComponent,
        UserEditEmailAddressCustomizableDirective,
        UserEditEmailAddressTitleCustomizableDirective, ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule, UserProfileFormsModule] });
UserManageEmailAddressesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesModule, imports: [[CommonModule, ...componentModules$2, ...uiModules$3], ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule, UserProfileFormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...componentModules$2, ...uiModules$3],
                    declarations: [
                        UserManageEmailAddressComponent,
                        UserManageEmailAddressCustomizableDirective,
                        UserManageEmailAddressesComponent,
                        UserManageEmailAddressesCustomizableDirective,
                        UserManageEmailAddressesTitleCustomizableDirective,
                        UserManageEmailAddressesComponent,
                        UserNewEmailAddressComponent,
                        UserNewEmailAddressCustomizableDirective,
                        UserNewEmailAddressTitleCustomizableDirective,
                        UserEditEmailAddressComponent,
                        UserEditEmailAddressCustomizableDirective,
                        UserEditEmailAddressTitleCustomizableDirective,
                    ],
                    exports: [
                        UserManageEmailAddressComponent,
                        UserManageEmailAddressCustomizableDirective,
                        UserManageEmailAddressesComponent,
                        UserManageEmailAddressesCustomizableDirective,
                        UserManageEmailAddressesTitleCustomizableDirective,
                        UserManageEmailAddressesComponent,
                        UserNewEmailAddressComponent,
                        UserNewEmailAddressCustomizableDirective,
                        UserNewEmailAddressTitleCustomizableDirective,
                        UserEditEmailAddressComponent,
                        UserEditEmailAddressCustomizableDirective,
                        UserEditEmailAddressTitleCustomizableDirective,
                        ...uiModules$3,
                        ...componentModules$2,
                    ],
                }]
        }] });

class UserEditPhoneNumberComponent extends EditPhoneNumberComponent {
    constructor(manageProfileService, manageProfilePreferencesService, cd, notificationService) {
        super(manageProfilePreferencesService, cd, notificationService);
        this.manageProfileService = manageProfileService;
        this.manageProfilePreferencesService = manageProfilePreferencesService;
        this.cd = cd;
        this.notificationService = notificationService;
    }
    handleSaveClick(phoneNumberData) {
        this.isSubmitting = true;
        this.manageProfileService
            .updatePhoneAddressRecord(phoneNumberData)
            .pipe(this.handleUpdateResponse()).connect();
    }
    handleDeleteClick(phoneNumberData) {
        this.isSubmitting = true;
        this.manageProfileService
            .deletePhoneAddressRecord(phoneNumberData)
            .pipe(this.handleDeleteResponse()).connect();
    }
}
UserEditPhoneNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPhoneNumberComponent, deps: [{ token: UserManageProfileService }, { token: i2.ManageProfilePreferencesService }, { token: i0.ChangeDetectorRef }, { token: i3$2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
UserEditPhoneNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserEditPhoneNumberComponent, selector: "bb-user-edit-phone-number", inputs: { phoneNumberCountryCode: "phoneNumberCountryCode", phoneNumberDebounceTime: "phoneNumberDebounceTime", enablePhoneNumberFormatter: "enablePhoneNumberFormatter" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserEditPhoneNumberCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEditPhoneNumberCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-phone-edit-container\">\n    <ng-container bbUserEditPhoneNumberTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-phone-number-form\n      [data]=\"hostRef.phoneNumberData\"\n      [count]=\"hostRef.phoneNumberCount\"\n      [types]=\"hostRef.phoneNumberTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n      [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n      [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\"\n      (delete)=\"hostRef.handleDeleteClick($event)\">\n    </bb-user-phone-number-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserEditPhoneNumberTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"Edit phone number title|Text for the title of the edit phone number card@@bb-user-edit-phone-number.title\"\n      heading=\"Edit phone number\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationUpdateSuccess>\n  <span data-role=\"user-manage-profile-phone-edit-success-notification\" i18n=\"Phone number update notification|Notification text for when the phone number is updated@@bb-user-edit-phone-number.notification.update-success\">\n    Changes saved successfully\n  </span>\n</ng-template>\n\n<ng-template #notificationDeleteSuccess>\n  <span data-role=\"user-manage-profile-delete-phone-success-notification\" i18n=\"Phone number delete notification|Notification text for when the phone number is deleted@@bb-user-edit-phone-number.notification.delete-success\">\n    Phone number successfully deleted\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Phone number action failed notification|Notification text for when the phone number action failed@@bb-user-edit-phone-number.notification.failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserPhoneNumberFormComponent; }), selector: "bb-user-phone-number-form", inputs: ["phoneNumberCountryCode", "phoneNumberDebounceTime", "enablePhoneNumberFormatter"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserEditPhoneNumberCustomizableDirective; }), selector: "[bbUserEditPhoneNumberCustomizable]" }, { type: i0.forwardRef(function () { return UserEditPhoneNumberTitleCustomizableDirective; }), selector: "[bbUserEditPhoneNumberTitleCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPhoneNumberComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-edit-phone-number',
                    templateUrl: './user-edit-phone-number.component.html',
                }]
        }], ctorParameters: function () { return [{ type: UserManageProfileService }, { type: i2.ManageProfilePreferencesService }, { type: i0.ChangeDetectorRef }, { type: i3$2.NotificationService }]; }, propDecorators: { phoneNumberCountryCode: [{
                type: Input
            }], phoneNumberDebounceTime: [{
                type: Input
            }], enablePhoneNumberFormatter: [{
                type: Input
            }] } });
class UserEditPhoneNumberCustomizableDirective extends BbTemplate {
}
UserEditPhoneNumberCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPhoneNumberCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEditPhoneNumberCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEditPhoneNumberCustomizableDirective, selector: "[bbUserEditPhoneNumberCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPhoneNumberCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEditPhoneNumberCustomizable]',
                }]
        }] });
class UserEditPhoneNumberTitleCustomizableDirective extends BbTemplate {
}
UserEditPhoneNumberTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPhoneNumberTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEditPhoneNumberTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEditPhoneNumberTitleCustomizableDirective, selector: "[bbUserEditPhoneNumberTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPhoneNumberTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEditPhoneNumberTitleCustomizable]',
                }]
        }] });

class UserManagePhoneNumberComponent extends ManagePhoneNumberComponent {
}
UserManagePhoneNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumberComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserManagePhoneNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePhoneNumberComponent, selector: "bb-user-manage-phone-number", inputs: { phoneNumberCountryCode: "phoneNumberCountryCode", phoneNumberDebounceTime: "phoneNumberDebounceTime", enablePhoneNumberFormatter: "enablePhoneNumberFormatter" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserManagePhoneNumberCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManagePhoneNumberCustomizable let-hostRef>\n  <div *ngIf=\"hostRef.phoneNumber && !hostRef.managingPhoneNumber\"\n    class=\"bb-stack\"\n    data-role=\"user-manage-profile-phone-item\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-stack bb-stack--wrap\">\n        <strong class=\"bb-stack__item\">{{hostRef.phoneNumber.type}}</strong>\n        <bb-badge-ui\n          class=\"bb-stack__item\"\n          *ngIf=\"hostRef.phoneNumber.primary\"\n          color=\"success\"\n          i18n-text=\"Primary phone number text|Text for the primary phone number badge@@bb-user-manage-phone-number.primary\"\n          text=\"Primary\">\n        </bb-badge-ui>\n        <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-right bb-text-align-left--sm-down break-word\">\n          <ng-container *ngIf=\"hostRef.enablePhoneNumberFormatter !== false; then chooseTemplate else defaultPhoneNumber\"></ng-container>\n          \n          <ng-template #chooseTemplate>\n            <ng-container *ngIf=\"hostRef.enablePhoneNumberFormatter; then inputTemplate else preferencesTemplate\"></ng-container>\n          </ng-template>\n          \n          <ng-template #inputTemplate>\n            <ng-container *ngIf=\"hostRef.enablePhoneNumberFormatter; else defaultPhoneNumber\">\n              {{ hostRef.phoneNumber.number | phoneNumber: hostRef.phoneNumberCountryCode }}\n            </ng-container>\n          </ng-template>\n          \n          <ng-template #preferencesTemplate>\n            <div *ngIf=\"hostRef.phoneNumberPreferences | async; let preferences\">\n              <ng-container *ngIf=\"preferences.enablePhoneNumberFormatter; else defaultPhoneNumber\">\n                {{ hostRef.phoneNumber.number | phoneNumber: preferences.countryCode }}\n              </ng-container>\n            </div>\n          </ng-template>\n\n          <ng-template #defaultPhoneNumber>\n            {{ hostRef.phoneNumber.number }}\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-stack__item\">\n      <button bbButton\n        data-role=\"user-manage-profile-manage-button\"\n        color=\"link\"\n        [disabled]=\"hostRef.disableManage\"\n        (click)=\"hostRef.handleManagePhoneNumber()\"\n        i18n=\"Manage phone number button|Text for the button that allows the user to manage a phone number@@bb-user-manage-phone-number.manage-phone-number-button\"\n        attr.aria-label=\"Manage {{hostRef.phoneNumber.primary ? 'primary ' : ''}}{{hostRef.phoneNumber.type}} phone number, {{hostRef.phoneNumber.number}}\"\n        i18n-attr.aria-label=\"Manage phone number button aria label@@bb-user-manage-phone-number.manage-phone-number-button.aria-label\">\n        Manage\n      </button>\n    </div>\n  </div>\n\n  <bb-user-edit-phone-number *ngIf=\"hostRef.managingPhoneNumber\"\n    (close)=\"hostRef.handleCloseEditPhoneNumber()\"\n    (closeAfterSave)=\"hostRef.handleCloseEditPhoneNumberAfterSave()\"\n    [phoneNumberTypes]=\"hostRef.phoneNumberTypes\"\n    [phoneNumberData]=\"hostRef.phoneNumber\"\n    [phoneNumberCount]=\"hostRef.phoneNumberCount\"\n    [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n    [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n    [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n    [notificationDismissTime]=\"hostRef.dismissTimeout\">\n  </bb-user-edit-phone-number>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$6.BadgeComponent; }), selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i0.forwardRef(function () { return UserEditPhoneNumberComponent; }), selector: "bb-user-edit-phone-number", inputs: ["phoneNumberCountryCode", "phoneNumberDebounceTime", "enablePhoneNumberFormatter"] }], directives: [{ type: i0.forwardRef(function () { return UserManagePhoneNumberCustomizableDirective; }), selector: "[bbUserManagePhoneNumberCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "phoneNumber": i0.forwardRef(function () { return i5$2.PhoneNumberPipe; }), "async": i0.forwardRef(function () { return i4.AsyncPipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumberComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-manage-phone-number',
                    templateUrl: './user-manage-phone-number.component.html',
                }]
        }], propDecorators: { phoneNumberCountryCode: [{
                type: Input
            }], phoneNumberDebounceTime: [{
                type: Input
            }], enablePhoneNumberFormatter: [{
                type: Input
            }] } });
class UserManagePhoneNumberCustomizableDirective extends BbTemplate {
}
UserManagePhoneNumberCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumberCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManagePhoneNumberCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePhoneNumberCustomizableDirective, selector: "[bbUserManagePhoneNumberCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumberCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManagePhoneNumberCustomizable]',
                }]
        }] });

class UserNewPhoneNumberComponent extends NewPhoneNumberComponent {
    constructor(manageProfileService, manageProfilePreferencesService, cd, notificationService) {
        super(manageProfilePreferencesService, cd, notificationService);
        this.manageProfileService = manageProfileService;
        this.manageProfilePreferencesService = manageProfilePreferencesService;
        this.cd = cd;
        this.notificationService = notificationService;
    }
    handleSaveClick(phoneAddress) {
        this.isSubmitting = true;
        this.manageProfileService
            .createPhoneAddressRecord(phoneAddress)
            .pipe(this.handleServiceResponse()).connect();
    }
}
UserNewPhoneNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPhoneNumberComponent, deps: [{ token: UserManageProfileService }, { token: i2.ManageProfilePreferencesService }, { token: i0.ChangeDetectorRef }, { token: i3$2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
UserNewPhoneNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserNewPhoneNumberComponent, selector: "bb-user-new-phone-number", inputs: { phoneNumberCountryCode: "phoneNumberCountryCode", phoneNumberDebounceTime: "phoneNumberDebounceTime", enablePhoneNumberFormatter: "enablePhoneNumberFormatter" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserNewPhoneNumberCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserNewPhoneNumberCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-phone-add-container\">\n    <ng-container bbUserNewPhoneNumberTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-phone-number-form\n      [data]=\"hostRef.newPhoneNumberData\"\n      [types]=\"hostRef.phoneNumberTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n      [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n      [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\">\n    </bb-user-phone-number-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserNewPhoneNumberTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"New phone number title|Text for the title of the new phone number card@@bb-user-new-phone-number.title\"\n      heading=\"Add phone number\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span data-role=\"user-manage-profile-phone-add-success-notification\" i18n=\"Phone Number creation notification|Notification text for when the phone number is created@@bb-user-new-phone-number.notification.creation-success\">\n    Phone number successfully added\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Phone Number creation failed notification|Notification text for when the phone number failed to create@@bb-user-new-phone-number.notification.creation-failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserPhoneNumberFormComponent; }), selector: "bb-user-phone-number-form", inputs: ["phoneNumberCountryCode", "phoneNumberDebounceTime", "enablePhoneNumberFormatter"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserNewPhoneNumberCustomizableDirective; }), selector: "[bbUserNewPhoneNumberCustomizable]" }, { type: i0.forwardRef(function () { return UserNewPhoneNumberTitleCustomizableDirective; }), selector: "[bbUserNewPhoneNumberTitleCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPhoneNumberComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-new-phone-number',
                    templateUrl: './user-new-phone-number.component.html',
                }]
        }], ctorParameters: function () { return [{ type: UserManageProfileService }, { type: i2.ManageProfilePreferencesService }, { type: i0.ChangeDetectorRef }, { type: i3$2.NotificationService }]; }, propDecorators: { phoneNumberCountryCode: [{
                type: Input
            }], phoneNumberDebounceTime: [{
                type: Input
            }], enablePhoneNumberFormatter: [{
                type: Input
            }] } });
class UserNewPhoneNumberCustomizableDirective extends BbTemplate {
}
UserNewPhoneNumberCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPhoneNumberCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserNewPhoneNumberCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserNewPhoneNumberCustomizableDirective, selector: "[bbUserNewPhoneNumberCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPhoneNumberCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserNewPhoneNumberCustomizable]',
                }]
        }] });
class UserNewPhoneNumberTitleCustomizableDirective extends BbTemplate {
}
UserNewPhoneNumberTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPhoneNumberTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserNewPhoneNumberTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserNewPhoneNumberTitleCustomizableDirective, selector: "[bbUserNewPhoneNumberTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPhoneNumberTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserNewPhoneNumberTitleCustomizable]',
                }]
        }] });

class UserManagePhoneNumbersComponent extends ManagePhoneNumbersComponent {
}
UserManagePhoneNumbersComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserManagePhoneNumbersComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePhoneNumbersComponent, selector: "bb-user-manage-phone-numbers", inputs: { phoneNumberCountryCode: "phoneNumberCountryCode", phoneNumberDebounceTime: "phoneNumberDebounceTime", enablePhoneNumberFormatter: "enablePhoneNumberFormatter" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserManagePhoneNumbersCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManagePhoneNumbersCustomizable let-hostRef>\n  <div class=\"card card-lg\">\n    <ng-container bbUserManagePhoneNumbersTitleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n    <ng-container *ngIf=\"hostRef.phoneNumbers && hostRef.phoneNumbers.length; else emptyState\">\n      <div *ngFor=\"let phoneNumberDetails of hostRef.phoneNumbers | slice:0:maxPhoneNumbers; index as i\"\n        class=\"card-section {{ hostRef.isManagingPhoneNumberIndex === i ? 'card-section--highlight' : '' }}\">\n        <bb-user-manage-phone-number\n          [phoneNumber]=\"phoneNumberDetails\"\n          [phoneNumberCount]=\"hostRef.phoneNumbers.length\"\n          [disableManage]=\"hostRef.disableManage\"\n          [phoneNumberTypes]=\"hostRef.phoneNumberTypes\"\n          (updateProfile)=\"hostRef.updateUserProfileData()\"\n          (managePhoneNumber)=\"hostRef.handleManagePhoneNumberOpen(i)\"\n          (cancelManagePhoneNumber)=\"hostRef.handleManagePhoneNumberClosed()\"\n          [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n          [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n          [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n          [dismissTimeout]=\"hostRef.dismissTimeout\">\n        </bb-user-manage-phone-number>\n      </div>\n    </ng-container>\n\n    <ng-template #emptyState>\n      <div class=\"card-section\">\n        <bb-empty-state-ui\n          data-role=\"user-manage-profile-phone-empty-state\"\n          [showIcon]=\"false\"\n          i18n-title=\"Phone numbers not found text|Text for no phone numbers found@@bb-user-manage-phone-numbers.none-found\"\n          title=\"No phone numbers\">\n        </bb-empty-state-ui>\n      </div>\n    </ng-template>\n\n    <div class=\"card-section card-section--highlight\" *ngIf=\"hostRef.isAddingPhoneNumber\">\n      <bb-user-new-phone-number\n        (close)=\"hostRef.handleManagePhoneNumberClosed()\"\n        (closeAfterSave)=\"hostRef.updateUserProfileData()\"\n        [phoneNumberTypes]=\"hostRef.phoneNumberTypes\"\n        [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n        [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n        [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n        [notificationDismissTime]=\"hostRef.dismissTimeout\">\n      </bb-user-new-phone-number>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.isAddButtonAvailable && !hostRef.isAddingPhoneNumber\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button bbButton\n          data-role=\"user-manage-profile-phone-add-button\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          [disabled]=\"hostRef.disableManage\"\n          (click)=\"hostRef.handleAddNewPhoneNumber()\">\n          <bb-icon-ui name=\"create-payment\"></bb-icon-ui>\n          <span i18n=\"Add phone number button|Text for the button that allows the user to add a new phone number@@bb-user-manage-phone-numbers.add-phone-number-button\">\n            Add Phone Number\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbUserManagePhoneNumbersTitleCustomizable let-hostRef>\n  <bb-header-ui\n    headingType=\"h3\"\n    class=\"card-header\"\n    i18n-heading=\"Phone numbers section title|Title text for the phone numbers management section@@bb-user-manage-phone-numbers.title\"\n    heading=\"Phone numbers\">\n  </bb-header-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserManagePhoneNumberComponent; }), selector: "bb-user-manage-phone-number", inputs: ["phoneNumberCountryCode", "phoneNumberDebounceTime", "enablePhoneNumberFormatter"] }, { type: i0.forwardRef(function () { return i2$2.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0.forwardRef(function () { return UserNewPhoneNumberComponent; }), selector: "bb-user-new-phone-number", inputs: ["phoneNumberCountryCode", "phoneNumberDebounceTime", "enablePhoneNumberFormatter"] }, { type: i0.forwardRef(function () { return i4$1.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserManagePhoneNumbersCustomizableDirective; }), selector: "[bbUserManagePhoneNumbersCustomizable]" }, { type: i0.forwardRef(function () { return UserManagePhoneNumbersTitleCustomizableDirective; }), selector: "[bbUserManagePhoneNumbersTitleCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i4.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "slice": i0.forwardRef(function () { return i4.SlicePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-manage-phone-numbers',
                    templateUrl: './user-manage-phone-numbers.component.html',
                }]
        }], propDecorators: { phoneNumberCountryCode: [{
                type: Input
            }], phoneNumberDebounceTime: [{
                type: Input
            }], enablePhoneNumberFormatter: [{
                type: Input
            }] } });
class UserManagePhoneNumbersCustomizableDirective extends BbTemplate {
}
UserManagePhoneNumbersCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManagePhoneNumbersCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePhoneNumbersCustomizableDirective, selector: "[bbUserManagePhoneNumbersCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManagePhoneNumbersCustomizable]',
                }]
        }] });
class UserManagePhoneNumbersTitleCustomizableDirective extends BbTemplate {
}
UserManagePhoneNumbersTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManagePhoneNumbersTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePhoneNumbersTitleCustomizableDirective, selector: "[bbUserManagePhoneNumbersTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManagePhoneNumbersTitleCustomizable]',
                }]
        }] });

const uiModules$2 = [
    ButtonModule,
    EmptyStateModule,
    BadgeModule,
    IconModule,
    NotificationModule,
    PhoneNumberModule,
    HeaderModule,
];
const componentModules$1 = [UserProfileFormsModule];
class UserManagePhoneNumbersModule {
}
UserManagePhoneNumbersModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserManagePhoneNumbersModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersModule, declarations: [UserManagePhoneNumberComponent,
        UserManagePhoneNumberCustomizableDirective,
        UserManagePhoneNumbersComponent,
        UserManagePhoneNumbersCustomizableDirective,
        UserManagePhoneNumbersTitleCustomizableDirective,
        UserNewPhoneNumberComponent,
        UserNewPhoneNumberCustomizableDirective,
        UserNewPhoneNumberTitleCustomizableDirective,
        UserEditPhoneNumberComponent,
        UserEditPhoneNumberCustomizableDirective,
        UserEditPhoneNumberTitleCustomizableDirective], imports: [CommonModule, UserProfileFormsModule, ButtonModule,
        EmptyStateModule,
        BadgeModule,
        IconModule,
        NotificationModule,
        PhoneNumberModule,
        HeaderModule], exports: [UserManagePhoneNumberComponent,
        UserManagePhoneNumberCustomizableDirective,
        UserManagePhoneNumbersComponent,
        UserManagePhoneNumbersCustomizableDirective,
        UserManagePhoneNumbersTitleCustomizableDirective,
        UserNewPhoneNumberComponent,
        UserNewPhoneNumberCustomizableDirective,
        UserNewPhoneNumberTitleCustomizableDirective,
        UserEditPhoneNumberComponent,
        UserEditPhoneNumberCustomizableDirective,
        UserEditPhoneNumberTitleCustomizableDirective, ButtonModule,
        EmptyStateModule,
        BadgeModule,
        IconModule,
        NotificationModule,
        PhoneNumberModule,
        HeaderModule, UserProfileFormsModule] });
UserManagePhoneNumbersModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersModule, imports: [[CommonModule, ...componentModules$1, ...uiModules$2], ButtonModule,
        EmptyStateModule,
        BadgeModule,
        IconModule,
        NotificationModule,
        PhoneNumberModule,
        HeaderModule, UserProfileFormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePhoneNumbersModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...componentModules$1, ...uiModules$2],
                    declarations: [
                        UserManagePhoneNumberComponent,
                        UserManagePhoneNumberCustomizableDirective,
                        UserManagePhoneNumbersComponent,
                        UserManagePhoneNumbersCustomizableDirective,
                        UserManagePhoneNumbersTitleCustomizableDirective,
                        UserNewPhoneNumberComponent,
                        UserNewPhoneNumberCustomizableDirective,
                        UserNewPhoneNumberTitleCustomizableDirective,
                        UserEditPhoneNumberComponent,
                        UserEditPhoneNumberCustomizableDirective,
                        UserEditPhoneNumberTitleCustomizableDirective,
                    ],
                    exports: [
                        UserManagePhoneNumberComponent,
                        UserManagePhoneNumberCustomizableDirective,
                        UserManagePhoneNumbersComponent,
                        UserManagePhoneNumbersCustomizableDirective,
                        UserManagePhoneNumbersTitleCustomizableDirective,
                        UserNewPhoneNumberComponent,
                        UserNewPhoneNumberCustomizableDirective,
                        UserNewPhoneNumberTitleCustomizableDirective,
                        UserEditPhoneNumberComponent,
                        UserEditPhoneNumberCustomizableDirective,
                        UserEditPhoneNumberTitleCustomizableDirective,
                        ...uiModules$2,
                        ...componentModules$1,
                    ],
                }]
        }] });

class UserEditPostalAddressComponent extends EditPostalAddressComponent {
    constructor(userManageProfileService, manageProfilePreferencesService, cd, notificationService) {
        super(manageProfilePreferencesService, cd, notificationService);
        this.userManageProfileService = userManageProfileService;
        this.manageProfilePreferencesService = manageProfilePreferencesService;
        this.cd = cd;
        this.notificationService = notificationService;
    }
    handleSaveClick(postalAddressData) {
        this.isSubmitting = true;
        this.userManageProfileService
            .updatePostalAddressRecord(Object.assign(Object.assign({}, this.postalAddressData), postalAddressData))
            .pipe(this.handleUpdateResponse()).connect();
    }
    handleDeleteClick(postalAddressData) {
        this.isSubmitting = true;
        this.userManageProfileService
            .deletePostalAddressRecord(postalAddressData)
            .pipe(this.handleDeleteResponse()).connect();
    }
}
UserEditPostalAddressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPostalAddressComponent, deps: [{ token: UserManageProfileService }, { token: i2.ManageProfilePreferencesService }, { token: i0.ChangeDetectorRef }, { token: i3$2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
UserEditPostalAddressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserEditPostalAddressComponent, selector: "bb-user-edit-postal-address", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserEditPostalAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEditPostalAddressCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-postal-edit-container\">\n    <ng-container bbUserEditPostalAddressTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-postal-address-form\n      [data]=\"hostRef.postalAddressData\"\n      [count]=\"hostRef.postalAddressCount\"\n      [types]=\"hostRef.postalAddressTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\"\n      (delete)=\"hostRef.handleDeleteClick($event)\">\n    </bb-user-postal-address-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserEditPostalAddressTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"Edit postal address title|Text for the title of the edit postal address card@@bb-user-edit-postal-address.title\"\n      heading=\"Edit address\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationUpdateSuccess>\n  <span data-role=\"user-manage-profile-postal-edit-success-notification\" i18n=\"Postal address update notification|Notification text for when the postal address is updated@@bb-user-edit-postal-address.notification.update-success\">\n    Changes saved successfully\n  </span>\n</ng-template>\n\n<ng-template #notificationDeleteSuccess>\n  <span data-role=\"user-manage-profile-delete-postal-success-notification\" i18n=\"Postal address delete notification|Notification text for when the postal address is deleted@@bb-user-edit-postal-address.notification.delete-success\">\n    Address successfully deleted\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Postal address action failed notification|Notification text for when the postal address action failed@@bb-user-edit-postal-address.notification.failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserPostalAddressFormComponent; }), selector: "bb-user-postal-address-form" }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserEditPostalAddressCustomizableDirective; }), selector: "[bbUserEditPostalAddressCustomizable]" }, { type: i0.forwardRef(function () { return UserEditPostalAddressTitleCustomizableDirective; }), selector: "[bbUserEditPostalAddressTitleCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPostalAddressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-edit-postal-address',
                    templateUrl: './user-edit-postal-address.component.html',
                }]
        }], ctorParameters: function () { return [{ type: UserManageProfileService }, { type: i2.ManageProfilePreferencesService }, { type: i0.ChangeDetectorRef }, { type: i3$2.NotificationService }]; } });
class UserEditPostalAddressCustomizableDirective extends BbTemplate {
}
UserEditPostalAddressCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPostalAddressCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEditPostalAddressCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEditPostalAddressCustomizableDirective, selector: "[bbUserEditPostalAddressCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPostalAddressCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEditPostalAddressCustomizable]',
                }]
        }] });
class UserEditPostalAddressTitleCustomizableDirective extends BbTemplate {
}
UserEditPostalAddressTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPostalAddressTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEditPostalAddressTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEditPostalAddressTitleCustomizableDirective, selector: "[bbUserEditPostalAddressTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEditPostalAddressTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEditPostalAddressTitleCustomizable]',
                }]
        }] });

class UserManagePostalAddressComponent extends ManagePostalAddressComponent {
}
UserManagePostalAddressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserManagePostalAddressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePostalAddressComponent, selector: "bb-user-manage-postal-address", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserManagePostalAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManagePostalAddressCustomizable let-hostRef>\n  <div *ngIf=\"hostRef.postalAddress && !hostRef.managingPostalAddress\"\n    class=\"bb-stack\"\n    data-role=\"user-manage-profile-postal-item\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-stack bb-stack--align-top bb-stack--wrap\">\n        <strong class=\"bb-stack__item\">{{hostRef.postalAddress.type}}</strong>\n        <bb-badge-ui\n          class=\"bb-stack__item\"\n          *ngIf=\"hostRef.postalAddress.primary\"\n          color=\"success\"\n          i18n-text=\"Primary address text|Text for the primary address badge@@bb-user-manage-address.primary\"\n          text=\"Primary\">\n        </bb-badge-ui>\n        <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-right bb-text-align-left--sm-down break-word\">\n          <address class=\"bb-block bb-block--no-margin\">\n            <div *ngIf=\"hostRef.postalAddress.department\">{{hostRef.postalAddress.department}}</div>\n            <div *ngIf=\"hostRef.postalAddress.subDepartment\">{{hostRef.postalAddress.subDepartment}}</div>\n            <div *ngIf=\"hostRef.postalAddress.addressLine\">{{hostRef.postalAddress.addressLine}}</div>\n            <div *ngIf=\"hostRef.postalAddress.buildingNumber\">{{hostRef.postalAddress.buildingNumber}}</div>\n            <div *ngIf=\"hostRef.postalAddress.streetName\">{{hostRef.postalAddress.streetName}}</div>\n            <div *ngIf=\"hostRef.postalAddress.townName\">{{hostRef.postalAddress.townName}}</div>\n            <div *ngIf=\"hostRef.postalAddress.countrySubDivision\">{{hostRef.postalAddress.countrySubDivision}}</div>\n            <div *ngIf=\"hostRef.postalAddress.postalCode\">{{hostRef.postalAddress.postalCode}}</div>\n            <div *ngIf=\"hostRef.postalAddress.country\">{{hostRef.postalAddress.country}}</div>\n          </address>\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-stack__item\">\n      <button bbButton\n        data-role=\"user-manage-profile-manage-button\"\n        color=\"link\"\n        [disabled]=\"hostRef.disableManage\"\n        (click)=\"hostRef.handleManagePostalAddress()\"\n        i18n=\"Manage postal address button|Text for the button that allows the user to manage a postal address@@bb-user-manage-postal-address.manage-postal-address-button\"\n        attr.aria-label=\"Manage {{hostRef.postalAddress.primary ? 'primary ' : ''}}{{hostRef.postalAddress.type}} postal address, {{hostRef.postalAddress.buildingNumber}}\"\n        i18n-attr.aria-label=\"Manage postal address button aria label@@bb-user-manage-postal-address.manage-postal-address-button.aria-label\">\n        Manage\n      </button>\n    </div>\n  </div>\n\n  <bb-user-edit-postal-address *ngIf=\"hostRef.managingPostalAddress\"\n    (close)=\"hostRef.handleCloseEditPostalAddress()\"\n    (closeAfterSave)=\"hostRef.handleCloseEditPostalAddressAfterSave()\"\n    [postalAddressTypes]=\"hostRef.postalAddressTypes\"\n    [postalAddressData]=\"hostRef.postalAddress\"\n    [postalAddressCount]=\"hostRef.postalAddressCount\"\n    [notificationDismissTime]=\"hostRef.dismissTimeout\">\n  </bb-user-edit-postal-address>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1$6.BadgeComponent; }), selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i0.forwardRef(function () { return UserEditPostalAddressComponent; }), selector: "bb-user-edit-postal-address" }], directives: [{ type: i0.forwardRef(function () { return UserManagePostalAddressCustomizableDirective; }), selector: "[bbUserManagePostalAddressCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-manage-postal-address',
                    templateUrl: './user-manage-postal-address.component.html',
                }]
        }] });
class UserManagePostalAddressCustomizableDirective extends BbTemplate {
}
UserManagePostalAddressCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManagePostalAddressCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePostalAddressCustomizableDirective, selector: "[bbUserManagePostalAddressCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManagePostalAddressCustomizable]',
                }]
        }] });

class UserNewPostalAddressComponent extends NewPostalAddressComponent {
    constructor(manageProfileService, manageProfilePreferencesService, cd, notificationService) {
        super(manageProfilePreferencesService, cd, notificationService);
        this.manageProfileService = manageProfileService;
        this.manageProfilePreferencesService = manageProfilePreferencesService;
        this.cd = cd;
        this.notificationService = notificationService;
    }
    handleSaveClick(postalAddressData) {
        this.isSubmitting = true;
        this.manageProfileService
            .createPostalAddressRecord(postalAddressData)
            .pipe(this.handleServiceResponse()).connect();
    }
}
UserNewPostalAddressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPostalAddressComponent, deps: [{ token: UserManageProfileService }, { token: i2.ManageProfilePreferencesService }, { token: i0.ChangeDetectorRef }, { token: i3$2.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
UserNewPostalAddressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserNewPostalAddressComponent, selector: "bb-user-new-postal-address", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserNewPostalAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserNewPostalAddressCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-postal-add-container\">\n    <ng-container bbUserNewPostalAddressTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-postal-address-form\n      [data]=\"hostRef.newPostalAddressData\"\n      [types]=\"hostRef.postalAddressTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\">\n    </bb-user-postal-address-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserNewPostalAddressTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"New postal address title|Text for the title of the new postal address card@@bb-user-new-postal-address.title\"\n      heading=\"Add address\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span data-role=\"user-manage-profile-postal-add-success-notification\" i18n=\"Postal Address creation notification|Notification text for when the postal address is created@@bb-user-new-postal-address.notification.creation-success\">\n    Address successfully added\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Postal Address creation failed notification|Notification text for when the postal address failed to create@@bb-user-new-postal-address.notification.creation-failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserPostalAddressFormComponent; }), selector: "bb-user-postal-address-form" }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserNewPostalAddressCustomizableDirective; }), selector: "[bbUserNewPostalAddressCustomizable]" }, { type: i0.forwardRef(function () { return UserNewPostalAddressTitleCustomizableDirective; }), selector: "[bbUserNewPostalAddressTitleCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPostalAddressComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-new-postal-address',
                    templateUrl: './user-new-postal-address.component.html',
                }]
        }], ctorParameters: function () { return [{ type: UserManageProfileService }, { type: i2.ManageProfilePreferencesService }, { type: i0.ChangeDetectorRef }, { type: i3$2.NotificationService }]; } });
class UserNewPostalAddressCustomizableDirective extends BbTemplate {
}
UserNewPostalAddressCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPostalAddressCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserNewPostalAddressCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserNewPostalAddressCustomizableDirective, selector: "[bbUserNewPostalAddressCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPostalAddressCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserNewPostalAddressCustomizable]',
                }]
        }] });
class UserNewPostalAddressTitleCustomizableDirective extends BbTemplate {
}
UserNewPostalAddressTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPostalAddressTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserNewPostalAddressTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserNewPostalAddressTitleCustomizableDirective, selector: "[bbUserNewPostalAddressTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserNewPostalAddressTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserNewPostalAddressTitleCustomizable]',
                }]
        }] });

class UserManagePostalAddressesComponent extends ManagePostalAddressesComponent {
}
UserManagePostalAddressesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserManagePostalAddressesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePostalAddressesComponent, selector: "bb-user-manage-postal-addresses", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserManagePostalAddressesCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManagePostalAddressesCustomizable let-hostRef>\n  <div class=\"card card-lg\">\n    <ng-container bbUserManagePostalAddressesTitleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n    <ng-container *ngIf=\"hostRef.postalAddresses && hostRef.postalAddresses.length; else emptyState\">\n      <div *ngFor=\"let addressDetails of hostRef.postalAddresses | slice:0:maxPostalAddresses; index as i\"\n        class=\"card-section {{ hostRef.isManagingPostalAddressIndex === i ? 'card-section--highlight' : '' }}\">\n        <bb-user-manage-postal-address\n          [postalAddress]=\"addressDetails\"\n          [postalAddressCount]=\"hostRef.postalAddresses.length\"\n          [disableManage]=\"hostRef.disableManage\"\n          [postalAddressTypes]=\"hostRef.postalAddressTypes\"\n          (updateProfile)=\"hostRef.updateUserProfileData()\"\n          (managePostalAddress)=\"hostRef.handleManagePostalAddressOpen(i)\"\n          (cancelManagePostalAddress)=\"hostRef.handleManagePostalAddressClosed()\"\n          [dismissTimeout]=\"hostRef.dismissTimeout\">\n        </bb-user-manage-postal-address>\n      </div>\n    </ng-container>\n\n    <ng-template #emptyState>\n      <div class=\"card-section\">\n        <bb-empty-state-ui\n          data-role=\"user-manage-profile-postal-empty-state\"\n          [showIcon]=\"false\"\n          i18n-title=\"Addresses not found text|Text for no addresses found@@bb-user-manage-addresses.none-found\"\n          title=\"No postal addresses\">\n        </bb-empty-state-ui>\n      </div>\n    </ng-template>\n\n    <div class=\"card-section card-section--highlight\" *ngIf=\"hostRef.isAddingPostalAddress\">\n      <bb-user-new-postal-address\n        (close)=\"hostRef.handleManagePostalAddressClosed()\"\n        (closeAfterSave)=\"hostRef.updateUserProfileData()\"\n        [postalAddressTypes]=\"hostRef.postalAddressTypes\"\n        [notificationDismissTime]=\"hostRef.dismissTimeout\">\n      </bb-user-new-postal-address>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.isAddButtonAvailable && !hostRef.isAddingPostalAddress\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button bbButton\n          data-role=\"user-manage-profile-postal-add-button\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          [disabled]=\"hostRef.disableManage\"\n          (click)=\"hostRef.handleAddNewPostalAddress()\">\n          <bb-icon-ui name=\"create-payment\"></bb-icon-ui>\n          <span i18n=\"Add postal address button|Text for the button that allows the user to add a new postal address@@bb-user-manage-postal-addresses.add-postal-address-button\">\n            Add Address\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbUserManagePostalAddressesTitleCustomizable let-hostRef>\n  <bb-header-ui\n    headingType=\"h3\"\n    class=\"card-header\"\n    i18n-heading=\"Addresses section title|Title text for the addresses management section@@bb-user-manage-addresses.title\"\n    heading=\"Addresses\">\n  </bb-header-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return UserManagePostalAddressComponent; }), selector: "bb-user-manage-postal-address" }, { type: i0.forwardRef(function () { return i2$2.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0.forwardRef(function () { return UserNewPostalAddressComponent; }), selector: "bb-user-new-postal-address" }, { type: i0.forwardRef(function () { return i4$1.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserManagePostalAddressesCustomizableDirective; }), selector: "[bbUserManagePostalAddressesCustomizable]" }, { type: i0.forwardRef(function () { return UserManagePostalAddressesTitleCustomizableDirective; }), selector: "[bbUserManagePostalAddressesTitleCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i4.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return i3$1.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "slice": i0.forwardRef(function () { return i4.SlicePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-manage-postal-addresses',
                    templateUrl: './user-manage-postal-addresses.component.html',
                }]
        }] });
class UserManagePostalAddressesCustomizableDirective extends BbTemplate {
}
UserManagePostalAddressesCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManagePostalAddressesCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePostalAddressesCustomizableDirective, selector: "[bbUserManagePostalAddressesCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManagePostalAddressesCustomizable]',
                }]
        }] });
class UserManagePostalAddressesTitleCustomizableDirective extends BbTemplate {
}
UserManagePostalAddressesTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManagePostalAddressesTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManagePostalAddressesTitleCustomizableDirective, selector: "[bbUserManagePostalAddressesTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManagePostalAddressesTitleCustomizable]',
                }]
        }] });

const uiModules$1 = [ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule];
const componentModules = [UserProfileFormsModule];
class UserManagePostalAddressesModule {
}
UserManagePostalAddressesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserManagePostalAddressesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesModule, declarations: [UserManagePostalAddressComponent,
        UserManagePostalAddressCustomizableDirective,
        UserManagePostalAddressesComponent,
        UserManagePostalAddressesCustomizableDirective,
        UserManagePostalAddressesTitleCustomizableDirective,
        UserNewPostalAddressComponent,
        UserNewPostalAddressCustomizableDirective,
        UserNewPostalAddressTitleCustomizableDirective,
        UserEditPostalAddressComponent,
        UserEditPostalAddressCustomizableDirective,
        UserEditPostalAddressTitleCustomizableDirective], imports: [CommonModule, UserProfileFormsModule, ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule], exports: [UserManagePostalAddressComponent,
        UserManagePostalAddressCustomizableDirective,
        UserManagePostalAddressesComponent,
        UserManagePostalAddressesCustomizableDirective,
        UserManagePostalAddressesTitleCustomizableDirective,
        UserNewPostalAddressComponent,
        UserNewPostalAddressCustomizableDirective,
        UserNewPostalAddressTitleCustomizableDirective,
        UserEditPostalAddressComponent,
        UserEditPostalAddressCustomizableDirective,
        UserEditPostalAddressTitleCustomizableDirective, ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule, UserProfileFormsModule] });
UserManagePostalAddressesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesModule, imports: [[CommonModule, ...componentModules, ...uiModules$1], ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule, UserProfileFormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManagePostalAddressesModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...componentModules, ...uiModules$1],
                    declarations: [
                        UserManagePostalAddressComponent,
                        UserManagePostalAddressCustomizableDirective,
                        UserManagePostalAddressesComponent,
                        UserManagePostalAddressesCustomizableDirective,
                        UserManagePostalAddressesTitleCustomizableDirective,
                        UserNewPostalAddressComponent,
                        UserNewPostalAddressCustomizableDirective,
                        UserNewPostalAddressTitleCustomizableDirective,
                        UserEditPostalAddressComponent,
                        UserEditPostalAddressCustomizableDirective,
                        UserEditPostalAddressTitleCustomizableDirective,
                    ],
                    exports: [
                        UserManagePostalAddressComponent,
                        UserManagePostalAddressCustomizableDirective,
                        UserManagePostalAddressesComponent,
                        UserManagePostalAddressesCustomizableDirective,
                        UserManagePostalAddressesTitleCustomizableDirective,
                        UserNewPostalAddressComponent,
                        UserNewPostalAddressCustomizableDirective,
                        UserNewPostalAddressTitleCustomizableDirective,
                        UserEditPostalAddressComponent,
                        UserEditPostalAddressCustomizableDirective,
                        UserEditPostalAddressTitleCustomizableDirective,
                        ...uiModules$1,
                        ...componentModules,
                    ],
                }]
        }] });

const customizationSlots = [
    UserManageEmailAddressCustomizableDirective,
    UserManageEmailAddressesCustomizableDirective,
    UserManageEmailAddressesTitleCustomizableDirective,
    UserNewEmailAddressCustomizableDirective,
    UserNewEmailAddressTitleCustomizableDirective,
    UserEditEmailAddressCustomizableDirective,
    UserEditEmailAddressTitleCustomizableDirective,
    UserManagePhoneNumberCustomizableDirective,
    UserManagePhoneNumbersCustomizableDirective,
    UserManagePhoneNumbersTitleCustomizableDirective,
    UserNewPhoneNumberCustomizableDirective,
    UserNewPhoneNumberTitleCustomizableDirective,
    UserEditPhoneNumberCustomizableDirective,
    UserEditPhoneNumberTitleCustomizableDirective,
    UserManagePostalAddressCustomizableDirective,
    UserManagePostalAddressesCustomizableDirective,
    UserManagePostalAddressesTitleCustomizableDirective,
    UserNewPostalAddressCustomizableDirective,
    UserNewPostalAddressTitleCustomizableDirective,
    UserEditPostalAddressCustomizableDirective,
    UserEditPostalAddressTitleCustomizableDirective,
    UserEmailAddressFormCustomizableDirective,
    UserEmailAddressFormErrorsCustomizableDirective,
    UserPhoneNumberFormCustomizableDirective,
    UserPhoneNumberFormErrorsCustomizableDirective,
    UserPostalAddressFormCustomizableDirective,
    UserPostalAddressFormErrorsCustomizableDirective,
    UserProfileFormCancelModalCustomizableDirective,
    UserProfileFormDeleteEmailAddressModalCustomizableDirective,
    UserProfileFormDeletePhoneAddressModalCustomizableDirective,
    UserProfileFormDeletePostalAddressModalCustomizableDirective,
    UserPhoneNumberTypeInputCustomizableDirective,
    UserPhoneNumberTypeErrorsCustomizableDirective,
    UserPhoneNumberInputCustomizableDirective,
    UserPhoneNumberInputErrorsCustomizableDirective,
    UserPostalAddressTypeInputCustomizableDirective,
    UserPostalAddressTypeErrorsCustomizableDirective,
    UserPostalBuildingNumberInputCustomizableDirective,
    UserPostalBuildingNumberInputErrorsCustomizableDirective,
    UserPostalCountrySubDivisionInputCustomizableDirective,
    UserPostalCountrySubDivisionInputErrorsCustomizableDirective,
    UserPostalPostalCodeInputCustomizableDirective,
    UserPostalPostalCodeInputErrorsCustomizableDirective,
    UserPostalStreetNameInputCustomizableDirective,
    UserPostalStreetNameInputErrorsCustomizableDirective,
    UserPostalTownNameInputCustomizableDirective,
    UserPostalTownNameInputErrorsCustomizableDirective,
    UserEmailAddressTypeInputCustomizableDirective,
    UserEmailAddressTypeErrorsCustomizableDirective,
    UserEmailAddressInputCustomizableDirective,
    UserEmailAddressInputErrorsCustomizableDirective,
    UserPrimaryCheckboxInputCustomizableDirective,
];
class UserManageProfileWidgetExtensionsModule {
}
UserManageProfileWidgetExtensionsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetExtensionsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserManageProfileWidgetExtensionsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetExtensionsModule, imports: [UserProfileFormBaseInputsModule,
        UserManageEmailAddressesModule,
        UserManagePhoneNumbersModule,
        UserManagePostalAddressesModule,
        UserProfileFormsModule,
        UserProfileFormModalsModule,
        UserProfileFormEmailAddressInputsModule,
        UserProfileFormPhoneNumberInputsModule,
        UserProfileFormPostalAddressInputsModule], exports: [UserManageEmailAddressCustomizableDirective,
        UserManageEmailAddressesCustomizableDirective,
        UserManageEmailAddressesTitleCustomizableDirective,
        UserNewEmailAddressCustomizableDirective,
        UserNewEmailAddressTitleCustomizableDirective,
        UserEditEmailAddressCustomizableDirective,
        UserEditEmailAddressTitleCustomizableDirective,
        UserManagePhoneNumberCustomizableDirective,
        UserManagePhoneNumbersCustomizableDirective,
        UserManagePhoneNumbersTitleCustomizableDirective,
        UserNewPhoneNumberCustomizableDirective,
        UserNewPhoneNumberTitleCustomizableDirective,
        UserEditPhoneNumberCustomizableDirective,
        UserEditPhoneNumberTitleCustomizableDirective,
        UserManagePostalAddressCustomizableDirective,
        UserManagePostalAddressesCustomizableDirective,
        UserManagePostalAddressesTitleCustomizableDirective,
        UserNewPostalAddressCustomizableDirective,
        UserNewPostalAddressTitleCustomizableDirective,
        UserEditPostalAddressCustomizableDirective,
        UserEditPostalAddressTitleCustomizableDirective,
        UserEmailAddressFormCustomizableDirective,
        UserEmailAddressFormErrorsCustomizableDirective,
        UserPhoneNumberFormCustomizableDirective,
        UserPhoneNumberFormErrorsCustomizableDirective,
        UserPostalAddressFormCustomizableDirective,
        UserPostalAddressFormErrorsCustomizableDirective,
        UserProfileFormCancelModalCustomizableDirective,
        UserProfileFormDeleteEmailAddressModalCustomizableDirective,
        UserProfileFormDeletePhoneAddressModalCustomizableDirective,
        UserProfileFormDeletePostalAddressModalCustomizableDirective,
        UserPhoneNumberTypeInputCustomizableDirective,
        UserPhoneNumberTypeErrorsCustomizableDirective,
        UserPhoneNumberInputCustomizableDirective,
        UserPhoneNumberInputErrorsCustomizableDirective,
        UserPostalAddressTypeInputCustomizableDirective,
        UserPostalAddressTypeErrorsCustomizableDirective,
        UserPostalBuildingNumberInputCustomizableDirective,
        UserPostalBuildingNumberInputErrorsCustomizableDirective,
        UserPostalCountrySubDivisionInputCustomizableDirective,
        UserPostalCountrySubDivisionInputErrorsCustomizableDirective,
        UserPostalPostalCodeInputCustomizableDirective,
        UserPostalPostalCodeInputErrorsCustomizableDirective,
        UserPostalStreetNameInputCustomizableDirective,
        UserPostalStreetNameInputErrorsCustomizableDirective,
        UserPostalTownNameInputCustomizableDirective,
        UserPostalTownNameInputErrorsCustomizableDirective,
        UserEmailAddressTypeInputCustomizableDirective,
        UserEmailAddressTypeErrorsCustomizableDirective,
        UserEmailAddressInputCustomizableDirective,
        UserEmailAddressInputErrorsCustomizableDirective,
        UserPrimaryCheckboxInputCustomizableDirective] });
UserManageProfileWidgetExtensionsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetExtensionsModule, imports: [[
            UserProfileFormBaseInputsModule,
            UserManageEmailAddressesModule,
            UserManagePhoneNumbersModule,
            UserManagePostalAddressesModule,
            UserProfileFormsModule,
            UserProfileFormModalsModule,
            UserProfileFormEmailAddressInputsModule,
            UserProfileFormPhoneNumberInputsModule,
            UserProfileFormPostalAddressInputsModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetExtensionsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        UserProfileFormBaseInputsModule,
                        UserManageEmailAddressesModule,
                        UserManagePhoneNumbersModule,
                        UserManagePostalAddressesModule,
                        UserProfileFormsModule,
                        UserProfileFormModalsModule,
                        UserProfileFormEmailAddressInputsModule,
                        UserProfileFormPhoneNumberInputsModule,
                        UserProfileFormPostalAddressInputsModule,
                    ],
                    exports: [...customizationSlots],
                }]
        }] });

class UserManageProfileWidgetComponent extends ManageProfileComponent {
    constructor(manageProfileService, manageProfilePreferencesService, cd) {
        super(manageProfilePreferencesService, cd);
        this.manageProfileService = manageProfileService;
        this.manageProfilePreferencesService = manageProfilePreferencesService;
        this.cd = cd;
        this.emailAddressTypesSubject = new BehaviorSubject(undefined);
        this.postalAddressTypesSubject = new BehaviorSubject(undefined);
        this.phoneNumberTypesSubject = new BehaviorSubject(undefined);
        this.maxEmailAddressesSubject = new BehaviorSubject(undefined);
        this.maxPhoneNumbersSubject = new BehaviorSubject(undefined);
        this.maxPostalAddressesSubject = new BehaviorSubject(undefined);
        this.showWidgetHeaderSubject = new BehaviorSubject(undefined);
        this.phoneNumberCountryCodeSubject = new BehaviorSubject(undefined);
        this.phoneNumberDebounceTimeSubject = new BehaviorSubject(undefined);
        this.enablePhoneNumberFormatterSubject = new BehaviorSubject(undefined);
        this.emailAddressTypes = filterInputParameters(this.emailAddressTypesSubject.asObservable(), this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('emailAddressTypes')));
        this.postalAddressTypes = filterInputParameters(this.postalAddressTypesSubject.asObservable(), this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('postalAddressTypes')));
        this.phoneNumberTypes = filterInputParameters(this.phoneNumberTypesSubject.asObservable(), this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('phoneNumberTypes')));
        this.maxEmailAddresses = filterInputParameters(this.maxEmailAddressesSubject.asObservable(), this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('maxEmailAddresses')));
        this.maxPhoneNumbers = filterInputParameters(this.maxPhoneNumbersSubject.asObservable(), this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('maxPhoneNumbers')));
        this.maxPostalAddresses = filterInputParameters(this.maxPostalAddressesSubject.asObservable(), this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('maxPostalAddresses')));
        this.showWidgetHeader = filterInputParameters(this.showWidgetHeaderSubject.asObservable(), this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('showWidgetHeader')));
        this.phoneNumberCountryCode = filterInputParameters(this.phoneNumberCountryCodeSubject.asObservable(), this.manageProfilePreferencesService.getPhoneNumberInputPreferences().pipe(pluck('countryCode')));
        this.phoneNumberDebounceTime = filterInputParameters(this.phoneNumberDebounceTimeSubject.asObservable(), this.manageProfilePreferencesService.getPhoneNumberInputPreferences().pipe(pluck('debounceTime')));
        this.enablePhoneNumberFormatter = filterInputParameters(this.enablePhoneNumberFormatterSubject.asObservable(), this.manageProfilePreferencesService
            .getPhoneNumberInputPreferences()
            .pipe(switchMap((preferences) => of((preferences && preferences.enablePhoneNumberFormatter) || false))));
    }
    set emailAddressTypesValue(value) {
        this.emailAddressTypesSubject.next(typeof value === 'string' ? this.convertCommaSeparatedStringToStringArray(value) : value);
    }
    set postalAddressTypesValue(value) {
        this.postalAddressTypesSubject.next(typeof value === 'string' ? this.convertCommaSeparatedStringToStringArray(value) : value);
    }
    set phoneNumberTypesValue(value) {
        this.phoneNumberTypesSubject.next(typeof value === 'string' ? this.convertCommaSeparatedStringToStringArray(value) : value);
    }
    set maxEmailAddressesValue(value) {
        this.maxEmailAddressesSubject.next(value);
    }
    set maxPhoneNumbersValue(value) {
        this.maxPhoneNumbersSubject.next(value);
    }
    set maxPostalAddressesValue(value) {
        this.maxPostalAddressesSubject.next(value);
    }
    set showWidgetHeaderValue(value) {
        this.showWidgetHeaderSubject.next(typeof value === 'string' ? !!value && value !== 'false' : value);
    }
    set phoneNumberCountryCodeValue(value) {
        this.phoneNumberCountryCodeSubject.next(value);
    }
    set phoneNumberDebounceTimeValue(value) {
        this.phoneNumberDebounceTimeSubject.next(value);
    }
    set enablePhoneNumberFormatterValue(value) {
        this.enablePhoneNumberFormatterSubject.next(typeof value === 'string' ? value === 'true' : value);
    }
    ngOnInit() {
        super.ngOnInit();
        if (this.notificationDismissTime) {
            this.dismissTimeout = this.notificationDismissTime * 1000;
        }
        else {
            this.manageProfilePreferencesService
                .getNotificationDismissTimePreference()
                .pipe(first())
                .subscribe((time) => (this.dismissTimeout = time * 1000));
        }
    }
    convertCommaSeparatedStringToStringArray(value) {
        return convertCommaSeparatedStringToStringArray(value);
    }
    setUserProfileObservable() {
        return this.userProfileSubject.asObservable().pipe(tap(this.onProfileUpdate), switchMap(() => this.manageProfileService.getUserProfile()), tap(() => (this.loadingState = false)), catchError(this.handleProfileError));
    }
}
UserManageProfileWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetComponent, deps: [{ token: UserManageProfileService }, { token: i2.ManageProfilePreferencesService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
UserManageProfileWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserManageProfileWidgetComponent, selector: "bb-user-manage-profile-widget", inputs: { emailAddressTypesValue: ["emailAddressTypes", "emailAddressTypesValue"], postalAddressTypesValue: ["postalAddressTypes", "postalAddressTypesValue"], phoneNumberTypesValue: ["phoneNumberTypes", "phoneNumberTypesValue"], maxEmailAddressesValue: ["maxEmailAddresses", "maxEmailAddressesValue"], maxPhoneNumbersValue: ["maxPhoneNumbers", "maxPhoneNumbersValue"], maxPostalAddressesValue: ["maxPostalAddresses", "maxPostalAddressesValue"], showWidgetHeaderValue: ["showWidgetHeader", "showWidgetHeaderValue"], phoneNumberCountryCodeValue: ["phoneNumberCountryCode", "phoneNumberCountryCodeValue"], phoneNumberDebounceTimeValue: ["phoneNumberDebounceTime", "phoneNumberDebounceTimeValue"], enablePhoneNumberFormatterValue: ["enablePhoneNumberFormatter", "enablePhoneNumberFormatterValue"] }, providers: [UserManageProfileService, ManageProfilePreferencesService, ManageProfileService], usesInheritance: true, ngImport: i0, template: "<ng-container bbUserManageWidgetCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManageWidgetCustomizable let-hostRef>\n  <section>\n    <bb-loading-indicator-ui\n      *ngIf=\"hostRef.loadingState\"\n      i18n-text=\"User Profile loading message|Message for when the user profile is loading@@bb-user-manage-profile.bb-loading-indicator-ui\"\n      text=\"Loading...\">\n    </bb-loading-indicator-ui>\n\n    <bb-common-error-state-ui\n      *ngIf=\"hostRef.loadingErrorState\"\n      class=\"bb-state-container\"\n      [error]=\"hostRef.loadingError\"\n      data-role=\"user-manage-profile-error-state\">\n    </bb-common-error-state-ui>\n\n    <div *ngIf=\"!hostRef.loadingState && !hostRef.loadingErrorState && hostRef.userProfile\">\n      <ng-container bbUserManageWidgetTitleCustomizable\n        *ngIf=\"hostRef.showWidgetHeader | async\"\n        [bbHostRef]=\"hostRef\">\n      </ng-container>\n      <div>\n        <div class=\"bb-block bb-block--xl\">\n          <bb-user-manage-email-addresses\n            [emailAddresses]=\"hostRef.userProfile['electronic-addresses']\"\n            [emailAddressTypes]=\"hostRef.emailAddressTypes | async\"\n            [maxEmailAddresses]=\"hostRef.maxEmailAddresses | async\"\n            (updateProfile)=\"hostRef.refreshProfileData()\"\n            (manageEmail)=\"hostRef.handleManageAddressOpen()\"\n            (cancelManageEmail)=\"hostRef.handleManageAddressClose()\"\n            [disableManage]=\"hostRef.disableAddressManaging\"\n            [dismissTimeout]=\"hostRef.dismissTimeout\">\n          </bb-user-manage-email-addresses>\n        </div>\n        <div class=\"bb-block bb-block--xl\">\n          <bb-user-manage-phone-numbers\n            [phoneNumbers]=\"hostRef.userProfile['phone-addresses']\"\n            [phoneNumberTypes]=\"hostRef.phoneNumberTypes | async\"\n            [maxPhoneNumbers]=\"hostRef.maxPhoneNumbers | async\"\n            (updateProfile)=\"hostRef.refreshProfileData()\"\n            (managePhoneNumber)=\"hostRef.handleManageAddressOpen()\"\n            (cancelManagePhoneNumber)=\"hostRef.handleManageAddressClose()\"\n            [disableManage]=\"hostRef.disableAddressManaging\"\n            [dismissTimeout]=\"hostRef.dismissTimeout\"\n\n            [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode | async\"\n            [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime | async\"\n            [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter | async\">\n          </bb-user-manage-phone-numbers>\n        </div>\n        <div class=\"bb-block bb-block--xl\">\n          <bb-user-manage-postal-addresses\n            [postalAddresses]=\"hostRef.userProfile['postal-addresses']\"\n            [postalAddressTypes]=\"hostRef.postalAddressTypes | async\"\n            [maxPostalAddresses]=\"hostRef.maxPostalAddresses | async\"\n            (updateProfile)=\"hostRef.refreshProfileData()\"\n            (managePostalAddress)=\"hostRef.handleManageAddressOpen()\"\n            (cancelManagePostalAddress)=\"hostRef.handleManageAddressClose()\"\n            [disableManage]=\"hostRef.disableAddressManaging\"\n            [dismissTimeout]=\"hostRef.dismissTimeout\">\n          </bb-user-manage-postal-addresses>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-template>\n\n<ng-template bbUserManageWidgetTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h2\"\n      data-role=\"user-manage-profile-user-name\"\n      [heading]=\"hostRef.userProfile.fullName\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i3$3.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i0.forwardRef(function () { return i4$2.ErrorCommonStateComponent; }), selector: "bb-common-error-state-ui", inputs: ["error"] }, { type: i0.forwardRef(function () { return UserManageEmailAddressesComponent; }), selector: "bb-user-manage-email-addresses" }, { type: i0.forwardRef(function () { return UserManagePhoneNumbersComponent; }), selector: "bb-user-manage-phone-numbers", inputs: ["phoneNumberCountryCode", "phoneNumberDebounceTime", "enablePhoneNumberFormatter"] }, { type: i0.forwardRef(function () { return UserManagePostalAddressesComponent; }), selector: "bb-user-manage-postal-addresses" }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserManageWidgetCustomizableDirective; }), selector: "[bbUserManageWidgetCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return UserManageWidgetTitleCustomizableDirective; }), selector: "[bbUserManageWidgetTitleCustomizable]" }], pipes: { "async": i0.forwardRef(function () { return i4.AsyncPipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-manage-profile-widget',
                    templateUrl: './user-manage-profile-widget.component.html',
                    providers: [UserManageProfileService, ManageProfilePreferencesService, ManageProfileService],
                }]
        }], ctorParameters: function () { return [{ type: UserManageProfileService }, { type: i2.ManageProfilePreferencesService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { emailAddressTypesValue: [{
                type: Input,
                args: ['emailAddressTypes']
            }], postalAddressTypesValue: [{
                type: Input,
                args: ['postalAddressTypes']
            }], phoneNumberTypesValue: [{
                type: Input,
                args: ['phoneNumberTypes']
            }], maxEmailAddressesValue: [{
                type: Input,
                args: ['maxEmailAddresses']
            }], maxPhoneNumbersValue: [{
                type: Input,
                args: ['maxPhoneNumbers']
            }], maxPostalAddressesValue: [{
                type: Input,
                args: ['maxPostalAddresses']
            }], showWidgetHeaderValue: [{
                type: Input,
                args: ['showWidgetHeader']
            }], phoneNumberCountryCodeValue: [{
                type: Input,
                args: ['phoneNumberCountryCode']
            }], phoneNumberDebounceTimeValue: [{
                type: Input,
                args: ['phoneNumberDebounceTime']
            }], enablePhoneNumberFormatterValue: [{
                type: Input,
                args: ['enablePhoneNumberFormatter']
            }] } });
class UserManageWidgetCustomizableDirective extends BbTemplate {
}
UserManageWidgetCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageWidgetCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManageWidgetCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManageWidgetCustomizableDirective, selector: "[bbUserManageWidgetCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageWidgetCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManageWidgetCustomizable]',
                }]
        }] });
class UserManageWidgetTitleCustomizableDirective extends BbTemplate {
}
UserManageWidgetTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageWidgetTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManageWidgetTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManageWidgetTitleCustomizableDirective, selector: "[bbUserManageWidgetTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageWidgetTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManageWidgetTitleCustomizable]',
                }]
        }] });

const uiModules = [ErrorCommonStateModule, LoadingIndicatorModule, HeaderModule];
const widgetModules = [
    UserManageProfileWidgetExtensionsModule,
    UserManagePhoneNumbersModule,
    UserManageEmailAddressesModule,
    UserManagePostalAddressesModule,
];
class UserManageProfileWidgetModule {
}
UserManageProfileWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
UserManageProfileWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetModule, declarations: [UserManageProfileWidgetComponent,
        UserManageWidgetCustomizableDirective,
        UserManageWidgetTitleCustomizableDirective], imports: [CommonModule, i1$9.BackbaseCoreModule, UserCommonModule, ErrorCommonStateModule, LoadingIndicatorModule, HeaderModule, UserManageProfileWidgetExtensionsModule,
        UserManagePhoneNumbersModule,
        UserManageEmailAddressesModule,
        UserManagePostalAddressesModule], exports: [UserManageProfileWidgetComponent,
        UserManageWidgetCustomizableDirective,
        UserManageWidgetTitleCustomizableDirective, ErrorCommonStateModule, LoadingIndicatorModule, HeaderModule, UserManageProfileWidgetExtensionsModule,
        UserManagePhoneNumbersModule,
        UserManageEmailAddressesModule,
        UserManagePostalAddressesModule] });
UserManageProfileWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetModule, imports: [[
            CommonModule,
            BackbaseCoreModule.withConfig({
                classMap: { UserManageProfileWidgetComponent },
            }),
            UserCommonModule,
            ...uiModules,
            ...widgetModules,
        ], ErrorCommonStateModule, LoadingIndicatorModule, HeaderModule, UserManageProfileWidgetExtensionsModule,
        UserManagePhoneNumbersModule,
        UserManageEmailAddressesModule,
        UserManagePostalAddressesModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageProfileWidgetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { UserManageProfileWidgetComponent },
                        }),
                        UserCommonModule,
                        ...uiModules,
                        ...widgetModules,
                    ],
                    declarations: [
                        UserManageProfileWidgetComponent,
                        UserManageWidgetCustomizableDirective,
                        UserManageWidgetTitleCustomizableDirective,
                    ],
                    exports: [
                        UserManageProfileWidgetComponent,
                        UserManageWidgetCustomizableDirective,
                        UserManageWidgetTitleCustomizableDirective,
                        ...uiModules,
                        ...widgetModules,
                    ],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { UserEditEmailAddressComponent, UserEditPhoneNumberComponent, UserEditPostalAddressComponent, UserEmailAddressFormComponent, UserEmailAddressInputComponent, UserEmailAddressTypeInputComponent, UserManageEmailAddressComponent, UserManageEmailAddressesComponent, UserManagePhoneNumberComponent, UserManagePhoneNumbersComponent, UserManagePostalAddressComponent, UserManagePostalAddressesComponent, UserManageProfileService, UserManageProfileWidgetComponent, UserManageProfileWidgetModule, UserNewEmailAddressComponent, UserNewPhoneNumberComponent, UserNewPostalAddressComponent, UserPhoneNumberFormComponent, UserPhoneNumberInputComponent, UserPhoneNumberTypeInputComponent, UserPostalAddressFormComponent, UserPostalAddressTypeInputComponent, UserPostalBuildingNumberInputComponent, UserPostalCountrySubDivisionInputComponent, UserPostalPostalCodeInputComponent, UserPostalStreetNameInputComponent, UserPostalTownNameInputComponent, UserPrimaryCheckboxInputComponent, UserProfileFormCancelModalComponent, UserProfileFormDeleteEmailAddressModalComponent, UserProfileFormDeletePhoneAddressModalComponent, UserProfileFormDeletePostalAddressModalComponent, UserProfileFormPostalAddressInputsModule, UserEditEmailAddressCustomizableDirective as ӨUserEditEmailAddressCustomizableDirective, UserEditEmailAddressTitleCustomizableDirective as ӨUserEditEmailAddressTitleCustomizableDirective, UserEditPhoneNumberCustomizableDirective as ӨUserEditPhoneNumberCustomizableDirective, UserEditPhoneNumberTitleCustomizableDirective as ӨUserEditPhoneNumberTitleCustomizableDirective, UserEditPostalAddressCustomizableDirective as ӨUserEditPostalAddressCustomizableDirective, UserEditPostalAddressTitleCustomizableDirective as ӨUserEditPostalAddressTitleCustomizableDirective, UserEmailAddressFormCustomizableDirective as ӨUserEmailAddressFormCustomizableDirective, UserEmailAddressFormErrorsCustomizableDirective as ӨUserEmailAddressFormErrorsCustomizableDirective, UserEmailAddressInputCustomizableDirective as ӨUserEmailAddressInputCustomizableDirective, UserEmailAddressInputErrorsCustomizableDirective as ӨUserEmailAddressInputErrorsCustomizableDirective, UserEmailAddressTypeErrorsCustomizableDirective as ӨUserEmailAddressTypeErrorsCustomizableDirective, UserEmailAddressTypeInputCustomizableDirective as ӨUserEmailAddressTypeInputCustomizableDirective, UserManageEmailAddressCustomizableDirective as ӨUserManageEmailAddressCustomizableDirective, UserManageEmailAddressesCustomizableDirective as ӨUserManageEmailAddressesCustomizableDirective, UserManageEmailAddressesModule as ӨUserManageEmailAddressesModule, UserManageEmailAddressesTitleCustomizableDirective as ӨUserManageEmailAddressesTitleCustomizableDirective, UserManagePhoneNumberCustomizableDirective as ӨUserManagePhoneNumberCustomizableDirective, UserManagePhoneNumbersCustomizableDirective as ӨUserManagePhoneNumbersCustomizableDirective, UserManagePhoneNumbersModule as ӨUserManagePhoneNumbersModule, UserManagePhoneNumbersTitleCustomizableDirective as ӨUserManagePhoneNumbersTitleCustomizableDirective, UserManagePostalAddressCustomizableDirective as ӨUserManagePostalAddressCustomizableDirective, UserManagePostalAddressesCustomizableDirective as ӨUserManagePostalAddressesCustomizableDirective, UserManagePostalAddressesModule as ӨUserManagePostalAddressesModule, UserManagePostalAddressesTitleCustomizableDirective as ӨUserManagePostalAddressesTitleCustomizableDirective, UserManageProfileWidgetExtensionsModule as ӨUserManageProfileWidgetExtensionsModule, UserManageWidgetCustomizableDirective as ӨUserManageWidgetCustomizableDirective, UserManageWidgetTitleCustomizableDirective as ӨUserManageWidgetTitleCustomizableDirective, UserModalBase as ӨUserModalBase, UserNewEmailAddressCustomizableDirective as ӨUserNewEmailAddressCustomizableDirective, UserNewEmailAddressTitleCustomizableDirective as ӨUserNewEmailAddressTitleCustomizableDirective, UserNewPhoneNumberCustomizableDirective as ӨUserNewPhoneNumberCustomizableDirective, UserNewPhoneNumberTitleCustomizableDirective as ӨUserNewPhoneNumberTitleCustomizableDirective, UserNewPostalAddressCustomizableDirective as ӨUserNewPostalAddressCustomizableDirective, UserNewPostalAddressTitleCustomizableDirective as ӨUserNewPostalAddressTitleCustomizableDirective, UserPhoneNumberFormCustomizableDirective as ӨUserPhoneNumberFormCustomizableDirective, UserPhoneNumberFormErrorsCustomizableDirective as ӨUserPhoneNumberFormErrorsCustomizableDirective, UserPhoneNumberInputCustomizableDirective as ӨUserPhoneNumberInputCustomizableDirective, UserPhoneNumberInputErrorsCustomizableDirective as ӨUserPhoneNumberInputErrorsCustomizableDirective, UserPhoneNumberTypeErrorsCustomizableDirective as ӨUserPhoneNumberTypeErrorsCustomizableDirective, UserPhoneNumberTypeInputCustomizableDirective as ӨUserPhoneNumberTypeInputCustomizableDirective, UserPostalAddressFormCustomizableDirective as ӨUserPostalAddressFormCustomizableDirective, UserPostalAddressFormErrorsCustomizableDirective as ӨUserPostalAddressFormErrorsCustomizableDirective, UserPostalAddressTypeErrorsCustomizableDirective as ӨUserPostalAddressTypeErrorsCustomizableDirective, UserPostalAddressTypeInputCustomizableDirective as ӨUserPostalAddressTypeInputCustomizableDirective, UserPostalBuildingNumberInputCustomizableDirective as ӨUserPostalBuildingNumberInputCustomizableDirective, UserPostalBuildingNumberInputErrorsCustomizableDirective as ӨUserPostalBuildingNumberInputErrorsCustomizableDirective, UserPostalCountrySubDivisionInputCustomizableDirective as ӨUserPostalCountrySubDivisionInputCustomizableDirective, UserPostalCountrySubDivisionInputErrorsCustomizableDirective as ӨUserPostalCountrySubDivisionInputErrorsCustomizableDirective, UserPostalPostalCodeInputCustomizableDirective as ӨUserPostalPostalCodeInputCustomizableDirective, UserPostalPostalCodeInputErrorsCustomizableDirective as ӨUserPostalPostalCodeInputErrorsCustomizableDirective, UserPostalStreetNameInputCustomizableDirective as ӨUserPostalStreetNameInputCustomizableDirective, UserPostalStreetNameInputErrorsCustomizableDirective as ӨUserPostalStreetNameInputErrorsCustomizableDirective, UserPostalTownNameInputCustomizableDirective as ӨUserPostalTownNameInputCustomizableDirective, UserPostalTownNameInputErrorsCustomizableDirective as ӨUserPostalTownNameInputErrorsCustomizableDirective, UserPrimaryCheckboxInputCustomizableDirective as ӨUserPrimaryCheckboxInputCustomizableDirective, UserProfileFormBaseInputsModule as ӨUserProfileFormBaseInputsModule, UserProfileFormCancelModalCustomizableDirective as ӨUserProfileFormCancelModalCustomizableDirective, UserProfileFormDeleteEmailAddressModalCustomizableDirective as ӨUserProfileFormDeleteEmailAddressModalCustomizableDirective, UserProfileFormDeletePhoneAddressModalCustomizableDirective as ӨUserProfileFormDeletePhoneAddressModalCustomizableDirective, UserProfileFormDeletePostalAddressModalCustomizableDirective as ӨUserProfileFormDeletePostalAddressModalCustomizableDirective, UserProfileFormEmailAddressInputsModule as ӨUserProfileFormEmailAddressInputsModule, UserProfileFormErrorsComponent as ӨUserProfileFormErrorsComponent, UserProfileFormErrorsModule as ӨUserProfileFormErrorsModule, UserProfileFormModalsModule as ӨUserProfileFormModalsModule, UserProfileFormPhoneNumberInputsModule as ӨUserProfileFormPhoneNumberInputsModule, UserProfileFormsModule as ӨUserProfileFormsModule };
//# sourceMappingURL=backbase-user-manage-profile-widget-ang.js.map
