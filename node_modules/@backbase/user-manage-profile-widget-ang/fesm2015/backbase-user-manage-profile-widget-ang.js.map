{"version":3,"file":"backbase-user-manage-profile-widget-ang.js","sources":["../../../../libs/user-manage-profile-widget/src/user-manage-profile.service.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-errors/user-profile-form-errors.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-errors/user-profile-form-errors.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/email-address-inputs/user-email-address-type-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/email-address-inputs/user-email-address-type-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/email-address-inputs/user-email-address-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/email-address-inputs/user-email-address-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/base-inputs/user-primary-checkbox-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/base-inputs/user-primary-checkbox-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-modal-base.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-cancel-modal.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-cancel-modal.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-delete-email-address-modal.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-delete-email-address-modal.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-email-address-form.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-email-address-form.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-edit-email-address/user-edit-email-address.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-edit-email-address/user-edit-email-address.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-manage-email-address.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-manage-email-address.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-new-email-address/user-new-email-address.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-new-email-address/user-new-email-address.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-manage-email-addresses.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-manage-email-addresses.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/phone-number-inputs/user-phone-number-type-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/phone-number-inputs/user-phone-number-type-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/phone-number-inputs/user-phone-number-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/phone-number-inputs/user-phone-number-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-delete-phone-address-modal.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-delete-phone-address-modal.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-phone-number-form.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-phone-number-form.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-address-type-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-address-type-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-building-number-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-building-number-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-street-name-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-street-name-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-town-name-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-town-name-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-country-sub-division-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-country-sub-division-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-postal-code-input.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-postal-code-input.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-delete-postal-address-modal.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-delete-postal-address-modal.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-postal-address-form.component.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-postal-address-form.component.html","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-errors/user-profile-form-errors.module.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/base-inputs/user-profile-form-base-inputs.module.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/email-address-inputs/user-profile-form-email-address-inputs.module.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/phone-number-inputs/user-profile-form-phone-number-inputs.module.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-profile-form-postal-address-inputs.module.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-form-modals/user-profile-form-modals.module.ts","../../../../libs/user-manage-profile-widget/src/user-profile-forms/user-profile-forms.module.ts","../../../../libs/user-manage-profile-widget/src/user-manage-email-addresses/user-manage-email-addresses.module.ts","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-edit-phone-number/user-edit-phone-number.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-edit-phone-number/user-edit-phone-number.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-manage-phone-number.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-manage-phone-number.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-new-phone-number/user-new-phone-number.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-new-phone-number/user-new-phone-number.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-manage-phone-numbers.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-manage-phone-numbers.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-phone-numbers/user-manage-phone-numbers.module.ts","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-edit-postal-address/user-edit-postal-address.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-edit-postal-address/user-edit-postal-address.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-manage-postal-address.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-manage-postal-address.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-new-postal-address/user-new-postal-address.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-new-postal-address/user-new-postal-address.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-manage-postal-addresses.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-manage-postal-addresses.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-postal-addresses/user-manage-postal-addresses.module.ts","../../../../libs/user-manage-profile-widget/src/user-manage-profile-widget-extensions.module.ts","../../../../libs/user-manage-profile-widget/src/user-manage-profile-widget.component.ts","../../../../libs/user-manage-profile-widget/src/user-manage-profile-widget.component.html","../../../../libs/user-manage-profile-widget/src/user-manage-profile-widget.module.ts","../../../../libs/user-manage-profile-widget/backbase-user-manage-profile-widget-ang.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ElectronicAddress,\n  GetElectronicAddress,\n  GetPhoneAddress,\n  GetPostalAddress,\n  PhoneAddress,\n  PostalAddress,\n  UserProfile,\n  UserProfileManagementService,\n} from '@backbase/data-ang/user';\nimport { ManageProfileService } from '@backbase/user-common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class UserManageProfileService {\n  constructor(\n    private readonly data: UserProfileManagementService,\n    private readonly manageProfileService: ManageProfileService,\n  ) {}\n\n  getUserProfile(): Observable<UserProfile> {\n    return this.data.getOwnUserProfile().pipe(map(this.manageProfileService.sortUserContactListsByPrimary));\n  }\n\n  createElectronicAddressRecord(electronicAddress: ElectronicAddress): Observable<any> {\n    return this.data.addOwnElectronicAddress({ electronicAddress });\n  }\n\n  updateElectronicAddressRecord(electronicAddress: GetElectronicAddress): Observable<any> {\n    const { key, ...record } = electronicAddress;\n\n    return this.data.updateOwnElectronicAddress({\n      electronicAddressKey: electronicAddress.key,\n      electronicAddress: record,\n    });\n  }\n\n  deleteElectronicAddressRecord(electronicAddress: GetElectronicAddress): Observable<any> {\n    return this.data.deleteOwnElectronicAddress({ electronicAddressKey: electronicAddress.key });\n  }\n\n  createPhoneAddressRecord(phoneAddress: PhoneAddress): Observable<any> {\n    return this.data.addOwnPhoneAddress({ phoneAddress });\n  }\n\n  updatePhoneAddressRecord(phoneAddress: GetPhoneAddress): Observable<any> {\n    const { key, ...record } = phoneAddress;\n\n    return this.data.updateOwnPhoneAddress({\n      phoneAddressKey: phoneAddress.key,\n      phoneAddress: record,\n    });\n  }\n\n  deletePhoneAddressRecord(phoneAddress: GetPhoneAddress): Observable<any> {\n    return this.data.deleteOwnPhoneAddress({ phoneAddressKey: phoneAddress.key });\n  }\n\n  createPostalAddressRecord(postalAddress: PostalAddress): Observable<any> {\n    return this.data.addOwnPostalAddress({ postalAddress });\n  }\n\n  updatePostalAddressRecord(postalAddress: GetPostalAddress): Observable<any> {\n    const { key, ...record } = postalAddress;\n\n    return this.data.updateOwnPostalAddress({\n      postalAddressKey: postalAddress.key,\n      postalAddress: record,\n    });\n  }\n\n  deletePostalAddressRecord(postalAddress: GetPostalAddress): Observable<any> {\n    return this.data.deleteOwnPostalAddress({ postalAddressKey: postalAddress.key });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'bb-user-profile-form-errors',\n  templateUrl: './user-profile-form-errors.component.html',\n})\nexport class UserProfileFormErrorsComponent {\n  /**\n   * The form group used to determine errors.\n   */\n  @Input() formGroup: FormGroup | undefined;\n  /**\n   * Whether the form has been submitted with errors.\n   */\n  @Input() hasBeenSubmittedWithErrors: boolean | undefined;\n\n  get hasErrors(): boolean {\n    if (!this.formGroup) {\n      throw new Error('formGroup must be initialised to type FormGroup');\n    }\n\n    return Boolean(this.formGroup && this.formGroup.touched && this.hasBeenSubmittedWithErrors);\n  }\n}\n","<bb-alert-ui *ngIf=\"hasErrors\" i18n-title=\"Form errors title|Title for the form errors list@@bb-user-email-address-form.errors.title\"\n  title=\"There is a problem, please check the form\">\n  <ng-content></ng-content>\n</bb-alert-ui>","import { Component, Directive, Input, OnInit } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-email-address-type-input',\n  templateUrl: './user-email-address-type-input.component.html',\n})\nexport class UserEmailAddressTypeInputComponent extends InputBase implements OnInit {\n  /**\n   * The list of email address types.\n   */\n  @Input() emailAddressTypes: Array<string> | undefined;\n\n  ngOnInit(): void {\n    if (this.emailAddressTypes && !this.emailAddressTypes.includes(this.fieldControl.value)) {\n      this.fieldControl.setValue(this.emailAddressTypes[0]);\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbUserEmailAddressTypeInputCustomizable]',\n})\nexport class UserEmailAddressTypeInputCustomizableDirective extends BbTemplate<\n  UserEmailAddressTypeInputComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserEmailAddressTypeErrorsCustomizable]',\n})\nexport class UserEmailAddressTypeErrorsCustomizableDirective extends BbTemplate<\n  UserEmailAddressTypeInputComponent,\n  undefined\n> {}\n","<ng-container bbUserEmailAddressTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEmailAddressTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-email-manage-type\"\n      i18n-label=\"Email address type label|Label for the email address type field@@bb-user-user-email-address-type-input.label\"\n      label=\"Email address type\"\n      [options]=\"hostRef.emailAddressTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserEmailAddressTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserEmailAddressTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-email-address-input',\n  templateUrl: './user-email-address-input.component.html',\n})\nexport class UserEmailAddressInputComponent extends InputBase {}\n\n@Directive({\n  selector: '[bbUserEmailAddressInputCustomizable]',\n})\nexport class UserEmailAddressInputCustomizableDirective extends BbTemplate<UserEmailAddressInputComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserEmailAddressInputErrorsCustomizable]',\n})\nexport class UserEmailAddressInputErrorsCustomizableDirective extends BbTemplate<\n  UserEmailAddressInputComponent,\n  undefined\n> {}\n","<ng-container bbUserEmailAddressInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEmailAddressInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-email-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-email-manage-email\"\n      i18n-label=\"Email address label|Label for the email address field@@bb-user-email-address-input.label\"\n      label=\"Email address\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"255\">\n    </bb-input-email-ui>\n\n    <ng-container bbUserEmailAddressInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserEmailAddressInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Email address required error|Error to say that email address is a required field@@bb-user-email-address-input.errors.required\">\n      You must enter an email address.\n    </span>\n    <span *ngIf=\"hostRef.fieldControl.errors?.email\" i18n=\"Email address format error|Error to say that email address is formatted incorrectly@@bb-user-email-address-input.errors.formatted\">\n      Email address must be in a valid format.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive, Input, OnInit } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-primary-checkbox-input',\n  templateUrl: './user-primary-checkbox-input.component.html',\n})\nexport class UserPrimaryCheckboxInputComponent extends InputBase implements OnInit {\n  /**\n   * The form's address type.\n   * Used to determine which label to show.\n   */\n  @Input() type: string | undefined;\n\n  id: string | undefined;\n  availableTypes = {\n    address: 'postalAddress',\n    phone: 'phoneNumber',\n    email: 'emailAddress',\n  };\n\n  ngOnInit(): void {\n    this.id = this.generateId('email-checkbox');\n  }\n\n  private generateId(elementKey: string): string {\n    return `${elementKey}-${Math.random().toString(36).substring(2, 9)}`;\n  }\n}\n\n@Directive({\n  selector: '[bbUserPrimaryCheckboxInputCustomizable]',\n})\nexport class UserPrimaryCheckboxInputCustomizableDirective extends BbTemplate<\n  UserPrimaryCheckboxInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPrimaryCheckboxInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPrimaryCheckboxInputCustomizable let-hostRef>\n  <div class=\"form-group\">\n    <div [formGroup]=\"hostRef.formGroup\">\n      <bb-input-checkbox-ui *ngIf=\"hostRef.type === hostRef.availableTypes.email\" data-role=\"user-manage-profile-email-manage-primary\" [id]=\"hostRef.id\" i18n-label=\"Primary email address label|Label for the is primary email address field@@bb-user-primary-checkbox-input.email-address-label\"\n        label=\"This is my primary email address\" [formControlName]=\"hostRef.fieldName\">\n      </bb-input-checkbox-ui>\n      <bb-input-checkbox-ui *ngIf=\"hostRef.type === hostRef.availableTypes.phone\" data-role=\"user-manage-profile-phone-manage-primary\" [id]=\"hostRef.id\" i18n-label=\"Primary phone number label|Label for the is primary phone number field@@bb-user-primary-checkbox-input.phone-number-label\"\n        label=\"This is my primary phone number\" [formControlName]=\"hostRef.fieldName\">\n      </bb-input-checkbox-ui>\n      <bb-input-checkbox-ui *ngIf=\"hostRef.type === hostRef.availableTypes.address\" data-role=\"user-manage-profile-postal-manage-primary\" [id]=\"hostRef.id\" i18n-label=\"Primary postal address label|Label for the is primary postal address field@@bb-user-primary-checkbox-input.postal-address-label\"\n        label=\"This is my primary address\" [formControlName]=\"hostRef.fieldName\">\n      </bb-input-checkbox-ui>\n    </div>\n  </div>\n</ng-template>","import { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: '[bbUserModalBase]',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class UserModalBase {\n  /**\n   * Whether the modal is open.\n   * Defaults to false.\n   */\n  @Input() isOpen = false;\n  @Output() close = new EventEmitter<void>();\n  @Output() dismiss = new EventEmitter<void>();\n\n  closeModal() {\n    this.close.emit();\n  }\n\n  dismissModal() {\n    this.dismiss.emit();\n  }\n}\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { UserModalBase } from './user-modal-base';\n\n@Component({\n  selector: 'bb-user-profile-form-cancel-modal',\n  templateUrl: './user-profile-form-cancel-modal.component.html',\n})\nexport class UserProfileFormCancelModalComponent extends UserModalBase {}\n\n@Directive({\n  selector: '[bbUserProfileFormCancelModalCustomizable]',\n})\nexport class UserProfileFormCancelModalCustomizableDirective extends BbTemplate<\n  UserProfileFormCancelModalComponent,\n  undefined\n> {}\n","<ng-container bbUserProfileFormCancelModalCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserProfileFormCancelModalCustomizable let-hostRef>\n  <bb-modal-ui [isOpen]=\"hostRef.isOpen\" (cancel)=\"hostRef.dismissModal()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Discard changes modal title|Title of the confirmation modal for discarding working changes@@bb-user-profile-form-cancel-modal.title\"\n          heading=\"Discard changes?\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody\n        i18n=\"Discard changes modal body|Body text of the confirmation modal for discarding working changes@@bb-user-profile-form-cancel-modal.body\">\n        Are you sure you want to cancel and discard all changes?\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          data-role=\"user-manage-profile-modal-cancel-button\"\n          color=\"secondary\"\n          (click)=\"hostRef.dismissModal()\"\n          i18n=\"Dismiss discard modal button|Text of the button that dismisses the discard changes confirmation modal@@bb-user-profile-form-cancel-modal.cancel\">\n          Continue editing\n        </button>\n        <button bbButton\n          data-role=\"user-manage-profile-modal-confirm-button\"\n          color=\"danger\"\n          (click)=\"hostRef.closeModal()\"\n          i18n=\"Confirm discard modal button|Text of the button that confirms the discard changes confirmation modal@@bb-user-profile-form-cancel-modal.confirm\">\n          Discard changes\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { UserModalBase } from './user-modal-base';\n\n@Component({\n  selector: 'bb-user-profile-form-delete-email-address-modal',\n  templateUrl: './user-profile-form-delete-email-address-modal.component.html',\n})\nexport class UserProfileFormDeleteEmailAddressModalComponent extends UserModalBase {}\n\n@Directive({\n  selector: '[bbUserProfileFormDeleteEmailAddressModalCustomizable]',\n})\nexport class UserProfileFormDeleteEmailAddressModalCustomizableDirective extends BbTemplate<\n  UserProfileFormDeleteEmailAddressModalComponent,\n  undefined\n> {}\n","<ng-container bbUserProfileFormDeleteEmailAddressModalCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserProfileFormDeleteEmailAddressModalCustomizable let-hostRef>\n  <bb-modal-ui data-role=\"user-manage-profile-delete-email-modal\" [isOpen]=\"hostRef.isOpen\"\n    (cancel)=\"hostRef.dismissModal()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Delete email address modal title|Title of the confirmation modal for deleting an email address@@bb-user-profile-form-delete-email-address-modal.title\"\n          heading=\"Delete email address?\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody\n        i18n=\"Delete email address modal body|Body text of the confirmation modal for deleting an email address@@bb-user-profile-form-delete-email-address-modal.body\">\n        Are you sure you want to delete this email address? This action can not be undone\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-cancel-button\"\n          color=\"secondary\"\n          (click)=\"hostRef.dismissModal()\"\n          i18n=\"Dismiss delete email address modal button|Text of the button that dismisses the delete an email address modal@@bb-user-profile-form-delete-email-address-modal.dismiss\">\n          Cancel\n        </button>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-confirm-button\"\n          color=\"danger\"\n          (click)=\"hostRef.closeModal()\"\n          i18n=\"Confirm delete email address modal button|Text of the button that confirms the delete an email address modal@@bb-user-profile-form-delete-email-address-modal.confirm\">\n          Delete email address\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ManageProfileEmailAddressFormComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-email-address-form',\n  templateUrl: './user-email-address-form.component.html',\n})\nexport class UserEmailAddressFormComponent extends ManageProfileEmailAddressFormComponent {}\n\n@Directive({\n  selector: '[bbUserEmailAddressFormCustomizable]',\n})\nexport class UserEmailAddressFormCustomizableDirective extends BbTemplate<UserEmailAddressFormComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserEmailAddressFormErrorsCustomizable]',\n})\nexport class UserEmailAddressFormErrorsCustomizableDirective extends BbTemplate<\n  UserEmailAddressFormComponent,\n  undefined\n> {}\n","<ng-container bbUserEmailAddressFormCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEmailAddressFormCustomizable let-hostRef>\n  <form #emailAddressFormElement *ngIf=\"hostRef.form\" [formGroup]=\"hostRef.form\" (submit)=\"hostRef.handleSubmit()\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-user-profile-form-errors [formGroup]=\"hostRef.form\" [hasBeenSubmittedWithErrors]=\"hostRef.showFormErrors && !hostRef.form.valid\">\n        <ng-container bbUserEmailAddressFormErrorsCustomizable [bbHostRef]=\"hostRef\">\n        </ng-container>\n      </bb-user-profile-form-errors>\n\n      <bb-user-email-address-type-input\n        fieldName=\"type\"\n        [formGroup]=\"hostRef.form\"\n        [emailAddressTypes]=\"hostRef.types\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-email-address-type-input>\n\n      <bb-user-email-address-input\n        fieldName=\"address\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-email-address-input>\n\n      <bb-user-primary-checkbox-input fieldName=\"primary\" type=\"emailAddress\" [formGroup]=\"hostRef.form\">\n      </bb-user-primary-checkbox-input>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <bb-load-button-ui\n        data-role=\"user-manage-profile-email-manage-save\"\n        type=\"submit\"\n        class=\"bb-button-bar__button\"\n        [isLoading]=\"hostRef.isSubmitting\"\n        [disabled]=\"hostRef.isSubmitting\"\n        i18n=\"Save email address button|Text of the button that triggers saving of new email address@@bb-user-email-address-form.save-button\">\n        Save email address\n      </bb-load-button-ui>\n      <button bbButton\n        data-role=\"user-manage-profile-manage-cancel-button\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.handleCancelClick()\"\n        i18n=\"Cancel button|Text of the button that triggers cancellation of new email address@@bb-user-email-address-form.cancel-button\">\n        Cancel\n      </button>\n      <button bbButton\n        data-role=\"user-manage-profile-email-delete-button\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        *ngIf=\"hostRef.showDeleteButton\"\n        color=\"link\"\n        (click)=\"hostRef.handleDelete()\">\n        <bb-icon-ui name=\"delete\"></bb-icon-ui>\n        <span i18n=\"Delete email address button|Text for the button that allows the user to delete an email address@@bb-user-email-address-form.delete-button\">\n          Delete\n        </span>\n      </button>\n    </div>\n  </form>\n\n  <bb-user-profile-form-cancel-modal [isOpen]=\"hostRef.isCancelModalOpen\" (dismiss)=\"hostRef.dismissCancelModal()\"\n    (close)=\"hostRef.closeCancelModal()\">\n  </bb-user-profile-form-cancel-modal>\n\n  <bb-user-profile-form-delete-email-address-modal [isOpen]=\"hostRef.isDeleteModalOpen\" (dismiss)=\"hostRef.dismissDeleteModal()\"\n    (close)=\"hostRef.closeDeleteModal()\">\n  </bb-user-profile-form-delete-email-address-modal>\n</ng-template>\n\n<ng-template bbUserEmailAddressFormErrorsCustomizable let-hostRef>\n  <p *ngIf=\"hostRef.form.controls.type.errors?.required\">\n    <u i18n=\"Type required error|Error to say that type is a required field@@bb-user-email-address-form.errors.type-required\">\n      You must enter a type.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.address.errors?.required\">\n    <u i18n=\"Email address required error|Error to say that email address is a required field@@bb-user-email-address-form.errors.address-required\">\n      You must enter an email address.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.address.errors?.email\">\n    <u i18n=\"Email address format error|Error to say that email address is formatted incorrectly@@bb-user-email-address-form.errors.address-formatted\">\n      Email address must be in a valid format.\n    </u>\n  </p>\n</ng-template>\n","import { HttpResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { EditEmailAddressComponent, ManageProfilePreferencesService } from '@backbase/user-common';\nimport { ConnectableObservable } from 'rxjs';\nimport { GetElectronicAddress } from '../../types/user-types';\nimport { UserManageProfileService } from '../../user-manage-profile.service';\n\n@Component({\n  selector: 'bb-user-edit-email-address',\n  templateUrl: './user-edit-email-address.component.html',\n})\nexport class UserEditEmailAddressComponent extends EditEmailAddressComponent {\n  constructor(\n    private readonly manageProfileService: UserManageProfileService,\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {\n    super(manageProfilePreferencesService, cd, notificationService);\n  }\n\n  handleSaveClick(emailAddressData: GetElectronicAddress) {\n    this.isSubmitting = true;\n    (\n      this.manageProfileService\n        .updateElectronicAddressRecord(emailAddressData)\n        .pipe(this.handleUpdateResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n\n  handleDeleteClick(emailAddressData: GetElectronicAddress) {\n    this.isSubmitting = true;\n    (\n      this.manageProfileService\n        .deleteElectronicAddressRecord(emailAddressData)\n        .pipe(this.handleDeleteResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n}\n\n@Directive({\n  selector: '[bbUserEditEmailAddressCustomizable]',\n})\nexport class UserEditEmailAddressCustomizableDirective extends BbTemplate<UserEditEmailAddressComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserEditEmailAddressTitleCustomizable]',\n})\nexport class UserEditEmailAddressTitleCustomizableDirective extends BbTemplate<\n  UserEditEmailAddressComponent,\n  undefined\n> {}\n","<ng-container bbUserEditEmailAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEditEmailAddressCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-email-edit-container\">\n    <ng-container bbUserEditEmailAddressTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-email-address-form\n      [data]=\"hostRef.emailAddressData\"\n      [count]=\"hostRef.emailAddressCount\"\n      [types]=\"hostRef.emailAddressTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\"\n      (delete)=\"hostRef.handleDeleteClick($event)\">\n    </bb-user-email-address-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserEditEmailAddressTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"Edit email address title|Text for the title of the edit email address card@@bb-user-edit-email-address.title\"\n      heading=\"Edit email address\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationUpdateSuccess>\n  <span data-role=\"user-manage-profile-email-edit-success-notification\" i18n=\"Email Address update notification|Notification text for when the email address is updated@@bb-user-edit-email-address.notification.update-success\">\n    Changes saved successfully\n  </span>\n</ng-template>\n\n<ng-template #notificationDeleteSuccess>\n  <span data-role=\"user-manage-profile-delete-email-success-notification\" i18n=\"Email Address delete notification|Notification text for when the email address is deleted@@bb-user-edit-email-address.notification.delete-success\">\n    Email address successfully deleted\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Email Address action failed notification|Notification text for when the email address action failed@@bb-user-edit-email-address.notification.failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ManageEmailAddressComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-manage-email-address',\n  templateUrl: './user-manage-email-address.component.html',\n})\nexport class UserManageEmailAddressComponent extends ManageEmailAddressComponent {}\n\n@Directive({\n  selector: '[bbUserManageEmailAddressCustomizable]',\n})\nexport class UserManageEmailAddressCustomizableDirective extends BbTemplate<\n  UserManageEmailAddressComponent,\n  undefined\n> {}\n","<ng-container bbUserManageEmailAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManageEmailAddressCustomizable let-hostRef>\n  <div *ngIf=\"hostRef.electronicAddress && !hostRef.managingEmailAddress\"\n    class=\"bb-stack\"\n    data-role=\"user-manage-profile-email-item\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-stack bb-stack--wrap\">\n        <strong class=\"bb-stack__item\">{{hostRef.electronicAddress.type}}</strong>\n        <bb-badge-ui\n          class=\"bb-stack_item\"\n          *ngIf=\"hostRef.electronicAddress.primary\"\n          color=\"success\"\n          i18n-text=\"Primary email address text|Text for the primary email address badge@@bb-user-manage-email-address.primary\"\n          text=\"Primary\">\n        </bb-badge-ui>\n        <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-right bb-text-align-left--sm-down break-word\">\n          {{hostRef.electronicAddress.address}}\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-stack__item\">\n      <button bbButton\n        data-role=\"user-manage-profile-manage-button\"\n        color=\"link\"\n        [disabled]=\"hostRef.disableManage\"\n        (click)=\"hostRef.handleManageEmailAddress()\"\n        i18n=\"Manage email address button|Text for the button that allows the user to manage an email address@@bb-user-manage-email-address.manage-email-button\"\n        attr.aria-label=\"Manage {{hostRef.electronicAddress.primary ? 'primary ' : ''}}{{hostRef.electronicAddress.type}} email address, {{hostRef.electronicAddress.address}}\"\n        i18n-attr.aria-label=\"Manage email address button aria label@@bb-user-manage-email-address.manage-email-button.aria-label\">\n        Manage\n      </button>\n    </div>\n  </div>\n\n  <bb-user-edit-email-address *ngIf=\"hostRef.managingEmailAddress\"\n    (close)=\"hostRef.handleCloseEditEmailAddress()\"\n    (closeAfterSave)=\"hostRef.handleCloseEditEmailAddressAfterSave()\"\n    [emailAddressTypes]=\"hostRef.emailAddressTypes\"\n    [emailAddressData]=\"hostRef.electronicAddress\"\n    [emailAddressCount]=\"hostRef.emailAddressCount\"\n    [notificationDismissTime]=\"hostRef.dismissTimeout\">\n  </bb-user-edit-email-address>\n</ng-template>\n","import { HttpResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { ManageProfilePreferencesService, NewEmailAddressComponent } from '@backbase/user-common';\nimport { ConnectableObservable } from 'rxjs';\nimport { ElectronicAddress } from '../../types/user-types';\nimport { UserManageProfileService } from '../../user-manage-profile.service';\n\n@Component({\n  selector: 'bb-user-new-email-address',\n  templateUrl: './user-new-email-address.component.html',\n})\nexport class UserNewEmailAddressComponent extends NewEmailAddressComponent {\n  constructor(\n    private readonly manageProfileService: UserManageProfileService,\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {\n    super(manageProfilePreferencesService, cd, notificationService);\n  }\n\n  handleSaveClick(emailAddress: ElectronicAddress) {\n    this.isSubmitting = true;\n    (\n      this.manageProfileService\n        .createElectronicAddressRecord(emailAddress)\n        .pipe(this.handleServiceResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n}\n\n@Directive({\n  selector: '[bbUserNewEmailAddressCustomizable]',\n})\nexport class UserNewEmailAddressCustomizableDirective extends BbTemplate<UserNewEmailAddressComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserNewEmailAddressTitleCustomizable]',\n})\nexport class UserNewEmailAddressTitleCustomizableDirective extends BbTemplate<\n  UserNewEmailAddressComponent,\n  undefined\n> {}\n","<ng-container bbUserNewEmailAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserNewEmailAddressCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-email-add-container\">\n    <ng-container bbUserNewEmailAddressTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-email-address-form\n      [data]=\"hostRef.newEmailAddressData\"\n      [types]=\"hostRef.emailAddressTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\">\n    </bb-user-email-address-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserNewEmailAddressTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"New email address title|Text for the title of the new email address card@@bb-user-new-email-address.title\"\n      heading=\"Add email address\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span data-role=\"user-manage-profile-email-add-success-notification\" i18n=\"Email Address creation notification|Notification text for when the email address is created@@bb-user-new-email-address.notification.creation-success\">\n    Email address successfully added\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Email Address creation failed notification|Notification text for when the email address failed to create@@bb-user-new-email-address.notification.creation-failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ManageEmailAddressesComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-manage-email-addresses',\n  templateUrl: './user-manage-email-addresses.component.html',\n})\nexport class UserManageEmailAddressesComponent extends ManageEmailAddressesComponent {}\n\n@Directive({\n  selector: '[bbUserManageEmailAddressesCustomizable]',\n})\nexport class UserManageEmailAddressesCustomizableDirective extends BbTemplate<\n  UserManageEmailAddressesComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserManageEmailAddressesTitleCustomizable]',\n})\nexport class UserManageEmailAddressesTitleCustomizableDirective extends BbTemplate<\n  UserManageEmailAddressesComponent,\n  undefined\n> {}\n","<ng-container bbUserManageEmailAddressesCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManageEmailAddressesCustomizable let-hostRef>\n  <div class=\"card card-lg\">\n    <ng-container bbUserManageEmailAddressesTitleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n    <ng-container *ngIf=\"hostRef.emailAddresses && hostRef.emailAddresses.length; else emptyState\">\n      <div *ngFor=\"let emailAddressDetails of hostRef.emailAddresses | slice:0:maxEmailAddresses; index as i\"\n        class=\"card-section {{ hostRef.isManagingEmailAddressIndex === i ? 'card-section--highlight' : '' }}\">\n        <bb-user-manage-email-address\n          [electronicAddress]=\"emailAddressDetails\"\n          [emailAddressCount]=\"hostRef.emailAddresses.length\"\n          [disableManage]=\"hostRef.disableManage\"\n          [emailAddressTypes]=\"hostRef.emailAddressTypes\"\n          (updateProfile)=\"hostRef.updateUserProfileData()\"\n          (manageEmail)=\"hostRef.handleManageEmailOpen(i)\"\n          (cancelManageEmail)=\"hostRef.handleManageEmailClosed()\"\n          [dismissTimeout]=\"hostRef.dismissTimeout\">\n        </bb-user-manage-email-address>\n      </div>\n    </ng-container>\n\n    <ng-template #emptyState>\n      <div class=\"card-section\">\n        <bb-empty-state-ui\n          data-role=\"user-manage-profile-email-empty-state\"\n          [showIcon]=\"false\"\n          i18n-title=\"Email addresses not found text|Text for no email addresses found@@bb-user-manage-email-addresses.none-found\"\n          title=\"No email addresses\">\n        </bb-empty-state-ui>\n      </div>\n    </ng-template>\n\n    <div class=\"card-section card-section--highlight\" *ngIf=\"hostRef.isAddingEmailAddress\">\n      <bb-user-new-email-address\n        (close)=\"hostRef.handleManageEmailClosed()\"\n        (closeAfterSave)=\"hostRef.updateUserProfileData()\"\n        [emailAddressTypes]=\"hostRef.emailAddressTypes\"\n        [notificationDismissTime]=\"hostRef.dismissTimeout\">\n      </bb-user-new-email-address>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.isAddButtonAvailable && !hostRef.isAddingEmailAddress\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button bbButton\n          data-role=\"user-manage-profile-email-add-button\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          [disabled]=\"hostRef.disableManage\"\n          (click)=\"hostRef.handleAddNewEmailAddress()\">\n          <bb-icon-ui name=\"create-payment\"></bb-icon-ui>\n          <span i18n=\"Add email address button|Text for the button that allows the user to add a new email address@@bb-user-manage-email-addresses.add-email-button\">\n            Add Email Address\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbUserManageEmailAddressesTitleCustomizable let-hostRef>\n  <bb-header-ui\n    headingType=\"h3\"\n    class=\"card-header\"\n    i18n-heading=\"Email addresses section title|Title text for the email addresses management section@@bb-user-manage-email-addresses.title\"\n    heading=\"Email addresses\">\n  </bb-header-ui>\n</ng-template>\n","import { Component, Directive, Input, OnInit } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-phone-number-type-input',\n  templateUrl: './user-phone-number-type-input.component.html',\n})\nexport class UserPhoneNumberTypeInputComponent extends InputBase implements OnInit {\n  /**\n   * The list of phone number types.\n   */\n  @Input() phoneNumberTypes: Array<string> | undefined;\n\n  ngOnInit(): void {\n    if (this.phoneNumberTypes && !this.phoneNumberTypes.includes(this.fieldControl.value)) {\n      this.fieldControl.setValue(this.phoneNumberTypes[0]);\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbUserPhoneNumberTypeInputCustomizable]',\n})\nexport class UserPhoneNumberTypeInputCustomizableDirective extends BbTemplate<\n  UserPhoneNumberTypeInputComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserPhoneNumberTypeErrorsCustomizable]',\n})\nexport class UserPhoneNumberTypeErrorsCustomizableDirective extends BbTemplate<\n  UserPhoneNumberTypeInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPhoneNumberTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPhoneNumberTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-phone-manage-type\"\n      i18n-label=\"Phone number type label|Label for the phone number type field@@bb-user-user-phone-number-type-input.label\"\n      label=\"Phone number type\"\n      [options]=\"hostRef.phoneNumberTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserPhoneNumberTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPhoneNumberTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { PhoneNumberInputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-phone-number-input',\n  templateUrl: './user-phone-number-input.component.html',\n})\nexport class UserPhoneNumberInputComponent extends PhoneNumberInputBase {}\n\n@Directive({\n  selector: '[bbUserPhoneNumberInputCustomizable]',\n})\nexport class UserPhoneNumberInputCustomizableDirective extends BbTemplate<UserPhoneNumberInputComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserPhoneNumberInputErrorsCustomizable]',\n})\nexport class UserPhoneNumberInputErrorsCustomizableDirective extends BbTemplate<\n  UserPhoneNumberInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPhoneNumberInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPhoneNumberInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-phone-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-phone-manage-phone\"\n      i18n-label=\"Phone number label|Label for the phone-number field@@bb-user-phone-number-input.label\"\n      label=\"Phone number\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"30\">\n    </bb-input-phone-ui>\n\n    <ng-container bbUserPhoneNumberInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPhoneNumberInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Phone number required error|Error to say that phone-number is a required field@@bb-user-phone-number-input.errors.required\">\n      You must enter a phone number.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { UserModalBase } from './user-modal-base';\n\n@Component({\n  selector: 'bb-user-profile-form-delete-phone-address-modal',\n  templateUrl: './user-profile-form-delete-phone-address-modal.component.html',\n})\nexport class UserProfileFormDeletePhoneAddressModalComponent extends UserModalBase {}\n\n@Directive({\n  selector: '[bbUserProfileFormDeletePhoneAddressModalCustomizable]',\n})\nexport class UserProfileFormDeletePhoneAddressModalCustomizableDirective extends BbTemplate<\n  UserProfileFormDeletePhoneAddressModalComponent,\n  undefined\n> {}\n","<ng-container bbUserProfileFormDeletePhoneAddressModalCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserProfileFormDeletePhoneAddressModalCustomizable let-hostRef>\n  <bb-modal-ui data-role=\"user-manage-profile-delete-phone-modal\" [isOpen]=\"hostRef.isOpen\"\n    (cancel)=\"hostRef.dismissModal()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Delete phone address modal title|Title of the confirmation modal for deleting an phone address@@bb-user-profile-form-delete-phone-address-modal.title\"\n          heading=\"Delete phone number?\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody\n        i18n=\"Delete phone address modal body|Body text of the confirmation modal for deleting an phone address@@bb-user-profile-form-delete-phone-address-modal.body\">\n        Are you sure you want to delete this phone number? This action can not be undone\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-cancel-button\"\n          color=\"secondary\"\n          (click)=\"hostRef.dismissModal()\"\n          i18n=\"Dismiss delete phone address modal button|Text of the button that dismisses the delete an phone address modal@@bb-user-profile-form-delete-phone-address-modal.dismiss\">\n          Cancel\n        </button>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-confirm-button\"\n          color=\"danger\"\n          (click)=\"hostRef.closeModal()\"\n          i18n=\"Confirm delete phone address modal button|Text of the button that confirms the delete an phone address modal@@bb-user-profile-form-delete-phone-address-modal.confirm\">\n          Delete phone number\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CountryCode } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { ManageProfilePhoneNumberFormComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-phone-number-form',\n  templateUrl: './user-phone-number-form.component.html',\n})\nexport class UserPhoneNumberFormComponent extends ManageProfilePhoneNumberFormComponent {\n  @Input() phoneNumberCountryCode: CountryCode | undefined;\n  @Input() phoneNumberDebounceTime: number | undefined;\n  @Input() enablePhoneNumberFormatter: boolean | undefined;\n}\n\n@Directive({\n  selector: '[bbUserPhoneNumberFormCustomizable]',\n})\nexport class UserPhoneNumberFormCustomizableDirective extends BbTemplate<UserPhoneNumberFormComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserPhoneNumberFormErrorsCustomizable]',\n})\nexport class UserPhoneNumberFormErrorsCustomizableDirective extends BbTemplate<\n  UserPhoneNumberFormComponent,\n  undefined\n> {}\n","<ng-container bbUserPhoneNumberFormCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPhoneNumberFormCustomizable let-hostRef>\n  <form #phoneNumberFormElement *ngIf=\"hostRef.form\" [formGroup]=\"hostRef.form\" (submit)=\"hostRef.handleSubmit()\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-user-profile-form-errors [formGroup]=\"hostRef.form\" [hasBeenSubmittedWithErrors]=\"hostRef.showFormErrors && !hostRef.form.valid\">\n        <ng-container bbUserPhoneNumberFormErrorsCustomizable [bbHostRef]=\"hostRef\">\n        </ng-container>\n      </bb-user-profile-form-errors>\n\n      <bb-user-phone-number-type-input\n        fieldName=\"type\"\n        [formGroup]=\"hostRef.form\"\n        [phoneNumberTypes]=\"hostRef.types\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-phone-number-type-input>\n\n      <bb-user-phone-number-input\n        fieldName=\"number\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\"\n        [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n        [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n        [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\">\n      </bb-user-phone-number-input>\n\n      <bb-user-primary-checkbox-input fieldName=\"primary\" type=\"phoneNumber\" [formGroup]=\"hostRef.form\">\n      </bb-user-primary-checkbox-input>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <bb-load-button-ui\n        data-role=\"user-manage-profile-phone-manage-save\"\n        type=\"submit\"\n        class=\"bb-button-bar__button\"\n        [isLoading]=\"hostRef.isSubmitting\"\n        [disabled]=\"hostRef.isSubmitting\"\n        i18n=\"Save phone number button|Text of the button that triggers saving of new phone number@@bb-user-phone-number-form.save-button\">\n        Save phone number\n      </bb-load-button-ui>\n      <button bbButton\n        data-role=\"user-manage-profile-manage-cancel-button\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.handleCancelClick()\"\n        i18n=\"Cancel button|Text of the button that triggers cancellation of new phone number@@bb-user-phone-number-form.cancel-button\">\n        Cancel\n      </button>\n      <button bbButton\n        data-role=\"user-manage-profile-phone-delete-button\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        *ngIf=\"hostRef.showDeleteButton\"\n        color=\"link\"\n        (click)=\"hostRef.handleDelete()\">\n        <bb-icon-ui name=\"delete\"></bb-icon-ui>\n        <span i18n=\"Delete phone number button|Text for the button that allows the user to delete a phone number@@bb-user-phone-number-form.delete-button\">\n          Delete\n        </span>\n      </button>\n    </div>\n  </form>\n\n  <bb-user-profile-form-cancel-modal [isOpen]=\"hostRef.isCancelModalOpen\" (dismiss)=\"hostRef.dismissCancelModal()\"\n    (close)=\"hostRef.closeCancelModal()\">\n  </bb-user-profile-form-cancel-modal>\n\n  <bb-user-profile-form-delete-phone-address-modal [isOpen]=\"hostRef.isDeleteModalOpen\" (dismiss)=\"hostRef.dismissDeleteModal()\"\n    (close)=\"hostRef.closeDeleteModal()\">\n  </bb-user-profile-form-delete-phone-address-modal>\n</ng-template>\n\n<ng-template bbUserPhoneNumberFormErrorsCustomizable let-hostRef>\n  <p *ngIf=\"hostRef.form.controls.type.errors?.required\">\n    <u i18n=\"Type required error|Error to say that type is a required field@@bb-user-phone-number-form.errors.type-required\">\n      You must enter a type.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.number.errors?.required\">\n    <u i18n=\"Phone number required error|Error to say that phone number is a required field@@bb-user-phone-number-form.errors.number-required\">\n      You must enter a phone number.\n    </u>\n  </p>\n</ng-template>\n","import { Component, Directive, Input, OnInit } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-postal-address-type-input',\n  templateUrl: './user-postal-address-type-input.component.html',\n})\nexport class UserPostalAddressTypeInputComponent extends InputBase implements OnInit {\n  /**\n   * The list of postal address types.\n   */\n  @Input() postalAddressTypes: Array<string> | undefined;\n\n  ngOnInit(): void {\n    if (this.postalAddressTypes && !this.postalAddressTypes.includes(this.fieldControl.value)) {\n      this.fieldControl.setValue(this.postalAddressTypes[0]);\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbUserPostalAddressTypeInputCustomizable]',\n})\nexport class UserPostalAddressTypeInputCustomizableDirective extends BbTemplate<\n  UserPostalAddressTypeInputComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserPostalAddressTypeErrorsCustomizable]',\n})\nexport class UserPostalAddressTypeErrorsCustomizableDirective extends BbTemplate<\n  UserPostalAddressTypeInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPostalAddressTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalAddressTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-postal-manage-type\"\n      i18n-label=\"Postal address type label|Label for the postal address type field@@bb-user-user-postal-address-type-input.label\"\n      label=\"Address type\"\n      [options]=\"hostRef.postalAddressTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserPostalAddressTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalAddressTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-postal-building-number-input',\n  templateUrl: './user-postal-building-number-input.component.html',\n})\nexport class UserPostalBuildingNumberInputComponent extends InputBase {}\n\n@Directive({\n  selector: '[bbUserPostalBuildingNumberInputCustomizable]',\n})\nexport class UserPostalBuildingNumberInputCustomizableDirective extends BbTemplate<\n  UserPostalBuildingNumberInputComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserPostalBuildingNumberInputErrorsCustomizable]',\n})\nexport class UserPostalBuildingNumberInputErrorsCustomizableDirective extends BbTemplate<\n  UserPostalBuildingNumberInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPostalBuildingNumberInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalBuildingNumberInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-postal-manage-line-1\"\n      i18n-label=\"Building number label|Label for the building number field@@bb-user-postal-building-number-input.label\"\n      label=\"Address line 1\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"255\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalBuildingNumberInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalBuildingNumberInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Building number required error|Error to say that postal building number is a required field@@bb-user-postal-building-number-input.errors.required\">\n      You must enter a value for Address line 1.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-postal-street-name-input',\n  templateUrl: './user-postal-street-name-input.component.html',\n})\nexport class UserPostalStreetNameInputComponent extends InputBase {}\n\n@Directive({\n  selector: '[bbUserPostalStreetNameInputCustomizable]',\n})\nexport class UserPostalStreetNameInputCustomizableDirective extends BbTemplate<\n  UserPostalStreetNameInputComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserPostalStreetNameInputErrorsCustomizable]',\n})\nexport class UserPostalStreetNameInputErrorsCustomizableDirective extends BbTemplate<\n  UserPostalStreetNameInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPostalStreetNameInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalStreetNameInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-postal-manage-line-2\"\n      i18n-label=\"Street name label|Label for the street name field@@bb-user-postal-street-name-input.label\"\n      label=\"Address line 2 (optional)\"\n      [formControlName]=\"hostRef.fieldName\"\n      [maxLength]=\"255\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalStreetNameInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-postal-town-name-input',\n  templateUrl: './user-postal-town-name-input.component.html',\n})\nexport class UserPostalTownNameInputComponent extends InputBase {}\n\n@Directive({\n  selector: '[bbUserPostalTownNameInputCustomizable]',\n})\nexport class UserPostalTownNameInputCustomizableDirective extends BbTemplate<\n  UserPostalTownNameInputComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserPostalTownNameInputErrorsCustomizable]',\n})\nexport class UserPostalTownNameInputErrorsCustomizableDirective extends BbTemplate<\n  UserPostalTownNameInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPostalTownNameInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalTownNameInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-postal-manage-city\"\n      i18n-label=\"Town name label|Label for the town name field@@bb-user-postal-town-name-input.label\"\n      label=\"City or town\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"35\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalTownNameInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalTownNameInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Town name required error|Error to say that postal town name is a required field@@bb-user-postal-town-name-input.errors.required\">\n      You must enter a value for City or town.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-postal-country-sub-division-input',\n  templateUrl: './user-postal-country-sub-division-input.component.html',\n})\nexport class UserPostalCountrySubDivisionInputComponent extends InputBase {}\n\n@Directive({\n  selector: '[bbUserPostalCountrySubDivisionInputCustomizable]',\n})\nexport class UserPostalCountrySubDivisionInputCustomizableDirective extends BbTemplate<\n  UserPostalCountrySubDivisionInputComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserPostalCountrySubDivisionInputErrorsCustomizable]',\n})\nexport class UserPostalCountrySubDivisionInputErrorsCustomizableDirective extends BbTemplate<\n  UserPostalCountrySubDivisionInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPostalCountrySubDivisionInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalCountrySubDivisionInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-postal-manage-state\"\n      i18n-label=\"Country sub-division label|Label for the country sub-division field@@bb-user-postal-country-sub-division-input.label\"\n      label=\"State, province or region\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"35\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalCountrySubDivisionInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalCountrySubDivisionInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Country sub-division required error|Error to say that postal country sub-division is a required field@@bb-user-postal-country-sub-division-input.errors.required\">\n      You must enter a value for State, province or region.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { InputBase } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-postal-postal-code-input',\n  templateUrl: './user-postal-postal-code-input.component.html',\n})\nexport class UserPostalPostalCodeInputComponent extends InputBase {}\n\n@Directive({\n  selector: '[bbUserPostalPostalCodeInputCustomizable]',\n})\nexport class UserPostalPostalCodeInputCustomizableDirective extends BbTemplate<\n  UserPostalPostalCodeInputComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserPostalPostalCodeInputErrorsCustomizable]',\n})\nexport class UserPostalPostalCodeInputErrorsCustomizableDirective extends BbTemplate<\n  UserPostalPostalCodeInputComponent,\n  undefined\n> {}\n","<ng-container bbUserPostalPostalCodeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalPostalCodeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--xs\"\n      data-role=\"user-manage-profile-postal-manage-post-code\"\n      i18n-label=\"Postal code label|Label for the postal code field@@bb-user-postal-postal-code-input.label\"\n      label=\"Postal or ZIP code\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"16\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalPostalCodeInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalPostalCodeInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Postal code required error|Error to say that postal postal code is a required field@@bb-user-postal-postal-code-input.errors.required\">\n      You must enter a value for Postal or ZIP code.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { UserModalBase } from './user-modal-base';\n\n@Component({\n  selector: 'bb-user-profile-form-delete-postal-address-modal',\n  templateUrl: './user-profile-form-delete-postal-address-modal.component.html',\n})\nexport class UserProfileFormDeletePostalAddressModalComponent extends UserModalBase {}\n\n@Directive({\n  selector: '[bbUserProfileFormDeletePostalAddressModalCustomizable]',\n})\nexport class UserProfileFormDeletePostalAddressModalCustomizableDirective extends BbTemplate<\n  UserProfileFormDeletePostalAddressModalComponent,\n  undefined\n> {}\n","<ng-container bbUserProfileFormDeletePostalAddressModalCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserProfileFormDeletePostalAddressModalCustomizable let-hostRef>\n  <bb-modal-ui data-role=\"user-manage-profile-delete-postal-modal\" [isOpen]=\"hostRef.isOpen\"\n    (cancel)=\"hostRef.dismissModal()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Delete postal address modal title|Title of the confirmation modal for deleting an postal address@@bb-user-profile-form-delete-postal-address-modal.title\"\n          heading=\"Delete address?\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody\n        i18n=\"Delete postal address modal body|Body text of the confirmation modal for deleting an postal address@@bb-user-profile-form-delete-postal-address-modal.body\">\n        Are you sure you want to delete this address? This action can not be undone\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-cancel-button\"\n          color=\"secondary\"\n          (click)=\"hostRef.dismissModal()\"\n          i18n=\"Dismiss delete postal address modal button|Text of the button that dismisses the delete an postal address modal@@bb-user-profile-form-delete-postal-address-modal.dismiss\">\n          Cancel\n        </button>\n        <button bbButton\n          data-role=\"user-manage-profile-delete-confirm-button\"\n          color=\"danger\"\n          (click)=\"hostRef.closeModal()\"\n          i18n=\"Confirm delete postal address modal button|Text of the button that confirms the delete an postal address modal@@bb-user-profile-form-delete-postal-address-modal.confirm\">\n          Delete address\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ManageProfilePostalAddressFormComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-postal-address-form',\n  templateUrl: './user-postal-address-form.component.html',\n})\nexport class UserPostalAddressFormComponent extends ManageProfilePostalAddressFormComponent {}\n\n@Directive({\n  selector: '[bbUserPostalAddressFormCustomizable]',\n})\nexport class UserPostalAddressFormCustomizableDirective extends BbTemplate<UserPostalAddressFormComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserPostalAddressFormErrorsCustomizable]',\n})\nexport class UserPostalAddressFormErrorsCustomizableDirective extends BbTemplate<\n  UserPostalAddressFormComponent,\n  undefined\n> {}\n","<ng-container bbUserPostalAddressFormCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalAddressFormCustomizable let-hostRef>\n  <form #postalAddressFormElement *ngIf=\"hostRef.form\" [formGroup]=\"hostRef.form\" (submit)=\"hostRef.handleSubmit()\">\n    <div class=\"bb-block bb-block--md\">\n      <bb-user-profile-form-errors [formGroup]=\"hostRef.form\" [hasBeenSubmittedWithErrors]=\"hostRef.showFormErrors && !hostRef.form.valid\">\n        <ng-container bbUserPostalAddressFormErrorsCustomizable [bbHostRef]=\"hostRef\">\n        </ng-container>\n      </bb-user-profile-form-errors>\n\n      <bb-user-postal-address-type-input\n        fieldName=\"type\"\n        [formGroup]=\"hostRef.form\"\n        [postalAddressTypes]=\"hostRef.types\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-address-type-input>\n\n      <bb-user-postal-building-number-input\n        fieldName=\"buildingNumber\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-building-number-input>\n\n      <bb-user-postal-street-name-input\n        fieldName=\"streetName\"\n        [formGroup]=\"hostRef.form\">\n      </bb-user-postal-street-name-input>\n\n      <bb-user-postal-town-name-input\n        fieldName=\"townName\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-town-name-input>\n\n      <bb-user-postal-country-sub-division-input\n        fieldName=\"countrySubDivision\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-country-sub-division-input>\n\n      <bb-user-postal-postal-code-input\n        fieldName=\"postalCode\"\n        [formGroup]=\"hostRef.form\"\n        [hasBeenSubmitted]=\"hostRef.hasBeenSubmitted\">\n      </bb-user-postal-postal-code-input>\n\n      <bb-user-primary-checkbox-input fieldName=\"primary\" type=\"postalAddress\" [formGroup]=\"hostRef.form\">\n      </bb-user-primary-checkbox-input>\n    </div>\n\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <bb-load-button-ui\n        data-role=\"user-manage-profile-postal-manage-save\"\n        type=\"submit\"\n        class=\"bb-button-bar__button\"\n        [isLoading]=\"hostRef.isSubmitting\"\n        [disabled]=\"hostRef.isSubmitting\"\n        i18n=\"Save postal address button|Text of the button that triggers saving of new postal address@@bb-user-postal-address-form.save-button\">\n        Save address\n      </bb-load-button-ui>\n      <button bbButton\n        data-role=\"user-manage-profile-manage-cancel-button\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        (click)=\"hostRef.handleCancelClick()\"\n        i18n=\"Cancel button|Text of the button that triggers cancellation of new postal address@@bb-user-postal-address-form.cancel-button\">\n        Cancel\n      </button>\n      <button bbButton\n        data-role=\"user-manage-profile-postal-delete-button\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        *ngIf=\"hostRef.showDeleteButton\"\n        color=\"link\"\n        (click)=\"hostRef.handleDelete()\">\n        <bb-icon-ui name=\"delete\"></bb-icon-ui>\n        <span i18n=\"Delete postal address button|Text for the button that allows the user to delete a postal address@@bb-user-postal-address-form.delete-button\">\n          Delete\n        </span>\n      </button>\n    </div>\n  </form>\n\n  <bb-user-profile-form-cancel-modal [isOpen]=\"hostRef.isCancelModalOpen\" (dismiss)=\"hostRef.dismissCancelModal()\"\n    (close)=\"hostRef.closeCancelModal()\">\n  </bb-user-profile-form-cancel-modal>\n\n  <bb-user-profile-form-delete-postal-address-modal [isOpen]=\"hostRef.isDeleteModalOpen\" (dismiss)=\"hostRef.dismissDeleteModal()\"\n    (close)=\"hostRef.closeDeleteModal()\">\n  </bb-user-profile-form-delete-postal-address-modal>\n</ng-template>\n\n<ng-template bbUserPostalAddressFormErrorsCustomizable let-hostRef>\n  <p *ngIf=\"hostRef.form.controls.type.errors?.required\">\n    <u i18n=\"Type required error|Error to say that type is a required field@@bb-user-postal-address-form.errors.type-required\">\n      You must enter a type.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.buildingNumber.errors?.required\">\n    <u i18n=\"Building number required error|Error to say that building number is a required field@@bb-user-postal-address-form.errors.building-number-required\">\n      You must enter a value for Address line 1.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.townName.errors?.required\">\n    <u i18n=\"Town name required error|Error to say that town name is a required field@@bb-user-postal-address-form.errors.town-name-required\">\n      You must enter a value for City or town.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.countrySubDivision.errors?.required\">\n    <u i18n=\"Country sub division required error|Error to say that country sub division is a required field@@bb-user-postal-address-form.errors.country-sub-division-required\">\n      You must enter a value for State, province or region.\n    </u>\n  </p>\n  <p *ngIf=\"hostRef.form.controls.postalCode.errors?.required\">\n    <u i18n=\"Postal code required error|Error to say that postal code is a required field@@bb-user-postal-address-form.errors.postal-code-required\">\n      You must enter a value for Postal or ZIP code.\n    </u>\n  </p>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { UserProfileFormErrorsComponent } from './user-profile-form-errors.component';\n\nconst uiModules = [AlertModule];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules],\n  declarations: [UserProfileFormErrorsComponent],\n  exports: [UserProfileFormErrorsComponent, ...uiModules],\n})\nexport class UserProfileFormErrorsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport {\n  UserPrimaryCheckboxInputComponent,\n  UserPrimaryCheckboxInputCustomizableDirective,\n} from './user-primary-checkbox-input.component';\n\nconst uiModules = [InputCheckboxModule];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, ...uiModules],\n  declarations: [UserPrimaryCheckboxInputComponent, UserPrimaryCheckboxInputCustomizableDirective],\n  exports: [UserPrimaryCheckboxInputComponent, UserPrimaryCheckboxInputCustomizableDirective, ...uiModules],\n})\nexport class UserProfileFormBaseInputsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputEmailModule } from '@backbase/ui-ang/input-email';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport {\n  UserEmailAddressInputComponent,\n  UserEmailAddressInputCustomizableDirective,\n  UserEmailAddressInputErrorsCustomizableDirective,\n} from './user-email-address-input.component';\nimport {\n  UserEmailAddressTypeErrorsCustomizableDirective,\n  UserEmailAddressTypeInputComponent,\n  UserEmailAddressTypeInputCustomizableDirective,\n} from './user-email-address-type-input.component';\n\nconst uiModules = [DropdownSingleSelectModule, InputEmailModule, InputValidationMessageModule];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, ...uiModules],\n  declarations: [\n    UserEmailAddressTypeInputComponent,\n    UserEmailAddressTypeInputCustomizableDirective,\n    UserEmailAddressTypeErrorsCustomizableDirective,\n    UserEmailAddressInputComponent,\n    UserEmailAddressInputCustomizableDirective,\n    UserEmailAddressInputErrorsCustomizableDirective,\n  ],\n  exports: [\n    UserEmailAddressTypeInputComponent,\n    UserEmailAddressTypeInputCustomizableDirective,\n    UserEmailAddressTypeErrorsCustomizableDirective,\n    UserEmailAddressInputComponent,\n    UserEmailAddressInputCustomizableDirective,\n    UserEmailAddressInputErrorsCustomizableDirective,\n    ...uiModules,\n  ],\n})\nexport class UserProfileFormEmailAddressInputsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputPhoneModule } from '@backbase/ui-ang/input-phone';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { PhoneNumberModule, PhoneNumberPipe } from '@backbase/ui-ang/phone-number-format-pipe';\nimport {\n  UserPhoneNumberInputComponent,\n  UserPhoneNumberInputCustomizableDirective,\n  UserPhoneNumberInputErrorsCustomizableDirective,\n} from './user-phone-number-input.component';\nimport {\n  UserPhoneNumberTypeErrorsCustomizableDirective,\n  UserPhoneNumberTypeInputComponent,\n  UserPhoneNumberTypeInputCustomizableDirective,\n} from './user-phone-number-type-input.component';\n\nconst uiModules = [DropdownSingleSelectModule, InputPhoneModule, InputValidationMessageModule, PhoneNumberModule];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, ...uiModules],\n  declarations: [\n    UserPhoneNumberTypeInputComponent,\n    UserPhoneNumberTypeInputCustomizableDirective,\n    UserPhoneNumberTypeErrorsCustomizableDirective,\n    UserPhoneNumberInputComponent,\n    UserPhoneNumberInputCustomizableDirective,\n    UserPhoneNumberInputErrorsCustomizableDirective,\n  ],\n  providers: [PhoneNumberPipe],\n  exports: [\n    UserPhoneNumberTypeInputComponent,\n    UserPhoneNumberTypeInputCustomizableDirective,\n    UserPhoneNumberTypeErrorsCustomizableDirective,\n    UserPhoneNumberInputComponent,\n    UserPhoneNumberInputCustomizableDirective,\n    UserPhoneNumberInputErrorsCustomizableDirective,\n    ...uiModules,\n  ],\n})\nexport class UserProfileFormPhoneNumberInputsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport {\n  UserPostalAddressTypeErrorsCustomizableDirective,\n  UserPostalAddressTypeInputComponent,\n  UserPostalAddressTypeInputCustomizableDirective,\n} from './user-postal-address-type-input.component';\nimport {\n  UserPostalBuildingNumberInputComponent,\n  UserPostalBuildingNumberInputCustomizableDirective,\n  UserPostalBuildingNumberInputErrorsCustomizableDirective,\n} from './user-postal-building-number-input.component';\nimport {\n  UserPostalCountrySubDivisionInputComponent,\n  UserPostalCountrySubDivisionInputCustomizableDirective,\n  UserPostalCountrySubDivisionInputErrorsCustomizableDirective,\n} from './user-postal-country-sub-division-input.component';\nimport {\n  UserPostalPostalCodeInputComponent,\n  UserPostalPostalCodeInputCustomizableDirective,\n  UserPostalPostalCodeInputErrorsCustomizableDirective,\n} from './user-postal-postal-code-input.component';\nimport {\n  UserPostalStreetNameInputComponent,\n  UserPostalStreetNameInputCustomizableDirective,\n  UserPostalStreetNameInputErrorsCustomizableDirective,\n} from './user-postal-street-name-input.component';\nimport {\n  UserPostalTownNameInputComponent,\n  UserPostalTownNameInputCustomizableDirective,\n  UserPostalTownNameInputErrorsCustomizableDirective,\n} from './user-postal-town-name-input.component';\n\nconst uiModules = [DropdownSingleSelectModule, InputTextModule, InputValidationMessageModule];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, ...uiModules],\n  declarations: [\n    UserPostalAddressTypeInputComponent,\n    UserPostalAddressTypeInputCustomizableDirective,\n    UserPostalAddressTypeErrorsCustomizableDirective,\n    UserPostalBuildingNumberInputComponent,\n    UserPostalBuildingNumberInputCustomizableDirective,\n    UserPostalBuildingNumberInputErrorsCustomizableDirective,\n    UserPostalCountrySubDivisionInputComponent,\n    UserPostalCountrySubDivisionInputCustomizableDirective,\n    UserPostalCountrySubDivisionInputErrorsCustomizableDirective,\n    UserPostalPostalCodeInputComponent,\n    UserPostalPostalCodeInputCustomizableDirective,\n    UserPostalPostalCodeInputErrorsCustomizableDirective,\n    UserPostalStreetNameInputComponent,\n    UserPostalStreetNameInputCustomizableDirective,\n    UserPostalStreetNameInputErrorsCustomizableDirective,\n    UserPostalTownNameInputComponent,\n    UserPostalTownNameInputCustomizableDirective,\n    UserPostalTownNameInputErrorsCustomizableDirective,\n  ],\n  exports: [\n    UserPostalAddressTypeInputComponent,\n    UserPostalAddressTypeInputCustomizableDirective,\n    UserPostalAddressTypeErrorsCustomizableDirective,\n    UserPostalBuildingNumberInputComponent,\n    UserPostalBuildingNumberInputCustomizableDirective,\n    UserPostalBuildingNumberInputErrorsCustomizableDirective,\n    UserPostalCountrySubDivisionInputComponent,\n    UserPostalCountrySubDivisionInputCustomizableDirective,\n    UserPostalCountrySubDivisionInputErrorsCustomizableDirective,\n    UserPostalPostalCodeInputComponent,\n    UserPostalPostalCodeInputCustomizableDirective,\n    UserPostalPostalCodeInputErrorsCustomizableDirective,\n    UserPostalStreetNameInputComponent,\n    UserPostalStreetNameInputCustomizableDirective,\n    UserPostalStreetNameInputErrorsCustomizableDirective,\n    UserPostalTownNameInputComponent,\n    UserPostalTownNameInputCustomizableDirective,\n    UserPostalTownNameInputErrorsCustomizableDirective,\n    ...uiModules,\n  ],\n})\nexport class UserProfileFormPostalAddressInputsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UserModalBase } from './user-modal-base';\nimport {\n  UserProfileFormCancelModalComponent,\n  UserProfileFormCancelModalCustomizableDirective,\n} from './user-profile-form-cancel-modal.component';\nimport {\n  UserProfileFormDeleteEmailAddressModalComponent,\n  UserProfileFormDeleteEmailAddressModalCustomizableDirective,\n} from './user-profile-form-delete-email-address-modal.component';\nimport {\n  UserProfileFormDeletePhoneAddressModalComponent,\n  UserProfileFormDeletePhoneAddressModalCustomizableDirective,\n} from './user-profile-form-delete-phone-address-modal.component';\nimport {\n  UserProfileFormDeletePostalAddressModalComponent,\n  UserProfileFormDeletePostalAddressModalCustomizableDirective,\n} from './user-profile-form-delete-postal-address-modal.component';\n\nconst uiModules = [ModalModule, ButtonModule, HeaderModule];\nconst components = [\n  UserModalBase,\n  UserProfileFormCancelModalComponent,\n  UserProfileFormCancelModalCustomizableDirective,\n  UserProfileFormDeleteEmailAddressModalComponent,\n  UserProfileFormDeleteEmailAddressModalCustomizableDirective,\n  UserProfileFormDeletePhoneAddressModalComponent,\n  UserProfileFormDeletePhoneAddressModalCustomizableDirective,\n  UserProfileFormDeletePostalAddressModalComponent,\n  UserProfileFormDeletePostalAddressModalCustomizableDirective,\n];\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, NgbModalModule, ...uiModules],\n  declarations: [...components],\n  exports: [...components, ...uiModules],\n})\nexport class UserProfileFormModalsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport {\n  UserEmailAddressFormComponent,\n  UserEmailAddressFormCustomizableDirective,\n  UserEmailAddressFormErrorsCustomizableDirective,\n} from './user-email-address-form.component';\nimport {\n  UserPhoneNumberFormComponent,\n  UserPhoneNumberFormCustomizableDirective,\n  UserPhoneNumberFormErrorsCustomizableDirective,\n} from './user-phone-number-form.component';\nimport {\n  UserPostalAddressFormComponent,\n  UserPostalAddressFormCustomizableDirective,\n  UserPostalAddressFormErrorsCustomizableDirective,\n} from './user-postal-address-form.component';\nimport { UserProfileFormErrorsModule } from './user-profile-form-errors/user-profile-form-errors.module';\nimport { UserProfileFormBaseInputsModule } from './user-profile-form-inputs/base-inputs/user-profile-form-base-inputs.module';\nimport { UserProfileFormEmailAddressInputsModule } from './user-profile-form-inputs/email-address-inputs/user-profile-form-email-address-inputs.module';\nimport { UserProfileFormPhoneNumberInputsModule } from './user-profile-form-inputs/phone-number-inputs/user-profile-form-phone-number-inputs.module';\nimport { UserProfileFormPostalAddressInputsModule } from './user-profile-form-inputs/postal-address-inputs/user-profile-form-postal-address-inputs.module';\nimport { UserProfileFormModalsModule } from './user-profile-form-modals/user-profile-form-modals.module';\n\nconst uiModules = [ButtonModule, LoadButtonModule, IconModule, ReactiveFormsModule];\nconst componentModules = [\n  UserProfileFormBaseInputsModule,\n  UserProfileFormEmailAddressInputsModule,\n  UserProfileFormPhoneNumberInputsModule,\n  UserProfileFormPostalAddressInputsModule,\n  UserProfileFormErrorsModule,\n  UserProfileFormModalsModule,\n];\n\n@NgModule({\n  imports: [CommonModule, ...componentModules, ...uiModules],\n  declarations: [\n    UserEmailAddressFormComponent,\n    UserEmailAddressFormCustomizableDirective,\n    UserEmailAddressFormErrorsCustomizableDirective,\n    UserPhoneNumberFormComponent,\n    UserPhoneNumberFormCustomizableDirective,\n    UserPhoneNumberFormErrorsCustomizableDirective,\n    UserPostalAddressFormComponent,\n    UserPostalAddressFormCustomizableDirective,\n    UserPostalAddressFormErrorsCustomizableDirective,\n  ],\n  exports: [\n    UserEmailAddressFormComponent,\n    UserEmailAddressFormCustomizableDirective,\n    UserEmailAddressFormErrorsCustomizableDirective,\n    UserPhoneNumberFormComponent,\n    UserPhoneNumberFormCustomizableDirective,\n    UserPhoneNumberFormErrorsCustomizableDirective,\n    UserPostalAddressFormComponent,\n    UserPostalAddressFormCustomizableDirective,\n    UserPostalAddressFormErrorsCustomizableDirective,\n    ...uiModules,\n    ...componentModules,\n  ],\n})\nexport class UserProfileFormsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { UserProfileFormsModule } from '../user-profile-forms/user-profile-forms.module';\nimport {\n  UserEditEmailAddressComponent,\n  UserEditEmailAddressCustomizableDirective,\n  UserEditEmailAddressTitleCustomizableDirective,\n} from './user-edit-email-address/user-edit-email-address.component';\nimport {\n  UserManageEmailAddressComponent,\n  UserManageEmailAddressCustomizableDirective,\n} from './user-manage-email-address.component';\nimport {\n  UserManageEmailAddressesComponent,\n  UserManageEmailAddressesCustomizableDirective,\n  UserManageEmailAddressesTitleCustomizableDirective,\n} from './user-manage-email-addresses.component';\nimport {\n  UserNewEmailAddressComponent,\n  UserNewEmailAddressCustomizableDirective,\n  UserNewEmailAddressTitleCustomizableDirective,\n} from './user-new-email-address/user-new-email-address.component';\n\nconst uiModules = [ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule];\nconst componentModules = [UserProfileFormsModule];\n\n@NgModule({\n  imports: [CommonModule, ...componentModules, ...uiModules],\n  declarations: [\n    UserManageEmailAddressComponent,\n    UserManageEmailAddressCustomizableDirective,\n    UserManageEmailAddressesComponent,\n    UserManageEmailAddressesCustomizableDirective,\n    UserManageEmailAddressesTitleCustomizableDirective,\n    UserManageEmailAddressesComponent,\n    UserNewEmailAddressComponent,\n    UserNewEmailAddressCustomizableDirective,\n    UserNewEmailAddressTitleCustomizableDirective,\n    UserEditEmailAddressComponent,\n    UserEditEmailAddressCustomizableDirective,\n    UserEditEmailAddressTitleCustomizableDirective,\n  ],\n  exports: [\n    UserManageEmailAddressComponent,\n    UserManageEmailAddressCustomizableDirective,\n    UserManageEmailAddressesComponent,\n    UserManageEmailAddressesCustomizableDirective,\n    UserManageEmailAddressesTitleCustomizableDirective,\n    UserManageEmailAddressesComponent,\n    UserNewEmailAddressComponent,\n    UserNewEmailAddressCustomizableDirective,\n    UserNewEmailAddressTitleCustomizableDirective,\n    UserEditEmailAddressComponent,\n    UserEditEmailAddressCustomizableDirective,\n    UserEditEmailAddressTitleCustomizableDirective,\n    ...uiModules,\n    ...componentModules,\n  ],\n})\nexport class UserManageEmailAddressesModule {}\n","import { HttpResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { CountryCode } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { EditPhoneNumberComponent, ManageProfilePreferencesService } from '@backbase/user-common';\nimport { ConnectableObservable } from 'rxjs';\nimport { GetPhoneAddress } from '../../types/user-types';\nimport { UserManageProfileService } from '../../user-manage-profile.service';\n\n@Component({\n  selector: 'bb-user-edit-phone-number',\n  templateUrl: './user-edit-phone-number.component.html',\n})\nexport class UserEditPhoneNumberComponent extends EditPhoneNumberComponent {\n  @Input() phoneNumberCountryCode: CountryCode | undefined;\n  @Input() phoneNumberDebounceTime: number | undefined;\n  @Input() enablePhoneNumberFormatter: boolean | undefined;\n\n  constructor(\n    private readonly manageProfileService: UserManageProfileService,\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {\n    super(manageProfilePreferencesService, cd, notificationService);\n  }\n\n  handleSaveClick(phoneNumberData: GetPhoneAddress) {\n    this.isSubmitting = true;\n    (\n      this.manageProfileService\n        .updatePhoneAddressRecord(phoneNumberData)\n        .pipe(this.handleUpdateResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n\n  handleDeleteClick(phoneNumberData: GetPhoneAddress) {\n    this.isSubmitting = true;\n    (\n      this.manageProfileService\n        .deletePhoneAddressRecord(phoneNumberData)\n        .pipe(this.handleDeleteResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n}\n\n@Directive({\n  selector: '[bbUserEditPhoneNumberCustomizable]',\n})\nexport class UserEditPhoneNumberCustomizableDirective extends BbTemplate<UserEditPhoneNumberComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserEditPhoneNumberTitleCustomizable]',\n})\nexport class UserEditPhoneNumberTitleCustomizableDirective extends BbTemplate<\n  UserEditPhoneNumberComponent,\n  undefined\n> {}\n","<ng-container bbUserEditPhoneNumberCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEditPhoneNumberCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-phone-edit-container\">\n    <ng-container bbUserEditPhoneNumberTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-phone-number-form\n      [data]=\"hostRef.phoneNumberData\"\n      [count]=\"hostRef.phoneNumberCount\"\n      [types]=\"hostRef.phoneNumberTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n      [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n      [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\"\n      (delete)=\"hostRef.handleDeleteClick($event)\">\n    </bb-user-phone-number-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserEditPhoneNumberTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"Edit phone number title|Text for the title of the edit phone number card@@bb-user-edit-phone-number.title\"\n      heading=\"Edit phone number\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationUpdateSuccess>\n  <span data-role=\"user-manage-profile-phone-edit-success-notification\" i18n=\"Phone number update notification|Notification text for when the phone number is updated@@bb-user-edit-phone-number.notification.update-success\">\n    Changes saved successfully\n  </span>\n</ng-template>\n\n<ng-template #notificationDeleteSuccess>\n  <span data-role=\"user-manage-profile-delete-phone-success-notification\" i18n=\"Phone number delete notification|Notification text for when the phone number is deleted@@bb-user-edit-phone-number.notification.delete-success\">\n    Phone number successfully deleted\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Phone number action failed notification|Notification text for when the phone number action failed@@bb-user-edit-phone-number.notification.failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CountryCode } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { ManagePhoneNumberComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-manage-phone-number',\n  templateUrl: './user-manage-phone-number.component.html',\n})\nexport class UserManagePhoneNumberComponent extends ManagePhoneNumberComponent {\n  @Input() phoneNumberCountryCode: CountryCode | undefined;\n  @Input() phoneNumberDebounceTime: number | undefined;\n  @Input() enablePhoneNumberFormatter: boolean | undefined;\n}\n\n@Directive({\n  selector: '[bbUserManagePhoneNumberCustomizable]',\n})\nexport class UserManagePhoneNumberCustomizableDirective extends BbTemplate<UserManagePhoneNumberComponent, undefined> {}\n","<ng-container bbUserManagePhoneNumberCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManagePhoneNumberCustomizable let-hostRef>\n  <div *ngIf=\"hostRef.phoneNumber && !hostRef.managingPhoneNumber\"\n    class=\"bb-stack\"\n    data-role=\"user-manage-profile-phone-item\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-stack bb-stack--wrap\">\n        <strong class=\"bb-stack__item\">{{hostRef.phoneNumber.type}}</strong>\n        <bb-badge-ui\n          class=\"bb-stack__item\"\n          *ngIf=\"hostRef.phoneNumber.primary\"\n          color=\"success\"\n          i18n-text=\"Primary phone number text|Text for the primary phone number badge@@bb-user-manage-phone-number.primary\"\n          text=\"Primary\">\n        </bb-badge-ui>\n        <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-right bb-text-align-left--sm-down break-word\">\n          <ng-container *ngIf=\"hostRef.enablePhoneNumberFormatter !== false; then chooseTemplate else defaultPhoneNumber\"></ng-container>\n          \n          <ng-template #chooseTemplate>\n            <ng-container *ngIf=\"hostRef.enablePhoneNumberFormatter; then inputTemplate else preferencesTemplate\"></ng-container>\n          </ng-template>\n          \n          <ng-template #inputTemplate>\n            <ng-container *ngIf=\"hostRef.enablePhoneNumberFormatter; else defaultPhoneNumber\">\n              {{ hostRef.phoneNumber.number | phoneNumber: hostRef.phoneNumberCountryCode }}\n            </ng-container>\n          </ng-template>\n          \n          <ng-template #preferencesTemplate>\n            <div *ngIf=\"hostRef.phoneNumberPreferences | async; let preferences\">\n              <ng-container *ngIf=\"preferences.enablePhoneNumberFormatter; else defaultPhoneNumber\">\n                {{ hostRef.phoneNumber.number | phoneNumber: preferences.countryCode }}\n              </ng-container>\n            </div>\n          </ng-template>\n\n          <ng-template #defaultPhoneNumber>\n            {{ hostRef.phoneNumber.number }}\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-stack__item\">\n      <button bbButton\n        data-role=\"user-manage-profile-manage-button\"\n        color=\"link\"\n        [disabled]=\"hostRef.disableManage\"\n        (click)=\"hostRef.handleManagePhoneNumber()\"\n        i18n=\"Manage phone number button|Text for the button that allows the user to manage a phone number@@bb-user-manage-phone-number.manage-phone-number-button\"\n        attr.aria-label=\"Manage {{hostRef.phoneNumber.primary ? 'primary ' : ''}}{{hostRef.phoneNumber.type}} phone number, {{hostRef.phoneNumber.number}}\"\n        i18n-attr.aria-label=\"Manage phone number button aria label@@bb-user-manage-phone-number.manage-phone-number-button.aria-label\">\n        Manage\n      </button>\n    </div>\n  </div>\n\n  <bb-user-edit-phone-number *ngIf=\"hostRef.managingPhoneNumber\"\n    (close)=\"hostRef.handleCloseEditPhoneNumber()\"\n    (closeAfterSave)=\"hostRef.handleCloseEditPhoneNumberAfterSave()\"\n    [phoneNumberTypes]=\"hostRef.phoneNumberTypes\"\n    [phoneNumberData]=\"hostRef.phoneNumber\"\n    [phoneNumberCount]=\"hostRef.phoneNumberCount\"\n    [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n    [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n    [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n    [notificationDismissTime]=\"hostRef.dismissTimeout\">\n  </bb-user-edit-phone-number>\n</ng-template>\n","import { HttpResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { CountryCode } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { ManageProfilePreferencesService, NewPhoneNumberComponent } from '@backbase/user-common';\nimport { ConnectableObservable } from 'rxjs';\nimport { PhoneAddress } from '../../types/user-types';\nimport { UserManageProfileService } from '../../user-manage-profile.service';\n\n@Component({\n  selector: 'bb-user-new-phone-number',\n  templateUrl: './user-new-phone-number.component.html',\n})\nexport class UserNewPhoneNumberComponent extends NewPhoneNumberComponent {\n  @Input() phoneNumberCountryCode: CountryCode | undefined;\n  @Input() phoneNumberDebounceTime: number | undefined;\n  @Input() enablePhoneNumberFormatter: boolean | undefined;\n\n  constructor(\n    private readonly manageProfileService: UserManageProfileService,\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {\n    super(manageProfilePreferencesService, cd, notificationService);\n  }\n\n  handleSaveClick(phoneAddress: PhoneAddress) {\n    this.isSubmitting = true;\n    (\n      this.manageProfileService\n        .createPhoneAddressRecord(phoneAddress)\n        .pipe(this.handleServiceResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n}\n\n@Directive({\n  selector: '[bbUserNewPhoneNumberCustomizable]',\n})\nexport class UserNewPhoneNumberCustomizableDirective extends BbTemplate<UserNewPhoneNumberComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserNewPhoneNumberTitleCustomizable]',\n})\nexport class UserNewPhoneNumberTitleCustomizableDirective extends BbTemplate<UserNewPhoneNumberComponent, undefined> {}\n","<ng-container bbUserNewPhoneNumberCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserNewPhoneNumberCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-phone-add-container\">\n    <ng-container bbUserNewPhoneNumberTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-phone-number-form\n      [data]=\"hostRef.newPhoneNumberData\"\n      [types]=\"hostRef.phoneNumberTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n      [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n      [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\">\n    </bb-user-phone-number-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserNewPhoneNumberTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"New phone number title|Text for the title of the new phone number card@@bb-user-new-phone-number.title\"\n      heading=\"Add phone number\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span data-role=\"user-manage-profile-phone-add-success-notification\" i18n=\"Phone Number creation notification|Notification text for when the phone number is created@@bb-user-new-phone-number.notification.creation-success\">\n    Phone number successfully added\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Phone Number creation failed notification|Notification text for when the phone number failed to create@@bb-user-new-phone-number.notification.creation-failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CountryCode } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { ManagePhoneNumbersComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-manage-phone-numbers',\n  templateUrl: './user-manage-phone-numbers.component.html',\n})\nexport class UserManagePhoneNumbersComponent extends ManagePhoneNumbersComponent {\n  @Input() phoneNumberCountryCode: CountryCode | undefined;\n  @Input() phoneNumberDebounceTime: number | undefined;\n  @Input() enablePhoneNumberFormatter: boolean | undefined;\n}\n\n@Directive({\n  selector: '[bbUserManagePhoneNumbersCustomizable]',\n})\nexport class UserManagePhoneNumbersCustomizableDirective extends BbTemplate<\n  UserManagePhoneNumbersComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserManagePhoneNumbersTitleCustomizable]',\n})\nexport class UserManagePhoneNumbersTitleCustomizableDirective extends BbTemplate<\n  UserManagePhoneNumbersComponent,\n  undefined\n> {}\n","<ng-container bbUserManagePhoneNumbersCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManagePhoneNumbersCustomizable let-hostRef>\n  <div class=\"card card-lg\">\n    <ng-container bbUserManagePhoneNumbersTitleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n    <ng-container *ngIf=\"hostRef.phoneNumbers && hostRef.phoneNumbers.length; else emptyState\">\n      <div *ngFor=\"let phoneNumberDetails of hostRef.phoneNumbers | slice:0:maxPhoneNumbers; index as i\"\n        class=\"card-section {{ hostRef.isManagingPhoneNumberIndex === i ? 'card-section--highlight' : '' }}\">\n        <bb-user-manage-phone-number\n          [phoneNumber]=\"phoneNumberDetails\"\n          [phoneNumberCount]=\"hostRef.phoneNumbers.length\"\n          [disableManage]=\"hostRef.disableManage\"\n          [phoneNumberTypes]=\"hostRef.phoneNumberTypes\"\n          (updateProfile)=\"hostRef.updateUserProfileData()\"\n          (managePhoneNumber)=\"hostRef.handleManagePhoneNumberOpen(i)\"\n          (cancelManagePhoneNumber)=\"hostRef.handleManagePhoneNumberClosed()\"\n          [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n          [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n          [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n          [dismissTimeout]=\"hostRef.dismissTimeout\">\n        </bb-user-manage-phone-number>\n      </div>\n    </ng-container>\n\n    <ng-template #emptyState>\n      <div class=\"card-section\">\n        <bb-empty-state-ui\n          data-role=\"user-manage-profile-phone-empty-state\"\n          [showIcon]=\"false\"\n          i18n-title=\"Phone numbers not found text|Text for no phone numbers found@@bb-user-manage-phone-numbers.none-found\"\n          title=\"No phone numbers\">\n        </bb-empty-state-ui>\n      </div>\n    </ng-template>\n\n    <div class=\"card-section card-section--highlight\" *ngIf=\"hostRef.isAddingPhoneNumber\">\n      <bb-user-new-phone-number\n        (close)=\"hostRef.handleManagePhoneNumberClosed()\"\n        (closeAfterSave)=\"hostRef.updateUserProfileData()\"\n        [phoneNumberTypes]=\"hostRef.phoneNumberTypes\"\n        [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode\"\n        [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime\"\n        [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter\"\n        [notificationDismissTime]=\"hostRef.dismissTimeout\">\n      </bb-user-new-phone-number>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.isAddButtonAvailable && !hostRef.isAddingPhoneNumber\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button bbButton\n          data-role=\"user-manage-profile-phone-add-button\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          [disabled]=\"hostRef.disableManage\"\n          (click)=\"hostRef.handleAddNewPhoneNumber()\">\n          <bb-icon-ui name=\"create-payment\"></bb-icon-ui>\n          <span i18n=\"Add phone number button|Text for the button that allows the user to add a new phone number@@bb-user-manage-phone-numbers.add-phone-number-button\">\n            Add Phone Number\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbUserManagePhoneNumbersTitleCustomizable let-hostRef>\n  <bb-header-ui\n    headingType=\"h3\"\n    class=\"card-header\"\n    i18n-heading=\"Phone numbers section title|Title text for the phone numbers management section@@bb-user-manage-phone-numbers.title\"\n    heading=\"Phone numbers\">\n  </bb-header-ui>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { PhoneNumberModule } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { UserProfileFormsModule } from '../user-profile-forms/user-profile-forms.module';\nimport {\n  UserEditPhoneNumberComponent,\n  UserEditPhoneNumberCustomizableDirective,\n  UserEditPhoneNumberTitleCustomizableDirective,\n} from './user-edit-phone-number/user-edit-phone-number.component';\nimport {\n  UserManagePhoneNumberComponent,\n  UserManagePhoneNumberCustomizableDirective,\n} from './user-manage-phone-number.component';\nimport {\n  UserManagePhoneNumbersComponent,\n  UserManagePhoneNumbersCustomizableDirective,\n  UserManagePhoneNumbersTitleCustomizableDirective,\n} from './user-manage-phone-numbers.component';\nimport {\n  UserNewPhoneNumberComponent,\n  UserNewPhoneNumberCustomizableDirective,\n  UserNewPhoneNumberTitleCustomizableDirective,\n} from './user-new-phone-number/user-new-phone-number.component';\n\nconst uiModules = [\n  ButtonModule,\n  EmptyStateModule,\n  BadgeModule,\n  IconModule,\n  NotificationModule,\n  PhoneNumberModule,\n  HeaderModule,\n];\nconst componentModules = [UserProfileFormsModule];\n\n@NgModule({\n  imports: [CommonModule, ...componentModules, ...uiModules],\n  declarations: [\n    UserManagePhoneNumberComponent,\n    UserManagePhoneNumberCustomizableDirective,\n    UserManagePhoneNumbersComponent,\n    UserManagePhoneNumbersCustomizableDirective,\n    UserManagePhoneNumbersTitleCustomizableDirective,\n    UserNewPhoneNumberComponent,\n    UserNewPhoneNumberCustomizableDirective,\n    UserNewPhoneNumberTitleCustomizableDirective,\n    UserEditPhoneNumberComponent,\n    UserEditPhoneNumberCustomizableDirective,\n    UserEditPhoneNumberTitleCustomizableDirective,\n  ],\n  exports: [\n    UserManagePhoneNumberComponent,\n    UserManagePhoneNumberCustomizableDirective,\n    UserManagePhoneNumbersComponent,\n    UserManagePhoneNumbersCustomizableDirective,\n    UserManagePhoneNumbersTitleCustomizableDirective,\n    UserNewPhoneNumberComponent,\n    UserNewPhoneNumberCustomizableDirective,\n    UserNewPhoneNumberTitleCustomizableDirective,\n    UserEditPhoneNumberComponent,\n    UserEditPhoneNumberCustomizableDirective,\n    UserEditPhoneNumberTitleCustomizableDirective,\n    ...uiModules,\n    ...componentModules,\n  ],\n})\nexport class UserManagePhoneNumbersModule {}\n","import { HttpResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { EditPostalAddressComponent, ManageProfilePreferencesService } from '@backbase/user-common';\nimport { ConnectableObservable } from 'rxjs';\nimport { GetPostalAddress } from '../../types/user-types';\nimport { UserManageProfileService } from '../../user-manage-profile.service';\n\n@Component({\n  selector: 'bb-user-edit-postal-address',\n  templateUrl: './user-edit-postal-address.component.html',\n})\nexport class UserEditPostalAddressComponent extends EditPostalAddressComponent {\n  constructor(\n    private readonly userManageProfileService: UserManageProfileService,\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {\n    super(manageProfilePreferencesService, cd, notificationService);\n  }\n\n  handleSaveClick(postalAddressData: GetPostalAddress) {\n    this.isSubmitting = true;\n    (\n      this.userManageProfileService\n        .updatePostalAddressRecord({ ...this.postalAddressData, ...postalAddressData })\n        .pipe(this.handleUpdateResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n\n  handleDeleteClick(postalAddressData: GetPostalAddress) {\n    this.isSubmitting = true;\n    (\n      this.userManageProfileService\n        .deletePostalAddressRecord(postalAddressData)\n        .pipe(this.handleDeleteResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n}\n\n@Directive({\n  selector: '[bbUserEditPostalAddressCustomizable]',\n})\nexport class UserEditPostalAddressCustomizableDirective extends BbTemplate<UserEditPostalAddressComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserEditPostalAddressTitleCustomizable]',\n})\nexport class UserEditPostalAddressTitleCustomizableDirective extends BbTemplate<\n  UserEditPostalAddressComponent,\n  undefined\n> {}\n","<ng-container bbUserEditPostalAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEditPostalAddressCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-postal-edit-container\">\n    <ng-container bbUserEditPostalAddressTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-postal-address-form\n      [data]=\"hostRef.postalAddressData\"\n      [count]=\"hostRef.postalAddressCount\"\n      [types]=\"hostRef.postalAddressTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\"\n      (delete)=\"hostRef.handleDeleteClick($event)\">\n    </bb-user-postal-address-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserEditPostalAddressTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"Edit postal address title|Text for the title of the edit postal address card@@bb-user-edit-postal-address.title\"\n      heading=\"Edit address\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationUpdateSuccess>\n  <span data-role=\"user-manage-profile-postal-edit-success-notification\" i18n=\"Postal address update notification|Notification text for when the postal address is updated@@bb-user-edit-postal-address.notification.update-success\">\n    Changes saved successfully\n  </span>\n</ng-template>\n\n<ng-template #notificationDeleteSuccess>\n  <span data-role=\"user-manage-profile-delete-postal-success-notification\" i18n=\"Postal address delete notification|Notification text for when the postal address is deleted@@bb-user-edit-postal-address.notification.delete-success\">\n    Address successfully deleted\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Postal address action failed notification|Notification text for when the postal address action failed@@bb-user-edit-postal-address.notification.failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ManagePostalAddressComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-manage-postal-address',\n  templateUrl: './user-manage-postal-address.component.html',\n})\nexport class UserManagePostalAddressComponent extends ManagePostalAddressComponent {}\n\n@Directive({\n  selector: '[bbUserManagePostalAddressCustomizable]',\n})\nexport class UserManagePostalAddressCustomizableDirective extends BbTemplate<\n  UserManagePostalAddressComponent,\n  undefined\n> {}\n","<ng-container bbUserManagePostalAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManagePostalAddressCustomizable let-hostRef>\n  <div *ngIf=\"hostRef.postalAddress && !hostRef.managingPostalAddress\"\n    class=\"bb-stack\"\n    data-role=\"user-manage-profile-postal-item\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-stack bb-stack--align-top bb-stack--wrap\">\n        <strong class=\"bb-stack__item\">{{hostRef.postalAddress.type}}</strong>\n        <bb-badge-ui\n          class=\"bb-stack__item\"\n          *ngIf=\"hostRef.postalAddress.primary\"\n          color=\"success\"\n          i18n-text=\"Primary address text|Text for the primary address badge@@bb-user-manage-address.primary\"\n          text=\"Primary\">\n        </bb-badge-ui>\n        <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n        <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-right bb-text-align-left--sm-down break-word\">\n          <address class=\"bb-block bb-block--no-margin\">\n            <div *ngIf=\"hostRef.postalAddress.department\">{{hostRef.postalAddress.department}}</div>\n            <div *ngIf=\"hostRef.postalAddress.subDepartment\">{{hostRef.postalAddress.subDepartment}}</div>\n            <div *ngIf=\"hostRef.postalAddress.addressLine\">{{hostRef.postalAddress.addressLine}}</div>\n            <div *ngIf=\"hostRef.postalAddress.buildingNumber\">{{hostRef.postalAddress.buildingNumber}}</div>\n            <div *ngIf=\"hostRef.postalAddress.streetName\">{{hostRef.postalAddress.streetName}}</div>\n            <div *ngIf=\"hostRef.postalAddress.townName\">{{hostRef.postalAddress.townName}}</div>\n            <div *ngIf=\"hostRef.postalAddress.countrySubDivision\">{{hostRef.postalAddress.countrySubDivision}}</div>\n            <div *ngIf=\"hostRef.postalAddress.postalCode\">{{hostRef.postalAddress.postalCode}}</div>\n            <div *ngIf=\"hostRef.postalAddress.country\">{{hostRef.postalAddress.country}}</div>\n          </address>\n        </div>\n      </div>\n    </div>\n    <div class=\"bb-stack__item\">\n      <button bbButton\n        data-role=\"user-manage-profile-manage-button\"\n        color=\"link\"\n        [disabled]=\"hostRef.disableManage\"\n        (click)=\"hostRef.handleManagePostalAddress()\"\n        i18n=\"Manage postal address button|Text for the button that allows the user to manage a postal address@@bb-user-manage-postal-address.manage-postal-address-button\"\n        attr.aria-label=\"Manage {{hostRef.postalAddress.primary ? 'primary ' : ''}}{{hostRef.postalAddress.type}} postal address, {{hostRef.postalAddress.buildingNumber}}\"\n        i18n-attr.aria-label=\"Manage postal address button aria label@@bb-user-manage-postal-address.manage-postal-address-button.aria-label\">\n        Manage\n      </button>\n    </div>\n  </div>\n\n  <bb-user-edit-postal-address *ngIf=\"hostRef.managingPostalAddress\"\n    (close)=\"hostRef.handleCloseEditPostalAddress()\"\n    (closeAfterSave)=\"hostRef.handleCloseEditPostalAddressAfterSave()\"\n    [postalAddressTypes]=\"hostRef.postalAddressTypes\"\n    [postalAddressData]=\"hostRef.postalAddress\"\n    [postalAddressCount]=\"hostRef.postalAddressCount\"\n    [notificationDismissTime]=\"hostRef.dismissTimeout\">\n  </bb-user-edit-postal-address>\n</ng-template>\n","import { HttpResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { ManageProfilePreferencesService, NewPostalAddressComponent } from '@backbase/user-common';\nimport { ConnectableObservable } from 'rxjs';\nimport { PostalAddress } from '../../types/user-types';\nimport { UserManageProfileService } from '../../user-manage-profile.service';\n\n@Component({\n  selector: 'bb-user-new-postal-address',\n  templateUrl: './user-new-postal-address.component.html',\n})\nexport class UserNewPostalAddressComponent extends NewPostalAddressComponent {\n  constructor(\n    private readonly manageProfileService: UserManageProfileService,\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n    protected readonly notificationService: NotificationService,\n  ) {\n    super(manageProfilePreferencesService, cd, notificationService);\n  }\n\n  handleSaveClick(postalAddressData: PostalAddress) {\n    this.isSubmitting = true;\n    (\n      this.manageProfileService\n        .createPostalAddressRecord(postalAddressData)\n        .pipe(this.handleServiceResponse()) as ConnectableObservable<HttpResponse<undefined>>\n    ).connect();\n  }\n}\n\n@Directive({\n  selector: '[bbUserNewPostalAddressCustomizable]',\n})\nexport class UserNewPostalAddressCustomizableDirective extends BbTemplate<UserNewPostalAddressComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserNewPostalAddressTitleCustomizable]',\n})\nexport class UserNewPostalAddressTitleCustomizableDirective extends BbTemplate<\n  UserNewPostalAddressComponent,\n  undefined\n> {}\n","<ng-container bbUserNewPostalAddressCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserNewPostalAddressCustomizable let-hostRef>\n  <div data-role=\"user-manage-profile-postal-add-container\">\n    <ng-container bbUserNewPostalAddressTitleCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n    <bb-user-postal-address-form\n      [data]=\"hostRef.newPostalAddressData\"\n      [types]=\"hostRef.postalAddressTypes\"\n      [isSubmitting]=\"hostRef.isSubmitting\"\n      (cancel)=\"hostRef.handleCancelClick()\"\n      (save)=\"hostRef.handleSaveClick($event)\">\n    </bb-user-postal-address-form>\n  </div>\n</ng-template>\n\n<ng-template bbUserNewPostalAddressTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h4\"\n      i18n-heading=\"New postal address title|Text for the title of the new postal address card@@bb-user-new-postal-address.title\"\n      heading=\"Add address\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span data-role=\"user-manage-profile-postal-add-success-notification\" i18n=\"Postal Address creation notification|Notification text for when the postal address is created@@bb-user-new-postal-address.notification.creation-success\">\n    Address successfully added\n  </span>\n</ng-template>\n\n<ng-template #notificationFailure>\n  <span i18n=\"Postal Address creation failed notification|Notification text for when the postal address failed to create@@bb-user-new-postal-address.notification.creation-failed\">\n    Something went wrong. Please try again or contact support if the issue persists\n  </span>\n</ng-template>\n","import { Component, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ManagePostalAddressesComponent } from '@backbase/user-common';\n\n@Component({\n  selector: 'bb-user-manage-postal-addresses',\n  templateUrl: './user-manage-postal-addresses.component.html',\n})\nexport class UserManagePostalAddressesComponent extends ManagePostalAddressesComponent {}\n\n@Directive({\n  selector: '[bbUserManagePostalAddressesCustomizable]',\n})\nexport class UserManagePostalAddressesCustomizableDirective extends BbTemplate<\n  UserManagePostalAddressesComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbUserManagePostalAddressesTitleCustomizable]',\n})\nexport class UserManagePostalAddressesTitleCustomizableDirective extends BbTemplate<\n  UserManagePostalAddressesComponent,\n  undefined\n> {}\n","<ng-container bbUserManagePostalAddressesCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManagePostalAddressesCustomizable let-hostRef>\n  <div class=\"card card-lg\">\n    <ng-container bbUserManagePostalAddressesTitleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n    <ng-container *ngIf=\"hostRef.postalAddresses && hostRef.postalAddresses.length; else emptyState\">\n      <div *ngFor=\"let addressDetails of hostRef.postalAddresses | slice:0:maxPostalAddresses; index as i\"\n        class=\"card-section {{ hostRef.isManagingPostalAddressIndex === i ? 'card-section--highlight' : '' }}\">\n        <bb-user-manage-postal-address\n          [postalAddress]=\"addressDetails\"\n          [postalAddressCount]=\"hostRef.postalAddresses.length\"\n          [disableManage]=\"hostRef.disableManage\"\n          [postalAddressTypes]=\"hostRef.postalAddressTypes\"\n          (updateProfile)=\"hostRef.updateUserProfileData()\"\n          (managePostalAddress)=\"hostRef.handleManagePostalAddressOpen(i)\"\n          (cancelManagePostalAddress)=\"hostRef.handleManagePostalAddressClosed()\"\n          [dismissTimeout]=\"hostRef.dismissTimeout\">\n        </bb-user-manage-postal-address>\n      </div>\n    </ng-container>\n\n    <ng-template #emptyState>\n      <div class=\"card-section\">\n        <bb-empty-state-ui\n          data-role=\"user-manage-profile-postal-empty-state\"\n          [showIcon]=\"false\"\n          i18n-title=\"Addresses not found text|Text for no addresses found@@bb-user-manage-addresses.none-found\"\n          title=\"No postal addresses\">\n        </bb-empty-state-ui>\n      </div>\n    </ng-template>\n\n    <div class=\"card-section card-section--highlight\" *ngIf=\"hostRef.isAddingPostalAddress\">\n      <bb-user-new-postal-address\n        (close)=\"hostRef.handleManagePostalAddressClosed()\"\n        (closeAfterSave)=\"hostRef.updateUserProfileData()\"\n        [postalAddressTypes]=\"hostRef.postalAddressTypes\"\n        [notificationDismissTime]=\"hostRef.dismissTimeout\">\n      </bb-user-new-postal-address>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.isAddButtonAvailable && !hostRef.isAddingPostalAddress\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button bbButton\n          data-role=\"user-manage-profile-postal-add-button\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          [disabled]=\"hostRef.disableManage\"\n          (click)=\"hostRef.handleAddNewPostalAddress()\">\n          <bb-icon-ui name=\"create-payment\"></bb-icon-ui>\n          <span i18n=\"Add postal address button|Text for the button that allows the user to add a new postal address@@bb-user-manage-postal-addresses.add-postal-address-button\">\n            Add Address\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbUserManagePostalAddressesTitleCustomizable let-hostRef>\n  <bb-header-ui\n    headingType=\"h3\"\n    class=\"card-header\"\n    i18n-heading=\"Addresses section title|Title text for the addresses management section@@bb-user-manage-addresses.title\"\n    heading=\"Addresses\">\n  </bb-header-ui>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { UserProfileFormsModule } from '../user-profile-forms/user-profile-forms.module';\nimport {\n  UserEditPostalAddressComponent,\n  UserEditPostalAddressCustomizableDirective,\n  UserEditPostalAddressTitleCustomizableDirective,\n} from './user-edit-postal-address/user-edit-postal-address.component';\nimport {\n  UserManagePostalAddressComponent,\n  UserManagePostalAddressCustomizableDirective,\n} from './user-manage-postal-address.component';\nimport {\n  UserManagePostalAddressesComponent,\n  UserManagePostalAddressesCustomizableDirective,\n  UserManagePostalAddressesTitleCustomizableDirective,\n} from './user-manage-postal-addresses.component';\nimport {\n  UserNewPostalAddressComponent,\n  UserNewPostalAddressCustomizableDirective,\n  UserNewPostalAddressTitleCustomizableDirective,\n} from './user-new-postal-address/user-new-postal-address.component';\n\nconst uiModules = [ButtonModule, EmptyStateModule, BadgeModule, IconModule, NotificationModule, HeaderModule];\nconst componentModules = [UserProfileFormsModule];\n\n@NgModule({\n  imports: [CommonModule, ...componentModules, ...uiModules],\n  declarations: [\n    UserManagePostalAddressComponent,\n    UserManagePostalAddressCustomizableDirective,\n    UserManagePostalAddressesComponent,\n    UserManagePostalAddressesCustomizableDirective,\n    UserManagePostalAddressesTitleCustomizableDirective,\n    UserNewPostalAddressComponent,\n    UserNewPostalAddressCustomizableDirective,\n    UserNewPostalAddressTitleCustomizableDirective,\n    UserEditPostalAddressComponent,\n    UserEditPostalAddressCustomizableDirective,\n    UserEditPostalAddressTitleCustomizableDirective,\n  ],\n  exports: [\n    UserManagePostalAddressComponent,\n    UserManagePostalAddressCustomizableDirective,\n    UserManagePostalAddressesComponent,\n    UserManagePostalAddressesCustomizableDirective,\n    UserManagePostalAddressesTitleCustomizableDirective,\n    UserNewPostalAddressComponent,\n    UserNewPostalAddressCustomizableDirective,\n    UserNewPostalAddressTitleCustomizableDirective,\n    UserEditPostalAddressComponent,\n    UserEditPostalAddressCustomizableDirective,\n    UserEditPostalAddressTitleCustomizableDirective,\n    ...uiModules,\n    ...componentModules,\n  ],\n})\nexport class UserManagePostalAddressesModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  UserEditEmailAddressCustomizableDirective,\n  UserEditEmailAddressTitleCustomizableDirective,\n} from './user-manage-email-addresses/user-edit-email-address/user-edit-email-address.component';\nimport { UserManageEmailAddressCustomizableDirective } from './user-manage-email-addresses/user-manage-email-address.component';\nimport {\n  UserManageEmailAddressesCustomizableDirective,\n  UserManageEmailAddressesTitleCustomizableDirective,\n} from './user-manage-email-addresses/user-manage-email-addresses.component';\nimport { UserManageEmailAddressesModule } from './user-manage-email-addresses/user-manage-email-addresses.module';\nimport {\n  UserNewEmailAddressCustomizableDirective,\n  UserNewEmailAddressTitleCustomizableDirective,\n} from './user-manage-email-addresses/user-new-email-address/user-new-email-address.component';\nimport {\n  UserEditPhoneNumberCustomizableDirective,\n  UserEditPhoneNumberTitleCustomizableDirective,\n} from './user-manage-phone-numbers/user-edit-phone-number/user-edit-phone-number.component';\nimport { UserManagePhoneNumberCustomizableDirective } from './user-manage-phone-numbers/user-manage-phone-number.component';\nimport {\n  UserManagePhoneNumbersCustomizableDirective,\n  UserManagePhoneNumbersTitleCustomizableDirective,\n} from './user-manage-phone-numbers/user-manage-phone-numbers.component';\nimport { UserManagePhoneNumbersModule } from './user-manage-phone-numbers/user-manage-phone-numbers.module';\nimport {\n  UserNewPhoneNumberCustomizableDirective,\n  UserNewPhoneNumberTitleCustomizableDirective,\n} from './user-manage-phone-numbers/user-new-phone-number/user-new-phone-number.component';\nimport {\n  UserEditPostalAddressCustomizableDirective,\n  UserEditPostalAddressTitleCustomizableDirective,\n} from './user-manage-postal-addresses/user-edit-postal-address/user-edit-postal-address.component';\nimport { UserManagePostalAddressCustomizableDirective } from './user-manage-postal-addresses/user-manage-postal-address.component';\nimport {\n  UserManagePostalAddressesCustomizableDirective,\n  UserManagePostalAddressesTitleCustomizableDirective,\n} from './user-manage-postal-addresses/user-manage-postal-addresses.component';\nimport { UserManagePostalAddressesModule } from './user-manage-postal-addresses/user-manage-postal-addresses.module';\nimport {\n  UserNewPostalAddressCustomizableDirective,\n  UserNewPostalAddressTitleCustomizableDirective,\n} from './user-manage-postal-addresses/user-new-postal-address/user-new-postal-address.component';\nimport {\n  UserEmailAddressFormCustomizableDirective,\n  UserEmailAddressFormErrorsCustomizableDirective,\n} from './user-profile-forms/user-email-address-form.component';\nimport {\n  UserPhoneNumberFormCustomizableDirective,\n  UserPhoneNumberFormErrorsCustomizableDirective,\n} from './user-profile-forms/user-phone-number-form.component';\nimport {\n  UserPostalAddressFormCustomizableDirective,\n  UserPostalAddressFormErrorsCustomizableDirective,\n} from './user-profile-forms/user-postal-address-form.component';\nimport { UserPrimaryCheckboxInputCustomizableDirective } from './user-profile-forms/user-profile-form-inputs/base-inputs/user-primary-checkbox-input.component';\nimport { UserProfileFormBaseInputsModule } from './user-profile-forms/user-profile-form-inputs/base-inputs/user-profile-form-base-inputs.module';\nimport {\n  UserEmailAddressInputCustomizableDirective,\n  UserEmailAddressInputErrorsCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/email-address-inputs/user-email-address-input.component';\nimport {\n  UserEmailAddressTypeErrorsCustomizableDirective,\n  UserEmailAddressTypeInputCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/email-address-inputs/user-email-address-type-input.component';\nimport { UserProfileFormEmailAddressInputsModule } from './user-profile-forms/user-profile-form-inputs/email-address-inputs/user-profile-form-email-address-inputs.module';\nimport {\n  UserPhoneNumberInputCustomizableDirective,\n  UserPhoneNumberInputErrorsCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/phone-number-inputs/user-phone-number-input.component';\nimport {\n  UserPhoneNumberTypeErrorsCustomizableDirective,\n  UserPhoneNumberTypeInputCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/phone-number-inputs/user-phone-number-type-input.component';\nimport { UserProfileFormPhoneNumberInputsModule } from './user-profile-forms/user-profile-form-inputs/phone-number-inputs/user-profile-form-phone-number-inputs.module';\nimport {\n  UserPostalAddressTypeErrorsCustomizableDirective,\n  UserPostalAddressTypeInputCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-address-type-input.component';\nimport {\n  UserPostalBuildingNumberInputCustomizableDirective,\n  UserPostalBuildingNumberInputErrorsCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-building-number-input.component';\nimport {\n  UserPostalCountrySubDivisionInputCustomizableDirective,\n  UserPostalCountrySubDivisionInputErrorsCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-country-sub-division-input.component';\nimport {\n  UserPostalPostalCodeInputCustomizableDirective,\n  UserPostalPostalCodeInputErrorsCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-postal-code-input.component';\nimport {\n  UserPostalStreetNameInputCustomizableDirective,\n  UserPostalStreetNameInputErrorsCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-street-name-input.component';\nimport {\n  UserPostalTownNameInputCustomizableDirective,\n  UserPostalTownNameInputErrorsCustomizableDirective,\n} from './user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-postal-town-name-input.component';\nimport { UserProfileFormPostalAddressInputsModule } from './user-profile-forms/user-profile-form-inputs/postal-address-inputs/user-profile-form-postal-address-inputs.module';\nimport { UserProfileFormCancelModalCustomizableDirective } from './user-profile-forms/user-profile-form-modals/user-profile-form-cancel-modal.component';\nimport { UserProfileFormDeleteEmailAddressModalCustomizableDirective } from './user-profile-forms/user-profile-form-modals/user-profile-form-delete-email-address-modal.component';\nimport { UserProfileFormDeletePhoneAddressModalCustomizableDirective } from './user-profile-forms/user-profile-form-modals/user-profile-form-delete-phone-address-modal.component';\nimport { UserProfileFormDeletePostalAddressModalCustomizableDirective } from './user-profile-forms/user-profile-form-modals/user-profile-form-delete-postal-address-modal.component';\nimport { UserProfileFormModalsModule } from './user-profile-forms/user-profile-form-modals/user-profile-form-modals.module';\nimport { UserProfileFormsModule } from './user-profile-forms/user-profile-forms.module';\n\nconst customizationSlots = [\n  UserManageEmailAddressCustomizableDirective,\n  UserManageEmailAddressesCustomizableDirective,\n  UserManageEmailAddressesTitleCustomizableDirective,\n  UserNewEmailAddressCustomizableDirective,\n  UserNewEmailAddressTitleCustomizableDirective,\n  UserEditEmailAddressCustomizableDirective,\n  UserEditEmailAddressTitleCustomizableDirective,\n  UserManagePhoneNumberCustomizableDirective,\n  UserManagePhoneNumbersCustomizableDirective,\n  UserManagePhoneNumbersTitleCustomizableDirective,\n  UserNewPhoneNumberCustomizableDirective,\n  UserNewPhoneNumberTitleCustomizableDirective,\n  UserEditPhoneNumberCustomizableDirective,\n  UserEditPhoneNumberTitleCustomizableDirective,\n  UserManagePostalAddressCustomizableDirective,\n  UserManagePostalAddressesCustomizableDirective,\n  UserManagePostalAddressesTitleCustomizableDirective,\n  UserNewPostalAddressCustomizableDirective,\n  UserNewPostalAddressTitleCustomizableDirective,\n  UserEditPostalAddressCustomizableDirective,\n  UserEditPostalAddressTitleCustomizableDirective,\n  UserEmailAddressFormCustomizableDirective,\n  UserEmailAddressFormErrorsCustomizableDirective,\n  UserPhoneNumberFormCustomizableDirective,\n  UserPhoneNumberFormErrorsCustomizableDirective,\n  UserPostalAddressFormCustomizableDirective,\n  UserPostalAddressFormErrorsCustomizableDirective,\n  UserProfileFormCancelModalCustomizableDirective,\n  UserProfileFormDeleteEmailAddressModalCustomizableDirective,\n  UserProfileFormDeletePhoneAddressModalCustomizableDirective,\n  UserProfileFormDeletePostalAddressModalCustomizableDirective,\n  UserPhoneNumberTypeInputCustomizableDirective,\n  UserPhoneNumberTypeErrorsCustomizableDirective,\n  UserPhoneNumberInputCustomizableDirective,\n  UserPhoneNumberInputErrorsCustomizableDirective,\n  UserPostalAddressTypeInputCustomizableDirective,\n  UserPostalAddressTypeErrorsCustomizableDirective,\n  UserPostalBuildingNumberInputCustomizableDirective,\n  UserPostalBuildingNumberInputErrorsCustomizableDirective,\n  UserPostalCountrySubDivisionInputCustomizableDirective,\n  UserPostalCountrySubDivisionInputErrorsCustomizableDirective,\n  UserPostalPostalCodeInputCustomizableDirective,\n  UserPostalPostalCodeInputErrorsCustomizableDirective,\n  UserPostalStreetNameInputCustomizableDirective,\n  UserPostalStreetNameInputErrorsCustomizableDirective,\n  UserPostalTownNameInputCustomizableDirective,\n  UserPostalTownNameInputErrorsCustomizableDirective,\n  UserEmailAddressTypeInputCustomizableDirective,\n  UserEmailAddressTypeErrorsCustomizableDirective,\n  UserEmailAddressInputCustomizableDirective,\n  UserEmailAddressInputErrorsCustomizableDirective,\n  UserPrimaryCheckboxInputCustomizableDirective,\n];\n\n@NgModule({\n  imports: [\n    UserProfileFormBaseInputsModule,\n    UserManageEmailAddressesModule,\n    UserManagePhoneNumbersModule,\n    UserManagePostalAddressesModule,\n    UserProfileFormsModule,\n    UserProfileFormModalsModule,\n    UserProfileFormEmailAddressInputsModule,\n    UserProfileFormPhoneNumberInputsModule,\n    UserProfileFormPostalAddressInputsModule,\n  ],\n  exports: [...customizationSlots],\n})\nexport class UserManageProfileWidgetExtensionsModule {}\n","import { ChangeDetectorRef, Component, Directive, Input, OnInit } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CountryCode } from '@backbase/phone-number-lib';\nimport {\n  convertCommaSeparatedStringToStringArray,\n  filterInputParameters,\n  ManageProfileComponent,\n  ManageProfilePreferencesService,\n  ManageProfileService,\n  PhoneNumberInputPreferences,\n} from '@backbase/user-common';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, first, pluck, switchMap, tap } from 'rxjs/operators';\nimport { UserProfile } from './types/user-types';\nimport { UserManageProfileService } from './user-manage-profile.service';\n\n@Component({\n  selector: 'bb-user-manage-profile-widget',\n  templateUrl: './user-manage-profile-widget.component.html',\n  providers: [UserManageProfileService, ManageProfilePreferencesService, ManageProfileService],\n})\nexport class UserManageProfileWidgetComponent extends ManageProfileComponent implements OnInit {\n  public dismissTimeout: number | undefined;\n\n  @Input('emailAddressTypes') set emailAddressTypesValue(value: Array<string> | string) {\n    this.emailAddressTypesSubject.next(\n      typeof value === 'string' ? this.convertCommaSeparatedStringToStringArray(value) : value,\n    );\n  }\n  @Input('postalAddressTypes') set postalAddressTypesValue(value: Array<string> | string) {\n    this.postalAddressTypesSubject.next(\n      typeof value === 'string' ? this.convertCommaSeparatedStringToStringArray(value) : value,\n    );\n  }\n  @Input('phoneNumberTypes') set phoneNumberTypesValue(value: Array<string> | string) {\n    this.phoneNumberTypesSubject.next(\n      typeof value === 'string' ? this.convertCommaSeparatedStringToStringArray(value) : value,\n    );\n  }\n  @Input('maxEmailAddresses') set maxEmailAddressesValue(value: number) {\n    this.maxEmailAddressesSubject.next(value);\n  }\n  @Input('maxPhoneNumbers') set maxPhoneNumbersValue(value: number) {\n    this.maxPhoneNumbersSubject.next(value);\n  }\n  @Input('maxPostalAddresses') set maxPostalAddressesValue(value: number) {\n    this.maxPostalAddressesSubject.next(value);\n  }\n  @Input('showWidgetHeader') set showWidgetHeaderValue(value: boolean | string) {\n    this.showWidgetHeaderSubject.next(typeof value === 'string' ? !!value && value !== 'false' : value);\n  }\n  @Input('phoneNumberCountryCode') set phoneNumberCountryCodeValue(value: CountryCode) {\n    this.phoneNumberCountryCodeSubject.next(value);\n  }\n  @Input('phoneNumberDebounceTime') set phoneNumberDebounceTimeValue(value: number) {\n    this.phoneNumberDebounceTimeSubject.next(value);\n  }\n  @Input('enablePhoneNumberFormatter') set enablePhoneNumberFormatterValue(value: boolean | string) {\n    this.enablePhoneNumberFormatterSubject.next(typeof value === 'string' ? value === 'true' : value);\n  }\n\n  private readonly emailAddressTypesSubject = new BehaviorSubject<Array<string> | undefined>(undefined);\n  private readonly postalAddressTypesSubject = new BehaviorSubject<Array<string> | undefined>(undefined);\n  private readonly phoneNumberTypesSubject = new BehaviorSubject<Array<string> | undefined>(undefined);\n  private readonly maxEmailAddressesSubject = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxPhoneNumbersSubject = new BehaviorSubject<number | undefined>(undefined);\n  private readonly maxPostalAddressesSubject = new BehaviorSubject<number | undefined>(undefined);\n  private readonly showWidgetHeaderSubject = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly phoneNumberCountryCodeSubject = new BehaviorSubject<CountryCode | undefined>(undefined);\n  private readonly phoneNumberDebounceTimeSubject = new BehaviorSubject<number | undefined>(undefined);\n  private readonly enablePhoneNumberFormatterSubject = new BehaviorSubject<boolean | undefined>(undefined);\n\n  readonly emailAddressTypes: Observable<Array<string>> = filterInputParameters(\n    this.emailAddressTypesSubject.asObservable(),\n    this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('emailAddressTypes')),\n  );\n  readonly postalAddressTypes: Observable<Array<string>> = filterInputParameters(\n    this.postalAddressTypesSubject.asObservable(),\n    this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('postalAddressTypes')),\n  );\n  readonly phoneNumberTypes: Observable<Array<string>> = filterInputParameters(\n    this.phoneNumberTypesSubject.asObservable(),\n    this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('phoneNumberTypes')),\n  );\n  readonly maxEmailAddresses: Observable<number> = filterInputParameters(\n    this.maxEmailAddressesSubject.asObservable(),\n    this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('maxEmailAddresses')),\n  );\n  readonly maxPhoneNumbers: Observable<number> = filterInputParameters(\n    this.maxPhoneNumbersSubject.asObservable(),\n    this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('maxPhoneNumbers')),\n  );\n  readonly maxPostalAddresses: Observable<number> = filterInputParameters(\n    this.maxPostalAddressesSubject.asObservable(),\n    this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('maxPostalAddresses')),\n  );\n  readonly showWidgetHeader: Observable<boolean> = filterInputParameters(\n    this.showWidgetHeaderSubject.asObservable(),\n    this.manageProfilePreferencesService.getWidgetPreferences().pipe(pluck('showWidgetHeader')),\n  );\n  readonly phoneNumberCountryCode: Observable<CountryCode> = filterInputParameters(\n    this.phoneNumberCountryCodeSubject.asObservable(),\n    this.manageProfilePreferencesService.getPhoneNumberInputPreferences().pipe(pluck('countryCode')),\n  );\n  readonly phoneNumberDebounceTime: Observable<number> = filterInputParameters(\n    this.phoneNumberDebounceTimeSubject.asObservable(),\n    this.manageProfilePreferencesService.getPhoneNumberInputPreferences().pipe(pluck('debounceTime')),\n  );\n  readonly enablePhoneNumberFormatter: Observable<boolean> = filterInputParameters(\n    this.enablePhoneNumberFormatterSubject.asObservable(),\n    this.manageProfilePreferencesService\n      .getPhoneNumberInputPreferences()\n      .pipe(\n        switchMap((preferences: PhoneNumberInputPreferences | undefined) =>\n          of((preferences && preferences.enablePhoneNumberFormatter) || false),\n        ),\n      ),\n  );\n\n  constructor(\n    private readonly manageProfileService: UserManageProfileService,\n    protected readonly manageProfilePreferencesService: ManageProfilePreferencesService,\n    protected readonly cd: ChangeDetectorRef,\n  ) {\n    super(manageProfilePreferencesService, cd);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.notificationDismissTime) {\n      this.dismissTimeout = this.notificationDismissTime * 1000;\n    } else {\n      this.manageProfilePreferencesService\n        .getNotificationDismissTimePreference()\n        .pipe(first())\n        .subscribe((time) => (this.dismissTimeout = time * 1000));\n    }\n  }\n\n  public convertCommaSeparatedStringToStringArray(value: string) {\n    return convertCommaSeparatedStringToStringArray(value);\n  }\n\n  protected setUserProfileObservable(): Observable<UserProfile> {\n    return this.userProfileSubject.asObservable().pipe(\n      tap(this.onProfileUpdate),\n      switchMap(() => this.manageProfileService.getUserProfile()),\n      tap(() => (this.loadingState = false)),\n      catchError(this.handleProfileError),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbUserManageWidgetCustomizable]',\n})\nexport class UserManageWidgetCustomizableDirective extends BbTemplate<UserManageProfileWidgetComponent, undefined> {}\n\n@Directive({\n  selector: '[bbUserManageWidgetTitleCustomizable]',\n})\nexport class UserManageWidgetTitleCustomizableDirective extends BbTemplate<\n  UserManageProfileWidgetComponent,\n  undefined\n> {}\n","<ng-container bbUserManageWidgetCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManageWidgetCustomizable let-hostRef>\n  <section>\n    <bb-loading-indicator-ui\n      *ngIf=\"hostRef.loadingState\"\n      i18n-text=\"User Profile loading message|Message for when the user profile is loading@@bb-user-manage-profile.bb-loading-indicator-ui\"\n      text=\"Loading...\">\n    </bb-loading-indicator-ui>\n\n    <bb-common-error-state-ui\n      *ngIf=\"hostRef.loadingErrorState\"\n      class=\"bb-state-container\"\n      [error]=\"hostRef.loadingError\"\n      data-role=\"user-manage-profile-error-state\">\n    </bb-common-error-state-ui>\n\n    <div *ngIf=\"!hostRef.loadingState && !hostRef.loadingErrorState && hostRef.userProfile\">\n      <ng-container bbUserManageWidgetTitleCustomizable\n        *ngIf=\"hostRef.showWidgetHeader | async\"\n        [bbHostRef]=\"hostRef\">\n      </ng-container>\n      <div>\n        <div class=\"bb-block bb-block--xl\">\n          <bb-user-manage-email-addresses\n            [emailAddresses]=\"hostRef.userProfile['electronic-addresses']\"\n            [emailAddressTypes]=\"hostRef.emailAddressTypes | async\"\n            [maxEmailAddresses]=\"hostRef.maxEmailAddresses | async\"\n            (updateProfile)=\"hostRef.refreshProfileData()\"\n            (manageEmail)=\"hostRef.handleManageAddressOpen()\"\n            (cancelManageEmail)=\"hostRef.handleManageAddressClose()\"\n            [disableManage]=\"hostRef.disableAddressManaging\"\n            [dismissTimeout]=\"hostRef.dismissTimeout\">\n          </bb-user-manage-email-addresses>\n        </div>\n        <div class=\"bb-block bb-block--xl\">\n          <bb-user-manage-phone-numbers\n            [phoneNumbers]=\"hostRef.userProfile['phone-addresses']\"\n            [phoneNumberTypes]=\"hostRef.phoneNumberTypes | async\"\n            [maxPhoneNumbers]=\"hostRef.maxPhoneNumbers | async\"\n            (updateProfile)=\"hostRef.refreshProfileData()\"\n            (managePhoneNumber)=\"hostRef.handleManageAddressOpen()\"\n            (cancelManagePhoneNumber)=\"hostRef.handleManageAddressClose()\"\n            [disableManage]=\"hostRef.disableAddressManaging\"\n            [dismissTimeout]=\"hostRef.dismissTimeout\"\n\n            [phoneNumberCountryCode]=\"hostRef.phoneNumberCountryCode | async\"\n            [phoneNumberDebounceTime]=\"hostRef.phoneNumberDebounceTime | async\"\n            [enablePhoneNumberFormatter]=\"hostRef.enablePhoneNumberFormatter | async\">\n          </bb-user-manage-phone-numbers>\n        </div>\n        <div class=\"bb-block bb-block--xl\">\n          <bb-user-manage-postal-addresses\n            [postalAddresses]=\"hostRef.userProfile['postal-addresses']\"\n            [postalAddressTypes]=\"hostRef.postalAddressTypes | async\"\n            [maxPostalAddresses]=\"hostRef.maxPostalAddresses | async\"\n            (updateProfile)=\"hostRef.refreshProfileData()\"\n            (managePostalAddress)=\"hostRef.handleManageAddressOpen()\"\n            (cancelManagePostalAddress)=\"hostRef.handleManageAddressClose()\"\n            [disableManage]=\"hostRef.disableAddressManaging\"\n            [dismissTimeout]=\"hostRef.dismissTimeout\">\n          </bb-user-manage-postal-addresses>\n        </div>\n      </div>\n    </div>\n  </section>\n</ng-template>\n\n<ng-template bbUserManageWidgetTitleCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h2\"\n      data-role=\"user-manage-profile-user-name\"\n      [heading]=\"hostRef.userProfile.fullName\">\n    </bb-header-ui>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { ErrorCommonStateModule } from '@backbase/ui-ang/common-error-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { UserCommonModule } from '@backbase/user-common';\nimport { UserManageEmailAddressesModule } from './user-manage-email-addresses/user-manage-email-addresses.module';\nimport { UserManagePhoneNumbersModule } from './user-manage-phone-numbers/user-manage-phone-numbers.module';\nimport { UserManagePostalAddressesModule } from './user-manage-postal-addresses/user-manage-postal-addresses.module';\nimport { UserManageProfileWidgetExtensionsModule } from './user-manage-profile-widget-extensions.module';\nimport {\n  UserManageProfileWidgetComponent,\n  UserManageWidgetCustomizableDirective,\n  UserManageWidgetTitleCustomizableDirective,\n} from './user-manage-profile-widget.component';\n\nconst uiModules = [ErrorCommonStateModule, LoadingIndicatorModule, HeaderModule];\nconst widgetModules = [\n  UserManageProfileWidgetExtensionsModule,\n  UserManagePhoneNumbersModule,\n  UserManageEmailAddressesModule,\n  UserManagePostalAddressesModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { UserManageProfileWidgetComponent },\n    }),\n    UserCommonModule,\n    ...uiModules,\n    ...widgetModules,\n  ],\n  declarations: [\n    UserManageProfileWidgetComponent,\n    UserManageWidgetCustomizableDirective,\n    UserManageWidgetTitleCustomizableDirective,\n  ],\n  exports: [\n    UserManageProfileWidgetComponent,\n    UserManageWidgetCustomizableDirective,\n    UserManageWidgetTitleCustomizableDirective,\n    ...uiModules,\n    ...widgetModules,\n  ],\n})\nexport class UserManageProfileWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["uiModules","componentModules"],"mappings":"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"}