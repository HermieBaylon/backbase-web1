import { Component, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { ManageEmailAddressesComponent } from '@backbase/user-common';
import * as i0 from "@angular/core";
import * as i1 from "./user-manage-email-address.component";
import * as i2 from "@backbase/ui-ang/empty-state";
import * as i3 from "./user-new-email-address/user-new-email-address.component";
import * as i4 from "@backbase/ui-ang/icon";
import * as i5 from "@backbase/ui-ang/header";
import * as i6 from "@angular/common";
import * as i7 from "@backbase/ui-ang/button";
export class UserManageEmailAddressesComponent extends ManageEmailAddressesComponent {
}
UserManageEmailAddressesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserManageEmailAddressesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserManageEmailAddressesComponent, selector: "bb-user-manage-email-addresses", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserManageEmailAddressesCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserManageEmailAddressesCustomizable let-hostRef>\n  <div class=\"card card-lg\">\n    <ng-container bbUserManageEmailAddressesTitleCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n    <ng-container *ngIf=\"hostRef.emailAddresses && hostRef.emailAddresses.length; else emptyState\">\n      <div *ngFor=\"let emailAddressDetails of hostRef.emailAddresses | slice:0:maxEmailAddresses; index as i\"\n        class=\"card-section {{ hostRef.isManagingEmailAddressIndex === i ? 'card-section--highlight' : '' }}\">\n        <bb-user-manage-email-address\n          [electronicAddress]=\"emailAddressDetails\"\n          [emailAddressCount]=\"hostRef.emailAddresses.length\"\n          [disableManage]=\"hostRef.disableManage\"\n          [emailAddressTypes]=\"hostRef.emailAddressTypes\"\n          (updateProfile)=\"hostRef.updateUserProfileData()\"\n          (manageEmail)=\"hostRef.handleManageEmailOpen(i)\"\n          (cancelManageEmail)=\"hostRef.handleManageEmailClosed()\"\n          [dismissTimeout]=\"hostRef.dismissTimeout\">\n        </bb-user-manage-email-address>\n      </div>\n    </ng-container>\n\n    <ng-template #emptyState>\n      <div class=\"card-section\">\n        <bb-empty-state-ui\n          data-role=\"user-manage-profile-email-empty-state\"\n          [showIcon]=\"false\"\n          i18n-title=\"Email addresses not found text|Text for no email addresses found@@bb-user-manage-email-addresses.none-found\"\n          title=\"No email addresses\">\n        </bb-empty-state-ui>\n      </div>\n    </ng-template>\n\n    <div class=\"card-section card-section--highlight\" *ngIf=\"hostRef.isAddingEmailAddress\">\n      <bb-user-new-email-address\n        (close)=\"hostRef.handleManageEmailClosed()\"\n        (closeAfterSave)=\"hostRef.updateUserProfileData()\"\n        [emailAddressTypes]=\"hostRef.emailAddressTypes\"\n        [notificationDismissTime]=\"hostRef.dismissTimeout\">\n      </bb-user-new-email-address>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.isAddButtonAvailable && !hostRef.isAddingEmailAddress\">\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button bbButton\n          data-role=\"user-manage-profile-email-add-button\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n          [disabled]=\"hostRef.disableManage\"\n          (click)=\"hostRef.handleAddNewEmailAddress()\">\n          <bb-icon-ui name=\"create-payment\"></bb-icon-ui>\n          <span i18n=\"Add email address button|Text for the button that allows the user to add a new email address@@bb-user-manage-email-addresses.add-email-button\">\n            Add Email Address\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbUserManageEmailAddressesTitleCustomizable let-hostRef>\n  <bb-header-ui\n    headingType=\"h3\"\n    class=\"card-header\"\n    i18n-heading=\"Email addresses section title|Title text for the email addresses management section@@bb-user-manage-email-addresses.title\"\n    heading=\"Email addresses\">\n  </bb-header-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.UserManageEmailAddressComponent; }), selector: "bb-user-manage-email-address" }, { type: i0.forwardRef(function () { return i2.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i0.forwardRef(function () { return i3.UserNewEmailAddressComponent; }), selector: "bb-user-new-email-address" }, { type: i0.forwardRef(function () { return i4.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i5.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i0.forwardRef(function () { return UserManageEmailAddressesCustomizableDirective; }), selector: "[bbUserManageEmailAddressesCustomizable]" }, { type: i0.forwardRef(function () { return UserManageEmailAddressesTitleCustomizableDirective; }), selector: "[bbUserManageEmailAddressesTitleCustomizable]" }, { type: i0.forwardRef(function () { return i6.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i6.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return i7.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "slice": i0.forwardRef(function () { return i6.SlicePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-manage-email-addresses',
                    templateUrl: './user-manage-email-addresses.component.html',
                }]
        }] });
export class UserManageEmailAddressesCustomizableDirective extends BbTemplate {
}
UserManageEmailAddressesCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManageEmailAddressesCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManageEmailAddressesCustomizableDirective, selector: "[bbUserManageEmailAddressesCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManageEmailAddressesCustomizable]',
                }]
        }] });
export class UserManageEmailAddressesTitleCustomizableDirective extends BbTemplate {
}
UserManageEmailAddressesTitleCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesTitleCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserManageEmailAddressesTitleCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserManageEmailAddressesTitleCustomizableDirective, selector: "[bbUserManageEmailAddressesTitleCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserManageEmailAddressesTitleCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserManageEmailAddressesTitleCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1tYW5hZ2UtZW1haWwtYWRkcmVzc2VzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1tYW5hZ2UtcHJvZmlsZS13aWRnZXQvc3JjL3VzZXItbWFuYWdlLWVtYWlsLWFkZHJlc3Nlcy91c2VyLW1hbmFnZS1lbWFpbC1hZGRyZXNzZXMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91c2VyLW1hbmFnZS1wcm9maWxlLXdpZGdldC9zcmMvdXNlci1tYW5hZ2UtZW1haWwtYWRkcmVzc2VzL3VzZXItbWFuYWdlLWVtYWlsLWFkZHJlc3Nlcy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDM0QsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7Ozs7OztBQU10RSxNQUFNLE9BQU8saUNBQWtDLFNBQVEsNkJBQTZCOzsrSEFBdkUsaUNBQWlDO21IQUFqQyxpQ0FBaUMsNkZDUjlDLHNwR0FxRUEsKzFCRHhEYSw2Q0FBNkMseUdBUTdDLGtEQUFrRDs0RkFibEQsaUNBQWlDO2tCQUo3QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLFdBQVcsRUFBRSw4Q0FBOEM7aUJBQzVEOztBQU1ELE1BQU0sT0FBTyw2Q0FBOEMsU0FBUSxVQUdsRTs7MklBSFksNkNBQTZDOytIQUE3Qyw2Q0FBNkM7NEZBQTdDLDZDQUE2QztrQkFIekQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsMENBQTBDO2lCQUNyRDs7QUFTRCxNQUFNLE9BQU8sa0RBQW1ELFNBQVEsVUFHdkU7O2dKQUhZLGtEQUFrRDtvSUFBbEQsa0RBQWtEOzRGQUFsRCxrREFBa0Q7a0JBSDlELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLCtDQUErQztpQkFDMUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmJUZW1wbGF0ZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlJztcbmltcG9ydCB7IE1hbmFnZUVtYWlsQWRkcmVzc2VzQ29tcG9uZW50IH0gZnJvbSAnQGJhY2tiYXNlL3VzZXItY29tbW9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItdXNlci1tYW5hZ2UtZW1haWwtYWRkcmVzc2VzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItbWFuYWdlLWVtYWlsLWFkZHJlc3Nlcy5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJNYW5hZ2VFbWFpbEFkZHJlc3Nlc0NvbXBvbmVudCBleHRlbmRzIE1hbmFnZUVtYWlsQWRkcmVzc2VzQ29tcG9uZW50IHt9XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYlVzZXJNYW5hZ2VFbWFpbEFkZHJlc3Nlc0N1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBVc2VyTWFuYWdlRW1haWxBZGRyZXNzZXNDdXN0b21pemFibGVEaXJlY3RpdmUgZXh0ZW5kcyBCYlRlbXBsYXRlPFxuICBVc2VyTWFuYWdlRW1haWxBZGRyZXNzZXNDb21wb25lbnQsXG4gIHVuZGVmaW5lZFxuPiB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJVc2VyTWFuYWdlRW1haWxBZGRyZXNzZXNUaXRsZUN1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBVc2VyTWFuYWdlRW1haWxBZGRyZXNzZXNUaXRsZUN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJNYW5hZ2VFbWFpbEFkZHJlc3Nlc0NvbXBvbmVudCxcbiAgdW5kZWZpbmVkXG4+IHt9XG4iLCI8bmctY29udGFpbmVyIGJiVXNlck1hbmFnZUVtYWlsQWRkcmVzc2VzQ3VzdG9taXphYmxlIFtiYkhvc3RSZWZdPVwidGhpc1wiPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSBiYlVzZXJNYW5hZ2VFbWFpbEFkZHJlc3Nlc0N1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGRpdiBjbGFzcz1cImNhcmQgY2FyZC1sZ1wiPlxuICAgIDxuZy1jb250YWluZXIgYmJVc2VyTWFuYWdlRW1haWxBZGRyZXNzZXNUaXRsZUN1c3RvbWl6YWJsZSBbYmJIb3N0UmVmXT1cImhvc3RSZWZcIj48L25nLWNvbnRhaW5lcj5cblxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJob3N0UmVmLmVtYWlsQWRkcmVzc2VzICYmIGhvc3RSZWYuZW1haWxBZGRyZXNzZXMubGVuZ3RoOyBlbHNlIGVtcHR5U3RhdGVcIj5cbiAgICAgIDxkaXYgKm5nRm9yPVwibGV0IGVtYWlsQWRkcmVzc0RldGFpbHMgb2YgaG9zdFJlZi5lbWFpbEFkZHJlc3NlcyB8IHNsaWNlOjA6bWF4RW1haWxBZGRyZXNzZXM7IGluZGV4IGFzIGlcIlxuICAgICAgICBjbGFzcz1cImNhcmQtc2VjdGlvbiB7eyBob3N0UmVmLmlzTWFuYWdpbmdFbWFpbEFkZHJlc3NJbmRleCA9PT0gaSA/ICdjYXJkLXNlY3Rpb24tLWhpZ2hsaWdodCcgOiAnJyB9fVwiPlxuICAgICAgICA8YmItdXNlci1tYW5hZ2UtZW1haWwtYWRkcmVzc1xuICAgICAgICAgIFtlbGVjdHJvbmljQWRkcmVzc109XCJlbWFpbEFkZHJlc3NEZXRhaWxzXCJcbiAgICAgICAgICBbZW1haWxBZGRyZXNzQ291bnRdPVwiaG9zdFJlZi5lbWFpbEFkZHJlc3Nlcy5sZW5ndGhcIlxuICAgICAgICAgIFtkaXNhYmxlTWFuYWdlXT1cImhvc3RSZWYuZGlzYWJsZU1hbmFnZVwiXG4gICAgICAgICAgW2VtYWlsQWRkcmVzc1R5cGVzXT1cImhvc3RSZWYuZW1haWxBZGRyZXNzVHlwZXNcIlxuICAgICAgICAgICh1cGRhdGVQcm9maWxlKT1cImhvc3RSZWYudXBkYXRlVXNlclByb2ZpbGVEYXRhKClcIlxuICAgICAgICAgIChtYW5hZ2VFbWFpbCk9XCJob3N0UmVmLmhhbmRsZU1hbmFnZUVtYWlsT3BlbihpKVwiXG4gICAgICAgICAgKGNhbmNlbE1hbmFnZUVtYWlsKT1cImhvc3RSZWYuaGFuZGxlTWFuYWdlRW1haWxDbG9zZWQoKVwiXG4gICAgICAgICAgW2Rpc21pc3NUaW1lb3V0XT1cImhvc3RSZWYuZGlzbWlzc1RpbWVvdXRcIj5cbiAgICAgICAgPC9iYi11c2VyLW1hbmFnZS1lbWFpbC1hZGRyZXNzPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG5cbiAgICA8bmctdGVtcGxhdGUgI2VtcHR5U3RhdGU+XG4gICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1zZWN0aW9uXCI+XG4gICAgICAgIDxiYi1lbXB0eS1zdGF0ZS11aVxuICAgICAgICAgIGRhdGEtcm9sZT1cInVzZXItbWFuYWdlLXByb2ZpbGUtZW1haWwtZW1wdHktc3RhdGVcIlxuICAgICAgICAgIFtzaG93SWNvbl09XCJmYWxzZVwiXG4gICAgICAgICAgaTE4bi10aXRsZT1cIkVtYWlsIGFkZHJlc3NlcyBub3QgZm91bmQgdGV4dHxUZXh0IGZvciBubyBlbWFpbCBhZGRyZXNzZXMgZm91bmRAQGJiLXVzZXItbWFuYWdlLWVtYWlsLWFkZHJlc3Nlcy5ub25lLWZvdW5kXCJcbiAgICAgICAgICB0aXRsZT1cIk5vIGVtYWlsIGFkZHJlc3Nlc1wiPlxuICAgICAgICA8L2JiLWVtcHR5LXN0YXRlLXVpPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy10ZW1wbGF0ZT5cblxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLXNlY3Rpb24gY2FyZC1zZWN0aW9uLS1oaWdobGlnaHRcIiAqbmdJZj1cImhvc3RSZWYuaXNBZGRpbmdFbWFpbEFkZHJlc3NcIj5cbiAgICAgIDxiYi11c2VyLW5ldy1lbWFpbC1hZGRyZXNzXG4gICAgICAgIChjbG9zZSk9XCJob3N0UmVmLmhhbmRsZU1hbmFnZUVtYWlsQ2xvc2VkKClcIlxuICAgICAgICAoY2xvc2VBZnRlclNhdmUpPVwiaG9zdFJlZi51cGRhdGVVc2VyUHJvZmlsZURhdGEoKVwiXG4gICAgICAgIFtlbWFpbEFkZHJlc3NUeXBlc109XCJob3N0UmVmLmVtYWlsQWRkcmVzc1R5cGVzXCJcbiAgICAgICAgW25vdGlmaWNhdGlvbkRpc21pc3NUaW1lXT1cImhvc3RSZWYuZGlzbWlzc1RpbWVvdXRcIj5cbiAgICAgIDwvYmItdXNlci1uZXctZW1haWwtYWRkcmVzcz5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLXNlY3Rpb25cIiAqbmdJZj1cImhvc3RSZWYuaXNBZGRCdXR0b25BdmFpbGFibGUgJiYgIWhvc3RSZWYuaXNBZGRpbmdFbWFpbEFkZHJlc3NcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1idXR0b24tYmFyIGJiLWJ1dHRvbi1iYXItLXJldmVyc2VcIj5cbiAgICAgICAgPGJ1dHRvbiBiYkJ1dHRvblxuICAgICAgICAgIGRhdGEtcm9sZT1cInVzZXItbWFuYWdlLXByb2ZpbGUtZW1haWwtYWRkLWJ1dHRvblwiXG4gICAgICAgICAgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b25cIlxuICAgICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgICAgICBbZGlzYWJsZWRdPVwiaG9zdFJlZi5kaXNhYmxlTWFuYWdlXCJcbiAgICAgICAgICAoY2xpY2spPVwiaG9zdFJlZi5oYW5kbGVBZGROZXdFbWFpbEFkZHJlc3MoKVwiPlxuICAgICAgICAgIDxiYi1pY29uLXVpIG5hbWU9XCJjcmVhdGUtcGF5bWVudFwiPjwvYmItaWNvbi11aT5cbiAgICAgICAgICA8c3BhbiBpMThuPVwiQWRkIGVtYWlsIGFkZHJlc3MgYnV0dG9ufFRleHQgZm9yIHRoZSBidXR0b24gdGhhdCBhbGxvd3MgdGhlIHVzZXIgdG8gYWRkIGEgbmV3IGVtYWlsIGFkZHJlc3NAQGJiLXVzZXItbWFuYWdlLWVtYWlsLWFkZHJlc3Nlcy5hZGQtZW1haWwtYnV0dG9uXCI+XG4gICAgICAgICAgICBBZGQgRW1haWwgQWRkcmVzc1xuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgYmJVc2VyTWFuYWdlRW1haWxBZGRyZXNzZXNUaXRsZUN1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGJiLWhlYWRlci11aVxuICAgIGhlYWRpbmdUeXBlPVwiaDNcIlxuICAgIGNsYXNzPVwiY2FyZC1oZWFkZXJcIlxuICAgIGkxOG4taGVhZGluZz1cIkVtYWlsIGFkZHJlc3NlcyBzZWN0aW9uIHRpdGxlfFRpdGxlIHRleHQgZm9yIHRoZSBlbWFpbCBhZGRyZXNzZXMgbWFuYWdlbWVudCBzZWN0aW9uQEBiYi11c2VyLW1hbmFnZS1lbWFpbC1hZGRyZXNzZXMudGl0bGVcIlxuICAgIGhlYWRpbmc9XCJFbWFpbCBhZGRyZXNzZXNcIj5cbiAgPC9iYi1oZWFkZXItdWk+XG48L25nLXRlbXBsYXRlPlxuIl19