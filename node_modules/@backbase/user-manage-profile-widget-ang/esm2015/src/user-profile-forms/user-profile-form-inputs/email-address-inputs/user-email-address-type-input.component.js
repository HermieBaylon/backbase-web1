import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { InputBase } from '@backbase/user-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/dropdown-single-select";
import * as i2 from "@backbase/ui-ang/input-validation-message";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
export class UserEmailAddressTypeInputComponent extends InputBase {
    ngOnInit() {
        if (this.emailAddressTypes && !this.emailAddressTypes.includes(this.fieldControl.value)) {
            this.fieldControl.setValue(this.emailAddressTypes[0]);
        }
    }
}
UserEmailAddressTypeInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserEmailAddressTypeInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressTypeInputComponent, selector: "bb-user-email-address-type-input", inputs: { emailAddressTypes: "emailAddressTypes" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserEmailAddressTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEmailAddressTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-email-manage-type\"\n      i18n-label=\"Email address type label|Label for the email address type field@@bb-user-user-email-address-type-input.label\"\n      label=\"Email address type\"\n      [options]=\"hostRef.emailAddressTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserEmailAddressTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserEmailAddressTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0.forwardRef(function () { return i2.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserEmailAddressTypeInputCustomizableDirective; }), selector: "[bbUserEmailAddressTypeInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserEmailAddressTypeErrorsCustomizableDirective; }), selector: "[bbUserEmailAddressTypeErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-email-address-type-input',
                    templateUrl: './user-email-address-type-input.component.html',
                }]
        }], propDecorators: { emailAddressTypes: [{
                type: Input
            }] } });
export class UserEmailAddressTypeInputCustomizableDirective extends BbTemplate {
}
UserEmailAddressTypeInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressTypeInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressTypeInputCustomizableDirective, selector: "[bbUserEmailAddressTypeInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressTypeInputCustomizable]',
                }]
        }] });
export class UserEmailAddressTypeErrorsCustomizableDirective extends BbTemplate {
}
UserEmailAddressTypeErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressTypeErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressTypeErrorsCustomizableDirective, selector: "[bbUserEmailAddressTypeErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressTypeErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressTypeErrorsCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1lbWFpbC1hZGRyZXNzLXR5cGUtaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy91c2VyLW1hbmFnZS1wcm9maWxlLXdpZGdldC9zcmMvdXNlci1wcm9maWxlLWZvcm1zL3VzZXItcHJvZmlsZS1mb3JtLWlucHV0cy9lbWFpbC1hZGRyZXNzLWlucHV0cy91c2VyLWVtYWlsLWFkZHJlc3MtdHlwZS1pbnB1dC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VzZXItbWFuYWdlLXByb2ZpbGUtd2lkZ2V0L3NyYy91c2VyLXByb2ZpbGUtZm9ybXMvdXNlci1wcm9maWxlLWZvcm0taW5wdXRzL2VtYWlsLWFkZHJlc3MtaW5wdXRzL3VzZXItZW1haWwtYWRkcmVzcy10eXBlLWlucHV0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNwRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDM0QsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7Ozs7QUFNbEQsTUFBTSxPQUFPLGtDQUFtQyxTQUFRLFNBQVM7SUFNL0QsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLGlCQUFpQixJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3ZGLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3ZEO0lBQ0gsQ0FBQzs7Z0lBVlUsa0NBQWtDO29IQUFsQyxrQ0FBa0MsbUpDUi9DLDR5Q0E2QkEsa2VETGEsOENBQThDLGcrQkFROUMsK0NBQStDOzRGQXhCL0Msa0NBQWtDO2tCQUo5QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLFdBQVcsRUFBRSxnREFBZ0Q7aUJBQzlEOzhCQUtVLGlCQUFpQjtzQkFBekIsS0FBSzs7QUFZUixNQUFNLE9BQU8sOENBQStDLFNBQVEsVUFHbkU7OzRJQUhZLDhDQUE4QztnSUFBOUMsOENBQThDOzRGQUE5Qyw4Q0FBOEM7a0JBSDFELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDJDQUEyQztpQkFDdEQ7O0FBU0QsTUFBTSxPQUFPLCtDQUFnRCxTQUFRLFVBR3BFOzs2SUFIWSwrQ0FBK0M7aUlBQS9DLCtDQUErQzs0RkFBL0MsK0NBQStDO2tCQUgzRCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw0Q0FBNEM7aUJBQ3ZEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBEaXJlY3RpdmUsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJiVGVtcGxhdGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5pbXBvcnQgeyBJbnB1dEJhc2UgfSBmcm9tICdAYmFja2Jhc2UvdXNlci1jb21tb24nO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi11c2VyLWVtYWlsLWFkZHJlc3MtdHlwZS1pbnB1dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi91c2VyLWVtYWlsLWFkZHJlc3MtdHlwZS1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJFbWFpbEFkZHJlc3NUeXBlSW5wdXRDb21wb25lbnQgZXh0ZW5kcyBJbnB1dEJhc2UgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogVGhlIGxpc3Qgb2YgZW1haWwgYWRkcmVzcyB0eXBlcy5cbiAgICovXG4gIEBJbnB1dCgpIGVtYWlsQWRkcmVzc1R5cGVzOiBBcnJheTxzdHJpbmc+IHwgdW5kZWZpbmVkO1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmVtYWlsQWRkcmVzc1R5cGVzICYmICF0aGlzLmVtYWlsQWRkcmVzc1R5cGVzLmluY2x1ZGVzKHRoaXMuZmllbGRDb250cm9sLnZhbHVlKSkge1xuICAgICAgdGhpcy5maWVsZENvbnRyb2wuc2V0VmFsdWUodGhpcy5lbWFpbEFkZHJlc3NUeXBlc1swXSk7XG4gICAgfVxuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYlVzZXJFbWFpbEFkZHJlc3NUeXBlSW5wdXRDdXN0b21pemFibGVdJyxcbn0pXG5leHBvcnQgY2xhc3MgVXNlckVtYWlsQWRkcmVzc1R5cGVJbnB1dEN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJFbWFpbEFkZHJlc3NUeXBlSW5wdXRDb21wb25lbnQsXG4gIHVuZGVmaW5lZFxuPiB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJVc2VyRW1haWxBZGRyZXNzVHlwZUVycm9yc0N1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBVc2VyRW1haWxBZGRyZXNzVHlwZUVycm9yc0N1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJFbWFpbEFkZHJlc3NUeXBlSW5wdXRDb21wb25lbnQsXG4gIHVuZGVmaW5lZFxuPiB7fVxuIiwiPG5nLWNvbnRhaW5lciBiYlVzZXJFbWFpbEFkZHJlc3NUeXBlSW5wdXRDdXN0b21pemFibGUgW2JiSG9zdFJlZl09XCJ0aGlzXCI+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlIGJiVXNlckVtYWlsQWRkcmVzc1R5cGVJbnB1dEN1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIiBbZm9ybUdyb3VwXT1cImhvc3RSZWYuZm9ybUdyb3VwXCI+XG4gICAgPGJiLWRyb3Bkb3duLXNpbmdsZS1zZWxlY3QtdWlcbiAgICAgIGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1zbVwiXG4gICAgICBkYXRhLXJvbGU9XCJ1c2VyLW1hbmFnZS1wcm9maWxlLWVtYWlsLW1hbmFnZS10eXBlXCJcbiAgICAgIGkxOG4tbGFiZWw9XCJFbWFpbCBhZGRyZXNzIHR5cGUgbGFiZWx8TGFiZWwgZm9yIHRoZSBlbWFpbCBhZGRyZXNzIHR5cGUgZmllbGRAQGJiLXVzZXItdXNlci1lbWFpbC1hZGRyZXNzLXR5cGUtaW5wdXQubGFiZWxcIlxuICAgICAgbGFiZWw9XCJFbWFpbCBhZGRyZXNzIHR5cGVcIlxuICAgICAgW29wdGlvbnNdPVwiaG9zdFJlZi5lbWFpbEFkZHJlc3NUeXBlc1wiXG4gICAgICBbZm9ybUNvbnRyb2xOYW1lXT1cImhvc3RSZWYuZmllbGROYW1lXCJcbiAgICAgIChibHVyKT1cImhvc3RSZWYub25GaWVsZEJsdXIoKVwiXG4gICAgICBbcmVxdWlyZWRdPVwidHJ1ZVwiXG4gICAgICBbYXV0b2ZvY3VzXT1cInRydWVcIj5cbiAgICA8L2JiLWRyb3Bkb3duLXNpbmdsZS1zZWxlY3QtdWk+XG5cbiAgICA8bmctY29udGFpbmVyIGJiVXNlckVtYWlsQWRkcmVzc1R5cGVFcnJvcnNDdXN0b21pemFibGUgW2JiSG9zdFJlZl09XCJob3N0UmVmXCI+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlIGJiVXNlckVtYWlsQWRkcmVzc1R5cGVFcnJvcnNDdXN0b21pemFibGUgbGV0LWhvc3RSZWY+XG4gIDxiYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWkgW3Nob3dFcnJvcnNdPVwiaG9zdFJlZi5oYXNFcnJvcnNcIj5cbiAgICA8c3BhbiAqbmdJZj1cImhvc3RSZWYuZmllbGRDb250cm9sLmVycm9ycz8ucmVxdWlyZWRcIiBpMThuPVwiVHlwZSByZXF1aXJlZCBlcnJvcnxFcnJvciB0byBzYXkgdGhhdCB0eXBlIGlzIGEgcmVxdWlyZWQgZmllbGRAQGJiLXVzZXItdXNlci1lbWFpbC1hZGRyZXNzLXR5cGUtaW5wdXQuZXJyb3JzLnJlcXVpcmVkXCI+XG4gICAgICBZb3UgbXVzdCBlbnRlciBhIHR5cGUuXG4gICAgPC9zcGFuPlxuICA8L2JiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aT5cbjwvbmctdGVtcGxhdGU+XG4iXX0=