import { Component, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { InputBase } from '@backbase/user-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/input-email";
import * as i2 from "@backbase/ui-ang/input-validation-message";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
export class UserEmailAddressInputComponent extends InputBase {
}
UserEmailAddressInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserEmailAddressInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressInputComponent, selector: "bb-user-email-address-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserEmailAddressInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserEmailAddressInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-email-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-email-manage-email\"\n      i18n-label=\"Email address label|Label for the email address field@@bb-user-email-address-input.label\"\n      label=\"Email address\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"255\">\n    </bb-input-email-ui>\n\n    <ng-container bbUserEmailAddressInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserEmailAddressInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Email address required error|Error to say that email address is a required field@@bb-user-email-address-input.errors.required\">\n      You must enter an email address.\n    </span>\n    <span *ngIf=\"hostRef.fieldControl.errors?.email\" i18n=\"Email address format error|Error to say that email address is formatted incorrectly@@bb-user-email-address-input.errors.formatted\">\n      Email address must be in a valid format.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.InputEmailComponent; }), selector: "bb-input-email-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete"] }, { type: i0.forwardRef(function () { return i2.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserEmailAddressInputCustomizableDirective; }), selector: "[bbUserEmailAddressInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserEmailAddressInputErrorsCustomizableDirective; }), selector: "[bbUserEmailAddressInputErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-email-address-input',
                    templateUrl: './user-email-address-input.component.html',
                }]
        }] });
export class UserEmailAddressInputCustomizableDirective extends BbTemplate {
}
UserEmailAddressInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressInputCustomizableDirective, selector: "[bbUserEmailAddressInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressInputCustomizable]',
                }]
        }] });
export class UserEmailAddressInputErrorsCustomizableDirective extends BbTemplate {
}
UserEmailAddressInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserEmailAddressInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserEmailAddressInputErrorsCustomizableDirective, selector: "[bbUserEmailAddressInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserEmailAddressInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserEmailAddressInputErrorsCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1lbWFpbC1hZGRyZXNzLWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1tYW5hZ2UtcHJvZmlsZS13aWRnZXQvc3JjL3VzZXItcHJvZmlsZS1mb3Jtcy91c2VyLXByb2ZpbGUtZm9ybS1pbnB1dHMvZW1haWwtYWRkcmVzcy1pbnB1dHMvdXNlci1lbWFpbC1hZGRyZXNzLWlucHV0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1tYW5hZ2UtcHJvZmlsZS13aWRnZXQvc3JjL3VzZXItcHJvZmlsZS1mb3Jtcy91c2VyLXByb2ZpbGUtZm9ybS1pbnB1dHMvZW1haWwtYWRkcmVzcy1pbnB1dHMvdXNlci1lbWFpbC1hZGRyZXNzLWlucHV0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7OztBQU1sRCxNQUFNLE9BQU8sOEJBQStCLFNBQVEsU0FBUzs7NEhBQWhELDhCQUE4QjtnSEFBOUIsOEJBQThCLDBGQ1IzQywyOUNBK0JBLHFhRGxCYSwwQ0FBMEMsNDlCQUsxQyxnREFBZ0Q7NEZBVmhELDhCQUE4QjtrQkFKMUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxXQUFXLEVBQUUsMkNBQTJDO2lCQUN6RDs7QUFNRCxNQUFNLE9BQU8sMENBQTJDLFNBQVEsVUFBcUQ7O3dJQUF4RywwQ0FBMEM7NEhBQTFDLDBDQUEwQzs0RkFBMUMsMENBQTBDO2tCQUh0RCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx1Q0FBdUM7aUJBQ2xEOztBQU1ELE1BQU0sT0FBTyxnREFBaUQsU0FBUSxVQUdyRTs7OElBSFksZ0RBQWdEO2tJQUFoRCxnREFBZ0Q7NEZBQWhELGdEQUFnRDtrQkFINUQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsNkNBQTZDO2lCQUN4RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRGlyZWN0aXZlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYlRlbXBsYXRlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHsgSW5wdXRCYXNlIH0gZnJvbSAnQGJhY2tiYXNlL3VzZXItY29tbW9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItdXNlci1lbWFpbC1hZGRyZXNzLWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItZW1haWwtYWRkcmVzcy1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJFbWFpbEFkZHJlc3NJbnB1dENvbXBvbmVudCBleHRlbmRzIElucHV0QmFzZSB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJVc2VyRW1haWxBZGRyZXNzSW5wdXRDdXN0b21pemFibGVdJyxcbn0pXG5leHBvcnQgY2xhc3MgVXNlckVtYWlsQWRkcmVzc0lucHV0Q3VzdG9taXphYmxlRGlyZWN0aXZlIGV4dGVuZHMgQmJUZW1wbGF0ZTxVc2VyRW1haWxBZGRyZXNzSW5wdXRDb21wb25lbnQsIHVuZGVmaW5lZD4ge31cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2JiVXNlckVtYWlsQWRkcmVzc0lucHV0RXJyb3JzQ3VzdG9taXphYmxlXScsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJFbWFpbEFkZHJlc3NJbnB1dEVycm9yc0N1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJFbWFpbEFkZHJlc3NJbnB1dENvbXBvbmVudCxcbiAgdW5kZWZpbmVkXG4+IHt9XG4iLCI8bmctY29udGFpbmVyIGJiVXNlckVtYWlsQWRkcmVzc0lucHV0Q3VzdG9taXphYmxlIFtiYkhvc3RSZWZdPVwidGhpc1wiPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSBiYlVzZXJFbWFpbEFkZHJlc3NJbnB1dEN1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIiBbZm9ybUdyb3VwXT1cImhvc3RSZWYuZm9ybUdyb3VwXCI+XG4gICAgPGJiLWlucHV0LWVtYWlsLXVpXG4gICAgICBjbGFzcz1cImJiLWZvcm0tZmllbGQgYmItZm9ybS1maWVsZC0tbWRcIlxuICAgICAgZGF0YS1yb2xlPVwidXNlci1tYW5hZ2UtcHJvZmlsZS1lbWFpbC1tYW5hZ2UtZW1haWxcIlxuICAgICAgaTE4bi1sYWJlbD1cIkVtYWlsIGFkZHJlc3MgbGFiZWx8TGFiZWwgZm9yIHRoZSBlbWFpbCBhZGRyZXNzIGZpZWxkQEBiYi11c2VyLWVtYWlsLWFkZHJlc3MtaW5wdXQubGFiZWxcIlxuICAgICAgbGFiZWw9XCJFbWFpbCBhZGRyZXNzXCJcbiAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiaG9zdFJlZi5maWVsZE5hbWVcIlxuICAgICAgKGJsdXIpPVwiaG9zdFJlZi5vbkZpZWxkQmx1cigpXCJcbiAgICAgIFtyZXF1aXJlZF09XCJ0cnVlXCJcbiAgICAgIFttYXhMZW5ndGhdPVwiMjU1XCI+XG4gICAgPC9iYi1pbnB1dC1lbWFpbC11aT5cblxuICAgIDxuZy1jb250YWluZXIgYmJVc2VyRW1haWxBZGRyZXNzSW5wdXRFcnJvcnNDdXN0b21pemFibGUgW2JiSG9zdFJlZl09XCJob3N0UmVmXCI+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlIGJiVXNlckVtYWlsQWRkcmVzc0lucHV0RXJyb3JzQ3VzdG9taXphYmxlIGxldC1ob3N0UmVmPlxuICA8YmItaW5wdXQtdmFsaWRhdGlvbi1tZXNzYWdlLXVpIFtzaG93RXJyb3JzXT1cImhvc3RSZWYuaGFzRXJyb3JzXCI+XG4gICAgPHNwYW4gKm5nSWY9XCJob3N0UmVmLmZpZWxkQ29udHJvbC5lcnJvcnM/LnJlcXVpcmVkXCIgaTE4bj1cIkVtYWlsIGFkZHJlc3MgcmVxdWlyZWQgZXJyb3J8RXJyb3IgdG8gc2F5IHRoYXQgZW1haWwgYWRkcmVzcyBpcyBhIHJlcXVpcmVkIGZpZWxkQEBiYi11c2VyLWVtYWlsLWFkZHJlc3MtaW5wdXQuZXJyb3JzLnJlcXVpcmVkXCI+XG4gICAgICBZb3UgbXVzdCBlbnRlciBhbiBlbWFpbCBhZGRyZXNzLlxuICAgIDwvc3Bhbj5cbiAgICA8c3BhbiAqbmdJZj1cImhvc3RSZWYuZmllbGRDb250cm9sLmVycm9ycz8uZW1haWxcIiBpMThuPVwiRW1haWwgYWRkcmVzcyBmb3JtYXQgZXJyb3J8RXJyb3IgdG8gc2F5IHRoYXQgZW1haWwgYWRkcmVzcyBpcyBmb3JtYXR0ZWQgaW5jb3JyZWN0bHlAQGJiLXVzZXItZW1haWwtYWRkcmVzcy1pbnB1dC5lcnJvcnMuZm9ybWF0dGVkXCI+XG4gICAgICBFbWFpbCBhZGRyZXNzIG11c3QgYmUgaW4gYSB2YWxpZCBmb3JtYXQuXG4gICAgPC9zcGFuPlxuICA8L2JiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aT5cbjwvbmctdGVtcGxhdGU+XG4iXX0=