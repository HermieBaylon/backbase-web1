import { Component, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { InputBase } from '@backbase/user-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/input-text";
import * as i2 from "@backbase/ui-ang/input-validation-message";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
export class UserPostalTownNameInputComponent extends InputBase {
}
UserPostalTownNameInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalTownNameInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalTownNameInputComponent, selector: "bb-user-postal-town-name-input", usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalTownNameInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalTownNameInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-input-text-ui\n      class=\"bb-form-field bb-form-field--md\"\n      data-role=\"user-manage-profile-postal-manage-city\"\n      i18n-label=\"Town name label|Label for the town name field@@bb-user-postal-town-name-input.label\"\n      label=\"City or town\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [maxLength]=\"35\">\n    </bb-input-text-ui>\n\n    <ng-container bbUserPostalTownNameInputErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalTownNameInputErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Town name required error|Error to say that postal town name is a required field@@bb-user-postal-town-name-input.errors.required\">\n      You must enter a value for City or town.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.InputTextComponent; }), selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i0.forwardRef(function () { return i2.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPostalTownNameInputCustomizableDirective; }), selector: "[bbUserPostalTownNameInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPostalTownNameInputErrorsCustomizableDirective; }), selector: "[bbUserPostalTownNameInputErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-town-name-input',
                    templateUrl: './user-postal-town-name-input.component.html',
                }]
        }] });
export class UserPostalTownNameInputCustomizableDirective extends BbTemplate {
}
UserPostalTownNameInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalTownNameInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalTownNameInputCustomizableDirective, selector: "[bbUserPostalTownNameInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalTownNameInputCustomizable]',
                }]
        }] });
export class UserPostalTownNameInputErrorsCustomizableDirective extends BbTemplate {
}
UserPostalTownNameInputErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalTownNameInputErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalTownNameInputErrorsCustomizableDirective, selector: "[bbUserPostalTownNameInputErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalTownNameInputErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalTownNameInputErrorsCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1wb3N0YWwtdG93bi1uYW1lLWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1tYW5hZ2UtcHJvZmlsZS13aWRnZXQvc3JjL3VzZXItcHJvZmlsZS1mb3Jtcy91c2VyLXByb2ZpbGUtZm9ybS1pbnB1dHMvcG9zdGFsLWFkZHJlc3MtaW5wdXRzL3VzZXItcG9zdGFsLXRvd24tbmFtZS1pbnB1dC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VzZXItbWFuYWdlLXByb2ZpbGUtd2lkZ2V0L3NyYy91c2VyLXByb2ZpbGUtZm9ybXMvdXNlci1wcm9maWxlLWZvcm0taW5wdXRzL3Bvc3RhbC1hZGRyZXNzLWlucHV0cy91c2VyLXBvc3RhbC10b3duLW5hbWUtaW5wdXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzNELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7O0FBTWxELE1BQU0sT0FBTyxnQ0FBaUMsU0FBUSxTQUFTOzs4SEFBbEQsZ0NBQWdDO2tIQUFoQyxnQ0FBZ0MsNkZDUjdDLG11Q0E0QkEseWVEZmEsNENBQTRDLDg5QkFRNUMsa0RBQWtEOzRGQWJsRCxnQ0FBZ0M7a0JBSjVDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdDQUFnQztvQkFDMUMsV0FBVyxFQUFFLDhDQUE4QztpQkFDNUQ7O0FBTUQsTUFBTSxPQUFPLDRDQUE2QyxTQUFRLFVBR2pFOzswSUFIWSw0Q0FBNEM7OEhBQTVDLDRDQUE0Qzs0RkFBNUMsNENBQTRDO2tCQUh4RCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx5Q0FBeUM7aUJBQ3BEOztBQVNELE1BQU0sT0FBTyxrREFBbUQsU0FBUSxVQUd2RTs7Z0pBSFksa0RBQWtEO29JQUFsRCxrREFBa0Q7NEZBQWxELGtEQUFrRDtrQkFIOUQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsK0NBQStDO2lCQUMxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRGlyZWN0aXZlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYlRlbXBsYXRlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHsgSW5wdXRCYXNlIH0gZnJvbSAnQGJhY2tiYXNlL3VzZXItY29tbW9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItdXNlci1wb3N0YWwtdG93bi1uYW1lLWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItcG9zdGFsLXRvd24tbmFtZS1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJQb3N0YWxUb3duTmFtZUlucHV0Q29tcG9uZW50IGV4dGVuZHMgSW5wdXRCYXNlIHt9XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYlVzZXJQb3N0YWxUb3duTmFtZUlucHV0Q3VzdG9taXphYmxlXScsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJQb3N0YWxUb3duTmFtZUlucHV0Q3VzdG9taXphYmxlRGlyZWN0aXZlIGV4dGVuZHMgQmJUZW1wbGF0ZTxcbiAgVXNlclBvc3RhbFRvd25OYW1lSW5wdXRDb21wb25lbnQsXG4gIHVuZGVmaW5lZFxuPiB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJVc2VyUG9zdGFsVG93bk5hbWVJbnB1dEVycm9yc0N1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBVc2VyUG9zdGFsVG93bk5hbWVJbnB1dEVycm9yc0N1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJQb3N0YWxUb3duTmFtZUlucHV0Q29tcG9uZW50LFxuICB1bmRlZmluZWRcbj4ge31cbiIsIjxuZy1jb250YWluZXIgYmJVc2VyUG9zdGFsVG93bk5hbWVJbnB1dEN1c3RvbWl6YWJsZSBbYmJIb3N0UmVmXT1cInRoaXNcIj5cbjwvbmctY29udGFpbmVyPlxuXG48bmctdGVtcGxhdGUgYmJVc2VyUG9zdGFsVG93bk5hbWVJbnB1dEN1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIiBbZm9ybUdyb3VwXT1cImhvc3RSZWYuZm9ybUdyb3VwXCI+XG4gICAgPGJiLWlucHV0LXRleHQtdWlcbiAgICAgIGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1tZFwiXG4gICAgICBkYXRhLXJvbGU9XCJ1c2VyLW1hbmFnZS1wcm9maWxlLXBvc3RhbC1tYW5hZ2UtY2l0eVwiXG4gICAgICBpMThuLWxhYmVsPVwiVG93biBuYW1lIGxhYmVsfExhYmVsIGZvciB0aGUgdG93biBuYW1lIGZpZWxkQEBiYi11c2VyLXBvc3RhbC10b3duLW5hbWUtaW5wdXQubGFiZWxcIlxuICAgICAgbGFiZWw9XCJDaXR5IG9yIHRvd25cIlxuICAgICAgW2Zvcm1Db250cm9sTmFtZV09XCJob3N0UmVmLmZpZWxkTmFtZVwiXG4gICAgICAoYmx1cik9XCJob3N0UmVmLm9uRmllbGRCbHVyKClcIlxuICAgICAgW3JlcXVpcmVkXT1cInRydWVcIlxuICAgICAgW21heExlbmd0aF09XCIzNVwiPlxuICAgIDwvYmItaW5wdXQtdGV4dC11aT5cblxuICAgIDxuZy1jb250YWluZXIgYmJVc2VyUG9zdGFsVG93bk5hbWVJbnB1dEVycm9yc0N1c3RvbWl6YWJsZSBbYmJIb3N0UmVmXT1cImhvc3RSZWZcIj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgYmJVc2VyUG9zdGFsVG93bk5hbWVJbnB1dEVycm9yc0N1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGJiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aSBbc2hvd0Vycm9yc109XCJob3N0UmVmLmhhc0Vycm9yc1wiPlxuICAgIDxzcGFuICpuZ0lmPVwiaG9zdFJlZi5maWVsZENvbnRyb2wuZXJyb3JzPy5yZXF1aXJlZFwiIGkxOG49XCJUb3duIG5hbWUgcmVxdWlyZWQgZXJyb3J8RXJyb3IgdG8gc2F5IHRoYXQgcG9zdGFsIHRvd24gbmFtZSBpcyBhIHJlcXVpcmVkIGZpZWxkQEBiYi11c2VyLXBvc3RhbC10b3duLW5hbWUtaW5wdXQuZXJyb3JzLnJlcXVpcmVkXCI+XG4gICAgICBZb3UgbXVzdCBlbnRlciBhIHZhbHVlIGZvciBDaXR5IG9yIHRvd24uXG4gICAgPC9zcGFuPlxuICA8L2JiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aT5cbjwvbmctdGVtcGxhdGU+XG4iXX0=