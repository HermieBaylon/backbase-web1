import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { InputBase } from '@backbase/user-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/dropdown-single-select";
import * as i2 from "@backbase/ui-ang/input-validation-message";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
export class UserPostalAddressTypeInputComponent extends InputBase {
    ngOnInit() {
        if (this.postalAddressTypes && !this.postalAddressTypes.includes(this.fieldControl.value)) {
            this.fieldControl.setValue(this.postalAddressTypes[0]);
        }
    }
}
UserPostalAddressTypeInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPostalAddressTypeInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressTypeInputComponent, selector: "bb-user-postal-address-type-input", inputs: { postalAddressTypes: "postalAddressTypes" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPostalAddressTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPostalAddressTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-postal-manage-type\"\n      i18n-label=\"Postal address type label|Label for the postal address type field@@bb-user-user-postal-address-type-input.label\"\n      label=\"Address type\"\n      [options]=\"hostRef.postalAddressTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserPostalAddressTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPostalAddressTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0.forwardRef(function () { return i2.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPostalAddressTypeInputCustomizableDirective; }), selector: "[bbUserPostalAddressTypeInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPostalAddressTypeErrorsCustomizableDirective; }), selector: "[bbUserPostalAddressTypeErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-postal-address-type-input',
                    templateUrl: './user-postal-address-type-input.component.html',
                }]
        }], propDecorators: { postalAddressTypes: [{
                type: Input
            }] } });
export class UserPostalAddressTypeInputCustomizableDirective extends BbTemplate {
}
UserPostalAddressTypeInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalAddressTypeInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressTypeInputCustomizableDirective, selector: "[bbUserPostalAddressTypeInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalAddressTypeInputCustomizable]',
                }]
        }] });
export class UserPostalAddressTypeErrorsCustomizableDirective extends BbTemplate {
}
UserPostalAddressTypeErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPostalAddressTypeErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPostalAddressTypeErrorsCustomizableDirective, selector: "[bbUserPostalAddressTypeErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPostalAddressTypeErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPostalAddressTypeErrorsCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1wb3N0YWwtYWRkcmVzcy10eXBlLWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1tYW5hZ2UtcHJvZmlsZS13aWRnZXQvc3JjL3VzZXItcHJvZmlsZS1mb3Jtcy91c2VyLXByb2ZpbGUtZm9ybS1pbnB1dHMvcG9zdGFsLWFkZHJlc3MtaW5wdXRzL3VzZXItcG9zdGFsLWFkZHJlc3MtdHlwZS1pbnB1dC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VzZXItbWFuYWdlLXByb2ZpbGUtd2lkZ2V0L3NyYy91c2VyLXByb2ZpbGUtZm9ybXMvdXNlci1wcm9maWxlLWZvcm0taW5wdXRzL3Bvc3RhbC1hZGRyZXNzLWlucHV0cy91c2VyLXBvc3RhbC1hZGRyZXNzLXR5cGUtaW5wdXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7OztBQU1sRCxNQUFNLE9BQU8sbUNBQW9DLFNBQVEsU0FBUztJQU1oRSxRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsa0JBQWtCLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDekYsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDeEQ7SUFDSCxDQUFDOztpSUFWVSxtQ0FBbUM7cUhBQW5DLG1DQUFtQyxzSkNSaEQsK3lDQTZCQSxrZURMYSwrQ0FBK0MsaStCQVEvQyxnREFBZ0Q7NEZBeEJoRCxtQ0FBbUM7a0JBSi9DLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG1DQUFtQztvQkFDN0MsV0FBVyxFQUFFLGlEQUFpRDtpQkFDL0Q7OEJBS1Usa0JBQWtCO3NCQUExQixLQUFLOztBQVlSLE1BQU0sT0FBTywrQ0FBZ0QsU0FBUSxVQUdwRTs7NklBSFksK0NBQStDO2lJQUEvQywrQ0FBK0M7NEZBQS9DLCtDQUErQztrQkFIM0QsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsNENBQTRDO2lCQUN2RDs7QUFTRCxNQUFNLE9BQU8sZ0RBQWlELFNBQVEsVUFHckU7OzhJQUhZLGdEQUFnRDtrSUFBaEQsZ0RBQWdEOzRGQUFoRCxnREFBZ0Q7a0JBSDVELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDZDQUE2QztpQkFDeEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERpcmVjdGl2ZSwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmJUZW1wbGF0ZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlJztcbmltcG9ydCB7IElucHV0QmFzZSB9IGZyb20gJ0BiYWNrYmFzZS91c2VyLWNvbW1vbic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLXVzZXItcG9zdGFsLWFkZHJlc3MtdHlwZS1pbnB1dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi91c2VyLXBvc3RhbC1hZGRyZXNzLXR5cGUtaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBVc2VyUG9zdGFsQWRkcmVzc1R5cGVJbnB1dENvbXBvbmVudCBleHRlbmRzIElucHV0QmFzZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIC8qKlxuICAgKiBUaGUgbGlzdCBvZiBwb3N0YWwgYWRkcmVzcyB0eXBlcy5cbiAgICovXG4gIEBJbnB1dCgpIHBvc3RhbEFkZHJlc3NUeXBlczogQXJyYXk8c3RyaW5nPiB8IHVuZGVmaW5lZDtcblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wb3N0YWxBZGRyZXNzVHlwZXMgJiYgIXRoaXMucG9zdGFsQWRkcmVzc1R5cGVzLmluY2x1ZGVzKHRoaXMuZmllbGRDb250cm9sLnZhbHVlKSkge1xuICAgICAgdGhpcy5maWVsZENvbnRyb2wuc2V0VmFsdWUodGhpcy5wb3N0YWxBZGRyZXNzVHlwZXNbMF0pO1xuICAgIH1cbiAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJVc2VyUG9zdGFsQWRkcmVzc1R5cGVJbnB1dEN1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBVc2VyUG9zdGFsQWRkcmVzc1R5cGVJbnB1dEN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJQb3N0YWxBZGRyZXNzVHlwZUlucHV0Q29tcG9uZW50LFxuICB1bmRlZmluZWRcbj4ge31cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2JiVXNlclBvc3RhbEFkZHJlc3NUeXBlRXJyb3JzQ3VzdG9taXphYmxlXScsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJQb3N0YWxBZGRyZXNzVHlwZUVycm9yc0N1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJQb3N0YWxBZGRyZXNzVHlwZUlucHV0Q29tcG9uZW50LFxuICB1bmRlZmluZWRcbj4ge31cbiIsIjxuZy1jb250YWluZXIgYmJVc2VyUG9zdGFsQWRkcmVzc1R5cGVJbnB1dEN1c3RvbWl6YWJsZSBbYmJIb3N0UmVmXT1cInRoaXNcIj5cbjwvbmctY29udGFpbmVyPlxuXG48bmctdGVtcGxhdGUgYmJVc2VyUG9zdGFsQWRkcmVzc1R5cGVJbnB1dEN1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIiBbZm9ybUdyb3VwXT1cImhvc3RSZWYuZm9ybUdyb3VwXCI+XG4gICAgPGJiLWRyb3Bkb3duLXNpbmdsZS1zZWxlY3QtdWlcbiAgICAgIGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1zbVwiXG4gICAgICBkYXRhLXJvbGU9XCJ1c2VyLW1hbmFnZS1wcm9maWxlLXBvc3RhbC1tYW5hZ2UtdHlwZVwiXG4gICAgICBpMThuLWxhYmVsPVwiUG9zdGFsIGFkZHJlc3MgdHlwZSBsYWJlbHxMYWJlbCBmb3IgdGhlIHBvc3RhbCBhZGRyZXNzIHR5cGUgZmllbGRAQGJiLXVzZXItdXNlci1wb3N0YWwtYWRkcmVzcy10eXBlLWlucHV0LmxhYmVsXCJcbiAgICAgIGxhYmVsPVwiQWRkcmVzcyB0eXBlXCJcbiAgICAgIFtvcHRpb25zXT1cImhvc3RSZWYucG9zdGFsQWRkcmVzc1R5cGVzXCJcbiAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwiaG9zdFJlZi5maWVsZE5hbWVcIlxuICAgICAgKGJsdXIpPVwiaG9zdFJlZi5vbkZpZWxkQmx1cigpXCJcbiAgICAgIFtyZXF1aXJlZF09XCJ0cnVlXCJcbiAgICAgIFthdXRvZm9jdXNdPVwidHJ1ZVwiPlxuICAgIDwvYmItZHJvcGRvd24tc2luZ2xlLXNlbGVjdC11aT5cblxuICAgIDxuZy1jb250YWluZXIgYmJVc2VyUG9zdGFsQWRkcmVzc1R5cGVFcnJvcnNDdXN0b21pemFibGUgW2JiSG9zdFJlZl09XCJob3N0UmVmXCI+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlIGJiVXNlclBvc3RhbEFkZHJlc3NUeXBlRXJyb3JzQ3VzdG9taXphYmxlIGxldC1ob3N0UmVmPlxuICA8YmItaW5wdXQtdmFsaWRhdGlvbi1tZXNzYWdlLXVpIFtzaG93RXJyb3JzXT1cImhvc3RSZWYuaGFzRXJyb3JzXCI+XG4gICAgPHNwYW4gKm5nSWY9XCJob3N0UmVmLmZpZWxkQ29udHJvbC5lcnJvcnM/LnJlcXVpcmVkXCIgaTE4bj1cIlR5cGUgcmVxdWlyZWQgZXJyb3J8RXJyb3IgdG8gc2F5IHRoYXQgdHlwZSBpcyBhIHJlcXVpcmVkIGZpZWxkQEBiYi11c2VyLXVzZXItZW1haWwtYWRkcmVzcy10eXBlLWlucHV0LmVycm9ycy5yZXF1aXJlZFwiPlxuICAgICAgWW91IG11c3QgZW50ZXIgYSB0eXBlLlxuICAgIDwvc3Bhbj5cbiAgPC9iYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWk+XG48L25nLXRlbXBsYXRlPlxuIl19