import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { InputBase } from '@backbase/user-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/dropdown-single-select";
import * as i2 from "@backbase/ui-ang/input-validation-message";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
export class UserPhoneNumberTypeInputComponent extends InputBase {
    ngOnInit() {
        if (this.phoneNumberTypes && !this.phoneNumberTypes.includes(this.fieldControl.value)) {
            this.fieldControl.setValue(this.phoneNumberTypes[0]);
        }
    }
}
UserPhoneNumberTypeInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeInputComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
UserPhoneNumberTypeInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberTypeInputComponent, selector: "bb-user-phone-number-type-input", inputs: { phoneNumberTypes: "phoneNumberTypes" }, usesInheritance: true, ngImport: i0, template: "<ng-container bbUserPhoneNumberTypeInputCustomizable [bbHostRef]=\"this\">\n</ng-container>\n\n<ng-template bbUserPhoneNumberTypeInputCustomizable let-hostRef>\n  <div class=\"form-group\" [formGroup]=\"hostRef.formGroup\">\n    <bb-dropdown-single-select-ui\n      class=\"bb-form-field bb-form-field--sm\"\n      data-role=\"user-manage-profile-phone-manage-type\"\n      i18n-label=\"Phone number type label|Label for the phone number type field@@bb-user-user-phone-number-type-input.label\"\n      label=\"Phone number type\"\n      [options]=\"hostRef.phoneNumberTypes\"\n      [formControlName]=\"hostRef.fieldName\"\n      (blur)=\"hostRef.onFieldBlur()\"\n      [required]=\"true\"\n      [autofocus]=\"true\">\n    </bb-dropdown-single-select-ui>\n\n    <ng-container bbUserPhoneNumberTypeErrorsCustomizable [bbHostRef]=\"hostRef\">\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template bbUserPhoneNumberTypeErrorsCustomizable let-hostRef>\n  <bb-input-validation-message-ui [showErrors]=\"hostRef.hasErrors\">\n    <span *ngIf=\"hostRef.fieldControl.errors?.required\" i18n=\"Type required error|Error to say that type is a required field@@bb-user-user-email-address-type-input.errors.required\">\n      You must enter a type.\n    </span>\n  </bb-input-validation-message-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.DropdownSingleSelectComponent; }), selector: "bb-dropdown-single-select-ui", inputs: ["placeholder", "defaultOptionAsPlaceholder", "options", "displayAttributePath", "iconName", "compareWithFn"] }, { type: i0.forwardRef(function () { return i2.InputValidationMessageComponent; }), selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i0.forwardRef(function () { return UserPhoneNumberTypeInputCustomizableDirective; }), selector: "[bbUserPhoneNumberTypeInputCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i3.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i3.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i3.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i3.RequiredValidator; }), selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i0.forwardRef(function () { return UserPhoneNumberTypeErrorsCustomizableDirective; }), selector: "[bbUserPhoneNumberTypeErrorsCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeInputComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-phone-number-type-input',
                    templateUrl: './user-phone-number-type-input.component.html',
                }]
        }], propDecorators: { phoneNumberTypes: [{
                type: Input
            }] } });
export class UserPhoneNumberTypeInputCustomizableDirective extends BbTemplate {
}
UserPhoneNumberTypeInputCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeInputCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPhoneNumberTypeInputCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberTypeInputCustomizableDirective, selector: "[bbUserPhoneNumberTypeInputCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeInputCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPhoneNumberTypeInputCustomizable]',
                }]
        }] });
export class UserPhoneNumberTypeErrorsCustomizableDirective extends BbTemplate {
}
UserPhoneNumberTypeErrorsCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeErrorsCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
UserPhoneNumberTypeErrorsCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: UserPhoneNumberTypeErrorsCustomizableDirective, selector: "[bbUserPhoneNumberTypeErrorsCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserPhoneNumberTypeErrorsCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbUserPhoneNumberTypeErrorsCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1waG9uZS1udW1iZXItdHlwZS1pbnB1dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VzZXItbWFuYWdlLXByb2ZpbGUtd2lkZ2V0L3NyYy91c2VyLXByb2ZpbGUtZm9ybXMvdXNlci1wcm9maWxlLWZvcm0taW5wdXRzL3Bob25lLW51bWJlci1pbnB1dHMvdXNlci1waG9uZS1udW1iZXItdHlwZS1pbnB1dC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3VzZXItbWFuYWdlLXByb2ZpbGUtd2lkZ2V0L3NyYy91c2VyLXByb2ZpbGUtZm9ybXMvdXNlci1wcm9maWxlLWZvcm0taW5wdXRzL3Bob25lLW51bWJlci1pbnB1dHMvdXNlci1waG9uZS1udW1iZXItdHlwZS1pbnB1dC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzNELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7O0FBTWxELE1BQU0sT0FBTyxpQ0FBa0MsU0FBUSxTQUFTO0lBTTlELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyRixJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN0RDtJQUNILENBQUM7OytIQVZVLGlDQUFpQzttSEFBakMsaUNBQWlDLGdKQ1I5QyxteUNBNkJBLGtlRExhLDZDQUE2QywrOUJBUTdDLDhDQUE4Qzs0RkF4QjlDLGlDQUFpQztrQkFKN0MsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUNBQWlDO29CQUMzQyxXQUFXLEVBQUUsK0NBQStDO2lCQUM3RDs4QkFLVSxnQkFBZ0I7c0JBQXhCLEtBQUs7O0FBWVIsTUFBTSxPQUFPLDZDQUE4QyxTQUFRLFVBR2xFOzsySUFIWSw2Q0FBNkM7K0hBQTdDLDZDQUE2Qzs0RkFBN0MsNkNBQTZDO2tCQUh6RCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSwwQ0FBMEM7aUJBQ3JEOztBQVNELE1BQU0sT0FBTyw4Q0FBK0MsU0FBUSxVQUduRTs7NElBSFksOENBQThDO2dJQUE5Qyw4Q0FBOEM7NEZBQTlDLDhDQUE4QztrQkFIMUQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsMkNBQTJDO2lCQUN0RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRGlyZWN0aXZlLCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYlRlbXBsYXRlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHsgSW5wdXRCYXNlIH0gZnJvbSAnQGJhY2tiYXNlL3VzZXItY29tbW9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItdXNlci1waG9uZS1udW1iZXItdHlwZS1pbnB1dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi91c2VyLXBob25lLW51bWJlci10eXBlLWlucHV0LmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgVXNlclBob25lTnVtYmVyVHlwZUlucHV0Q29tcG9uZW50IGV4dGVuZHMgSW5wdXRCYXNlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgLyoqXG4gICAqIFRoZSBsaXN0IG9mIHBob25lIG51bWJlciB0eXBlcy5cbiAgICovXG4gIEBJbnB1dCgpIHBob25lTnVtYmVyVHlwZXM6IEFycmF5PHN0cmluZz4gfCB1bmRlZmluZWQ7XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMucGhvbmVOdW1iZXJUeXBlcyAmJiAhdGhpcy5waG9uZU51bWJlclR5cGVzLmluY2x1ZGVzKHRoaXMuZmllbGRDb250cm9sLnZhbHVlKSkge1xuICAgICAgdGhpcy5maWVsZENvbnRyb2wuc2V0VmFsdWUodGhpcy5waG9uZU51bWJlclR5cGVzWzBdKTtcbiAgICB9XG4gIH1cbn1cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2JiVXNlclBob25lTnVtYmVyVHlwZUlucHV0Q3VzdG9taXphYmxlXScsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJQaG9uZU51bWJlclR5cGVJbnB1dEN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJQaG9uZU51bWJlclR5cGVJbnB1dENvbXBvbmVudCxcbiAgdW5kZWZpbmVkXG4+IHt9XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYlVzZXJQaG9uZU51bWJlclR5cGVFcnJvcnNDdXN0b21pemFibGVdJyxcbn0pXG5leHBvcnQgY2xhc3MgVXNlclBob25lTnVtYmVyVHlwZUVycm9yc0N1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFVzZXJQaG9uZU51bWJlclR5cGVJbnB1dENvbXBvbmVudCxcbiAgdW5kZWZpbmVkXG4+IHt9XG4iLCI8bmctY29udGFpbmVyIGJiVXNlclBob25lTnVtYmVyVHlwZUlucHV0Q3VzdG9taXphYmxlIFtiYkhvc3RSZWZdPVwidGhpc1wiPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSBiYlVzZXJQaG9uZU51bWJlclR5cGVJbnB1dEN1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIiBbZm9ybUdyb3VwXT1cImhvc3RSZWYuZm9ybUdyb3VwXCI+XG4gICAgPGJiLWRyb3Bkb3duLXNpbmdsZS1zZWxlY3QtdWlcbiAgICAgIGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1zbVwiXG4gICAgICBkYXRhLXJvbGU9XCJ1c2VyLW1hbmFnZS1wcm9maWxlLXBob25lLW1hbmFnZS10eXBlXCJcbiAgICAgIGkxOG4tbGFiZWw9XCJQaG9uZSBudW1iZXIgdHlwZSBsYWJlbHxMYWJlbCBmb3IgdGhlIHBob25lIG51bWJlciB0eXBlIGZpZWxkQEBiYi11c2VyLXVzZXItcGhvbmUtbnVtYmVyLXR5cGUtaW5wdXQubGFiZWxcIlxuICAgICAgbGFiZWw9XCJQaG9uZSBudW1iZXIgdHlwZVwiXG4gICAgICBbb3B0aW9uc109XCJob3N0UmVmLnBob25lTnVtYmVyVHlwZXNcIlxuICAgICAgW2Zvcm1Db250cm9sTmFtZV09XCJob3N0UmVmLmZpZWxkTmFtZVwiXG4gICAgICAoYmx1cik9XCJob3N0UmVmLm9uRmllbGRCbHVyKClcIlxuICAgICAgW3JlcXVpcmVkXT1cInRydWVcIlxuICAgICAgW2F1dG9mb2N1c109XCJ0cnVlXCI+XG4gICAgPC9iYi1kcm9wZG93bi1zaW5nbGUtc2VsZWN0LXVpPlxuXG4gICAgPG5nLWNvbnRhaW5lciBiYlVzZXJQaG9uZU51bWJlclR5cGVFcnJvcnNDdXN0b21pemFibGUgW2JiSG9zdFJlZl09XCJob3N0UmVmXCI+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlIGJiVXNlclBob25lTnVtYmVyVHlwZUVycm9yc0N1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGJiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aSBbc2hvd0Vycm9yc109XCJob3N0UmVmLmhhc0Vycm9yc1wiPlxuICAgIDxzcGFuICpuZ0lmPVwiaG9zdFJlZi5maWVsZENvbnRyb2wuZXJyb3JzPy5yZXF1aXJlZFwiIGkxOG49XCJUeXBlIHJlcXVpcmVkIGVycm9yfEVycm9yIHRvIHNheSB0aGF0IHR5cGUgaXMgYSByZXF1aXJlZCBmaWVsZEBAYmItdXNlci11c2VyLWVtYWlsLWFkZHJlc3MtdHlwZS1pbnB1dC5lcnJvcnMucmVxdWlyZWRcIj5cbiAgICAgIFlvdSBtdXN0IGVudGVyIGEgdHlwZS5cbiAgICA8L3NwYW4+XG4gIDwvYmItaW5wdXQtdmFsaWRhdGlvbi1tZXNzYWdlLXVpPlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==