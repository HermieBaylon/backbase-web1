import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/alert";
import * as i2 from "@angular/common";
export class UserProfileFormErrorsComponent {
    get hasErrors() {
        if (!this.formGroup) {
            throw new Error('formGroup must be initialised to type FormGroup');
        }
        return Boolean(this.formGroup && this.formGroup.touched && this.hasBeenSubmittedWithErrors);
    }
}
UserProfileFormErrorsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormErrorsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
UserProfileFormErrorsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: UserProfileFormErrorsComponent, selector: "bb-user-profile-form-errors", inputs: { formGroup: "formGroup", hasBeenSubmittedWithErrors: "hasBeenSubmittedWithErrors" }, ngImport: i0, template: "<bb-alert-ui *ngIf=\"hasErrors\" i18n-title=\"Form errors title|Title for the form errors list@@bb-user-email-address-form.errors.title\"\n  title=\"There is a problem, please check the form\">\n  <ng-content></ng-content>\n</bb-alert-ui>", components: [{ type: i1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserProfileFormErrorsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-user-profile-form-errors',
                    templateUrl: './user-profile-form-errors.component.html',
                }]
        }], propDecorators: { formGroup: [{
                type: Input
            }], hasBeenSubmittedWithErrors: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1wcm9maWxlLWZvcm0tZXJyb3JzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1tYW5hZ2UtcHJvZmlsZS13aWRnZXQvc3JjL3VzZXItcHJvZmlsZS1mb3Jtcy91c2VyLXByb2ZpbGUtZm9ybS1lcnJvcnMvdXNlci1wcm9maWxlLWZvcm0tZXJyb3JzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvdXNlci1tYW5hZ2UtcHJvZmlsZS13aWRnZXQvc3JjL3VzZXItcHJvZmlsZS1mb3Jtcy91c2VyLXByb2ZpbGUtZm9ybS1lcnJvcnMvdXNlci1wcm9maWxlLWZvcm0tZXJyb3JzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBT2pELE1BQU0sT0FBTyw4QkFBOEI7SUFVekMsSUFBSSxTQUFTO1FBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbkIsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO1NBQ3BFO1FBRUQsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztJQUM5RixDQUFDOzs0SEFoQlUsOEJBQThCO2dIQUE5Qiw4QkFBOEIsaUtDUDNDLGdQQUdjOzRGRElELDhCQUE4QjtrQkFKMUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QyxXQUFXLEVBQUUsMkNBQTJDO2lCQUN6RDs4QkFLVSxTQUFTO3NCQUFqQixLQUFLO2dCQUlHLDBCQUEwQjtzQkFBbEMsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItdXNlci1wcm9maWxlLWZvcm0tZXJyb3JzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VzZXItcHJvZmlsZS1mb3JtLWVycm9ycy5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJQcm9maWxlRm9ybUVycm9yc0NvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBUaGUgZm9ybSBncm91cCB1c2VkIHRvIGRldGVybWluZSBlcnJvcnMuXG4gICAqL1xuICBASW5wdXQoKSBmb3JtR3JvdXA6IEZvcm1Hcm91cCB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGZvcm0gaGFzIGJlZW4gc3VibWl0dGVkIHdpdGggZXJyb3JzLlxuICAgKi9cbiAgQElucHV0KCkgaGFzQmVlblN1Ym1pdHRlZFdpdGhFcnJvcnM6IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG5cbiAgZ2V0IGhhc0Vycm9ycygpOiBib29sZWFuIHtcbiAgICBpZiAoIXRoaXMuZm9ybUdyb3VwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Zvcm1Hcm91cCBtdXN0IGJlIGluaXRpYWxpc2VkIHRvIHR5cGUgRm9ybUdyb3VwJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy5mb3JtR3JvdXAgJiYgdGhpcy5mb3JtR3JvdXAudG91Y2hlZCAmJiB0aGlzLmhhc0JlZW5TdWJtaXR0ZWRXaXRoRXJyb3JzKTtcbiAgfVxufVxuIiwiPGJiLWFsZXJ0LXVpICpuZ0lmPVwiaGFzRXJyb3JzXCIgaTE4bi10aXRsZT1cIkZvcm0gZXJyb3JzIHRpdGxlfFRpdGxlIGZvciB0aGUgZm9ybSBlcnJvcnMgbGlzdEBAYmItdXNlci1lbWFpbC1hZGRyZXNzLWZvcm0uZXJyb3JzLnRpdGxlXCJcbiAgdGl0bGU9XCJUaGVyZSBpcyBhIHByb2JsZW0sIHBsZWFzZSBjaGVjayB0aGUgZm9ybVwiPlxuICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L2JiLWFsZXJ0LXVpPiJdfQ==