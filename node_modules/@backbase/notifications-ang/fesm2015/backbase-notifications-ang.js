import * as i0 from '@angular/core';
import { Component, Optional, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NotificationsCommonModule } from '@backbase/notifications-common-ang';
import * as i2 from '@backbase/notifications-popups-widget-ang';
import { NotificationsPopupsWidgetModule } from '@backbase/notifications-popups-widget-ang';
import '@angular/localize/init';
import * as i2$1 from '@backbase/notifications-badge-widget-ang';
import { NotificationsBadgeWidgetModule } from '@backbase/notifications-badge-widget-ang';

class NotificationsCommunicationService {
    notificationNavigation(_payload) { }
    openNotificationSettings() { }
}

/* eslint-disable max-len */
const titles = {
    noCommunicationServiceProvidedError: $localize `:@@notifications-badge.communication-service-not-provided-error:CommunicationService is not provided`,
};

class NotificationsPopupsComponent {
    constructor(communicationService) {
        this.communicationService = communicationService;
    }
    /**
     * Method that emits navigation data and triggers navigation.
     */
    navigate(navigationData) {
        if (this.communicationService) {
            this.communicationService.notificationNavigation(navigationData);
        }
        else {
            this.showNoCommunicationServiceProvidedError();
        }
    }
    showNoCommunicationServiceProvidedError() {
        console.warn(titles.noCommunicationServiceProvidedError);
    }
}
/** @nocollapse */ NotificationsPopupsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsPopupsComponent, deps: [{ token: NotificationsCommunicationService, optional: true }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ NotificationsPopupsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsPopupsComponent, selector: "bb-notifications-popups", inputs: { origins: "origins", severityLevels: "severityLevels", pollingInterval: "pollingInterval", allowedRoutes: "allowedRoutes", autofocus: "autofocus", displayShowMoreButtonInPopup: "displayShowMoreButtonInPopup", popupMessageLineAmount: "popupMessageLineAmount" }, ngImport: i0, template: "<bb-notifications-popups-widget\n  [origins]=\"origins\"\n  [severityLevels]=\"severityLevels\"\n  [pollingInterval]=\"pollingInterval\"\n  [allowedRoutes]=\"allowedRoutes\"\n  [autofocus]=\"autofocus\"\n  [displayShowMoreButtonInPopup]=\"displayShowMoreButtonInPopup\"\n  [popupMessageLineAmount]=\"popupMessageLineAmount\"\n  (notificationRouting)=\"navigate($event)\"\n></bb-notifications-popups-widget>\n", components: [{ type: i2.NotificationsPopupsWidgetComponent, selector: "bb-notifications-popups-widget", inputs: ["origins", "severityLevels", "pollingInterval", "allowedRoutes", "autofocus", "displayShowMoreButtonInPopup", "popupMessageLineAmount"], outputs: ["notificationRouting"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsPopupsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-notifications-popups',
                    templateUrl: './notifications-popups.component.html',
                }]
        }], ctorParameters: function () { return [{ type: NotificationsCommunicationService, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { origins: [{
                type: Input
            }], severityLevels: [{
                type: Input
            }], pollingInterval: [{
                type: Input
            }], allowedRoutes: [{
                type: Input
            }], autofocus: [{
                type: Input
            }], displayShowMoreButtonInPopup: [{
                type: Input
            }], popupMessageLineAmount: [{
                type: Input
            }] } });

const modules$1 = [NotificationsCommonModule, NotificationsPopupsWidgetModule];
class NotificationsPopupsModule {
}
/** @nocollapse */ NotificationsPopupsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsPopupsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ NotificationsPopupsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsPopupsModule, declarations: [NotificationsPopupsComponent], imports: [CommonModule, NotificationsCommonModule, NotificationsPopupsWidgetModule], exports: [NotificationsPopupsComponent] });
/** @nocollapse */ NotificationsPopupsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsPopupsModule, imports: [[CommonModule, ...modules$1]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsPopupsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...modules$1],
                    declarations: [NotificationsPopupsComponent],
                    exports: [NotificationsPopupsComponent],
                }]
        }] });

class NotificationsBadgeComponent {
    constructor(communicationService) {
        this.communicationService = communicationService;
    }
    /**
     * Method that emits event to open Notification Preferences.
     */
    openNotificationSettings() {
        if (this.communicationService) {
            this.communicationService.openNotificationSettings();
        }
        else {
            this.showNoCommunicationServiceProvidedError();
        }
    }
    /**
     * Method that emits navigation data and triggers navigation.
     */
    navigate(navigationData) {
        if (this.communicationService) {
            this.communicationService.notificationNavigation(navigationData);
        }
        else {
            this.showNoCommunicationServiceProvidedError();
        }
    }
    showNoCommunicationServiceProvidedError() {
        console.warn(titles.noCommunicationServiceProvidedError);
    }
}
/** @nocollapse */ NotificationsBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsBadgeComponent, deps: [{ token: NotificationsCommunicationService, optional: true }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ NotificationsBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsBadgeComponent, selector: "bb-notifications-badge", inputs: { preselectedNotification: "preselectedNotification", notificationsMessageLineAmount: "notificationsMessageLineAmount", displayRelativeTime: "displayRelativeTime", displayShowMoreButtonInBadge: "displayShowMoreButtonInBadge", allowedRoutes: "allowedRoutes", displaySettingsButton: "displaySettingsButton", pageSize: "pageSize", origins: "origins", severityLevels: "severityLevels", unreadCountUpdateInterval: "unreadCountUpdateInterval", dateFormat: "dateFormat" }, ngImport: i0, template: "<bb-notifications-badge-widget\n  [preselectedNotification]=\"preselectedNotification\"\n  [notificationsMessageLineAmount]=\"notificationsMessageLineAmount\"\n  [displayRelativeTime]=\"displayRelativeTime\"\n  [displayShowMoreButtonInBadge]=\"displayShowMoreButtonInBadge\"\n  [allowedRoutes]=\"allowedRoutes\"\n  [displaySettingsButton]=\"displaySettingsButton\"\n  [pageSize]=\"pageSize\"\n  [origins]=\"origins\"\n  [severityLevels]=\"severityLevels\"\n  [dateFormat]=\"dateFormat\"\n  [unreadCountUpdateInterval]=\"unreadCountUpdateInterval\"\n  (notificationsSettingsOpened)=\"openNotificationSettings()\"\n  (notificationRouting)=\"navigate($event)\"\n></bb-notifications-badge-widget>\n", components: [{ type: i2$1.NotificationsBadgeWidgetComponent, selector: "bb-notifications-badge-widget", inputs: ["preselectedNotification", "notificationsMessageLineAmount", "displayRelativeTime", "displayShowMoreButtonInBadge", "allowedRoutes", "displaySettingsButton", "pageSize", "origins", "severityLevels", "unreadCountUpdateInterval", "dateFormat"], outputs: ["notificationsSettingsOpened", "notificationRouting"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsBadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-notifications-badge',
                    templateUrl: './notifications-badge.component.html',
                }]
        }], ctorParameters: function () { return [{ type: NotificationsCommunicationService, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { preselectedNotification: [{
                type: Input
            }], notificationsMessageLineAmount: [{
                type: Input
            }], displayRelativeTime: [{
                type: Input
            }], displayShowMoreButtonInBadge: [{
                type: Input
            }], allowedRoutes: [{
                type: Input
            }], displaySettingsButton: [{
                type: Input
            }], pageSize: [{
                type: Input
            }], origins: [{
                type: Input
            }], severityLevels: [{
                type: Input
            }], unreadCountUpdateInterval: [{
                type: Input
            }], dateFormat: [{
                type: Input
            }] } });

const modules = [NotificationsCommonModule, NotificationsBadgeWidgetModule];
class NotificationsBadgeModule {
}
/** @nocollapse */ NotificationsBadgeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ NotificationsBadgeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsBadgeModule, declarations: [NotificationsBadgeComponent], imports: [CommonModule, NotificationsCommonModule, NotificationsBadgeWidgetModule], exports: [NotificationsBadgeComponent] });
/** @nocollapse */ NotificationsBadgeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsBadgeModule, imports: [[CommonModule, ...modules]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsBadgeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...modules],
                    declarations: [NotificationsBadgeComponent],
                    exports: [NotificationsBadgeComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NotificationsBadgeComponent, NotificationsBadgeModule, NotificationsCommunicationService, NotificationsPopupsComponent, NotificationsPopupsModule };
//# sourceMappingURL=backbase-notifications-ang.js.map
