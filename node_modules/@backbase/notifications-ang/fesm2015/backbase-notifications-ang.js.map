{"version":3,"file":"backbase-notifications-ang.js","sources":["../../../../libs/notifications-ang/src/lib/notifications-common-ang/src/services/notifications-communication.service.ts","../../../../libs/notifications-ang/src/lib/notifications-common-ang/src/config/titles.config.ts","../../../../libs/notifications-ang/src/lib/notifications-popups-ang/src/components/notifications-popups.component.ts","../../../../libs/notifications-ang/src/lib/notifications-popups-ang/src/components/notifications-popups.component.html","../../../../libs/notifications-ang/src/lib/notifications-popups-ang/src/notifications-popups.module.ts","../../../../libs/notifications-ang/src/lib/notifications-badge-ang/src/components/notifications-badge.component.ts","../../../../libs/notifications-ang/src/lib/notifications-badge-ang/src/components/notifications-badge.component.html","../../../../libs/notifications-ang/src/lib/notifications-badge-ang/src/notifications-badge.module.ts","../../../../libs/notifications-ang/src/backbase-notifications-ang.ts"],"sourcesContent":["import { NotificationRouting } from '../models/notification-routing';\n\nexport abstract class NotificationsCommunicationService {\n  notificationNavigation(_payload: NotificationRouting): void {}\n  openNotificationSettings(): void {}\n}\n","import '@angular/localize/init';\n\n/* eslint-disable max-len */\nexport const titles = {\n  noCommunicationServiceProvidedError: $localize`:@@notifications-badge.communication-service-not-provided-error:CommunicationService is not provided`,\n};\n","import { Component, Input, Optional } from '@angular/core';\nimport { NotificationsCommunicationService } from '../../../notifications-common-ang/src/services/notifications-communication.service';\nimport { titles } from '../../../notifications-common-ang/src/config/titles.config';\nimport { NotificationRouting } from '../../../notifications-common-ang/src/models/notification-routing';\n\n@Component({\n  selector: 'bb-notifications-popups',\n  templateUrl: './notifications-popups.component.html',\n})\nexport class NotificationsPopupsComponent {\n  /**\n   * Comma-separated list of notifications origins to process (empty for all).\n   */\n  @Input() origins: string | undefined;\n\n  /**\n   * Comma-separated list of notifications severity levels to process (empty for all).\n   */\n  @Input() severityLevels: string | undefined;\n\n  /**\n   * Polling interval (in seconds).\n   */\n  @Input() pollingInterval: number | undefined;\n\n  /**\n   * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).\n   */\n  @Input() allowedRoutes: string | undefined;\n\n  /**\n   * Auto-focus.\n   */\n  @Input() autofocus: boolean | undefined;\n\n  /**\n   * Display See More button.\n   */\n  @Input() displayShowMoreButtonInPopup: boolean | undefined;\n\n  /**\n   * Number of displayed lines in notification message.\n   */\n  @Input() popupMessageLineAmount: number | undefined;\n\n  constructor(@Optional() private communicationService?: NotificationsCommunicationService) {}\n\n  /**\n   * Method that emits navigation data and triggers navigation.\n   */\n  navigate(navigationData: NotificationRouting) {\n    if (this.communicationService) {\n      this.communicationService.notificationNavigation(navigationData);\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n\n  private showNoCommunicationServiceProvidedError() {\n    console.warn(titles.noCommunicationServiceProvidedError);\n  }\n}\n","<bb-notifications-popups-widget\n  [origins]=\"origins\"\n  [severityLevels]=\"severityLevels\"\n  [pollingInterval]=\"pollingInterval\"\n  [allowedRoutes]=\"allowedRoutes\"\n  [autofocus]=\"autofocus\"\n  [displayShowMoreButtonInPopup]=\"displayShowMoreButtonInPopup\"\n  [popupMessageLineAmount]=\"popupMessageLineAmount\"\n  (notificationRouting)=\"navigate($event)\"\n></bb-notifications-popups-widget>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\nimport { NotificationsPopupsWidgetModule } from '@backbase/notifications-popups-widget-ang';\nimport { NotificationsPopupsComponent } from './components/notifications-popups.component';\n\nconst modules = [NotificationsCommonModule, NotificationsPopupsWidgetModule];\n\n@NgModule({\n  imports: [CommonModule, ...modules],\n  declarations: [NotificationsPopupsComponent],\n  exports: [NotificationsPopupsComponent],\n})\nexport class NotificationsPopupsModule {}\n","import { Component, Input, Optional } from '@angular/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\nimport { NotificationRouting } from '../../../notifications-common-ang/src/models/notification-routing';\nimport { NotificationsCommunicationService } from '../../../notifications-common-ang/src/services/notifications-communication.service';\nimport { titles } from '../../../notifications-common-ang/src/config/titles.config';\n@Component({\n  selector: 'bb-notifications-badge',\n  templateUrl: './notifications-badge.component.html',\n})\nexport class NotificationsBadgeComponent {\n  /**\n   * Preselected notification.\n   */\n  @Input() preselectedNotification: NotificationItem | undefined;\n\n  /**\n   * Number of displayed lines in notification message.\n   */\n  @Input() notificationsMessageLineAmount: number | undefined;\n\n  /**\n   * Display time for today relative to the current point in time (time display format).\n   */\n  @Input() displayRelativeTime: boolean | undefined;\n\n  /**\n   * Display See More button.\n   */\n  @Input() displayShowMoreButtonInBadge: boolean | undefined;\n\n  /**\n   * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).\n   */\n  @Input() allowedRoutes: string | undefined;\n\n  /**\n   * Display Settings button (button with the Gear icon that opens Notification Preferences).\n   */\n  @Input() displaySettingsButton: boolean | undefined;\n\n  /**\n   * Limit of notifications per paginated request.\n   */\n  @Input() pageSize: number | undefined;\n\n  /**\n   * Comma-separated list of notifications origins to process (empty for all).\n   */\n  @Input() origins: string | undefined;\n\n  /**\n   * Comma-separated list of notifications severity levels to process (empty for all).\n   */\n  @Input() severityLevels: string | undefined;\n\n  /**\n   * Interval to poll server for unread count (in seconds).\n   */\n  @Input() unreadCountUpdateInterval: number | undefined;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  constructor(@Optional() private communicationService?: NotificationsCommunicationService) {}\n\n  /**\n   * Method that emits event to open Notification Preferences.\n   */\n  openNotificationSettings() {\n    if (this.communicationService) {\n      this.communicationService.openNotificationSettings();\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n\n  /**\n   * Method that emits navigation data and triggers navigation.\n   */\n  navigate(navigationData: NotificationRouting) {\n    if (this.communicationService) {\n      this.communicationService.notificationNavigation(navigationData);\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n\n  private showNoCommunicationServiceProvidedError() {\n    console.warn(titles.noCommunicationServiceProvidedError);\n  }\n}\n","<bb-notifications-badge-widget\n  [preselectedNotification]=\"preselectedNotification\"\n  [notificationsMessageLineAmount]=\"notificationsMessageLineAmount\"\n  [displayRelativeTime]=\"displayRelativeTime\"\n  [displayShowMoreButtonInBadge]=\"displayShowMoreButtonInBadge\"\n  [allowedRoutes]=\"allowedRoutes\"\n  [displaySettingsButton]=\"displaySettingsButton\"\n  [pageSize]=\"pageSize\"\n  [origins]=\"origins\"\n  [severityLevels]=\"severityLevels\"\n  [dateFormat]=\"dateFormat\"\n  [unreadCountUpdateInterval]=\"unreadCountUpdateInterval\"\n  (notificationsSettingsOpened)=\"openNotificationSettings()\"\n  (notificationRouting)=\"navigate($event)\"\n></bb-notifications-badge-widget>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NotificationsCommonModule } from '@backbase/notifications-common-ang';\nimport { NotificationsBadgeWidgetModule } from '@backbase/notifications-badge-widget-ang';\nimport { NotificationsBadgeComponent } from './components/notifications-badge.component';\n\nconst modules = [NotificationsCommonModule, NotificationsBadgeWidgetModule];\n\n@NgModule({\n  imports: [CommonModule, ...modules],\n  declarations: [NotificationsBadgeComponent],\n  exports: [NotificationsBadgeComponent],\n})\nexport class NotificationsBadgeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.NotificationsCommunicationService","modules","i2"],"mappings":"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"}