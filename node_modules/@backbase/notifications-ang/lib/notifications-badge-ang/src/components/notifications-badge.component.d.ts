import { NotificationItem } from '@backbase/notifications-common-ang';
import { NotificationRouting } from '../../../notifications-common-ang/src/models/notification-routing';
import { NotificationsCommunicationService } from '../../../notifications-common-ang/src/services/notifications-communication.service';
import * as i0 from "@angular/core";
export declare class NotificationsBadgeComponent {
    private communicationService?;
    /**
     * Preselected notification.
     */
    preselectedNotification: NotificationItem | undefined;
    /**
     * Number of displayed lines in notification message.
     */
    notificationsMessageLineAmount: number | undefined;
    /**
     * Display time for today relative to the current point in time (time display format).
     */
    displayRelativeTime: boolean | undefined;
    /**
     * Display See More button.
     */
    displayShowMoreButtonInBadge: boolean | undefined;
    /**
     * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).
     */
    allowedRoutes: string | undefined;
    /**
     * Display Settings button (button with the Gear icon that opens Notification Preferences).
     */
    displaySettingsButton: boolean | undefined;
    /**
     * Limit of notifications per paginated request.
     */
    pageSize: number | undefined;
    /**
     * Comma-separated list of notifications origins to process (empty for all).
     */
    origins: string | undefined;
    /**
     * Comma-separated list of notifications severity levels to process (empty for all).
     */
    severityLevels: string | undefined;
    /**
     * Interval to poll server for unread count (in seconds).
     */
    unreadCountUpdateInterval: number | undefined;
    /**
     * Format to display date in past
     */
    dateFormat: string | undefined;
    constructor(communicationService?: NotificationsCommunicationService | undefined);
    /**
     * Method that emits event to open Notification Preferences.
     */
    openNotificationSettings(): void;
    /**
     * Method that emits navigation data and triggers navigation.
     */
    navigate(navigationData: NotificationRouting): void;
    private showNoCommunicationServiceProvidedError;
    static ɵfac: i0.ɵɵFactoryDeclaration<NotificationsBadgeComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NotificationsBadgeComponent, "bb-notifications-badge", never, { "preselectedNotification": "preselectedNotification"; "notificationsMessageLineAmount": "notificationsMessageLineAmount"; "displayRelativeTime": "displayRelativeTime"; "displayShowMoreButtonInBadge": "displayShowMoreButtonInBadge"; "allowedRoutes": "allowedRoutes"; "displaySettingsButton": "displaySettingsButton"; "pageSize": "pageSize"; "origins": "origins"; "severityLevels": "severityLevels"; "unreadCountUpdateInterval": "unreadCountUpdateInterval"; "dateFormat": "dateFormat"; }, {}, never, never>;
}
