{"version":3,"file":"notifications-popups.component.js","sourceRoot":"","sources":["../../../../../../../../libs/notifications-ang/src/lib/notifications-popups-ang/src/components/notifications-popups.component.ts","../../../../../../../../libs/notifications-ang/src/lib/notifications-popups-ang/src/components/notifications-popups.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC3D,OAAO,EAAE,iCAAiC,EAAE,MAAM,oFAAoF,CAAC;AACvI,OAAO,EAAE,MAAM,EAAE,MAAM,4DAA4D,CAAC;;;;AAOpF,MAAM,OAAO,4BAA4B;IAoCvC,YAAgC,oBAAwD;QAAxD,yBAAoB,GAApB,oBAAoB,CAAoC;IAAG,CAAC;IAE5F;;OAEG;IACH,QAAQ,CAAC,cAAmC;QAC1C,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;SAClE;aAAM;YACL,IAAI,CAAC,uCAAuC,EAAE,CAAC;SAChD;IACH,CAAC;IAEO,uCAAuC;QAC7C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,mCAAmC,CAAC,CAAC;IAC3D,CAAC;;6IAnDU,4BAA4B;iIAA5B,4BAA4B,6UCTzC,0ZAUA;4FDDa,4BAA4B;kBAJxC,SAAS;mBAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,WAAW,EAAE,uCAAuC;iBACrD;;0BAqCc,QAAQ;4CAhCZ,OAAO;sBAAf,KAAK;gBAKG,cAAc;sBAAtB,KAAK;gBAKG,eAAe;sBAAvB,KAAK;gBAKG,aAAa;sBAArB,KAAK;gBAKG,SAAS;sBAAjB,KAAK;gBAKG,4BAA4B;sBAApC,KAAK;gBAKG,sBAAsB;sBAA9B,KAAK","sourcesContent":["import { Component, Input, Optional } from '@angular/core';\nimport { NotificationsCommunicationService } from '../../../notifications-common-ang/src/services/notifications-communication.service';\nimport { titles } from '../../../notifications-common-ang/src/config/titles.config';\nimport { NotificationRouting } from '../../../notifications-common-ang/src/models/notification-routing';\n\n@Component({\n  selector: 'bb-notifications-popups',\n  templateUrl: './notifications-popups.component.html',\n})\nexport class NotificationsPopupsComponent {\n  /**\n   * Comma-separated list of notifications origins to process (empty for all).\n   */\n  @Input() origins: string | undefined;\n\n  /**\n   * Comma-separated list of notifications severity levels to process (empty for all).\n   */\n  @Input() severityLevels: string | undefined;\n\n  /**\n   * Polling interval (in seconds).\n   */\n  @Input() pollingInterval: number | undefined;\n\n  /**\n   * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).\n   */\n  @Input() allowedRoutes: string | undefined;\n\n  /**\n   * Auto-focus.\n   */\n  @Input() autofocus: boolean | undefined;\n\n  /**\n   * Display See More button.\n   */\n  @Input() displayShowMoreButtonInPopup: boolean | undefined;\n\n  /**\n   * Number of displayed lines in notification message.\n   */\n  @Input() popupMessageLineAmount: number | undefined;\n\n  constructor(@Optional() private communicationService?: NotificationsCommunicationService) {}\n\n  /**\n   * Method that emits navigation data and triggers navigation.\n   */\n  navigate(navigationData: NotificationRouting) {\n    if (this.communicationService) {\n      this.communicationService.notificationNavigation(navigationData);\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n\n  private showNoCommunicationServiceProvidedError() {\n    console.warn(titles.noCommunicationServiceProvidedError);\n  }\n}\n","<bb-notifications-popups-widget\n  [origins]=\"origins\"\n  [severityLevels]=\"severityLevels\"\n  [pollingInterval]=\"pollingInterval\"\n  [allowedRoutes]=\"allowedRoutes\"\n  [autofocus]=\"autofocus\"\n  [displayShowMoreButtonInPopup]=\"displayShowMoreButtonInPopup\"\n  [popupMessageLineAmount]=\"popupMessageLineAmount\"\n  (notificationRouting)=\"navigate($event)\"\n></bb-notifications-popups-widget>\n"]}