{"version":3,"file":"notifications-badge.component.js","sourceRoot":"","sources":["../../../../../../../../libs/notifications-ang/src/lib/notifications-badge-ang/src/components/notifications-badge.component.ts","../../../../../../../../libs/notifications-ang/src/lib/notifications-badge-ang/src/components/notifications-badge.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAG3D,OAAO,EAAE,iCAAiC,EAAE,MAAM,oFAAoF,CAAC;AACvI,OAAO,EAAE,MAAM,EAAE,MAAM,4DAA4D,CAAC;;;;AAKpF,MAAM,OAAO,2BAA2B;IAwDtC,YAAgC,oBAAwD;QAAxD,yBAAoB,GAApB,oBAAoB,CAAoC;IAAG,CAAC;IAE5F;;OAEG;IACH,wBAAwB;QACtB,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,wBAAwB,EAAE,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,uCAAuC,EAAE,CAAC;SAChD;IACH,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,cAAmC;QAC1C,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;SAClE;aAAM;YACL,IAAI,CAAC,uCAAuC,EAAE,CAAC;SAChD;IACH,CAAC;IAEO,uCAAuC;QAC7C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,mCAAmC,CAAC,CAAC;IAC3D,CAAC;;4IAlFU,2BAA2B;gIAA3B,2BAA2B,whBCTxC,wrBAeA;4FDNa,2BAA2B;kBAJvC,SAAS;mBAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,WAAW,EAAE,sCAAsC;iBACpD;;0BAyDc,QAAQ;4CApDZ,uBAAuB;sBAA/B,KAAK;gBAKG,8BAA8B;sBAAtC,KAAK;gBAKG,mBAAmB;sBAA3B,KAAK;gBAKG,4BAA4B;sBAApC,KAAK;gBAKG,aAAa;sBAArB,KAAK;gBAKG,qBAAqB;sBAA7B,KAAK;gBAKG,QAAQ;sBAAhB,KAAK;gBAKG,OAAO;sBAAf,KAAK;gBAKG,cAAc;sBAAtB,KAAK;gBAKG,yBAAyB;sBAAjC,KAAK;gBAKG,UAAU;sBAAlB,KAAK","sourcesContent":["import { Component, Input, Optional } from '@angular/core';\nimport { NotificationItem } from '@backbase/notifications-common-ang';\nimport { NotificationRouting } from '../../../notifications-common-ang/src/models/notification-routing';\nimport { NotificationsCommunicationService } from '../../../notifications-common-ang/src/services/notifications-communication.service';\nimport { titles } from '../../../notifications-common-ang/src/config/titles.config';\n@Component({\n  selector: 'bb-notifications-badge',\n  templateUrl: './notifications-badge.component.html',\n})\nexport class NotificationsBadgeComponent {\n  /**\n   * Preselected notification.\n   */\n  @Input() preselectedNotification: NotificationItem | undefined;\n\n  /**\n   * Number of displayed lines in notification message.\n   */\n  @Input() notificationsMessageLineAmount: number | undefined;\n\n  /**\n   * Display time for today relative to the current point in time (time display format).\n   */\n  @Input() displayRelativeTime: boolean | undefined;\n\n  /**\n   * Display See More button.\n   */\n  @Input() displayShowMoreButtonInBadge: boolean | undefined;\n\n  /**\n   * String of allowed routes for navigation (conversation-view, arrangement-view, transaction-view, party-view, etc.).\n   */\n  @Input() allowedRoutes: string | undefined;\n\n  /**\n   * Display Settings button (button with the Gear icon that opens Notification Preferences).\n   */\n  @Input() displaySettingsButton: boolean | undefined;\n\n  /**\n   * Limit of notifications per paginated request.\n   */\n  @Input() pageSize: number | undefined;\n\n  /**\n   * Comma-separated list of notifications origins to process (empty for all).\n   */\n  @Input() origins: string | undefined;\n\n  /**\n   * Comma-separated list of notifications severity levels to process (empty for all).\n   */\n  @Input() severityLevels: string | undefined;\n\n  /**\n   * Interval to poll server for unread count (in seconds).\n   */\n  @Input() unreadCountUpdateInterval: number | undefined;\n\n  /**\n   * Format to display date in past\n   */\n  @Input() dateFormat: string | undefined;\n\n  constructor(@Optional() private communicationService?: NotificationsCommunicationService) {}\n\n  /**\n   * Method that emits event to open Notification Preferences.\n   */\n  openNotificationSettings() {\n    if (this.communicationService) {\n      this.communicationService.openNotificationSettings();\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n\n  /**\n   * Method that emits navigation data and triggers navigation.\n   */\n  navigate(navigationData: NotificationRouting) {\n    if (this.communicationService) {\n      this.communicationService.notificationNavigation(navigationData);\n    } else {\n      this.showNoCommunicationServiceProvidedError();\n    }\n  }\n\n  private showNoCommunicationServiceProvidedError() {\n    console.warn(titles.noCommunicationServiceProvidedError);\n  }\n}\n","<bb-notifications-badge-widget\n  [preselectedNotification]=\"preselectedNotification\"\n  [notificationsMessageLineAmount]=\"notificationsMessageLineAmount\"\n  [displayRelativeTime]=\"displayRelativeTime\"\n  [displayShowMoreButtonInBadge]=\"displayShowMoreButtonInBadge\"\n  [allowedRoutes]=\"allowedRoutes\"\n  [displaySettingsButton]=\"displaySettingsButton\"\n  [pageSize]=\"pageSize\"\n  [origins]=\"origins\"\n  [severityLevels]=\"severityLevels\"\n  [dateFormat]=\"dateFormat\"\n  [unreadCountUpdateInterval]=\"unreadCountUpdateInterval\"\n  (notificationsSettingsOpened)=\"openNotificationSettings()\"\n  (notificationRouting)=\"navigate($event)\"\n></bb-notifications-badge-widget>\n"]}