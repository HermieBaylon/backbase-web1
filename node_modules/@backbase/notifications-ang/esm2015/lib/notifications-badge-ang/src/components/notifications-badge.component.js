import { Component, Input, Optional } from '@angular/core';
import { NotificationsCommunicationService } from '../../../notifications-common-ang/src/services/notifications-communication.service';
import { titles } from '../../../notifications-common-ang/src/config/titles.config';
import * as i0 from "@angular/core";
import * as i1 from "../../../notifications-common-ang/src/services/notifications-communication.service";
import * as i2 from "@backbase/notifications-badge-widget-ang";
export class NotificationsBadgeComponent {
    constructor(communicationService) {
        this.communicationService = communicationService;
    }
    /**
     * Method that emits event to open Notification Preferences.
     */
    openNotificationSettings() {
        if (this.communicationService) {
            this.communicationService.openNotificationSettings();
        }
        else {
            this.showNoCommunicationServiceProvidedError();
        }
    }
    /**
     * Method that emits navigation data and triggers navigation.
     */
    navigate(navigationData) {
        if (this.communicationService) {
            this.communicationService.notificationNavigation(navigationData);
        }
        else {
            this.showNoCommunicationServiceProvidedError();
        }
    }
    showNoCommunicationServiceProvidedError() {
        console.warn(titles.noCommunicationServiceProvidedError);
    }
}
/** @nocollapse */ NotificationsBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsBadgeComponent, deps: [{ token: i1.NotificationsCommunicationService, optional: true }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ NotificationsBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: NotificationsBadgeComponent, selector: "bb-notifications-badge", inputs: { preselectedNotification: "preselectedNotification", notificationsMessageLineAmount: "notificationsMessageLineAmount", displayRelativeTime: "displayRelativeTime", displayShowMoreButtonInBadge: "displayShowMoreButtonInBadge", allowedRoutes: "allowedRoutes", displaySettingsButton: "displaySettingsButton", pageSize: "pageSize", origins: "origins", severityLevels: "severityLevels", unreadCountUpdateInterval: "unreadCountUpdateInterval", dateFormat: "dateFormat" }, ngImport: i0, template: "<bb-notifications-badge-widget\n  [preselectedNotification]=\"preselectedNotification\"\n  [notificationsMessageLineAmount]=\"notificationsMessageLineAmount\"\n  [displayRelativeTime]=\"displayRelativeTime\"\n  [displayShowMoreButtonInBadge]=\"displayShowMoreButtonInBadge\"\n  [allowedRoutes]=\"allowedRoutes\"\n  [displaySettingsButton]=\"displaySettingsButton\"\n  [pageSize]=\"pageSize\"\n  [origins]=\"origins\"\n  [severityLevels]=\"severityLevels\"\n  [dateFormat]=\"dateFormat\"\n  [unreadCountUpdateInterval]=\"unreadCountUpdateInterval\"\n  (notificationsSettingsOpened)=\"openNotificationSettings()\"\n  (notificationRouting)=\"navigate($event)\"\n></bb-notifications-badge-widget>\n", components: [{ type: i2.NotificationsBadgeWidgetComponent, selector: "bb-notifications-badge-widget", inputs: ["preselectedNotification", "notificationsMessageLineAmount", "displayRelativeTime", "displayShowMoreButtonInBadge", "allowedRoutes", "displaySettingsButton", "pageSize", "origins", "severityLevels", "unreadCountUpdateInterval", "dateFormat"], outputs: ["notificationsSettingsOpened", "notificationRouting"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: NotificationsBadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-notifications-badge',
                    templateUrl: './notifications-badge.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.NotificationsCommunicationService, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { preselectedNotification: [{
                type: Input
            }], notificationsMessageLineAmount: [{
                type: Input
            }], displayRelativeTime: [{
                type: Input
            }], displayShowMoreButtonInBadge: [{
                type: Input
            }], allowedRoutes: [{
                type: Input
            }], displaySettingsButton: [{
                type: Input
            }], pageSize: [{
                type: Input
            }], origins: [{
                type: Input
            }], severityLevels: [{
                type: Input
            }], unreadCountUpdateInterval: [{
                type: Input
            }], dateFormat: [{
                type: Input
            }] } });
//# sourceMappingURL=notifications-badge.component.js.map