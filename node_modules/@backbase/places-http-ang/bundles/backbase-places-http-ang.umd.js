(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common/http'), require('@backbase/foundation-ang/data-http')) :
    typeof define === 'function' && define.amd ? define('@backbase/places-http-ang', ['exports', '@angular/core', '@angular/common/http', '@backbase/foundation-ang/data-http'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["places-http-ang"] = {}), global.ng.core, global.ng.common.http, global.i2));
})(this, (function (exports, i0, i1, i2) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    var PLACES_BASE_PATH = new i0.InjectionToken('PLACES_BASE_PATH');
    var COLLECTION_FORMATS = {
        'csv': ',',
        'tsv': '   ',
        'ssv': ' ',
        'pipes': '|'
    };

    var PlacesConfiguration = /** @class */ (function () {
        function PlacesConfiguration(configurationParameters) {
            if (configurationParameters === void 0) { configurationParameters = {}; }
            this.apiKeys = configurationParameters.apiKeys;
            this.username = configurationParameters.username;
            this.password = configurationParameters.password;
            this.accessToken = configurationParameters.accessToken;
            this.basePath = configurationParameters.basePath;
            this.withCredentials = configurationParameters.withCredentials;
            this.encoder = configurationParameters.encoder;
            if (configurationParameters.credentials) {
                this.credentials = configurationParameters.credentials;
            }
            else {
                this.credentials = {};
            }
        }
        PlacesConfiguration.prototype.selectHeaderContentType = function (contentTypes) {
            var _this = this;
            if (contentTypes.length === 0) {
                return undefined;
            }
            var type = contentTypes.find(function (x) { return _this.isJsonMime(x); });
            if (type === undefined) {
                return contentTypes[0];
            }
            return type;
        };
        PlacesConfiguration.prototype.selectHeaderAccept = function (accepts) {
            var _this = this;
            if (accepts.length === 0) {
                return undefined;
            }
            var type = accepts.find(function (x) { return _this.isJsonMime(x); });
            if (type === undefined) {
                return accepts[0];
            }
            return type;
        };
        PlacesConfiguration.prototype.isJsonMime = function (mime) {
            var jsonMime = new RegExp('^(application\/json|[^;/ \t]+\/[^;/ \t]+[+]json)[ \t]*(;.*)?$', 'i');
            return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');
        };
        PlacesConfiguration.prototype.lookupCredential = function (key) {
            var value = this.credentials[key];
            return typeof value === 'function'
                ? value()
                : value;
        };
        return PlacesConfiguration;
    }());
    var CONFIG_TOKEN = new i0.InjectionToken('api-data-module PlacesConfiguration');

    var PlacesApiModule = /** @class */ (function () {
        function PlacesApiModule(parentModule, http, dataModulesManager, config) {
            if (parentModule) {
                throw new Error('PlacesApiModule is already loaded. Import in your base AppModule only.');
            }
            if (!http) {
                throw new Error('You need to import the HttpClientModule in your AppModule! \n' +
                    'See also https://github.com/angular/angular/issues/20575');
            }
            if (dataModulesManager) {
                dataModulesManager.setModuleConfig(CONFIG_TOKEN, {
                    apiRoot: '',
                    servicePath: config.basePath || '',
                    headers: {},
                });
            }
        }
        PlacesApiModule.forRoot = function (configurationFactory) {
            return {
                ngModule: PlacesApiModule,
                providers: [{ provide: PlacesConfiguration, useFactory: configurationFactory }]
            };
        };
        return PlacesApiModule;
    }());
    PlacesApiModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PlacesApiModule, deps: [{ token: PlacesApiModule, optional: true, skipSelf: true }, { token: i1__namespace.HttpClient, optional: true }, { token: i2__namespace.DataModulesManager, optional: true }, { token: PlacesConfiguration }], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PlacesApiModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PlacesApiModule });
    PlacesApiModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PlacesApiModule, providers: [], imports: [[]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PlacesApiModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [],
                        declarations: [],
                        exports: [],
                        providers: []
                    }]
            }], ctorParameters: function () {
            return [{ type: PlacesApiModule, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.SkipSelf
                        }] }, { type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Optional
                        }] }, { type: i2__namespace.DataModulesManager, decorators: [{
                            type: i0.Optional
                        }] }, { type: PlacesConfiguration }];
        } });

    var CustomHttpParameterCodec = /** @class */ (function () {
        function CustomHttpParameterCodec() {
        }
        CustomHttpParameterCodec.prototype.encodeKey = function (k) {
            return encodeURIComponent(k);
        };
        CustomHttpParameterCodec.prototype.encodeValue = function (v) {
            return encodeURIComponent(v);
        };
        CustomHttpParameterCodec.prototype.decodeKey = function (k) {
            return decodeURIComponent(k);
        };
        CustomHttpParameterCodec.prototype.decodeValue = function (v) {
            return decodeURIComponent(v);
        };
        return CustomHttpParameterCodec;
    }());

    var PlacesHttpService = /** @class */ (function () {
        function PlacesHttpService(httpClient, basePath, configuration) {
            this.httpClient = httpClient;
            this.basePath = '';
            this.defaultHeaders = new i1.HttpHeaders();
            this.configuration = new PlacesConfiguration();
            if (configuration) {
                this.configuration = configuration;
            }
            if (typeof this.configuration.basePath !== 'string') {
                if (typeof basePath !== 'string') {
                    basePath = this.basePath;
                }
                this.configuration.basePath = basePath;
            }
            this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();
        }
        PlacesHttpService.prototype.addToHttpParams = function (httpParams, value, key) {
            if (typeof value === "object" && value instanceof Date === false) {
                httpParams = this.addToHttpParamsRecursive(httpParams, value);
            }
            else {
                httpParams = this.addToHttpParamsRecursive(httpParams, value, key);
            }
            return httpParams;
        };
        PlacesHttpService.prototype.addToHttpParamsRecursive = function (httpParams, value, key) {
            var _this = this;
            if (value == null) {
                return httpParams;
            }
            if (typeof value === "object") {
                if (Array.isArray(value)) {
                    value.forEach(function (elem) { return httpParams = _this.addToHttpParamsRecursive(httpParams, elem, key); });
                }
                else if (value instanceof Date) {
                    if (key != null) {
                        httpParams = httpParams.append(key, value.toISOString().substr(0, 10));
                    }
                    else {
                        throw Error("key may not be null if value is Date");
                    }
                }
                else {
                    Object.keys(value).forEach(function (k) { return httpParams = _this.addToHttpParamsRecursive(httpParams, value[k], key != null ? key + "." + k : k); });
                }
            }
            else if (key != null) {
                httpParams = httpParams.append(key, value);
            }
            else {
                throw Error("key may not be null if value is not object or array");
            }
            return httpParams;
        };
        PlacesHttpService.prototype.getPlaces = function (requestParameters, observe, reportProgress, options) {
            var _this = this;
            if (observe === void 0) { observe = 'body'; }
            if (reportProgress === void 0) { reportProgress = false; }
            var _latitude = requestParameters["latitude"];
            if (_latitude === null || _latitude === undefined) {
                throw new Error('Required parameter latitude was null or undefined when calling getPlaces.');
            }
            var _longitude = requestParameters["longitude"];
            if (_longitude === null || _longitude === undefined) {
                throw new Error('Required parameter longitude was null or undefined when calling getPlaces.');
            }
            var _radius = requestParameters["radius"];
            if (_radius === null || _radius === undefined) {
                throw new Error('Required parameter radius was null or undefined when calling getPlaces.');
            }
            var _type = requestParameters["type"];
            var _types = requestParameters["types"];
            var queryParameters = new i1.HttpParams({ encoder: this.encoder });
            if (_latitude !== undefined && _latitude !== null) {
                queryParameters = this.addToHttpParams(queryParameters, _latitude, 'latitude');
            }
            if (_longitude !== undefined && _longitude !== null) {
                queryParameters = this.addToHttpParams(queryParameters, _longitude, 'longitude');
            }
            if (_radius !== undefined && _radius !== null) {
                queryParameters = this.addToHttpParams(queryParameters, _radius, 'radius');
            }
            if (_type !== undefined && _type !== null) {
                queryParameters = this.addToHttpParams(queryParameters, _type, 'type');
            }
            if (_types) {
                _types.forEach(function (element) {
                    queryParameters = _this.addToHttpParams(queryParameters, element, 'types');
                });
            }
            var headers = this.defaultHeaders;
            var httpHeaderAcceptSelected = options && options.httpHeaderAccept;
            if (httpHeaderAcceptSelected === undefined) {
                var httpHeaderAccepts = [
                    'application/json'
                ];
                httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);
            }
            if (httpHeaderAcceptSelected !== undefined) {
                headers = headers.set('Accept', httpHeaderAcceptSelected);
            }
            var responseType = 'json';
            if (httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {
                responseType = 'text';
            }
            return this.httpClient.get(this.configuration.basePath + "/client-api/v2/places", {
                params: queryParameters,
                responseType: responseType,
                withCredentials: this.configuration.withCredentials,
                headers: headers,
                observe: observe,
                reportProgress: reportProgress
            });
        };
        PlacesHttpService.prototype.getPlacesUrl = function (requestParameters) {
            var _this = this;
            var _latitude = requestParameters["latitude"];
            if (_latitude === null || _latitude === undefined) {
                throw new Error('Required parameter latitude was null or undefined when calling getPlaces.');
            }
            var _longitude = requestParameters["longitude"];
            if (_longitude === null || _longitude === undefined) {
                throw new Error('Required parameter longitude was null or undefined when calling getPlaces.');
            }
            var _radius = requestParameters["radius"];
            if (_radius === null || _radius === undefined) {
                throw new Error('Required parameter radius was null or undefined when calling getPlaces.');
            }
            var _type = requestParameters["type"];
            var _types = requestParameters["types"];
            var queryParameters = new i1.HttpParams({ encoder: this.encoder });
            if (_latitude !== undefined && _latitude !== null) {
                queryParameters = this.addToHttpParams(queryParameters, _latitude, 'latitude');
            }
            if (_longitude !== undefined && _longitude !== null) {
                queryParameters = this.addToHttpParams(queryParameters, _longitude, 'longitude');
            }
            if (_radius !== undefined && _radius !== null) {
                queryParameters = this.addToHttpParams(queryParameters, _radius, 'radius');
            }
            if (_type !== undefined && _type !== null) {
                queryParameters = this.addToHttpParams(queryParameters, _type, 'type');
            }
            if (_types) {
                _types.forEach(function (element) {
                    queryParameters = _this.addToHttpParams(queryParameters, element, 'types');
                });
            }
            var queryString = queryParameters.toString();
            return this.configuration.basePath + "/client-api/v2/places" + (queryString ? "?" + queryString : '');
        };
        return PlacesHttpService;
    }());
    PlacesHttpService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PlacesHttpService, deps: [{ token: i1__namespace.HttpClient }, { token: PLACES_BASE_PATH, optional: true }, { token: PlacesConfiguration, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    PlacesHttpService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PlacesHttpService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PlacesHttpService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root'
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace.HttpClient }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [PLACES_BASE_PATH]
                        }] }, { type: PlacesConfiguration, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    var PlacesHttpServiceGetPlacesMocksProvider = i2.createMocks([{
            urlPattern: "/client-api/v2/places",
            method: "GET",
            responses: [
                {
                    status: 200,
                    body: [{
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7a",
                            "name": "Backbase Financial",
                            "address": {
                                "addressLine1": "737 Meadowbrook Boulevard",
                                "postalCode": "20005",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:00",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "17:00"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "17:30"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "17:00"
                                }],
                            "latitude": 40.70162374,
                            "longitude": -74.01232503,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit", "Exclusive banking"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7b",
                            "name": "Bank of Nebraska",
                            "address": {
                                "addressLine1": "623 Live Oak Lane",
                                "addressLine2": "New York City",
                                "postalCode": "18254",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:30",
                                    "close": "13:00"
                                }, {
                                    "day": 1,
                                    "open": "14:00",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "13:30"
                                }, {
                                    "day": 2,
                                    "open": "14:30",
                                    "close": "17:30"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "12:00"
                                }, {
                                    "day": 3,
                                    "open": "13:00",
                                    "close": "15:00"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "15:00"
                                }, {
                                    "day": 4,
                                    "open": "16:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "15:00"
                                }, {
                                    "day": 5,
                                    "open": "16:00",
                                    "close": "18:00"
                                }, {
                                    "day": 6,
                                    "open": "10:00",
                                    "close": "12:00"
                                }, {
                                    "day": 6,
                                    "open": "12:30",
                                    "close": "14:00"
                                }, {
                                    "day": 7,
                                    "open": "10:00",
                                    "close": "12:00"
                                }, {
                                    "day": 7,
                                    "open": "12:30",
                                    "close": "14:00"
                                }],
                            "latitude": 40.7112536,
                            "longitude": -73.99589751,
                            "placeType": "branch",
                            "services": ["Cash withdrawals"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234123",
                            "name": "Backbase ATM",
                            "address": {
                                "addressLine1": "192 Walnut Drive",
                                "addressLine2": "New York City",
                                "postalCode": "29874",
                                "country": "United States"
                            },
                            "latitude": 40.72257311,
                            "longitude": -74.00628302,
                            "placeType": "atm",
                            "services": ["Cash withdrawals"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234121",
                            "name": "First Financial ATM",
                            "address": {
                                "addressLine1": "88 Dogwood street",
                                "addressLine2": "New York City",
                                "postalCode": "10087",
                                "country": "United States"
                            },
                            "latitude": 40.72901266,
                            "longitude": -73.97744391,
                            "placeType": "atm"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7c",
                            "name": "Fells Wargo Bank",
                            "address": {
                                "addressLine1": "504 Park Avenue",
                                "addressLine2": "New York City",
                                "postalCode": "03331",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:30",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "17:30"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "14:00"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "17:00"
                                }],
                            "latitude": 40.72345355,
                            "longitude": -73.99240494,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Exclusive banking"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7d",
                            "name": "First State Bank",
                            "address": {
                                "addressLine1": "35 Ave North",
                                "addressLine2": "New York City",
                                "postalCode": "31118",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:30",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "17:30"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "17:00"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "17:00"
                                }],
                            "latitude": 40.71447146,
                            "longitude": -73.96551378,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7e",
                            "name": "R&Z Bank",
                            "address": {
                                "addressLine1": "45 Dakota Avenue",
                                "addressLine2": "New York City",
                                "postalCode": "58347",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:30",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "17:30"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "17:00"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "12:00"
                                }, {
                                    "day": 4,
                                    "open": "14:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "17:00"
                                }],
                            "latitude": 40.70484232,
                            "longitude": -73.98285158,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit", "Exclusive banking"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7e",
                            "name": "Eagle Freedom Bank",
                            "latitude": 40.6945173,
                            "longitude": -73.99353683,
                            "placeType": "branch"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234129",
                            "name": "Paddy's Pub Bank",
                            "address": {
                                "addressLine1": "352 Wolf Cola Drive",
                                "addressLine2": "New York City",
                                "postalCode": "29230",
                                "country": "United States"
                            },
                            "latitude": 40.71000372,
                            "longitude": -73.99430931,
                            "placeType": "atm"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234128",
                            "name": "Money Bank ATM",
                            "address": {
                                "addressLine1": "927 Coldrew Avenue",
                                "addressLine2": "New York City",
                                "postalCode": "29642",
                                "country": "United States"
                            },
                            "latitude": 40.73971668,
                            "longitude": -73.99168108,
                            "placeType": "atm"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234127",
                            "name": "Community Financial ATM",
                            "address": {
                                "addressLine1": "236 Eagles Nest Street",
                                "addressLine2": "New York City",
                                "postalCode": "39124",
                                "country": "United States"
                            },
                            "latitude": 40.71483003,
                            "longitude": -74.01252754,
                            "placeType": "atm"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234126",
                            "name": "SanFran United ATM",
                            "latitude": 40.73028327,
                            "longitude": -74.00176048
                        }, {
                            "id": "a956dbc7-a84d-46fe-91c3-bc40561ffdee",
                            "name": "Forest Associated Trust",
                            "address": {
                                "addressLine1": "137 Paper Way",
                                "addressLine2": "New York City",
                                "postalCode": "10278",
                                "country": "United States"
                            },
                            "latitude": 40.73555143,
                            "longitude": -73.97918701,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Safe deposit", "Exclusive banking"]
                        }, {
                            "id": "d6cdb083-ea55-4760-9ca7-10b1ce0792fd",
                            "name": "Millenial Bank United",
                            "address": {
                                "addressLine1": "26 Federal Plaza",
                                "postalCode": "10278",
                                "country": "United States"
                            },
                            "latitude": 40.74250997,
                            "longitude": -73.99698414,
                            "placeType": "branch"
                        }, {
                            "id": "40c154d3-344b-48c9-966d-23aaf7369c1f",
                            "name": "Great North Bank",
                            "address": {
                                "addressLine1": "135 W 3rd St",
                                "postalCode": "10012",
                                "country": "United States"
                            },
                            "latitude": 40.73947942,
                            "longitude": -73.97421453,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit"]
                        }, {
                            "id": "82cd9c3b-2c91-4631-9b25-71281179fa0d",
                            "name": "Great Valley Financial",
                            "address": {
                                "addressLine1": "89 Chrysie St",
                                "addressLine2": "p.o. box 213",
                                "postalCode": "10002",
                                "country": "United States"
                            },
                            "latitude": 40.71392381,
                            "longitude": -74.00345162,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Safe deposit", "Exclusive banking"]
                        }, {
                            "id": "0edb7a6e-8969-493e-9787-90fe967843ce",
                            "name": "Safeway Banking",
                            "address": {
                                "addressLine1": "284 Government Drive",
                                "addressLine2": "New York City",
                                "country": "United States"
                            },
                            "latitude": 40.73626683,
                            "longitude": -74.00819778,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit"]
                        }]
                },
            ]
        }]);
    var PlacesHttpServiceMocksProvider = i2.createMocks([
        {
            urlPattern: "/client-api/v2/places",
            method: "GET",
            responses: [
                {
                    status: 200,
                    body: [{
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7a",
                            "name": "Backbase Financial",
                            "address": {
                                "addressLine1": "737 Meadowbrook Boulevard",
                                "postalCode": "20005",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:00",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "17:00"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "17:30"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "17:00"
                                }],
                            "latitude": 40.70162374,
                            "longitude": -74.01232503,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit", "Exclusive banking"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7b",
                            "name": "Bank of Nebraska",
                            "address": {
                                "addressLine1": "623 Live Oak Lane",
                                "addressLine2": "New York City",
                                "postalCode": "18254",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:30",
                                    "close": "13:00"
                                }, {
                                    "day": 1,
                                    "open": "14:00",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "13:30"
                                }, {
                                    "day": 2,
                                    "open": "14:30",
                                    "close": "17:30"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "12:00"
                                }, {
                                    "day": 3,
                                    "open": "13:00",
                                    "close": "15:00"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "15:00"
                                }, {
                                    "day": 4,
                                    "open": "16:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "15:00"
                                }, {
                                    "day": 5,
                                    "open": "16:00",
                                    "close": "18:00"
                                }, {
                                    "day": 6,
                                    "open": "10:00",
                                    "close": "12:00"
                                }, {
                                    "day": 6,
                                    "open": "12:30",
                                    "close": "14:00"
                                }, {
                                    "day": 7,
                                    "open": "10:00",
                                    "close": "12:00"
                                }, {
                                    "day": 7,
                                    "open": "12:30",
                                    "close": "14:00"
                                }],
                            "latitude": 40.7112536,
                            "longitude": -73.99589751,
                            "placeType": "branch",
                            "services": ["Cash withdrawals"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234123",
                            "name": "Backbase ATM",
                            "address": {
                                "addressLine1": "192 Walnut Drive",
                                "addressLine2": "New York City",
                                "postalCode": "29874",
                                "country": "United States"
                            },
                            "latitude": 40.72257311,
                            "longitude": -74.00628302,
                            "placeType": "atm",
                            "services": ["Cash withdrawals"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234121",
                            "name": "First Financial ATM",
                            "address": {
                                "addressLine1": "88 Dogwood street",
                                "addressLine2": "New York City",
                                "postalCode": "10087",
                                "country": "United States"
                            },
                            "latitude": 40.72901266,
                            "longitude": -73.97744391,
                            "placeType": "atm"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7c",
                            "name": "Fells Wargo Bank",
                            "address": {
                                "addressLine1": "504 Park Avenue",
                                "addressLine2": "New York City",
                                "postalCode": "03331",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:30",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "17:30"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "14:00"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "17:00"
                                }],
                            "latitude": 40.72345355,
                            "longitude": -73.99240494,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Exclusive banking"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7d",
                            "name": "First State Bank",
                            "address": {
                                "addressLine1": "35 Ave North",
                                "addressLine2": "New York City",
                                "postalCode": "31118",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:30",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "17:30"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "17:00"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "17:00"
                                }],
                            "latitude": 40.71447146,
                            "longitude": -73.96551378,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7e",
                            "name": "R&Z Bank",
                            "address": {
                                "addressLine1": "45 Dakota Avenue",
                                "addressLine2": "New York City",
                                "postalCode": "58347",
                                "country": "United States"
                            },
                            "hours": [{
                                    "day": 1,
                                    "open": "09:30",
                                    "close": "17:00"
                                }, {
                                    "day": 2,
                                    "open": "09:00",
                                    "close": "17:30"
                                }, {
                                    "day": 3,
                                    "open": "09:00",
                                    "close": "17:00"
                                }, {
                                    "day": 4,
                                    "open": "09:00",
                                    "close": "12:00"
                                }, {
                                    "day": 4,
                                    "open": "14:00",
                                    "close": "20:00"
                                }, {
                                    "day": 5,
                                    "open": "09:00",
                                    "close": "17:00"
                                }],
                            "latitude": 40.70484232,
                            "longitude": -73.98285158,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit", "Exclusive banking"]
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af217a7e",
                            "name": "Eagle Freedom Bank",
                            "latitude": 40.6945173,
                            "longitude": -73.99353683,
                            "placeType": "branch"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234129",
                            "name": "Paddy's Pub Bank",
                            "address": {
                                "addressLine1": "352 Wolf Cola Drive",
                                "addressLine2": "New York City",
                                "postalCode": "29230",
                                "country": "United States"
                            },
                            "latitude": 40.71000372,
                            "longitude": -73.99430931,
                            "placeType": "atm"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234128",
                            "name": "Money Bank ATM",
                            "address": {
                                "addressLine1": "927 Coldrew Avenue",
                                "addressLine2": "New York City",
                                "postalCode": "29642",
                                "country": "United States"
                            },
                            "latitude": 40.73971668,
                            "longitude": -73.99168108,
                            "placeType": "atm"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234127",
                            "name": "Community Financial ATM",
                            "address": {
                                "addressLine1": "236 Eagles Nest Street",
                                "addressLine2": "New York City",
                                "postalCode": "39124",
                                "country": "United States"
                            },
                            "latitude": 40.71483003,
                            "longitude": -74.01252754,
                            "placeType": "atm"
                        }, {
                            "id": "32c91a0b-199e-4275-bbe9-7097af234126",
                            "name": "SanFran United ATM",
                            "latitude": 40.73028327,
                            "longitude": -74.00176048
                        }, {
                            "id": "a956dbc7-a84d-46fe-91c3-bc40561ffdee",
                            "name": "Forest Associated Trust",
                            "address": {
                                "addressLine1": "137 Paper Way",
                                "addressLine2": "New York City",
                                "postalCode": "10278",
                                "country": "United States"
                            },
                            "latitude": 40.73555143,
                            "longitude": -73.97918701,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Safe deposit", "Exclusive banking"]
                        }, {
                            "id": "d6cdb083-ea55-4760-9ca7-10b1ce0792fd",
                            "name": "Millenial Bank United",
                            "address": {
                                "addressLine1": "26 Federal Plaza",
                                "postalCode": "10278",
                                "country": "United States"
                            },
                            "latitude": 40.74250997,
                            "longitude": -73.99698414,
                            "placeType": "branch"
                        }, {
                            "id": "40c154d3-344b-48c9-966d-23aaf7369c1f",
                            "name": "Great North Bank",
                            "address": {
                                "addressLine1": "135 W 3rd St",
                                "postalCode": "10012",
                                "country": "United States"
                            },
                            "latitude": 40.73947942,
                            "longitude": -73.97421453,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit"]
                        }, {
                            "id": "82cd9c3b-2c91-4631-9b25-71281179fa0d",
                            "name": "Great Valley Financial",
                            "address": {
                                "addressLine1": "89 Chrysie St",
                                "addressLine2": "p.o. box 213",
                                "postalCode": "10002",
                                "country": "United States"
                            },
                            "latitude": 40.71392381,
                            "longitude": -74.00345162,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Safe deposit", "Exclusive banking"]
                        }, {
                            "id": "0edb7a6e-8969-493e-9787-90fe967843ce",
                            "name": "Safeway Banking",
                            "address": {
                                "addressLine1": "284 Government Drive",
                                "addressLine2": "New York City",
                                "country": "United States"
                            },
                            "latitude": 40.73626683,
                            "longitude": -74.00819778,
                            "placeType": "branch",
                            "services": ["Cash withdrawals", "Cash exchange", "Safe deposit"]
                        }]
                },
            ]
        },
    ]);

    exports.COLLECTION_FORMATS = COLLECTION_FORMATS;
    exports.CONFIG_TOKEN = CONFIG_TOKEN;
    exports.PLACES_BASE_PATH = PLACES_BASE_PATH;
    exports.PlacesApiModule = PlacesApiModule;
    exports.PlacesConfiguration = PlacesConfiguration;
    exports.PlacesHttpService = PlacesHttpService;
    exports.PlacesHttpServiceGetPlacesMocksProvider = PlacesHttpServiceGetPlacesMocksProvider;
    exports.PlacesHttpServiceMocksProvider = PlacesHttpServiceMocksProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-places-http-ang.umd.js.map
