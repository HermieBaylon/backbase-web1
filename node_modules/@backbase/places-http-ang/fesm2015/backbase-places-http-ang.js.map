{"version":3,"file":"backbase-places-http-ang.js","sources":["../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/places.service.ts","../../api/places.service.mocks.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const PLACES_BASE_PATH = new InjectionToken<string>('PLACES_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface PlacesConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class PlacesConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: PlacesConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link PlacesConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link PlacesConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module PlacesConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { PlacesConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class PlacesApiModule {\n    public static forRoot(configurationFactory: () => PlacesConfiguration): ModuleWithProviders<PlacesApiModule> {\n        return {\n            ngModule: PlacesApiModule,\n            providers: [ { provide: PlacesConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: PlacesApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: PlacesConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('PlacesApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Places\n * Provides details on the location of brick-and-mortar branches or ATMs, such as the coordinates and the address.\n *\n * The version of the OpenAPI document: 2.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { Place } from '../model/models';\n\nimport { PLACES_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PlacesConfiguration }                                     from '../configuration';\n\n\nexport interface GetPlacesRequestParams {\n    /** Latitude for current location. Should be used with longitude and radius params to return places available in specified radius. */\n    [\"latitude\"]: number;\n    /** Longitude for current location. Should be used with latitude and radius params to return places available in specified radius. */\n    [\"longitude\"]: number;\n    /** Search radius (distance in KM) */\n    [\"radius\"]: number;\n    /** Filter Type for places */\n    [\"type\"]?: string;\n    /** Filter one or more types for places */\n    [\"types\"]?: Array<string>;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PlacesConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(PLACES_BASE_PATH) basePath: string, @Optional() configuration: PlacesConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieve list of all places.\n     * Retrieve list of all places.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPlaces(requestParameters: GetPlacesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<Place>>;\n    /**\n     * Retrieve list of all places.\n     * Retrieve list of all places.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPlaces(requestParameters: GetPlacesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<Place>>>;\n    /**\n     * Retrieve list of all places.\n     * Retrieve list of all places.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPlaces(requestParameters: GetPlacesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<Place>>>;\n    /**\n     * Retrieve list of all places.\n     * Retrieve list of all places.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getPlaces(requestParameters: GetPlacesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _latitude = requestParameters[\"latitude\"];\n        if (_latitude === null || _latitude === undefined) {\n            throw new Error('Required parameter latitude was null or undefined when calling getPlaces.');\n        }\n        const _longitude = requestParameters[\"longitude\"];\n        if (_longitude === null || _longitude === undefined) {\n            throw new Error('Required parameter longitude was null or undefined when calling getPlaces.');\n        }\n        const _radius = requestParameters[\"radius\"];\n        if (_radius === null || _radius === undefined) {\n            throw new Error('Required parameter radius was null or undefined when calling getPlaces.');\n        }\n        const _type = requestParameters[\"type\"];\n        const _types = requestParameters[\"types\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_latitude !== undefined && _latitude !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_latitude, 'latitude');\n        }\n        if (_longitude !== undefined && _longitude !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_longitude, 'longitude');\n        }\n        if (_radius !== undefined && _radius !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_radius, 'radius');\n        }\n        if (_type !== undefined && _type !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_type, 'type');\n        }\n        if (_types) {\n            _types.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'types');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<Place>>(`${this.configuration.basePath}/client-api/v2/places`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getPlacesUrl(requestParameters: GetPlacesRequestParams): string {\n        const _latitude = requestParameters[\"latitude\"];\n        if (_latitude === null || _latitude === undefined) {\n            throw new Error('Required parameter latitude was null or undefined when calling getPlaces.');\n        }\n        const _longitude = requestParameters[\"longitude\"];\n        if (_longitude === null || _longitude === undefined) {\n            throw new Error('Required parameter longitude was null or undefined when calling getPlaces.');\n        }\n        const _radius = requestParameters[\"radius\"];\n        if (_radius === null || _radius === undefined) {\n            throw new Error('Required parameter radius was null or undefined when calling getPlaces.');\n        }\n        const _type = requestParameters[\"type\"];\n        const _types = requestParameters[\"types\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_latitude !== undefined && _latitude !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_latitude, 'latitude');\n        }\n        if (_longitude !== undefined && _longitude !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_longitude, 'longitude');\n        }\n        if (_radius !== undefined && _radius !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_radius, 'radius');\n        }\n        if (_type !== undefined && _type !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_type, 'type');\n        }\n        if (_types) {\n            _types.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'types');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/places${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/places URL pattern\n*/\nexport const PlacesHttpServiceGetPlacesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/places\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7a\",\n  \"name\" : \"Backbase Financial\",\n  \"address\" : {\n    \"addressLine1\" : \"737 Meadowbrook Boulevard\",\n    \"postalCode\" : \"20005\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  } ],\n  \"latitude\" : 40.70162374,\n  \"longitude\" : -74.01232503,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7b\",\n  \"name\" : \"Bank of Nebraska\",\n  \"address\" : {\n    \"addressLine1\" : \"623 Live Oak Lane\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"18254\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:30\",\n    \"close\" : \"13:00\"\n  }, {\n    \"day\" : 1,\n    \"open\" : \"14:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"13:30\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"14:30\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"12:00\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"13:00\",\n    \"close\" : \"15:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"15:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"16:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"15:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"16:00\",\n    \"close\" : \"18:00\"\n  }, {\n    \"day\" : 6,\n    \"open\" : \"10:00\",\n    \"close\" : \"12:00\"\n  }, {\n    \"day\" : 6,\n    \"open\" : \"12:30\",\n    \"close\" : \"14:00\"\n  }, {\n    \"day\" : 7,\n    \"open\" : \"10:00\",\n    \"close\" : \"12:00\"\n  }, {\n    \"day\" : 7,\n    \"open\" : \"12:30\",\n    \"close\" : \"14:00\"\n  } ],\n  \"latitude\" : 40.7112536,\n  \"longitude\" : -73.99589751,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234123\",\n  \"name\" : \"Backbase ATM\",\n  \"address\" : {\n    \"addressLine1\" : \"192 Walnut Drive\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"29874\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.72257311,\n  \"longitude\" : -74.00628302,\n  \"placeType\" : \"atm\",\n  \"services\" : [ \"Cash withdrawals\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234121\",\n  \"name\" : \"First Financial ATM\",\n  \"address\" : {\n    \"addressLine1\" : \"88 Dogwood street\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"10087\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.72901266,\n  \"longitude\" : -73.97744391,\n  \"placeType\" : \"atm\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7c\",\n  \"name\" : \"Fells Wargo Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"504 Park Avenue\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"03331\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:30\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"14:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  } ],\n  \"latitude\" : 40.72345355,\n  \"longitude\" : -73.99240494,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7d\",\n  \"name\" : \"First State Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"35 Ave North\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"31118\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:30\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  } ],\n  \"latitude\" : 40.71447146,\n  \"longitude\" : -73.96551378,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7e\",\n  \"name\" : \"R&Z Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"45 Dakota Avenue\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"58347\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:30\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"12:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"14:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  } ],\n  \"latitude\" : 40.70484232,\n  \"longitude\" : -73.98285158,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7e\",\n  \"name\" : \"Eagle Freedom Bank\",\n  \"latitude\" : 40.6945173,\n  \"longitude\" : -73.99353683,\n  \"placeType\" : \"branch\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234129\",\n  \"name\" : \"Paddy's Pub Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"352 Wolf Cola Drive\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"29230\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.71000372,\n  \"longitude\" : -73.99430931,\n  \"placeType\" : \"atm\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234128\",\n  \"name\" : \"Money Bank ATM\",\n  \"address\" : {\n    \"addressLine1\" : \"927 Coldrew Avenue\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"29642\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.73971668,\n  \"longitude\" : -73.99168108,\n  \"placeType\" : \"atm\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234127\",\n  \"name\" : \"Community Financial ATM\",\n  \"address\" : {\n    \"addressLine1\" : \"236 Eagles Nest Street\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"39124\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.71483003,\n  \"longitude\" : -74.01252754,\n  \"placeType\" : \"atm\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234126\",\n  \"name\" : \"SanFran United ATM\",\n  \"latitude\" : 40.73028327,\n  \"longitude\" : -74.00176048\n}, {\n  \"id\" : \"a956dbc7-a84d-46fe-91c3-bc40561ffdee\",\n  \"name\" : \"Forest Associated Trust\",\n  \"address\" : {\n    \"addressLine1\" : \"137 Paper Way\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"10278\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.73555143,\n  \"longitude\" : -73.97918701,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Safe deposit\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"d6cdb083-ea55-4760-9ca7-10b1ce0792fd\",\n  \"name\" : \"Millenial Bank United\",\n  \"address\" : {\n    \"addressLine1\" : \"26 Federal Plaza\",\n    \"postalCode\" : \"10278\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.74250997,\n  \"longitude\" : -73.99698414,\n  \"placeType\" : \"branch\"\n}, {\n  \"id\" : \"40c154d3-344b-48c9-966d-23aaf7369c1f\",\n  \"name\" : \"Great North Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"135 W 3rd St\",\n    \"postalCode\" : \"10012\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.73947942,\n  \"longitude\" : -73.97421453,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\" ]\n}, {\n  \"id\" : \"82cd9c3b-2c91-4631-9b25-71281179fa0d\",\n  \"name\" : \"Great Valley Financial\",\n  \"address\" : {\n    \"addressLine1\" : \"89 Chrysie St\",\n    \"addressLine2\" : \"p.o. box 213\",\n    \"postalCode\" : \"10002\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.71392381,\n  \"longitude\" : -74.00345162,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Safe deposit\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"0edb7a6e-8969-493e-9787-90fe967843ce\",\n  \"name\" : \"Safeway Banking\",\n  \"address\" : {\n    \"addressLine1\" : \"284 Government Drive\",\n    \"addressLine2\" : \"New York City\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.73626683,\n  \"longitude\" : -74.00819778,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\" ]\n} ]\n                },\n    ]\n}]);\n\nexport const PlacesHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/places\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7a\",\n  \"name\" : \"Backbase Financial\",\n  \"address\" : {\n    \"addressLine1\" : \"737 Meadowbrook Boulevard\",\n    \"postalCode\" : \"20005\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  } ],\n  \"latitude\" : 40.70162374,\n  \"longitude\" : -74.01232503,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7b\",\n  \"name\" : \"Bank of Nebraska\",\n  \"address\" : {\n    \"addressLine1\" : \"623 Live Oak Lane\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"18254\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:30\",\n    \"close\" : \"13:00\"\n  }, {\n    \"day\" : 1,\n    \"open\" : \"14:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"13:30\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"14:30\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"12:00\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"13:00\",\n    \"close\" : \"15:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"15:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"16:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"15:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"16:00\",\n    \"close\" : \"18:00\"\n  }, {\n    \"day\" : 6,\n    \"open\" : \"10:00\",\n    \"close\" : \"12:00\"\n  }, {\n    \"day\" : 6,\n    \"open\" : \"12:30\",\n    \"close\" : \"14:00\"\n  }, {\n    \"day\" : 7,\n    \"open\" : \"10:00\",\n    \"close\" : \"12:00\"\n  }, {\n    \"day\" : 7,\n    \"open\" : \"12:30\",\n    \"close\" : \"14:00\"\n  } ],\n  \"latitude\" : 40.7112536,\n  \"longitude\" : -73.99589751,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234123\",\n  \"name\" : \"Backbase ATM\",\n  \"address\" : {\n    \"addressLine1\" : \"192 Walnut Drive\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"29874\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.72257311,\n  \"longitude\" : -74.00628302,\n  \"placeType\" : \"atm\",\n  \"services\" : [ \"Cash withdrawals\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234121\",\n  \"name\" : \"First Financial ATM\",\n  \"address\" : {\n    \"addressLine1\" : \"88 Dogwood street\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"10087\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.72901266,\n  \"longitude\" : -73.97744391,\n  \"placeType\" : \"atm\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7c\",\n  \"name\" : \"Fells Wargo Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"504 Park Avenue\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"03331\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:30\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"14:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  } ],\n  \"latitude\" : 40.72345355,\n  \"longitude\" : -73.99240494,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7d\",\n  \"name\" : \"First State Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"35 Ave North\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"31118\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:30\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  } ],\n  \"latitude\" : 40.71447146,\n  \"longitude\" : -73.96551378,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7e\",\n  \"name\" : \"R&Z Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"45 Dakota Avenue\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"58347\",\n    \"country\" : \"United States\"\n  },\n  \"hours\" : [ {\n    \"day\" : 1,\n    \"open\" : \"09:30\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 2,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:30\"\n  }, {\n    \"day\" : 3,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"09:00\",\n    \"close\" : \"12:00\"\n  }, {\n    \"day\" : 4,\n    \"open\" : \"14:00\",\n    \"close\" : \"20:00\"\n  }, {\n    \"day\" : 5,\n    \"open\" : \"09:00\",\n    \"close\" : \"17:00\"\n  } ],\n  \"latitude\" : 40.70484232,\n  \"longitude\" : -73.98285158,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af217a7e\",\n  \"name\" : \"Eagle Freedom Bank\",\n  \"latitude\" : 40.6945173,\n  \"longitude\" : -73.99353683,\n  \"placeType\" : \"branch\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234129\",\n  \"name\" : \"Paddy's Pub Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"352 Wolf Cola Drive\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"29230\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.71000372,\n  \"longitude\" : -73.99430931,\n  \"placeType\" : \"atm\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234128\",\n  \"name\" : \"Money Bank ATM\",\n  \"address\" : {\n    \"addressLine1\" : \"927 Coldrew Avenue\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"29642\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.73971668,\n  \"longitude\" : -73.99168108,\n  \"placeType\" : \"atm\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234127\",\n  \"name\" : \"Community Financial ATM\",\n  \"address\" : {\n    \"addressLine1\" : \"236 Eagles Nest Street\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"39124\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.71483003,\n  \"longitude\" : -74.01252754,\n  \"placeType\" : \"atm\"\n}, {\n  \"id\" : \"32c91a0b-199e-4275-bbe9-7097af234126\",\n  \"name\" : \"SanFran United ATM\",\n  \"latitude\" : 40.73028327,\n  \"longitude\" : -74.00176048\n}, {\n  \"id\" : \"a956dbc7-a84d-46fe-91c3-bc40561ffdee\",\n  \"name\" : \"Forest Associated Trust\",\n  \"address\" : {\n    \"addressLine1\" : \"137 Paper Way\",\n    \"addressLine2\" : \"New York City\",\n    \"postalCode\" : \"10278\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.73555143,\n  \"longitude\" : -73.97918701,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Safe deposit\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"d6cdb083-ea55-4760-9ca7-10b1ce0792fd\",\n  \"name\" : \"Millenial Bank United\",\n  \"address\" : {\n    \"addressLine1\" : \"26 Federal Plaza\",\n    \"postalCode\" : \"10278\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.74250997,\n  \"longitude\" : -73.99698414,\n  \"placeType\" : \"branch\"\n}, {\n  \"id\" : \"40c154d3-344b-48c9-966d-23aaf7369c1f\",\n  \"name\" : \"Great North Bank\",\n  \"address\" : {\n    \"addressLine1\" : \"135 W 3rd St\",\n    \"postalCode\" : \"10012\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.73947942,\n  \"longitude\" : -73.97421453,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\" ]\n}, {\n  \"id\" : \"82cd9c3b-2c91-4631-9b25-71281179fa0d\",\n  \"name\" : \"Great Valley Financial\",\n  \"address\" : {\n    \"addressLine1\" : \"89 Chrysie St\",\n    \"addressLine2\" : \"p.o. box 213\",\n    \"postalCode\" : \"10002\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.71392381,\n  \"longitude\" : -74.00345162,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Safe deposit\", \"Exclusive banking\" ]\n}, {\n  \"id\" : \"0edb7a6e-8969-493e-9787-90fe967843ce\",\n  \"name\" : \"Safeway Banking\",\n  \"address\" : {\n    \"addressLine1\" : \"284 Government Drive\",\n    \"addressLine2\" : \"New York City\",\n    \"country\" : \"United States\"\n  },\n  \"latitude\" : 40.73626683,\n  \"longitude\" : -74.00819778,\n  \"placeType\" : \"branch\",\n  \"services\" : [ \"Cash withdrawals\", \"Cash exchange\", \"Safe deposit\" ]\n} ]\n            },\n\n\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}