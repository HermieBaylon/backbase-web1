import { ActivatedRoute, Router } from '@angular/router';
import { Observable } from 'rxjs';
import { LoadableViewState } from '@backbase/identity-common-ang';
import { UserLocalizationService } from '../user-localization.service';
import { UserLocalizationOptionVM } from '../../../util';
import * as i0 from "@angular/core";
interface CommunicationsViewState extends LoadableViewState {
    languageRegion?: UserLocalizationOptionVM;
}
export declare class UserLocalizationCommunicationsViewComponent {
    private readonly router;
    private readonly userLocalizationService;
    private readonly activatedRoute;
    private readonly viewStateSubject$;
    readonly viewState$: Observable<CommunicationsViewState>;
    constructor(router: Router, userLocalizationService: UserLocalizationService, activatedRoute: ActivatedRoute);
    changeLanguage(): void;
    getLanguageLabelFor(value: string): string | undefined;
    get showEditableLanguage(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserLocalizationCommunicationsViewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UserLocalizationCommunicationsViewComponent, "bb-user-localization-communications-view", never, {}, {}, never, never>;
}
export {};
