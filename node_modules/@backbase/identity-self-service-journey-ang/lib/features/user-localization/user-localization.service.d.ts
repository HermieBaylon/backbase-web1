import { GetOwnUser, UserManagementService } from '@backbase/user-http-ang';
import { IdentitySelfServiceJourneyConfigurationService } from '../../identity-self-service-journey.config.service';
import { UserLocalizationJourneyConfiguration } from '../../identity-self-service-journey.types';
import * as i0 from "@angular/core";
export declare class UserLocalizationService {
    private readonly dataService;
    /** @internal */
    readonly configService: IdentitySelfServiceJourneyConfigurationService;
    private readonly getUserCacheItem;
    readonly getUser$: import("rxjs").Observable<GetOwnUser>;
    readonly getUser: () => any;
    readonly defaultLocalizationOptions: Readonly<{
        label: string;
        value: string;
    }>[];
    readonly config: UserLocalizationJourneyConfiguration;
    constructor(dataService: UserManagementService, 
    /** @internal */
    configService: IdentitySelfServiceJourneyConfigurationService);
    updateUser(userVO: Partial<GetOwnUser>): import("rxjs").Observable<any>;
    static ɵfac: i0.ɵɵFactoryDeclaration<UserLocalizationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<UserLocalizationService>;
}
