{"version":3,"file":"backbase-identity-self-service-journey-ang.js","sources":["../../../../libs/identity-self-service-journey-ang/src/lib/identity-self-service-journey.types.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/user-localization.config.ts","../../../../libs/identity-self-service-journey-ang/src/lib/identity-self-service-journey.config.service.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-identity-security-center-view.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-manage-profile-view.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/device-information-view.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/util/helpers/cache-item.ts","../../../../libs/identity-self-service-journey-ang/src/lib/util/mappings/find-language-region-from-options.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/user-localization.service.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/user-localization.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/shared/user-language-common-view-state.pipe.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/communications-view/user-localization-communications-view.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/communications-view/user-localization-communications-view.component.html","../../../../libs/identity-self-service-journey-ang/src/lib/ui/back-button.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/ui/back-button.component.html","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/shared/components/user-localization-change-language-form.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/shared/components/user-localization-change-language-form.component.html","../../../../libs/identity-self-service-journey-ang/src/lib/ui/discard-modal.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/ui/discard-modal.component.html","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/change-language-view/user-localization-change-language-view.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/change-language-view/user-localization-change-language-view.component.html","../../../../libs/identity-self-service-journey-ang/src/lib/identity-self-service-journey.component.ts","../../../../libs/identity-self-service-journey-ang/src/lib/identity-self-service-journey.component.html","../../../../libs/identity-self-service-journey-ang/src/lib/ui/self-service-ui.module.ts","../../../../libs/identity-self-service-journey-ang/src/lib/features/self-service-features.module.ts","../../../../libs/identity-self-service-journey-ang/src/lib/identity-self-service-journey.module.ts","../../../../libs/identity-self-service-journey-ang/src/index.ts","../../../../libs/identity-self-service-journey-ang/src/backbase-identity-self-service-journey-ang.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport {\n  DeepPartial,\n  IdentityJourneyConfiguration,\n  JourneyCommonPropertyTypes,\n  JourneyConfigKeyValuePair,\n\n  /**\n   * Unused JourneyConfigValueType symbol needed for known ngPackagr issue (present in built library) related to using inferred types:\n   * https://github.com/ng-packagr/ng-packagr/issues/1405\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  JourneyConfigValueType,\n} from '@backbase/identity-common-ang';\nimport { LocalizationOption } from './util';\n\nexport type UserIdentitySecurityCenterJourneyConfiguration = JourneyConfigKeyValuePair &\n  Pick<JourneyCommonPropertyTypes, 'notificationDismissTime'>;\n\nexport type UserManageProfileJourneyConfiguration = JourneyConfigKeyValuePair &\n  Pick<\n    JourneyCommonPropertyTypes,\n    | 'notificationDismissTime'\n    | 'emailAddressTypes'\n    | 'postalAddressTypes'\n    | 'phoneNumberTypes'\n    | 'maxEmailAddresses'\n    | 'maxPhoneNumbers'\n    | 'maxPostalAddresses'\n    | 'showWidgetHeader'\n    | 'phoneNumberCountryCode'\n    | 'phoneNumberDebounceTime'\n    | 'enablePhoneNumberFormatter'\n  >;\n\nexport type DeviceInformationJourneyConfiguration = JourneyConfigKeyValuePair &\n  Pick<JourneyCommonPropertyTypes, 'notificationDismissTime' | 'routeParamNameUserId'>;\n\nexport type UserLocalizationJourneyConfiguration = JourneyConfigKeyValuePair &\n  Pick<JourneyCommonPropertyTypes, 'notificationDismissTime' | 'showEditableLanguage'> & {\n    localizationOptions: Array<LocalizationOption>;\n  };\n\nexport interface IdentitySelfServiceJourneyConfiguration extends IdentityJourneyConfiguration {\n  userIdentitySecurityCenter: UserIdentitySecurityCenterJourneyConfiguration;\n  userManageProfile: UserManageProfileJourneyConfiguration;\n  deviceInformation: DeviceInformationJourneyConfiguration;\n  userLocalization: UserLocalizationJourneyConfiguration;\n}\n\nexport const IdentitySelfServiceJourneyConfigurationToken = new InjectionToken<\n  DeepPartial<IdentitySelfServiceJourneyConfiguration>\n>('IdentitySelfServiceJourneyConfiguration injection token');\n","export const localizationOptions = [\n  Object.freeze({\n    label: $localize`:Label for English language in the United States@@bb-identity-self-service-journey.lanugage.en-us.label:English (United States)`,\n    value: 'en-US',\n  }),\n  Object.freeze({\n    label: $localize`:Label for Spanish language in the United States@@bb-identity-self-service-journey.lanugage.es-us.label:Espa√±ol (Estados Unidos)`,\n    value: 'es-US',\n  }),\n];\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  IdentitySelfServiceJourneyConfiguration,\n  IdentitySelfServiceJourneyConfigurationToken,\n} from './identity-self-service-journey.types';\nimport { DeepPartial, createJourneyConfiguration } from '@backbase/identity-common-ang';\nimport { localizationOptions } from './features/user-localization/user-localization.config';\n\nconst notificationDismissTime = 3;\nconst emailAddressTypes = ['Personal', 'Work'];\nconst postalAddressTypes = ['Home', 'Business', 'Mailing'];\nconst phoneNumberTypes = ['Home', 'Work', 'Mobile'];\nconst maxEmailAddresses = 3;\nconst maxPhoneNumbers = 3;\nconst maxPostalAddresses = 3;\nconst showWidgetHeader = true;\nconst phoneNumberCountryCode = 'CA';\nconst phoneNumberDebounceTime = 1;\nconst enablePhoneNumberFormatter = true;\nconst showEditableLanguage = true;\nconst routeParamNameUserId = 'userId';\n\nconst configDefaults: IdentitySelfServiceJourneyConfiguration = {\n  userIdentitySecurityCenter: {\n    notificationDismissTime,\n  },\n  userManageProfile: {\n    notificationDismissTime,\n    emailAddressTypes: [...emailAddressTypes],\n    postalAddressTypes: [...postalAddressTypes],\n    phoneNumberTypes: [...phoneNumberTypes],\n    maxEmailAddresses,\n    maxPhoneNumbers,\n    maxPostalAddresses,\n    showWidgetHeader,\n    phoneNumberCountryCode,\n    phoneNumberDebounceTime,\n    enablePhoneNumberFormatter,\n  },\n  deviceInformation: {\n    notificationDismissTime,\n    routeParamNameUserId,\n  },\n  userLocalization: {\n    notificationDismissTime,\n    localizationOptions: [...localizationOptions],\n    showEditableLanguage,\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentitySelfServiceJourneyConfigurationService {\n  private config: Readonly<Required<IdentitySelfServiceJourneyConfiguration>>;\n\n  constructor(\n    @Optional()\n    @Inject(IdentitySelfServiceJourneyConfigurationToken)\n    configOverrides?: DeepPartial<IdentitySelfServiceJourneyConfiguration>,\n  ) {\n    this.config = createJourneyConfiguration<IdentitySelfServiceJourneyConfiguration>(configDefaults, configOverrides);\n  }\n\n  get userIdentitySecurityCenter() {\n    return this.config.userIdentitySecurityCenter;\n  }\n\n  get userManageProfile() {\n    return this.config.userManageProfile;\n  }\n\n  get deviceInformation() {\n    return this.config.deviceInformation;\n  }\n\n  get userLocalization() {\n    return this.config.userLocalization;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { IdentitySelfServiceJourneyConfigurationService } from '../identity-self-service-journey.config.service';\n\n@Component({\n  selector: 'bb-user-identity-security-center-view',\n  template: `<bb-user-identity-security-center-widget\n    [notificationDismissTime]=\"this.configService.userIdentitySecurityCenter.notificationDismissTime\"\n  >\n  </bb-user-identity-security-center-widget>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserIdentitySecurityCenterViewComponent {\n  constructor(\n    /** @internal */\n    readonly configService: IdentitySelfServiceJourneyConfigurationService,\n  ) {}\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { IdentitySelfServiceJourneyConfigurationService } from '../identity-self-service-journey.config.service';\n\n@Component({\n  selector: 'bb-user-manage-profile-view',\n  template: `<bb-user-manage-profile-widget\n    [notificationDismissTime]=\"this.configService.userManageProfile.notificationDismissTime\"\n    [emailAddressTypes]=\"this.configService.userManageProfile.emailAddressTypes\"\n    [postalAddressTypes]=\"this.configService.userManageProfile.postalAddressTypes\"\n    [phoneNumberTypes]=\"this.configService.userManageProfile.phoneNumberTypes\"\n    [maxEmailAddresses]=\"this.configService.userManageProfile.maxEmailAddresses\"\n    [maxPhoneNumbers]=\"this.configService.userManageProfile.maxPhoneNumbers\"\n    [maxPostalAddresses]=\"this.configService.userManageProfile.maxPostalAddresses\"\n    [showWidgetHeader]=\"this.configService.userManageProfile.showWidgetHeader\"\n    [phoneNumberCountryCode]=\"this.configService.userManageProfile.phoneNumberCountryCode\"\n    [phoneNumberDebounceTime]=\"this.configService.userManageProfile.phoneNumberDebounceTime\"\n    [enablePhoneNumberFormatter]=\"this.configService.userManageProfile.enablePhoneNumberFormatter\"\n  >\n  </bb-user-manage-profile-widget>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserManageProfileViewComponent {\n  constructor(\n    /** @internal */\n    readonly configService: IdentitySelfServiceJourneyConfigurationService,\n  ) {}\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { IdentitySelfServiceJourneyConfigurationService } from '../identity-self-service-journey.config.service';\n\n@Component({\n  selector: 'bb-device-information-view',\n  template: `<bb-device-information-widget\n    [dismissTimeout]=\"this.configService.deviceInformation.notificationDismissTime\"\n    [isAdminWidget]=\"false\"\n  >\n  </bb-device-information-widget>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeviceInformationViewComponent {\n  constructor(\n    /** @internal */\n    readonly configService: IdentitySelfServiceJourneyConfigurationService,\n  ) {}\n}\n","import { BehaviorSubject, Observable, of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const cacheItem = <T>(queryMethod: Function) => {\n  const subject$ = new BehaviorSubject<T | undefined>(undefined);\n  const update = () => queryMethod().pipe(tap((payload: T) => subject$.next(payload)));\n  return {\n    subject$,\n    state$: subject$.pipe(switchMap((payload?: T) => (payload !== undefined ? of(payload) : <Observable<T>>update()))),\n    update,\n  };\n};\n","import { UserLocalizationOptionVM, LocalizationOption } from '../types';\n\nexport const findLanguageRegionOption = (\n  localizationOptionsConfig: LocalizationOption[] = [],\n  preferredLanguage?: string,\n): UserLocalizationOptionVM =>\n  localizationOptionsConfig.find((item) => item.value === preferredLanguage) || {\n    isDefault: true,\n    value: typeof preferredLanguage === 'string' ? preferredLanguage : undefined,\n    label: '',\n  };\n","import { Injectable } from '@angular/core';\nimport { GetOwnUser, UserManagementService } from '@backbase/user-http-ang';\nimport { IdentitySelfServiceJourneyConfigurationService } from '../../identity-self-service-journey.config.service';\nimport { UserLocalizationJourneyConfiguration } from '../../identity-self-service-journey.types';\nimport { cacheItem } from '../../util';\nimport { localizationOptions } from './user-localization.config';\n\n@Injectable()\nexport class UserLocalizationService {\n  private readonly getUserCacheItem = cacheItem<GetOwnUser>(this.dataService.getOwnUser.bind(this.dataService));\n  public readonly getUser$ = this.getUserCacheItem.state$;\n  public readonly getUser = this.getUserCacheItem.update;\n\n  public readonly defaultLocalizationOptions = localizationOptions;\n\n  public readonly config: UserLocalizationJourneyConfiguration = Object.freeze({\n    ...this.configService.userLocalization,\n    notificationDismissTime: (this.configService.userLocalization.notificationDismissTime || 0) * 1000,\n  });\n\n  constructor(\n    private readonly dataService: UserManagementService,\n    /** @internal */\n    readonly configService: IdentitySelfServiceJourneyConfigurationService,\n  ) {}\n\n  updateUser(userVO: Partial<GetOwnUser>) {\n    return this.dataService.updateOwnLanguage({\n      updatePreferredLanguage: {\n        preferredLanguage: userVO.preferredLanguage || '',\n      },\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { UserLocalizationService } from './user-localization.service';\n\n@Component({\n  selector: 'bb-user-localization',\n  template: `<router-outlet></router-outlet>`,\n  providers: [UserLocalizationService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserLocalizationComponent {}\n","import { of, pipe } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { UserLocalizationService } from '../user-localization.service';\nimport { findLanguageRegionOption } from '../../../util/mappings/find-language-region-from-options';\n\nexport const userLanguageCommonViewStatePipe = (userLocalizationService: UserLocalizationService) =>\n  pipe(\n    switchMap(() =>\n      userLocalizationService.getUser$.pipe(\n        map((userProfile) => ({\n          loading: false,\n          languageRegion: findLanguageRegionOption(\n            userLocalizationService.config.localizationOptions,\n            userProfile.preferredLanguage,\n          ),\n        })),\n        startWith({ loading: true }),\n        catchError((error) => of({ loading: false, error })),\n      ),\n    ),\n  );\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { LoadableViewState } from '@backbase/identity-common-ang';\nimport { UserLocalizationService } from '../user-localization.service';\nimport { UserLocalizationOptionVM } from '../../../util';\nimport { userLanguageCommonViewStatePipe } from '../shared/user-language-common-view-state.pipe';\n\ninterface CommunicationsViewState extends LoadableViewState {\n  languageRegion?: UserLocalizationOptionVM;\n}\n\n@Component({\n  selector: 'bb-user-localization-communications-view',\n  templateUrl: 'user-localization-communications-view.component.html',\n})\nexport class UserLocalizationCommunicationsViewComponent {\n  private readonly viewStateSubject$ = new BehaviorSubject<void>(undefined);\n  readonly viewState$: Observable<CommunicationsViewState> = this.viewStateSubject$.pipe(\n    userLanguageCommonViewStatePipe(this.userLocalizationService),\n    share(),\n  );\n\n  constructor(\n    private readonly router: Router,\n    private readonly userLocalizationService: UserLocalizationService,\n    private readonly activatedRoute: ActivatedRoute,\n  ) {}\n\n  changeLanguage() {\n    this.router.navigate([this.activatedRoute.snapshot?.data?.changeLanguagePath || '../change-language'], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  getLanguageLabelFor(value: string) {\n    return this.userLocalizationService.defaultLocalizationOptions.find((option) => option.value === value)?.label;\n  }\n\n  get showEditableLanguage() {\n    return this.userLocalizationService.config.showEditableLanguage;\n  }\n}\n","<div data-role=\"user-localization-communications\">\n  <div class=\"bb-block bb-block--lg\">\n    <bb-header-ui\n      headingType=\"h1\"\n      data-role=\"user-localization-communications-header\"\n      heading=\"Communications\"\n      i18n-heading=\"Header for user language communications@@bb-user-localization-communications.header\"\n    >\n    </bb-header-ui>\n  </div>\n\n  <div class=\"card\" *ngIf=\"viewState$ | async as state\">\n    <div class=\"card-body\">\n      <bb-identity-view-state-container-component [error]=\"state.error\" [loading]=\"state.loading\">\n        <div class=\"bb-block bb-block--lg\">\n          <bb-header-ui\n            headingType=\"h2\"\n            data-role=\"user-localization-communications-header-external\"\n            heading=\"External communications\"\n            i18n-heading=\"\n              Header for user language external communications@@bb-user-localization-communications.header-external\"\n          >\n          </bb-header-ui>\n        </div>\n\n        <div class=\"bb-stack\" data-role=\"user-localization-communications-item\">\n          <div class=\"bb-stack__item bb-stack__item--fill\">\n            <div class=\"bb-stack bb-stack--wrap\">\n              <div class=\"bb-stack__item\">\n                <p\n                  class=\"bb-block bb-block--sm bb-subtitle bb-text-support\"\n                  i18n=\"Label for language and region@@bb-user-localization-communications.lanugage.label\"\n                >\n                  Language and region\n                </p>\n\n                <p\n                  *ngIf=\"\n                    state.languageRegion?.label ||\n                      getLanguageLabelFor(\n                        (state.languageRegion?.isDefault && state.languageRegion?.value) || ''\n                      ) as label;\n                    else noSelectedLabel\n                  \"\n                  data-role=\"user-localization-communications-chosen-label\"\n                  i18n=\"Chosen language and region@@bb-user-localization-communications.lanugage.selected\"\n                >\n                  {{ label }}\n                </p>\n                <ng-template #noSelectedLabel>\n                  <p\n                    data-role=\"user-localization-communications-default-label\"\n                    i18n=\"No language selected label@@bb-user-localization-communications.lanugage.not-selected\"\n                  >\n                    No language selected.\n                  </p>\n                </ng-template>\n              </div>\n              <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n              <div\n                class=\"bb-stack__item bb-stack__item--fill bb-text-align-right bb-text-align-left--sm-down break-word\"\n              >\n                <button\n                  *ngIf=\"showEditableLanguage\"\n                  bbButton\n                  data-role=\"user-localization-communications-edit-button\"\n                  aria-label=\"Change your language and region\"\n                  i18n-aria-label=\"\n                    Change your language and region aria label@@bb-user-localization-communications.action.change\"\n                  type=\"button\"\n                  color=\"secondary\"\n                  [circle]=\"true\"\n                  (click)=\"changeLanguage()\"\n                >\n                  <bb-icon-ui name=\"edit\" size=\"md\" color=\"info\"> </bb-icon-ui>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </bb-identity-view-state-container-component>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-identity-back-button',\n  templateUrl: './back-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BackButtonComponent {\n  /**\n   * Set page name in back description\n   */\n  @Input() page: string | undefined;\n\n  /**\n   * Output to track when back was clicked\n   */\n  @Output() backClick: EventEmitter<void> = new EventEmitter();\n}\n","<div class=\"bb-block bb-block--lg\" data-role=\"back-button-wrapper\">\n  <button bbButton color=\"link-text\" data-role=\"back-button\" type=\"button\" buttonSize=\"sm\" (click)=\"backClick.emit()\">\n    <bb-icon-ui name=\"arrow-back\"></bb-icon-ui>\n    <span i18n=\"Back to button@@bb-identity.back-button\"> Back to {{ page }} </span>\n  </button>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { generateId } from '@backbase/identity-common-ang';\nimport { UserLocalizationSaveClickEventData, LocalizationOption } from '../../../../util';\nimport { localizationOptions } from '../../user-localization.config';\n\n@Component({\n  selector: 'bb-user-localization-change-language-form',\n  templateUrl: './user-localization-change-language-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserLocalizationChangeLanguageFormComponent implements OnInit {\n  /**\n   * Set language options\n   */\n  @Input() options: Array<LocalizationOption> = [];\n\n  /**\n   * Set selected language\n   */\n  @Input() selectedLanguageCode: string | undefined;\n\n  /**\n   * Set save loading language\n   */\n  @Input() saveLoading = false;\n\n  /**\n   * Output for cancel clicked\n   */\n  @Output() cancelClick: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Output for save clicked\n   */\n  @Output() saveClick: EventEmitter<UserLocalizationSaveClickEventData> = new EventEmitter();\n\n  readonly ids = {\n    languageRegionLabel: generateId('language-region'),\n  };\n\n  form: FormGroup | undefined;\n  isSubmitted = false;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      languageRegion: [{ value: this.selectedLanguageCode, disabled: false }, Validators.required],\n    });\n  }\n\n  save() {\n    this.isSubmitted = true;\n    if (this.form && this.form.valid) {\n      this.saveClick.emit({ preferredLanguage: this.form.value.languageRegion });\n    }\n  }\n\n  get showLanguageControlError() {\n    return !((this.form || {}).controls || {}).languageRegion.value && this.isSubmitted;\n  }\n\n  get defaultLocalizationOptions() {\n    return localizationOptions;\n  }\n}\n","<form *ngIf=\"form\" [formGroup]=\"form\" (submit)=\"save()\">\n  <div class=\"bb-block bb-block--lg\">\n    <bb-input-radio-group-ui\n      data-role=\"user-localization-change-language-form-radio-option-group\"\n      formControlName=\"languageRegion\"\n      label=\"Language and region\"\n      i18n-label=\"Label for language and region radio options@@bb-user-localization-change-language-form.label.lanugage\"\n      [preselect]=\"false\"\n      [required]=\"true\"\n    >\n      <ng-container *ngIf=\"(options.length && options) || defaultLocalizationOptions as localizationOptions\">\n        <bb-input-radio-ui\n          *ngFor=\"let option of localizationOptions\"\n          [value]=\"option.value\"\n          [labelTemplate]=\"radioLabelTemplate\"\n          [labelTemplateContext]=\"option\"\n        >\n        </bb-input-radio-ui>\n      </ng-container>\n    </bb-input-radio-group-ui>\n    <bb-input-validation-message-ui [showErrors]=\"showLanguageControlError\">\n      <span\n        i18n=\"\n          Language required error|Error to say that language is a required\n          field@@bb-user-localization-change-language-form.language.errors.required\"\n      >\n        You must choose a language\n      </span>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <bb-load-button-ui\n      type=\"submit\"\n      data-role=\"user-localization-change-language-form-save-button\"\n      class=\"bb-button-bar__button\"\n      [isLoading]=\"saveLoading\"\n      i18n=\"Save changes button action@@bb-user-localization-change-language-form.action.save\"\n    >\n      Save changes\n    </bb-load-button-ui>\n    <button\n      bbButton\n      data-role=\"user-localization-change-language-form-cancel-button\"\n      color=\"secondary\"\n      class=\"bb-button-bar__button\"\n      type=\"button\"\n      (click)=\"cancelClick.emit()\"\n      i18n=\"Cancel changes button action@@bb-user-localization-change-language-form.action.cancel\"\n    >\n      Cancel\n    </button>\n  </div>\n</form>\n\n<ng-template #radioLabelTemplate let-labelTemplateContext=\"labelTemplateContext\">\n  <span class=\"bb-input-radio-group__radio-label\" [lang]=\"labelTemplateContext.value\">\n    {{ labelTemplateContext.label }}\n  </span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-identity-discard-modal-component',\n  templateUrl: './discard-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DiscardModalComponent {\n  /**\n   * Set whether modal show be open\n   */\n  @Input() modalOpen = false;\n\n  /**\n   * Output to track when cancel was clicked\n   */\n  @Output() cancelModalClick: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Output to track when discard was clicked\n   */\n  @Output() discardChangesClick: EventEmitter<void> = new EventEmitter();\n}\n","<bb-modal-ui data-role=\"discard-modal\" [isOpen]=\"modalOpen\" (cancel)=\"cancelModalClick.emit()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div data-role=\"discard-modal-header\">\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Discard changes modal title@@bb-identity-discard-modal.title\"\n          heading=\"Discard changes?\"\n        >\n        </bb-header-ui>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody i18n=\"Discard changes modal body@@bb-identity-discard-modal.body\">\n      Any unsaved changes you've made will be lost.\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <button\n        bbButton\n        data-role=\"discard-modal-cancel-button\"\n        color=\"secondary\"\n        (click)=\"cancelModalClick.emit()\"\n        i18n=\"Dismiss discard modal button@@bb-identity-discard-modal.cancel\"\n      >\n        Cancel\n      </button>\n      <button\n        bbButton\n        data-role=\"discard-modal-confirm-button\"\n        (click)=\"discardChangesClick.emit()\"\n        i18n=\"Confirm discard modal button@@bb-identity-discard-modal.confirm\"\n      >\n        Discard\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { generateId, LoadableViewState } from '@backbase/identity-common-ang';\nimport { UserLocalizationOptionVM, UserLocalizationSaveClickEventData } from '../../../util';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { finalize, share, switchMap } from 'rxjs/operators';\nimport { UserLocalizationService } from '../user-localization.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { userLanguageCommonViewStatePipe } from '../shared/user-language-common-view-state.pipe';\n\ninterface ChangeLanguageViewState extends LoadableViewState {\n  languageRegion?: UserLocalizationOptionVM;\n}\n\n@Component({\n  selector: 'bb-user-localization-change-language-view',\n  templateUrl: 'user-localization-change-language-view.component.html',\n})\nexport class UserLocalizationChangeLanguageViewComponent {\n  @ViewChild('notificationChangeLanguageSuccess') notificationChangeLanguageSuccess: TemplateRef<any> | undefined;\n  @ViewChild('notificationChangeLanguageSuccessHeader') notificationChangeLanguageSuccessHeader:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('notificationFailure') notificationFailure: TemplateRef<any> | undefined;\n\n  modalOpen = false;\n\n  readonly isSaveLoadingSubject$ = new BehaviorSubject(false);\n\n  private readonly viewStateSubject$ = new BehaviorSubject<void>(undefined);\n  readonly viewState$: Observable<ChangeLanguageViewState> = this.viewStateSubject$.pipe(\n    userLanguageCommonViewStatePipe(this.userLocalizationService),\n    share(),\n  );\n\n  readonly ids = {\n    languageRegionLabel: generateId('language-region'),\n  };\n\n  constructor(\n    private readonly userLocalizationService: UserLocalizationService,\n    private readonly router: Router,\n    private readonly notificationService: NotificationService,\n    private readonly activatedRoute: ActivatedRoute,\n  ) {}\n\n  public saveChanges({ preferredLanguage }: UserLocalizationSaveClickEventData) {\n    this.isSaveLoadingSubject$.next(true);\n\n    this.userLocalizationService\n      .updateUser({ preferredLanguage })\n      .pipe(\n        switchMap(() => this.userLocalizationService.getUser()),\n        finalize(() => this.isSaveLoadingSubject$.next(false)),\n      )\n      .subscribe({\n        next: () => {\n          this.showNotification(\n            this.notificationChangeLanguageSuccess as TemplateRef<any>,\n            this.notificationChangeLanguageSuccessHeader as TemplateRef<any>,\n          );\n          this.navigateCommunications();\n        },\n        error: () => {\n          this.showNotification(this.notificationFailure as TemplateRef<any>, undefined, 'error');\n        },\n      });\n  }\n\n  cancelChangeLanguage() {\n    this.modalOpen = true;\n  }\n\n  cancelModal() {\n    this.modalOpen = false;\n  }\n\n  discardChanges() {\n    this.modalOpen = false;\n    this.navigateCommunications();\n  }\n\n  navigateCommunications() {\n    this.router.navigate([this.activatedRoute.snapshot?.data?.communicationsPath || '../communications'], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  private showNotification(message: TemplateRef<any>, header?: TemplateRef<any>, modifier?: 'error'): void {\n    this.notificationService.showNotification({\n      header,\n      message,\n      modifier: modifier || 'success',\n      ttl: this.userLocalizationService.config.notificationDismissTime,\n    });\n  }\n\n  get localizationOptions() {\n    return this.userLocalizationService.config.localizationOptions;\n  }\n}\n","<div *ngIf=\"viewState$ | async as state\" data-role=\"user-localization-change-language\">\n  <bb-identity-back-button\n    page=\"Communications\"\n    i18n-page=\"Page description for change language back button@@bb-user-localization-change-language.back-link-page\"\n    (backClick)=\"cancelChangeLanguage()\"\n  >\n  </bb-identity-back-button>\n\n  <div class=\"bb-block bb-block--lg\">\n    <bb-header-ui\n      headingType=\"h1\"\n      data-role=\"user-localization-change-language-header\"\n      heading=\"Change language and region\"\n      i18n-heading=\"Header for change language@@bb-user-localization-change-language.header\"\n    >\n    </bb-header-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\" *ngIf=\"!state.error\">\n    <bb-alert-ui\n      modifier=\"info\"\n      title=\"This only affects external communication including emails, SMS and push notifications.\"\n      i18n-title=\"Alert info notification for change language region@@bb-user-localization-change-language.info\"\n    >\n    </bb-alert-ui>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-identity-view-state-container-component [error]=\"state.error\" [loading]=\"state.loading\">\n        <bb-user-localization-change-language-form\n          [selectedLanguageCode]=\"state.languageRegion?.value || localizationOptions[0]?.value\"\n          [options]=\"localizationOptions\"\n          [saveLoading]=\"(isSaveLoadingSubject$ | async) || false\"\n          (cancelClick)=\"cancelChangeLanguage()\"\n          (saveClick)=\"saveChanges($event)\"\n        >\n        </bb-user-localization-change-language-form>\n      </bb-identity-view-state-container-component>\n    </div>\n  </div>\n\n  <bb-identity-discard-modal-component\n    [modalOpen]=\"modalOpen\"\n    (cancelModalClick)=\"cancelModal()\"\n    (discardChangesClick)=\"discardChanges()\"\n  >\n  </bb-identity-discard-modal-component>\n\n  <ng-template #notificationChangeLanguageSuccessHeader>\n    <strong\n      data-role=\"user-localization-success-notification-header\"\n      i18n=\"\n        Language and region changed success notification\n        header@@bb-user-localization-change-language.notification.success-header\"\n    >\n      Language and region changed successfully\n    </strong>\n  </ng-template>\n\n  <ng-template #notificationChangeLanguageSuccess>\n    <span\n      data-role=\"user-localization-success-notification\"\n      i18n=\"Language and region changed success notification@@bb-user-localization-change-language.notification.success\"\n    >\n      All future emails, SMS and push notification will use your new language and region.\n    </span>\n  </ng-template>\n\n  <ng-template #notificationFailure>\n    <span\n      data-role=\"user-localization-error-notification\"\n      i18n=\"\n        An unexpected error occurred notification@@bb-user-localization-change-language.notification.unexpected-error\"\n    >\n      An unexpected error occurred\n    </span>\n  </ng-template>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'bb-identity-self-service-journey',\n  templateUrl: './identity-self-service-journey.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IdentitySelfServiceJourneyComponent {}\n","<bb-routable-tab-set data-role=\"user-context-routable-tab-set\"></bb-routable-tab-set>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { DiscardModalComponent } from './discard-modal.component';\nimport { BackButtonComponent } from './back-button.component';\n\nconst uiModules = [HeaderModule, ButtonModule, ModalModule, IconModule];\n\nconst components = [DiscardModalComponent, BackButtonComponent];\n\n@NgModule({\n  imports: [CommonModule, ...uiModules],\n  declarations: [...components],\n  exports: [...uiModules, ...components],\n})\nexport class SelfServiceUiModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UserIdentitySecurityCenterWidgetModule } from '@backbase/user-identity-security-center-widget-ang';\nimport { UserManageProfileWidgetModule } from '@backbase/user-manage-profile-widget-ang';\nimport { DeviceInformationWidgetModule } from '@backbase/device-information-widget-ang';\n\nimport { UserIdentitySecurityCenterViewComponent } from './user-identity-security-center-view.component';\nimport { UserManageProfileViewComponent } from './user-manage-profile-view.component';\nimport { DeviceInformationViewComponent } from './device-information-view.component';\nimport { UserLocalizationCommunicationsViewComponent } from './user-localization/communications-view/user-localization-communications-view.component';\nimport { UserLocalizationChangeLanguageViewComponent } from './user-localization/change-language-view/user-localization-change-language-view.component';\nimport { UserLocalizationChangeLanguageFormComponent } from './user-localization/shared/components/user-localization-change-language-form.component';\nimport { UserLocalizationComponent } from './user-localization/user-localization.component';\n\nimport { IdentityCommonAngModule } from '@backbase/identity-common-ang';\nimport { SelfServiceUiModule } from '../ui/self-service-ui.module';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\n\nconst uiModules = [\n  HeaderModule,\n  IconModule,\n  ButtonModule,\n  LoadButtonModule,\n  AlertModule,\n  InputRadioGroupModule,\n  ModalModule,\n  NotificationModule,\n  InputValidationMessageModule,\n];\n\nconst components = [\n  UserIdentitySecurityCenterViewComponent,\n  UserManageProfileViewComponent,\n  DeviceInformationViewComponent,\n  UserLocalizationComponent,\n  UserLocalizationCommunicationsViewComponent,\n  UserLocalizationChangeLanguageViewComponent,\n  UserLocalizationChangeLanguageFormComponent,\n];\n\nconst widgetModules = [\n  UserIdentitySecurityCenterWidgetModule,\n  UserManageProfileWidgetModule,\n  DeviceInformationWidgetModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    ...uiModules,\n    ...widgetModules,\n    IdentityCommonAngModule,\n    SelfServiceUiModule,\n  ],\n  declarations: [...components],\n  exports: [RouterModule, ...components, ...widgetModules],\n})\nexport class SelfServiceFeaturesModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\n\nimport { UserIdentitySecurityCenterViewComponent } from './features/user-identity-security-center-view.component';\nimport { UserManageProfileViewComponent } from './features/user-manage-profile-view.component';\nimport { DeviceInformationViewComponent } from './features/device-information-view.component';\nimport { UserLocalizationComponent } from './features/user-localization/user-localization.component';\nimport { UserLocalizationCommunicationsViewComponent } from './features/user-localization/communications-view/user-localization-communications-view.component';\nimport { UserLocalizationChangeLanguageViewComponent } from './features/user-localization/change-language-view/user-localization-change-language-view.component';\nimport { IdentitySelfServiceJourneyComponent } from './identity-self-service-journey.component';\nimport { IdentityCommonAngModule } from '@backbase/identity-common-ang';\n\nimport { SelfServiceFeaturesModule } from './features/self-service-features.module';\nimport { IdentitySelfServiceJourneyConfigurationService } from './identity-self-service-journey.config.service';\n\nexport const defaultRoute: Route = {\n  path: '',\n  component: IdentitySelfServiceJourneyComponent,\n  children: [\n    { path: '', redirectTo: 'profile', pathMatch: 'full' },\n    {\n      path: 'profile',\n      data: {\n        title: $localize`:Tab label for managing user profile@@bb-identity-self-service-journey.tab-user-manage-profile:Profile`,\n      },\n      component: UserManageProfileViewComponent,\n    },\n    {\n      path: 'user-localization',\n      data: {\n        title: $localize`:Tab label for changing user preferences@@bb-identity-self-service-journey.tab-localization:Localization`,\n      },\n      component: UserLocalizationComponent,\n      children: [\n        { path: '', redirectTo: 'communications', pathMatch: 'full' },\n        {\n          path: 'communications',\n          component: UserLocalizationCommunicationsViewComponent,\n        },\n        {\n          path: 'change-language',\n          component: UserLocalizationChangeLanguageViewComponent,\n        },\n      ],\n    },\n    {\n      path: 'login-security',\n      data: {\n        title: $localize`:Tab label for login and security settings@@bb-identity-self-service-journey.tab-login-security:Login & security`,\n      },\n      component: UserIdentitySecurityCenterViewComponent,\n    },\n    {\n      path: 'devices',\n      data: { title: $localize`:Tab label for managing devices@@bb-identity-self-service-journey.tab-devices:Devices` },\n      component: DeviceInformationViewComponent,\n    },\n  ],\n};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    BackbaseCoreModule.forRoot({\n      classMap: {\n        IdentitySelfServiceJourneyComponent,\n      },\n    }),\n    IdentityCommonAngModule,\n    SelfServiceFeaturesModule,\n  ],\n  declarations: [IdentitySelfServiceJourneyComponent],\n  providers: [IdentitySelfServiceJourneyConfigurationService],\n  exports: [RouterModule, IdentitySelfServiceJourneyComponent],\n})\nexport class IdentitySelfServiceJourneyModule {\n  static forRoot(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: { route: Route; [key: string]: any } = { route: defaultRoute },\n  ): ModuleWithProviders<IdentitySelfServiceJourneyModule> {\n    return {\n      ngModule: IdentitySelfServiceJourneyModule,\n      providers: [provideRoutes([data.route])],\n    };\n  }\n}\n","/**\n * Shell\n */\nexport { IdentitySelfServiceJourneyModule, defaultRoute } from './lib/identity-self-service-journey.module';\nexport { IdentitySelfServiceJourneyComponent } from './lib/identity-self-service-journey.component';\nexport { IdentitySelfServiceJourneyConfigurationService } from './lib/identity-self-service-journey.config.service';\n\nexport {\n  IdentitySelfServiceJourneyConfigurationToken,\n  IdentitySelfServiceJourneyConfiguration,\n} from './lib/identity-self-service-journey.types';\n\n/**\n * Features\n */\nexport { SelfServiceFeaturesModule } from './lib/features/self-service-features.module';\n\nexport { UserIdentitySecurityCenterViewComponent } from './lib/features/user-identity-security-center-view.component';\nexport { UserManageProfileViewComponent } from './lib/features/user-manage-profile-view.component';\nexport { DeviceInformationViewComponent } from './lib/features/device-information-view.component';\n\nexport { UserLocalizationComponent } from './lib/features/user-localization/user-localization.component';\nexport { UserLocalizationChangeLanguageFormComponent } from './lib/features/user-localization/shared/components/user-localization-change-language-form.component';\nexport { UserLocalizationChangeLanguageViewComponent } from './lib/features/user-localization/change-language-view/user-localization-change-language-view.component';\nexport { UserLocalizationCommunicationsViewComponent } from './lib/features/user-localization/communications-view/user-localization-communications-view.component';\n\nexport { UserLocalizationService } from './lib/features/user-localization/user-localization.service';\n\n/**\n * UI\n */\nexport { SelfServiceUiModule } from './lib/ui/self-service-ui.module';\n\nexport { BackButtonComponent } from './lib/ui/back-button.component';\nexport { DiscardModalComponent } from './lib/ui/discard-modal.component';\n\n/**\n * Util\n */\nexport * from './lib/util';\n\n/**\n * Configuration\n */\nexport { DeviceInformationJourneyConfiguration } from './lib/identity-self-service-journey.types';\nexport { UserIdentitySecurityCenterJourneyConfiguration } from './lib/identity-self-service-journey.types';\nexport { UserManageProfileJourneyConfiguration } from './lib/identity-self-service-journey.types';\nexport { UserLocalizationJourneyConfiguration } from './lib/identity-self-service-journey.types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["uiModules","components"],"mappings":"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"}