{"version":3,"file":"identity-self-service-journey.config.service.js","sourceRoot":"","sources":["../../../../../libs/identity-self-service-journey-ang/src/lib/identity-self-service-journey.config.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC7D,OAAO,EAEL,4CAA4C,GAC7C,MAAM,uCAAuC,CAAC;AAC/C,OAAO,EAAe,0BAA0B,EAAE,MAAM,+BAA+B,CAAC;AACxF,OAAO,EAAE,mBAAmB,EAAE,MAAM,uDAAuD,CAAC;;AAE5F,MAAM,uBAAuB,GAAG,CAAC,CAAC;AAClC,MAAM,iBAAiB,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;AAC/C,MAAM,kBAAkB,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AAC3D,MAAM,gBAAgB,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AACpD,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAC5B,MAAM,eAAe,GAAG,CAAC,CAAC;AAC1B,MAAM,kBAAkB,GAAG,CAAC,CAAC;AAC7B,MAAM,gBAAgB,GAAG,IAAI,CAAC;AAC9B,MAAM,sBAAsB,GAAG,IAAI,CAAC;AACpC,MAAM,uBAAuB,GAAG,CAAC,CAAC;AAClC,MAAM,0BAA0B,GAAG,IAAI,CAAC;AACxC,MAAM,oBAAoB,GAAG,IAAI,CAAC;AAClC,MAAM,oBAAoB,GAAG,QAAQ,CAAC;AAEtC,MAAM,cAAc,GAA4C;IAC9D,0BAA0B,EAAE;QAC1B,uBAAuB;KACxB;IACD,iBAAiB,EAAE;QACjB,uBAAuB;QACvB,iBAAiB,EAAE,CAAC,GAAG,iBAAiB,CAAC;QACzC,kBAAkB,EAAE,CAAC,GAAG,kBAAkB,CAAC;QAC3C,gBAAgB,EAAE,CAAC,GAAG,gBAAgB,CAAC;QACvC,iBAAiB;QACjB,eAAe;QACf,kBAAkB;QAClB,gBAAgB;QAChB,sBAAsB;QACtB,uBAAuB;QACvB,0BAA0B;KAC3B;IACD,iBAAiB,EAAE;QACjB,uBAAuB;QACvB,oBAAoB;KACrB;IACD,gBAAgB,EAAE;QAChB,uBAAuB;QACvB,mBAAmB,EAAE,CAAC,GAAG,mBAAmB,CAAC;QAC7C,oBAAoB;KACrB;CACF,CAAC;AAKF,MAAM,OAAO,8CAA8C;IAGzD,YAGE,eAAsE;QAEtE,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAA0C,cAAc,EAAE,eAAe,CAAC,CAAC;IACrH,CAAC;IAED,IAAI,0BAA0B;QAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,0BAA0B,CAAC;IAChD,CAAC;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;IACvC,CAAC;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;IACvC,CAAC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;IACtC,CAAC;;+JAzBU,8CAA8C,kBAK/C,4CAA4C;mKAL3C,8CAA8C,cAF7C,MAAM;4FAEP,8CAA8C;kBAH1D,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;0BAKI,QAAQ;;0BACR,MAAM;2BAAC,4CAA4C","sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  IdentitySelfServiceJourneyConfiguration,\n  IdentitySelfServiceJourneyConfigurationToken,\n} from './identity-self-service-journey.types';\nimport { DeepPartial, createJourneyConfiguration } from '@backbase/identity-common-ang';\nimport { localizationOptions } from './features/user-localization/user-localization.config';\n\nconst notificationDismissTime = 3;\nconst emailAddressTypes = ['Personal', 'Work'];\nconst postalAddressTypes = ['Home', 'Business', 'Mailing'];\nconst phoneNumberTypes = ['Home', 'Work', 'Mobile'];\nconst maxEmailAddresses = 3;\nconst maxPhoneNumbers = 3;\nconst maxPostalAddresses = 3;\nconst showWidgetHeader = true;\nconst phoneNumberCountryCode = 'CA';\nconst phoneNumberDebounceTime = 1;\nconst enablePhoneNumberFormatter = true;\nconst showEditableLanguage = true;\nconst routeParamNameUserId = 'userId';\n\nconst configDefaults: IdentitySelfServiceJourneyConfiguration = {\n  userIdentitySecurityCenter: {\n    notificationDismissTime,\n  },\n  userManageProfile: {\n    notificationDismissTime,\n    emailAddressTypes: [...emailAddressTypes],\n    postalAddressTypes: [...postalAddressTypes],\n    phoneNumberTypes: [...phoneNumberTypes],\n    maxEmailAddresses,\n    maxPhoneNumbers,\n    maxPostalAddresses,\n    showWidgetHeader,\n    phoneNumberCountryCode,\n    phoneNumberDebounceTime,\n    enablePhoneNumberFormatter,\n  },\n  deviceInformation: {\n    notificationDismissTime,\n    routeParamNameUserId,\n  },\n  userLocalization: {\n    notificationDismissTime,\n    localizationOptions: [...localizationOptions],\n    showEditableLanguage,\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentitySelfServiceJourneyConfigurationService {\n  private config: Readonly<Required<IdentitySelfServiceJourneyConfiguration>>;\n\n  constructor(\n    @Optional()\n    @Inject(IdentitySelfServiceJourneyConfigurationToken)\n    configOverrides?: DeepPartial<IdentitySelfServiceJourneyConfiguration>,\n  ) {\n    this.config = createJourneyConfiguration<IdentitySelfServiceJourneyConfiguration>(configDefaults, configOverrides);\n  }\n\n  get userIdentitySecurityCenter() {\n    return this.config.userIdentitySecurityCenter;\n  }\n\n  get userManageProfile() {\n    return this.config.userManageProfile;\n  }\n\n  get deviceInformation() {\n    return this.config.deviceInformation;\n  }\n\n  get userLocalization() {\n    return this.config.userLocalization;\n  }\n}\n"]}