import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "@backbase/ui-ang/button";
export class DiscardModalComponent {
    constructor() {
        /**
         * Set whether modal show be open
         */
        this.modalOpen = false;
        /**
         * Output to track when cancel was clicked
         */
        this.cancelModalClick = new EventEmitter();
        /**
         * Output to track when discard was clicked
         */
        this.discardChangesClick = new EventEmitter();
    }
}
/** @nocollapse */ DiscardModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DiscardModalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ DiscardModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: DiscardModalComponent, selector: "bb-identity-discard-modal-component", inputs: { modalOpen: "modalOpen" }, outputs: { cancelModalClick: "cancelModalClick", discardChangesClick: "discardChangesClick" }, ngImport: i0, template: "<bb-modal-ui data-role=\"discard-modal\" [isOpen]=\"modalOpen\" (cancel)=\"cancelModalClick.emit()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div data-role=\"discard-modal-header\">\n        <bb-header-ui\n          headingType=\"h3\"\n          i18n-heading=\"Discard changes modal title@@bb-identity-discard-modal.title\"\n          heading=\"Discard changes?\"\n        >\n        </bb-header-ui>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody i18n=\"Discard changes modal body@@bb-identity-discard-modal.body\">\n      Any unsaved changes you've made will be lost.\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <button\n        bbButton\n        data-role=\"discard-modal-cancel-button\"\n        color=\"secondary\"\n        (click)=\"cancelModalClick.emit()\"\n        i18n=\"Dismiss discard modal button@@bb-identity-discard-modal.cancel\"\n      >\n        Cancel\n      </button>\n      <button\n        bbButton\n        data-role=\"discard-modal-confirm-button\"\n        (click)=\"discardChangesClick.emit()\"\n        i18n=\"Confirm discard modal button@@bb-identity-discard-modal.confirm\"\n      >\n        Discard\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i3.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DiscardModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-identity-discard-modal-component',
                    templateUrl: './discard-modal.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { modalOpen: [{
                type: Input
            }], cancelModalClick: [{
                type: Output
            }], discardChangesClick: [{
                type: Output
            }] } });
//# sourceMappingURL=discard-modal.component.js.map