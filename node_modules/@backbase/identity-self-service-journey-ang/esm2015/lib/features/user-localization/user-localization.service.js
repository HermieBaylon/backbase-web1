import { Injectable } from '@angular/core';
import { UserManagementService } from '@backbase/user-http-ang';
import { IdentitySelfServiceJourneyConfigurationService } from '../../identity-self-service-journey.config.service';
import { cacheItem } from '../../util';
import { localizationOptions } from './user-localization.config';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/user-http-ang";
import * as i2 from "../../identity-self-service-journey.config.service";
export class UserLocalizationService {
    constructor(dataService, 
    /** @internal */
    configService) {
        this.dataService = dataService;
        this.configService = configService;
        this.getUserCacheItem = cacheItem(this.dataService.getOwnUser.bind(this.dataService));
        this.getUser$ = this.getUserCacheItem.state$;
        this.getUser = this.getUserCacheItem.update;
        this.defaultLocalizationOptions = localizationOptions;
        this.config = Object.freeze(Object.assign(Object.assign({}, this.configService.userLocalization), { notificationDismissTime: (this.configService.userLocalization.notificationDismissTime || 0) * 1000 }));
    }
    updateUser(userVO) {
        return this.dataService.updateOwnLanguage({
            updatePreferredLanguage: {
                preferredLanguage: userVO.preferredLanguage || '',
            },
        });
    }
}
/** @nocollapse */ UserLocalizationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserLocalizationService, deps: [{ token: i1.UserManagementService }, { token: i2.IdentitySelfServiceJourneyConfigurationService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ UserLocalizationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserLocalizationService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserLocalizationService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.UserManagementService }, { type: i2.IdentitySelfServiceJourneyConfigurationService }]; } });
//# sourceMappingURL=user-localization.service.js.map