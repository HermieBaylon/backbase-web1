{"version":3,"file":"user-localization.service.js","sourceRoot":"","sources":["../../../../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/user-localization.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAc,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAC5E,OAAO,EAAE,8CAA8C,EAAE,MAAM,oDAAoD,CAAC;AAEpH,OAAO,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AACvC,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;;;;AAGjE,MAAM,OAAO,uBAAuB;IAYlC,YACmB,WAAkC;IACnD,gBAAgB;IACP,aAA6D;QAFrD,gBAAW,GAAX,WAAW,CAAuB;QAE1C,kBAAa,GAAb,aAAa,CAAgD;QAdvD,qBAAgB,GAAG,SAAS,CAAa,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9F,aAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACxC,YAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;QAEvC,+BAA0B,GAAG,mBAAmB,CAAC;QAEjD,WAAM,GAAyC,MAAM,CAAC,MAAM,iCACvE,IAAI,CAAC,aAAa,CAAC,gBAAgB,KACtC,uBAAuB,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,uBAAuB,IAAI,CAAC,CAAC,GAAG,IAAI,IAClG,CAAC;IAMA,CAAC;IAEJ,UAAU,CAAC,MAA2B;QACpC,OAAO,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC;YACxC,uBAAuB,EAAE;gBACvB,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,IAAI,EAAE;aAClD;SACF,CAAC,CAAC;IACL,CAAC;;wIAxBU,uBAAuB;4IAAvB,uBAAuB;4FAAvB,uBAAuB;kBADnC,UAAU","sourcesContent":["import { Injectable } from '@angular/core';\nimport { GetOwnUser, UserManagementService } from '@backbase/user-http-ang';\nimport { IdentitySelfServiceJourneyConfigurationService } from '../../identity-self-service-journey.config.service';\nimport { UserLocalizationJourneyConfiguration } from '../../identity-self-service-journey.types';\nimport { cacheItem } from '../../util';\nimport { localizationOptions } from './user-localization.config';\n\n@Injectable()\nexport class UserLocalizationService {\n  private readonly getUserCacheItem = cacheItem<GetOwnUser>(this.dataService.getOwnUser.bind(this.dataService));\n  public readonly getUser$ = this.getUserCacheItem.state$;\n  public readonly getUser = this.getUserCacheItem.update;\n\n  public readonly defaultLocalizationOptions = localizationOptions;\n\n  public readonly config: UserLocalizationJourneyConfiguration = Object.freeze({\n    ...this.configService.userLocalization,\n    notificationDismissTime: (this.configService.userLocalization.notificationDismissTime || 0) * 1000,\n  });\n\n  constructor(\n    private readonly dataService: UserManagementService,\n    /** @internal */\n    readonly configService: IdentitySelfServiceJourneyConfigurationService,\n  ) {}\n\n  updateUser(userVO: Partial<GetOwnUser>) {\n    return this.dataService.updateOwnLanguage({\n      updatePreferredLanguage: {\n        preferredLanguage: userVO.preferredLanguage || '',\n      },\n    });\n  }\n}\n"]}