{"version":3,"file":"user-localization-change-language-view.component.js","sourceRoot":"","sources":["../../../../../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/change-language-view/user-localization-change-language-view.component.ts","../../../../../../../../libs/identity-self-service-journey-ang/src/lib/features/user-localization/change-language-view/user-localization-change-language-view.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { generateId, LoadableViewState } from '@backbase/identity-common-ang';\nimport { UserLocalizationOptionVM, UserLocalizationSaveClickEventData } from '../../../util';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { finalize, share, switchMap } from 'rxjs/operators';\nimport { UserLocalizationService } from '../user-localization.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { userLanguageCommonViewStatePipe } from '../shared/user-language-common-view-state.pipe';\n\ninterface ChangeLanguageViewState extends LoadableViewState {\n  languageRegion?: UserLocalizationOptionVM;\n}\n\n@Component({\n  selector: 'bb-user-localization-change-language-view',\n  templateUrl: 'user-localization-change-language-view.component.html',\n})\nexport class UserLocalizationChangeLanguageViewComponent {\n  @ViewChild('notificationChangeLanguageSuccess') notificationChangeLanguageSuccess: TemplateRef<any> | undefined;\n  @ViewChild('notificationChangeLanguageSuccessHeader') notificationChangeLanguageSuccessHeader:\n    | TemplateRef<any>\n    | undefined;\n  @ViewChild('notificationFailure') notificationFailure: TemplateRef<any> | undefined;\n\n  modalOpen = false;\n\n  readonly isSaveLoadingSubject$ = new BehaviorSubject(false);\n\n  private readonly viewStateSubject$ = new BehaviorSubject<void>(undefined);\n  readonly viewState$: Observable<ChangeLanguageViewState> = this.viewStateSubject$.pipe(\n    userLanguageCommonViewStatePipe(this.userLocalizationService),\n    share(),\n  );\n\n  readonly ids = {\n    languageRegionLabel: generateId('language-region'),\n  };\n\n  constructor(\n    private readonly userLocalizationService: UserLocalizationService,\n    private readonly router: Router,\n    private readonly notificationService: NotificationService,\n    private readonly activatedRoute: ActivatedRoute,\n  ) {}\n\n  public saveChanges({ preferredLanguage }: UserLocalizationSaveClickEventData) {\n    this.isSaveLoadingSubject$.next(true);\n\n    this.userLocalizationService\n      .updateUser({ preferredLanguage })\n      .pipe(\n        switchMap(() => this.userLocalizationService.getUser()),\n        finalize(() => this.isSaveLoadingSubject$.next(false)),\n      )\n      .subscribe({\n        next: () => {\n          this.showNotification(\n            this.notificationChangeLanguageSuccess as TemplateRef<any>,\n            this.notificationChangeLanguageSuccessHeader as TemplateRef<any>,\n          );\n          this.navigateCommunications();\n        },\n        error: () => {\n          this.showNotification(this.notificationFailure as TemplateRef<any>, undefined, 'error');\n        },\n      });\n  }\n\n  cancelChangeLanguage() {\n    this.modalOpen = true;\n  }\n\n  cancelModal() {\n    this.modalOpen = false;\n  }\n\n  discardChanges() {\n    this.modalOpen = false;\n    this.navigateCommunications();\n  }\n\n  navigateCommunications() {\n    this.router.navigate([this.activatedRoute.snapshot?.data?.communicationsPath || '../communications'], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  private showNotification(message: TemplateRef<any>, header?: TemplateRef<any>, modifier?: 'error'): void {\n    this.notificationService.showNotification({\n      header,\n      message,\n      modifier: modifier || 'success',\n      ttl: this.userLocalizationService.config.notificationDismissTime,\n    });\n  }\n\n  get localizationOptions() {\n    return this.userLocalizationService.config.localizationOptions;\n  }\n}\n","<div *ngIf=\"viewState$ | async as state\" data-role=\"user-localization-change-language\">\n  <bb-identity-back-button\n    page=\"Communications\"\n    i18n-page=\"Page description for change language back button@@bb-user-localization-change-language.back-link-page\"\n    (backClick)=\"cancelChangeLanguage()\"\n  >\n  </bb-identity-back-button>\n\n  <div class=\"bb-block bb-block--lg\">\n    <bb-header-ui\n      headingType=\"h1\"\n      data-role=\"user-localization-change-language-header\"\n      heading=\"Change language and region\"\n      i18n-heading=\"Header for change language@@bb-user-localization-change-language.header\"\n    >\n    </bb-header-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--lg\" *ngIf=\"!state.error\">\n    <bb-alert-ui\n      modifier=\"info\"\n      title=\"This only affects external communication including emails, SMS and push notifications.\"\n      i18n-title=\"Alert info notification for change language region@@bb-user-localization-change-language.info\"\n    >\n    </bb-alert-ui>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <bb-identity-view-state-container-component [error]=\"state.error\" [loading]=\"state.loading\">\n        <bb-user-localization-change-language-form\n          [selectedLanguageCode]=\"state.languageRegion?.value || localizationOptions[0]?.value\"\n          [options]=\"localizationOptions\"\n          [saveLoading]=\"(isSaveLoadingSubject$ | async) || false\"\n          (cancelClick)=\"cancelChangeLanguage()\"\n          (saveClick)=\"saveChanges($event)\"\n        >\n        </bb-user-localization-change-language-form>\n      </bb-identity-view-state-container-component>\n    </div>\n  </div>\n\n  <bb-identity-discard-modal-component\n    [modalOpen]=\"modalOpen\"\n    (cancelModalClick)=\"cancelModal()\"\n    (discardChangesClick)=\"discardChanges()\"\n  >\n  </bb-identity-discard-modal-component>\n\n  <ng-template #notificationChangeLanguageSuccessHeader>\n    <strong\n      data-role=\"user-localization-success-notification-header\"\n      i18n=\"\n        Language and region changed success notification\n        header@@bb-user-localization-change-language.notification.success-header\"\n    >\n      Language and region changed successfully\n    </strong>\n  </ng-template>\n\n  <ng-template #notificationChangeLanguageSuccess>\n    <span\n      data-role=\"user-localization-success-notification\"\n      i18n=\"Language and region changed success notification@@bb-user-localization-change-language.notification.success\"\n    >\n      All future emails, SMS and push notification will use your new language and region.\n    </span>\n  </ng-template>\n\n  <ng-template #notificationFailure>\n    <span\n      data-role=\"user-localization-error-notification\"\n      i18n=\"\n        An unexpected error occurred notification@@bb-user-localization-change-language.notification.unexpected-error\"\n    >\n      An unexpected error occurred\n    </span>\n  </ng-template>\n</div>\n"]}