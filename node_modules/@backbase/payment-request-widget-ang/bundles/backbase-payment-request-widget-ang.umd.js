(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@backbase/foundation-ang/core'), require('@backbase/consent-ui'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/alert'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/product-item-basic-account'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/amount'), require('@backbase/ui-ang/notification'), require('@backbase/ui-ang/account-selector'), require('rxjs'), require('rxjs/operators'), require('@backbase/data-ang/consent'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('@backbase/payment-request-widget-ang', ['exports', '@angular/core', '@angular/common', '@backbase/foundation-ang/core', '@backbase/consent-ui', '@backbase/ui-ang/button', '@backbase/ui-ang/alert', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/product-item-basic-account', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/amount', '@backbase/ui-ang/notification', '@backbase/ui-ang/account-selector', 'rxjs', 'rxjs/operators', '@backbase/data-ang/consent', '@angular/router'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["payment-request-widget-ang"] = {}), global.ng.core, global.ng.common, global.i1$1, global.i1$3, global.i10, global.i3, global.i7, global.i2$1, global.i1$2, global.i1, global.i2$2, global.i1$4, global.rxjs, global.rxjs.operators, global.i1$5, global.ng.router));
})(this, (function (exports, i0, i2, i1$1, i1$3, i10, i3, i7, i2$1, i1$2, i1, i2$2, i1$4, rxjs, operators, i1$5, i2$3) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace$5 = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$3);
    var i10__namespace = /*#__PURE__*/_interopNamespace(i10);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$4);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1$5);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2$3);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var PaymentRequestAmountComponent = /** @class */ (function () {
        function PaymentRequestAmountComponent() {
            /**
             * Component context
             */
            this.hostRef = this;
            /**
             * Amount of the request
             */
            this.amount = '';
            /**
             * Currency of the request
             */
            this.currency = '';
        }
        return PaymentRequestAmountComponent;
    }());
    PaymentRequestAmountComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestAmountComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentRequestAmountComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestAmountComponent, selector: "bb-payment-request-amount", inputs: { amount: "amount", currency: "currency" }, ngImport: i0__namespace, template: "<ng-container\n  bbPaymentRequestAmountCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    amount: amount,\n    currency: currency\n  }\">\n</ng-container>\n\n<ng-template bbPaymentRequestAmountCustomizable let-hostRef let-amount=\"context.amount\" let-currency=\"context.currency\">\n  <div\n    i18n=\"Amount|Amount message@@payment-request.label.amount\"\n    data-role=\"amount-label\"\n    class=\"bb-block bb-block--sm bb-text-bold\">\n    Amount\n  </div>\n  <bb-amount-ui\n    class=\"bb-payment-request__amount\"\n    data-role=\"amount-value\"\n    [amount]=\"amount\"\n    [currency]=\"currency\"></bb-amount-ui>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i0__namespace.forwardRef(function () { return PaymentRequestAmountCustomizableDirective; }), selector: "[bbPaymentRequestAmountCustomizable]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestAmountComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-request-amount',
                        templateUrl: './payment-request-amount.component.html',
                    }]
            }], propDecorators: { amount: [{
                    type: i0.Input
                }], currency: [{
                    type: i0.Input
                }] } });
    var PaymentRequestAmountCustomizableDirective = /** @class */ (function (_super) {
        __extends(PaymentRequestAmountCustomizableDirective, _super);
        function PaymentRequestAmountCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return PaymentRequestAmountCustomizableDirective;
    }(i1$1.BbTemplate));
    PaymentRequestAmountCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestAmountCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    PaymentRequestAmountCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestAmountCustomizableDirective, selector: "[bbPaymentRequestAmountCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestAmountCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbPaymentRequestAmountCustomizable]',
                    }]
            }] });

    var PaymentRequestErrorComponent = /** @class */ (function () {
        function PaymentRequestErrorComponent() {
        }
        return PaymentRequestErrorComponent;
    }());
    PaymentRequestErrorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestErrorComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentRequestErrorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestErrorComponent, selector: "bb-payment-request-error", inputs: { paymentRequestId: "paymentRequestId", errorKind: "errorKind" }, ngImport: i0__namespace, template: "<bb-empty-state-ui\n  *ngIf=\"!paymentRequestId\"\n  title=\"Unexpected Error\"\n  i18n-title=\"\n    Unexpected Error title|Empty state label when there is an unexpected\n    error@@payment-request.error.noPaymentRequest.title\"\n  subtitle=\"Something's gone wrong with our server. Please try again later.\"\n  i18n-subtitle=\"\n    Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n    error@@payment-request.error.noPaymentRequest.subtitle\"\n  iconModifier=\"error\"></bb-empty-state-ui>\n<ng-container *ngIf=\"paymentRequestId && errorKind\" [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'PaymentRequestAccessDenied'\"\n    title=\"Permissions required\"\n    i18n-title=\"\n      Permissions required|Error state label when user does not have permissions to view payment\n      request@@payment-request.error.accessDenied.title\"\n    subtitle=\"You don't have permissions to allow payments.\"\n    i18n-subtitle=\"\n      No Permissions Subtitle|Error state subtitle label when user does not have permissions to view payment\n      requests@@payment-request.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'PaymentRequestConnectivityError'\"\n    title=\"Connectivity Error\"\n    i18n-title=\"\n      Connectivity Error title|Empty state label when there is connectivity\n      error@@payment-request.error.connectivity.title\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n    i18n-subtitle=\"\n      Connectivity Error subtitle|Empty state subtitle label when there is connectivity\n      error@@payment-request.error.connectivity.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n\n  <!-- This will usually happen on environment misconfiguration -->\n  <!-- PaymentRequestNotFound | PaymentRequestUnknownError | PaymentRequestBadRequest-->\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"Unexpected Error\"\n    i18n-title=\"\n      Unexpected Error title|Empty state label when there is an unexpected error@@payment-request.error.unexpected.title\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n    i18n-subtitle=\"\n      Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n      error@@payment-request.error.unexpected.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n</ng-container>\n", components: [{ type: i1__namespace$1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2__namespace.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2__namespace.NgSwitchDefault, selector: "[ngSwitchDefault]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestErrorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-request-error',
                        templateUrl: './payment-request-error.component.html',
                    }]
            }], propDecorators: { paymentRequestId: [{
                    type: i0.Input
                }], errorKind: [{
                    type: i0.Input
                }] } });

    var PaymentRequestTppInformationComponent = /** @class */ (function () {
        function PaymentRequestTppInformationComponent() {
            /**
             * Component context
             */
            this.hostRef = this;
        }
        return PaymentRequestTppInformationComponent;
    }());
    PaymentRequestTppInformationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestTppInformationComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentRequestTppInformationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestTppInformationComponent, selector: "bb-payment-request-tpp-information", inputs: { tpp: "tpp" }, ngImport: i0__namespace, template: "<ng-container bbPaymentRequestTppInformationCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"tpp\">\n</ng-container>\n\n<ng-template bbPaymentRequestTppInformationCustomizable let-hostRef let-tpp=\"context\">\n  <div\n    class=\"bb-block bb-block--sm bb-text-bold\"\n    data-role=\"pay-to-label\"\n    i18n=\"Pay to|Third party information@@payment-request.label.payTo\">\n    Pay to\n  </div>\n\n  <div class=\"card card-sm\">\n    <div class=\"card-body\">\n      <bb-third-party-provider-ui\n        [name]=\"tpp.name\"\n        [url]=\"tpp.website\"\n        [verified]=\"tpp.isTrusted\"\n        [image]=\"tpp.imageUrl\"\n        data-role=\"third-party-provider-label\">\n      </bb-third-party-provider-ui>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$2.ӨThirdPartyProviderComponent; }), selector: "bb-third-party-provider-ui", inputs: ["name", "image", "url", "verified", "condensed", "expiryDate", "expired", "showExpire"] }], directives: [{ type: i0__namespace.forwardRef(function () { return PaymentRequestTppInformationCustomizableDirective; }), selector: "[bbPaymentRequestTppInformationCustomizable]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestTppInformationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-request-tpp-information',
                        templateUrl: './payment-request-tpp-information.component.html',
                    }]
            }], propDecorators: { tpp: [{
                    type: i0.Input
                }] } });
    var PaymentRequestTppInformationCustomizableDirective = /** @class */ (function (_super) {
        __extends(PaymentRequestTppInformationCustomizableDirective, _super);
        function PaymentRequestTppInformationCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return PaymentRequestTppInformationCustomizableDirective;
    }(i1$1.BbTemplate));
    PaymentRequestTppInformationCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestTppInformationCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    PaymentRequestTppInformationCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestTppInformationCustomizableDirective, selector: "[bbPaymentRequestTppInformationCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestTppInformationCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbPaymentRequestTppInformationCustomizable]',
                    }]
            }] });

    var PaymentRequestAccountSelectorComponent = /** @class */ (function () {
        function PaymentRequestAccountSelectorComponent() {
            /**
             * Component context
             */
            this.hostRef = this;
            /**
             * If error should be shown
             */
            this.showError = false;
            /**
             * List of accounts
             */
            this.accounts = [];
            /**
             * Emitter that fires when selecting account
             */
            this.selectedAccountChange = new i0.EventEmitter();
        }
        /**
         * Select account event handler
         * @param account
         */
        PaymentRequestAccountSelectorComponent.prototype.onSelectAccount = function (account) {
            this.selectedAccountChange.emit(account);
            this.showError = false;
        };
        return PaymentRequestAccountSelectorComponent;
    }());
    PaymentRequestAccountSelectorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestAccountSelectorComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentRequestAccountSelectorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestAccountSelectorComponent, selector: "bb-payment-request-account-selector", inputs: { showError: "showError", accounts: "accounts", selectedAccount: "selectedAccount" }, outputs: { selectedAccountChange: "selectedAccountChange" }, ngImport: i0__namespace, template: "<ng-container bbPaymentRequestAccountSelectorCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"accounts\">\n</ng-container>\n\n<ng-template bbPaymentRequestAccountSelectorCustomizable let-hostRef let-accounts=\"context\">\n  <div\n    class=\"bb-block bb-block--sm bb-text-bold\"\n    data-role=\"from-account-label\"\n    i18n=\"From account|From account label@@payment-request.label.fromAccount\">\n    From account\n  </div>\n  <div [ngClass]=\"{ 'border border-danger rounded': hostRef.showError }\">\n    <bb-account-selector-ui\n      data-role=\"account-selector\"\n      [items]=\"accounts\"\n      [disableScrollEnd]=\"false\"\n      [multiple]=\"false\"\n      [closeOnSelect]=\"true\"\n      [filterItems]=\"false\"\n      [selectedItems]=\"hostRef.selectedAccount\"\n      [dropdownPosition]=\"'bottom'\"\n      (change)=\"hostRef.onSelectAccount($event)\"\n      placeholder=\"Select Accounts\"\n      i18n-placeholder=\"Select Accounts placeholder@@payment-request.account-selector.placeholder\">\n      <ng-template bbCustomSingleSelectedItemLabel let-item=\"item\">\n        <bb-product-item-basic-account-ui\n          [active]=\"true\"\n          [amount]=\"item.balance\"\n          [currency]=\"item.currency\"\n          [productNumber]=\"item.IBAN || item.BBAN || item.number\"\n          [title]=\"item.name\">\n          <ng-template bbCustomProductItemBasicAccountDetailsFormatter let-amount=\"amount\" let-currency=\"currency\">\n            <bb-amount-ui\n              class=\"font-weight-bold\"\n              [amount]=\"amount\"\n              [currency]=\"currency\"\n              [mapCurrency]=\"false\"></bb-amount-ui>\n          </ng-template>\n        </bb-product-item-basic-account-ui>\n      </ng-template>\n    </bb-account-selector-ui>\n  </div>\n  <div\n    *ngIf=\"hostRef.showError\"\n    class=\"bb-payment-request-product-selector__no-account\"\n    data-role=\"no-accounts-error-message\"\n    i18n=\"Select an account|No account selected label@@payment-request.label.noAccountSelected\">\n    Select an account.\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$3.AccountSelectorComponent; }), selector: "bb-account-selector-ui", inputs: ["items", "disabled", "notFoundText", "showError", "productNumberFormat", "selectedItems", "multiple", "closeOnSelect", "searchable", "clearable", "placeholder", "loading", "dropdownPosition", "disableScrollEnd", "highlight", "filterItems", "markFirst", "internalFiltering", "virtualScroll", "required", "typeahead", "minTermLength", "typeToSearchText", "aria-describedby", "aria-labelledby", "aria-invalid", "searchFunc", "showCurrencySymbol", "showBankBranchCode", "groupByFn", "groupValueFn", "size", "compareItemsWith"], outputs: ["search", "clearSearch", "scroll", "scrollToEnd", "remove", "change", "filterChange", "focus", "blur"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.ProductItemBasicAccountComponent; }), selector: "bb-product-item-basic-account-ui", inputs: ["title", "productNumber", "productNumberFormat", "currency", "showCurrencySymbol", "amount", "highlight", "productDetailsInfo", "active", "favorite", "favoriteIconColor", "selected", "type", "status", "balanceLabel", "bankBranchCode"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i0__namespace.forwardRef(function () { return PaymentRequestAccountSelectorCustomizableDirective; }), selector: "[bbPaymentRequestAccountSelectorCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace$3.CustomSingleSelectedItemLabelDirective; }), selector: "ng-template[bbCustomSingleSelectedItemLabel]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.CustomProductItemBasicAccountDetailsFormatterDirective; }), selector: "ng-template[bbCustomProductItemBasicAccountDetailsFormatter]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestAccountSelectorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-request-account-selector',
                        templateUrl: './payment-request-account-selector.component.html',
                    }]
            }], propDecorators: { showError: [{
                    type: i0.Input
                }], accounts: [{
                    type: i0.Input
                }], selectedAccount: [{
                    type: i0.Input
                }], selectedAccountChange: [{
                    type: i0.Output
                }] } });
    var PaymentRequestAccountSelectorCustomizableDirective = /** @class */ (function (_super) {
        __extends(PaymentRequestAccountSelectorCustomizableDirective, _super);
        function PaymentRequestAccountSelectorCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return PaymentRequestAccountSelectorCustomizableDirective;
    }(i1$1.BbTemplate));
    PaymentRequestAccountSelectorCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestAccountSelectorCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    PaymentRequestAccountSelectorCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestAccountSelectorCustomizableDirective, selector: "[bbPaymentRequestAccountSelectorCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestAccountSelectorCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbPaymentRequestAccountSelectorCustomizable]',
                    }]
            }] });

    var PaymentRequestAccessDenied = /** @class */ (function () {
        function PaymentRequestAccessDenied(error) {
            this.error = error;
            this.kind = 'PaymentRequestAccessDenied';
        }
        return PaymentRequestAccessDenied;
    }());
    var PaymentRequestNotFound = /** @class */ (function () {
        function PaymentRequestNotFound(error) {
            this.error = error;
            this.kind = 'PaymentRequestNotFound';
        }
        return PaymentRequestNotFound;
    }());
    var PaymentRequestBadRequest = /** @class */ (function () {
        function PaymentRequestBadRequest(error) {
            this.error = error;
            this.kind = 'PaymentRequestBadRequest';
        }
        return PaymentRequestBadRequest;
    }());
    var PaymentRequestUnknownError = /** @class */ (function () {
        function PaymentRequestUnknownError(error) {
            this.error = error;
            this.kind = 'PaymentRequestUnknownError';
        }
        return PaymentRequestUnknownError;
    }());
    var PaymentRequestConnectivityError = /** @class */ (function () {
        function PaymentRequestConnectivityError(error) {
            this.error = error;
            this.kind = 'PaymentRequestConnectivityError';
        }
        return PaymentRequestConnectivityError;
    }());
    var parseError = function (error) {
        if (error.error instanceof ErrorEvent) {
            return new PaymentRequestUnknownError(error);
        }
        else {
            switch (error.status) {
                case 0:
                    return new PaymentRequestConnectivityError(error);
                case 400:
                    return new PaymentRequestBadRequest(error);
                case 401:
                    return new PaymentRequestAccessDenied(error);
                case 403:
                    return new PaymentRequestAccessDenied(error);
                case 404:
                    return new PaymentRequestNotFound(error);
                default:
                    return new PaymentRequestUnknownError(error);
            }
        }
    };

    var PaymentRequestService = /** @class */ (function () {
        function PaymentRequestService(consentDataHttpService, notification) {
            var _this = this;
            this.consentDataHttpService = consentDataHttpService;
            this.notification = notification;
            this.paymentRequestId = new rxjs.ReplaySubject(1);
            this.loading = new rxjs.BehaviorSubject(true);
            this.error = new rxjs.BehaviorSubject(undefined);
            this.saving = new rxjs.BehaviorSubject(false);
            this.savingError = new rxjs.BehaviorSubject(undefined);
            this.paymentRequest = this.paymentRequestId.pipe(operators.filter(function (id) { return !!id; }), operators.distinctUntilChanged(), operators.tap(function () { return _this.loading.next(true); }), operators.switchMap(function (id) { return _this.loadPaymentRequestRequest(id); }), operators.tap(function () { return _this.error.next(undefined); }), operators.catchError(function (error) {
                _this.error.next(error);
                return rxjs.of(undefined);
            }), operators.tap(function () { return _this.loading.next(false); }), operators.shareReplay(1));
        }
        PaymentRequestService.prototype.getPaymentRequestFrom = function (paymentRequestId) {
            paymentRequestId.subscribe(this.paymentRequestId);
        };
        PaymentRequestService.prototype.allowPaymentRequest = function (account, templateRef) {
            var _this = this;
            return this.paymentRequest.pipe(operators.take(1), operators.filter(function (paymentRequest) { return !!paymentRequest; }), operators.tap(function () { return _this.saving.next(true); }), operators.switchMap(function (paymentRequest) { return _this.allow(paymentRequest, account); }), operators.tap(function () { return _this.savingError.next(undefined); }), operators.catchError(function (error) { return _this.handleError(error, templateRef); }), operators.tap(function () { return _this.saving.next(false); }));
        };
        PaymentRequestService.prototype.rejectPaymentRequest = function (templateRef) {
            var _this = this;
            return this.paymentRequest.pipe(operators.take(1), operators.filter(function (paymentRequest) { return paymentRequest !== undefined; }), operators.tap(function () { return _this.saving.next(true); }), operators.switchMap(function (paymentRequest) { return _this.reject(paymentRequest); }), operators.tap(function () { return _this.savingError.next(undefined); }), operators.catchError(function (error) { return _this.handleError(error, templateRef); }), operators.tap(function () { return _this.saving.next(false); }));
        };
        PaymentRequestService.prototype.handleError = function (error, templateRef) {
            this.savingError.next(error);
            this.notification.showNotification({
                message: templateRef,
                modifier: 'error',
            });
            return rxjs.of({});
        };
        PaymentRequestService.prototype.loadPaymentRequestRequest = function (id) {
            return this.consentDataHttpService.getIdByIdgetPaymentRequestById({ id: id }, 'response').pipe(operators.pluck('body'), operators.catchError(function (error) {
                throw parseError(error);
            }));
        };
        PaymentRequestService.prototype.allow = function (_a, _b) {
            var id = _a.id, redirectUrl = _a.allowPaymentRedirectUrl;
            var accountId = _b.id;
            return this.consentDataHttpService.postConfirmById({ id: id, paymentPost: { accountId: accountId } }).pipe(operators.map(function () { return ({ redirectUrl: redirectUrl }); }), operators.catchError(function (error) {
                throw parseError(error);
            }));
        };
        PaymentRequestService.prototype.reject = function (_a) {
            var id = _a.id, redirectUrl = _a.rejectPaymentRedirectUrl;
            return this.consentDataHttpService.postRejectByIdpostReject({ id: id }).pipe(operators.map(function () { return ({ redirectUrl: redirectUrl }); }), operators.catchError(function (error) {
                throw parseError(error);
            }));
        };
        return PaymentRequestService;
    }());
    PaymentRequestService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestService, deps: [{ token: i1__namespace$4.PaymentRequestsHttpService }, { token: i2__namespace$2.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    PaymentRequestService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$4.PaymentRequestsHttpService }, { type: i2__namespace$2.NotificationService }]; } });

    var PaymentRequestContainerComponent = /** @class */ (function () {
        function PaymentRequestContainerComponent(service, route) {
            var _this = this;
            this.service = service;
            this.route = route;
            /**
             * Component context
             */
            this.hostRef = this;
            /**
             * Emitter that fires when allowing payment
             */
            this.redirectToAllowUrl = new i0.EventEmitter();
            /**
             * Emitter that fires when rejecting payment
             */
            this.redirectToRejectUrl = new i0.EventEmitter();
            /**
             * Error notification template reference
             */
            this.notificationErrorTemplate = '';
            /**
             * Stream of payment request ID
             */
            this.paymentRequestId = this.getRouteParam(this.route, 'paymentRequestId').pipe(operators.map(function (paymentRequestId) { return paymentRequestId || ''; }));
            /**
             * Stream of Payment request
             */
            this.paymentRequest = this.service.paymentRequest.pipe(operators.tap(function (paymentRequest) {
                if (paymentRequest && paymentRequest.selectedAccount) {
                    _this.selectedAccount = paymentRequest.selectedAccount;
                }
            }));
            /**
             * Stream of loading spinner visibility flag
             */
            this.loading = this.service.loading;
            /**
             * Stream of Payment request errors
             */
            this.error = this.service.error;
            /**
             * Show account error flag
             */
            this.showAccountError = false;
            /**
             * Stream of saving flag
             */
            this.saving = this.service.saving;
            /**
             * Stream of saving errors
             */
            this.savingError = this.service.savingError;
        }
        /**
         * Sends allow payment request
         */
        PaymentRequestContainerComponent.prototype.allowPaymentRequest = function () {
            var _this = this;
            this.showAccountError = false;
            if (this.selectedAccount) {
                this.service
                    .allowPaymentRequest(this.selectedAccount, this.notificationErrorTemplate)
                    .pipe(operators.tap(function (redirect) {
                    if (redirect.redirectUrl) {
                        _this.redirectToAllowUrl.emit(redirect.redirectUrl);
                    }
                }))
                    .subscribe();
            }
            else {
                this.showAccountError = true;
            }
        };
        /**
         * Sends reject payment request
         */
        PaymentRequestContainerComponent.prototype.rejectPaymentRequest = function () {
            var _this = this;
            this.service
                .rejectPaymentRequest(this.notificationErrorTemplate)
                .pipe(operators.tap(function (response) {
                if (response.redirectUrl) {
                    _this.redirectToRejectUrl.emit(response.redirectUrl);
                }
            }))
                .subscribe();
        };
        PaymentRequestContainerComponent.prototype.ngOnInit = function () {
            this.service.getPaymentRequestFrom(this.paymentRequestId);
        };
        PaymentRequestContainerComponent.prototype.getRouteParam = function (route, param) {
            var paramValue = rxjs.combineLatest(route.paramMap.pipe(operators.pluck('params', param)), route.queryParamMap.pipe(operators.pluck('params', param)), function (params, qparams) {
                return params ? params : qparams;
            });
            if (!route.parent) {
                return paramValue;
            }
            // ensure that level that has actual value keeps it from being cleared
            return rxjs.combineLatest([paramValue, this.getRouteParam(route === null || route === void 0 ? void 0 : route.parent, param)]).pipe(operators.map(function (params) { return params[0] || params[1]; }));
        };
        return PaymentRequestContainerComponent;
    }());
    PaymentRequestContainerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestContainerComponent, deps: [{ token: PaymentRequestService }, { token: i2__namespace$3.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentRequestContainerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestContainerComponent, selector: "bb-payment-request-container", outputs: { redirectToAllowUrl: "redirectToAllowUrl", redirectToRejectUrl: "redirectToRejectUrl" }, viewQueries: [{ propertyName: "notificationErrorTemplate", first: true, predicate: ["notificationError"], descendants: true, static: true }], ngImport: i0__namespace, template: "<ng-container bbPaymentRequestWidgetCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"paymentRequest | async\">\n</ng-container>\n\n<ng-template bbPaymentRequestWidgetCustomizable let-hostRef let-paymentRequest=\"context\">\n  <ng-container *ngIf=\"hostRef.paymentRequestId | async; else errorTemplate\">\n    <ng-container *ngIf=\"!(hostRef.loading | async) as loading; else loadingTemplate\">\n      <ng-container *ngIf=\"!(hostRef.error | async); else errorTemplate\">\n        <div class=\"bb-payment-request\" *ngIf=\"paymentRequest\">\n          <div\n            class=\"bb-heading-2 bb-block bb-block--md\"\n            i18n=\"Widget header|Payment request access message@@payment-request.label.header\"\n            data-role=\"payment-request-label\">\n            Payment request\n          </div>\n\n          <div\n            i18n=\"Widget sub header|Payment request access message@@payment-request.label.sub-header\"\n            class=\"bb-subtitle bb-block bb-block--md\"\n            data-role=\"payment-request-description\">\n            Third party requested a payment from you. Select an account to pay from and review payment details to\n            proceed with payment.\n          </div>\n\n          <ng-container *ngIf=\"!(hostRef.saving | async); else savingLoadingTemplate\">\n            <bb-alert-ui\n              *ngIf=\"hostRef.savingError | async\"\n              title=\"Unknown error\"\n              i18n-title=\"Unknown Error|Unknown Error Label@@payment-request.label.error.unknown\"\n              message=\"Try to make action again or contact your system administrator.\"\n              i18n-message=\"Try again|Try again error message@@payment-request.label.error.tryAgain\"\n              data-role=\"allow-payment-request-error\"></bb-alert-ui>\n\n            <div class=\"bb-block bb-block--lg\">\n              <bb-payment-request-tpp-information [tpp]=\"paymentRequest.tpp\"></bb-payment-request-tpp-information>\n            </div>\n\n            <div class=\"bb-block bb-block--lg\">\n              <bb-payment-request-amount\n                [amount]=\"paymentRequest.amount\"\n                [currency]=\"paymentRequest.currency\"></bb-payment-request-amount>\n            </div>\n\n            <div class=\"bb-block bb-block--lg\">\n              <bb-payment-request-account-selector\n                [showError]=\"hostRef.showAccountError\"\n                [accounts]=\"paymentRequest.accounts\"\n                [(selectedAccount)]=\"hostRef.selectedAccount\"></bb-payment-request-account-selector>\n            </div>\n\n            <div class=\"bb-block bb-block--lg\">\n              <div\n                i18n=\"Payment details|Payment details message@@payment-request.label.payment-details\"\n                class=\"bb-block--sm bb-text-bold\"\n                data-role=\"payment-details-label\">\n                Payment details\n              </div>\n\n              <div>{{ paymentRequest.details }}</div>\n            </div>\n          </ng-container>\n\n          <div class=\"bb-button-bar bb-button-bar--reverse\">\n            <button\n              bbButton\n              [disabled]=\"hostRef.saving | async\"\n              (click)=\"hostRef.allowPaymentRequest()\"\n              data-role=\"confirm-button\"\n              i18n=\"Confirm button|Confirm consent request@@payment-request.label.confirm\"\n              color=\"primary\"\n              class=\"bb-button-bar__button\">\n              Confirm\n            </button>\n            <button\n              bbButton\n              [disabled]=\"hostRef.saving | async\"\n              (click)=\"hostRef.rejectPaymentRequest()\"\n              data-role=\"cancel-button\"\n              i18n=\"Cancel button|Cancel consent request@@payment-request.label.cancel\"\n              color=\"secondary\"\n              class=\"bb-button-bar__button\">\n              Cancel\n            </button>\n          </div>\n\n          <ng-template #savingLoadingTemplate>\n            <div class=\"bb-state-container\">\n              <bb-loading-indicator-ui\n                text=\"Processing the request...\"\n                i18n-text=\"\n                  Processing|Processing the allow/reject payment request@@payment-request.label.processing\"></bb-loading-indicator-ui>\n            </div>\n          </ng-template>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #loadingTemplate>\n      <div class=\"bb-state-container\">\n        <bb-loading-indicator-ui></bb-loading-indicator-ui>\n      </div>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #errorTemplate>\n    <div class=\"bb-state-container\">\n      <bb-payment-request-error\n        [paymentRequestId]=\"hostRef.paymentRequestId | async\"\n        [errorKind]=\"$any(hostRef.error | async)?.kind\"></bb-payment-request-error>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #notificationError>\n  <span\n    i18n=\"\n      Operation Failed|Error notification when failing to save payment request@@payment-request.label.notification.error\">\n    Operation failed\n  </span>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i3__namespace.AlertComponent; }), selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i0__namespace.forwardRef(function () { return PaymentRequestTppInformationComponent; }), selector: "bb-payment-request-tpp-information", inputs: ["tpp"] }, { type: i0__namespace.forwardRef(function () { return PaymentRequestAmountComponent; }), selector: "bb-payment-request-amount", inputs: ["amount", "currency"] }, { type: i0__namespace.forwardRef(function () { return PaymentRequestAccountSelectorComponent; }), selector: "bb-payment-request-account-selector", inputs: ["showError", "accounts", "selectedAccount"], outputs: ["selectedAccountChange"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i0__namespace.forwardRef(function () { return PaymentRequestErrorComponent; }), selector: "bb-payment-request-error", inputs: ["paymentRequestId", "errorKind"] }], directives: [{ type: i0__namespace.forwardRef(function () { return PaymentRequestWidgetCustomizableDirective; }), selector: "[bbPaymentRequestWidgetCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i10__namespace.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i0__namespace.forwardRef(function () { return i2__namespace.AsyncPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestContainerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-request-container',
                        templateUrl: './payment-request-container.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: PaymentRequestService }, { type: i2__namespace$3.ActivatedRoute }]; }, propDecorators: { redirectToAllowUrl: [{
                    type: i0.Output
                }], redirectToRejectUrl: [{
                    type: i0.Output
                }], notificationErrorTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationError', { static: true }]
                }] } });
    var PaymentRequestWidgetCustomizableDirective = /** @class */ (function (_super) {
        __extends(PaymentRequestWidgetCustomizableDirective, _super);
        function PaymentRequestWidgetCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return PaymentRequestWidgetCustomizableDirective;
    }(i1$1.BbTemplate));
    PaymentRequestWidgetCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestWidgetCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    PaymentRequestWidgetCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestWidgetCustomizableDirective, selector: "[bbPaymentRequestWidgetCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestWidgetCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbPaymentRequestWidgetCustomizable]',
                    }]
            }] });

    var PaymentRequestWidgetComponent = /** @class */ (function () {
        function PaymentRequestWidgetComponent() {
            /**
             * Emitter that fires after allowing payment
             */
            this.allowPaymentRequestRedirectUrl = new i0.EventEmitter();
            /**
             * Emitter that fires after rejecting payment
             */
            this.rejectPaymentRequestRedirectUrl = new i0.EventEmitter();
        }
        PaymentRequestWidgetComponent.prototype.redirectToAllowUrl = function (url) {
            this.allowPaymentRequestRedirectUrl.next(url);
        };
        PaymentRequestWidgetComponent.prototype.redirectToRejectUrl = function (url) {
            this.rejectPaymentRequestRedirectUrl.next(url);
        };
        return PaymentRequestWidgetComponent;
    }());
    PaymentRequestWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestWidgetComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    PaymentRequestWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestWidgetComponent, selector: "bb-payment-request-widget", outputs: { allowPaymentRequestRedirectUrl: "allowPaymentRequestRedirectUrl", rejectPaymentRequestRedirectUrl: "rejectPaymentRequestRedirectUrl" }, providers: [PaymentRequestService], ngImport: i0__namespace, template: "\n    <bb-payment-request-container\n      (redirectToAllowUrl)=\"redirectToAllowUrl($event)\"\n      (redirectToRejectUrl)=\"redirectToRejectUrl($event)\"></bb-payment-request-container>\n  ", isInline: true, components: [{ type: PaymentRequestContainerComponent, selector: "bb-payment-request-container", outputs: ["redirectToAllowUrl", "redirectToRejectUrl"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-payment-request-widget',
                        template: "\n    <bb-payment-request-container\n      (redirectToAllowUrl)=\"redirectToAllowUrl($event)\"\n      (redirectToRejectUrl)=\"redirectToRejectUrl($event)\"></bb-payment-request-container>\n  ",
                        providers: [PaymentRequestService],
                    }]
            }], propDecorators: { allowPaymentRequestRedirectUrl: [{
                    type: i0.Output
                }], rejectPaymentRequestRedirectUrl: [{
                    type: i0.Output
                }] } });

    var components = [
        PaymentRequestWidgetComponent,
        PaymentRequestContainerComponent,
        PaymentRequestAccountSelectorComponent,
        PaymentRequestTppInformationComponent,
        PaymentRequestErrorComponent,
        PaymentRequestAmountComponent,
    ];
    var directives = [
        PaymentRequestWidgetCustomizableDirective,
        PaymentRequestTppInformationCustomizableDirective,
        PaymentRequestAccountSelectorCustomizableDirective,
        PaymentRequestAmountCustomizableDirective,
    ];
    var uiModules = [
        i1$3.ConsentUiModule,
        i10.ButtonModule,
        i3.AlertModule,
        i7.LoadingIndicatorModule,
        i2$1.ProductItemBasicAccountModule,
        i1$2.EmptyStateModule,
        i1.AmountModule,
        i2$2.NotificationModule,
        i1$4.AccountSelectorModule,
        i1.AmountModule,
    ];
    var PaymentRequestWidgetModule = /** @class */ (function () {
        function PaymentRequestWidgetModule() {
        }
        return PaymentRequestWidgetModule;
    }());
    PaymentRequestWidgetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestWidgetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    PaymentRequestWidgetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestWidgetModule, declarations: [PaymentRequestWidgetComponent,
            PaymentRequestContainerComponent,
            PaymentRequestAccountSelectorComponent,
            PaymentRequestTppInformationComponent,
            PaymentRequestErrorComponent,
            PaymentRequestAmountComponent, PaymentRequestWidgetCustomizableDirective,
            PaymentRequestTppInformationCustomizableDirective,
            PaymentRequestAccountSelectorCustomizableDirective,
            PaymentRequestAmountCustomizableDirective], imports: [i2.CommonModule, i1$3.ConsentUiModule,
            i10.ButtonModule,
            i3.AlertModule,
            i7.LoadingIndicatorModule,
            i2$1.ProductItemBasicAccountModule,
            i1$2.EmptyStateModule,
            i1.AmountModule,
            i2$2.NotificationModule,
            i1$4.AccountSelectorModule,
            i1.AmountModule, i1__namespace$5.BackbaseCoreModule], exports: [PaymentRequestWidgetComponent,
            PaymentRequestContainerComponent,
            PaymentRequestAccountSelectorComponent,
            PaymentRequestTppInformationComponent,
            PaymentRequestErrorComponent,
            PaymentRequestAmountComponent, PaymentRequestWidgetCustomizableDirective,
            PaymentRequestTppInformationCustomizableDirective,
            PaymentRequestAccountSelectorCustomizableDirective,
            PaymentRequestAmountCustomizableDirective, i1$3.ConsentUiModule,
            i10.ButtonModule,
            i3.AlertModule,
            i7.LoadingIndicatorModule,
            i2$1.ProductItemBasicAccountModule,
            i1$2.EmptyStateModule,
            i1.AmountModule,
            i2$2.NotificationModule,
            i1$4.AccountSelectorModule,
            i1.AmountModule] });
    PaymentRequestWidgetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestWidgetModule, imports: [__spreadArray(__spreadArray([
                i2.CommonModule
            ], __read(uiModules)), [
                i1$1.BackbaseCoreModule.withConfig({
                    classMap: { PaymentRequestWidgetComponent: PaymentRequestWidgetComponent },
                }),
            ]), i1$3.ConsentUiModule,
            i10.ButtonModule,
            i3.AlertModule,
            i7.LoadingIndicatorModule,
            i2$1.ProductItemBasicAccountModule,
            i1$2.EmptyStateModule,
            i1.AmountModule,
            i2$2.NotificationModule,
            i1$4.AccountSelectorModule,
            i1.AmountModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestWidgetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray(__spreadArray([
                            i2.CommonModule
                        ], __read(uiModules)), [
                            i1$1.BackbaseCoreModule.withConfig({
                                classMap: { PaymentRequestWidgetComponent: PaymentRequestWidgetComponent },
                            }),
                        ]),
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(directives)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components)), __read(directives)), __read(uiModules)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.PaymentRequestWidgetComponent = PaymentRequestWidgetComponent;
    exports.PaymentRequestWidgetModule = PaymentRequestWidgetModule;
    exports["ӨPaymentRequestAccountSelectorComponent"] = PaymentRequestAccountSelectorComponent;
    exports["ӨPaymentRequestAccountSelectorCustomizableDirective"] = PaymentRequestAccountSelectorCustomizableDirective;
    exports["ӨPaymentRequestAmountComponent"] = PaymentRequestAmountComponent;
    exports["ӨPaymentRequestAmountCustomizableDirective"] = PaymentRequestAmountCustomizableDirective;
    exports["ӨPaymentRequestContainerComponent"] = PaymentRequestContainerComponent;
    exports["ӨPaymentRequestErrorComponent"] = PaymentRequestErrorComponent;
    exports["ӨPaymentRequestTppInformationComponent"] = PaymentRequestTppInformationComponent;
    exports["ӨPaymentRequestTppInformationCustomizableDirective"] = PaymentRequestTppInformationCustomizableDirective;
    exports["ӨPaymentRequestWidgetCustomizableDirective"] = PaymentRequestWidgetCustomizableDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-payment-request-widget-ang.umd.js.map
