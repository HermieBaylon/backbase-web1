{"version":3,"file":"backbase-payment-request-widget-ang.js","sources":["../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-amount/payment-request-amount.component.ts","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-amount/payment-request-amount.component.html","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-error/payment-request-error.component.ts","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-error/payment-request-error.component.html","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-tpp-information/payment-request-tpp-information.component.ts","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-tpp-information/payment-request-tpp-information.component.html","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-account-selector/payment-request-account-selector.component.ts","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-account-selector/payment-request-account-selector.component.html","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-error.ts","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request.service.ts","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-container/payment-request-container.component.ts","../../../../libs/payment-request-widget-ang/src/payment-request-widget/payment-request-container/payment-request-container.component.html","../../../../libs/payment-request-widget-ang/src/payment-request-widget.component.ts","../../../../libs/payment-request-widget-ang/src/payment-request-widget.module.ts","../../../../libs/payment-request-widget-ang/backbase-payment-request-widget-ang.ts"],"sourcesContent":["import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nexport interface PaymentRequestAmountContext {\n  amount: string | null;\n  currency: string | null;\n}\n\n@Component({\n  selector: 'bb-payment-request-amount',\n  templateUrl: './payment-request-amount.component.html',\n})\nexport class PaymentRequestAmountComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: PaymentRequestAmountComponent = this;\n  /**\n   * Amount of the request\n   */\n  @Input() amount = '';\n  /**\n   * Currency of the request\n   */\n  @Input() currency = '';\n}\n\n@Directive({\n  selector: '[bbPaymentRequestAmountCustomizable]',\n})\nexport class PaymentRequestAmountCustomizableDirective extends BbTemplate<\n  PaymentRequestAmountComponent,\n  PaymentRequestAmountContext\n> {}\n","<ng-container\n  bbPaymentRequestAmountCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    amount: amount,\n    currency: currency\n  }\">\n</ng-container>\n\n<ng-template bbPaymentRequestAmountCustomizable let-hostRef let-amount=\"context.amount\" let-currency=\"context.currency\">\n  <div\n    i18n=\"Amount|Amount message@@payment-request.label.amount\"\n    data-role=\"amount-label\"\n    class=\"bb-block bb-block--sm bb-text-bold\">\n    Amount\n  </div>\n  <bb-amount-ui\n    class=\"bb-payment-request__amount\"\n    data-role=\"amount-value\"\n    [amount]=\"amount\"\n    [currency]=\"currency\"></bb-amount-ui>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-payment-request-error',\n  templateUrl: './payment-request-error.component.html',\n})\nexport class PaymentRequestErrorComponent {\n  /**\n   * Id to check if its a valid request\n   */\n  @Input() paymentRequestId: string | undefined | null;\n  /**\n   * Error kind to be checked against\n   */\n  @Input() errorKind: string | undefined;\n}\n","<bb-empty-state-ui\n  *ngIf=\"!paymentRequestId\"\n  title=\"Unexpected Error\"\n  i18n-title=\"\n    Unexpected Error title|Empty state label when there is an unexpected\n    error@@payment-request.error.noPaymentRequest.title\"\n  subtitle=\"Something's gone wrong with our server. Please try again later.\"\n  i18n-subtitle=\"\n    Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n    error@@payment-request.error.noPaymentRequest.subtitle\"\n  iconModifier=\"error\"></bb-empty-state-ui>\n<ng-container *ngIf=\"paymentRequestId && errorKind\" [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'PaymentRequestAccessDenied'\"\n    title=\"Permissions required\"\n    i18n-title=\"\n      Permissions required|Error state label when user does not have permissions to view payment\n      request@@payment-request.error.accessDenied.title\"\n    subtitle=\"You don't have permissions to allow payments.\"\n    i18n-subtitle=\"\n      No Permissions Subtitle|Error state subtitle label when user does not have permissions to view payment\n      requests@@payment-request.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'PaymentRequestConnectivityError'\"\n    title=\"Connectivity Error\"\n    i18n-title=\"\n      Connectivity Error title|Empty state label when there is connectivity\n      error@@payment-request.error.connectivity.title\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n    i18n-subtitle=\"\n      Connectivity Error subtitle|Empty state subtitle label when there is connectivity\n      error@@payment-request.error.connectivity.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n\n  <!-- This will usually happen on environment misconfiguration -->\n  <!-- PaymentRequestNotFound | PaymentRequestUnknownError | PaymentRequestBadRequest-->\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"Unexpected Error\"\n    i18n-title=\"\n      Unexpected Error title|Empty state label when there is an unexpected error@@payment-request.error.unexpected.title\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n    i18n-subtitle=\"\n      Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n      error@@payment-request.error.unexpected.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n</ng-container>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { Tpp } from '../payment-request.service';\n\n@Component({\n  selector: 'bb-payment-request-tpp-information',\n  templateUrl: './payment-request-tpp-information.component.html',\n})\nexport class PaymentRequestTppInformationComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: PaymentRequestTppInformationComponent = this;\n  /**\n   * Third party provider\n   */\n  @Input() tpp: Tpp | undefined;\n}\n\n@Directive({\n  selector: '[bbPaymentRequestTppInformationCustomizable]',\n})\nexport class PaymentRequestTppInformationCustomizableDirective extends BbTemplate<\n  PaymentRequestTppInformationComponent,\n  Tpp\n> {}\n","<ng-container bbPaymentRequestTppInformationCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"tpp\">\n</ng-container>\n\n<ng-template bbPaymentRequestTppInformationCustomizable let-hostRef let-tpp=\"context\">\n  <div\n    class=\"bb-block bb-block--sm bb-text-bold\"\n    data-role=\"pay-to-label\"\n    i18n=\"Pay to|Third party information@@payment-request.label.payTo\">\n    Pay to\n  </div>\n\n  <div class=\"card card-sm\">\n    <div class=\"card-body\">\n      <bb-third-party-provider-ui\n        [name]=\"tpp.name\"\n        [url]=\"tpp.website\"\n        [verified]=\"tpp.isTrusted\"\n        [image]=\"tpp.imageUrl\"\n        data-role=\"third-party-provider-label\">\n      </bb-third-party-provider-ui>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { Account } from '../payment-request.service';\n\n@Component({\n  selector: 'bb-payment-request-account-selector',\n  templateUrl: './payment-request-account-selector.component.html',\n})\nexport class PaymentRequestAccountSelectorComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: PaymentRequestAccountSelectorComponent = this;\n  /**\n   * If error should be shown\n   */\n  @Input() showError = false;\n  /**\n   * List of accounts\n   */\n  @Input() accounts: Account[] = [];\n  /**\n   * Selected Account\n   */\n  @Input() selectedAccount: Account | undefined;\n  /**\n   * Emitter that fires when selecting account\n   */\n  @Output() selectedAccountChange: EventEmitter<Account> = new EventEmitter<Account>();\n\n  /**\n   * Select account event handler\n   * @param account\n   */\n  onSelectAccount(account: Account): void {\n    this.selectedAccountChange.emit(account);\n    this.showError = false;\n  }\n}\n\n@Directive({\n  selector: '[bbPaymentRequestAccountSelectorCustomizable]',\n})\nexport class PaymentRequestAccountSelectorCustomizableDirective extends BbTemplate<\n  PaymentRequestAccountSelectorComponent,\n  Account[]\n> {}\n","<ng-container bbPaymentRequestAccountSelectorCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"accounts\">\n</ng-container>\n\n<ng-template bbPaymentRequestAccountSelectorCustomizable let-hostRef let-accounts=\"context\">\n  <div\n    class=\"bb-block bb-block--sm bb-text-bold\"\n    data-role=\"from-account-label\"\n    i18n=\"From account|From account label@@payment-request.label.fromAccount\">\n    From account\n  </div>\n  <div [ngClass]=\"{ 'border border-danger rounded': hostRef.showError }\">\n    <bb-account-selector-ui\n      data-role=\"account-selector\"\n      [items]=\"accounts\"\n      [disableScrollEnd]=\"false\"\n      [multiple]=\"false\"\n      [closeOnSelect]=\"true\"\n      [filterItems]=\"false\"\n      [selectedItems]=\"hostRef.selectedAccount\"\n      [dropdownPosition]=\"'bottom'\"\n      (change)=\"hostRef.onSelectAccount($event)\"\n      placeholder=\"Select Accounts\"\n      i18n-placeholder=\"Select Accounts placeholder@@payment-request.account-selector.placeholder\">\n      <ng-template bbCustomSingleSelectedItemLabel let-item=\"item\">\n        <bb-product-item-basic-account-ui\n          [active]=\"true\"\n          [amount]=\"item.balance\"\n          [currency]=\"item.currency\"\n          [productNumber]=\"item.IBAN || item.BBAN || item.number\"\n          [title]=\"item.name\">\n          <ng-template bbCustomProductItemBasicAccountDetailsFormatter let-amount=\"amount\" let-currency=\"currency\">\n            <bb-amount-ui\n              class=\"font-weight-bold\"\n              [amount]=\"amount\"\n              [currency]=\"currency\"\n              [mapCurrency]=\"false\"></bb-amount-ui>\n          </ng-template>\n        </bb-product-item-basic-account-ui>\n      </ng-template>\n    </bb-account-selector-ui>\n  </div>\n  <div\n    *ngIf=\"hostRef.showError\"\n    class=\"bb-payment-request-product-selector__no-account\"\n    data-role=\"no-accounts-error-message\"\n    i18n=\"Select an account|No account selected label@@payment-request.label.noAccountSelected\">\n    Select an account.\n  </div>\n</ng-template>\n","import { HttpErrorResponse } from '@angular/common/http';\n\nexport class PaymentRequestAccessDenied {\n  kind: 'PaymentRequestAccessDenied' = 'PaymentRequestAccessDenied';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class PaymentRequestNotFound {\n  kind: 'PaymentRequestNotFound' = 'PaymentRequestNotFound';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class PaymentRequestBadRequest {\n  kind: 'PaymentRequestBadRequest' = 'PaymentRequestBadRequest';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class PaymentRequestUnknownError {\n  kind: 'PaymentRequestUnknownError' = 'PaymentRequestUnknownError';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class PaymentRequestConnectivityError {\n  kind: 'PaymentRequestConnectivityError' = 'PaymentRequestConnectivityError';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport type PaymentRequestError =\n  | PaymentRequestAccessDenied\n  | PaymentRequestNotFound\n  | PaymentRequestBadRequest\n  | PaymentRequestUnknownError\n  | PaymentRequestConnectivityError;\n\nexport const parseError = (error: HttpErrorResponse): PaymentRequestError => {\n  if (error.error instanceof ErrorEvent) {\n    return new PaymentRequestUnknownError(error);\n  } else {\n    switch (error.status) {\n      case 0:\n        return new PaymentRequestConnectivityError(error);\n      case 400:\n        return new PaymentRequestBadRequest(error);\n      case 401:\n        return new PaymentRequestAccessDenied(error);\n      case 403:\n        return new PaymentRequestAccessDenied(error);\n      case 404:\n        return new PaymentRequestNotFound(error);\n      default:\n        return new PaymentRequestUnknownError(error);\n    }\n  }\n};\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, ReplaySubject, BehaviorSubject, of } from 'rxjs';\nimport {\n  catchError,\n  pluck,\n  filter,\n  distinctUntilChanged,\n  tap,\n  switchMap,\n  shareReplay,\n  take,\n  map,\n} from 'rxjs/operators';\nimport { PaymentRequestsHttpService, PaymentRequest, Account } from '@backbase/data-ang/consent';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { parseError, PaymentRequestError } from './payment-request-error';\n\nexport { PaymentRequest, Account, Tpp } from '@backbase/data-ang/consent';\n\nexport interface RedirectUrl {\n  redirectUrl?: string;\n}\n\n@Injectable()\nexport class PaymentRequestService {\n  constructor(\n    private readonly consentDataHttpService: PaymentRequestsHttpService,\n    private readonly notification: NotificationService,\n  ) {}\n\n  private readonly paymentRequestId = new ReplaySubject<string>(1);\n\n  readonly loading = new BehaviorSubject<boolean>(true);\n  readonly error = new BehaviorSubject<PaymentRequestError | undefined>(undefined);\n\n  readonly saving = new BehaviorSubject<boolean>(false);\n  readonly savingError = new BehaviorSubject<PaymentRequestError | undefined>(undefined);\n\n  readonly paymentRequest = this.paymentRequestId.pipe(\n    filter((id: string) => !!id),\n    distinctUntilChanged(),\n    tap(() => this.loading.next(true)),\n    switchMap((id: string) => this.loadPaymentRequestRequest(id)),\n    tap(() => this.error.next(undefined)),\n    catchError((error: PaymentRequestError) => {\n      this.error.next(error);\n      return of(undefined);\n    }),\n    tap(() => this.loading.next(false)),\n    shareReplay(1),\n  );\n\n  getPaymentRequestFrom(paymentRequestId: Observable<string>) {\n    paymentRequestId.subscribe(this.paymentRequestId);\n  }\n\n  allowPaymentRequest(account: Account, templateRef: TemplateRef<any> | string): Observable<RedirectUrl> {\n    return this.paymentRequest.pipe(\n      take(1),\n      filter((paymentRequest: PaymentRequest | undefined) => !!paymentRequest),\n      tap(() => this.saving.next(true)),\n      switchMap((paymentRequest: PaymentRequest | undefined) => this.allow(paymentRequest as PaymentRequest, account)),\n      tap(() => this.savingError.next(undefined)),\n      catchError((error: PaymentRequestError) => this.handleError(error, templateRef)),\n      tap(() => this.saving.next(false)),\n    );\n  }\n\n  rejectPaymentRequest(templateRef: TemplateRef<any> | string): Observable<RedirectUrl> {\n    return this.paymentRequest.pipe(\n      take(1),\n      filter((paymentRequest: PaymentRequest | undefined) => paymentRequest !== undefined),\n      tap(() => this.saving.next(true)),\n      switchMap((paymentRequest: PaymentRequest | undefined) => this.reject(paymentRequest as PaymentRequest)),\n      tap(() => this.savingError.next(undefined)),\n      catchError((error: PaymentRequestError) => this.handleError(error, templateRef)),\n      tap(() => this.saving.next(false)),\n    );\n  }\n\n  private handleError(error: PaymentRequestError, templateRef: TemplateRef<any> | string) {\n    this.savingError.next(error);\n    this.notification.showNotification({\n      message: templateRef,\n      modifier: 'error',\n    });\n    return of({});\n  }\n\n  private loadPaymentRequestRequest(id: string): Observable<PaymentRequest> {\n    return this.consentDataHttpService.getIdByIdgetPaymentRequestById({ id }, 'response').pipe(\n      pluck<HttpResponse<PaymentRequest>, PaymentRequest>('body'),\n      catchError<PaymentRequest, never>((error: HttpErrorResponse) => {\n        throw parseError(error);\n      }),\n    );\n  }\n\n  private allow(\n    { id, allowPaymentRedirectUrl: redirectUrl }: PaymentRequest,\n    { id: accountId }: Account,\n  ): Observable<RedirectUrl> {\n    return this.consentDataHttpService.postConfirmById({ id, paymentPost: { accountId } }).pipe(\n      map(() => ({ redirectUrl })),\n      catchError((error: HttpErrorResponse) => {\n        throw parseError(error);\n      }),\n    );\n  }\n\n  private reject({ id, rejectPaymentRedirectUrl: redirectUrl }: PaymentRequest): Observable<RedirectUrl> {\n    return this.consentDataHttpService.postRejectByIdpostReject({ id }).pipe(\n      map(() => ({ redirectUrl })),\n      catchError((error: HttpErrorResponse) => {\n        throw parseError(error);\n      }),\n    );\n  }\n}\n","import { Component, Directive, OnInit, ViewChild, TemplateRef, Output, EventEmitter } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Observable, BehaviorSubject, combineLatest } from 'rxjs';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { pluck, map, tap } from 'rxjs/operators';\nimport { PaymentRequestService, PaymentRequest, Account, RedirectUrl } from '../payment-request.service';\nimport { PaymentRequestError } from '../payment-request-error';\n\n@Component({\n  selector: 'bb-payment-request-container',\n  templateUrl: './payment-request-container.component.html',\n})\nexport class PaymentRequestContainerComponent implements OnInit {\n  /**\n   * Component context\n   */\n  readonly hostRef: PaymentRequestContainerComponent = this;\n  /**\n   * Emitter that fires when allowing payment\n   */\n  @Output() redirectToAllowUrl: EventEmitter<string> = new EventEmitter<string>();\n  /**\n   * Emitter that fires when rejecting payment\n   */\n  @Output() redirectToRejectUrl: EventEmitter<string> = new EventEmitter<string>();\n  /**\n   * Error notification template reference\n   */\n  @ViewChild('notificationError', { static: true })\n  notificationErrorTemplate: TemplateRef<any> | string = '';\n\n  /**\n   * Stream of payment request ID\n   */\n  readonly paymentRequestId: Observable<string> = this.getRouteParam(this.route, 'paymentRequestId').pipe(\n    map(paymentRequestId => paymentRequestId || ''),\n  );\n  /**\n   * Stream of Payment request\n   */\n  readonly paymentRequest: Observable<PaymentRequest | undefined> = this.service.paymentRequest.pipe(\n    tap((paymentRequest: PaymentRequest | undefined) => {\n      if (paymentRequest && paymentRequest.selectedAccount) {\n        this.selectedAccount = paymentRequest.selectedAccount;\n      }\n    }),\n  );\n  /**\n   * Stream of loading spinner visibility flag\n   */\n  readonly loading: BehaviorSubject<boolean> = this.service.loading;\n  /**\n   * Stream of Payment request errors\n   */\n  readonly error: BehaviorSubject<PaymentRequestError | undefined> = this.service.error;\n  /**\n   * Selected account\n   */\n  selectedAccount: Account | undefined;\n  /**\n   * Show account error flag\n   */\n  showAccountError = false;\n  /**\n   * Stream of saving flag\n   */\n  readonly saving: BehaviorSubject<boolean> = this.service.saving;\n  /**\n   * Stream of saving errors\n   */\n  readonly savingError: BehaviorSubject<PaymentRequestError | undefined> = this.service.savingError;\n\n  /**\n   * Sends allow payment request\n   */\n  allowPaymentRequest(): void {\n    this.showAccountError = false;\n    if (this.selectedAccount) {\n      this.service\n        .allowPaymentRequest(this.selectedAccount, this.notificationErrorTemplate)\n        .pipe(\n          tap((redirect: RedirectUrl) => {\n            if (redirect.redirectUrl) {\n              this.redirectToAllowUrl.emit(redirect.redirectUrl);\n            }\n          }),\n        )\n        .subscribe();\n    } else {\n      this.showAccountError = true;\n    }\n  }\n\n  /**\n   * Sends reject payment request\n   */\n  rejectPaymentRequest(): void {\n    this.service\n      .rejectPaymentRequest(this.notificationErrorTemplate)\n      .pipe(\n        tap((response: RedirectUrl) => {\n          if (response.redirectUrl) {\n            this.redirectToRejectUrl.emit(response.redirectUrl);\n          }\n        }),\n      )\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.service.getPaymentRequestFrom(this.paymentRequestId);\n  }\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = combineLatest(\n      route.paramMap.pipe(pluck<ParamMap, string | null>('params', param)),\n      route.queryParamMap.pipe(pluck<ParamMap, string | null>('params', param)),\n      (params, qparams) => {\n        return params ? params : qparams;\n      },\n    );\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // ensure that level that has actual value keeps it from being cleared\n    return combineLatest([paramValue, this.getRouteParam(route?.parent, param)]).pipe(\n      map(params => params[0] || params[1]),\n    );\n  }\n\n  constructor(private readonly service: PaymentRequestService, private readonly route: ActivatedRoute) {}\n}\n\n@Directive({\n  selector: '[bbPaymentRequestWidgetCustomizable]',\n})\nexport class PaymentRequestWidgetCustomizableDirective extends BbTemplate<\n  PaymentRequestContainerComponent,\n  PaymentRequest | null\n> {}\n","<ng-container bbPaymentRequestWidgetCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"paymentRequest | async\">\n</ng-container>\n\n<ng-template bbPaymentRequestWidgetCustomizable let-hostRef let-paymentRequest=\"context\">\n  <ng-container *ngIf=\"hostRef.paymentRequestId | async; else errorTemplate\">\n    <ng-container *ngIf=\"!(hostRef.loading | async) as loading; else loadingTemplate\">\n      <ng-container *ngIf=\"!(hostRef.error | async); else errorTemplate\">\n        <div class=\"bb-payment-request\" *ngIf=\"paymentRequest\">\n          <div\n            class=\"bb-heading-2 bb-block bb-block--md\"\n            i18n=\"Widget header|Payment request access message@@payment-request.label.header\"\n            data-role=\"payment-request-label\">\n            Payment request\n          </div>\n\n          <div\n            i18n=\"Widget sub header|Payment request access message@@payment-request.label.sub-header\"\n            class=\"bb-subtitle bb-block bb-block--md\"\n            data-role=\"payment-request-description\">\n            Third party requested a payment from you. Select an account to pay from and review payment details to\n            proceed with payment.\n          </div>\n\n          <ng-container *ngIf=\"!(hostRef.saving | async); else savingLoadingTemplate\">\n            <bb-alert-ui\n              *ngIf=\"hostRef.savingError | async\"\n              title=\"Unknown error\"\n              i18n-title=\"Unknown Error|Unknown Error Label@@payment-request.label.error.unknown\"\n              message=\"Try to make action again or contact your system administrator.\"\n              i18n-message=\"Try again|Try again error message@@payment-request.label.error.tryAgain\"\n              data-role=\"allow-payment-request-error\"></bb-alert-ui>\n\n            <div class=\"bb-block bb-block--lg\">\n              <bb-payment-request-tpp-information [tpp]=\"paymentRequest.tpp\"></bb-payment-request-tpp-information>\n            </div>\n\n            <div class=\"bb-block bb-block--lg\">\n              <bb-payment-request-amount\n                [amount]=\"paymentRequest.amount\"\n                [currency]=\"paymentRequest.currency\"></bb-payment-request-amount>\n            </div>\n\n            <div class=\"bb-block bb-block--lg\">\n              <bb-payment-request-account-selector\n                [showError]=\"hostRef.showAccountError\"\n                [accounts]=\"paymentRequest.accounts\"\n                [(selectedAccount)]=\"hostRef.selectedAccount\"></bb-payment-request-account-selector>\n            </div>\n\n            <div class=\"bb-block bb-block--lg\">\n              <div\n                i18n=\"Payment details|Payment details message@@payment-request.label.payment-details\"\n                class=\"bb-block--sm bb-text-bold\"\n                data-role=\"payment-details-label\">\n                Payment details\n              </div>\n\n              <div>{{ paymentRequest.details }}</div>\n            </div>\n          </ng-container>\n\n          <div class=\"bb-button-bar bb-button-bar--reverse\">\n            <button\n              bbButton\n              [disabled]=\"hostRef.saving | async\"\n              (click)=\"hostRef.allowPaymentRequest()\"\n              data-role=\"confirm-button\"\n              i18n=\"Confirm button|Confirm consent request@@payment-request.label.confirm\"\n              color=\"primary\"\n              class=\"bb-button-bar__button\">\n              Confirm\n            </button>\n            <button\n              bbButton\n              [disabled]=\"hostRef.saving | async\"\n              (click)=\"hostRef.rejectPaymentRequest()\"\n              data-role=\"cancel-button\"\n              i18n=\"Cancel button|Cancel consent request@@payment-request.label.cancel\"\n              color=\"secondary\"\n              class=\"bb-button-bar__button\">\n              Cancel\n            </button>\n          </div>\n\n          <ng-template #savingLoadingTemplate>\n            <div class=\"bb-state-container\">\n              <bb-loading-indicator-ui\n                text=\"Processing the request...\"\n                i18n-text=\"\n                  Processing|Processing the allow/reject payment request@@payment-request.label.processing\"></bb-loading-indicator-ui>\n            </div>\n          </ng-template>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #loadingTemplate>\n      <div class=\"bb-state-container\">\n        <bb-loading-indicator-ui></bb-loading-indicator-ui>\n      </div>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #errorTemplate>\n    <div class=\"bb-state-container\">\n      <bb-payment-request-error\n        [paymentRequestId]=\"hostRef.paymentRequestId | async\"\n        [errorKind]=\"$any(hostRef.error | async)?.kind\"></bb-payment-request-error>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #notificationError>\n  <span\n    i18n=\"\n      Operation Failed|Error notification when failing to save payment request@@payment-request.label.notification.error\">\n    Operation failed\n  </span>\n</ng-template>\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { PaymentRequestService } from './payment-request-widget/payment-request.service';\n\n@Component({\n  selector: 'bb-payment-request-widget',\n  template: `\n    <bb-payment-request-container\n      (redirectToAllowUrl)=\"redirectToAllowUrl($event)\"\n      (redirectToRejectUrl)=\"redirectToRejectUrl($event)\"></bb-payment-request-container>\n  `,\n  providers: [PaymentRequestService],\n})\nexport class PaymentRequestWidgetComponent {\n  /**\n   * Emitter that fires after allowing payment\n   */\n  @Output() allowPaymentRequestRedirectUrl = new EventEmitter<string>();\n  /**\n   * Emitter that fires after rejecting payment\n   */\n  @Output() rejectPaymentRequestRedirectUrl = new EventEmitter<string>();\n\n  redirectToAllowUrl(url: string) {\n    this.allowPaymentRequestRedirectUrl.next(url);\n  }\n\n  redirectToRejectUrl(url: string) {\n    this.rejectPaymentRequestRedirectUrl.next(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { ConsentUiModule } from '@backbase/consent-ui';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { AccountSelectorModule } from '@backbase/ui-ang/account-selector';\nimport {\n  PaymentRequestAmountComponent,\n  PaymentRequestAmountCustomizableDirective,\n} from './payment-request-widget/payment-request-amount/payment-request-amount.component';\nimport { PaymentRequestErrorComponent } from './payment-request-widget/payment-request-error/payment-request-error.component';\nimport {\n  PaymentRequestTppInformationComponent,\n  PaymentRequestTppInformationCustomizableDirective,\n} from './payment-request-widget/payment-request-tpp-information/payment-request-tpp-information.component';\nimport {\n  PaymentRequestAccountSelectorComponent,\n  PaymentRequestAccountSelectorCustomizableDirective,\n} from './payment-request-widget/payment-request-account-selector/payment-request-account-selector.component';\nimport {\n  PaymentRequestContainerComponent,\n  PaymentRequestWidgetCustomizableDirective,\n} from './payment-request-widget/payment-request-container/payment-request-container.component';\nimport { PaymentRequestWidgetComponent } from './payment-request-widget.component';\n\nconst components = [\n  PaymentRequestWidgetComponent,\n  PaymentRequestContainerComponent,\n  PaymentRequestAccountSelectorComponent,\n  PaymentRequestTppInformationComponent,\n  PaymentRequestErrorComponent,\n  PaymentRequestAmountComponent,\n];\n\nconst directives = [\n  PaymentRequestWidgetCustomizableDirective,\n  PaymentRequestTppInformationCustomizableDirective,\n  PaymentRequestAccountSelectorCustomizableDirective,\n  PaymentRequestAmountCustomizableDirective,\n];\n\nconst uiModules = [\n  ConsentUiModule,\n  ButtonModule,\n  AlertModule,\n  LoadingIndicatorModule,\n  ProductItemBasicAccountModule,\n  EmptyStateModule,\n  AmountModule,\n  NotificationModule,\n  AccountSelectorModule,\n  AmountModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ...uiModules,\n    BackbaseCoreModule.withConfig({\n      classMap: { PaymentRequestWidgetComponent },\n    }),\n  ],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules],\n})\nexport class PaymentRequestWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}