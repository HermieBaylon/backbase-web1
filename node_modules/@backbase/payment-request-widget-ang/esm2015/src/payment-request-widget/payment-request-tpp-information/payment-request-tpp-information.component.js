import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/consent-ui";
export class PaymentRequestTppInformationComponent {
    constructor() {
        /**
         * Component context
         */
        this.hostRef = this;
    }
}
PaymentRequestTppInformationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentRequestTppInformationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
PaymentRequestTppInformationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestTppInformationComponent, selector: "bb-payment-request-tpp-information", inputs: { tpp: "tpp" }, ngImport: i0, template: "<ng-container bbPaymentRequestTppInformationCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"tpp\">\n</ng-container>\n\n<ng-template bbPaymentRequestTppInformationCustomizable let-hostRef let-tpp=\"context\">\n  <div\n    class=\"bb-block bb-block--sm bb-text-bold\"\n    data-role=\"pay-to-label\"\n    i18n=\"Pay to|Third party information@@payment-request.label.payTo\">\n    Pay to\n  </div>\n\n  <div class=\"card card-sm\">\n    <div class=\"card-body\">\n      <bb-third-party-provider-ui\n        [name]=\"tpp.name\"\n        [url]=\"tpp.website\"\n        [verified]=\"tpp.isTrusted\"\n        [image]=\"tpp.imageUrl\"\n        data-role=\"third-party-provider-label\">\n      </bb-third-party-provider-ui>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.ӨThirdPartyProviderComponent; }), selector: "bb-third-party-provider-ui", inputs: ["name", "image", "url", "verified", "condensed", "expiryDate", "expired", "showExpire"] }], directives: [{ type: i0.forwardRef(function () { return PaymentRequestTppInformationCustomizableDirective; }), selector: "[bbPaymentRequestTppInformationCustomizable]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentRequestTppInformationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-payment-request-tpp-information',
                    templateUrl: './payment-request-tpp-information.component.html',
                }]
        }], propDecorators: { tpp: [{
                type: Input
            }] } });
export class PaymentRequestTppInformationCustomizableDirective extends BbTemplate {
}
PaymentRequestTppInformationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentRequestTppInformationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
PaymentRequestTppInformationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestTppInformationCustomizableDirective, selector: "[bbPaymentRequestTppInformationCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentRequestTppInformationCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbPaymentRequestTppInformationCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1yZXF1ZXN0LXRwcC1pbmZvcm1hdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3BheW1lbnQtcmVxdWVzdC13aWRnZXQtYW5nL3NyYy9wYXltZW50LXJlcXVlc3Qtd2lkZ2V0L3BheW1lbnQtcmVxdWVzdC10cHAtaW5mb3JtYXRpb24vcGF5bWVudC1yZXF1ZXN0LXRwcC1pbmZvcm1hdGlvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3BheW1lbnQtcmVxdWVzdC13aWRnZXQtYW5nL3NyYy9wYXltZW50LXJlcXVlc3Qtd2lkZ2V0L3BheW1lbnQtcmVxdWVzdC10cHAtaW5mb3JtYXRpb24vcGF5bWVudC1yZXF1ZXN0LXRwcC1pbmZvcm1hdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7QUFRM0QsTUFBTSxPQUFPLHFDQUFxQztJQUpsRDtRQUtFOztXQUVHO1FBQ00sWUFBTyxHQUEwQyxJQUFJLENBQUM7S0FLaEU7O21JQVRZLHFDQUFxQzt1SEFBckMscUNBQXFDLGtHQ1RsRCwrdkJBdUJBLG9TREFhLGlEQUFpRDs0RkFkakQscUNBQXFDO2tCQUpqRCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxvQ0FBb0M7b0JBQzlDLFdBQVcsRUFBRSxrREFBa0Q7aUJBQ2hFOzhCQVNVLEdBQUc7c0JBQVgsS0FBSzs7QUFNUixNQUFNLE9BQU8saURBQWtELFNBQVEsVUFHdEU7OytJQUhZLGlEQUFpRDttSUFBakQsaURBQWlEOzRGQUFqRCxpREFBaUQ7a0JBSDdELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDhDQUE4QztpQkFDekQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJiVGVtcGxhdGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5cbmltcG9ydCB7IFRwcCB9IGZyb20gJy4uL3BheW1lbnQtcmVxdWVzdC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItcGF5bWVudC1yZXF1ZXN0LXRwcC1pbmZvcm1hdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wYXltZW50LXJlcXVlc3QtdHBwLWluZm9ybWF0aW9uLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgUGF5bWVudFJlcXVlc3RUcHBJbmZvcm1hdGlvbkNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBDb21wb25lbnQgY29udGV4dFxuICAgKi9cbiAgcmVhZG9ubHkgaG9zdFJlZjogUGF5bWVudFJlcXVlc3RUcHBJbmZvcm1hdGlvbkNvbXBvbmVudCA9IHRoaXM7XG4gIC8qKlxuICAgKiBUaGlyZCBwYXJ0eSBwcm92aWRlclxuICAgKi9cbiAgQElucHV0KCkgdHBwOiBUcHAgfCB1bmRlZmluZWQ7XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYlBheW1lbnRSZXF1ZXN0VHBwSW5mb3JtYXRpb25DdXN0b21pemFibGVdJyxcbn0pXG5leHBvcnQgY2xhc3MgUGF5bWVudFJlcXVlc3RUcHBJbmZvcm1hdGlvbkN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIFBheW1lbnRSZXF1ZXN0VHBwSW5mb3JtYXRpb25Db21wb25lbnQsXG4gIFRwcFxuPiB7fVxuIiwiPG5nLWNvbnRhaW5lciBiYlBheW1lbnRSZXF1ZXN0VHBwSW5mb3JtYXRpb25DdXN0b21pemFibGUgW2JiSG9zdFJlZl09XCJob3N0UmVmXCIgW2JiVGVtcGxhdGVDb250ZXh0XT1cInRwcFwiPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSBiYlBheW1lbnRSZXF1ZXN0VHBwSW5mb3JtYXRpb25DdXN0b21pemFibGUgbGV0LWhvc3RSZWYgbGV0LXRwcD1cImNvbnRleHRcIj5cbiAgPGRpdlxuICAgIGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLXNtIGJiLXRleHQtYm9sZFwiXG4gICAgZGF0YS1yb2xlPVwicGF5LXRvLWxhYmVsXCJcbiAgICBpMThuPVwiUGF5IHRvfFRoaXJkIHBhcnR5IGluZm9ybWF0aW9uQEBwYXltZW50LXJlcXVlc3QubGFiZWwucGF5VG9cIj5cbiAgICBQYXkgdG9cbiAgPC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cImNhcmQgY2FyZC1zbVwiPlxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICAgIDxiYi10aGlyZC1wYXJ0eS1wcm92aWRlci11aVxuICAgICAgICBbbmFtZV09XCJ0cHAubmFtZVwiXG4gICAgICAgIFt1cmxdPVwidHBwLndlYnNpdGVcIlxuICAgICAgICBbdmVyaWZpZWRdPVwidHBwLmlzVHJ1c3RlZFwiXG4gICAgICAgIFtpbWFnZV09XCJ0cHAuaW1hZ2VVcmxcIlxuICAgICAgICBkYXRhLXJvbGU9XCJ0aGlyZC1wYXJ0eS1wcm92aWRlci1sYWJlbFwiPlxuICAgICAgPC9iYi10aGlyZC1wYXJ0eS1wcm92aWRlci11aT5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuIl19