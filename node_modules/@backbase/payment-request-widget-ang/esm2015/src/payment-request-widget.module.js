import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { ConsentUiModule } from '@backbase/consent-ui';
import { ButtonModule } from '@backbase/ui-ang/button';
import { AlertModule } from '@backbase/ui-ang/alert';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';
import { EmptyStateModule } from '@backbase/ui-ang/empty-state';
import { AmountModule } from '@backbase/ui-ang/amount';
import { NotificationModule } from '@backbase/ui-ang/notification';
import { AccountSelectorModule } from '@backbase/ui-ang/account-selector';
import { PaymentRequestAmountComponent, PaymentRequestAmountCustomizableDirective, } from './payment-request-widget/payment-request-amount/payment-request-amount.component';
import { PaymentRequestErrorComponent } from './payment-request-widget/payment-request-error/payment-request-error.component';
import { PaymentRequestTppInformationComponent, PaymentRequestTppInformationCustomizableDirective, } from './payment-request-widget/payment-request-tpp-information/payment-request-tpp-information.component';
import { PaymentRequestAccountSelectorComponent, PaymentRequestAccountSelectorCustomizableDirective, } from './payment-request-widget/payment-request-account-selector/payment-request-account-selector.component';
import { PaymentRequestContainerComponent, PaymentRequestWidgetCustomizableDirective, } from './payment-request-widget/payment-request-container/payment-request-container.component';
import { PaymentRequestWidgetComponent } from './payment-request-widget.component';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const components = [
    PaymentRequestWidgetComponent,
    PaymentRequestContainerComponent,
    PaymentRequestAccountSelectorComponent,
    PaymentRequestTppInformationComponent,
    PaymentRequestErrorComponent,
    PaymentRequestAmountComponent,
];
const directives = [
    PaymentRequestWidgetCustomizableDirective,
    PaymentRequestTppInformationCustomizableDirective,
    PaymentRequestAccountSelectorCustomizableDirective,
    PaymentRequestAmountCustomizableDirective,
];
const uiModules = [
    ConsentUiModule,
    ButtonModule,
    AlertModule,
    LoadingIndicatorModule,
    ProductItemBasicAccountModule,
    EmptyStateModule,
    AmountModule,
    NotificationModule,
    AccountSelectorModule,
    AmountModule,
];
export class PaymentRequestWidgetModule {
}
PaymentRequestWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentRequestWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PaymentRequestWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentRequestWidgetModule, declarations: [PaymentRequestWidgetComponent,
        PaymentRequestContainerComponent,
        PaymentRequestAccountSelectorComponent,
        PaymentRequestTppInformationComponent,
        PaymentRequestErrorComponent,
        PaymentRequestAmountComponent, PaymentRequestWidgetCustomizableDirective,
        PaymentRequestTppInformationCustomizableDirective,
        PaymentRequestAccountSelectorCustomizableDirective,
        PaymentRequestAmountCustomizableDirective], imports: [CommonModule, ConsentUiModule,
        ButtonModule,
        AlertModule,
        LoadingIndicatorModule,
        ProductItemBasicAccountModule,
        EmptyStateModule,
        AmountModule,
        NotificationModule,
        AccountSelectorModule,
        AmountModule, i1.BackbaseCoreModule], exports: [PaymentRequestWidgetComponent,
        PaymentRequestContainerComponent,
        PaymentRequestAccountSelectorComponent,
        PaymentRequestTppInformationComponent,
        PaymentRequestErrorComponent,
        PaymentRequestAmountComponent, PaymentRequestWidgetCustomizableDirective,
        PaymentRequestTppInformationCustomizableDirective,
        PaymentRequestAccountSelectorCustomizableDirective,
        PaymentRequestAmountCustomizableDirective, ConsentUiModule,
        ButtonModule,
        AlertModule,
        LoadingIndicatorModule,
        ProductItemBasicAccountModule,
        EmptyStateModule,
        AmountModule,
        NotificationModule,
        AccountSelectorModule,
        AmountModule] });
PaymentRequestWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentRequestWidgetModule, imports: [[
            CommonModule,
            ...uiModules,
            BackbaseCoreModule.withConfig({
                classMap: { PaymentRequestWidgetComponent },
            }),
        ], ConsentUiModule,
        ButtonModule,
        AlertModule,
        LoadingIndicatorModule,
        ProductItemBasicAccountModule,
        EmptyStateModule,
        AmountModule,
        NotificationModule,
        AccountSelectorModule,
        AmountModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PaymentRequestWidgetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        ...uiModules,
                        BackbaseCoreModule.withConfig({
                            classMap: { PaymentRequestWidgetComponent },
                        }),
                    ],
                    declarations: [...components, ...directives],
                    exports: [...components, ...directives, ...uiModules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC1yZXF1ZXN0LXdpZGdldC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL3BheW1lbnQtcmVxdWVzdC13aWRnZXQtYW5nL3NyYy9wYXltZW50LXJlcXVlc3Qtd2lkZ2V0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUM1RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDbkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDMUUsT0FBTyxFQUNMLDZCQUE2QixFQUM3Qix5Q0FBeUMsR0FDMUMsTUFBTSxrRkFBa0YsQ0FBQztBQUMxRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxnRkFBZ0YsQ0FBQztBQUM5SCxPQUFPLEVBQ0wscUNBQXFDLEVBQ3JDLGlEQUFpRCxHQUNsRCxNQUFNLG9HQUFvRyxDQUFDO0FBQzVHLE9BQU8sRUFDTCxzQ0FBc0MsRUFDdEMsa0RBQWtELEdBQ25ELE1BQU0sc0dBQXNHLENBQUM7QUFDOUcsT0FBTyxFQUNMLGdDQUFnQyxFQUNoQyx5Q0FBeUMsR0FDMUMsTUFBTSx3RkFBd0YsQ0FBQztBQUNoRyxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7O0FBRW5GLE1BQU0sVUFBVSxHQUFHO0lBQ2pCLDZCQUE2QjtJQUM3QixnQ0FBZ0M7SUFDaEMsc0NBQXNDO0lBQ3RDLHFDQUFxQztJQUNyQyw0QkFBNEI7SUFDNUIsNkJBQTZCO0NBQzlCLENBQUM7QUFFRixNQUFNLFVBQVUsR0FBRztJQUNqQix5Q0FBeUM7SUFDekMsaURBQWlEO0lBQ2pELGtEQUFrRDtJQUNsRCx5Q0FBeUM7Q0FDMUMsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUFHO0lBQ2hCLGVBQWU7SUFDZixZQUFZO0lBQ1osV0FBVztJQUNYLHNCQUFzQjtJQUN0Qiw2QkFBNkI7SUFDN0IsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLFlBQVk7Q0FDYixDQUFDO0FBYUYsTUFBTSxPQUFPLDBCQUEwQjs7d0hBQTFCLDBCQUEwQjt5SEFBMUIsMEJBQTBCLGlCQXZDckMsNkJBQTZCO1FBQzdCLGdDQUFnQztRQUNoQyxzQ0FBc0M7UUFDdEMscUNBQXFDO1FBQ3JDLDRCQUE0QjtRQUM1Qiw2QkFBNkIsRUFJN0IseUNBQXlDO1FBQ3pDLGlEQUFpRDtRQUNqRCxrREFBa0Q7UUFDbEQseUNBQXlDLGFBa0J2QyxZQUFZLEVBZGQsZUFBZTtRQUNmLFlBQVk7UUFDWixXQUFXO1FBQ1gsc0JBQXNCO1FBQ3RCLDZCQUE2QjtRQUM3QixnQkFBZ0I7UUFDaEIsWUFBWTtRQUNaLGtCQUFrQjtRQUNsQixxQkFBcUI7UUFDckIsWUFBWSxvQ0F6QlosNkJBQTZCO1FBQzdCLGdDQUFnQztRQUNoQyxzQ0FBc0M7UUFDdEMscUNBQXFDO1FBQ3JDLDRCQUE0QjtRQUM1Qiw2QkFBNkIsRUFJN0IseUNBQXlDO1FBQ3pDLGlEQUFpRDtRQUNqRCxrREFBa0Q7UUFDbEQseUNBQXlDLEVBSXpDLGVBQWU7UUFDZixZQUFZO1FBQ1osV0FBVztRQUNYLHNCQUFzQjtRQUN0Qiw2QkFBNkI7UUFDN0IsZ0JBQWdCO1FBQ2hCLFlBQVk7UUFDWixrQkFBa0I7UUFDbEIscUJBQXFCO1FBQ3JCLFlBQVk7eUhBY0QsMEJBQTBCLFlBVjVCO1lBQ1AsWUFBWTtZQUNaLEdBQUcsU0FBUztZQUNaLGtCQUFrQixDQUFDLFVBQVUsQ0FBQztnQkFDNUIsUUFBUSxFQUFFLEVBQUUsNkJBQTZCLEVBQUU7YUFDNUMsQ0FBQztTQUNILEVBbkJELGVBQWU7UUFDZixZQUFZO1FBQ1osV0FBVztRQUNYLHNCQUFzQjtRQUN0Qiw2QkFBNkI7UUFDN0IsZ0JBQWdCO1FBQ2hCLFlBQVk7UUFDWixrQkFBa0I7UUFDbEIscUJBQXFCO1FBQ3JCLFlBQVk7NEZBY0QsMEJBQTBCO2tCQVh0QyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLEdBQUcsU0FBUzt3QkFDWixrQkFBa0IsQ0FBQyxVQUFVLENBQUM7NEJBQzVCLFFBQVEsRUFBRSxFQUFFLDZCQUE2QixFQUFFO3lCQUM1QyxDQUFDO3FCQUNIO29CQUNELFlBQVksRUFBRSxDQUFDLEdBQUcsVUFBVSxFQUFFLEdBQUcsVUFBVSxDQUFDO29CQUM1QyxPQUFPLEVBQUUsQ0FBQyxHQUFHLFVBQVUsRUFBRSxHQUFHLFVBQVUsRUFBRSxHQUFHLFNBQVMsQ0FBQztpQkFDdEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEJhY2tiYXNlQ29yZU1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlJztcbmltcG9ydCB7IENvbnNlbnRVaU1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS9jb25zZW50LXVpJztcblxuaW1wb3J0IHsgQnV0dG9uTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9idXR0b24nO1xuaW1wb3J0IHsgQWxlcnRNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2FsZXJ0JztcbmltcG9ydCB7IExvYWRpbmdJbmRpY2F0b3JNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2xvYWRpbmctaW5kaWNhdG9yJztcbmltcG9ydCB7IFByb2R1Y3RJdGVtQmFzaWNBY2NvdW50TW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9wcm9kdWN0LWl0ZW0tYmFzaWMtYWNjb3VudCc7XG5pbXBvcnQgeyBFbXB0eVN0YXRlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9lbXB0eS1zdGF0ZSc7XG5pbXBvcnQgeyBBbW91bnRNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2Ftb3VudCc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25Nb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL25vdGlmaWNhdGlvbic7XG5pbXBvcnQgeyBBY2NvdW50U2VsZWN0b3JNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvdWktYW5nL2FjY291bnQtc2VsZWN0b3InO1xuaW1wb3J0IHtcbiAgUGF5bWVudFJlcXVlc3RBbW91bnRDb21wb25lbnQsXG4gIFBheW1lbnRSZXF1ZXN0QW1vdW50Q3VzdG9taXphYmxlRGlyZWN0aXZlLFxufSBmcm9tICcuL3BheW1lbnQtcmVxdWVzdC13aWRnZXQvcGF5bWVudC1yZXF1ZXN0LWFtb3VudC9wYXltZW50LXJlcXVlc3QtYW1vdW50LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQYXltZW50UmVxdWVzdEVycm9yQ29tcG9uZW50IH0gZnJvbSAnLi9wYXltZW50LXJlcXVlc3Qtd2lkZ2V0L3BheW1lbnQtcmVxdWVzdC1lcnJvci9wYXltZW50LXJlcXVlc3QtZXJyb3IuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIFBheW1lbnRSZXF1ZXN0VHBwSW5mb3JtYXRpb25Db21wb25lbnQsXG4gIFBheW1lbnRSZXF1ZXN0VHBwSW5mb3JtYXRpb25DdXN0b21pemFibGVEaXJlY3RpdmUsXG59IGZyb20gJy4vcGF5bWVudC1yZXF1ZXN0LXdpZGdldC9wYXltZW50LXJlcXVlc3QtdHBwLWluZm9ybWF0aW9uL3BheW1lbnQtcmVxdWVzdC10cHAtaW5mb3JtYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7XG4gIFBheW1lbnRSZXF1ZXN0QWNjb3VudFNlbGVjdG9yQ29tcG9uZW50LFxuICBQYXltZW50UmVxdWVzdEFjY291bnRTZWxlY3RvckN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbn0gZnJvbSAnLi9wYXltZW50LXJlcXVlc3Qtd2lkZ2V0L3BheW1lbnQtcmVxdWVzdC1hY2NvdW50LXNlbGVjdG9yL3BheW1lbnQtcmVxdWVzdC1hY2NvdW50LXNlbGVjdG9yLmNvbXBvbmVudCc7XG5pbXBvcnQge1xuICBQYXltZW50UmVxdWVzdENvbnRhaW5lckNvbXBvbmVudCxcbiAgUGF5bWVudFJlcXVlc3RXaWRnZXRDdXN0b21pemFibGVEaXJlY3RpdmUsXG59IGZyb20gJy4vcGF5bWVudC1yZXF1ZXN0LXdpZGdldC9wYXltZW50LXJlcXVlc3QtY29udGFpbmVyL3BheW1lbnQtcmVxdWVzdC1jb250YWluZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFBheW1lbnRSZXF1ZXN0V2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi9wYXltZW50LXJlcXVlc3Qtd2lkZ2V0LmNvbXBvbmVudCc7XG5cbmNvbnN0IGNvbXBvbmVudHMgPSBbXG4gIFBheW1lbnRSZXF1ZXN0V2lkZ2V0Q29tcG9uZW50LFxuICBQYXltZW50UmVxdWVzdENvbnRhaW5lckNvbXBvbmVudCxcbiAgUGF5bWVudFJlcXVlc3RBY2NvdW50U2VsZWN0b3JDb21wb25lbnQsXG4gIFBheW1lbnRSZXF1ZXN0VHBwSW5mb3JtYXRpb25Db21wb25lbnQsXG4gIFBheW1lbnRSZXF1ZXN0RXJyb3JDb21wb25lbnQsXG4gIFBheW1lbnRSZXF1ZXN0QW1vdW50Q29tcG9uZW50LFxuXTtcblxuY29uc3QgZGlyZWN0aXZlcyA9IFtcbiAgUGF5bWVudFJlcXVlc3RXaWRnZXRDdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIFBheW1lbnRSZXF1ZXN0VHBwSW5mb3JtYXRpb25DdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIFBheW1lbnRSZXF1ZXN0QWNjb3VudFNlbGVjdG9yQ3VzdG9taXphYmxlRGlyZWN0aXZlLFxuICBQYXltZW50UmVxdWVzdEFtb3VudEN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbl07XG5cbmNvbnN0IHVpTW9kdWxlcyA9IFtcbiAgQ29uc2VudFVpTW9kdWxlLFxuICBCdXR0b25Nb2R1bGUsXG4gIEFsZXJ0TW9kdWxlLFxuICBMb2FkaW5nSW5kaWNhdG9yTW9kdWxlLFxuICBQcm9kdWN0SXRlbUJhc2ljQWNjb3VudE1vZHVsZSxcbiAgRW1wdHlTdGF0ZU1vZHVsZSxcbiAgQW1vdW50TW9kdWxlLFxuICBOb3RpZmljYXRpb25Nb2R1bGUsXG4gIEFjY291bnRTZWxlY3Rvck1vZHVsZSxcbiAgQW1vdW50TW9kdWxlLFxuXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICAuLi51aU1vZHVsZXMsXG4gICAgQmFja2Jhc2VDb3JlTW9kdWxlLndpdGhDb25maWcoe1xuICAgICAgY2xhc3NNYXA6IHsgUGF5bWVudFJlcXVlc3RXaWRnZXRDb21wb25lbnQgfSxcbiAgICB9KSxcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbLi4uY29tcG9uZW50cywgLi4uZGlyZWN0aXZlc10sXG4gIGV4cG9ydHM6IFsuLi5jb21wb25lbnRzLCAuLi5kaXJlY3RpdmVzLCAuLi51aU1vZHVsZXNdLFxufSlcbmV4cG9ydCBjbGFzcyBQYXltZW50UmVxdWVzdFdpZGdldE1vZHVsZSB7fVxuIl19