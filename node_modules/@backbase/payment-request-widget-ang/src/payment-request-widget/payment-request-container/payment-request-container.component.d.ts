import { OnInit, TemplateRef, EventEmitter } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Observable, BehaviorSubject } from 'rxjs';
import { ActivatedRoute } from '@angular/router';
import { PaymentRequestService, PaymentRequest, Account } from '../payment-request.service';
import { PaymentRequestError } from '../payment-request-error';
import * as i0 from "@angular/core";
export declare class PaymentRequestContainerComponent implements OnInit {
    private readonly service;
    private readonly route;
    /**
     * Component context
     */
    readonly hostRef: PaymentRequestContainerComponent;
    /**
     * Emitter that fires when allowing payment
     */
    redirectToAllowUrl: EventEmitter<string>;
    /**
     * Emitter that fires when rejecting payment
     */
    redirectToRejectUrl: EventEmitter<string>;
    /**
     * Error notification template reference
     */
    notificationErrorTemplate: TemplateRef<any> | string;
    /**
     * Stream of payment request ID
     */
    readonly paymentRequestId: Observable<string>;
    /**
     * Stream of Payment request
     */
    readonly paymentRequest: Observable<PaymentRequest | undefined>;
    /**
     * Stream of loading spinner visibility flag
     */
    readonly loading: BehaviorSubject<boolean>;
    /**
     * Stream of Payment request errors
     */
    readonly error: BehaviorSubject<PaymentRequestError | undefined>;
    /**
     * Selected account
     */
    selectedAccount: Account | undefined;
    /**
     * Show account error flag
     */
    showAccountError: boolean;
    /**
     * Stream of saving flag
     */
    readonly saving: BehaviorSubject<boolean>;
    /**
     * Stream of saving errors
     */
    readonly savingError: BehaviorSubject<PaymentRequestError | undefined>;
    /**
     * Sends allow payment request
     */
    allowPaymentRequest(): void;
    /**
     * Sends reject payment request
     */
    rejectPaymentRequest(): void;
    ngOnInit(): void;
    private getRouteParam;
    constructor(service: PaymentRequestService, route: ActivatedRoute);
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentRequestContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PaymentRequestContainerComponent, "bb-payment-request-container", never, {}, { "redirectToAllowUrl": "redirectToAllowUrl"; "redirectToRejectUrl": "redirectToRejectUrl"; }, never, never>;
}
export declare class PaymentRequestWidgetCustomizableDirective extends BbTemplate<PaymentRequestContainerComponent, PaymentRequest | null> {
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentRequestWidgetCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PaymentRequestWidgetCustomizableDirective, "[bbPaymentRequestWidgetCustomizable]", never, {}, {}, never>;
}
