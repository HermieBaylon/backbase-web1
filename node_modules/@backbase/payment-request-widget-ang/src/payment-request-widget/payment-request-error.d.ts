import { HttpErrorResponse } from '@angular/common/http';
export declare class PaymentRequestAccessDenied {
    readonly error: HttpErrorResponse;
    kind: 'PaymentRequestAccessDenied';
    constructor(error: HttpErrorResponse);
}
export declare class PaymentRequestNotFound {
    readonly error: HttpErrorResponse;
    kind: 'PaymentRequestNotFound';
    constructor(error: HttpErrorResponse);
}
export declare class PaymentRequestBadRequest {
    readonly error: HttpErrorResponse;
    kind: 'PaymentRequestBadRequest';
    constructor(error: HttpErrorResponse);
}
export declare class PaymentRequestUnknownError {
    readonly error: HttpErrorResponse;
    kind: 'PaymentRequestUnknownError';
    constructor(error: HttpErrorResponse);
}
export declare class PaymentRequestConnectivityError {
    readonly error: HttpErrorResponse;
    kind: 'PaymentRequestConnectivityError';
    constructor(error: HttpErrorResponse);
}
export declare type PaymentRequestError = PaymentRequestAccessDenied | PaymentRequestNotFound | PaymentRequestBadRequest | PaymentRequestUnknownError | PaymentRequestConnectivityError;
export declare const parseError: (error: HttpErrorResponse) => PaymentRequestError;
