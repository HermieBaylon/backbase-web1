/**
 * Configuration of a Widget Input or Output Pipeline
 */
export declare class CommunicationDefinition {
    /**
     * The transport identifier string
     */
    readonly transport: string;
    /**
     * A transport-specific param
     */
    readonly param: string;
    /**
     * @param transport The transport identifier string
     * @param param A transport-specific param
     */
    constructor(
    /**
     * The transport identifier string
     */
    transport: string, 
    /**
     * A transport-specific param
     */
    param: string);
    /**
     * Determine if a `CommunicationDefinition` is equal to this one.
     *
     * @param other The other `CommunicationDefinition` to compare to
     */
    equals(other: CommunicationDefinition): boolean;
}
/**
 * Serialize/Deserialize a Widget Communication Definition to/from a value suitable to be used in a Property string
 */
export interface SerializerDeserializer {
    /**
     * Parse a Property string value into a `CommunicationDefinition`. This may return `undefined` if the format of the
     * Property cannot be handled by the `SerializerDeserializer`.
     *
     * @param definition The Property string value to attempt to parse
     */
    fromProperty(definition: string): CommunicationDefinition | undefined;
    /**
     * Serialize a `CommunicationDefinition` into a Property string
     *
     * @param propertyValue The CommunicationDefinition to serialize into a Property string
     */
    toProperty(propertyValue: CommunicationDefinition): string;
}
export declare function human(): SerializerDeserializer;
export declare function mangled(): SerializerDeserializer;
export declare function mangledJson(): SerializerDeserializer;
export declare function combined(parsers: Array<SerializerDeserializer>): SerializerDeserializer;
