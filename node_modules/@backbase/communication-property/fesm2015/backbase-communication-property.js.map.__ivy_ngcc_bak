{"version":3,"file":"backbase-communication-property.js","sources":["../../../../projects/backbase/communication-property/src/serdes.ts","../../../../projects/backbase/communication-property/src/public-api.ts","../../../../projects/backbase/communication-property/src/backbase-communication-property.ts"],"sourcesContent":["/**\n * Configuration of a Widget Input or Output Pipeline\n */\nexport class CommunicationDefinition {\n  /**\n   * @param transport The transport identifier string\n   * @param param A transport-specific param\n   */\n  constructor(\n    /**\n     * The transport identifier string\n     */\n    readonly transport: string,\n    /**\n     * A transport-specific param\n     */\n    readonly param: string,\n  ) {}\n  /**\n   * Determine if a `CommunicationDefinition` is equal to this one.\n   *\n   * @param other The other `CommunicationDefinition` to compare to\n   */\n  equals(other: CommunicationDefinition) {\n    return this.transport === other.transport && this.param === other.param;\n  }\n}\n\n/**\n * Serialize/Deserialize a Widget Communication Definition to/from a value suitable to be used in a Property string\n */\nexport interface SerializerDeserializer {\n  /**\n   * Parse a Property string value into a `CommunicationDefinition`. This may return `undefined` if the format of the\n   * Property cannot be handled by the `SerializerDeserializer`.\n   *\n   * @param definition The Property string value to attempt to parse\n   */\n  fromProperty(definition: string): CommunicationDefinition | undefined;\n\n  /**\n   * Serialize a `CommunicationDefinition` into a Property string\n   *\n   * @param propertyValue The CommunicationDefinition to serialize into a Property string\n   */\n  toProperty(propertyValue: CommunicationDefinition): string;\n}\n\nexport function human(): SerializerDeserializer {\n  return {\n    fromProperty(value: string): CommunicationDefinition | undefined {\n      const splitAt = value.indexOf(' ');\n      if (splitAt === -1) {\n        return undefined;\n      }\n      const transport = value.substr(0, splitAt);\n      const param = value.substr(splitAt + 1);\n      if (param.includes(' ')) {\n        return undefined;\n      }\n      return new CommunicationDefinition(transport, param);\n    },\n    toProperty(definition: CommunicationDefinition): string {\n      if (definition.param.includes(' ')) {\n        throw new Error(\n          'Human SerializerDeserializer cannot serialize CommunicationDefinition containing a space in the param',\n        );\n      }\n      return `${definition.transport} ${definition.param}`;\n    },\n  };\n}\n\nexport function mangled(): SerializerDeserializer {\n  return {\n    fromProperty(value: string): CommunicationDefinition | undefined {\n      if (!value.startsWith(':0:')) {\n        return undefined;\n      }\n      let blob: string;\n      try {\n        blob = atob(value.slice(':0:'.length));\n      } catch (e) {\n        // Not valid base64\n        return undefined;\n      }\n\n      const splitAt = blob.indexOf(' ');\n      const transport = blob.substr(0, splitAt);\n      const param = blob.substr(splitAt + 1);\n      return new CommunicationDefinition(transport, param);\n    },\n    toProperty(definition: CommunicationDefinition): string {\n      const mangledValue = btoa(`${definition.transport} ${definition.param}`);\n      return `:0:${mangledValue}`;\n    },\n  };\n}\n\nfunction isValidStructure(blob: unknown): blob is { transport: string; param: string } {\n  if (typeof blob !== 'object' || blob === null || !('transport' in blob) || !('param' in blob)) {\n    return false;\n  }\n  const structure = blob as { transport: unknown; param: unknown };\n  return typeof structure.transport === 'string' && typeof structure.param === 'string';\n}\n\nexport function mangledJson(): SerializerDeserializer {\n  return {\n    fromProperty(value: string): CommunicationDefinition | undefined {\n      if (!value.startsWith(':1:')) {\n        return undefined;\n      }\n      let blob: unknown;\n      try {\n        blob = JSON.parse(value.slice(':1:'.length));\n      } catch (e) {\n        // Not valid JSON\n        return undefined;\n      }\n\n      if (!isValidStructure(blob)) {\n        return undefined;\n      }\n\n      return new CommunicationDefinition(blob.transport, blob.param);\n    },\n    toProperty(definition: CommunicationDefinition): string {\n      const json = JSON.stringify({ transport: definition.transport, param: definition.param });\n      return `:1:${json}`;\n    },\n  };\n}\n\nfunction tryParse<Parser, R>(\n  inputValue: string,\n  parsers: Array<Parser>,\n  parse: (parser: Parser, value: string) => R | undefined,\n): R | undefined {\n  for (const parser of parsers) {\n    const result = parse(parser, inputValue);\n    if (result !== undefined) {\n      return result;\n    }\n  }\n  return undefined;\n}\n\nexport function combined(parsers: Array<SerializerDeserializer>): SerializerDeserializer {\n  return {\n    fromProperty(inputValue: string): CommunicationDefinition | undefined {\n      return tryParse(inputValue, parsers, (parser, value) => parser.fromProperty(value));\n    },\n    toProperty(definition: CommunicationDefinition): string {\n      const first = parsers[0];\n      return first.toProperty(definition);\n    },\n  };\n}\n","import { combined, human, mangled, mangledJson, SerializerDeserializer } from './serdes';\n\nexport { CommunicationDefinition, SerializerDeserializer } from './serdes';\n\n/**\n * Pre-configured `SerializerDeserializer`\n *\n * This `SerializerDeserializer` will attempt to Deserialize Property falling back to older methods\n * for backwards compatibility. Serialization will be performed using the newest method available.\n */\nexport const serializerDeserializer: SerializerDeserializer = combined([mangledJson(), mangled(), human()]);\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {combined as ɵd,human as ɵa,mangled as ɵb,mangledJson as ɵc} from './serdes';"],"names":[],"mappings":"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"}