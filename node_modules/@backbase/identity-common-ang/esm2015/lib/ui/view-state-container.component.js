import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang";
import * as i2 from "@angular/common";
export class ViewStateContainerComponent {
}
/** @nocollapse */ ViewStateContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ViewStateContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ViewStateContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ViewStateContainerComponent, selector: "bb-identity-view-state-container-component", inputs: { error: "error", loading: "loading" }, ngImport: i0, template: "<ng-container *ngIf=\"!loading; else loadingState\">\n  <ng-container *ngIf=\"!error; else errorState\">\n    <ng-content></ng-content>\n  </ng-container>\n</ng-container>\n\n<ng-template #errorState>\n  <bb-common-error-state-ui class=\"bb-state-container\" [error]=\"error || ''\" data-role=\"self-service-error-state\">\n  </bb-common-error-state-ui>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui i18n-text=\"Loading message@@bb-self-service.loading-indicator\" text=\"Loading...\">\n  </bb-loading-indicator-ui>\n</ng-template>\n", components: [{ type: i1.ErrorCommonStateComponent, selector: "bb-common-error-state-ui", inputs: ["error"] }, { type: i1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ViewStateContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-identity-view-state-container-component',
                    templateUrl: './view-state-container.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { error: [{
                type: Input
            }], loading: [{
                type: Input
            }] } });
//# sourceMappingURL=view-state-container.component.js.map