export const createJourneyConfiguration = (configDefaults, configOverrides) => Object.freeze(configOverrides
    ? Object.entries(configOverrides).reduce((config, [prop, configValues]) => (Object.assign(Object.assign({}, config), (prop in config && configValues
        ? { [prop]: filterUndefinedPropertyValues(config[prop], configValues) }
        : {}))), configDefaults)
    : configDefaults);
const filterUndefinedPropertyValues = (defaultConfig, configOverrideValues) => Object.freeze(Object.entries(configOverrideValues).filter(undefinedFilter).reduce(entriesToObjectTransformReducer, defaultConfig));
const entriesToObjectTransformReducer = (accum, [prop, val]) => (Object.assign(Object.assign({}, accum), { [prop]: val }));
const undefinedFilter = (kayValTuple) => kayValTuple[1] !== undefined;
//# sourceMappingURL=create-journey-configuration.js.map