import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i1$1 from '@angular/router';
import { RouterModule } from '@angular/router';
import * as i1 from '@backbase/ui-ang';
import { ErrorCommonStateModule, LoadingIndicatorModule } from '@backbase/ui-ang';

const generateId = (elementKey) => `${elementKey}-${Math.random().toString(36).substring(2, 9)}`;

const createJourneyConfiguration = (configDefaults, configOverrides) => Object.freeze(configOverrides
    ? Object.entries(configOverrides).reduce((config, [prop, configValues]) => (Object.assign(Object.assign({}, config), (prop in config && configValues
        ? { [prop]: filterUndefinedPropertyValues(config[prop], configValues) }
        : {}))), configDefaults)
    : configDefaults);
const filterUndefinedPropertyValues = (defaultConfig, configOverrideValues) => Object.freeze(Object.entries(configOverrideValues).filter(undefinedFilter).reduce(entriesToObjectTransformReducer, defaultConfig));
const entriesToObjectTransformReducer = (accum, [prop, val]) => (Object.assign(Object.assign({}, accum), { [prop]: val }));
const undefinedFilter = (kayValTuple) => kayValTuple[1] !== undefined;

class ViewStateContainerComponent {
}
/** @nocollapse */ ViewStateContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ViewStateContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ ViewStateContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ViewStateContainerComponent, selector: "bb-identity-view-state-container-component", inputs: { error: "error", loading: "loading" }, ngImport: i0, template: "<ng-container *ngIf=\"!loading; else loadingState\">\n  <ng-container *ngIf=\"!error; else errorState\">\n    <ng-content></ng-content>\n  </ng-container>\n</ng-container>\n\n<ng-template #errorState>\n  <bb-common-error-state-ui class=\"bb-state-container\" [error]=\"error || ''\" data-role=\"self-service-error-state\">\n  </bb-common-error-state-ui>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui i18n-text=\"Loading message@@bb-self-service.loading-indicator\" text=\"Loading...\">\n  </bb-loading-indicator-ui>\n</ng-template>\n", components: [{ type: i1.ErrorCommonStateComponent, selector: "bb-common-error-state-ui", inputs: ["error"] }, { type: i1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ViewStateContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-identity-view-state-container-component',
                    templateUrl: './view-state-container.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { error: [{
                type: Input
            }], loading: [{
                type: Input
            }] } });

class RoutableTabComponent {
    constructor(route) {
        this.route = route;
    }
    ngOnInit() {
        var _a;
        const routeConfig = this.route.snapshot.routeConfig;
        if (routeConfig && ((_a = routeConfig.children) === null || _a === void 0 ? void 0 : _a.length)) {
            this.tabs = this.createTabsFromRouteChildren(routeConfig.children);
        }
    }
    createTabsFromRouteChildren(routeChildren) {
        return routeChildren
            .filter((routeItem) => { var _a; return routeItem.path && ((_a = routeItem.data) === null || _a === void 0 ? void 0 : _a.title); })
            .map((routeItem) => ({
            title: routeItem.data.title,
            route: routeItem.path,
            dataRole: routeItem.data.title.split(' ').join('-').toLowerCase(),
        }));
    }
}
/** @nocollapse */ RoutableTabComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: RoutableTabComponent, deps: [{ token: i1$1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ RoutableTabComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: RoutableTabComponent, selector: "bb-routable-tab-set", ngImport: i0, template: "<div class=\"bb-tab-container__tabs nav nav-tabs\">\n  <a\n    *ngFor=\"let tab of tabs\"\n    [attr.data-role]=\"tab?.dataRole\"\n    class=\"nav-link\"\n    role=\"tab\"\n    [routerLink]=\"[tab.route]\"\n    routerLinkActive=\"active\"\n  >\n    <span class=\"bb-stack__item bb-stack__item--spacing-xs\">{{ tab?.title }}</span>\n  </a>\n</div>\n\n<div class=\"bb-tab-container__content tab-content\" role=\"tabpanel\">\n  <router-outlet></router-outlet>\n</div>\n", directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1$1.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i1$1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], exportAs: ["routerLinkActive"] }, { type: i1$1.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: RoutableTabComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-routable-tab-set',
                    templateUrl: './routable-tab-component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }]; } });

const uiModules = [ErrorCommonStateModule, LoadingIndicatorModule];
const components = [ViewStateContainerComponent, RoutableTabComponent];
class IdentityCommonUiAngModule {
}
/** @nocollapse */ IdentityCommonUiAngModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IdentityCommonUiAngModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ IdentityCommonUiAngModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IdentityCommonUiAngModule, declarations: [ViewStateContainerComponent, RoutableTabComponent], imports: [CommonModule, RouterModule, ErrorCommonStateModule, LoadingIndicatorModule], exports: [ErrorCommonStateModule, LoadingIndicatorModule, ViewStateContainerComponent, RoutableTabComponent] });
/** @nocollapse */ IdentityCommonUiAngModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IdentityCommonUiAngModule, imports: [[CommonModule, RouterModule, ...uiModules], ErrorCommonStateModule, LoadingIndicatorModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IdentityCommonUiAngModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, RouterModule, ...uiModules],
                    declarations: [...components],
                    exports: [...uiModules, ...components],
                }]
        }] });

class IdentityCommonAngModule {
}
/** @nocollapse */ IdentityCommonAngModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IdentityCommonAngModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ IdentityCommonAngModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IdentityCommonAngModule, imports: [CommonModule, IdentityCommonUiAngModule], exports: [IdentityCommonUiAngModule] });
/** @nocollapse */ IdentityCommonAngModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IdentityCommonAngModule, imports: [[CommonModule, IdentityCommonUiAngModule], IdentityCommonUiAngModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: IdentityCommonAngModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, IdentityCommonUiAngModule],
                    exports: [IdentityCommonUiAngModule],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { IdentityCommonAngModule, IdentityCommonUiAngModule, RoutableTabComponent, ViewStateContainerComponent, createJourneyConfiguration, generateId };
//# sourceMappingURL=backbase-identity-common-ang.js.map
