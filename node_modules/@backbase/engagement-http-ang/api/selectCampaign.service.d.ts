import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { SelectedCampaignResource } from '../model/models';
import { EngagementConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface SelectCampaignRequestParams {
    ["spaceId"]: string;
    ["dimensions"]: string;
    ["locale"]: string;
}
export declare class SelectCampaignService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: EngagementConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: EngagementConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    selectCampaign(requestParameters: SelectCampaignRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<SelectedCampaignResource>;
    selectCampaign(requestParameters: SelectCampaignRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<SelectedCampaignResource>>;
    selectCampaign(requestParameters: SelectCampaignRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<SelectedCampaignResource>>;
    selectCampaignUrl(requestParameters: SelectCampaignRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectCampaignService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SelectCampaignService>;
}
