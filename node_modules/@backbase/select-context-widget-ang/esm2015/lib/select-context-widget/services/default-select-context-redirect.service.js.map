{"version":3,"file":"default-select-context-redirect.service.js","sourceRoot":"","sources":["../../../../../../../libs/select-context-widget-ang/src/lib/select-context-widget/services/default-select-context-redirect.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAC3D,OAAO,EAAc,EAAE,EAAE,MAAM,MAAM,CAAC;;AAGtC,MAAM,CAAC,MAAM,0CAA0C,GAAG,IAAI,cAAc,CAC1E,8DAA8D,CAC/D,CAAC;AASF,MAAM,OAAO,mCAAmC;IAC9C,sDAAsD;IACtD,YAAY;IACZ,UAAU,CAAC,gBAAkC,EAAE,aAAqB,EAAE,OAAyB;QAC7F,OAAO,EAAE,CAAC,aAAa,CAAC,CAAC;IAC3B,CAAC;;oJALU,mCAAmC;wJAAnC,mCAAmC;4FAAnC,mCAAmC;kBAD/C,UAAU","sourcesContent":["import { Injectable, InjectionToken } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ServiceAgreement } from './select-context.service';\n\nexport const SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN = new InjectionToken<SelectContextUrlProcessorService>(\n  'Select Context :: SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN',\n);\n\nexport type RedirectProtocol = 'mpa:' | 'spa:' | 'abs:';\n\nexport interface SelectContextUrlProcessorService {\n  processUrl(serviceAgreement: ServiceAgreement, navigateToUrl: string, spaMode: RedirectProtocol): Observable<string>;\n}\n\n@Injectable()\nexport class DefaultSelectContextRedirectService implements SelectContextUrlProcessorService {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  //@ts-ignore\n  processUrl(serviceAgreement: ServiceAgreement, urlToNavigate: string, spaMode: RedirectProtocol): Observable<string> {\n    return of(urlToNavigate);\n  }\n}\n"]}