{"version":3,"file":"backbase-select-context-widget-ang.js","sources":["../../../../libs/select-context-widget-ang/src/lib/select-context-widget/services/default-select-context-redirect.service.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/select-context-error.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/services/select-context-widget-properties.service.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/services/select-context.service.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/service-agreement-item/service-agreement-item.component.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/service-agreement-item/service-agreement-item.component.html","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/service-agreement-list/service-agreement-list.component.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/service-agreement-list/service-agreement-list.component.html","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/select-context-error/select-context-error.component.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/select-context-error/select-context-error.component.html","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/select-context-container/select-context-container.component.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget/select-context-container/select-context-container.component.html","../../../../libs/select-context-widget-ang/src/lib/select-context-widget.component.ts","../../../../libs/select-context-widget-ang/src/lib/select-context-widget.component.html","../../../../libs/select-context-widget-ang/src/lib/select-context-widget.module.ts","../../../../libs/select-context-widget-ang/src/backbase-select-context-widget-ang.ts"],"sourcesContent":["import { Injectable, InjectionToken } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ServiceAgreement } from './select-context.service';\n\nexport const SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN = new InjectionToken<SelectContextUrlProcessorService>(\n  'Select Context :: SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN',\n);\n\nexport type RedirectProtocol = 'mpa:' | 'spa:' | 'abs:';\n\nexport interface SelectContextUrlProcessorService {\n  processUrl(serviceAgreement: ServiceAgreement, navigateToUrl: string, spaMode: RedirectProtocol): Observable<string>;\n}\n\n@Injectable()\nexport class DefaultSelectContextRedirectService implements SelectContextUrlProcessorService {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  //@ts-ignore\n  processUrl(serviceAgreement: ServiceAgreement, urlToNavigate: string, spaMode: RedirectProtocol): Observable<string> {\n    return of(urlToNavigate);\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { parseError as commonParseError, WidgetError } from '@backbase/accessgroup-common-ang';\n\n// Empty interface because package:apps with tsconfig.packaged.json.\n// It also fails when using type since it tries to import WidgetError in other files\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectContextError extends WidgetError {}\n\nexport const parseError = (error: HttpErrorResponse): SelectContextError => commonParseError('SelectContext', error);\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\n\nimport { Observable, combineLatest, BehaviorSubject, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const WidgetProperty = {\n  PAGE_SIZE: 'pageSize',\n  INCLUDE_CURRENT_CONTEXT: 'includeCurrentContext',\n  SHOW_SEARCH_AFTER: 'showSearchAfter',\n  REDIRECT_PAGE: 'selectContextRedirectPage',\n  BACK_OUTPUT: 'output.back',\n};\n\nexport interface WidgetProperties {\n  pageSize: number;\n  includeCurrentContext: boolean;\n  showSearchAfter: number;\n  selectContextRedirectPage: string;\n  backOutput: string;\n}\n\n@Injectable()\nexport class SelectContextWidgetPropertiesService {\n  constructor(@Optional() private readonly itemModel: ItemModel) {}\n\n  private readonly pageSizeSubject$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly includeCurrentContextSubject$ = new BehaviorSubject<boolean | undefined>(undefined);\n  private readonly showSearchAfterSubject$ = new BehaviorSubject<number | undefined>(undefined);\n  private readonly selectContextRedirectPageSubject$ = new BehaviorSubject<string | undefined>(undefined);\n  private readonly backOutputSubject$ = new BehaviorSubject<string | undefined>(undefined);\n\n  private readonly pageSize: Observable<number> =\n    this.itemModel\n      ?.property(WidgetProperty.PAGE_SIZE, '7')\n      .pipe(map(propertyValue => parseInt(<string>propertyValue, 10))) || of(7);\n\n  private readonly includeCurrentContext: Observable<boolean> =\n    this.itemModel\n      ?.property(WidgetProperty.INCLUDE_CURRENT_CONTEXT, 'false')\n      .pipe(map(propertyValue => `${propertyValue}` === 'true')) || of(false);\n\n  private readonly showSearchAfter: Observable<number> =\n    this.itemModel\n      ?.property(WidgetProperty.SHOW_SEARCH_AFTER, '7')\n      .pipe(map(propertyValue => parseInt(<string>propertyValue, 10))) || of(7);\n\n  private readonly selectContextRedirectPage: Observable<string> =\n    this.itemModel?.property(WidgetProperty.REDIRECT_PAGE, '') || of('');\n\n  private readonly backOutput: Observable<string> = this.itemModel?.property(WidgetProperty.BACK_OUTPUT, '') || of('');\n\n  readonly pageSize$ = this.getProperty<number>(this.pageSizeSubject$, this.pageSize).pipe(map(Number));\n\n  readonly includeCurrentContext$ = this.getProperty<boolean>(\n    this.includeCurrentContextSubject$,\n    this.includeCurrentContext,\n  ).pipe(map(this.toBoolean));\n\n  readonly showSearchAfter$ = this.getProperty<number>(this.showSearchAfterSubject$, this.showSearchAfter).pipe(\n    map(Number),\n  );\n\n  readonly selectContextRedirectPage$ = this.getProperty<string>(\n    this.selectContextRedirectPageSubject$,\n    this.selectContextRedirectPage,\n  );\n\n  readonly backOutput$ = this.getProperty<string>(this.backOutputSubject$, this.backOutput);\n\n  private getProperty<T>(input$: Observable<T | undefined>, itemModel: Observable<Property>): Observable<T> {\n    return combineLatest([input$, itemModel]).pipe(\n      map(([value, valueIM]) => (value === undefined ? valueIM : value) as T),\n    );\n  }\n\n  private toBoolean(value: string | boolean) {\n    return value === 'true' || value === true;\n  }\n\n  setPageSize(value: number) {\n    this.pageSizeSubject$.next(value);\n  }\n\n  setIncludeCurrentContext(value: boolean) {\n    this.includeCurrentContextSubject$.next(value);\n  }\n\n  setShowSearchAfter(value: number) {\n    this.showSearchAfterSubject$.next(value);\n  }\n\n  setSelectContextRedirectPage(value: string) {\n    this.selectContextRedirectPageSubject$.next(value);\n  }\n\n  setBackOutput(value: string) {\n    this.backOutputSubject$.next(value);\n  }\n\n  readonly properties: Observable<WidgetProperties> = combineLatest([\n    this.pageSize$,\n    this.includeCurrentContext$,\n    this.showSearchAfter$,\n    this.selectContextRedirectPage$,\n    this.backOutput$,\n  ]).pipe(\n    map(([pageSize, includeCurrentContext, showSearchAfter, selectContextRedirectPage, backOutput]) => ({\n      pageSize,\n      includeCurrentContext,\n      showSearchAfter,\n      selectContextRedirectPage,\n      backOutput,\n    })),\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport {\n  UserContextHttpService,\n  ServiceAgreementHttpService,\n  Serviceagreementpartialitem as ServiceAgreement,\n  GetUserContextServiceAgreementsRequestParams as RequestParams,\n} from '@backbase/data-ang/accesscontrol';\nimport { Observable, BehaviorSubject, of, combineLatest } from 'rxjs';\nimport { switchMap, catchError, map, tap, scan } from 'rxjs/operators';\n\nimport { parseError, SelectContextError } from '../select-context-error';\nimport { SelectContextWidgetPropertiesService, WidgetProperties } from './select-context-widget-properties.service';\n\nexport {\n  Serviceagreementpartialitem as ServiceAgreement,\n  GetUserContextServiceAgreementsRequestParams as RequestParams,\n} from '@backbase/data-ang/accesscontrol';\n\nconst initialParams: RequestParams = {\n  from: 0,\n  size: 7,\n};\n\nexport interface Data {\n  items: ServiceAgreement[];\n  totalCount: number;\n  params: RequestParams;\n}\n\n@Injectable()\nexport class SelectContextService {\n  constructor(\n    private readonly userContextService: UserContextHttpService,\n    private readonly serviceAgreementService: ServiceAgreementHttpService,\n    private readonly widgetPropertiesService: SelectContextWidgetPropertiesService,\n  ) {}\n\n  readonly params = new BehaviorSubject<RequestParams>(initialParams);\n  readonly loading = new BehaviorSubject<boolean>(true);\n  readonly error = new BehaviorSubject<SelectContextError | undefined>(undefined);\n\n  readonly serviceAgreements: Observable<Data> = combineLatest([\n    this.params,\n    this.widgetPropertiesService.properties,\n  ]).pipe(\n    map(([params, { pageSize }]: [RequestParams, WidgetProperties]): RequestParams => ({ ...params, size: pageSize })),\n    tap(() => this.loading.next(true)),\n    switchMap((params: RequestParams) => this.loadServiceAgreements(params)),\n    scan((acc: Data, curr: Data) => this.mergeResults(acc, curr)),\n    catchError((error: SelectContextError) => {\n      this.error.next(error);\n      return of({ items: [], totalCount: 0, params: this.params.value });\n    }),\n    tap(() => this.loading.next(false)),\n  );\n\n  readonly currentContext: Observable<ServiceAgreement | undefined> = this.serviceAgreementService\n    .getServiceAgreementContext()\n    .pipe(catchError(() => of(undefined)));\n\n  private loadServiceAgreements(params: RequestParams): Observable<Data> {\n    return this.userContextService.getUserContextServiceAgreements(params, 'response').pipe(\n      map((response: HttpResponse<ServiceAgreement[]>) => {\n        const items = response.body || [];\n        return {\n          items,\n          totalCount: parseInt(response.headers.get('x-total-count') || '0', 10) || items.length,\n          params,\n        };\n      }),\n      catchError((error: HttpErrorResponse) => {\n        throw parseError(error);\n      }),\n    );\n  }\n\n  private mergeResults(acc: Data, curr: Data): Data {\n    return {\n      totalCount: curr.totalCount || curr.items.length,\n      items: curr.params.from === 0 ? curr.items : [...acc.items, ...curr.items],\n      params: curr.params,\n    };\n  }\n\n  search(query: string) {\n    this.params.next({\n      from: 0,\n      size: this.params.value.size,\n      ...(query ? { query } : {}),\n    });\n  }\n\n  loadMore() {\n    this.params.next({\n      ...this.params.value,\n      from: (this.params.value.from || 0) + 1,\n    });\n  }\n\n  select(serviceAgreement: ServiceAgreement) {\n    return this.userContextService.postUserContext({\n      userContextPOST: {\n        serviceAgreementId: serviceAgreement.id,\n      },\n    });\n  }\n}\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ServiceAgreement } from '../services/select-context.service';\n@Component({\n  selector: 'bb-service-agreement-item',\n  templateUrl: './service-agreement-item.component.html',\n})\nexport class ServiceAgreementItemComponent {\n  hostRef = this;\n  @Input() item: ServiceAgreement | undefined;\n}\n\n@Directive({\n  selector: '[bbSelectContextServiceAgreementItemCustomizable]',\n})\nexport class SelectContextServiceAgreementItemCustomizableDirective extends BbTemplate<\n  ServiceAgreementItemComponent,\n  ServiceAgreement\n> {}\n","<ng-container bbSelectContextServiceAgreementItemCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"item\">\n</ng-container>\n\n<ng-template bbSelectContextServiceAgreementItemCustomizable let-hostRef let-item=\"context\">\n  <div class=\"bb-stack bb-stack--align-top\">\n    <div class=\"bb-stack__item\">\n      <bb-user-context-icon-ui [isMaster]=\"item?.isMaster\" [name]=\"item?.name\"></bb-user-context-icon-ui>\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-text-bold\" data-role=\"service-agreement-item-name\">{{ item?.name }}</div>\n      <div class=\"bb-subtitle bb-text-support\" data-role=\"service-agreement-item-description\">\n        {{ item?.description }}\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { ServiceAgreement } from '../services/select-context.service';\n\nexport interface ServiceAgreementListCustomizableContext {\n  serviceAgreements: ServiceAgreement[] | null;\n  currentContext: ServiceAgreement | undefined | null;\n  loading: boolean | null;\n  searchValue: string | null;\n  totalCount: number | null;\n  from: number | null;\n}\n\n@Component({\n  selector: 'bb-service-agreement-list',\n  templateUrl: './service-agreement-list.component.html',\n})\nexport class ServiceAgreementListComponent {\n  hostRef = this;\n  @Input() serviceAgreements: ServiceAgreement[] = [];\n  @Input() currentContext: ServiceAgreement | undefined;\n  @Input() loading = false;\n  @Input() searchValue = '';\n  @Input() totalCount = 0;\n  @Input() from = 0;\n\n  @Output() loadMore = new EventEmitter<void>();\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() select = new EventEmitter<ServiceAgreement>();\n\n  onLoadMore() {\n    this.loadMore.emit();\n  }\n\n  onSelect(serviceAgreement: ServiceAgreement) {\n    this.select.emit(serviceAgreement);\n  }\n}\n\n@Directive({\n  selector: '[bbSelectContextServiceAgreementListCustomizable]',\n})\nexport class SelectContextServiceAgreementListCustomizableDirective extends BbTemplate<\n  ServiceAgreementListComponent,\n  ServiceAgreementListCustomizableContext\n> {}\n","<ng-container\n  bbSelectContextServiceAgreementListCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    serviceAgreements: serviceAgreements,\n    currentContext: currentContext,\n    loading: loading,\n    searchValue: searchValue,\n    totalCount: totalCount,\n    from: from\n  }\">\n</ng-container>\n\n<ng-template\n  bbSelectContextServiceAgreementListCustomizable\n  let-hostRef\n  let-serviceAgreements=\"context.serviceAgreements\"\n  let-currentContext=\"context.currentContext\"\n  let-loading=\"context.loading\"\n  let-searchValue=\"context.searchValue\"\n  let-totalCount=\"context.totalCount\"\n  let-from=\"context.from\">\n  <ng-container *ngIf=\"currentContext && !searchValue\">\n    <div\n      data-role=\"current-context-label\"\n      class=\"bb-select-context__subheader\"\n      i18n=\"Current context|Current context label@@select-context.label.currentContext\">\n      Current context\n    </div>\n    <div class=\"list-group list-group-flush\">\n      <div\n        role=\"button\"\n        data-role=\"current-context-data\"\n        tabindex=\"0\"\n        (click)=\"hostRef.onSelect(currentContext)\"\n        (keyup.enter)=\"hostRef.onSelect(currentContext)\"\n        class=\"bb-select-context__current-context list-group-item list-group-item-action\">\n        <bb-service-agreement-item [item]=\"currentContext\"></bb-service-agreement-item>\n      </div>\n    </div>\n\n    <div\n      class=\"bb-select-context__subheader\"\n      data-role=\"switch-context-label\"\n      i18n=\"Switch to context|Switch to context label@@select-context.label.switchToContext\">\n      Switch to context\n    </div>\n  </ng-container>\n\n  <div class=\"bb-select-context__subheader\" *ngIf=\"searchValue && totalCount > 0\">\n    <span i18n=\"Results found|Results found label@@select-context.label.resultsFound\">\n      {totalCount, plural, =1 {1 result found} other {{{totalCount}} results found}}\n    </span>\n  </div>\n\n  <div class=\"list-group list-group-flush\">\n    <div\n      *ngFor=\"let item of serviceAgreements; let first = first; let last = last\"\n      role=\"button\"\n      tabindex=\"0\"\n      [attr.data-role]=\"'service-agreement-list-item-' + item.name\"\n      (click)=\"hostRef.onSelect(item)\"\n      (keyup.enter)=\"hostRef.onSelect(item)\"\n      [class.first]=\"first\"\n      [class.last]=\"last\"\n      class=\"list-group-item list-group-item-action bb-select-context__item\">\n      <bb-service-agreement-item [item]=\"item\"></bb-service-agreement-item>\n    </div>\n  </div>\n\n  <div [class.invisible]=\"!loading\" *ngIf=\"serviceAgreements.length !== totalCount\">\n    <bb-loading-indicator-ui loaderSize=\"sm\"></bb-loading-indicator-ui>\n  </div>\n\n  <div class=\"bb-select-context__items-loaded-label\" *ngIf=\"from > 0 && serviceAgreements.length === totalCount\">\n    <span *ngIf=\"!searchValue\" i18n=\"All items loaded|All items loaded label@@select-context.label.allItemsLoaded\">\n      All items are loaded\n    </span>\n    <span *ngIf=\"searchValue\" i18n=\"All items loaded|All items loaded label@@select-context.label.allResultsLoaded\">\n      All results are loaded\n    </span>\n  </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-select-context-error',\n  templateUrl: './select-context-error.component.html',\n})\nexport class SelectContextErrorComponent {\n  @Input() errorKind: string | undefined;\n}\n","<ng-container *ngIf=\"errorKind\" [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'SelectContextAccessDenied'\"\n    title=\"Permissions required\"\n    i18n-title=\"\n      Permissions required|Error state label when user does not have permissions to select\n      context@@select-context.error.accessDenied.title\"\n    subtitle=\"You don't have permissions to select context.\"\n    i18n-subtitle=\"\n      No Permissions Subtitle|Error state subtitle label when user does not have permissions to select\n      contexts@@select-context.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"\n    iconColor=\"muted\"\n    iconSize=\"xxl\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'SelectContextConnectivityError'\"\n    title=\"Connectivity Error\"\n    i18n-title=\"\n      Connectivity Error title|Empty state label when there is connectivity\n      error@@select-context.error.connectivity.title\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n    i18n-subtitle=\"\n      Connectivity Error subtitle|Empty state subtitle label when there is connectivity\n      error@@select-context.error.connectivity.subtitle\"\n    iconModifier=\"error-outline\"\n    iconColor=\"muted\"\n    iconSize=\"xxl\"></bb-empty-state-ui>\n\n  <!-- SelectContextUnknownError-->\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"Unknown Error\"\n    i18n-title=\"\n      Unknown Error title|Empty state label when there is an unknown error@@select-context.error.unknown.title\"\n    subtitle=\"Try to reload the page or contact the system administrator.\"\n    i18n-subtitle=\"\n      Unknown Error subtitle|Empty state subtitle label when there is an unknown\n      error@@select-context.error.unknown.subtitle\"\n    iconModifier=\"error-outline\"\n    iconColor=\"muted\"\n    iconSize=\"xxl\"></bb-empty-state-ui>\n</ng-container>\n","import {\n  Component,\n  Directive,\n  InjectionToken,\n  Inject,\n  EventEmitter,\n  Output,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AvailableFeature, BbTemplate, DeprecationsService, FeaturesService } from '@backbase/foundation-ang/core';\nimport { Observable, of, BehaviorSubject, Subject } from 'rxjs';\nimport { switchMap, shareReplay, tap, map, take, takeUntil } from 'rxjs/operators';\n\nimport { LogoutService, LOGOUT, PageConfig, PAGE_CONFIG } from '@backbase/foundation-ang/web-sdk';\nimport { SelectContextService, Data, ServiceAgreement, RequestParams } from '../services/select-context.service';\nimport {\n  SelectContextWidgetPropertiesService,\n  WidgetProperties,\n} from '../services/select-context-widget-properties.service';\nimport {\n  SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN,\n  SelectContextUrlProcessorService,\n  RedirectProtocol,\n} from '../services/default-select-context-redirect.service';\n\nexport interface SelectContextContainerCustomizableContext {\n  serviceAgreements: Data | null;\n  loading: boolean | null;\n  error: any | undefined | null;\n  saving: boolean | null;\n  params: RequestParams | null;\n  widgetProperties: WidgetProperties | null;\n  currentContext: ServiceAgreement | undefined | null;\n}\n\nexport const WINDOW = new InjectionToken<string>('Select Context :: WindowToken');\n\nexport const SELECT_CONTEXT_INNER_CONTAINER: AvailableFeature = {\n  name: 'SELECT_CONTEXT_INNER_CONTAINER',\n  description: 'Include a card container in the select context widget template',\n};\n\n@Component({\n  selector: 'bb-select-context-container',\n  templateUrl: './select-context-container.component.html',\n})\nexport class SelectContextContainerComponent implements OnInit, OnDestroy {\n  @Output() back = new EventEmitter<void>();\n  @Output() loadingChanged = new EventEmitter<boolean>();\n  private readonly destroy$ = new Subject<void>();\n  hostRef = this;\n  serviceAgreements: Observable<Data> = this.service.serviceAgreements.pipe(\n    tap((data: Data) => this.selectFirstIfOnlyOne(data)),\n  );\n  loading: Observable<boolean> = this.service.loading;\n  error: Observable<any | undefined> = this.service.error;\n  params: Observable<RequestParams> = this.service.params;\n  widgetProperties: Observable<WidgetProperties> = this.widgetPropertiesService.properties;\n  currentContext: Observable<ServiceAgreement | undefined> = this.widgetProperties.pipe(\n    switchMap(({ includeCurrentContext }: WidgetProperties) => {\n      if (includeCurrentContext) {\n        return this.service.currentContext;\n      }\n      return of(undefined);\n    }),\n    shareReplay(1),\n  );\n\n  searchValue = '';\n  saving = new BehaviorSubject(false);\n  savingError = false;\n\n  constructor(\n    private readonly service: SelectContextService,\n    private readonly widgetPropertiesService: SelectContextWidgetPropertiesService,\n    private readonly router: Router,\n    @Inject(WINDOW) private readonly localWindow: any,\n    @Inject(SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN)\n    private readonly redirectUrlService: SelectContextUrlProcessorService,\n    @Optional() @Inject(PAGE_CONFIG) readonly pageConfig: PageConfig,\n    @Inject(LOGOUT) private readonly logoutService: LogoutService,\n    private readonly featuresService: FeaturesService,\n    private readonly deprecationsService: DeprecationsService,\n  ) {\n    this.loading.pipe(takeUntil(this.destroy$)).subscribe((event: boolean) => {\n      this.loadingChanged.emit(event);\n    });\n  }\n\n  get hasContainer() {\n    return this.featuresService.isEnabled(SELECT_CONTEXT_INNER_CONTAINER);\n  }\n\n  search(text: string) {\n    this.searchValue = text;\n    this.service.search(text);\n  }\n\n  loadMore() {\n    this.service.loadMore();\n  }\n\n  select(serviceAgreement: ServiceAgreement) {\n    this.savingError = false;\n    this.saving.next(true);\n    this.loadingChanged.emit(true);\n    this.service\n      .select(serviceAgreement)\n      .pipe(\n        switchMap(() => this.widgetProperties),\n        map(({ selectContextRedirectPage }: WidgetProperties): string => selectContextRedirectPage),\n        take(1),\n      )\n      .subscribe(\n        (selectContextRedirectPage: string) =>\n          this.afterSelectContextSuccess(serviceAgreement, selectContextRedirectPage),\n        () => {\n          /* error */\n          this.savingError = true;\n          this.saving.next(false);\n        },\n      );\n  }\n\n  goBack() {\n    this.logoutService\n      .logout()\n      .catch(() => {})\n      .then(() => {\n        this.back.emit();\n      });\n  }\n\n  private selectFirstIfOnlyOne(result: Data) {\n    if (result.totalCount === 1 && result.params.from === 0 && !result.params.query) {\n      this.select(result.items[0]);\n    }\n  }\n\n  private redirectToUrl(serviceAgreement: ServiceAgreement, url: string, spaMode: RedirectProtocol) {\n    this.redirectUrlService\n      .processUrl(serviceAgreement, url, spaMode)\n      .pipe(\n        tap(processedUrl => {\n          const bbWindow = this.localWindow;\n          const currentUrl = bbWindow.location.pathname;\n          const [newUrl] = processedUrl.replace(bbWindow.location.origin, '').split('#');\n          bbWindow.location.href = processedUrl;\n          if (currentUrl === newUrl) {\n            bbWindow.location.reload(true);\n          }\n        }),\n        take(1),\n      )\n      .subscribe();\n  }\n\n  private afterSelectContextSuccess(serviceAgreement: ServiceAgreement, urlModel = '') {\n    const spaMode = urlModel.substring(0, 4);\n    const urlToNavigate = urlModel.substring(4);\n    const bbWindow = this.localWindow;\n\n    switch (spaMode) {\n      case 'spa:':\n        if (bbWindow.reloadPage) {\n          bbWindow.reloadPage().then(() => {\n            this.redirectUrlService\n              .processUrl(serviceAgreement, urlToNavigate, spaMode)\n              .pipe(\n                tap(url => this.router.navigateByUrl(url)),\n                take(1),\n              )\n              .subscribe();\n          });\n        } else {\n          throw new Error('window.reloadPage() not available. SPA navigation is not supported');\n        }\n        break;\n\n      case 'mpa:':\n        const gatewayRoot = this.pageConfig.linkRoot || '';\n        const portalName = this.pageConfig.portalName || '';\n        const mpaUrl = `${gatewayRoot}${portalName ? '/' + portalName : ''}/${urlToNavigate}`.replace(/\\/{2,}/g, '/');\n        this.redirectToUrl(serviceAgreement, mpaUrl, spaMode);\n        break;\n\n      case 'abs:':\n        const linkRoot = this.pageConfig.linkRoot || '';\n        const absUrl = `${linkRoot}/${urlToNavigate}`.replace(/\\/{2,}/g, '/');\n        this.redirectToUrl(serviceAgreement, absUrl, spaMode);\n        break;\n    }\n  }\n\n  ngOnInit() {\n    if (!this.hasContainer) {\n      this.deprecationsService.logDeprecatedFeature(\n        'Select context widget will include card container in its template in the next major release. Please enable `SELECT_CONTEXT_INNER_CONTAINER` and adjust your page to support this change.',\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbSelectContextContainerCustomizable]',\n})\nexport class SelectContextContainerCustomizableDirective extends BbTemplate<\n  SelectContextContainerComponent,\n  SelectContextContainerCustomizableContext\n> {}\n\n@Directive({\n  selector: '[bbSelectContextContainerLoadingCustomizable]',\n})\nexport class SelectContextContainerLoadingCustomizableDirective extends BbTemplate<\n  SelectContextContainerComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbSelectContextContainerSavingCustomizable]',\n})\nexport class SelectContextContainerSavingCustomizableDirective extends BbTemplate<\n  SelectContextContainerComponent,\n  undefined\n> {}\n","<ng-container\n  bbSelectContextContainerCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    serviceAgreements: serviceAgreements | async,\n    loading: loading | async,\n    error: error | async,\n    params: params | async,\n    widgetProperties: widgetProperties | async,\n    currentContext: currentContext | async,\n    saving: saving | async\n  }\">\n</ng-container>\n\n<ng-template\n  bbSelectContextContainerCustomizable\n  let-hostRef\n  let-serviceAgreements=\"context.serviceAgreements\"\n  let-loading=\"context.loading\"\n  let-error=\"context.error\"\n  let-params=\"context.params\"\n  let-widgetProperties=\"context.widgetProperties\"\n  let-currentContext=\"context.currentContext\"\n  let-saving=\"context.saving\">\n  <div class=\"bb-select-context\">\n    <ng-container *ngIf=\"serviceAgreements; else loadingTemplate\">\n      <ng-container *ngIf=\"!saving; else savingTemplate\">\n        <div class=\"bb-select-context__container\" [ngClass]=\"{ 'card card-body': hostRef.hasContainer }\">\n          <bb-header-ui\n            class=\"bb-block bb-block--md\"\n            headingType=\"h2\"\n            heading=\"Select context\"\n            data-role=\"select-context-header\"\n            i18n-heading=\"Select context|Select context label@@select-context.label.selectContext\"></bb-header-ui>\n\n          <bb-alert-ui\n            *ngIf=\"hostRef.savingError\"\n            title=\"Unknown error\"\n            i18n-title=\"Unknown Error|Unknown Error Label@@select-context.label.error.unknown\"\n            message=\"Try to make action again or contact your system administrator.\"\n            i18n-message=\"Try again|Try again error message@@select-context.label.error.tryAgain\"></bb-alert-ui>\n\n          <ng-container *ngIf=\"hostRef.searchValue || serviceAgreements.totalCount > widgetProperties.showSearchAfter\">\n            <bb-search-box-ui\n              class=\"bb-block bb-block--lg\"\n              searchLabel=\"Search button\"\n              i18n-searchLabel=\"Search button|Search button@@select-context.label.searchLabel\"\n              [showClear]=\"true\"\n              [showSearch]=\"true\"\n              placeholder=\"Search\"\n              i18n-placeholder=\"Search|Search placeholder@@select-context.label.search\"\n              aria-label=\"Search service agreements\"\n              i18n-aria-label=\"Search service agreements|Search service agreements@@select-context.aria-label.search\"\n              data-role=\"Search\"\n              (submit)=\"hostRef.search($event)\"\n              (clear)=\"hostRef.search('')\"></bb-search-box-ui>\n          </ng-container>\n\n          <ng-container *ngIf=\"!error; else errorTemplate\">\n            <ng-container *ngIf=\"!(loading && params.from === 0); else loadingIndicatorTemplate\">\n              <ng-container *ngIf=\"serviceAgreements.items.length > 0; else emptyTemplate\">\n                <bb-infinite-scroll-ui\n                  class=\"bb-infinite-scroll\"\n                  [offset]=\"5\"\n                  [disableScrollEnd]=\"loading || serviceAgreements.items.length === serviceAgreements.totalCount\"\n                  (scrollEnd)=\"loadMore()\">\n                  <bb-service-agreement-list\n                    [serviceAgreements]=\"serviceAgreements.items\"\n                    [loading]=\"loading\"\n                    [currentContext]=\"currentContext\"\n                    [searchValue]=\"hostRef.searchValue\"\n                    [totalCount]=\"serviceAgreements.totalCount\"\n                    [from]=\"params.from\"\n                    (loadMore)=\"hostRef.loadMore()\"\n                    (select)=\"hostRef.select($event)\"></bb-service-agreement-list>\n                </bb-infinite-scroll-ui>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n\n          <ng-container *ngIf=\"widgetProperties.backOutput\">\n            <div class=\"bb-block bb-block--lg\"></div>\n            <div class=\"d-block\">\n              <div class=\"bb-button-bar bb-button-bar--reverse\">\n                <button\n                  bbButton\n                  (click)=\"hostRef.goBack()\"\n                  color=\"secondary\"\n                  class=\"bb-button-bar__button\"\n                  data-role=\"select-context-back-button\">\n                  <span i18n=\"Back button|Button to navigate back@@select-context.label.backButton\"> Back </span>\n                </button>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <ng-template #loadingTemplate>\n    <ng-container bbSelectContextContainerLoadingCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n    <ng-template bbSelectContextContainerLoadingCustomizable let-hostRef>\n      <div class=\"bb-select-context__container\" [ngClass]=\"{ 'card card-body': hostRef.hasContainer }\">\n        <ng-template [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-template>\n      </div>\n    </ng-template>\n  </ng-template>\n\n  <ng-template #loadingIndicatorTemplate>\n    <div class=\"bb-state-container bb-select-context__state\">\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #savingTemplate>\n    <ng-container bbSelectContextContainerSavingCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n    <ng-template bbSelectContextContainerSavingCustomizable let-hostRef>\n      <div class=\"bb-select-context__container\" [ngClass]=\"{ 'card card-body': hostRef.hasContainer }\">\n        <div class=\"bb-state-container bb-select-context__state\">\n          <bb-loading-indicator-ui\n            text=\"Processing the request...\"\n            i18n-text=\"\n              Processing the request|Text to show while saving the selected context@@select-context.label.processing\"></bb-loading-indicator-ui>\n        </div>\n      </div>\n    </ng-template>\n  </ng-template>\n\n  <ng-template #errorTemplate>\n    <div class=\"bb-state-container bb-select-context__state\">\n      <bb-select-context-error [errorKind]=\"error?.kind\"></bb-select-context-error>\n    </div>\n  </ng-template>\n\n  <ng-template #emptyTemplate>\n    <div class=\"bb-state-container bb-select-context__state\">\n      <bb-empty-state-ui\n        *ngIf=\"hostRef.searchValue\"\n        title=\"No Results Found\"\n        i18n-title=\"\n          Search empty state title|Empty state label when there is no search results@@select-context.search.empty.title\"\n        subtitle=\"We can’t find what you’re looking for. Please try a different criteria.\"\n        i18n-subtitle=\"\n          Search empty state subtitle|Empty state subtitle when there is no search\n          results@@select-context.search.empty.subtitle\"\n        iconModifier=\"search\"\n        iconColor=\"muted\"\n        iconSize=\"xxl\"></bb-empty-state-ui>\n\n      <bb-empty-state-ui\n        *ngIf=\"!hostRef.searchValue\"\n        title=\"Permissions required.\"\n        i18n-title=\"\n          Permissions required|Empty state label when user has no permissions@@select-context.permissions.empty.title\"\n        subtitle=\"Please contact the administrator to activate your account.\"\n        i18n-subtitle=\"\n          Permissions required subtilte|Empty state subtitle when user has no\n          permissions@@select-context.permissions.empty.subtitle\"\n        iconModifier=\"lock\"\n        iconColor=\"muted\"\n        iconSize=\"xxl\"></bb-empty-state-ui>\n    </div>\n  </ng-template>\n</ng-template>\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { SelectContextService } from './select-context-widget/services/select-context.service';\nimport { SelectContextWidgetPropertiesService } from './select-context-widget/services/select-context-widget-properties.service';\nimport { WINDOW } from './select-context-widget/select-context-container/select-context-container.component';\n\nexport function windowFactory() {\n  return window;\n}\n\n@Component({\n  selector: 'bb-select-context-widget',\n  templateUrl: './select-context-widget.component.html',\n  providers: [\n    SelectContextWidgetPropertiesService,\n    SelectContextService,\n    {\n      provide: WINDOW,\n      useFactory: windowFactory,\n    },\n  ],\n})\nexport class SelectContextWidgetComponent {\n  /**\n   * Number of service agreements to load per page\n   */\n  @Input() set pageSize(value: number) {\n    this.selectContextWidgetPropertiesService.setPageSize(value);\n  }\n  /**\n   * Include current context\n   */\n  @Input() set includeCurrentContext(value: boolean) {\n    this.selectContextWidgetPropertiesService.setIncludeCurrentContext(value);\n  }\n  /**\n   * Show search if more than service agreements\n   */\n  @Input() set showSearchAfter(value: number) {\n    this.selectContextWidgetPropertiesService.setShowSearchAfter(value);\n  }\n  /**\n   * Redirect after successful context select\n   */\n  @Input() set selectContextRedirectPage(value: string) {\n    this.selectContextWidgetPropertiesService.setSelectContextRedirectPage(value);\n  }\n  /**\n   * Navigation after clicking back\n   */\n  @Input() set backOutput(value: string) {\n    this.selectContextWidgetPropertiesService.setBackOutput(value);\n  }\n\n  @Output() back = new EventEmitter<void>();\n  @Output() loading = new EventEmitter<boolean>();\n\n  goBack() {\n    this.back.emit();\n  }\n\n  loadingChanged(event: boolean) {\n    this.loading.emit(event);\n  }\n\n  constructor(private readonly selectContextWidgetPropertiesService: SelectContextWidgetPropertiesService) {}\n}\n","<bb-select-context-container (back)=\"goBack()\" (loadingChanged)=\"loadingChanged($event)\"></bb-select-context-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule, FutureFeaturesModule } from '@backbase/foundation-ang/core';\n\nimport { AccessgroupUiModule } from '@backbase/accessgroup-ui';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { InfiniteScrollModule } from '@backbase/ui-ang/infinite-scroll';\nimport {\n  DefaultSelectContextRedirectService,\n  SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN,\n} from './select-context-widget/services/default-select-context-redirect.service';\nimport {\n  SelectContextContainerComponent,\n  SelectContextContainerCustomizableDirective,\n  SelectContextContainerLoadingCustomizableDirective,\n  SelectContextContainerSavingCustomizableDirective,\n  SELECT_CONTEXT_INNER_CONTAINER,\n} from './select-context-widget/select-context-container/select-context-container.component';\nimport {\n  SelectContextServiceAgreementListCustomizableDirective,\n  ServiceAgreementListComponent,\n} from './select-context-widget/service-agreement-list/service-agreement-list.component';\nimport { SelectContextErrorComponent } from './select-context-widget/select-context-error/select-context-error.component';\nimport {\n  SelectContextServiceAgreementItemCustomizableDirective,\n  ServiceAgreementItemComponent,\n} from './select-context-widget/service-agreement-item/service-agreement-item.component';\nimport { SelectContextWidgetComponent } from './select-context-widget.component';\n\nconst components = [\n  SelectContextWidgetComponent,\n  ServiceAgreementItemComponent,\n  SelectContextErrorComponent,\n  ServiceAgreementListComponent,\n  SelectContextContainerComponent,\n];\n\nconst directives = [\n  SelectContextServiceAgreementListCustomizableDirective,\n  SelectContextServiceAgreementItemCustomizableDirective,\n  SelectContextContainerCustomizableDirective,\n  SelectContextContainerLoadingCustomizableDirective,\n  SelectContextContainerSavingCustomizableDirective,\n];\n\nconst uiModules = [\n  EmptyStateModule,\n  HeaderModule,\n  IconModule,\n  LoadingIndicatorModule,\n  SearchBoxModule,\n  AlertModule,\n  ButtonModule,\n  InfiniteScrollModule,\n  AccessgroupUiModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { SelectContextWidgetComponent },\n    }),\n    FutureFeaturesModule.allowOptIn([SELECT_CONTEXT_INNER_CONTAINER]),\n    ...uiModules,\n  ],\n  providers: [\n    {\n      provide: SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN,\n      useClass: DefaultSelectContextRedirectService,\n    },\n  ],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules],\n})\nexport class SelectContextWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["commonParseError","i1","i2.SelectContextWidgetPropertiesService","i1.ServiceAgreementItemComponent","i3","i2","i9.ServiceAgreementListComponent","i10","i11.SelectContextErrorComponent","i12","i13","i1.SelectContextWidgetPropertiesService","i2.SelectContextContainerComponent"],"mappings":"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"}