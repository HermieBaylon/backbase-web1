(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@backbase/foundation-ang/core'), require('@backbase/accessgroup-ui'), require('@backbase/ui-ang/empty-state'), require('@backbase/ui-ang/header'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/search-box'), require('@backbase/ui-ang/alert'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/infinite-scroll'), require('rxjs'), require('rxjs/operators'), require('@backbase/foundation-ang/web-sdk'), require('@backbase/accessgroup-common-ang'), require('@backbase/data-ang/accesscontrol'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('@backbase/select-context-widget-ang', ['exports', '@angular/core', '@angular/common', '@backbase/foundation-ang/core', '@backbase/accessgroup-ui', '@backbase/ui-ang/empty-state', '@backbase/ui-ang/header', '@backbase/ui-ang/icon', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/search-box', '@backbase/ui-ang/alert', '@backbase/ui-ang/button', '@backbase/ui-ang/infinite-scroll', 'rxjs', 'rxjs/operators', '@backbase/foundation-ang/web-sdk', '@backbase/accessgroup-common-ang', '@backbase/data-ang/accesscontrol', '@angular/router'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["select-context-widget-ang"] = {}), global.ng.core, global.ng.common, global.i4, global.i1$1, global.i1$2, global.i5, global.icon, global.i2, global.i7, global.i6, global.i14, global.i8, global.rxjs, global.rxjs.operators, global.webSdk, global.accessgroupCommonAng, global.i1, global.ng.router));
})(this, (function (exports, i0, i2$1, i4, i1$1, i1$2, i5, icon, i2, i7, i6, i14, i8, rxjs, operators, webSdk, accessgroupCommonAng, i1, i3) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i14__namespace = /*#__PURE__*/_interopNamespace(i14);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN = new i0.InjectionToken('Select Context :: SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN');
    var DefaultSelectContextRedirectService = /** @class */ (function () {
        function DefaultSelectContextRedirectService() {
        }
        /* eslint-disable @typescript-eslint/no-unused-vars */
        //@ts-ignore
        DefaultSelectContextRedirectService.prototype.processUrl = function (serviceAgreement, urlToNavigate, spaMode) {
            return rxjs.of(urlToNavigate);
        };
        return DefaultSelectContextRedirectService;
    }());
    /** @nocollapse */ DefaultSelectContextRedirectService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DefaultSelectContextRedirectService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ DefaultSelectContextRedirectService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DefaultSelectContextRedirectService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: DefaultSelectContextRedirectService, decorators: [{
                type: i0.Injectable
            }] });

    var parseError = function (error) { return accessgroupCommonAng.parseError('SelectContext', error); };

    var WidgetProperty = {
        PAGE_SIZE: 'pageSize',
        INCLUDE_CURRENT_CONTEXT: 'includeCurrentContext',
        SHOW_SEARCH_AFTER: 'showSearchAfter',
        REDIRECT_PAGE: 'selectContextRedirectPage',
        BACK_OUTPUT: 'output.back',
    };
    var SelectContextWidgetPropertiesService = /** @class */ (function () {
        function SelectContextWidgetPropertiesService(itemModel) {
            var _a, _b, _c, _d, _e;
            this.itemModel = itemModel;
            this.pageSizeSubject$ = new rxjs.BehaviorSubject(undefined);
            this.includeCurrentContextSubject$ = new rxjs.BehaviorSubject(undefined);
            this.showSearchAfterSubject$ = new rxjs.BehaviorSubject(undefined);
            this.selectContextRedirectPageSubject$ = new rxjs.BehaviorSubject(undefined);
            this.backOutputSubject$ = new rxjs.BehaviorSubject(undefined);
            this.pageSize = ((_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property(WidgetProperty.PAGE_SIZE, '7').pipe(operators.map(function (propertyValue) { return parseInt(propertyValue, 10); }))) || rxjs.of(7);
            this.includeCurrentContext = ((_b = this.itemModel) === null || _b === void 0 ? void 0 : _b.property(WidgetProperty.INCLUDE_CURRENT_CONTEXT, 'false').pipe(operators.map(function (propertyValue) { return "" + propertyValue === 'true'; }))) || rxjs.of(false);
            this.showSearchAfter = ((_c = this.itemModel) === null || _c === void 0 ? void 0 : _c.property(WidgetProperty.SHOW_SEARCH_AFTER, '7').pipe(operators.map(function (propertyValue) { return parseInt(propertyValue, 10); }))) || rxjs.of(7);
            this.selectContextRedirectPage = ((_d = this.itemModel) === null || _d === void 0 ? void 0 : _d.property(WidgetProperty.REDIRECT_PAGE, '')) || rxjs.of('');
            this.backOutput = ((_e = this.itemModel) === null || _e === void 0 ? void 0 : _e.property(WidgetProperty.BACK_OUTPUT, '')) || rxjs.of('');
            this.pageSize$ = this.getProperty(this.pageSizeSubject$, this.pageSize).pipe(operators.map(Number));
            this.includeCurrentContext$ = this.getProperty(this.includeCurrentContextSubject$, this.includeCurrentContext).pipe(operators.map(this.toBoolean));
            this.showSearchAfter$ = this.getProperty(this.showSearchAfterSubject$, this.showSearchAfter).pipe(operators.map(Number));
            this.selectContextRedirectPage$ = this.getProperty(this.selectContextRedirectPageSubject$, this.selectContextRedirectPage);
            this.backOutput$ = this.getProperty(this.backOutputSubject$, this.backOutput);
            this.properties = rxjs.combineLatest([
                this.pageSize$,
                this.includeCurrentContext$,
                this.showSearchAfter$,
                this.selectContextRedirectPage$,
                this.backOutput$,
            ]).pipe(operators.map(function (_f) {
                var _g = __read(_f, 5), pageSize = _g[0], includeCurrentContext = _g[1], showSearchAfter = _g[2], selectContextRedirectPage = _g[3], backOutput = _g[4];
                return ({
                    pageSize: pageSize,
                    includeCurrentContext: includeCurrentContext,
                    showSearchAfter: showSearchAfter,
                    selectContextRedirectPage: selectContextRedirectPage,
                    backOutput: backOutput,
                });
            }));
        }
        SelectContextWidgetPropertiesService.prototype.getProperty = function (input$, itemModel) {
            return rxjs.combineLatest([input$, itemModel]).pipe(operators.map(function (_f) {
                var _g = __read(_f, 2), value = _g[0], valueIM = _g[1];
                return (value === undefined ? valueIM : value);
            }));
        };
        SelectContextWidgetPropertiesService.prototype.toBoolean = function (value) {
            return value === 'true' || value === true;
        };
        SelectContextWidgetPropertiesService.prototype.setPageSize = function (value) {
            this.pageSizeSubject$.next(value);
        };
        SelectContextWidgetPropertiesService.prototype.setIncludeCurrentContext = function (value) {
            this.includeCurrentContextSubject$.next(value);
        };
        SelectContextWidgetPropertiesService.prototype.setShowSearchAfter = function (value) {
            this.showSearchAfterSubject$.next(value);
        };
        SelectContextWidgetPropertiesService.prototype.setSelectContextRedirectPage = function (value) {
            this.selectContextRedirectPageSubject$.next(value);
        };
        SelectContextWidgetPropertiesService.prototype.setBackOutput = function (value) {
            this.backOutputSubject$.next(value);
        };
        return SelectContextWidgetPropertiesService;
    }());
    /** @nocollapse */ SelectContextWidgetPropertiesService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetPropertiesService, deps: [{ token: i4__namespace.ItemModel, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ SelectContextWidgetPropertiesService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetPropertiesService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetPropertiesService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i4__namespace.ItemModel, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    var initialParams = {
        from: 0,
        size: 7,
    };
    var SelectContextService = /** @class */ (function () {
        function SelectContextService(userContextService, serviceAgreementService, widgetPropertiesService) {
            var _this = this;
            this.userContextService = userContextService;
            this.serviceAgreementService = serviceAgreementService;
            this.widgetPropertiesService = widgetPropertiesService;
            this.params = new rxjs.BehaviorSubject(initialParams);
            this.loading = new rxjs.BehaviorSubject(true);
            this.error = new rxjs.BehaviorSubject(undefined);
            this.serviceAgreements = rxjs.combineLatest([
                this.params,
                this.widgetPropertiesService.properties,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), params = _b[0], pageSize = _b[1].pageSize;
                return (Object.assign(Object.assign({}, params), { size: pageSize }));
            }), operators.tap(function () { return _this.loading.next(true); }), operators.switchMap(function (params) { return _this.loadServiceAgreements(params); }), operators.scan(function (acc, curr) { return _this.mergeResults(acc, curr); }), operators.catchError(function (error) {
                _this.error.next(error);
                return rxjs.of({ items: [], totalCount: 0, params: _this.params.value });
            }), operators.tap(function () { return _this.loading.next(false); }));
            this.currentContext = this.serviceAgreementService
                .getServiceAgreementContext()
                .pipe(operators.catchError(function () { return rxjs.of(undefined); }));
        }
        SelectContextService.prototype.loadServiceAgreements = function (params) {
            return this.userContextService.getUserContextServiceAgreements(params, 'response').pipe(operators.map(function (response) {
                var items = response.body || [];
                return {
                    items: items,
                    totalCount: parseInt(response.headers.get('x-total-count') || '0', 10) || items.length,
                    params: params,
                };
            }), operators.catchError(function (error) {
                throw parseError(error);
            }));
        };
        SelectContextService.prototype.mergeResults = function (acc, curr) {
            return {
                totalCount: curr.totalCount || curr.items.length,
                items: curr.params.from === 0 ? curr.items : __spreadArray(__spreadArray([], __read(acc.items)), __read(curr.items)),
                params: curr.params,
            };
        };
        SelectContextService.prototype.search = function (query) {
            this.params.next(Object.assign({ from: 0, size: this.params.value.size }, (query ? { query: query } : {})));
        };
        SelectContextService.prototype.loadMore = function () {
            this.params.next(Object.assign(Object.assign({}, this.params.value), { from: (this.params.value.from || 0) + 1 }));
        };
        SelectContextService.prototype.select = function (serviceAgreement) {
            return this.userContextService.postUserContext({
                userContextPOST: {
                    serviceAgreementId: serviceAgreement.id,
                },
            });
        };
        return SelectContextService;
    }());
    /** @nocollapse */ SelectContextService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextService, deps: [{ token: i1__namespace.UserContextHttpService }, { token: i1__namespace.ServiceAgreementHttpService }, { token: SelectContextWidgetPropertiesService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    /** @nocollapse */ SelectContextService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.UserContextHttpService }, { type: i1__namespace.ServiceAgreementHttpService }, { type: SelectContextWidgetPropertiesService }]; } });

    var ServiceAgreementItemComponent = /** @class */ (function () {
        function ServiceAgreementItemComponent() {
            this.hostRef = this;
        }
        return ServiceAgreementItemComponent;
    }());
    /** @nocollapse */ ServiceAgreementItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ServiceAgreementItemComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ ServiceAgreementItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ServiceAgreementItemComponent, selector: "bb-service-agreement-item", inputs: { item: "item" }, ngImport: i0__namespace, template: "<ng-container bbSelectContextServiceAgreementItemCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"item\">\n</ng-container>\n\n<ng-template bbSelectContextServiceAgreementItemCustomizable let-hostRef let-item=\"context\">\n  <div class=\"bb-stack bb-stack--align-top\">\n    <div class=\"bb-stack__item\">\n      <bb-user-context-icon-ui [isMaster]=\"item?.isMaster\" [name]=\"item?.name\"></bb-user-context-icon-ui>\n    </div>\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <div class=\"bb-text-bold\" data-role=\"service-agreement-item-name\">{{ item?.name }}</div>\n      <div class=\"bb-subtitle bb-text-support\" data-role=\"service-agreement-item-description\">\n        {{ item?.description }}\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$1.UserContextIconComponent; }), selector: "bb-user-context-icon-ui", inputs: ["isMaster", "name"] }], directives: [{ type: i0__namespace.forwardRef(function () { return SelectContextServiceAgreementItemCustomizableDirective; }), selector: "[bbSelectContextServiceAgreementItemCustomizable]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ServiceAgreementItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-service-agreement-item',
                        templateUrl: './service-agreement-item.component.html',
                    }]
            }], propDecorators: { item: [{
                    type: i0.Input
                }] } });
    var SelectContextServiceAgreementItemCustomizableDirective = /** @class */ (function (_super) {
        __extends(SelectContextServiceAgreementItemCustomizableDirective, _super);
        function SelectContextServiceAgreementItemCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SelectContextServiceAgreementItemCustomizableDirective;
    }(i4.BbTemplate));
    /** @nocollapse */ SelectContextServiceAgreementItemCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextServiceAgreementItemCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ SelectContextServiceAgreementItemCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: SelectContextServiceAgreementItemCustomizableDirective, selector: "[bbSelectContextServiceAgreementItemCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextServiceAgreementItemCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbSelectContextServiceAgreementItemCustomizable]',
                    }]
            }] });

    var ServiceAgreementListComponent = /** @class */ (function () {
        function ServiceAgreementListComponent() {
            this.hostRef = this;
            this.serviceAgreements = [];
            this.loading = false;
            this.searchValue = '';
            this.totalCount = 0;
            this.from = 0;
            this.loadMore = new i0.EventEmitter();
            // eslint-disable-next-line @angular-eslint/no-output-native
            this.select = new i0.EventEmitter();
        }
        ServiceAgreementListComponent.prototype.onLoadMore = function () {
            this.loadMore.emit();
        };
        ServiceAgreementListComponent.prototype.onSelect = function (serviceAgreement) {
            this.select.emit(serviceAgreement);
        };
        return ServiceAgreementListComponent;
    }());
    /** @nocollapse */ ServiceAgreementListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ServiceAgreementListComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ ServiceAgreementListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: ServiceAgreementListComponent, selector: "bb-service-agreement-list", inputs: { serviceAgreements: "serviceAgreements", currentContext: "currentContext", loading: "loading", searchValue: "searchValue", totalCount: "totalCount", from: "from" }, outputs: { loadMore: "loadMore", select: "select" }, ngImport: i0__namespace, template: "<ng-container\n  bbSelectContextServiceAgreementListCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    serviceAgreements: serviceAgreements,\n    currentContext: currentContext,\n    loading: loading,\n    searchValue: searchValue,\n    totalCount: totalCount,\n    from: from\n  }\">\n</ng-container>\n\n<ng-template\n  bbSelectContextServiceAgreementListCustomizable\n  let-hostRef\n  let-serviceAgreements=\"context.serviceAgreements\"\n  let-currentContext=\"context.currentContext\"\n  let-loading=\"context.loading\"\n  let-searchValue=\"context.searchValue\"\n  let-totalCount=\"context.totalCount\"\n  let-from=\"context.from\">\n  <ng-container *ngIf=\"currentContext && !searchValue\">\n    <div\n      data-role=\"current-context-label\"\n      class=\"bb-select-context__subheader\"\n      i18n=\"Current context|Current context label@@select-context.label.currentContext\">\n      Current context\n    </div>\n    <div class=\"list-group list-group-flush\">\n      <div\n        role=\"button\"\n        data-role=\"current-context-data\"\n        tabindex=\"0\"\n        (click)=\"hostRef.onSelect(currentContext)\"\n        (keyup.enter)=\"hostRef.onSelect(currentContext)\"\n        class=\"bb-select-context__current-context list-group-item list-group-item-action\">\n        <bb-service-agreement-item [item]=\"currentContext\"></bb-service-agreement-item>\n      </div>\n    </div>\n\n    <div\n      class=\"bb-select-context__subheader\"\n      data-role=\"switch-context-label\"\n      i18n=\"Switch to context|Switch to context label@@select-context.label.switchToContext\">\n      Switch to context\n    </div>\n  </ng-container>\n\n  <div class=\"bb-select-context__subheader\" *ngIf=\"searchValue && totalCount > 0\">\n    <span i18n=\"Results found|Results found label@@select-context.label.resultsFound\">\n      {totalCount, plural, =1 {1 result found} other {{{totalCount}} results found}}\n    </span>\n  </div>\n\n  <div class=\"list-group list-group-flush\">\n    <div\n      *ngFor=\"let item of serviceAgreements; let first = first; let last = last\"\n      role=\"button\"\n      tabindex=\"0\"\n      [attr.data-role]=\"'service-agreement-list-item-' + item.name\"\n      (click)=\"hostRef.onSelect(item)\"\n      (keyup.enter)=\"hostRef.onSelect(item)\"\n      [class.first]=\"first\"\n      [class.last]=\"last\"\n      class=\"list-group-item list-group-item-action bb-select-context__item\">\n      <bb-service-agreement-item [item]=\"item\"></bb-service-agreement-item>\n    </div>\n  </div>\n\n  <div [class.invisible]=\"!loading\" *ngIf=\"serviceAgreements.length !== totalCount\">\n    <bb-loading-indicator-ui loaderSize=\"sm\"></bb-loading-indicator-ui>\n  </div>\n\n  <div class=\"bb-select-context__items-loaded-label\" *ngIf=\"from > 0 && serviceAgreements.length === totalCount\">\n    <span *ngIf=\"!searchValue\" i18n=\"All items loaded|All items loaded label@@select-context.label.allItemsLoaded\">\n      All items are loaded\n    </span>\n    <span *ngIf=\"searchValue\" i18n=\"All items loaded|All items loaded label@@select-context.label.allResultsLoaded\">\n      All results are loaded\n    </span>\n  </div>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return ServiceAgreementItemComponent; }), selector: "bb-service-agreement-item", inputs: ["item"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i0__namespace.forwardRef(function () { return SelectContextServiceAgreementListCustomizableDirective; }), selector: "[bbSelectContextServiceAgreementListCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: ServiceAgreementListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-service-agreement-list',
                        templateUrl: './service-agreement-list.component.html',
                    }]
            }], propDecorators: { serviceAgreements: [{
                    type: i0.Input
                }], currentContext: [{
                    type: i0.Input
                }], loading: [{
                    type: i0.Input
                }], searchValue: [{
                    type: i0.Input
                }], totalCount: [{
                    type: i0.Input
                }], from: [{
                    type: i0.Input
                }], loadMore: [{
                    type: i0.Output
                }], select: [{
                    type: i0.Output
                }] } });
    var SelectContextServiceAgreementListCustomizableDirective = /** @class */ (function (_super) {
        __extends(SelectContextServiceAgreementListCustomizableDirective, _super);
        function SelectContextServiceAgreementListCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SelectContextServiceAgreementListCustomizableDirective;
    }(i4.BbTemplate));
    /** @nocollapse */ SelectContextServiceAgreementListCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextServiceAgreementListCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ SelectContextServiceAgreementListCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: SelectContextServiceAgreementListCustomizableDirective, selector: "[bbSelectContextServiceAgreementListCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextServiceAgreementListCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbSelectContextServiceAgreementListCustomizable]',
                    }]
            }] });

    var SelectContextErrorComponent = /** @class */ (function () {
        function SelectContextErrorComponent() {
        }
        return SelectContextErrorComponent;
    }());
    /** @nocollapse */ SelectContextErrorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextErrorComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ SelectContextErrorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SelectContextErrorComponent, selector: "bb-select-context-error", inputs: { errorKind: "errorKind" }, ngImport: i0__namespace, template: "<ng-container *ngIf=\"errorKind\" [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'SelectContextAccessDenied'\"\n    title=\"Permissions required\"\n    i18n-title=\"\n      Permissions required|Error state label when user does not have permissions to select\n      context@@select-context.error.accessDenied.title\"\n    subtitle=\"You don't have permissions to select context.\"\n    i18n-subtitle=\"\n      No Permissions Subtitle|Error state subtitle label when user does not have permissions to select\n      contexts@@select-context.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"\n    iconColor=\"muted\"\n    iconSize=\"xxl\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'SelectContextConnectivityError'\"\n    title=\"Connectivity Error\"\n    i18n-title=\"\n      Connectivity Error title|Empty state label when there is connectivity\n      error@@select-context.error.connectivity.title\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n    i18n-subtitle=\"\n      Connectivity Error subtitle|Empty state subtitle label when there is connectivity\n      error@@select-context.error.connectivity.subtitle\"\n    iconModifier=\"error-outline\"\n    iconColor=\"muted\"\n    iconSize=\"xxl\"></bb-empty-state-ui>\n\n  <!-- SelectContextUnknownError-->\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"Unknown Error\"\n    i18n-title=\"\n      Unknown Error title|Empty state label when there is an unknown error@@select-context.error.unknown.title\"\n    subtitle=\"Try to reload the page or contact the system administrator.\"\n    i18n-subtitle=\"\n      Unknown Error subtitle|Empty state subtitle label when there is an unknown\n      error@@select-context.error.unknown.subtitle\"\n    iconModifier=\"error-outline\"\n    iconColor=\"muted\"\n    iconSize=\"xxl\"></bb-empty-state-ui>\n</ng-container>\n", components: [{ type: i1__namespace$2.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2__namespace$1.NgSwitchDefault, selector: "[ngSwitchDefault]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextErrorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-select-context-error',
                        templateUrl: './select-context-error.component.html',
                    }]
            }], propDecorators: { errorKind: [{
                    type: i0.Input
                }] } });

    var WINDOW = new i0.InjectionToken('Select Context :: WindowToken');
    var SELECT_CONTEXT_INNER_CONTAINER = {
        name: 'SELECT_CONTEXT_INNER_CONTAINER',
        description: 'Include a card container in the select context widget template',
    };
    var SelectContextContainerComponent = /** @class */ (function () {
        function SelectContextContainerComponent(service, widgetPropertiesService, router, localWindow, redirectUrlService, pageConfig, logoutService, featuresService, deprecationsService) {
            var _this = this;
            this.service = service;
            this.widgetPropertiesService = widgetPropertiesService;
            this.router = router;
            this.localWindow = localWindow;
            this.redirectUrlService = redirectUrlService;
            this.pageConfig = pageConfig;
            this.logoutService = logoutService;
            this.featuresService = featuresService;
            this.deprecationsService = deprecationsService;
            this.back = new i0.EventEmitter();
            this.loadingChanged = new i0.EventEmitter();
            this.destroy$ = new rxjs.Subject();
            this.hostRef = this;
            this.serviceAgreements = this.service.serviceAgreements.pipe(operators.tap(function (data) { return _this.selectFirstIfOnlyOne(data); }));
            this.loading = this.service.loading;
            this.error = this.service.error;
            this.params = this.service.params;
            this.widgetProperties = this.widgetPropertiesService.properties;
            this.currentContext = this.widgetProperties.pipe(operators.switchMap(function (_a) {
                var includeCurrentContext = _a.includeCurrentContext;
                if (includeCurrentContext) {
                    return _this.service.currentContext;
                }
                return rxjs.of(undefined);
            }), operators.shareReplay(1));
            this.searchValue = '';
            this.saving = new rxjs.BehaviorSubject(false);
            this.savingError = false;
            this.loading.pipe(operators.takeUntil(this.destroy$)).subscribe(function (event) {
                _this.loadingChanged.emit(event);
            });
        }
        Object.defineProperty(SelectContextContainerComponent.prototype, "hasContainer", {
            get: function () {
                return this.featuresService.isEnabled(SELECT_CONTEXT_INNER_CONTAINER);
            },
            enumerable: false,
            configurable: true
        });
        SelectContextContainerComponent.prototype.search = function (text) {
            this.searchValue = text;
            this.service.search(text);
        };
        SelectContextContainerComponent.prototype.loadMore = function () {
            this.service.loadMore();
        };
        SelectContextContainerComponent.prototype.select = function (serviceAgreement) {
            var _this = this;
            this.savingError = false;
            this.saving.next(true);
            this.loadingChanged.emit(true);
            this.service
                .select(serviceAgreement)
                .pipe(operators.switchMap(function () { return _this.widgetProperties; }), operators.map(function (_a) {
                var selectContextRedirectPage = _a.selectContextRedirectPage;
                return selectContextRedirectPage;
            }), operators.take(1))
                .subscribe(function (selectContextRedirectPage) { return _this.afterSelectContextSuccess(serviceAgreement, selectContextRedirectPage); }, function () {
                /* error */
                _this.savingError = true;
                _this.saving.next(false);
            });
        };
        SelectContextContainerComponent.prototype.goBack = function () {
            var _this = this;
            this.logoutService
                .logout()
                .catch(function () { })
                .then(function () {
                _this.back.emit();
            });
        };
        SelectContextContainerComponent.prototype.selectFirstIfOnlyOne = function (result) {
            if (result.totalCount === 1 && result.params.from === 0 && !result.params.query) {
                this.select(result.items[0]);
            }
        };
        SelectContextContainerComponent.prototype.redirectToUrl = function (serviceAgreement, url, spaMode) {
            var _this = this;
            this.redirectUrlService
                .processUrl(serviceAgreement, url, spaMode)
                .pipe(operators.tap(function (processedUrl) {
                var bbWindow = _this.localWindow;
                var currentUrl = bbWindow.location.pathname;
                var _a = __read(processedUrl.replace(bbWindow.location.origin, '').split('#'), 1), newUrl = _a[0];
                bbWindow.location.href = processedUrl;
                if (currentUrl === newUrl) {
                    bbWindow.location.reload(true);
                }
            }), operators.take(1))
                .subscribe();
        };
        SelectContextContainerComponent.prototype.afterSelectContextSuccess = function (serviceAgreement, urlModel) {
            var _this = this;
            if (urlModel === void 0) { urlModel = ''; }
            var spaMode = urlModel.substring(0, 4);
            var urlToNavigate = urlModel.substring(4);
            var bbWindow = this.localWindow;
            switch (spaMode) {
                case 'spa:':
                    if (bbWindow.reloadPage) {
                        bbWindow.reloadPage().then(function () {
                            _this.redirectUrlService
                                .processUrl(serviceAgreement, urlToNavigate, spaMode)
                                .pipe(operators.tap(function (url) { return _this.router.navigateByUrl(url); }), operators.take(1))
                                .subscribe();
                        });
                    }
                    else {
                        throw new Error('window.reloadPage() not available. SPA navigation is not supported');
                    }
                    break;
                case 'mpa:':
                    var gatewayRoot = this.pageConfig.linkRoot || '';
                    var portalName = this.pageConfig.portalName || '';
                    var mpaUrl = ("" + gatewayRoot + (portalName ? '/' + portalName : '') + "/" + urlToNavigate).replace(/\/{2,}/g, '/');
                    this.redirectToUrl(serviceAgreement, mpaUrl, spaMode);
                    break;
                case 'abs:':
                    var linkRoot = this.pageConfig.linkRoot || '';
                    var absUrl = (linkRoot + "/" + urlToNavigate).replace(/\/{2,}/g, '/');
                    this.redirectToUrl(serviceAgreement, absUrl, spaMode);
                    break;
            }
        };
        SelectContextContainerComponent.prototype.ngOnInit = function () {
            if (!this.hasContainer) {
                this.deprecationsService.logDeprecatedFeature('Select context widget will include card container in its template in the next major release. Please enable `SELECT_CONTEXT_INNER_CONTAINER` and adjust your page to support this change.');
            }
        };
        SelectContextContainerComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        return SelectContextContainerComponent;
    }());
    /** @nocollapse */ SelectContextContainerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextContainerComponent, deps: [{ token: SelectContextService }, { token: SelectContextWidgetPropertiesService }, { token: i3__namespace.Router }, { token: WINDOW }, { token: SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN }, { token: webSdk.PAGE_CONFIG, optional: true }, { token: webSdk.LOGOUT }, { token: i4__namespace.FeaturesService }, { token: i4__namespace.DeprecationsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ SelectContextContainerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SelectContextContainerComponent, selector: "bb-select-context-container", outputs: { back: "back", loadingChanged: "loadingChanged" }, ngImport: i0__namespace, template: "<ng-container\n  bbSelectContextContainerCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    serviceAgreements: serviceAgreements | async,\n    loading: loading | async,\n    error: error | async,\n    params: params | async,\n    widgetProperties: widgetProperties | async,\n    currentContext: currentContext | async,\n    saving: saving | async\n  }\">\n</ng-container>\n\n<ng-template\n  bbSelectContextContainerCustomizable\n  let-hostRef\n  let-serviceAgreements=\"context.serviceAgreements\"\n  let-loading=\"context.loading\"\n  let-error=\"context.error\"\n  let-params=\"context.params\"\n  let-widgetProperties=\"context.widgetProperties\"\n  let-currentContext=\"context.currentContext\"\n  let-saving=\"context.saving\">\n  <div class=\"bb-select-context\">\n    <ng-container *ngIf=\"serviceAgreements; else loadingTemplate\">\n      <ng-container *ngIf=\"!saving; else savingTemplate\">\n        <div class=\"bb-select-context__container\" [ngClass]=\"{ 'card card-body': hostRef.hasContainer }\">\n          <bb-header-ui\n            class=\"bb-block bb-block--md\"\n            headingType=\"h2\"\n            heading=\"Select context\"\n            data-role=\"select-context-header\"\n            i18n-heading=\"Select context|Select context label@@select-context.label.selectContext\"></bb-header-ui>\n\n          <bb-alert-ui\n            *ngIf=\"hostRef.savingError\"\n            title=\"Unknown error\"\n            i18n-title=\"Unknown Error|Unknown Error Label@@select-context.label.error.unknown\"\n            message=\"Try to make action again or contact your system administrator.\"\n            i18n-message=\"Try again|Try again error message@@select-context.label.error.tryAgain\"></bb-alert-ui>\n\n          <ng-container *ngIf=\"hostRef.searchValue || serviceAgreements.totalCount > widgetProperties.showSearchAfter\">\n            <bb-search-box-ui\n              class=\"bb-block bb-block--lg\"\n              searchLabel=\"Search button\"\n              i18n-searchLabel=\"Search button|Search button@@select-context.label.searchLabel\"\n              [showClear]=\"true\"\n              [showSearch]=\"true\"\n              placeholder=\"Search\"\n              i18n-placeholder=\"Search|Search placeholder@@select-context.label.search\"\n              aria-label=\"Search service agreements\"\n              i18n-aria-label=\"Search service agreements|Search service agreements@@select-context.aria-label.search\"\n              data-role=\"Search\"\n              (submit)=\"hostRef.search($event)\"\n              (clear)=\"hostRef.search('')\"></bb-search-box-ui>\n          </ng-container>\n\n          <ng-container *ngIf=\"!error; else errorTemplate\">\n            <ng-container *ngIf=\"!(loading && params.from === 0); else loadingIndicatorTemplate\">\n              <ng-container *ngIf=\"serviceAgreements.items.length > 0; else emptyTemplate\">\n                <bb-infinite-scroll-ui\n                  class=\"bb-infinite-scroll\"\n                  [offset]=\"5\"\n                  [disableScrollEnd]=\"loading || serviceAgreements.items.length === serviceAgreements.totalCount\"\n                  (scrollEnd)=\"loadMore()\">\n                  <bb-service-agreement-list\n                    [serviceAgreements]=\"serviceAgreements.items\"\n                    [loading]=\"loading\"\n                    [currentContext]=\"currentContext\"\n                    [searchValue]=\"hostRef.searchValue\"\n                    [totalCount]=\"serviceAgreements.totalCount\"\n                    [from]=\"params.from\"\n                    (loadMore)=\"hostRef.loadMore()\"\n                    (select)=\"hostRef.select($event)\"></bb-service-agreement-list>\n                </bb-infinite-scroll-ui>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n\n          <ng-container *ngIf=\"widgetProperties.backOutput\">\n            <div class=\"bb-block bb-block--lg\"></div>\n            <div class=\"d-block\">\n              <div class=\"bb-button-bar bb-button-bar--reverse\">\n                <button\n                  bbButton\n                  (click)=\"hostRef.goBack()\"\n                  color=\"secondary\"\n                  class=\"bb-button-bar__button\"\n                  data-role=\"select-context-back-button\">\n                  <span i18n=\"Back button|Button to navigate back@@select-context.label.backButton\"> Back </span>\n                </button>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n\n  <ng-template #loadingTemplate>\n    <ng-container bbSelectContextContainerLoadingCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n    <ng-template bbSelectContextContainerLoadingCustomizable let-hostRef>\n      <div class=\"bb-select-context__container\" [ngClass]=\"{ 'card card-body': hostRef.hasContainer }\">\n        <ng-template [ngTemplateOutlet]=\"loadingIndicatorTemplate\"></ng-template>\n      </div>\n    </ng-template>\n  </ng-template>\n\n  <ng-template #loadingIndicatorTemplate>\n    <div class=\"bb-state-container bb-select-context__state\">\n      <bb-loading-indicator-ui></bb-loading-indicator-ui>\n    </div>\n  </ng-template>\n\n  <ng-template #savingTemplate>\n    <ng-container bbSelectContextContainerSavingCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n    <ng-template bbSelectContextContainerSavingCustomizable let-hostRef>\n      <div class=\"bb-select-context__container\" [ngClass]=\"{ 'card card-body': hostRef.hasContainer }\">\n        <div class=\"bb-state-container bb-select-context__state\">\n          <bb-loading-indicator-ui\n            text=\"Processing the request...\"\n            i18n-text=\"\n              Processing the request|Text to show while saving the selected context@@select-context.label.processing\"></bb-loading-indicator-ui>\n        </div>\n      </div>\n    </ng-template>\n  </ng-template>\n\n  <ng-template #errorTemplate>\n    <div class=\"bb-state-container bb-select-context__state\">\n      <bb-select-context-error [errorKind]=\"error?.kind\"></bb-select-context-error>\n    </div>\n  </ng-template>\n\n  <ng-template #emptyTemplate>\n    <div class=\"bb-state-container bb-select-context__state\">\n      <bb-empty-state-ui\n        *ngIf=\"hostRef.searchValue\"\n        title=\"No Results Found\"\n        i18n-title=\"\n          Search empty state title|Empty state label when there is no search results@@select-context.search.empty.title\"\n        subtitle=\"We can\u2019t find what you\u2019re looking for. Please try a different criteria.\"\n        i18n-subtitle=\"\n          Search empty state subtitle|Empty state subtitle when there is no search\n          results@@select-context.search.empty.subtitle\"\n        iconModifier=\"search\"\n        iconColor=\"muted\"\n        iconSize=\"xxl\"></bb-empty-state-ui>\n\n      <bb-empty-state-ui\n        *ngIf=\"!hostRef.searchValue\"\n        title=\"Permissions required.\"\n        i18n-title=\"\n          Permissions required|Empty state label when user has no permissions@@select-context.permissions.empty.title\"\n        subtitle=\"Please contact the administrator to activate your account.\"\n        i18n-subtitle=\"\n          Permissions required subtilte|Empty state subtitle when user has no\n          permissions@@select-context.permissions.empty.subtitle\"\n        iconModifier=\"lock\"\n        iconColor=\"muted\"\n        iconSize=\"xxl\"></bb-empty-state-ui>\n    </div>\n  </ng-template>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i5__namespace.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0__namespace.forwardRef(function () { return i6__namespace.AlertComponent; }), selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i0__namespace.forwardRef(function () { return i7__namespace.SearchBoxComponent; }), selector: "bb-search-box-ui", inputs: ["placeholder", "maxLength", "squareBorder", "typeaheadOptions", "showSearch", "showClear", "searchLabel", "clearLabel", "autocomplete"], outputs: ["submit", "clear", "valueChange"] }, { type: i0__namespace.forwardRef(function () { return i8__namespace.InfiniteScrollComponent; }), selector: "bb-infinite-scroll-ui", inputs: ["offset", "debounce", "disableScrollEnd"], outputs: ["scrollEnd"] }, { type: i0__namespace.forwardRef(function () { return ServiceAgreementListComponent; }), selector: "bb-service-agreement-list", inputs: ["serviceAgreements", "currentContext", "loading", "searchValue", "totalCount", "from"], outputs: ["loadMore", "select"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i0__namespace.forwardRef(function () { return SelectContextErrorComponent; }), selector: "bb-select-context-error", inputs: ["errorKind"] }, { type: i0__namespace.forwardRef(function () { return i1__namespace$2.EmptyStateComponent; }), selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i0__namespace.forwardRef(function () { return SelectContextContainerCustomizableDirective; }), selector: "[bbSelectContextContainerCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0__namespace.forwardRef(function () { return i14__namespace.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0__namespace.forwardRef(function () { return SelectContextContainerLoadingCustomizableDirective; }), selector: "[bbSelectContextContainerLoadingCustomizable]" }, { type: i0__namespace.forwardRef(function () { return i2__namespace$1.NgTemplateOutlet; }), selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i0__namespace.forwardRef(function () { return SelectContextContainerSavingCustomizableDirective; }), selector: "[bbSelectContextContainerSavingCustomizable]" }], pipes: { "async": i0__namespace.forwardRef(function () { return i2__namespace$1.AsyncPipe; }) } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextContainerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-select-context-container',
                        templateUrl: './select-context-container.component.html',
                    }]
            }], ctorParameters: function () {
            return [{ type: SelectContextService }, { type: SelectContextWidgetPropertiesService }, { type: i3__namespace.Router }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [WINDOW]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [webSdk.PAGE_CONFIG]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [webSdk.LOGOUT]
                        }] }, { type: i4__namespace.FeaturesService }, { type: i4__namespace.DeprecationsService }];
        }, propDecorators: { back: [{
                    type: i0.Output
                }], loadingChanged: [{
                    type: i0.Output
                }] } });
    var SelectContextContainerCustomizableDirective = /** @class */ (function (_super) {
        __extends(SelectContextContainerCustomizableDirective, _super);
        function SelectContextContainerCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SelectContextContainerCustomizableDirective;
    }(i4.BbTemplate));
    /** @nocollapse */ SelectContextContainerCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextContainerCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ SelectContextContainerCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: SelectContextContainerCustomizableDirective, selector: "[bbSelectContextContainerCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextContainerCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbSelectContextContainerCustomizable]',
                    }]
            }] });
    var SelectContextContainerLoadingCustomizableDirective = /** @class */ (function (_super) {
        __extends(SelectContextContainerLoadingCustomizableDirective, _super);
        function SelectContextContainerLoadingCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SelectContextContainerLoadingCustomizableDirective;
    }(i4.BbTemplate));
    /** @nocollapse */ SelectContextContainerLoadingCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextContainerLoadingCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ SelectContextContainerLoadingCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: SelectContextContainerLoadingCustomizableDirective, selector: "[bbSelectContextContainerLoadingCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextContainerLoadingCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbSelectContextContainerLoadingCustomizable]',
                    }]
            }] });
    var SelectContextContainerSavingCustomizableDirective = /** @class */ (function (_super) {
        __extends(SelectContextContainerSavingCustomizableDirective, _super);
        function SelectContextContainerSavingCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SelectContextContainerSavingCustomizableDirective;
    }(i4.BbTemplate));
    /** @nocollapse */ SelectContextContainerSavingCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextContainerSavingCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    /** @nocollapse */ SelectContextContainerSavingCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.16", type: SelectContextContainerSavingCustomizableDirective, selector: "[bbSelectContextContainerSavingCustomizable]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextContainerSavingCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbSelectContextContainerSavingCustomizable]',
                    }]
            }] });

    function windowFactory() {
        return window;
    }
    var SelectContextWidgetComponent = /** @class */ (function () {
        function SelectContextWidgetComponent(selectContextWidgetPropertiesService) {
            this.selectContextWidgetPropertiesService = selectContextWidgetPropertiesService;
            this.back = new i0.EventEmitter();
            this.loading = new i0.EventEmitter();
        }
        Object.defineProperty(SelectContextWidgetComponent.prototype, "pageSize", {
            /**
             * Number of service agreements to load per page
             */
            set: function (value) {
                this.selectContextWidgetPropertiesService.setPageSize(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SelectContextWidgetComponent.prototype, "includeCurrentContext", {
            /**
             * Include current context
             */
            set: function (value) {
                this.selectContextWidgetPropertiesService.setIncludeCurrentContext(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SelectContextWidgetComponent.prototype, "showSearchAfter", {
            /**
             * Show search if more than service agreements
             */
            set: function (value) {
                this.selectContextWidgetPropertiesService.setShowSearchAfter(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SelectContextWidgetComponent.prototype, "selectContextRedirectPage", {
            /**
             * Redirect after successful context select
             */
            set: function (value) {
                this.selectContextWidgetPropertiesService.setSelectContextRedirectPage(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(SelectContextWidgetComponent.prototype, "backOutput", {
            /**
             * Navigation after clicking back
             */
            set: function (value) {
                this.selectContextWidgetPropertiesService.setBackOutput(value);
            },
            enumerable: false,
            configurable: true
        });
        SelectContextWidgetComponent.prototype.goBack = function () {
            this.back.emit();
        };
        SelectContextWidgetComponent.prototype.loadingChanged = function (event) {
            this.loading.emit(event);
        };
        return SelectContextWidgetComponent;
    }());
    /** @nocollapse */ SelectContextWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetComponent, deps: [{ token: SelectContextWidgetPropertiesService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    /** @nocollapse */ SelectContextWidgetComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: SelectContextWidgetComponent, selector: "bb-select-context-widget", inputs: { pageSize: "pageSize", includeCurrentContext: "includeCurrentContext", showSearchAfter: "showSearchAfter", selectContextRedirectPage: "selectContextRedirectPage", backOutput: "backOutput" }, outputs: { back: "back", loading: "loading" }, providers: [
            SelectContextWidgetPropertiesService,
            SelectContextService,
            {
                provide: WINDOW,
                useFactory: windowFactory,
            },
        ], ngImport: i0__namespace, template: "<bb-select-context-container (back)=\"goBack()\" (loadingChanged)=\"loadingChanged($event)\"></bb-select-context-container>\n", components: [{ type: SelectContextContainerComponent, selector: "bb-select-context-container", outputs: ["back", "loadingChanged"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-select-context-widget',
                        templateUrl: './select-context-widget.component.html',
                        providers: [
                            SelectContextWidgetPropertiesService,
                            SelectContextService,
                            {
                                provide: WINDOW,
                                useFactory: windowFactory,
                            },
                        ],
                    }]
            }], ctorParameters: function () { return [{ type: SelectContextWidgetPropertiesService }]; }, propDecorators: { pageSize: [{
                    type: i0.Input
                }], includeCurrentContext: [{
                    type: i0.Input
                }], showSearchAfter: [{
                    type: i0.Input
                }], selectContextRedirectPage: [{
                    type: i0.Input
                }], backOutput: [{
                    type: i0.Input
                }], back: [{
                    type: i0.Output
                }], loading: [{
                    type: i0.Output
                }] } });

    var components = [
        SelectContextWidgetComponent,
        ServiceAgreementItemComponent,
        SelectContextErrorComponent,
        ServiceAgreementListComponent,
        SelectContextContainerComponent,
    ];
    var directives = [
        SelectContextServiceAgreementListCustomizableDirective,
        SelectContextServiceAgreementItemCustomizableDirective,
        SelectContextContainerCustomizableDirective,
        SelectContextContainerLoadingCustomizableDirective,
        SelectContextContainerSavingCustomizableDirective,
    ];
    var uiModules = [
        i1$2.EmptyStateModule,
        i5.HeaderModule,
        icon.IconModule,
        i2.LoadingIndicatorModule,
        i7.SearchBoxModule,
        i6.AlertModule,
        i14.ButtonModule,
        i8.InfiniteScrollModule,
        i1$1.AccessgroupUiModule,
    ];
    var SelectContextWidgetModule = /** @class */ (function () {
        function SelectContextWidgetModule() {
        }
        return SelectContextWidgetModule;
    }());
    /** @nocollapse */ SelectContextWidgetModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ SelectContextWidgetModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetModule, declarations: [SelectContextWidgetComponent,
            ServiceAgreementItemComponent,
            SelectContextErrorComponent,
            ServiceAgreementListComponent,
            SelectContextContainerComponent, SelectContextServiceAgreementListCustomizableDirective,
            SelectContextServiceAgreementItemCustomizableDirective,
            SelectContextContainerCustomizableDirective,
            SelectContextContainerLoadingCustomizableDirective,
            SelectContextContainerSavingCustomizableDirective], imports: [i2$1.CommonModule, i4__namespace.BackbaseCoreModule, i4__namespace.FutureFeaturesModule, i1$2.EmptyStateModule,
            i5.HeaderModule,
            icon.IconModule,
            i2.LoadingIndicatorModule,
            i7.SearchBoxModule,
            i6.AlertModule,
            i14.ButtonModule,
            i8.InfiniteScrollModule,
            i1$1.AccessgroupUiModule], exports: [SelectContextWidgetComponent,
            ServiceAgreementItemComponent,
            SelectContextErrorComponent,
            ServiceAgreementListComponent,
            SelectContextContainerComponent, SelectContextServiceAgreementListCustomizableDirective,
            SelectContextServiceAgreementItemCustomizableDirective,
            SelectContextContainerCustomizableDirective,
            SelectContextContainerLoadingCustomizableDirective,
            SelectContextContainerSavingCustomizableDirective, i1$2.EmptyStateModule,
            i5.HeaderModule,
            icon.IconModule,
            i2.LoadingIndicatorModule,
            i7.SearchBoxModule,
            i6.AlertModule,
            i14.ButtonModule,
            i8.InfiniteScrollModule,
            i1$1.AccessgroupUiModule] });
    /** @nocollapse */ SelectContextWidgetModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetModule, providers: [
            {
                provide: SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN,
                useClass: DefaultSelectContextRedirectService,
            },
        ], imports: [__spreadArray([
                i2$1.CommonModule,
                i4.BackbaseCoreModule.withConfig({
                    classMap: { SelectContextWidgetComponent: SelectContextWidgetComponent },
                }),
                i4.FutureFeaturesModule.allowOptIn([SELECT_CONTEXT_INNER_CONTAINER])
            ], __read(uiModules)), i1$2.EmptyStateModule,
            i5.HeaderModule,
            icon.IconModule,
            i2.LoadingIndicatorModule,
            i7.SearchBoxModule,
            i6.AlertModule,
            i14.ButtonModule,
            i8.InfiniteScrollModule,
            i1$1.AccessgroupUiModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0__namespace, type: SelectContextWidgetModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([
                            i2$1.CommonModule,
                            i4.BackbaseCoreModule.withConfig({
                                classMap: { SelectContextWidgetComponent: SelectContextWidgetComponent },
                            }),
                            i4.FutureFeaturesModule.allowOptIn([SELECT_CONTEXT_INNER_CONTAINER])
                        ], __read(uiModules)),
                        providers: [
                            {
                                provide: SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN,
                                useClass: DefaultSelectContextRedirectService,
                            },
                        ],
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(directives)),
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components)), __read(directives)), __read(uiModules)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN = SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN;
    exports.SelectContextWidgetComponent = SelectContextWidgetComponent;
    exports.SelectContextWidgetModule = SelectContextWidgetModule;
    exports["ӨSelectContextContainerComponent"] = SelectContextContainerComponent;
    exports["ӨSelectContextContainerCustomizableDirective"] = SelectContextContainerCustomizableDirective;
    exports["ӨSelectContextContainerLoadingCustomizableDirective"] = SelectContextContainerLoadingCustomizableDirective;
    exports["ӨSelectContextContainerSavingCustomizableDirective"] = SelectContextContainerSavingCustomizableDirective;
    exports["ӨSelectContextErrorComponent"] = SelectContextErrorComponent;
    exports["ӨSelectContextServiceAgreementItemCustomizableDirective"] = SelectContextServiceAgreementItemCustomizableDirective;
    exports["ӨSelectContextServiceAgreementListCustomizableDirective"] = SelectContextServiceAgreementListCustomizableDirective;
    exports["ӨServiceAgreementItemComponent"] = ServiceAgreementItemComponent;
    exports["ӨServiceAgreementListComponent"] = ServiceAgreementListComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-select-context-widget-ang.umd.js.map
