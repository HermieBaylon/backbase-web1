import { InjectionToken, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { AvailableFeature, BbTemplate, DeprecationsService, FeaturesService } from '@backbase/foundation-ang/core';
import { Observable, BehaviorSubject } from 'rxjs';
import { LogoutService, PageConfig } from '@backbase/foundation-ang/web-sdk';
import { SelectContextService, Data, ServiceAgreement, RequestParams } from '../services/select-context.service';
import { SelectContextWidgetPropertiesService, WidgetProperties } from '../services/select-context-widget-properties.service';
import { SelectContextUrlProcessorService } from '../services/default-select-context-redirect.service';
import * as i0 from "@angular/core";
export interface SelectContextContainerCustomizableContext {
    serviceAgreements: Data | null;
    loading: boolean | null;
    error: any | undefined | null;
    saving: boolean | null;
    params: RequestParams | null;
    widgetProperties: WidgetProperties | null;
    currentContext: ServiceAgreement | undefined | null;
}
export declare const WINDOW: InjectionToken<string>;
export declare const SELECT_CONTEXT_INNER_CONTAINER: AvailableFeature;
export declare class SelectContextContainerComponent implements OnInit, OnDestroy {
    private readonly service;
    private readonly widgetPropertiesService;
    private readonly router;
    private readonly localWindow;
    private readonly redirectUrlService;
    readonly pageConfig: PageConfig;
    private readonly logoutService;
    private readonly featuresService;
    private readonly deprecationsService;
    back: EventEmitter<void>;
    loadingChanged: EventEmitter<boolean>;
    private readonly destroy$;
    hostRef: this;
    serviceAgreements: Observable<Data>;
    loading: Observable<boolean>;
    error: Observable<any | undefined>;
    params: Observable<RequestParams>;
    widgetProperties: Observable<WidgetProperties>;
    currentContext: Observable<ServiceAgreement | undefined>;
    searchValue: string;
    saving: BehaviorSubject<boolean>;
    savingError: boolean;
    constructor(service: SelectContextService, widgetPropertiesService: SelectContextWidgetPropertiesService, router: Router, localWindow: any, redirectUrlService: SelectContextUrlProcessorService, pageConfig: PageConfig, logoutService: LogoutService, featuresService: FeaturesService, deprecationsService: DeprecationsService);
    get hasContainer(): boolean;
    search(text: string): void;
    loadMore(): void;
    select(serviceAgreement: ServiceAgreement): void;
    goBack(): void;
    private selectFirstIfOnlyOne;
    private redirectToUrl;
    private afterSelectContextSuccess;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectContextContainerComponent, [null, null, null, null, null, { optional: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SelectContextContainerComponent, "bb-select-context-container", never, {}, { "back": "back"; "loadingChanged": "loadingChanged"; }, never, never>;
}
export declare class SelectContextContainerCustomizableDirective extends BbTemplate<SelectContextContainerComponent, SelectContextContainerCustomizableContext> {
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectContextContainerCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SelectContextContainerCustomizableDirective, "[bbSelectContextContainerCustomizable]", never, {}, {}, never>;
}
export declare class SelectContextContainerLoadingCustomizableDirective extends BbTemplate<SelectContextContainerComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectContextContainerLoadingCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SelectContextContainerLoadingCustomizableDirective, "[bbSelectContextContainerLoadingCustomizable]", never, {}, {}, never>;
}
export declare class SelectContextContainerSavingCustomizableDirective extends BbTemplate<SelectContextContainerComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectContextContainerSavingCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SelectContextContainerSavingCustomizableDirective, "[bbSelectContextContainerSavingCustomizable]", never, {}, {}, never>;
}
