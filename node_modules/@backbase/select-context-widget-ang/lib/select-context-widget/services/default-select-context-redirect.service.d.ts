import { InjectionToken } from '@angular/core';
import { Observable } from 'rxjs';
import { ServiceAgreement } from './select-context.service';
import * as i0 from "@angular/core";
export declare const SELECT_CONTEXT_URL_PROCESSOR_SERVICE_TOKEN: InjectionToken<SelectContextUrlProcessorService>;
export declare type RedirectProtocol = 'mpa:' | 'spa:' | 'abs:';
export interface SelectContextUrlProcessorService {
    processUrl(serviceAgreement: ServiceAgreement, navigateToUrl: string, spaMode: RedirectProtocol): Observable<string>;
}
export declare class DefaultSelectContextRedirectService implements SelectContextUrlProcessorService {
    processUrl(serviceAgreement: ServiceAgreement, urlToNavigate: string, spaMode: RedirectProtocol): Observable<string>;
    static ɵfac: i0.ɵɵFactoryDeclaration<DefaultSelectContextRedirectService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<DefaultSelectContextRedirectService>;
}
