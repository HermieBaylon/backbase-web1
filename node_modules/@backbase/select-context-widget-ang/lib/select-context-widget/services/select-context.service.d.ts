import { UserContextHttpService, ServiceAgreementHttpService, Serviceagreementpartialitem as ServiceAgreement, GetUserContextServiceAgreementsRequestParams as RequestParams } from '@backbase/data-ang/accesscontrol';
import { Observable, BehaviorSubject } from 'rxjs';
import { SelectContextError } from '../select-context-error';
import { SelectContextWidgetPropertiesService } from './select-context-widget-properties.service';
import * as i0 from "@angular/core";
export { Serviceagreementpartialitem as ServiceAgreement, GetUserContextServiceAgreementsRequestParams as RequestParams, } from '@backbase/data-ang/accesscontrol';
export interface Data {
    items: ServiceAgreement[];
    totalCount: number;
    params: RequestParams;
}
export declare class SelectContextService {
    private readonly userContextService;
    private readonly serviceAgreementService;
    private readonly widgetPropertiesService;
    constructor(userContextService: UserContextHttpService, serviceAgreementService: ServiceAgreementHttpService, widgetPropertiesService: SelectContextWidgetPropertiesService);
    readonly params: BehaviorSubject<RequestParams>;
    readonly loading: BehaviorSubject<boolean>;
    readonly error: BehaviorSubject<SelectContextError | undefined>;
    readonly serviceAgreements: Observable<Data>;
    readonly currentContext: Observable<ServiceAgreement | undefined>;
    private loadServiceAgreements;
    private mergeResults;
    search(query: string): void;
    loadMore(): void;
    select(serviceAgreement: ServiceAgreement): Observable<any>;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectContextService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SelectContextService>;
}
