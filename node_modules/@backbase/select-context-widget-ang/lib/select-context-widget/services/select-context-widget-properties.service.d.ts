import { ItemModel } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare const WidgetProperty: {
    PAGE_SIZE: string;
    INCLUDE_CURRENT_CONTEXT: string;
    SHOW_SEARCH_AFTER: string;
    REDIRECT_PAGE: string;
    BACK_OUTPUT: string;
};
export interface WidgetProperties {
    pageSize: number;
    includeCurrentContext: boolean;
    showSearchAfter: number;
    selectContextRedirectPage: string;
    backOutput: string;
}
export declare class SelectContextWidgetPropertiesService {
    private readonly itemModel;
    constructor(itemModel: ItemModel);
    private readonly pageSizeSubject$;
    private readonly includeCurrentContextSubject$;
    private readonly showSearchAfterSubject$;
    private readonly selectContextRedirectPageSubject$;
    private readonly backOutputSubject$;
    private readonly pageSize;
    private readonly includeCurrentContext;
    private readonly showSearchAfter;
    private readonly selectContextRedirectPage;
    private readonly backOutput;
    readonly pageSize$: Observable<number>;
    readonly includeCurrentContext$: Observable<boolean>;
    readonly showSearchAfter$: Observable<number>;
    readonly selectContextRedirectPage$: Observable<string>;
    readonly backOutput$: Observable<string>;
    private getProperty;
    private toBoolean;
    setPageSize(value: number): void;
    setIncludeCurrentContext(value: boolean): void;
    setShowSearchAfter(value: number): void;
    setSelectContextRedirectPage(value: string): void;
    setBackOutput(value: string): void;
    readonly properties: Observable<WidgetProperties>;
    static ɵfac: i0.ɵɵFactoryDeclaration<SelectContextWidgetPropertiesService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SelectContextWidgetPropertiesService>;
}
