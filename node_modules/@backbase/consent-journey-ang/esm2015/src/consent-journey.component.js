import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/common";
export class ConsentJourneyComponent {
    constructor(route) {
        this.route = route;
        const { routeConfig } = this.route.snapshot;
        this.tabs = (routeConfig === null || routeConfig === void 0 ? void 0 : routeConfig.children) ? this.initializeTabs(routeConfig) : [];
    }
    initializeTabs({ children = [] }) {
        return children
            .filter(routeItem => routeItem.path && routeItem.data)
            .map((routeItem, index) => {
            var _a;
            return ({
                title: ((_a = routeItem.data) === null || _a === void 0 ? void 0 : _a.title()) || `Tab${index + 1}`,
                route: routeItem.path || `${index + 1}`,
            });
        });
    }
}
ConsentJourneyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentJourneyComponent, deps: [{ token: i1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });
ConsentJourneyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentJourneyComponent, selector: "bb-consent-journey", ngImport: i0, template: `
    <div class="bb-tab">
      <div class="bb-tab-container__tabs nav nav-tabs">
        <a
          *ngFor="let tab of tabs"
          class="nav-link nav-item"
          role="tab"
          [routerLink]="[tab.route]"
          routerLinkActive="active">
          <span class="bb-stack__item bb-stack__item--spacing-xs">{{ tab?.title }}</span>
        </a>
      </div>
      <div class="bb-tab-container__content tab-content" role="tabpanel">
        <router-outlet></router-outlet>
      </div>
    </div>
  `, isInline: true, directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], exportAs: ["routerLinkActive"] }, { type: i1.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentJourneyComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-consent-journey',
                    template: `
    <div class="bb-tab">
      <div class="bb-tab-container__tabs nav nav-tabs">
        <a
          *ngFor="let tab of tabs"
          class="nav-link nav-item"
          role="tab"
          [routerLink]="[tab.route]"
          routerLinkActive="active">
          <span class="bb-stack__item bb-stack__item--spacing-xs">{{ tab?.title }}</span>
        </a>
      </div>
      <div class="bb-tab-container__content tab-content" role="tabpanel">
        <router-outlet></router-outlet>
      </div>
    </div>
  `,
                }]
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC1qb3VybmV5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvY29uc2VudC1qb3VybmV5L3NyYy9jb25zZW50LWpvdXJuZXkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUF3QjFDLE1BQU0sT0FBTyx1QkFBdUI7SUFHbEMsWUFBNkIsS0FBcUI7UUFBckIsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFDaEQsTUFBTSxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO1FBQzVDLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQSxXQUFXLGFBQVgsV0FBVyx1QkFBWCxXQUFXLENBQUUsUUFBUSxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDNUUsQ0FBQztJQUVPLGNBQWMsQ0FBQyxFQUFFLFFBQVEsR0FBRyxFQUFFLEVBQVM7UUFDN0MsT0FBTyxRQUFRO2FBQ1osTUFBTSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDO2FBQ3JELEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsRUFBRTs7WUFBQyxPQUFBLENBQUM7Z0JBQzFCLEtBQUssRUFBRSxDQUFBLE1BQUEsU0FBUyxDQUFDLElBQUksMENBQUUsS0FBSyxFQUFFLEtBQUksTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFO2dCQUNuRCxLQUFLLEVBQUUsU0FBUyxDQUFDLElBQUksSUFBSSxHQUFHLEtBQUssR0FBRyxDQUFDLEVBQUU7YUFDeEMsQ0FBQyxDQUFBO1NBQUEsQ0FBQyxDQUFDO0lBQ1IsQ0FBQzs7cUhBZlUsdUJBQXVCO3lHQUF2Qix1QkFBdUIsMERBbEJ4Qjs7Ozs7Ozs7Ozs7Ozs7OztHQWdCVDs0RkFFVSx1QkFBdUI7a0JBcEJuQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7OztHQWdCVDtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUsIFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFRhYiB9IGZyb20gJy4vbW9kZWxzL3RhYic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWNvbnNlbnQtam91cm5leScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImJiLXRhYlwiPlxuICAgICAgPGRpdiBjbGFzcz1cImJiLXRhYi1jb250YWluZXJfX3RhYnMgbmF2IG5hdi10YWJzXCI+XG4gICAgICAgIDxhXG4gICAgICAgICAgKm5nRm9yPVwibGV0IHRhYiBvZiB0YWJzXCJcbiAgICAgICAgICBjbGFzcz1cIm5hdi1saW5rIG5hdi1pdGVtXCJcbiAgICAgICAgICByb2xlPVwidGFiXCJcbiAgICAgICAgICBbcm91dGVyTGlua109XCJbdGFiLnJvdXRlXVwiXG4gICAgICAgICAgcm91dGVyTGlua0FjdGl2ZT1cImFjdGl2ZVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYmItc3RhY2tfX2l0ZW0gYmItc3RhY2tfX2l0ZW0tLXNwYWNpbmcteHNcIj57eyB0YWI/LnRpdGxlIH19PC9zcGFuPlxuICAgICAgICA8L2E+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi10YWItY29udGFpbmVyX19jb250ZW50IHRhYi1jb250ZW50XCIgcm9sZT1cInRhYnBhbmVsXCI+XG4gICAgICAgIDxyb3V0ZXItb3V0bGV0Pjwvcm91dGVyLW91dGxldD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBDb25zZW50Sm91cm5leUNvbXBvbmVudCB7XG4gIHB1YmxpYyB0YWJzOiBUYWJbXTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSkge1xuICAgIGNvbnN0IHsgcm91dGVDb25maWcgfSA9IHRoaXMucm91dGUuc25hcHNob3Q7XG4gICAgdGhpcy50YWJzID0gcm91dGVDb25maWc/LmNoaWxkcmVuID8gdGhpcy5pbml0aWFsaXplVGFicyhyb3V0ZUNvbmZpZykgOiBbXTtcbiAgfVxuXG4gIHByaXZhdGUgaW5pdGlhbGl6ZVRhYnMoeyBjaGlsZHJlbiA9IFtdIH06IFJvdXRlKSB7XG4gICAgcmV0dXJuIGNoaWxkcmVuXG4gICAgICAuZmlsdGVyKHJvdXRlSXRlbSA9PiByb3V0ZUl0ZW0ucGF0aCAmJiByb3V0ZUl0ZW0uZGF0YSlcbiAgICAgIC5tYXAoKHJvdXRlSXRlbSwgaW5kZXgpID0+ICh7XG4gICAgICAgIHRpdGxlOiByb3V0ZUl0ZW0uZGF0YT8udGl0bGUoKSB8fCBgVGFiJHtpbmRleCArIDF9YCxcbiAgICAgICAgcm91dGU6IHJvdXRlSXRlbS5wYXRoIHx8IGAke2luZGV4ICsgMX1gLFxuICAgICAgfSkpO1xuICB9XG59XG4iXX0=