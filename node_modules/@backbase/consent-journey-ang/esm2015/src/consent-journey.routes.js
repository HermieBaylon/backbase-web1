import { ConsentJourneyComponent } from './consent-journey.component';
import { PaymentRequestComponent } from './views/payment-request/payment-request.component';
import { PaymentConsentRedirectComponent } from './views/payment-consent-redirect/payment-consent-redirect.component';
import { TppConsentRedirectComponent } from './views/tpp-consent-redirect/tpp-consent-redirect.component';
import { ConsentRequestComponent } from './views/consent-request/consent-request.component';
import { ConsentsComponent } from './views/consents/consents.component';
import { ConsentDetailComponent } from './views/consents/consent-detail/consent-detail.component';
import { ConsentListComponent } from './views/consents/consent-list/consent-list.component';
import '@angular/localize/init';
export const tabs = {
    paymentRequest: () => $localize `:Payment request tab title@@consent-journey.tab.paymentRequest.title:Payment Request`,
    consentRequest: () => $localize `:Consent request tab title@@consent-journey.tab.consentRequest.title:Consent Request`,
    consents: () => $localize `:Consents tab title@@consent-journey.tab.consents.title:Consents`,
};
export const consentRoutes = {
    path: '',
    component: ConsentJourneyComponent,
    children: [
        {
            path: '',
            redirectTo: 'payment-request',
            pathMatch: 'full',
        },
        {
            path: 'payment-request',
            component: PaymentRequestComponent,
            data: { title: tabs.paymentRequest },
        },
        {
            path: 'payment-redirect',
            component: PaymentConsentRedirectComponent,
        },
        {
            path: 'consent-redirect',
            component: TppConsentRedirectComponent,
        },
        {
            path: 'consent-request',
            component: ConsentRequestComponent,
            data: { title: tabs.consentRequest },
        },
        {
            component: ConsentsComponent,
            data: { title: tabs.consents },
            path: 'consents',
            children: [
                {
                    path: '',
                    redirectTo: 'list',
                    pathMatch: 'full',
                },
                {
                    path: 'list',
                    component: ConsentListComponent,
                },
                {
                    path: 'details',
                    component: ConsentDetailComponent,
                },
            ],
        },
    ],
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC1qb3VybmV5LnJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvY29uc2VudC1qb3VybmV5L3NyYy9jb25zZW50LWpvdXJuZXkucm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzVGLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHFFQUFxRSxDQUFDO0FBQ3RILE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBQzFHLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzVGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBEQUEwRCxDQUFDO0FBQ2xHLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQzVGLE9BQU8sd0JBQXdCLENBQUM7QUFFaEMsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHO0lBQ2xCLGNBQWMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUEsc0ZBQXNGO0lBQ3JILGNBQWMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUEsc0ZBQXNGO0lBQ3JILFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUEsa0VBQWtFO0NBQzVGLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQVU7SUFDbEMsSUFBSSxFQUFFLEVBQUU7SUFDUixTQUFTLEVBQUUsdUJBQXVCO0lBQ2xDLFFBQVEsRUFBRTtRQUNSO1lBQ0UsSUFBSSxFQUFFLEVBQUU7WUFDUixVQUFVLEVBQUUsaUJBQWlCO1lBQzdCLFNBQVMsRUFBRSxNQUFNO1NBQ2xCO1FBQ0Q7WUFDRSxJQUFJLEVBQUUsaUJBQWlCO1lBQ3ZCLFNBQVMsRUFBRSx1QkFBdUI7WUFDbEMsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUU7U0FDckM7UUFDRDtZQUNFLElBQUksRUFBRSxrQkFBa0I7WUFDeEIsU0FBUyxFQUFFLCtCQUErQjtTQUMzQztRQUNEO1lBQ0UsSUFBSSxFQUFFLGtCQUFrQjtZQUN4QixTQUFTLEVBQUUsMkJBQTJCO1NBQ3ZDO1FBQ0Q7WUFDRSxJQUFJLEVBQUUsaUJBQWlCO1lBQ3ZCLFNBQVMsRUFBRSx1QkFBdUI7WUFDbEMsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUU7U0FDckM7UUFDRDtZQUNFLFNBQVMsRUFBRSxpQkFBaUI7WUFDNUIsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDOUIsSUFBSSxFQUFFLFVBQVU7WUFDaEIsUUFBUSxFQUFFO2dCQUNSO29CQUNFLElBQUksRUFBRSxFQUFFO29CQUNSLFVBQVUsRUFBRSxNQUFNO29CQUNsQixTQUFTLEVBQUUsTUFBTTtpQkFDbEI7Z0JBQ0Q7b0JBQ0UsSUFBSSxFQUFFLE1BQU07b0JBQ1osU0FBUyxFQUFFLG9CQUFvQjtpQkFDaEM7Z0JBQ0Q7b0JBQ0UsSUFBSSxFQUFFLFNBQVM7b0JBQ2YsU0FBUyxFQUFFLHNCQUFzQjtpQkFDbEM7YUFDRjtTQUNGO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQ29uc2VudEpvdXJuZXlDb21wb25lbnQgfSBmcm9tICcuL2NvbnNlbnQtam91cm5leS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGF5bWVudFJlcXVlc3RDb21wb25lbnQgfSBmcm9tICcuL3ZpZXdzL3BheW1lbnQtcmVxdWVzdC9wYXltZW50LXJlcXVlc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFBheW1lbnRDb25zZW50UmVkaXJlY3RDb21wb25lbnQgfSBmcm9tICcuL3ZpZXdzL3BheW1lbnQtY29uc2VudC1yZWRpcmVjdC9wYXltZW50LWNvbnNlbnQtcmVkaXJlY3QuY29tcG9uZW50JztcbmltcG9ydCB7IFRwcENvbnNlbnRSZWRpcmVjdENvbXBvbmVudCB9IGZyb20gJy4vdmlld3MvdHBwLWNvbnNlbnQtcmVkaXJlY3QvdHBwLWNvbnNlbnQtcmVkaXJlY3QuY29tcG9uZW50JztcbmltcG9ydCB7IENvbnNlbnRSZXF1ZXN0Q29tcG9uZW50IH0gZnJvbSAnLi92aWV3cy9jb25zZW50LXJlcXVlc3QvY29uc2VudC1yZXF1ZXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25zZW50c0NvbXBvbmVudCB9IGZyb20gJy4vdmlld3MvY29uc2VudHMvY29uc2VudHMuY29tcG9uZW50JztcbmltcG9ydCB7IENvbnNlbnREZXRhaWxDb21wb25lbnQgfSBmcm9tICcuL3ZpZXdzL2NvbnNlbnRzL2NvbnNlbnQtZGV0YWlsL2NvbnNlbnQtZGV0YWlsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25zZW50TGlzdENvbXBvbmVudCB9IGZyb20gJy4vdmlld3MvY29uc2VudHMvY29uc2VudC1saXN0L2NvbnNlbnQtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0ICdAYW5ndWxhci9sb2NhbGl6ZS9pbml0JztcblxuZXhwb3J0IGNvbnN0IHRhYnMgPSB7XG4gIHBheW1lbnRSZXF1ZXN0OiAoKSA9PiAkbG9jYWxpemVgOlBheW1lbnQgcmVxdWVzdCB0YWIgdGl0bGVAQGNvbnNlbnQtam91cm5leS50YWIucGF5bWVudFJlcXVlc3QudGl0bGU6UGF5bWVudCBSZXF1ZXN0YCxcbiAgY29uc2VudFJlcXVlc3Q6ICgpID0+ICRsb2NhbGl6ZWA6Q29uc2VudCByZXF1ZXN0IHRhYiB0aXRsZUBAY29uc2VudC1qb3VybmV5LnRhYi5jb25zZW50UmVxdWVzdC50aXRsZTpDb25zZW50IFJlcXVlc3RgLFxuICBjb25zZW50czogKCkgPT4gJGxvY2FsaXplYDpDb25zZW50cyB0YWIgdGl0bGVAQGNvbnNlbnQtam91cm5leS50YWIuY29uc2VudHMudGl0bGU6Q29uc2VudHNgLFxufTtcblxuZXhwb3J0IGNvbnN0IGNvbnNlbnRSb3V0ZXM6IFJvdXRlID0ge1xuICBwYXRoOiAnJyxcbiAgY29tcG9uZW50OiBDb25zZW50Sm91cm5leUNvbXBvbmVudCxcbiAgY2hpbGRyZW46IFtcbiAgICB7XG4gICAgICBwYXRoOiAnJyxcbiAgICAgIHJlZGlyZWN0VG86ICdwYXltZW50LXJlcXVlc3QnLFxuICAgICAgcGF0aE1hdGNoOiAnZnVsbCcsXG4gICAgfSxcbiAgICB7XG4gICAgICBwYXRoOiAncGF5bWVudC1yZXF1ZXN0JyxcbiAgICAgIGNvbXBvbmVudDogUGF5bWVudFJlcXVlc3RDb21wb25lbnQsXG4gICAgICBkYXRhOiB7IHRpdGxlOiB0YWJzLnBheW1lbnRSZXF1ZXN0IH0sXG4gICAgfSxcbiAgICB7XG4gICAgICBwYXRoOiAncGF5bWVudC1yZWRpcmVjdCcsXG4gICAgICBjb21wb25lbnQ6IFBheW1lbnRDb25zZW50UmVkaXJlY3RDb21wb25lbnQsXG4gICAgfSxcbiAgICB7XG4gICAgICBwYXRoOiAnY29uc2VudC1yZWRpcmVjdCcsXG4gICAgICBjb21wb25lbnQ6IFRwcENvbnNlbnRSZWRpcmVjdENvbXBvbmVudCxcbiAgICB9LFxuICAgIHtcbiAgICAgIHBhdGg6ICdjb25zZW50LXJlcXVlc3QnLFxuICAgICAgY29tcG9uZW50OiBDb25zZW50UmVxdWVzdENvbXBvbmVudCxcbiAgICAgIGRhdGE6IHsgdGl0bGU6IHRhYnMuY29uc2VudFJlcXVlc3QgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGNvbXBvbmVudDogQ29uc2VudHNDb21wb25lbnQsXG4gICAgICBkYXRhOiB7IHRpdGxlOiB0YWJzLmNvbnNlbnRzIH0sXG4gICAgICBwYXRoOiAnY29uc2VudHMnLFxuICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICcnLFxuICAgICAgICAgIHJlZGlyZWN0VG86ICdsaXN0JyxcbiAgICAgICAgICBwYXRoTWF0Y2g6ICdmdWxsJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICdsaXN0JyxcbiAgICAgICAgICBjb21wb25lbnQ6IENvbnNlbnRMaXN0Q29tcG9uZW50LFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0aDogJ2RldGFpbHMnLFxuICAgICAgICAgIGNvbXBvbmVudDogQ29uc2VudERldGFpbENvbXBvbmVudCxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgXSxcbn07XG4iXX0=