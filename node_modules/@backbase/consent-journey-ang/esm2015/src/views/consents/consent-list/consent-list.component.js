import { Component } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/consent-journey-config.service";
import * as i2 from "@angular/router";
import * as i3 from "@backbase/consent-list-widget-ang";
export class ConsentListComponent {
    constructor(config, router, activeRoute) {
        this.config = config;
        this.router = router;
        this.activeRoute = activeRoute;
        this.destroy$ = new Subject();
        this.consentId = '';
    }
    handleDetail(event) {
        this.consentId = event;
        this.router.navigate(['../details', { consentId: event }], {
            relativeTo: this.activeRoute,
        });
    }
    ngOnDestroy() {
        this.destroy$.next();
    }
}
ConsentListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentListComponent, deps: [{ token: i1.ConsentJourneyConfigurationService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });
ConsentListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentListComponent, selector: "bb-consent-list-view", ngImport: i0, template: ` <div class="bb-card">
    <div class="bb-card__body">
      <bb-consent-list-widget (consentId)="handleDetail($event)"></bb-consent-list-widget>
    </div>
  </div>`, isInline: true, components: [{ type: i3.ConsentListWidgetComponent, selector: "bb-consent-list-widget", outputs: ["consentId"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-consent-list-view',
                    template: ` <div class="bb-card">
    <div class="bb-card__body">
      <bb-consent-list-widget (consentId)="handleDetail($event)"></bb-consent-list-widget>
    </div>
  </div>`,
                }]
        }], ctorParameters: function () { return [{ type: i1.ConsentJourneyConfigurationService }, { type: i2.Router }, { type: i2.ActivatedRoute }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29uc2VudC1qb3VybmV5L3NyYy92aWV3cy9jb25zZW50cy9jb25zZW50LWxpc3QvY29uc2VudC1saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7O0FBWS9CLE1BQU0sT0FBTyxvQkFBb0I7SUFJL0IsWUFDVyxNQUEwQyxFQUMzQyxNQUFjLEVBQ2QsV0FBMkI7UUFGMUIsV0FBTSxHQUFOLE1BQU0sQ0FBb0M7UUFDM0MsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGdCQUFXLEdBQVgsV0FBVyxDQUFnQjtRQU5wQixhQUFRLEdBQUcsSUFBSSxPQUFPLEVBQVEsQ0FBQztRQUNoRCxjQUFTLEdBQUcsRUFBRSxDQUFDO0lBTVosQ0FBQztJQUVKLFlBQVksQ0FBQyxLQUFhO1FBQ3hCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUU7WUFDekQsVUFBVSxFQUFFLElBQUksQ0FBQyxXQUFXO1NBQzdCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN2QixDQUFDOztrSEFuQlUsb0JBQW9CO3NHQUFwQixvQkFBb0IsNERBTnJCOzs7O1NBSUg7NEZBRUksb0JBQW9CO2tCQVJoQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFFBQVEsRUFBRTs7OztTQUlIO2lCQUNSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlLCBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQ29uc2VudEpvdXJuZXlDb25maWd1cmF0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL2NvbnNlbnQtam91cm5leS1jb25maWcuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWNvbnNlbnQtbGlzdC12aWV3JyxcbiAgdGVtcGxhdGU6IGAgPGRpdiBjbGFzcz1cImJiLWNhcmRcIj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItY2FyZF9fYm9keVwiPlxuICAgICAgPGJiLWNvbnNlbnQtbGlzdC13aWRnZXQgKGNvbnNlbnRJZCk9XCJoYW5kbGVEZXRhaWwoJGV2ZW50KVwiPjwvYmItY29uc2VudC1saXN0LXdpZGdldD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+YCxcbn0pXG5leHBvcnQgY2xhc3MgQ29uc2VudExpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBwcml2YXRlIHJlYWRvbmx5IGRlc3Ryb3kkID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcbiAgY29uc2VudElkID0gJyc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcmVhZG9ubHkgY29uZmlnOiBDb25zZW50Sm91cm5leUNvbmZpZ3VyYXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXIsXG4gICAgcHJpdmF0ZSBhY3RpdmVSb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICkge31cblxuICBoYW5kbGVEZXRhaWwoZXZlbnQ6IHN0cmluZykge1xuICAgIHRoaXMuY29uc2VudElkID0gZXZlbnQ7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoWycuLi9kZXRhaWxzJywgeyBjb25zZW50SWQ6IGV2ZW50IH1dLCB7XG4gICAgICByZWxhdGl2ZVRvOiB0aGlzLmFjdGl2ZVJvdXRlLFxuICAgIH0pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5kZXN0cm95JC5uZXh0KCk7XG4gIH1cbn1cbiJdfQ==