import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { provideRoutes, RouterModule } from '@angular/router';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { EntitlementsModule } from '@backbase/foundation-ang/entitlements';
import { PaymentRequestWidgetModule } from '@backbase/payment-request-widget-ang';
import { ConsentRequestWidgetModule } from '@backbase/consent-request-widget-ang';
import { ConsentListWidgetModule } from '@backbase/consent-list-widget-ang';
import { ConsentDetailsWidgetModule } from '@backbase/consent-details-widget-ang';
import { ButtonModule } from '@backbase/ui-ang/button';
import { ConsentJourneyComponent } from './consent-journey.component';
import { consentRoutes } from './consent-journey.routes';
import { ConsentJourneyConfigurationService } from './services/consent-journey-config.service';
import { PaymentRequestComponent } from './views/payment-request/payment-request.component';
import { PaymentConsentRedirectComponent } from './views/payment-consent-redirect/payment-consent-redirect.component';
import { TppConsentRedirectComponent } from './views/tpp-consent-redirect/tpp-consent-redirect.component';
import { ConsentRequestComponent } from './views/consent-request/consent-request.component';
import { ConsentsComponent } from './views/consents/consents.component';
import { ConsentDetailComponent } from './views/consents/consent-detail/consent-detail.component';
import { ConsentListComponent } from './views/consents/consent-list/consent-list.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@backbase/foundation-ang/core";
const viewComponents = [
    ConsentJourneyComponent,
    PaymentRequestComponent,
    PaymentConsentRedirectComponent,
    TppConsentRedirectComponent,
    ConsentRequestComponent,
    ConsentsComponent,
    ConsentDetailComponent,
    ConsentListComponent,
];
const uiModules = [
    EntitlementsModule,
    PaymentRequestWidgetModule,
    ConsentRequestWidgetModule,
    ConsentListWidgetModule,
    ConsentDetailsWidgetModule,
];
export class ConsentJourneyModule {
    static forRoot(data = { route: consentRoutes }) {
        return {
            ngModule: ConsentJourneyModule,
            providers: [provideRoutes([data.route])],
        };
    }
}
ConsentJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ConsentJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentJourneyModule, declarations: [ConsentJourneyComponent,
        PaymentRequestComponent,
        PaymentConsentRedirectComponent,
        TppConsentRedirectComponent,
        ConsentRequestComponent,
        ConsentsComponent,
        ConsentDetailComponent,
        ConsentListComponent], imports: [CommonModule, i1.RouterModule, i2.BackbaseCoreModule, EntitlementsModule,
        PaymentRequestWidgetModule,
        ConsentRequestWidgetModule,
        ConsentListWidgetModule,
        ConsentDetailsWidgetModule, ButtonModule], exports: [ConsentJourneyComponent,
        PaymentRequestComponent,
        PaymentConsentRedirectComponent,
        TppConsentRedirectComponent,
        ConsentRequestComponent,
        ConsentsComponent,
        ConsentDetailComponent,
        ConsentListComponent, EntitlementsModule,
        PaymentRequestWidgetModule,
        ConsentRequestWidgetModule,
        ConsentListWidgetModule,
        ConsentDetailsWidgetModule] });
ConsentJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentJourneyModule, providers: [ConsentJourneyConfigurationService], imports: [[
            CommonModule,
            RouterModule.forChild([consentRoutes]),
            BackbaseCoreModule.withConfig({
                classMap: { ConsentJourneyComponent: ConsentJourneyComponent },
            }),
            ...uiModules,
            ButtonModule,
        ], EntitlementsModule,
        PaymentRequestWidgetModule,
        ConsentRequestWidgetModule,
        ConsentListWidgetModule,
        ConsentDetailsWidgetModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: viewComponents,
                    imports: [
                        CommonModule,
                        RouterModule.forChild([consentRoutes]),
                        BackbaseCoreModule.withConfig({
                            classMap: { ConsentJourneyComponent: ConsentJourneyComponent },
                        }),
                        ...uiModules,
                        ButtonModule,
                    ],
                    providers: [ConsentJourneyConfigurationService],
                    exports: [...viewComponents, ...uiModules],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC1qb3VybmV5Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvY29uc2VudC1qb3VybmV5L3NyYy9jb25zZW50LWpvdXJuZXkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsYUFBYSxFQUFTLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQzNFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFFL0YsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDNUYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0scUVBQXFFLENBQUM7QUFDdEgsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sNkRBQTZELENBQUM7QUFDMUcsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbURBQW1ELENBQUM7QUFDNUYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDeEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDbEcsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0RBQXNELENBQUM7Ozs7QUFFNUYsTUFBTSxjQUFjLEdBQUc7SUFDckIsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2QiwrQkFBK0I7SUFDL0IsMkJBQTJCO0lBQzNCLHVCQUF1QjtJQUN2QixpQkFBaUI7SUFDakIsc0JBQXNCO0lBQ3RCLG9CQUFvQjtDQUNyQixDQUFDO0FBQ0YsTUFBTSxTQUFTLEdBQUc7SUFDaEIsa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsdUJBQXVCO0lBQ3ZCLDBCQUEwQjtDQUMzQixDQUFDO0FBZUYsTUFBTSxPQUFPLG9CQUFvQjtJQUMvQixNQUFNLENBQUMsT0FBTyxDQUNaLE9BQTZDLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRTtRQUVyRSxPQUFPO1lBQ0wsUUFBUSxFQUFFLG9CQUFvQjtZQUM5QixTQUFTLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztTQUN6QyxDQUFDO0lBQ0osQ0FBQzs7a0hBUlUsb0JBQW9CO21IQUFwQixvQkFBb0IsaUJBOUIvQix1QkFBdUI7UUFDdkIsdUJBQXVCO1FBQ3ZCLCtCQUErQjtRQUMvQiwyQkFBMkI7UUFDM0IsdUJBQXVCO1FBQ3ZCLGlCQUFpQjtRQUNqQixzQkFBc0I7UUFDdEIsb0JBQW9CLGFBWWxCLFlBQVksMENBVGQsa0JBQWtCO1FBQ2xCLDBCQUEwQjtRQUMxQiwwQkFBMEI7UUFDMUIsdUJBQXVCO1FBQ3ZCLDBCQUEwQixFQVd4QixZQUFZLGFBekJkLHVCQUF1QjtRQUN2Qix1QkFBdUI7UUFDdkIsK0JBQStCO1FBQy9CLDJCQUEyQjtRQUMzQix1QkFBdUI7UUFDdkIsaUJBQWlCO1FBQ2pCLHNCQUFzQjtRQUN0QixvQkFBb0IsRUFHcEIsa0JBQWtCO1FBQ2xCLDBCQUEwQjtRQUMxQiwwQkFBMEI7UUFDMUIsdUJBQXVCO1FBQ3ZCLDBCQUEwQjttSEFnQmYsb0JBQW9CLGFBSHBCLENBQUMsa0NBQWtDLENBQUMsWUFUdEM7WUFDUCxZQUFZO1lBQ1osWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3RDLGtCQUFrQixDQUFDLFVBQVUsQ0FBQztnQkFDNUIsUUFBUSxFQUFFLEVBQUUsdUJBQXVCLEVBQUUsdUJBQXVCLEVBQUU7YUFDL0QsQ0FBQztZQUNGLEdBQUcsU0FBUztZQUNaLFlBQVk7U0FDYixFQWhCRCxrQkFBa0I7UUFDbEIsMEJBQTBCO1FBQzFCLDBCQUEwQjtRQUMxQix1QkFBdUI7UUFDdkIsMEJBQTBCOzRGQWdCZixvQkFBb0I7a0JBZGhDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLGNBQWM7b0JBQzVCLE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQzt3QkFDdEMsa0JBQWtCLENBQUMsVUFBVSxDQUFDOzRCQUM1QixRQUFRLEVBQUUsRUFBRSx1QkFBdUIsRUFBRSx1QkFBdUIsRUFBRTt5QkFDL0QsQ0FBQzt3QkFDRixHQUFHLFNBQVM7d0JBQ1osWUFBWTtxQkFDYjtvQkFDRCxTQUFTLEVBQUUsQ0FBQyxrQ0FBa0MsQ0FBQztvQkFDL0MsT0FBTyxFQUFFLENBQUMsR0FBRyxjQUFjLEVBQUUsR0FBRyxTQUFTLENBQUM7aUJBQzNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBwcm92aWRlUm91dGVzLCBSb3V0ZSwgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEJhY2tiYXNlQ29yZU1vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlJztcbmltcG9ydCB7IEVudGl0bGVtZW50c01vZHVsZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9lbnRpdGxlbWVudHMnO1xuaW1wb3J0IHsgUGF5bWVudFJlcXVlc3RXaWRnZXRNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvcGF5bWVudC1yZXF1ZXN0LXdpZGdldC1hbmcnO1xuaW1wb3J0IHsgQ29uc2VudFJlcXVlc3RXaWRnZXRNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvY29uc2VudC1yZXF1ZXN0LXdpZGdldC1hbmcnO1xuaW1wb3J0IHsgQ29uc2VudExpc3RXaWRnZXRNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvY29uc2VudC1saXN0LXdpZGdldC1hbmcnO1xuaW1wb3J0IHsgQ29uc2VudERldGFpbHNXaWRnZXRNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvY29uc2VudC1kZXRhaWxzLXdpZGdldC1hbmcnO1xuaW1wb3J0IHsgQnV0dG9uTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9idXR0b24nO1xuaW1wb3J0IHsgQ29uc2VudEpvdXJuZXlDb21wb25lbnQgfSBmcm9tICcuL2NvbnNlbnQtam91cm5leS5jb21wb25lbnQnO1xuaW1wb3J0IHsgY29uc2VudFJvdXRlcyB9IGZyb20gJy4vY29uc2VudC1qb3VybmV5LnJvdXRlcyc7XG5pbXBvcnQgeyBDb25zZW50Sm91cm5leUNvbmZpZ3VyYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9jb25zZW50LWpvdXJuZXktY29uZmlnLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBQYXltZW50UmVxdWVzdENvbXBvbmVudCB9IGZyb20gJy4vdmlld3MvcGF5bWVudC1yZXF1ZXN0L3BheW1lbnQtcmVxdWVzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGF5bWVudENvbnNlbnRSZWRpcmVjdENvbXBvbmVudCB9IGZyb20gJy4vdmlld3MvcGF5bWVudC1jb25zZW50LXJlZGlyZWN0L3BheW1lbnQtY29uc2VudC1yZWRpcmVjdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVHBwQ29uc2VudFJlZGlyZWN0Q29tcG9uZW50IH0gZnJvbSAnLi92aWV3cy90cHAtY29uc2VudC1yZWRpcmVjdC90cHAtY29uc2VudC1yZWRpcmVjdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29uc2VudFJlcXVlc3RDb21wb25lbnQgfSBmcm9tICcuL3ZpZXdzL2NvbnNlbnQtcmVxdWVzdC9jb25zZW50LXJlcXVlc3QuY29tcG9uZW50JztcbmltcG9ydCB7IENvbnNlbnRzQ29tcG9uZW50IH0gZnJvbSAnLi92aWV3cy9jb25zZW50cy9jb25zZW50cy5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29uc2VudERldGFpbENvbXBvbmVudCB9IGZyb20gJy4vdmlld3MvY29uc2VudHMvY29uc2VudC1kZXRhaWwvY29uc2VudC1kZXRhaWwuY29tcG9uZW50JztcbmltcG9ydCB7IENvbnNlbnRMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi92aWV3cy9jb25zZW50cy9jb25zZW50LWxpc3QvY29uc2VudC1saXN0LmNvbXBvbmVudCc7XG5cbmNvbnN0IHZpZXdDb21wb25lbnRzID0gW1xuICBDb25zZW50Sm91cm5leUNvbXBvbmVudCxcbiAgUGF5bWVudFJlcXVlc3RDb21wb25lbnQsXG4gIFBheW1lbnRDb25zZW50UmVkaXJlY3RDb21wb25lbnQsXG4gIFRwcENvbnNlbnRSZWRpcmVjdENvbXBvbmVudCxcbiAgQ29uc2VudFJlcXVlc3RDb21wb25lbnQsXG4gIENvbnNlbnRzQ29tcG9uZW50LFxuICBDb25zZW50RGV0YWlsQ29tcG9uZW50LFxuICBDb25zZW50TGlzdENvbXBvbmVudCxcbl07XG5jb25zdCB1aU1vZHVsZXMgPSBbXG4gIEVudGl0bGVtZW50c01vZHVsZSxcbiAgUGF5bWVudFJlcXVlc3RXaWRnZXRNb2R1bGUsXG4gIENvbnNlbnRSZXF1ZXN0V2lkZ2V0TW9kdWxlLFxuICBDb25zZW50TGlzdFdpZGdldE1vZHVsZSxcbiAgQ29uc2VudERldGFpbHNXaWRnZXRNb2R1bGUsXG5dO1xuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiB2aWV3Q29tcG9uZW50cyxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQoW2NvbnNlbnRSb3V0ZXNdKSxcbiAgICBCYWNrYmFzZUNvcmVNb2R1bGUud2l0aENvbmZpZyh7XG4gICAgICBjbGFzc01hcDogeyBDb25zZW50Sm91cm5leUNvbXBvbmVudDogQ29uc2VudEpvdXJuZXlDb21wb25lbnQgfSxcbiAgICB9KSxcbiAgICAuLi51aU1vZHVsZXMsXG4gICAgQnV0dG9uTW9kdWxlLFxuICBdLFxuICBwcm92aWRlcnM6IFtDb25zZW50Sm91cm5leUNvbmZpZ3VyYXRpb25TZXJ2aWNlXSxcbiAgZXhwb3J0czogWy4uLnZpZXdDb21wb25lbnRzLCAuLi51aU1vZHVsZXNdLFxufSlcbmV4cG9ydCBjbGFzcyBDb25zZW50Sm91cm5leU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KFxuICAgIGRhdGE6IHsgcm91dGU6IFJvdXRlOyBba2V5OiBzdHJpbmddOiBhbnkgfSA9IHsgcm91dGU6IGNvbnNlbnRSb3V0ZXMgfSxcbiAgKTogTW9kdWxlV2l0aFByb3ZpZGVyczxDb25zZW50Sm91cm5leU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQ29uc2VudEpvdXJuZXlNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtwcm92aWRlUm91dGVzKFtkYXRhLnJvdXRlXSldLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==