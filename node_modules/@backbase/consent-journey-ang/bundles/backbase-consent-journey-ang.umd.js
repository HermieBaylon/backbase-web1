(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@angular/common'), require('@backbase/foundation-ang/core'), require('@backbase/foundation-ang/entitlements'), require('@backbase/payment-request-widget-ang'), require('@backbase/consent-request-widget-ang'), require('@backbase/consent-list-widget-ang'), require('@backbase/consent-details-widget-ang'), require('@backbase/ui-ang/button'), require('rxjs'), require('rxjs/operators'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/loading-indicator'), require('@angular/localize/init')) :
  typeof define === 'function' && define.amd ? define('@backbase/consent-journey-ang', ['exports', '@angular/core', '@angular/router', '@angular/common', '@backbase/foundation-ang/core', '@backbase/foundation-ang/entitlements', '@backbase/payment-request-widget-ang', '@backbase/consent-request-widget-ang', '@backbase/consent-list-widget-ang', '@backbase/consent-details-widget-ang', '@backbase/ui-ang/button', 'rxjs', 'rxjs/operators', '@backbase/ui-ang/icon', '@backbase/ui-ang/loading-indicator', '@angular/localize/init'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["consent-journey-ang"] = {}), global.ng.core, global.ng.router, global.ng.common, global.i2$2, global.entitlements, global.i3, global.i3$2, global.i3$4, global.i3$3, global.i4$1, global.rxjs, global.rxjs.operators, global.i2$1, global.i3$1));
})(this, (function (exports, i0, i2, i4, i2$2, entitlements, i3, i3$2, i3$4, i3$3, i4$1, rxjs, operators, i2$1, i3$1) { 'use strict';

  function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
      Object.keys(e).forEach(function (k) {
        if (k !== 'default') {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: true,
            get: function () { return e[k]; }
          });
        }
      });
    }
    n["default"] = e;
    return Object.freeze(n);
  }

  var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
  var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
  var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
  var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
  var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
  var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);
  var i3__namespace$4 = /*#__PURE__*/_interopNamespace(i3$4);
  var i3__namespace$3 = /*#__PURE__*/_interopNamespace(i3$3);
  var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
  var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
  var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);

  var ConsentJourneyComponent = /** @class */ (function () {
      function ConsentJourneyComponent(route) {
          this.route = route;
          var routeConfig = this.route.snapshot.routeConfig;
          this.tabs = (routeConfig === null || routeConfig === void 0 ? void 0 : routeConfig.children) ? this.initializeTabs(routeConfig) : [];
      }
      ConsentJourneyComponent.prototype.initializeTabs = function (_b) {
          var _c = _b.children, children = _c === void 0 ? [] : _c;
          return children
              .filter(function (routeItem) { return routeItem.path && routeItem.data; })
              .map(function (routeItem, index) {
              var _a;
              return ({
                  title: ((_a = routeItem.data) === null || _a === void 0 ? void 0 : _a.title()) || "Tab" + (index + 1),
                  route: routeItem.path || "" + (index + 1),
              });
          });
      };
      return ConsentJourneyComponent;
  }());
  ConsentJourneyComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyComponent, deps: [{ token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
  ConsentJourneyComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentJourneyComponent, selector: "bb-consent-journey", ngImport: i0__namespace, template: "\n    <div class=\"bb-tab\">\n      <div class=\"bb-tab-container__tabs nav nav-tabs\">\n        <a\n          *ngFor=\"let tab of tabs\"\n          class=\"nav-link nav-item\"\n          role=\"tab\"\n          [routerLink]=\"[tab.route]\"\n          routerLinkActive=\"active\">\n          <span class=\"bb-stack__item bb-stack__item--spacing-xs\">{{ tab?.title }}</span>\n        </a>\n      </div>\n      <div class=\"bb-tab-container__content tab-content\" role=\"tabpanel\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  ", isInline: true, directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2__namespace.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], exportAs: ["routerLinkActive"] }, { type: i2__namespace.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyComponent, decorators: [{
              type: i0.Component,
              args: [{
                      selector: 'bb-consent-journey',
                      template: "\n    <div class=\"bb-tab\">\n      <div class=\"bb-tab-container__tabs nav nav-tabs\">\n        <a\n          *ngFor=\"let tab of tabs\"\n          class=\"nav-link nav-item\"\n          role=\"tab\"\n          [routerLink]=\"[tab.route]\"\n          routerLinkActive=\"active\">\n          <span class=\"bb-stack__item bb-stack__item--spacing-xs\">{{ tab?.title }}</span>\n        </a>\n      </div>\n      <div class=\"bb-tab-container__content tab-content\" role=\"tabpanel\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  ",
                  }]
          }], ctorParameters: function () { return [{ type: i2__namespace.ActivatedRoute }]; } });

  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  /* global Reflect, Promise */
  var extendStatics = function (d, b) {
      extendStatics = Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
          function (d, b) { for (var p in b)
              if (Object.prototype.hasOwnProperty.call(b, p))
                  d[p] = b[p]; };
      return extendStatics(d, b);
  };
  function __extends(d, b) {
      if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
      extendStatics(d, b);
      function __() { this.constructor = d; }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }
  var __assign = function () {
      __assign = Object.assign || function __assign(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s)
                  if (Object.prototype.hasOwnProperty.call(s, p))
                      t[p] = s[p];
          }
          return t;
      };
      return __assign.apply(this, arguments);
  };
  function __rest(s, e) {
      var t = {};
      for (var p in s)
          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
              t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
              if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                  t[p[i]] = s[p[i]];
          }
      return t;
  }
  function __decorate(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
      else
          for (var i = decorators.length - 1; i >= 0; i--)
              if (d = decorators[i])
                  r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  function __param(paramIndex, decorator) {
      return function (target, key) { decorator(target, key, paramIndex); };
  }
  function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
  }
  function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
      return new (P || (P = Promise))(function (resolve, reject) {
          function fulfilled(value) { try {
              step(generator.next(value));
          }
          catch (e) {
              reject(e);
          } }
          function rejected(value) { try {
              step(generator["throw"](value));
          }
          catch (e) {
              reject(e);
          } }
          function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
  }
  function __generator(thisArg, body) {
      var _ = { label: 0, sent: function () { if (t[0] & 1)
              throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
      function verb(n) { return function (v) { return step([n, v]); }; }
      function step(op) {
          if (f)
              throw new TypeError("Generator is already executing.");
          while (_)
              try {
                  if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                      return t;
                  if (y = 0, t)
                      op = [op[0] & 2, t.value];
                  switch (op[0]) {
                      case 0:
                      case 1:
                          t = op;
                          break;
                      case 4:
                          _.label++;
                          return { value: op[1], done: false };
                      case 5:
                          _.label++;
                          y = op[1];
                          op = [0];
                          continue;
                      case 7:
                          op = _.ops.pop();
                          _.trys.pop();
                          continue;
                      default:
                          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                              _ = 0;
                              continue;
                          }
                          if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                              _.label = op[1];
                              break;
                          }
                          if (op[0] === 6 && _.label < t[1]) {
                              _.label = t[1];
                              t = op;
                              break;
                          }
                          if (t && _.label < t[2]) {
                              _.label = t[2];
                              _.ops.push(op);
                              break;
                          }
                          if (t[2])
                              _.ops.pop();
                          _.trys.pop();
                          continue;
                  }
                  op = body.call(thisArg, _);
              }
              catch (e) {
                  op = [6, e];
                  y = 0;
              }
              finally {
                  f = t = 0;
              }
          if (op[0] & 5)
              throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
      }
  }
  var __createBinding = Object.create ? (function (o, m, k, k2) {
      if (k2 === undefined)
          k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
  }) : (function (o, m, k, k2) {
      if (k2 === undefined)
          k2 = k;
      o[k2] = m[k];
  });
  function __exportStar(m, o) {
      for (var p in m)
          if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
              __createBinding(o, m, p);
  }
  function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
      if (m)
          return m.call(o);
      if (o && typeof o.length === "number")
          return {
              next: function () {
                  if (o && i >= o.length)
                      o = void 0;
                  return { value: o && o[i++], done: !o };
              }
          };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m)
          return o;
      var i = m.call(o), r, ar = [], e;
      try {
          while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
              ar.push(r.value);
      }
      catch (error) {
          e = { error: error };
      }
      finally {
          try {
              if (r && !r.done && (m = i["return"]))
                  m.call(i);
          }
          finally {
              if (e)
                  throw e.error;
          }
      }
      return ar;
  }
  /** @deprecated */
  function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++)
          ar = ar.concat(__read(arguments[i]));
      return ar;
  }
  /** @deprecated */
  function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++)
          s += arguments[i].length;
      for (var r = Array(s), k = 0, i = 0; i < il; i++)
          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
              r[k] = a[j];
      return r;
  }
  function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2)
          for (var i = 0, l = from.length, ar; i < l; i++) {
              if (ar || !(i in from)) {
                  if (!ar)
                      ar = Array.prototype.slice.call(from, 0, i);
                  ar[i] = from[i];
              }
          }
      return to.concat(ar || Array.prototype.slice.call(from));
  }
  function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
  }
  function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []), i, q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
      function verb(n) { if (g[n])
          i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
      function resume(n, v) { try {
          step(g[n](v));
      }
      catch (e) {
          settle(q[0][3], e);
      } }
      function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
      function fulfill(value) { resume("next", value); }
      function reject(value) { resume("throw", value); }
      function settle(f, v) { if (f(v), q.shift(), q.length)
          resume(q[0][0], q[0][1]); }
  }
  function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
      function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
  }
  function __asyncValues(o) {
      if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator], i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
      function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
      function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
  }
  function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
      }
      else {
          cooked.raw = raw;
      }
      return cooked;
  }
  ;
  var __setModuleDefault = Object.create ? (function (o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
  }) : function (o, v) {
      o["default"] = v;
  };
  function __importStar(mod) {
      if (mod && mod.__esModule)
          return mod;
      var result = {};
      if (mod != null)
          for (var k in mod)
              if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                  __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
  }
  function __importDefault(mod) {
      return (mod && mod.__esModule) ? mod : { default: mod };
  }
  function __classPrivateFieldGet(receiver, state, kind, f) {
      if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  function __classPrivateFieldSet(receiver, state, value, kind, f) {
      if (kind === "m")
          throw new TypeError("Private method is not writable");
      if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
  }

  var ConsentJourneyConfigurationToken = new i0.InjectionToken('ConsentJourneyConfigurationToken injection token');
  var consentDefaultConfig = {
      multiAccountSelection: false,
  };
  var ConsentJourneyConfigurationService = /** @class */ (function () {
      function ConsentJourneyConfigurationService(config) {
          this.config = config;
          this.config = this.config || {};
          this._config = Object.assign(Object.assign({}, consentDefaultConfig), config);
      }
      Object.defineProperty(ConsentJourneyConfigurationService.prototype, "multiAccountSelection", {
          get: function () {
              return this._config.multiAccountSelection;
          },
          enumerable: false,
          configurable: true
      });
      return ConsentJourneyConfigurationService;
  }());
  ConsentJourneyConfigurationService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyConfigurationService, deps: [{ token: ConsentJourneyConfigurationToken, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
  ConsentJourneyConfigurationService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyConfigurationService });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyConfigurationService, decorators: [{
              type: i0.Injectable
          }], ctorParameters: function () {
          return [{ type: undefined, decorators: [{
                          type: i0.Optional
                      }, {
                          type: i0.Inject,
                          args: [ConsentJourneyConfigurationToken]
                      }] }];
      } });

  var PaymentRequestComponent = /** @class */ (function () {
      function PaymentRequestComponent(config, router, activeRoute) {
          this.config = config;
          this.router = router;
          this.activeRoute = activeRoute;
          this.destroy$ = new rxjs.Subject();
      }
      PaymentRequestComponent.prototype.requestPayment = function () {
          this.router.navigate([], {
              queryParams: {
                  paymentRequestId: '1231313',
              },
              skipLocationChange: false,
              relativeTo: this.activeRoute,
          });
      };
      PaymentRequestComponent.prototype.handleAllowRequest = function (event) {
          this.router.navigate(['../payment-redirect', { allowPaymentRequestRedirectUrl: event }], {
              relativeTo: this.activeRoute,
          });
      };
      PaymentRequestComponent.prototype.handleRejectRequest = function (event) {
          this.router.navigate(['../payment-redirect', { rejectPaymentRequestRedirectUrl: event }], {
              relativeTo: this.activeRoute,
          });
      };
      PaymentRequestComponent.prototype.ngOnDestroy = function () {
          this.destroy$.next();
      };
      return PaymentRequestComponent;
  }());
  PaymentRequestComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestComponent, deps: [{ token: ConsentJourneyConfigurationService }, { token: i2__namespace.Router }, { token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
  PaymentRequestComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentRequestComponent, selector: "bb-payment-request-view", ngImport: i0__namespace, template: "\n    <div class=\"container--fixed-width-small mx-auto\">\n      <div class=\"bb-card\">\n        <div class=\"bb-card__body\">\n          <div class=\"mb-5 d-flex justify-content-center\">\n            <button\n              bbButton\n              (click)=\"requestPayment()\"\n              i18n=\"Simulate Payment Request@@consent-journey.label.simulate-payment-request\">\n              Pay with Backbase\n            </button>\n          </div>\n          <bb-payment-request-widget\n            (allowPaymentRequestRedirectUrl)=\"handleAllowRequest($event)\"\n            (rejectPaymentRequestRedirectUrl)=\"handleRejectRequest($event)\"></bb-payment-request-widget>\n        </div>\n      </div>\n    </div>\n  ", isInline: true, components: [{ type: i3__namespace.PaymentRequestWidgetComponent, selector: "bb-payment-request-widget", outputs: ["allowPaymentRequestRedirectUrl", "rejectPaymentRequestRedirectUrl"] }], directives: [{ type: i4__namespace$1.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentRequestComponent, decorators: [{
              type: i0.Component,
              args: [{
                      selector: 'bb-payment-request-view',
                      template: "\n    <div class=\"container--fixed-width-small mx-auto\">\n      <div class=\"bb-card\">\n        <div class=\"bb-card__body\">\n          <div class=\"mb-5 d-flex justify-content-center\">\n            <button\n              bbButton\n              (click)=\"requestPayment()\"\n              i18n=\"Simulate Payment Request@@consent-journey.label.simulate-payment-request\">\n              Pay with Backbase\n            </button>\n          </div>\n          <bb-payment-request-widget\n            (allowPaymentRequestRedirectUrl)=\"handleAllowRequest($event)\"\n            (rejectPaymentRequestRedirectUrl)=\"handleRejectRequest($event)\"></bb-payment-request-widget>\n        </div>\n      </div>\n    </div>\n  ",
                  }]
          }], ctorParameters: function () { return [{ type: ConsentJourneyConfigurationService }, { type: i2__namespace.Router }, { type: i2__namespace.ActivatedRoute }]; } });

  var Status$1;
  (function (Status) {
      Status[Status["ALLOW"] = 0] = "ALLOW";
      Status[Status["REJECT"] = 1] = "REJECT";
      Status[Status["ERROR"] = 2] = "ERROR";
  })(Status$1 || (Status$1 = {}));
  var PaymentConsentRedirectComponent = /** @class */ (function () {
      function PaymentConsentRedirectComponent(route) {
          this.route = route;
          this.PAYMENT_REDIRECT_TIMEOUT = 5000;
          this.Status = Status$1;
          this.allowPaymentRequestRedirectUrl = this.getRouteParam(this.route, 'allowPaymentRequestRedirectUrl').pipe(operators.map(function (allowPaymentRequestRedirectUrl) { return allowPaymentRequestRedirectUrl || ''; }));
          this.rejectPaymentRequestRedirectUrl = this.getRouteParam(this.route, 'rejectPaymentRequestRedirectUrl').pipe(operators.map(function (rejectPaymentRequestRedirectUrl) { return rejectPaymentRequestRedirectUrl || ''; }));
          this.redirectStatus = rxjs.combineLatest(this.allowPaymentRequestRedirectUrl, this.rejectPaymentRequestRedirectUrl).pipe(operators.map(function (_a) {
              var _b = __read(_a, 2), allowUrl = _b[0], rejectUrl = _b[1];
              return ({
                  url: allowUrl ? allowUrl : rejectUrl ? rejectUrl : '',
                  status: allowUrl ? Status$1.ALLOW : rejectUrl ? Status$1.REJECT : Status$1.ERROR,
              });
          }));
      }
      PaymentConsentRedirectComponent.prototype.getRouteParam = function (route, param) {
          var paramValue = route.paramMap.pipe(operators.pluck('params', param));
          if (!route.parent) {
              return paramValue;
          }
          // ensure that level that has actual value keeps it from being cleared
          return rxjs.combineLatest(paramValue, this.getRouteParam(route.parent, param)).pipe(operators.map(function (params) { return params[0] || params[1]; }));
      };
      PaymentConsentRedirectComponent.prototype.redirect = function () {
          this.redirectStatus.subscribe(function (redirectStatus) {
              if (redirectStatus.status !== Status$1.ERROR) {
                  window.location.href = redirectStatus.url;
              }
          });
      };
      PaymentConsentRedirectComponent.prototype.ngOnInit = function () {
          var _this = this;
          setTimeout(function () {
              _this.redirect();
          }, this.PAYMENT_REDIRECT_TIMEOUT);
      };
      return PaymentConsentRedirectComponent;
  }());
  PaymentConsentRedirectComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentConsentRedirectComponent, deps: [{ token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
  PaymentConsentRedirectComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PaymentConsentRedirectComponent, selector: "bb-payment-consent-redirect", ngImport: i0__namespace, template: "<div class=\"container--fixed-width-small mx-auto\">\n  <div class=\"bb-card\">\n    <div class=\"bb-card__body\">\n      <div\n        *ngIf=\"redirectStatus | async as redirectStatus; else errorTemplate\"\n        class=\"mb-5 d-flex justify-content-center flex-column text-center\">\n        <ng-container *ngIf=\"redirectStatus.status !== Status.ERROR; else errorTemplate\">\n          <bb-icon-ui name=\"success\" color=\"success\" size=\"xl\" class=\"d-inline mb-3\"></bb-icon-ui>\n          <h4\n            i18n=\"Payment status@@consent-journey.label.payment-status-allowed\"\n            *ngIf=\"redirectStatus.status === Status.ALLOW\"\n            data-role=\"payment-status-allowed\">\n            Payment accepted!\n          </h4>\n          <h4\n            i18n=\"Payment status@@consent-journey.label.payment-status-rejected\"\n            *ngIf=\"redirectStatus.status === Status.REJECT\"\n            data-role=\"payment-status-rejected\">\n            Payment rejected!\n          </h4>\n          <div class=\"mb-4\" i18n=\"Redirecting@@consent-journey.label.redirecting-to-tpp-website\">\n            Redirecting back to third party website...\n          </div>\n          <div class=\"mb-3\">\n            <bb-loading-indicator-ui></bb-loading-indicator-ui>\n          </div>\n        </ng-container>\n      </div>\n\n      <ng-template #errorTemplate>\n        <div class=\"mb-5 d-flex justify-content-center flex-column text-center\">\n          <div i18n=\"No Redirect Url@@consent-journey.label.no-redirect-url\">No Redirect Url</div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4__namespace.AsyncPipe } });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PaymentConsentRedirectComponent, decorators: [{
              type: i0.Component,
              args: [{
                      selector: 'bb-payment-consent-redirect',
                      templateUrl: './payment-consent-redirect.component.html',
                  }]
          }], ctorParameters: function () { return [{ type: i2__namespace.ActivatedRoute }]; } });

  var Status;
  (function (Status) {
      Status[Status["ALLOW"] = 0] = "ALLOW";
      Status[Status["REJECT"] = 1] = "REJECT";
      Status[Status["ERROR"] = 2] = "ERROR";
  })(Status || (Status = {}));
  var TppConsentRedirectComponent = /** @class */ (function () {
      function TppConsentRedirectComponent(route) {
          this.route = route;
          this.CONSENT_REDIRECT_TIMEOUT = 5000;
          this.Status = Status;
          this.allowConsentRequestRedirectUrl = this.getRouteParam(this.route, 'allowConsentRequestRedirectUrl').pipe(operators.map(function (allowConsentRequestRedirectUrl) { return allowConsentRequestRedirectUrl || ''; }));
          this.rejectConsentRequestRedirectUrl = this.getRouteParam(this.route, 'rejectConsentRequestRedirectUrl').pipe(operators.map(function (rejectConsentRequestRedirectUrl) { return rejectConsentRequestRedirectUrl || ''; }));
          this.redirectStatus = rxjs.combineLatest(this.allowConsentRequestRedirectUrl, this.rejectConsentRequestRedirectUrl).pipe(operators.map(function (_a) {
              var _b = __read(_a, 2), allowUrl = _b[0], rejectUrl = _b[1];
              return ({
                  url: allowUrl ? allowUrl : rejectUrl ? rejectUrl : '',
                  status: allowUrl ? Status.ALLOW : rejectUrl ? Status.REJECT : Status.ERROR,
              });
          }));
      }
      TppConsentRedirectComponent.prototype.getRouteParam = function (route, param) {
          var paramValue = route.paramMap.pipe(operators.pluck('params', param));
          if (!route.parent) {
              return paramValue;
          }
          // ensure that level that has actual value keeps it from being cleared
          return rxjs.combineLatest(paramValue, this.getRouteParam(route.parent, param)).pipe(operators.map(function (params) { return params[0] || params[1]; }));
      };
      TppConsentRedirectComponent.prototype.redirect = function () {
          this.redirectStatus.subscribe(function (redirectStatus) {
              if (redirectStatus.status !== Status.ERROR) {
                  window.location.href = redirectStatus.url;
              }
          });
      };
      TppConsentRedirectComponent.prototype.ngOnInit = function () {
          var _this = this;
          setTimeout(function () {
              _this.redirect();
          }, this.CONSENT_REDIRECT_TIMEOUT);
      };
      return TppConsentRedirectComponent;
  }());
  TppConsentRedirectComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: TppConsentRedirectComponent, deps: [{ token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
  TppConsentRedirectComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: TppConsentRedirectComponent, selector: "bb-tpp-consent-redirect", ngImport: i0__namespace, template: "<div class=\"container--fixed-width-small mx-auto\">\n  <div class=\"bb-card\">\n    <div class=\"bb-card__body\">\n      <div\n        *ngIf=\"redirectStatus | async as redirectStatus; else errorTemplate\"\n        class=\"mb-5 d-flex justify-content-center flex-column text-center\">\n        <ng-container *ngIf=\"redirectStatus.status !== Status.ERROR; else errorTemplate\">\n          <bb-icon-ui name=\"success\" color=\"success\" size=\"xl\" class=\"d-inline mb-3\"></bb-icon-ui>\n          <h4\n            i18n=\"Consent status@@consent-journey.label.consent-status-allowed\"\n            *ngIf=\"redirectStatus.status === Status.ALLOW\"\n            data-role=\"consent-status-allowed\">\n            Consent granted!\n          </h4>\n          <h4\n            i18n=\"Consent status@@consent-journey.label.consent-status-rejected\"\n            *ngIf=\"redirectStatus.status === Status.REJECT\">\n            Consent rejected!\n          </h4>\n          <div class=\"mb-4\" i18n=\"Redirecting@@consent-journey.label.redirecting-to-tpp-website\">\n            Redirecting back to third party website...\n          </div>\n          <div class=\"mb-3\">\n            <bb-loading-indicator-ui></bb-loading-indicator-ui>\n          </div>\n        </ng-container>\n      </div>\n\n      <ng-template #errorTemplate>\n        <div class=\"mb-5 d-flex justify-content-center flex-column text-center\">\n          <div i18n=\"No Redirect Url@@consent-journey.label.no-redirect-url\">No Redirect Url</div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i3__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4__namespace.AsyncPipe } });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: TppConsentRedirectComponent, decorators: [{
              type: i0.Component,
              args: [{
                      selector: 'bb-tpp-consent-redirect',
                      templateUrl: './tpp-consent-redirect.component.html',
                  }]
          }], ctorParameters: function () { return [{ type: i2__namespace.ActivatedRoute }]; } });

  var ConsentRequestComponent = /** @class */ (function () {
      function ConsentRequestComponent(config, router, activeRoute) {
          this.config = config;
          this.router = router;
          this.activeRoute = activeRoute;
          this.destroy$ = new rxjs.Subject();
      }
      ConsentRequestComponent.prototype.requestContext = function () {
          this.router.navigate([], {
              queryParams: {
                  consentRequestId: '1231313',
              },
              skipLocationChange: false,
              relativeTo: this.activeRoute,
          });
      };
      ConsentRequestComponent.prototype.handleAllowRequest = function (event) {
          this.router.navigate(['../consent-redirect', { allowConsentRequestRedirectUrl: event }], {
              relativeTo: this.activeRoute,
          });
      };
      ConsentRequestComponent.prototype.handleRejectRequest = function (event) {
          this.router.navigate(['../consent-redirect', { rejectConsentRequestRedirectUrl: event }], {
              relativeTo: this.activeRoute,
          });
      };
      ConsentRequestComponent.prototype.ngOnDestroy = function () {
          this.destroy$.next();
      };
      return ConsentRequestComponent;
  }());
  ConsentRequestComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentRequestComponent, deps: [{ token: ConsentJourneyConfigurationService }, { token: i2__namespace.Router }, { token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
  ConsentRequestComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentRequestComponent, selector: "bb-consent-request-view", ngImport: i0__namespace, template: "\n    <div class=\"container--fixed-width-small mx-auto\">\n      <div class=\"bb-card\">\n        <div class=\"bb-card__body\">\n          <div class=\"mb-5 d-flex justify-content-center\">\n            <button\n              bbButton\n              (click)=\"requestContext()\"\n              i18n=\"Simulate Consent Request@@consent-journey.label.simulate-consent-request\">\n              Simulate Consent Request\n            </button>\n          </div>\n          <bb-consent-request-widget\n            [multiAccountSelection]=\"config.multiAccountSelection\"\n            (allowConsentRequestRedirectUrl)=\"handleAllowRequest($event)\"\n            (rejectConsentRequestRedirectUrl)=\"handleRejectRequest($event)\"></bb-consent-request-widget>\n        </div>\n      </div>\n    </div>\n  ", isInline: true, components: [{ type: i3__namespace$2.ConsentRequestWidgetComponent, selector: "bb-consent-request-widget", inputs: ["multiAccountSelection"], outputs: ["allowConsentRequestRedirectUrl", "rejectConsentRequestRedirectUrl"] }], directives: [{ type: i4__namespace$1.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentRequestComponent, decorators: [{
              type: i0.Component,
              args: [{
                      selector: 'bb-consent-request-view',
                      template: "\n    <div class=\"container--fixed-width-small mx-auto\">\n      <div class=\"bb-card\">\n        <div class=\"bb-card__body\">\n          <div class=\"mb-5 d-flex justify-content-center\">\n            <button\n              bbButton\n              (click)=\"requestContext()\"\n              i18n=\"Simulate Consent Request@@consent-journey.label.simulate-consent-request\">\n              Simulate Consent Request\n            </button>\n          </div>\n          <bb-consent-request-widget\n            [multiAccountSelection]=\"config.multiAccountSelection\"\n            (allowConsentRequestRedirectUrl)=\"handleAllowRequest($event)\"\n            (rejectConsentRequestRedirectUrl)=\"handleRejectRequest($event)\"></bb-consent-request-widget>\n        </div>\n      </div>\n    </div>\n  ",
                  }]
          }], ctorParameters: function () { return [{ type: ConsentJourneyConfigurationService }, { type: i2__namespace.Router }, { type: i2__namespace.ActivatedRoute }]; } });

  var ConsentsComponent = /** @class */ (function () {
      function ConsentsComponent() {
      }
      return ConsentsComponent;
  }());
  ConsentsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentsComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
  ConsentsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentsComponent, selector: "bb-consents-view", ngImport: i0__namespace, template: "<router-outlet></router-outlet>", isInline: true, directives: [{ type: i2__namespace.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentsComponent, decorators: [{
              type: i0.Component,
              args: [{
                      selector: 'bb-consents-view',
                      template: "<router-outlet></router-outlet>",
                  }]
          }] });

  var ConsentDetailComponent = /** @class */ (function () {
      function ConsentDetailComponent(config, router, activeRoute) {
          this.config = config;
          this.router = router;
          this.activeRoute = activeRoute;
          this.destroy$ = new rxjs.Subject();
      }
      ConsentDetailComponent.prototype.handleBack = function () {
          this.router.navigate(['../list'], {
              relativeTo: this.activeRoute,
          });
      };
      ConsentDetailComponent.prototype.ngOnDestroy = function () {
          this.destroy$.next();
      };
      return ConsentDetailComponent;
  }());
  ConsentDetailComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentDetailComponent, deps: [{ token: ConsentJourneyConfigurationService }, { token: i2__namespace.Router }, { token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
  ConsentDetailComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentDetailComponent, selector: "bb-consent-detail-view", ngImport: i0__namespace, template: " <div class=\"bb-card\">\n    <div class=\"bb-card__body\">\n      <div class=\"justify-content-start\" data-role=\"consent-heading\">\n        <button\n          data-role=\"consent-heading-button__navigation\"\n          (click)=\"handleBack()\"\n          class=\"btn btn-link bb-block bb-block--xl\">\n          <i aria-hidden=\"true\" class=\"bb-icon bb-icon-chevron-left\"></i>\n          <span i18n=\"Consent back button title@@consent-journey.detail.button.title\">Back to list</span>\n        </button>\n      </div>\n      <bb-consent-details-widget></bb-consent-details-widget>\n    </div>\n  </div>", isInline: true, components: [{ type: i3__namespace$3.ConsentDetailsWidgetComponent, selector: "bb-consent-details-widget" }] });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentDetailComponent, decorators: [{
              type: i0.Component,
              args: [{
                      selector: 'bb-consent-detail-view',
                      template: " <div class=\"bb-card\">\n    <div class=\"bb-card__body\">\n      <div class=\"justify-content-start\" data-role=\"consent-heading\">\n        <button\n          data-role=\"consent-heading-button__navigation\"\n          (click)=\"handleBack()\"\n          class=\"btn btn-link bb-block bb-block--xl\">\n          <i aria-hidden=\"true\" class=\"bb-icon bb-icon-chevron-left\"></i>\n          <span i18n=\"Consent back button title@@consent-journey.detail.button.title\">Back to list</span>\n        </button>\n      </div>\n      <bb-consent-details-widget></bb-consent-details-widget>\n    </div>\n  </div>",
                  }]
          }], ctorParameters: function () { return [{ type: ConsentJourneyConfigurationService }, { type: i2__namespace.Router }, { type: i2__namespace.ActivatedRoute }]; } });

  var ConsentListComponent = /** @class */ (function () {
      function ConsentListComponent(config, router, activeRoute) {
          this.config = config;
          this.router = router;
          this.activeRoute = activeRoute;
          this.destroy$ = new rxjs.Subject();
          this.consentId = '';
      }
      ConsentListComponent.prototype.handleDetail = function (event) {
          this.consentId = event;
          this.router.navigate(['../details', { consentId: event }], {
              relativeTo: this.activeRoute,
          });
      };
      ConsentListComponent.prototype.ngOnDestroy = function () {
          this.destroy$.next();
      };
      return ConsentListComponent;
  }());
  ConsentListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentListComponent, deps: [{ token: ConsentJourneyConfigurationService }, { token: i2__namespace.Router }, { token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
  ConsentListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentListComponent, selector: "bb-consent-list-view", ngImport: i0__namespace, template: " <div class=\"bb-card\">\n    <div class=\"bb-card__body\">\n      <bb-consent-list-widget (consentId)=\"handleDetail($event)\"></bb-consent-list-widget>\n    </div>\n  </div>", isInline: true, components: [{ type: i3__namespace$4.ConsentListWidgetComponent, selector: "bb-consent-list-widget", outputs: ["consentId"] }] });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentListComponent, decorators: [{
              type: i0.Component,
              args: [{
                      selector: 'bb-consent-list-view',
                      template: " <div class=\"bb-card\">\n    <div class=\"bb-card__body\">\n      <bb-consent-list-widget (consentId)=\"handleDetail($event)\"></bb-consent-list-widget>\n    </div>\n  </div>",
                  }]
          }], ctorParameters: function () { return [{ type: ConsentJourneyConfigurationService }, { type: i2__namespace.Router }, { type: i2__namespace.ActivatedRoute }]; } });

  var tabs = {
      paymentRequest: function () { return $localize(templateObject_1 || (templateObject_1 = __makeTemplateObject([":Payment request tab title@@consent-journey.tab.paymentRequest.title:Payment Request"], [":Payment request tab title@@consent-journey.tab.paymentRequest.title:Payment Request"]))); },
      consentRequest: function () { return $localize(templateObject_2 || (templateObject_2 = __makeTemplateObject([":Consent request tab title@@consent-journey.tab.consentRequest.title:Consent Request"], [":Consent request tab title@@consent-journey.tab.consentRequest.title:Consent Request"]))); },
      consents: function () { return $localize(templateObject_3 || (templateObject_3 = __makeTemplateObject([":Consents tab title@@consent-journey.tab.consents.title:Consents"], [":Consents tab title@@consent-journey.tab.consents.title:Consents"]))); },
  };
  var consentRoutes = {
      path: '',
      component: ConsentJourneyComponent,
      children: [
          {
              path: '',
              redirectTo: 'payment-request',
              pathMatch: 'full',
          },
          {
              path: 'payment-request',
              component: PaymentRequestComponent,
              data: { title: tabs.paymentRequest },
          },
          {
              path: 'payment-redirect',
              component: PaymentConsentRedirectComponent,
          },
          {
              path: 'consent-redirect',
              component: TppConsentRedirectComponent,
          },
          {
              path: 'consent-request',
              component: ConsentRequestComponent,
              data: { title: tabs.consentRequest },
          },
          {
              component: ConsentsComponent,
              data: { title: tabs.consents },
              path: 'consents',
              children: [
                  {
                      path: '',
                      redirectTo: 'list',
                      pathMatch: 'full',
                  },
                  {
                      path: 'list',
                      component: ConsentListComponent,
                  },
                  {
                      path: 'details',
                      component: ConsentDetailComponent,
                  },
              ],
          },
      ],
  };
  var templateObject_1, templateObject_2, templateObject_3;

  var viewComponents = [
      ConsentJourneyComponent,
      PaymentRequestComponent,
      PaymentConsentRedirectComponent,
      TppConsentRedirectComponent,
      ConsentRequestComponent,
      ConsentsComponent,
      ConsentDetailComponent,
      ConsentListComponent,
  ];
  var uiModules = [
      entitlements.EntitlementsModule,
      i3.PaymentRequestWidgetModule,
      i3$2.ConsentRequestWidgetModule,
      i3$4.ConsentListWidgetModule,
      i3$3.ConsentDetailsWidgetModule,
  ];
  var ConsentJourneyModule = /** @class */ (function () {
      function ConsentJourneyModule() {
      }
      ConsentJourneyModule.forRoot = function (data) {
          if (data === void 0) { data = { route: consentRoutes }; }
          return {
              ngModule: ConsentJourneyModule,
              providers: [i2.provideRoutes([data.route])],
          };
      };
      return ConsentJourneyModule;
  }());
  ConsentJourneyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
  ConsentJourneyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyModule, declarations: [ConsentJourneyComponent,
          PaymentRequestComponent,
          PaymentConsentRedirectComponent,
          TppConsentRedirectComponent,
          ConsentRequestComponent,
          ConsentsComponent,
          ConsentDetailComponent,
          ConsentListComponent], imports: [i4.CommonModule, i2__namespace.RouterModule, i2__namespace$2.BackbaseCoreModule, entitlements.EntitlementsModule,
          i3.PaymentRequestWidgetModule,
          i3$2.ConsentRequestWidgetModule,
          i3$4.ConsentListWidgetModule,
          i3$3.ConsentDetailsWidgetModule, i4$1.ButtonModule], exports: [ConsentJourneyComponent,
          PaymentRequestComponent,
          PaymentConsentRedirectComponent,
          TppConsentRedirectComponent,
          ConsentRequestComponent,
          ConsentsComponent,
          ConsentDetailComponent,
          ConsentListComponent, entitlements.EntitlementsModule,
          i3.PaymentRequestWidgetModule,
          i3$2.ConsentRequestWidgetModule,
          i3$4.ConsentListWidgetModule,
          i3$3.ConsentDetailsWidgetModule] });
  ConsentJourneyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyModule, providers: [ConsentJourneyConfigurationService], imports: [__spreadArray(__spreadArray([
              i4.CommonModule,
              i2.RouterModule.forChild([consentRoutes]),
              i2$2.BackbaseCoreModule.withConfig({
                  classMap: { ConsentJourneyComponent: ConsentJourneyComponent },
              })
          ], __read(uiModules)), [
              i4$1.ButtonModule,
          ]), entitlements.EntitlementsModule,
          i3.PaymentRequestWidgetModule,
          i3$2.ConsentRequestWidgetModule,
          i3$4.ConsentListWidgetModule,
          i3$3.ConsentDetailsWidgetModule] });
  i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ConsentJourneyModule, decorators: [{
              type: i0.NgModule,
              args: [{
                      declarations: viewComponents,
                      imports: __spreadArray(__spreadArray([
                          i4.CommonModule,
                          i2.RouterModule.forChild([consentRoutes]),
                          i2$2.BackbaseCoreModule.withConfig({
                              classMap: { ConsentJourneyComponent: ConsentJourneyComponent },
                          })
                      ], __read(uiModules)), [
                          i4$1.ButtonModule,
                      ]),
                      providers: [ConsentJourneyConfigurationService],
                      exports: __spreadArray(__spreadArray([], __read(viewComponents)), __read(uiModules)),
                  }]
          }] });

  /**
   * Generated bundle index. Do not edit.
   */

  exports.ConsentDetailComponent = ConsentDetailComponent;
  exports.ConsentJourneyComponent = ConsentJourneyComponent;
  exports.ConsentJourneyConfigurationService = ConsentJourneyConfigurationService;
  exports.ConsentJourneyConfigurationToken = ConsentJourneyConfigurationToken;
  exports.ConsentJourneyModule = ConsentJourneyModule;
  exports.ConsentListComponent = ConsentListComponent;
  exports.ConsentRequestComponent = ConsentRequestComponent;
  exports.ConsentsComponent = ConsentsComponent;
  exports.PaymentConsentRedirectComponent = PaymentConsentRedirectComponent;
  exports.PaymentRequestComponent = PaymentRequestComponent;
  exports.TppConsentRedirectComponent = TppConsentRedirectComponent;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-consent-journey-ang.umd.js.map
