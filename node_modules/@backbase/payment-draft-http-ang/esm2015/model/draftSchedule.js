export var DraftSchedule;
(function (DraftSchedule) {
    DraftSchedule.NonWorkingDayExecutionStrategyEnum = {
        BEFORE: 'BEFORE',
        AFTER: 'AFTER',
        NONE: 'NONE'
    };
    DraftSchedule.TransferFrequencyEnum = {
        ONCE: 'ONCE',
        DAILY: 'DAILY',
        WEEKLY: 'WEEKLY',
        BIWEEKLY: 'BIWEEKLY',
        MONTHLY: 'MONTHLY',
        QUARTERLY: 'QUARTERLY',
        YEARLY: 'YEARLY'
    };
    DraftSchedule.EveryEnum = {
        _1: '1',
        _2: '2'
    };
})(DraftSchedule || (DraftSchedule = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZnRTY2hlZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL21vZGVsL2RyYWZ0U2NoZWR1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbURBLE1BQU0sS0FBVyxhQUFhLENBc0I3QjtBQXRCRCxXQUFpQixhQUFhO0lBRWIsZ0RBQWtDLEdBQUc7UUFDOUMsTUFBTSxFQUFFLFFBQThDO1FBQ3RELEtBQUssRUFBRSxPQUE2QztRQUNwRCxJQUFJLEVBQUUsTUFBNEM7S0FDckQsQ0FBQztJQUVXLG1DQUFxQixHQUFHO1FBQ2pDLElBQUksRUFBRSxNQUErQjtRQUNyQyxLQUFLLEVBQUUsT0FBZ0M7UUFDdkMsTUFBTSxFQUFFLFFBQWlDO1FBQ3pDLFFBQVEsRUFBRSxVQUFtQztRQUM3QyxPQUFPLEVBQUUsU0FBa0M7UUFDM0MsU0FBUyxFQUFFLFdBQW9DO1FBQy9DLE1BQU0sRUFBRSxRQUFpQztLQUM1QyxDQUFDO0lBRVcsdUJBQVMsR0FBRztRQUNyQixFQUFFLEVBQUUsR0FBZ0I7UUFDcEIsRUFBRSxFQUFFLEdBQWdCO0tBQ3ZCLENBQUM7QUFDTixDQUFDLEVBdEJnQixhQUFhLEtBQWIsYUFBYSxRQXNCN0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBheW1lbnQgb3JkZXIgZHJhZnRzIGNsaWVudFxuICogTWFuYWdlIHBheW1lbnQgb3JkZXIgZHJhZnRzLlxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAyLjAuOVxuICogXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9naXRodWIuY29tL0JhY2tiYXNlL2JhY2tiYXNlLW9wZW5hcGktdG9vbHMpLlxuICogaHR0cHM6Ly9naXRodWIuY29tL0JhY2tiYXNlL2JhY2tiYXNlLW9wZW5hcGktdG9vbHNcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuXG5cblxuLyoqXG4gKiBTY2hlZHVsZSBmb3IgcmVjdXJyaW5nIHRyYW5zZmVyLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIERyYWZ0U2NoZWR1bGUgeyBcbiAgICAvKipcbiAgICAgKiBTdHJhdGVneSBmb3IgZXhlY3V0aW5nIHBheW1lbnRzIG9uIG5vbi13b3JraW5nIGRheXNcbiAgICAgKi9cbiAgICBbXCJub25Xb3JraW5nRGF5RXhlY3V0aW9uU3RyYXRlZ3lcIl0/OiBEcmFmdFNjaGVkdWxlLk5vbldvcmtpbmdEYXlFeGVjdXRpb25TdHJhdGVneUVudW07XG4gICAgLyoqXG4gICAgICogRGVub3RlcyBob3cgZnJlcXVlbnRseSB0aGUgdHJhbnNmZXIgc2hvdWxkIGJlIG1hZGVcbiAgICAgKi9cbiAgICBbXCJ0cmFuc2ZlckZyZXF1ZW5jeVwiXT86IERyYWZ0U2NoZWR1bGUuVHJhbnNmZXJGcmVxdWVuY3lFbnVtO1xuICAgIC8qKlxuICAgICAqIERlbm90ZXMgZGF5IG9uIHdoaWNoIHRyYW5zZmVyIHNob3VsZCBiZSBleGVjdXRlZC4gRm9yIFdFRUtMWSB0cmFuc2ZlckZyZXF1ZW5jeSBpdCB3aWxsIGJlIDEuLjcgaW5kaWNhdGluZyB3ZWVrZGF5LiBGb3IgQklXRUVLTFkgaXQgd2lsbCBiZSAxLi4xNCBpbmRpY2F0aW5nIHRoZSBkYXkgb2YgdGhlIHR3byB3ZWVrIHBlcmlvZC4gRm9yIE1PTlRITFkgaXQgd2lsbCBiZSAxLi4zMSBpbmRpY2F0aW5nIGRheSBvZiBtb250aC4gRm9yIFlFQVJMWSBpdCB3aWxsIGJlIDEuLjEyIGluZGljYXRpbmcgbW9udGggb2YgdGhlIHllYXIuXG4gICAgICovXG4gICAgW1wib25cIl0/OiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogV2hlbiB0byBzdGFydCBleGVjdXRpbmcgdGhlIHNjaGVkdWxlLiBGaXJzdCB0cmFuc2ZlciB3aWxsIGJlIGV4ZWN1dGVkIG9uIGZpcnN0IGNhbGN1bGF0ZWQgZGF0ZSBieSBzY2hlZHVsZSBhZnRlciB0aGlzIGRhdGVcbiAgICAgKi9cbiAgICBbXCJzdGFydERhdGVcIl0/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogV2hlbiB0byBzdG9wIHRyYW5zZmVycy4gVHJhbnNmZXJzIHdpbGwgbm90IGJlIGV4ZWN1dGVkIGFmdGVyIHRoaXMgZGF0ZS4gT25seSBvbmUgb2YgZW5kRGF0ZSBhbmQgcmVwZWF0IGlzIHBvc3NpYmxlLiBJZiBuZWl0aGVyIHJlcGVhdCBub3IgZW5kRGF0ZSBpcyBwcm92aWRlZCB0cmFuc2ZlciB3aWxsIGJlIGV4ZWN1dGVkIHVudGlsIGNhbmNlbGVkXG4gICAgICovXG4gICAgW1wiZW5kRGF0ZVwiXT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBOdW1iZXIgb2YgdHJhbnNmZXIgdG8gYmUgZXhlY3V0ZWQuIE9ubHkgb25lIG9mIGVuZERhdGUgYW5kIHJlcGVhdCBpcyBwb3NzaWJsZS4gSWYgbmVpdGhlciByZXBlYXQgbm9yIGVuZERhdGUgaXMgcHJvdmlkZWQgdHJhbnNmZXIgd2lsbCBiZSBleGVjdXRlZCB1bnRpbCBjYW5jZWxlZFxuICAgICAqL1xuICAgIFtcInJlcGVhdFwiXT86IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBJbmRpY2F0ZXMgc2tpcCBpbnRlcnZhbCBvZiB0cmFuc2Zlci4gMSB3b3VsZCBtZWFuIGV4ZWN1dGUgZXZlcnkgdGltZSwgMiAtIGV2ZXJ5IG90aGVyIHRpbWVcbiAgICAgKi9cbiAgICBbXCJldmVyeVwiXT86IERyYWZ0U2NoZWR1bGUuRXZlcnlFbnVtO1xuICAgIC8qKlxuICAgICAqIEFkZGl0aW9uYWwgcHJvcGVydGllc1xuICAgICAqL1xuICAgIFtcImFkZGl0aW9uc1wiXT86IHsgW2tleTogc3RyaW5nXTogc3RyaW5nOyB9O1xufVxuZXhwb3J0IG5hbWVzcGFjZSBEcmFmdFNjaGVkdWxlIHtcbiAgICBleHBvcnQgdHlwZSBOb25Xb3JraW5nRGF5RXhlY3V0aW9uU3RyYXRlZ3lFbnVtID0gJ0JFRk9SRScgfCAnQUZURVInIHwgJ05PTkUnO1xuICAgIGV4cG9ydCBjb25zdCBOb25Xb3JraW5nRGF5RXhlY3V0aW9uU3RyYXRlZ3lFbnVtID0ge1xuICAgICAgICBCRUZPUkU6ICdCRUZPUkUnIGFzIE5vbldvcmtpbmdEYXlFeGVjdXRpb25TdHJhdGVneUVudW0sXG4gICAgICAgIEFGVEVSOiAnQUZURVInIGFzIE5vbldvcmtpbmdEYXlFeGVjdXRpb25TdHJhdGVneUVudW0sXG4gICAgICAgIE5PTkU6ICdOT05FJyBhcyBOb25Xb3JraW5nRGF5RXhlY3V0aW9uU3RyYXRlZ3lFbnVtXG4gICAgfTtcbiAgICBleHBvcnQgdHlwZSBUcmFuc2ZlckZyZXF1ZW5jeUVudW0gPSAnT05DRScgfCAnREFJTFknIHwgJ1dFRUtMWScgfCAnQklXRUVLTFknIHwgJ01PTlRITFknIHwgJ1FVQVJURVJMWScgfCAnWUVBUkxZJztcbiAgICBleHBvcnQgY29uc3QgVHJhbnNmZXJGcmVxdWVuY3lFbnVtID0ge1xuICAgICAgICBPTkNFOiAnT05DRScgYXMgVHJhbnNmZXJGcmVxdWVuY3lFbnVtLFxuICAgICAgICBEQUlMWTogJ0RBSUxZJyBhcyBUcmFuc2ZlckZyZXF1ZW5jeUVudW0sXG4gICAgICAgIFdFRUtMWTogJ1dFRUtMWScgYXMgVHJhbnNmZXJGcmVxdWVuY3lFbnVtLFxuICAgICAgICBCSVdFRUtMWTogJ0JJV0VFS0xZJyBhcyBUcmFuc2ZlckZyZXF1ZW5jeUVudW0sXG4gICAgICAgIE1PTlRITFk6ICdNT05USExZJyBhcyBUcmFuc2ZlckZyZXF1ZW5jeUVudW0sXG4gICAgICAgIFFVQVJURVJMWTogJ1FVQVJURVJMWScgYXMgVHJhbnNmZXJGcmVxdWVuY3lFbnVtLFxuICAgICAgICBZRUFSTFk6ICdZRUFSTFknIGFzIFRyYW5zZmVyRnJlcXVlbmN5RW51bVxuICAgIH07XG4gICAgZXhwb3J0IHR5cGUgRXZlcnlFbnVtID0gJzEnIHwgJzInO1xuICAgIGV4cG9ydCBjb25zdCBFdmVyeUVudW0gPSB7XG4gICAgICAgIF8xOiAnMScgYXMgRXZlcnlFbnVtLFxuICAgICAgICBfMjogJzInIGFzIEV2ZXJ5RW51bVxuICAgIH07XG59XG5cblxuIl19