import { NgZone } from '@angular/core';
import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class NotificationsInterceptor implements HttpInterceptor {
    private readonly ngZone;
    private readonly areMocksEnabled;
    private readonly isEmptyNotificationsEnabled;
    private readonly isNoLimitsNotificationsEnabled;
    private readonly liveNotificationFreq;
    private readonly mockStrategy;
    private readonly readNotifications;
    private readonly newNotifications;
    private popupsCount;
    private notificationsStreamHandled;
    private readonly notificationRequestUnreadIds;
    constructor(ngZone: NgZone);
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    private handleUnreadCountRequest;
    private handleNotificationsRequest;
    private handleReadAllNotificationRequest;
    private handleReadNotificationRequest;
    private handleNotificationsStreamRequest;
    private getMockStrategy;
    static ɵfac: i0.ɵɵFactoryDeclaration<NotificationsInterceptor, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NotificationsInterceptor>;
}
