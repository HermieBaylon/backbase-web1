{"version":3,"file":"backbase-consolidated-approvals-beta-http-ang.umd.js","sources":["../../model/accessContextScope.ts","../../model/activeContactStatus.ts","../../model/approvalRequestAction.ts","../../model/approvalRequestStatus.ts","../../model/approvalStatus.ts","../../model/chargeBearer.ts","../../model/exchangeRateInformation.ts","../../model/instructionPriority.ts","../../model/involvedPartyRole.ts","../../model/logicalOperator.ts","../../model/paymentAction.ts","../../model/paymentMode.ts","../../model/recordStatus.ts","../../model/remittanceInformation.ts","../../model/schedule.ts","../../model/schemeNames.ts","../../model/status.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/consolidatedApprovalsCount.service.ts","../../api/consolidatedApprovalsCount.service.mocks.ts","../../api/contactApprovals.service.ts","../../api/contactApprovals.service.mocks.ts","../../api/entitlementsApprovals.service.ts","../../api/entitlementsApprovals.service.mocks.ts","../../api/paymentApprovals.service.ts","../../api/paymentApprovals.service.mocks.ts"],"sourcesContent":["/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Access context scope of the contact, either ServiceAgreement (SA), LegalEntity (LE) or User (USER). \n */\nexport type AccessContextScope = 'SA' | 'LE' | 'USER';\n\nexport const AccessContextScope = {\n    SA: 'SA' as AccessContextScope,\n    LE: 'LE' as AccessContextScope,\n    USER: 'USER' as AccessContextScope\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The active status of a contact. When approvals is not enabled ACTIVE is the only value possible. Otherwise following values mean: ACTIVE - fully approved; PENDING_APPROVAL - the contact needs further approval to become active. \n */\nexport type ActiveContactStatus = 'ACTIVE' | 'PENDING_APPROVAL';\n\nexport const ActiveContactStatus = {\n    ACTIVE: 'ACTIVE' as ActiveContactStatus,\n    PENDINGAPPROVAL: 'PENDING_APPROVAL' as ActiveContactStatus\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of the operation performed on a contact.\n */\nexport type ApprovalRequestAction = 'CREATE' | 'UPDATE' | 'DELETE';\n\nexport const ApprovalRequestAction = {\n    CREATE: 'CREATE' as ApprovalRequestAction,\n    UPDATE: 'UPDATE' as ApprovalRequestAction,\n    DELETE: 'DELETE' as ApprovalRequestAction\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The status of the approval request\n */\nexport type ApprovalRequestStatus = 'ENTERED' | 'REJECTED';\n\nexport const ApprovalRequestStatus = {\n    ENTERED: 'ENTERED' as ApprovalRequestStatus,\n    REJECTED: 'REJECTED' as ApprovalRequestStatus\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The status of the approval.\n */\nexport type ApprovalStatus = 'PENDING' | 'APPROVED' | 'REJECTED' | 'CANCELLED';\n\nexport const ApprovalStatus = {\n    PENDING: 'PENDING' as ApprovalStatus,\n    APPROVED: 'APPROVED' as ApprovalStatus,\n    REJECTED: 'REJECTED' as ApprovalStatus,\n    CANCELLED: 'CANCELLED' as ApprovalStatus\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Indicated who pays the fees for an international transfer. Possible values: OUR(originator), BEN(beneficiary or SHA(shared).\n */\nexport type ChargeBearer = 'OUR' | 'BEN' | 'SHA';\n\nexport const ChargeBearer = {\n    OUR: 'OUR' as ChargeBearer,\n    BEN: 'BEN' as ChargeBearer,\n    SHA: 'SHA' as ChargeBearer\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The detailed information on the exchange rate that has been used in the payment transaction.\n */\nexport interface ExchangeRateInformation { \n    /**\n     * Currency in which the rate of exchange is expressed in a currency exchange.\n     */\n    [\"currencyCode\"]?: string;\n    /**\n     * The factor used for conversion of an amount from one currency to another.\n     */\n    [\"rate\"]?: string;\n    /**\n     * Specifies the type used to complete the currency exchange.\n     */\n    [\"rateType\"]?: ExchangeRateInformation.RateTypeEnum;\n    /**\n     * Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent.\n     */\n    [\"contractIdentification\"]?: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace ExchangeRateInformation {\n    export type RateTypeEnum = 'ACTUAL' | 'INDICATIVE' | 'AGREED';\n    export const RateTypeEnum = {\n        ACTUAL: 'ACTUAL' as RateTypeEnum,\n        INDICATIVE: 'INDICATIVE' as RateTypeEnum,\n        AGREED: 'AGREED' as RateTypeEnum\n    };\n}\n\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Specify the priority of execution of the payment order.\n */\nexport type InstructionPriority = 'NORM' | 'HIGH';\n\nexport const InstructionPriority = {\n    NORM: 'NORM' as InstructionPriority,\n    HIGH: 'HIGH' as InstructionPriority\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * These are the possible values the role of an involved party can  have.\n */\nexport type InvolvedPartyRole = 'CREDITOR' | 'DEBTOR';\n\nexport const InvolvedPartyRole = {\n    CREDITOR: 'CREDITOR' as InvolvedPartyRole,\n    DEBTOR: 'DEBTOR' as InvolvedPartyRole\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Type of logical operation, please see Community for each operation implementation\n */\nexport type LogicalOperator = 'OR';\n\nexport const LogicalOperator = {\n    OR: 'OR' as LogicalOperator\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The actions that can be performed by the user (with the current context). This field is not evaluated when payment is requested by support employee on behalf of another user.\n */\nexport type PaymentAction = 'APPROVE' | 'FINAL_APPROVE' | 'REJECT' | 'CANCEL' | 'DELETE' | 'EDIT' | 'CREATE';\n\nexport const PaymentAction = {\n    APPROVE: 'APPROVE' as PaymentAction,\n    FINALAPPROVE: 'FINAL_APPROVE' as PaymentAction,\n    REJECT: 'REJECT' as PaymentAction,\n    CANCEL: 'CANCEL' as PaymentAction,\n    DELETE: 'DELETE' as PaymentAction,\n    EDIT: 'EDIT' as PaymentAction,\n    CREATE: 'CREATE' as PaymentAction\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Denotes whether payment will be single or will be recurring\n */\nexport type PaymentMode = 'SINGLE' | 'RECURRING';\n\nexport const PaymentMode = {\n    SINGLE: 'SINGLE' as PaymentMode,\n    RECURRING: 'RECURRING' as PaymentMode\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The list of accepted statuses that a user can request to update an approval to.\n */\nexport type RecordStatus = 'APPROVED' | 'REJECTED';\n\nexport const RecordStatus = {\n    APPROVED: 'APPROVED' as RecordStatus,\n    REJECTED: 'REJECTED' as RecordStatus\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * This is the object representation of the remittance info and can contain different types of remittance info. It is only used in responses, not for input requests!\n */\nexport interface RemittanceInformation { \n    /**\n     * When type is structured it consists of some XML tags used when the transaction was uploaded.\n     */\n    [\"type\"]: RemittanceInformation.TypeEnum;\n    /**\n     * The content of the remittance information.\n     */\n    [\"content\"]: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace RemittanceInformation {\n    export type TypeEnum = 'STRUCTURED' | 'UNSTRUCTURED';\n    export const TypeEnum = {\n        STRUCTURED: 'STRUCTURED' as TypeEnum,\n        UNSTRUCTURED: 'UNSTRUCTURED' as TypeEnum\n    };\n}\n\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Schedule for recurring transfer. Mandatory if paymentMode is RECURRING\n */\nexport interface Schedule { \n    /**\n     * Strategy for executing payments on non-working days\n     */\n    [\"nonWorkingDayExecutionStrategy\"]?: Schedule.NonWorkingDayExecutionStrategyEnum;\n    /**\n     * Denotes how frequently the transfer should be made\n     */\n    [\"transferFrequency\"]: Schedule.TransferFrequencyEnum;\n    /**\n     * Denotes day on which transfer should be executed. For WEEKLY transferFrequency it will be 1..7 indicating weekday. For BIWEEKLY it will be 1..14 indicating the day of the two week period. For MONTHLY it will be 1..31 indicating day of month. For YEARLY it will be 1..12 indicating month of the year.\n     */\n    [\"on\"]: number;\n    /**\n     * When to start executing the schedule. First transfer will be executed on first calculated date by schedule after this date.\n     */\n    [\"startDate\"]: string;\n    /**\n     * When to stop transfers. Transfers will not be executed after this date. Only one of endDate and repeat is possible. If neither repeat nor endDate is provided transfer will be executed until canceled\n     */\n    [\"endDate\"]?: string;\n    /**\n     * Number of transfer to be executed. Only one of endDate and repeat is possible. If neither repeat nor endDate is provided transfer will be executed until canceled\n     */\n    [\"repeat\"]?: number;\n    /**\n     * Indicates skip interval of transfer. 1 would mean execute every time, 2 - every other time\n     */\n    [\"every\"]: Schedule.EveryEnum;\n    /**\n     * Date when the next payment will be executed, taking in consideration bank holidays and cut-off times. It will be only retrieved when getting payments, it will be dismissed when creating or updating.\n     */\n    [\"nextExecutionDate\"]?: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace Schedule {\n    export type NonWorkingDayExecutionStrategyEnum = 'BEFORE' | 'AFTER' | 'NONE';\n    export const NonWorkingDayExecutionStrategyEnum = {\n        BEFORE: 'BEFORE' as NonWorkingDayExecutionStrategyEnum,\n        AFTER: 'AFTER' as NonWorkingDayExecutionStrategyEnum,\n        NONE: 'NONE' as NonWorkingDayExecutionStrategyEnum\n    };\n    export type TransferFrequencyEnum = 'ONCE' | 'DAILY' | 'WEEKLY' | 'BIWEEKLY' | 'MONTHLY' | 'QUARTERLY' | 'YEARLY';\n    export const TransferFrequencyEnum = {\n        ONCE: 'ONCE' as TransferFrequencyEnum,\n        DAILY: 'DAILY' as TransferFrequencyEnum,\n        WEEKLY: 'WEEKLY' as TransferFrequencyEnum,\n        BIWEEKLY: 'BIWEEKLY' as TransferFrequencyEnum,\n        MONTHLY: 'MONTHLY' as TransferFrequencyEnum,\n        QUARTERLY: 'QUARTERLY' as TransferFrequencyEnum,\n        YEARLY: 'YEARLY' as TransferFrequencyEnum\n    };\n    export type EveryEnum = '1' | '2';\n    export const EveryEnum = {\n        _1: '1' as EveryEnum,\n        _2: '2' as EveryEnum\n    };\n}\n\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * This describes the type of the account identifier. ID will mean it refers to an account known within DBS.\n */\nexport type SchemeNames = 'IBAN' | 'BBAN' | 'ID' | 'EXTERNAL_ID' | 'EMAIL' | 'MOBILE';\n\nexport const SchemeNames = {\n    IBAN: 'IBAN' as SchemeNames,\n    BBAN: 'BBAN' as SchemeNames,\n    ID: 'ID' as SchemeNames,\n    EXTERNALID: 'EXTERNAL_ID' as SchemeNames,\n    EMAIL: 'EMAIL' as SchemeNames,\n    MOBILE: 'MOBILE' as SchemeNames\n};\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * The internal DBS status of the payment order..\n */\nexport type Status = 'DRAFT' | 'ENTERED' | 'READY' | 'ACCEPTED' | 'PROCESSED' | 'REJECTED' | 'CANCELLED' | 'CANCELLATION_PENDING' | 'CONFIRMATION_PENDING' | 'CONFIRMATION_DECLINED' | 'REPLACED';\n\nexport const Status = {\n    DRAFT: 'DRAFT' as Status,\n    ENTERED: 'ENTERED' as Status,\n    READY: 'READY' as Status,\n    ACCEPTED: 'ACCEPTED' as Status,\n    PROCESSED: 'PROCESSED' as Status,\n    REJECTED: 'REJECTED' as Status,\n    CANCELLED: 'CANCELLED' as Status,\n    CANCELLATIONPENDING: 'CANCELLATION_PENDING' as Status,\n    CONFIRMATIONPENDING: 'CONFIRMATION_PENDING' as Status,\n    CONFIRMATIONDECLINED: 'CONFIRMATION_DECLINED' as Status,\n    REPLACED: 'REPLACED' as Status\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const CONSOLIDATED_APPROVALS_BETA_BASE_PATH = new InjectionToken<string>('CONSOLIDATED_APPROVALS_BETA_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface ConsolidatedApprovalsBetaConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class ConsolidatedApprovalsBetaConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: ConsolidatedApprovalsBetaConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link ConsolidatedApprovalsBetaConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link ConsolidatedApprovalsBetaConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module ConsolidatedApprovalsBetaConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { ConsolidatedApprovalsBetaConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class ConsolidatedApprovalsBetaApiModule {\n    public static forRoot(configurationFactory: () => ConsolidatedApprovalsBetaConfiguration): ModuleWithProviders<ConsolidatedApprovalsBetaApiModule> {\n        return {\n            ngModule: ConsolidatedApprovalsBetaApiModule,\n            providers: [ { provide: ConsolidatedApprovalsBetaConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ConsolidatedApprovalsBetaApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: ConsolidatedApprovalsBetaConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('ConsolidatedApprovalsBetaApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { ServiceAgreementApprovalsCount } from '../model/models';\n\nimport { CONSOLIDATED_APPROVALS_BETA_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ConsolidatedApprovalsBetaConfiguration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsolidatedApprovalsCountHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ConsolidatedApprovalsBetaConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CONSOLIDATED_APPROVALS_BETA_BASE_PATH) basePath: string, @Optional() configuration: ConsolidatedApprovalsBetaConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieves pending approvals count per service agreements for logged user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalsCount(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ServiceAgreementApprovalsCount>>;\n    /**\n     * Retrieves pending approvals count per service agreements for logged user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalsCount(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ServiceAgreementApprovalsCount>>>;\n    /**\n     * Retrieves pending approvals count per service agreements for logged user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalsCount(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ServiceAgreementApprovalsCount>>>;\n    /**\n     * Retrieves pending approvals count per service agreements for logged user.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getApprovalsCount(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ServiceAgreementApprovalsCount>>(`${this.configuration.basePath}/client-api/v2/approvals-private/count`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getApprovalsCountUrl(): string {\n        return `${this.configuration.basePath}/client-api/v2/approvals-private/count`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/approvals-private/count URL pattern\n*/\nexport const ConsolidatedApprovalsCountHttpServiceGetApprovalsCountMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approvals-private/count\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n  \"serviceAgreementName\" : \"My Service Agreement\",\n  \"totalApprovals\" : 12,\n  \"resources\" : [ {\n    \"resource\" : \"Payments\",\n    \"approvalsCount\" : 5\n  }, {\n    \"resource\" : \"Contacts\",\n    \"approvalsCount\" : 3\n  }, {\n    \"resource\" : \"Entitlements\",\n    \"approvalsCount\" : 4\n  } ]\n}, {\n  \"serviceAgreementId\" : \"d5f67fd9-1234-48d9-b38a-3f8b24d6c9ac\",\n  \"serviceAgreementName\" : \"Yet another Service Agreement\",\n  \"totalApprovals\" : 18,\n  \"resources\" : [ {\n    \"resource\" : \"Payments\",\n    \"approvalsCount\" : 10\n  }, {\n    \"resource\" : \"Contacts\",\n    \"approvalsCount\" : 5\n  }, {\n    \"resource\" : \"Entitlements\",\n    \"approvalsCount\" : 3\n  } ]\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ConsolidatedApprovalsCountHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/approvals-private/count\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n  \"serviceAgreementName\" : \"My Service Agreement\",\n  \"totalApprovals\" : 12,\n  \"resources\" : [ {\n    \"resource\" : \"Payments\",\n    \"approvalsCount\" : 5\n  }, {\n    \"resource\" : \"Contacts\",\n    \"approvalsCount\" : 3\n  }, {\n    \"resource\" : \"Entitlements\",\n    \"approvalsCount\" : 4\n  } ]\n}, {\n  \"serviceAgreementId\" : \"d5f67fd9-1234-48d9-b38a-3f8b24d6c9ac\",\n  \"serviceAgreementName\" : \"Yet another Service Agreement\",\n  \"totalApprovals\" : 18,\n  \"resources\" : [ {\n    \"resource\" : \"Payments\",\n    \"approvalsCount\" : 10\n  }, {\n    \"resource\" : \"Contacts\",\n    \"approvalsCount\" : 5\n  }, {\n    \"resource\" : \"Entitlements\",\n    \"approvalsCount\" : 3\n  } ]\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ContactApprovalItem } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { PostFilterApprovalsRequest } from '../model/models';\n\nimport { CONSOLIDATED_APPROVALS_BETA_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ConsolidatedApprovalsBetaConfiguration }                                     from '../configuration';\n\n\nexport interface PostFilterContactApprovalsRequestParams {\n    [\"postFilterApprovalsRequest\"]: PostFilterApprovalsRequest;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor. */\n    [\"size\"]?: number;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactApprovalsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ConsolidatedApprovalsBetaConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CONSOLIDATED_APPROVALS_BETA_BASE_PATH) basePath: string, @Optional() configuration: ConsolidatedApprovalsBetaConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieves filtered list of contact approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterContactApprovals(requestParameters: PostFilterContactApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ContactApprovalItem>>;\n    /**\n     * Retrieves filtered list of contact approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterContactApprovals(requestParameters: PostFilterContactApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ContactApprovalItem>>>;\n    /**\n     * Retrieves filtered list of contact approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterContactApprovals(requestParameters: PostFilterContactApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ContactApprovalItem>>>;\n    /**\n     * Retrieves filtered list of contact approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterContactApprovals(requestParameters: PostFilterContactApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postFilterApprovalsRequest = requestParameters[\"postFilterApprovalsRequest\"];\n        if (_postFilterApprovalsRequest === null || _postFilterApprovalsRequest === undefined) {\n            throw new Error('Required parameter postFilterApprovalsRequest was null or undefined when calling postFilterContactApprovals.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Array<ContactApprovalItem>>(`${this.configuration.basePath}/client-api/v2/approvals-private/contacts/filter`,\n            _postFilterApprovalsRequest,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postFilterContactApprovalsUrl(requestParameters: PostFilterContactApprovalsRequestParams): string {\n        const _postFilterApprovalsRequest = requestParameters[\"postFilterApprovalsRequest\"];\n        if (_postFilterApprovalsRequest === null || _postFilterApprovalsRequest === undefined) {\n            throw new Error('Required parameter postFilterApprovalsRequest was null or undefined when calling postFilterContactApprovals.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/approvals-private/contacts/filter${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/approvals-private/contacts/filter URL pattern\n*/\nexport const ContactApprovalsHttpServicePostFilterContactApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approvals-private/contacts/filter\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"contactInfo\" : {\n    \"id\" : \"0855e686-d31e-4216-b3dd-5d66161d5312\",\n    \"creatorBbId\" : \"john@example.com\",\n    \"data\" : {\n      \"id\" : \"0855e686-d31e-4216-b3dd-5d66161d536d\",\n      \"name\" : \"John Doe\",\n      \"alias\" : \"John\",\n      \"category\" : \"Employee\",\n      \"contactPerson\" : \"Jane Doe\",\n      \"phoneNumber\" : \"055512345678\",\n      \"emailId\" : \"john@example.com\",\n      \"addressLine1\" : \"Backbase enterprise\",\n      \"addressLine2\" : \"\",\n      \"streetName\" : \"Jacob Bontiusplaats 9\",\n      \"town\" : \"Amsterdam\",\n      \"postCode\" : \"1018 LL\",\n      \"countrySubDivision\" : \"North Holland\",\n      \"country\" : \"NL\",\n      \"accounts\" : [ {\n        \"name\" : \"Jane Doe\",\n        \"alias\" : \"Jane\",\n        \"accountType\" : \"SAVINGS\",\n        \"IBAN\" : \"FI21 1234 5600 0007 85\",\n        \"bankName\" : \"Test Bank\",\n        \"bankAddressLine1\" : \"QA Bank\",\n        \"bankAddressLine2\" : \"\",\n        \"bankStreetName\" : \"Jodenbreestraat 96\",\n        \"bankTown\" : \"Amsterdam\",\n        \"bankPostCode\" : \"1011NS\",\n        \"bankCountrySubDivision\" : \"North Holland\",\n        \"bankCountry\" : \"NL\",\n        \"accountHolderAddressLine1\" : \"\",\n        \"accountHolderAddressLine2\" : \"\",\n        \"accountHolderStreetName\" : \"Woestduinstraat 114-3\",\n        \"accountHolderTown\" : \"Amsterdam\",\n        \"accountHolderPostCode\" : \"1059 SP\",\n        \"accountHolderCountrySubDivision\" : \"North Holland\",\n        \"accountHolderCountry\" : \"NL\"\n      } ],\n      \"accessContextScope\" : \"SA\"\n    },\n    \"creationTime\" : \"2017-05-12T14:33:13.452Z\",\n    \"action\" : \"CREATE\",\n    \"status\" : \"ENTERED\"\n  },\n  \"approvalInfo\" : {\n    \"id\" : \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n    \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n    \"userFullName\" : \"Paddy Brian\",\n    \"externalUserId\" : \"paddy-brian\",\n    \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n    \"itemId\" : \"0855e686-d31e-4216-b3dd-5d66161d5312\",\n    \"resource\" : \"Contacts\",\n    \"function\" : \"Contacts\",\n    \"status\" : \"PENDING\",\n    \"createdAt\" : \"2018-07-22T13:44:02Z\",\n    \"records\" : [ {\n      \"id\" : \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n      \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n      \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n      \"externalUserId\" : \"robin-green\",\n      \"userFullName\" : \"Robin Green\",\n      \"approvalTypeId\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n      \"status\" : \"APPROVED\",\n      \"createdAt\" : \"2018-01-22T13:44:02Z\"\n    } ],\n    \"approvalTypes\" : [ {\n      \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n      \"name\" : \"A\",\n      \"description\" : \"1st approval\",\n      \"rank\" : 100\n    }, {\n      \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n      \"name\" : \"B\",\n      \"description\" : \"2nd approval\",\n      \"rank\" : 101\n    } ],\n    \"policy\" : {\n      \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n      \"name\" : \"Default policy\",\n      \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n      \"items\" : [ {\n        \"approvalTypeId\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n        \"approvalType\" : {\n          \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\" : \"A\",\n          \"description\" : \"1st approval\",\n          \"rank\" : 100\n        },\n        \"numberOfApprovals\" : 1\n      }, {\n        \"approvalTypeId\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n        \"approvalType\" : {\n          \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\" : \"B\",\n          \"description\" : \"2nd approval\",\n          \"rank\" : 101\n        },\n        \"numberOfApprovals\" : 1\n      } ]\n    },\n    \"canApprove\" : true,\n    \"canReject\" : true,\n    \"finalApprover\" : false\n  }\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ContactApprovalsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/approvals-private/contacts/filter\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"contactInfo\" : {\n    \"id\" : \"0855e686-d31e-4216-b3dd-5d66161d5312\",\n    \"creatorBbId\" : \"john@example.com\",\n    \"data\" : {\n      \"id\" : \"0855e686-d31e-4216-b3dd-5d66161d536d\",\n      \"name\" : \"John Doe\",\n      \"alias\" : \"John\",\n      \"category\" : \"Employee\",\n      \"contactPerson\" : \"Jane Doe\",\n      \"phoneNumber\" : \"055512345678\",\n      \"emailId\" : \"john@example.com\",\n      \"addressLine1\" : \"Backbase enterprise\",\n      \"addressLine2\" : \"\",\n      \"streetName\" : \"Jacob Bontiusplaats 9\",\n      \"town\" : \"Amsterdam\",\n      \"postCode\" : \"1018 LL\",\n      \"countrySubDivision\" : \"North Holland\",\n      \"country\" : \"NL\",\n      \"accounts\" : [ {\n        \"name\" : \"Jane Doe\",\n        \"alias\" : \"Jane\",\n        \"accountType\" : \"SAVINGS\",\n        \"IBAN\" : \"FI21 1234 5600 0007 85\",\n        \"bankName\" : \"Test Bank\",\n        \"bankAddressLine1\" : \"QA Bank\",\n        \"bankAddressLine2\" : \"\",\n        \"bankStreetName\" : \"Jodenbreestraat 96\",\n        \"bankTown\" : \"Amsterdam\",\n        \"bankPostCode\" : \"1011NS\",\n        \"bankCountrySubDivision\" : \"North Holland\",\n        \"bankCountry\" : \"NL\",\n        \"accountHolderAddressLine1\" : \"\",\n        \"accountHolderAddressLine2\" : \"\",\n        \"accountHolderStreetName\" : \"Woestduinstraat 114-3\",\n        \"accountHolderTown\" : \"Amsterdam\",\n        \"accountHolderPostCode\" : \"1059 SP\",\n        \"accountHolderCountrySubDivision\" : \"North Holland\",\n        \"accountHolderCountry\" : \"NL\"\n      } ],\n      \"accessContextScope\" : \"SA\"\n    },\n    \"creationTime\" : \"2017-05-12T14:33:13.452Z\",\n    \"action\" : \"CREATE\",\n    \"status\" : \"ENTERED\"\n  },\n  \"approvalInfo\" : {\n    \"id\" : \"b3e4692d-6772-4fb2-9446-b8f4607f49b1\",\n    \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n    \"userFullName\" : \"Paddy Brian\",\n    \"externalUserId\" : \"paddy-brian\",\n    \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n    \"itemId\" : \"0855e686-d31e-4216-b3dd-5d66161d5312\",\n    \"resource\" : \"Contacts\",\n    \"function\" : \"Contacts\",\n    \"status\" : \"PENDING\",\n    \"createdAt\" : \"2018-07-22T13:44:02Z\",\n    \"records\" : [ {\n      \"id\" : \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n      \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n      \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n      \"externalUserId\" : \"robin-green\",\n      \"userFullName\" : \"Robin Green\",\n      \"approvalTypeId\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n      \"status\" : \"APPROVED\",\n      \"createdAt\" : \"2018-01-22T13:44:02Z\"\n    } ],\n    \"approvalTypes\" : [ {\n      \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n      \"name\" : \"A\",\n      \"description\" : \"1st approval\",\n      \"rank\" : 100\n    }, {\n      \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n      \"name\" : \"B\",\n      \"description\" : \"2nd approval\",\n      \"rank\" : 101\n    } ],\n    \"policy\" : {\n      \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n      \"name\" : \"Default policy\",\n      \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n      \"items\" : [ {\n        \"approvalTypeId\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n        \"approvalType\" : {\n          \"id\" : \"ed47a5d7-1626-4e8c-819c-8c1851cb0357\",\n          \"name\" : \"A\",\n          \"description\" : \"1st approval\",\n          \"rank\" : 100\n        },\n        \"numberOfApprovals\" : 1\n      }, {\n        \"approvalTypeId\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n        \"approvalType\" : {\n          \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\" : \"B\",\n          \"description\" : \"2nd approval\",\n          \"rank\" : 101\n        },\n        \"numberOfApprovals\" : 1\n      } ]\n    },\n    \"canApprove\" : true,\n    \"canReject\" : true,\n    \"finalApprover\" : false\n  }\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { PostFilterApprovalsRequest } from '../model/models';\nimport { PostFilterEntitlementsApprovalsResponse } from '../model/models';\n\nimport { CONSOLIDATED_APPROVALS_BETA_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ConsolidatedApprovalsBetaConfiguration }                                     from '../configuration';\n\n\nexport interface PostFilterEntitlementsApprovalsRequestParams {\n    [\"postFilterApprovalsRequest\"]: PostFilterApprovalsRequest;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor. */\n    [\"size\"]?: number;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntitlementsApprovalsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ConsolidatedApprovalsBetaConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CONSOLIDATED_APPROVALS_BETA_BASE_PATH) basePath: string, @Optional() configuration: ConsolidatedApprovalsBetaConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieves filtered list of entitlements approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterEntitlementsApprovals(requestParameters: PostFilterEntitlementsApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PostFilterEntitlementsApprovalsResponse>;\n    /**\n     * Retrieves filtered list of entitlements approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterEntitlementsApprovals(requestParameters: PostFilterEntitlementsApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PostFilterEntitlementsApprovalsResponse>>;\n    /**\n     * Retrieves filtered list of entitlements approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterEntitlementsApprovals(requestParameters: PostFilterEntitlementsApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PostFilterEntitlementsApprovalsResponse>>;\n    /**\n     * Retrieves filtered list of entitlements approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterEntitlementsApprovals(requestParameters: PostFilterEntitlementsApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postFilterApprovalsRequest = requestParameters[\"postFilterApprovalsRequest\"];\n        if (_postFilterApprovalsRequest === null || _postFilterApprovalsRequest === undefined) {\n            throw new Error('Required parameter postFilterApprovalsRequest was null or undefined when calling postFilterEntitlementsApprovals.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<PostFilterEntitlementsApprovalsResponse>(`${this.configuration.basePath}/client-api/v2/approvals-private/entitlements/filter`,\n            _postFilterApprovalsRequest,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postFilterEntitlementsApprovalsUrl(requestParameters: PostFilterEntitlementsApprovalsRequestParams): string {\n        const _postFilterApprovalsRequest = requestParameters[\"postFilterApprovalsRequest\"];\n        if (_postFilterApprovalsRequest === null || _postFilterApprovalsRequest === undefined) {\n            throw new Error('Required parameter postFilterApprovalsRequest was null or undefined when calling postFilterEntitlementsApprovals.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/approvals-private/entitlements/filter${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/approvals-private/entitlements/filter URL pattern\n*/\nexport const EntitlementsApprovalsHttpServicePostFilterEntitlementsApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approvals-private/entitlements/filter\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const EntitlementsApprovalsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/approvals-private/entitlements/filter\",\n        method: \"POST\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Consolidated Approvals client\n * End users retrieve consolidated approvals log from capabilities that support approvals\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { ForbiddenError } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { PaymentApprovalItem } from '../model/models';\nimport { PostFilterApprovalsRequest } from '../model/models';\n\nimport { CONSOLIDATED_APPROVALS_BETA_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { ConsolidatedApprovalsBetaConfiguration }                                     from '../configuration';\n\n\nexport interface PostFilterPaymentApprovalsRequestParams {\n    [\"postFilterApprovalsRequest\"]: PostFilterApprovalsRequest;\n    /** Page Number. Skip over pages of elements by specifying a start value for the query */\n    [\"from\"]?: number;\n    /** Limit the number of elements on the response. When used in combination with cursor, the value is allowed to be a negative number to indicate requesting records upwards from the starting point indicated by the cursor. */\n    [\"size\"]?: number;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentApprovalsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new ConsolidatedApprovalsBetaConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(CONSOLIDATED_APPROVALS_BETA_BASE_PATH) basePath: string, @Optional() configuration: ConsolidatedApprovalsBetaConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Retrieves filtered list of payment approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterPaymentApprovals(requestParameters: PostFilterPaymentApprovalsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<PaymentApprovalItem>>;\n    /**\n     * Retrieves filtered list of payment approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterPaymentApprovals(requestParameters: PostFilterPaymentApprovalsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<PaymentApprovalItem>>>;\n    /**\n     * Retrieves filtered list of payment approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterPaymentApprovals(requestParameters: PostFilterPaymentApprovalsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<PaymentApprovalItem>>>;\n    /**\n     * Retrieves filtered list of payment approvals.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postFilterPaymentApprovals(requestParameters: PostFilterPaymentApprovalsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _postFilterApprovalsRequest = requestParameters[\"postFilterApprovalsRequest\"];\n        if (_postFilterApprovalsRequest === null || _postFilterApprovalsRequest === undefined) {\n            throw new Error('Required parameter postFilterApprovalsRequest was null or undefined when calling postFilterPaymentApprovals.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Array<PaymentApprovalItem>>(`${this.configuration.basePath}/client-api/v2/approvals-private/payments/filter`,\n            _postFilterApprovalsRequest,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public postFilterPaymentApprovalsUrl(requestParameters: PostFilterPaymentApprovalsRequestParams): string {\n        const _postFilterApprovalsRequest = requestParameters[\"postFilterApprovalsRequest\"];\n        if (_postFilterApprovalsRequest === null || _postFilterApprovalsRequest === undefined) {\n            throw new Error('Required parameter postFilterApprovalsRequest was null or undefined when calling postFilterPaymentApprovals.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v2/approvals-private/payments/filter${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v2/approvals-private/payments/filter URL pattern\n*/\nexport const PaymentApprovalsHttpServicePostFilterPaymentApprovalsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v2/approvals-private/payments/filter\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ {\n  \"paymentOrderInfo\" : {\n    \"id\" : \"cddf639a-3cbe-4162-a925-dd8909b43bfb\",\n    \"approvalId\" : \"12aacd0c-2648-4452-b04f-3fc160bda571\",\n    \"status\" : \"ENTERED\",\n    \"createdBy\" : \"u0001012\",\n    \"createdAt\" : \"2022-04-01T11:27:59.416190Z\",\n    \"updatedBy\" : \"u0001012\",\n    \"updatedAt\" : \"2022-04-01T11:27:59.416190Z\",\n    \"actions\" : [ \"APPROVE\", \"REJECT\" ],\n    \"intraLegalEntity\" : false,\n    \"originatorAccountCurrency\" : \"EUR\",\n    \"originator\" : {\n      \"name\" : \"vPBxYC\",\n      \"role\" : \"DEBTOR\",\n      \"postalAddress\" : {\n        \"addressLine1\" : \"nwRlOk\",\n        \"addressLine2\" : \"mzZWeZbz\",\n        \"streetName\" : \"vKlNcfHRUUEiJm\",\n        \"postCode\" : \"177135\",\n        \"town\" : \"gXNt\",\n        \"countrySubDivision\" : \"dMptgmoC\",\n        \"country\" : \"AQ\"\n      }\n    },\n    \"originatorAccount\" : {\n      \"arrangementId\" : \"903309c5-1b07-4043-b46b-4a022bdb1b41\",\n      \"externalArrangementId\" : \"0000000000000001bwdCoVXvNuDrYTSw\",\n      \"identification\" : {\n        \"identification\" : \"LT526319689655711037\",\n        \"schemeName\" : \"IBAN\"\n      }\n    },\n    \"batchBooking\" : false,\n    \"instructionPriority\" : \"NORM\",\n    \"requestedExecutionDate\" : \"2022-04-01\",\n    \"paymentMode\" : \"SINGLE\",\n    \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n    \"transferTransactionInformation\" : {\n      \"counterparty\" : {\n        \"name\" : \"Sleek Copper Shirt\",\n        \"role\" : \"CREDITOR\"\n      },\n      \"counterpartyAccount\" : {\n        \"identification\" : {\n          \"identification\" : \"IE06YJVA15965129386257\",\n          \"schemeName\" : \"IBAN\"\n        }\n      },\n      \"instructedAmount\" : {\n        \"amount\" : \"50.00000\",\n        \"currencyCode\" : \"EUR\"\n      }\n    },\n    \"totalAmount\" : {\n      \"amount\" : \"50.00000\",\n      \"currencyCode\" : \"EUR\"\n    }\n  },\n  \"approvalInfo\" : {\n    \"id\" : \"12aacd0c-2648-4452-b04f-3fc160bda571\",\n    \"userId\" : \"2226d9be-4323-40e8-acec-988eab4777f3\",\n    \"serviceAgreementId\" : \"8a49bc667fe4c35e017fe4e16b1f016a\",\n    \"itemId\" : \"cddf639a-3cbe-4162-a925-dd8909b43bfb\",\n    \"dataAccessItemId\" : \"903309c5-1b07-4043-b46b-4a022bdb1b41\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA CT\",\n    \"status\" : \"PENDING\",\n    \"canApprove\" : true,\n    \"canReject\" : true,\n    \"finalApprover\" : false,\n    \"createdAt\" : \"2022-04-01T11:27:58.800336Z\"\n  }\n}, {\n  \"paymentOrderInfo\" : {\n    \"id\" : \"f4bc422a-1d7d-4a3f-aad8-52882fe2f2dd\",\n    \"approvalId\" : \"98b07ac0-2360-453b-8dc9-6af7b5228bec\",\n    \"status\" : \"ENTERED\",\n    \"createdBy\" : \"u0001012\",\n    \"createdAt\" : \"2022-04-01T11:28:00.643542Z\",\n    \"updatedBy\" : \"u0001012\",\n    \"updatedAt\" : \"2022-04-01T11:28:00.643542Z\",\n    \"actions\" : [ \"APPROVE\", \"REJECT\" ],\n    \"intraLegalEntity\" : false,\n    \"originatorAccountCurrency\" : \"EUR\",\n    \"originator\" : {\n      \"name\" : \"vPBxYC\",\n      \"role\" : \"DEBTOR\",\n      \"postalAddress\" : {\n        \"addressLine1\" : \"nwRlOk\",\n        \"addressLine2\" : \"mzZWeZbz\",\n        \"streetName\" : \"vKlNcfHRUUEiJm\",\n        \"postCode\" : \"177135\",\n        \"town\" : \"gXNt\",\n        \"countrySubDivision\" : \"dMptgmoC\",\n        \"country\" : \"AQ\"\n      }\n    },\n    \"originatorAccount\" : {\n      \"arrangementId\" : \"903309c5-1b07-4043-b46b-4a022bdb1b41\",\n      \"externalArrangementId\" : \"0000000000000001bwdCoVXvNuDrYTSw\",\n      \"identification\" : {\n        \"identification\" : \"LT526319689655711037\",\n        \"schemeName\" : \"IBAN\"\n      }\n    },\n    \"batchBooking\" : false,\n    \"instructionPriority\" : \"NORM\",\n    \"requestedExecutionDate\" : \"2022-04-01\",\n    \"paymentMode\" : \"SINGLE\",\n    \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n    \"transferTransactionInformation\" : {\n      \"counterparty\" : {\n        \"name\" : \"Sleek Wooden Table\",\n        \"role\" : \"CREDITOR\"\n      },\n      \"counterpartyAccount\" : {\n        \"identification\" : {\n          \"identification\" : \"SM37C1125812374QXIKVA5ZKH96\",\n          \"schemeName\" : \"IBAN\"\n        }\n      },\n      \"instructedAmount\" : {\n        \"amount\" : \"50.00000\",\n        \"currencyCode\" : \"EUR\"\n      }\n    },\n    \"totalAmount\" : {\n      \"amount\" : \"50.00000\",\n      \"currencyCode\" : \"EUR\"\n    }\n  },\n  \"approvalInfo\" : {\n    \"id\" : \"98b07ac0-2360-453b-8dc9-6af7b5228bec\",\n    \"userId\" : \"2226d9be-4323-40e8-acec-988eab4777f3\",\n    \"serviceAgreementId\" : \"8a49bc667fe4c35e017fe4e16cc60172\",\n    \"itemId\" : \"f4bc422a-1d7d-4a3f-aad8-52882fe2f2dd\",\n    \"dataAccessItemId\" : \"903309c5-1b07-4043-b46b-4a022bdb1b41\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA CT\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"EUR\",\n      \"amount\" : \"50.00000\"\n    },\n    \"status\" : \"PENDING\",\n    \"records\" : [ {\n      \"id\" : \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n      \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n      \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n      \"approvalTypeId\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n      \"status\" : \"APPROVED\",\n      \"createdAt\" : \"2018-01-22T13:44:02Z\"\n    } ],\n    \"approvalTypes\" : [ {\n      \"id\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n      \"name\" : \"A\",\n      \"description\" : \"1st approval\",\n      \"rank\" : 100\n    }, {\n      \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n      \"name\" : \"B\",\n      \"description\" : \"2nd approval\",\n      \"rank\" : 101\n    } ],\n    \"policy\" : {\n      \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n      \"name\" : \"Default policy\",\n      \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n      \"items\" : [ {\n        \"approvalTypeId\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n        \"approvalType\" : {\n          \"id\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n          \"name\" : \"A\",\n          \"description\" : \"1st approval\",\n          \"rank\" : 100\n        },\n        \"numberOfApprovals\" : 1\n      }, {\n        \"approvalTypeId\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n        \"approvalType\" : {\n          \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\" : \"B\",\n          \"description\" : \"2nd approval\",\n          \"rank\" : 101\n        },\n        \"numberOfApprovals\" : 1\n      } ]\n    },\n    \"canApprove\" : true,\n    \"canReject\" : true,\n    \"finalApprover\" : false,\n    \"createdAt\" : \"2022-04-01T11:28:00.418198Z\"\n  }\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const PaymentApprovalsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v2/approvals-private/payments/filter\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ {\n  \"paymentOrderInfo\" : {\n    \"id\" : \"cddf639a-3cbe-4162-a925-dd8909b43bfb\",\n    \"approvalId\" : \"12aacd0c-2648-4452-b04f-3fc160bda571\",\n    \"status\" : \"ENTERED\",\n    \"createdBy\" : \"u0001012\",\n    \"createdAt\" : \"2022-04-01T11:27:59.416190Z\",\n    \"updatedBy\" : \"u0001012\",\n    \"updatedAt\" : \"2022-04-01T11:27:59.416190Z\",\n    \"actions\" : [ \"APPROVE\", \"REJECT\" ],\n    \"intraLegalEntity\" : false,\n    \"originatorAccountCurrency\" : \"EUR\",\n    \"originator\" : {\n      \"name\" : \"vPBxYC\",\n      \"role\" : \"DEBTOR\",\n      \"postalAddress\" : {\n        \"addressLine1\" : \"nwRlOk\",\n        \"addressLine2\" : \"mzZWeZbz\",\n        \"streetName\" : \"vKlNcfHRUUEiJm\",\n        \"postCode\" : \"177135\",\n        \"town\" : \"gXNt\",\n        \"countrySubDivision\" : \"dMptgmoC\",\n        \"country\" : \"AQ\"\n      }\n    },\n    \"originatorAccount\" : {\n      \"arrangementId\" : \"903309c5-1b07-4043-b46b-4a022bdb1b41\",\n      \"externalArrangementId\" : \"0000000000000001bwdCoVXvNuDrYTSw\",\n      \"identification\" : {\n        \"identification\" : \"LT526319689655711037\",\n        \"schemeName\" : \"IBAN\"\n      }\n    },\n    \"batchBooking\" : false,\n    \"instructionPriority\" : \"NORM\",\n    \"requestedExecutionDate\" : \"2022-04-01\",\n    \"paymentMode\" : \"SINGLE\",\n    \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n    \"transferTransactionInformation\" : {\n      \"counterparty\" : {\n        \"name\" : \"Sleek Copper Shirt\",\n        \"role\" : \"CREDITOR\"\n      },\n      \"counterpartyAccount\" : {\n        \"identification\" : {\n          \"identification\" : \"IE06YJVA15965129386257\",\n          \"schemeName\" : \"IBAN\"\n        }\n      },\n      \"instructedAmount\" : {\n        \"amount\" : \"50.00000\",\n        \"currencyCode\" : \"EUR\"\n      }\n    },\n    \"totalAmount\" : {\n      \"amount\" : \"50.00000\",\n      \"currencyCode\" : \"EUR\"\n    }\n  },\n  \"approvalInfo\" : {\n    \"id\" : \"12aacd0c-2648-4452-b04f-3fc160bda571\",\n    \"userId\" : \"2226d9be-4323-40e8-acec-988eab4777f3\",\n    \"serviceAgreementId\" : \"8a49bc667fe4c35e017fe4e16b1f016a\",\n    \"itemId\" : \"cddf639a-3cbe-4162-a925-dd8909b43bfb\",\n    \"dataAccessItemId\" : \"903309c5-1b07-4043-b46b-4a022bdb1b41\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA CT\",\n    \"status\" : \"PENDING\",\n    \"canApprove\" : true,\n    \"canReject\" : true,\n    \"finalApprover\" : false,\n    \"createdAt\" : \"2022-04-01T11:27:58.800336Z\"\n  }\n}, {\n  \"paymentOrderInfo\" : {\n    \"id\" : \"f4bc422a-1d7d-4a3f-aad8-52882fe2f2dd\",\n    \"approvalId\" : \"98b07ac0-2360-453b-8dc9-6af7b5228bec\",\n    \"status\" : \"ENTERED\",\n    \"createdBy\" : \"u0001012\",\n    \"createdAt\" : \"2022-04-01T11:28:00.643542Z\",\n    \"updatedBy\" : \"u0001012\",\n    \"updatedAt\" : \"2022-04-01T11:28:00.643542Z\",\n    \"actions\" : [ \"APPROVE\", \"REJECT\" ],\n    \"intraLegalEntity\" : false,\n    \"originatorAccountCurrency\" : \"EUR\",\n    \"originator\" : {\n      \"name\" : \"vPBxYC\",\n      \"role\" : \"DEBTOR\",\n      \"postalAddress\" : {\n        \"addressLine1\" : \"nwRlOk\",\n        \"addressLine2\" : \"mzZWeZbz\",\n        \"streetName\" : \"vKlNcfHRUUEiJm\",\n        \"postCode\" : \"177135\",\n        \"town\" : \"gXNt\",\n        \"countrySubDivision\" : \"dMptgmoC\",\n        \"country\" : \"AQ\"\n      }\n    },\n    \"originatorAccount\" : {\n      \"arrangementId\" : \"903309c5-1b07-4043-b46b-4a022bdb1b41\",\n      \"externalArrangementId\" : \"0000000000000001bwdCoVXvNuDrYTSw\",\n      \"identification\" : {\n        \"identification\" : \"LT526319689655711037\",\n        \"schemeName\" : \"IBAN\"\n      }\n    },\n    \"batchBooking\" : false,\n    \"instructionPriority\" : \"NORM\",\n    \"requestedExecutionDate\" : \"2022-04-01\",\n    \"paymentMode\" : \"SINGLE\",\n    \"paymentType\" : \"SEPA_CREDIT_TRANSFER\",\n    \"transferTransactionInformation\" : {\n      \"counterparty\" : {\n        \"name\" : \"Sleek Wooden Table\",\n        \"role\" : \"CREDITOR\"\n      },\n      \"counterpartyAccount\" : {\n        \"identification\" : {\n          \"identification\" : \"SM37C1125812374QXIKVA5ZKH96\",\n          \"schemeName\" : \"IBAN\"\n        }\n      },\n      \"instructedAmount\" : {\n        \"amount\" : \"50.00000\",\n        \"currencyCode\" : \"EUR\"\n      }\n    },\n    \"totalAmount\" : {\n      \"amount\" : \"50.00000\",\n      \"currencyCode\" : \"EUR\"\n    }\n  },\n  \"approvalInfo\" : {\n    \"id\" : \"98b07ac0-2360-453b-8dc9-6af7b5228bec\",\n    \"userId\" : \"2226d9be-4323-40e8-acec-988eab4777f3\",\n    \"serviceAgreementId\" : \"8a49bc667fe4c35e017fe4e16cc60172\",\n    \"itemId\" : \"f4bc422a-1d7d-4a3f-aad8-52882fe2f2dd\",\n    \"dataAccessItemId\" : \"903309c5-1b07-4043-b46b-4a022bdb1b41\",\n    \"resource\" : \"Payments\",\n    \"function\" : \"SEPA CT\",\n    \"amountDetails\" : {\n      \"currencyCode\" : \"EUR\",\n      \"amount\" : \"50.00000\"\n    },\n    \"status\" : \"PENDING\",\n    \"records\" : [ {\n      \"id\" : \"59f23015-9007-4391-a604-1d17e85ab3c0\",\n      \"userId\" : \"606d4532-f8d9-4a5f-840a-887baf88fa24\",\n      \"serviceAgreementId\" : \"c3f62ff9-2894-47d9-a34a-2c8b54e6e9be\",\n      \"approvalTypeId\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n      \"status\" : \"APPROVED\",\n      \"createdAt\" : \"2018-01-22T13:44:02Z\"\n    } ],\n    \"approvalTypes\" : [ {\n      \"id\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n      \"name\" : \"A\",\n      \"description\" : \"1st approval\",\n      \"rank\" : 100\n    }, {\n      \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n      \"name\" : \"B\",\n      \"description\" : \"2nd approval\",\n      \"rank\" : 101\n    } ],\n    \"policy\" : {\n      \"id\" : \"6546c424-d3b1-4848-bbda-31cd44ab6915\",\n      \"name\" : \"Default policy\",\n      \"description\" : \"A default policy that requires two approvals of different types: A + B\",\n      \"items\" : [ {\n        \"approvalTypeId\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n        \"approvalType\" : {\n          \"id\" : \"8b4cf4ba-1b6d-43fe-bb44-3c762e0ba5c1\",\n          \"name\" : \"A\",\n          \"description\" : \"1st approval\",\n          \"rank\" : 100\n        },\n        \"numberOfApprovals\" : 1\n      }, {\n        \"approvalTypeId\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n        \"approvalType\" : {\n          \"id\" : \"5fa97eb5-277f-4b2c-b05d-f13d630e05c8\",\n          \"name\" : \"B\",\n          \"description\" : \"2nd approval\",\n          \"rank\" : 101\n        },\n        \"numberOfApprovals\" : 1\n      } ]\n    },\n    \"canApprove\" : true,\n    \"canReject\" : true,\n    \"finalApprover\" : false,\n    \"createdAt\" : \"2022-04-01T11:28:00.418198Z\"\n  }\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["ExchangeRateInformation","RemittanceInformation","Schedule","InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","Injectable","Inject","createMocks","HttpParams"],"mappings":"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"}