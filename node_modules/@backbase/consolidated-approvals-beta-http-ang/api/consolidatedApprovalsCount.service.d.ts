import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ServiceAgreementApprovalsCount } from '../model/models';
import { ConsolidatedApprovalsBetaConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export declare class ConsolidatedApprovalsCountHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: ConsolidatedApprovalsBetaConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: ConsolidatedApprovalsBetaConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getApprovalsCount(observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<Array<ServiceAgreementApprovalsCount>>;
    getApprovalsCount(observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<Array<ServiceAgreementApprovalsCount>>>;
    getApprovalsCount(observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<Array<ServiceAgreementApprovalsCount>>>;
    getApprovalsCountUrl(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConsolidatedApprovalsCountHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ConsolidatedApprovalsCountHttpService>;
}
