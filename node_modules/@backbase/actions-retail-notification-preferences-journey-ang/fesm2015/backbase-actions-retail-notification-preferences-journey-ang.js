import * as i0 from '@angular/core';
import { InjectionToken, Injectable, Optional, Inject, Component, Injector, NgModule } from '@angular/core';
import { secondsToMilliseconds, ActionsNotificationsPreferencesDataService, ActionsNotificationsSettingsDataService, NotificationsPreferencesBaseDataService } from '@backbase/actions-common-ang';
import { of } from 'rxjs';
import { map } from 'rxjs/operators';
import * as i5 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@angular/router';
import { provideRoutes, RouterModule } from '@angular/router';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import * as i4$1 from '@backbase/actions-product-notifications-settings-widget-ang';
import { ActionsProductNotificationsSettingsWidgetModule } from '@backbase/actions-product-notifications-settings-widget-ang';
import * as i3 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';
import * as i4 from '@backbase/product-summary-list-widget-ang';
import { ProductSummaryListWidgetModule } from '@backbase/product-summary-list-widget-ang';

const ActionsRetailNotificationPreferencesJourneyToken = new InjectionToken('ActionsRetailNotificationPreferencesJourneyConfiguration injection token');
function provideConfig(defaults) {
    return {
        provide: defaults,
        useFactory: (custom) => (Object.assign(Object.assign({}, new defaults()), custom)),
        deps: [ActionsRetailNotificationPreferencesJourneyToken],
    };
}
const configDefaults = {
    notificationDismissTime: 5,
    specificationIDs: '1, 4',
    apiMode: 'engagements',
};
class ActionsRetailNotificationPreferencesJourneyConfigService {
    constructor(staticConfigOverrides) {
        this.staticConfig = Object.assign(Object.assign({}, configDefaults), staticConfigOverrides);
    }
    /**
     * Method to get notification dismiss time preference value.
     *
     * @returns notification dismiss time in seconds
     */
    get notificationDismissTime$() {
        return of(this.staticConfig.notificationDismissTime).pipe(map(Number), map(number => (isNaN(number) ? configDefaults.notificationDismissTime : number)), map(secondsToMilliseconds));
    }
    /**
     * Method to get specification IDs.
     *
     * @returns specification IDs array
     */
    get specificationIDs$() {
        return of(this.staticConfig.specificationIDs).pipe(map(data => data.replace(/\s/g, '').split(',')));
    }
    /**
     * Method to get api mode.
     *
     * @returns api mode string
     */
    get apiMode() {
        return this.staticConfig.apiMode;
    }
}
ActionsRetailNotificationPreferencesJourneyConfigService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesJourneyConfigService, deps: [{ token: ActionsRetailNotificationPreferencesJourneyToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
ActionsRetailNotificationPreferencesJourneyConfigService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesJourneyConfigService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesJourneyConfigService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [ActionsRetailNotificationPreferencesJourneyToken]
                }] }]; } });

class ActionsRetailNotificationPreferencesViewComponent {
    constructor(config, router, route) {
        this.config = config;
        this.router = router;
        this.route = route;
    }
    onAccountSelect(accountId) {
        this.router.navigate(['../notification-details', { notificationSettingsAccountId: accountId }], {
            relativeTo: this.route,
        });
    }
}
ActionsRetailNotificationPreferencesViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesViewComponent, deps: [{ token: ActionsRetailNotificationPreferencesJourneyConfigService }, { token: i2.Router }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });
ActionsRetailNotificationPreferencesViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: ActionsRetailNotificationPreferencesViewComponent, selector: "bb-actions-retail-notification-preferences", ngImport: i0, template: "<bb-header-ui\n  heading=\"Manage Notifications\"\n  i18n-heading=\"Actions retail notifications preferences heading@@actions-retail-notifications.preferences.heading\"\n  customClassName=\"px-0\"\n  headingType=\"h1\"\n>\n</bb-header-ui>\n<bb-header-ui\n  heading=\"Select your account\"\n  i18n-heading=\"\n    Actions retail notifications preferences subheading@@actions-retail-notifications.preferences.subheading\"\n  customClassName=\"px-0\"\n  headingType=\"h2\"\n></bb-header-ui>\n<div>\n  <bb-product-summary-list-widget (selectedAccount)=\"onAccountSelect($event)\"></bb-product-summary-list-widget>\n</div>\n", components: [{ type: i3.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4.ProductSummaryListWidgetComponent, selector: "bb-product-summary-list-widget", inputs: ["showIcons", "event.refreshAccountsList"], outputs: ["selectedAccount"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-actions-retail-notification-preferences',
                    templateUrl: 'actions-retail-notification-preferences-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: ActionsRetailNotificationPreferencesJourneyConfigService }, { type: i2.Router }, { type: i2.ActivatedRoute }]; } });

class ProductNotificationsSettingsComponent {
    constructor(router, route, config) {
        this.router = router;
        this.route = route;
        this.config = config;
        this.selectedAccountId$ = this.route.params.pipe(map(params => params.notificationSettingsAccountId || ''));
    }
    navigateBack() {
        this.router.navigate(['../manage-notifications'], { relativeTo: this.route });
    }
}
ProductNotificationsSettingsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ProductNotificationsSettingsComponent, deps: [{ token: i2.Router }, { token: i2.ActivatedRoute }, { token: ActionsRetailNotificationPreferencesJourneyConfigService }], target: i0.ɵɵFactoryTarget.Component });
ProductNotificationsSettingsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: ProductNotificationsSettingsComponent, selector: "bb-product-notifications-settings", ngImport: i0, template: "<!-- TODO: replace bootstrap classes -->\n<div class=\"heading-widget bb-heading-widget px-0 pt-4 pb-5 flex-column-reverse align-items-start\">\n  <button\n    class=\"bb-heading-widget__button btn btn-link pl-0 ml-0 mb-3\"\n    (click)=\"navigateBack()\"\n    i18n-buttonTitle=\"Product notifications settings button title@@product-notifications.settings.button.title\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n    <span>Back to Manage notifications</span>\n  </button>\n  <bb-header-ui\n    heading=\"Notification details\"\n    i18n-heading=\"Product notifications settings heading@@product-notifications.settings.heading\"\n    headingType=\"h2\"\n  ></bb-header-ui>\n</div>\n<bb-actions-product-notifications-settings-widget\n  [selectedAccountId]=\"selectedAccountId$ | async\"\n  [specificationIDs]=\"config.specificationIDs$ | async\"\n  [notificationDismissTime]=\"config.notificationDismissTime$ | async\"\n>\n</bb-actions-product-notifications-settings-widget>\n", components: [{ type: i3.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4$1.ActionsProductNotificationsSettingsWidgetComponent, selector: "bb-actions-product-notifications-settings-widget", inputs: ["selectedAccountId", "specificationIDs", "notificationDismissTime"] }], pipes: { "async": i5.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ProductNotificationsSettingsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-product-notifications-settings',
                    templateUrl: './product-notifications-settings.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i2.Router }, { type: i2.ActivatedRoute }, { type: ActionsRetailNotificationPreferencesJourneyConfigService }]; } });

const routes = {
    path: '',
    children: [
        {
            path: '',
            redirectTo: 'manage-notifications',
            pathMatch: 'full',
        },
        { path: 'manage-notifications', component: ActionsRetailNotificationPreferencesViewComponent },
        {
            path: 'notification-details',
            component: ProductNotificationsSettingsComponent,
        },
    ],
};

const ActionNotificationsPreferencesDataFactory = (injector) => {
    if (injector.get(ActionsRetailNotificationPreferencesJourneyConfigService).apiMode === 'engagements') {
        return injector.get(ActionsNotificationsPreferencesDataService);
    }
    else {
        return injector.get(ActionsNotificationsSettingsDataService);
    }
};

class ActionsRetailNotificationPreferencesJourneyModule {
    static forRoot(data = { routes }) {
        return {
            ngModule: ActionsRetailNotificationPreferencesJourneyModule,
            providers: [provideRoutes([data.routes])],
        };
    }
}
ActionsRetailNotificationPreferencesJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ActionsRetailNotificationPreferencesJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesJourneyModule, declarations: [ActionsRetailNotificationPreferencesViewComponent, ProductNotificationsSettingsComponent], imports: [CommonModule,
        HeaderModule,
        BackbaseCoreModule,
        RouterModule,
        ActionsProductNotificationsSettingsWidgetModule,
        ProductSummaryListWidgetModule] });
ActionsRetailNotificationPreferencesJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesJourneyModule, providers: [
        ActionsRetailNotificationPreferencesJourneyConfigService,
        {
            provide: NotificationsPreferencesBaseDataService,
            useFactory: ActionNotificationsPreferencesDataFactory,
            deps: [Injector],
        },
    ], imports: [[
            CommonModule,
            HeaderModule,
            BackbaseCoreModule,
            RouterModule,
            ActionsProductNotificationsSettingsWidgetModule,
            ProductSummaryListWidgetModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsRetailNotificationPreferencesJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ActionsRetailNotificationPreferencesViewComponent, ProductNotificationsSettingsComponent],
                    imports: [
                        CommonModule,
                        HeaderModule,
                        BackbaseCoreModule,
                        RouterModule,
                        ActionsProductNotificationsSettingsWidgetModule,
                        ProductSummaryListWidgetModule,
                    ],
                    providers: [
                        ActionsRetailNotificationPreferencesJourneyConfigService,
                        {
                            provide: NotificationsPreferencesBaseDataService,
                            useFactory: ActionNotificationsPreferencesDataFactory,
                            deps: [Injector],
                        },
                    ],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { ActionsRetailNotificationPreferencesJourneyConfigService, ActionsRetailNotificationPreferencesJourneyModule, ActionsRetailNotificationPreferencesJourneyToken, ActionsRetailNotificationPreferencesViewComponent, ProductNotificationsSettingsComponent };
//# sourceMappingURL=backbase-actions-retail-notification-preferences-journey-ang.js.map
