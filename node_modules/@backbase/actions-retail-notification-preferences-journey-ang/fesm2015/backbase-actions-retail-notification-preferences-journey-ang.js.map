{"version":3,"file":"backbase-actions-retail-notification-preferences-journey-ang.js","sources":["../../../../libs/actions-retail-notification-preferences-journey/src/actions-retail-notification-preferences-journey-config.service.ts","../../../../libs/actions-retail-notification-preferences-journey/src/actions-retail-notification-preferences-view.component.ts","../../../../libs/actions-retail-notification-preferences-journey/src/actions-retail-notification-preferences-view.component.html","../../../../libs/actions-retail-notification-preferences-journey/src/components/product-notifications-settings/product-notifications-settings.component.ts","../../../../libs/actions-retail-notification-preferences-journey/src/components/product-notifications-settings/product-notifications-settings.component.html","../../../../libs/actions-retail-notification-preferences-journey/src/actions-retail-notification-preferences.routes.ts","../../../../libs/actions-retail-notification-preferences-journey/src/services/actions-notifications-preferences-data.factory.ts","../../../../libs/actions-retail-notification-preferences-journey/src/actions-retail-notification-preferences-journey.module.ts","../../../../libs/actions-retail-notification-preferences-journey/backbase-actions-retail-notification-preferences-journey-ang.ts"],"sourcesContent":["import { Inject, Injectable, InjectionToken, Optional, Provider } from '@angular/core';\nimport { ApiMode, secondsToMilliseconds } from '@backbase/actions-common-ang';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface ActionsRetailNotificationPreferencesJourneyConfiguration {\n  notificationDismissTime: number;\n  specificationIDs: string;\n  apiMode: ApiMode;\n}\n\nexport const ActionsRetailNotificationPreferencesJourneyToken = new InjectionToken<\n  Partial<ActionsRetailNotificationPreferencesJourneyConfiguration>\n>('ActionsRetailNotificationPreferencesJourneyConfiguration injection token');\n\nexport function provideConfig<T>(defaults: new () => T): Provider {\n  return {\n    provide: defaults,\n    useFactory: (custom: T) => ({ ...new defaults(), ...custom }),\n    deps: [ActionsRetailNotificationPreferencesJourneyToken],\n  };\n}\n\nexport const configDefaults: ActionsRetailNotificationPreferencesJourneyConfiguration = {\n  notificationDismissTime: 5,\n  specificationIDs: '1, 4',\n  apiMode: 'engagements',\n};\n\n@Injectable()\nexport class ActionsRetailNotificationPreferencesJourneyConfigService {\n  private readonly staticConfig: ActionsRetailNotificationPreferencesJourneyConfiguration;\n  constructor(\n    @Optional()\n    @Inject(ActionsRetailNotificationPreferencesJourneyToken)\n    staticConfigOverrides?: ActionsRetailNotificationPreferencesJourneyConfiguration,\n  ) {\n    this.staticConfig = { ...configDefaults, ...staticConfigOverrides };\n  }\n\n  /**\n   * Method to get notification dismiss time preference value.\n   *\n   * @returns notification dismiss time in seconds\n   */\n  get notificationDismissTime$(): Observable<number> {\n    return of(this.staticConfig.notificationDismissTime).pipe(\n      map(Number),\n      map(number => (isNaN(number) ? configDefaults.notificationDismissTime : number)),\n      map(secondsToMilliseconds),\n    );\n  }\n\n  /**\n   * Method to get specification IDs.\n   *\n   * @returns specification IDs array\n   */\n  get specificationIDs$(): Observable<string[]> {\n    return of(this.staticConfig.specificationIDs).pipe(map(data => data.replace(/\\s/g, '').split(',')));\n  }\n\n  /**\n   * Method to get api mode.\n   *\n   * @returns api mode string\n   */\n  get apiMode(): ApiMode {\n    return this.staticConfig.apiMode;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ActionsRetailNotificationPreferencesJourneyConfigService } from './actions-retail-notification-preferences-journey-config.service';\n\n@Component({\n  selector: 'bb-actions-retail-notification-preferences',\n  templateUrl: 'actions-retail-notification-preferences-view.component.html',\n})\nexport class ActionsRetailNotificationPreferencesViewComponent {\n  constructor(\n    readonly config: ActionsRetailNotificationPreferencesJourneyConfigService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  onAccountSelect(accountId: string) {\n    this.router.navigate(['../notification-details', { notificationSettingsAccountId: accountId }], {\n      relativeTo: this.route,\n    });\n  }\n}\n","<bb-header-ui\n  heading=\"Manage Notifications\"\n  i18n-heading=\"Actions retail notifications preferences heading@@actions-retail-notifications.preferences.heading\"\n  customClassName=\"px-0\"\n  headingType=\"h1\"\n>\n</bb-header-ui>\n<bb-header-ui\n  heading=\"Select your account\"\n  i18n-heading=\"\n    Actions retail notifications preferences subheading@@actions-retail-notifications.preferences.subheading\"\n  customClassName=\"px-0\"\n  headingType=\"h2\"\n></bb-header-ui>\n<div>\n  <bb-product-summary-list-widget (selectedAccount)=\"onAccountSelect($event)\"></bb-product-summary-list-widget>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ActionsRetailNotificationPreferencesJourneyConfigService } from '../../actions-retail-notification-preferences-journey-config.service';\n\n@Component({\n  selector: 'bb-product-notifications-settings',\n  templateUrl: './product-notifications-settings.component.html',\n})\nexport class ProductNotificationsSettingsComponent {\n  readonly selectedAccountId$: Observable<string> = this.route.params.pipe(\n    map(params => params.notificationSettingsAccountId || ''),\n  );\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    readonly config: ActionsRetailNotificationPreferencesJourneyConfigService,\n  ) {}\n\n  navigateBack() {\n    this.router.navigate(['../manage-notifications'], { relativeTo: this.route });\n  }\n}\n","<!-- TODO: replace bootstrap classes -->\n<div class=\"heading-widget bb-heading-widget px-0 pt-4 pb-5 flex-column-reverse align-items-start\">\n  <button\n    class=\"bb-heading-widget__button btn btn-link pl-0 ml-0 mb-3\"\n    (click)=\"navigateBack()\"\n    i18n-buttonTitle=\"Product notifications settings button title@@product-notifications.settings.button.title\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n    <span>Back to Manage notifications</span>\n  </button>\n  <bb-header-ui\n    heading=\"Notification details\"\n    i18n-heading=\"Product notifications settings heading@@product-notifications.settings.heading\"\n    headingType=\"h2\"\n  ></bb-header-ui>\n</div>\n<bb-actions-product-notifications-settings-widget\n  [selectedAccountId]=\"selectedAccountId$ | async\"\n  [specificationIDs]=\"config.specificationIDs$ | async\"\n  [notificationDismissTime]=\"config.notificationDismissTime$ | async\"\n>\n</bb-actions-product-notifications-settings-widget>\n","import { Route } from '@angular/router';\nimport { ActionsRetailNotificationPreferencesViewComponent } from './actions-retail-notification-preferences-view.component';\nimport { ProductNotificationsSettingsComponent } from './components/product-notifications-settings/product-notifications-settings.component';\n\nexport const routes: Route = {\n  path: '',\n  children: [\n    {\n      path: '',\n      redirectTo: 'manage-notifications',\n      pathMatch: 'full',\n    },\n    { path: 'manage-notifications', component: ActionsRetailNotificationPreferencesViewComponent },\n    {\n      path: 'notification-details',\n      component: ProductNotificationsSettingsComponent,\n    },\n  ],\n};\n","import { Injector } from '@angular/core';\nimport {\n  ActionsNotificationsSettingsDataService,\n  ActionsNotificationsPreferencesDataService,\n} from '@backbase/actions-common-ang';\nimport { ActionsRetailNotificationPreferencesJourneyConfigService } from '../actions-retail-notification-preferences-journey-config.service';\n\nexport const ActionNotificationsPreferencesDataFactory = (injector: Injector) => {\n  if (injector.get(ActionsRetailNotificationPreferencesJourneyConfigService).apiMode === 'engagements') {\n    return injector.get(ActionsNotificationsPreferencesDataService);\n  } else {\n    return injector.get(ActionsNotificationsSettingsDataService);\n  }\n};\n","import { ModuleWithProviders, NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { ActionsProductNotificationsSettingsWidgetModule } from '@backbase/actions-product-notifications-settings-widget-ang';\nimport { ActionsRetailNotificationPreferencesViewComponent } from './actions-retail-notification-preferences-view.component';\nimport { ProductSummaryListWidgetModule } from '@backbase/product-summary-list-widget-ang';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ProductNotificationsSettingsComponent } from './components/product-notifications-settings/product-notifications-settings.component';\nimport { routes } from './actions-retail-notification-preferences.routes';\nimport { ActionsRetailNotificationPreferencesJourneyConfigService } from './actions-retail-notification-preferences-journey-config.service';\nimport { NotificationsPreferencesBaseDataService } from '@backbase/actions-common-ang';\nimport { ActionNotificationsPreferencesDataFactory } from './services/actions-notifications-preferences-data.factory';\n\n@NgModule({\n  declarations: [ActionsRetailNotificationPreferencesViewComponent, ProductNotificationsSettingsComponent],\n  imports: [\n    CommonModule,\n    HeaderModule,\n    BackbaseCoreModule,\n    RouterModule,\n    ActionsProductNotificationsSettingsWidgetModule,\n    ProductSummaryListWidgetModule,\n  ],\n  providers: [\n    ActionsRetailNotificationPreferencesJourneyConfigService,\n    {\n      provide: NotificationsPreferencesBaseDataService,\n      useFactory: ActionNotificationsPreferencesDataFactory,\n      deps: [Injector],\n    },\n  ],\n})\nexport class ActionsRetailNotificationPreferencesJourneyModule {\n  static forRoot(\n    data: { routes: Route; [key: string]: any } = { routes },\n  ): ModuleWithProviders<ActionsRetailNotificationPreferencesJourneyModule> {\n    return {\n      ngModule: ActionsRetailNotificationPreferencesJourneyModule,\n      providers: [provideRoutes([data.routes])],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}