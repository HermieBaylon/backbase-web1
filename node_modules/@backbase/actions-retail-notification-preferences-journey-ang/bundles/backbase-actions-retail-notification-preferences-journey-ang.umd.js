(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@backbase/actions-common-ang'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/router'), require('@backbase/foundation-ang/core'), require('@backbase/actions-product-notifications-settings-widget-ang'), require('@backbase/ui-ang/header'), require('@backbase/product-summary-list-widget-ang')) :
    typeof define === 'function' && define.amd ? define('@backbase/actions-retail-notification-preferences-journey-ang', ['exports', '@angular/core', '@backbase/actions-common-ang', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/router', '@backbase/foundation-ang/core', '@backbase/actions-product-notifications-settings-widget-ang', '@backbase/ui-ang/header', '@backbase/product-summary-list-widget-ang'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["actions-retail-notification-preferences-journey-ang"] = {}), global.ng.core, global.actionsCommonAng, global.rxjs, global.rxjs.operators, global.ng.common, global.ng.router, global.core, global.i4$1, global.i3, global.i4));
})(this, (function (exports, i0, actionsCommonAng, rxjs, operators, i5, i2, core, i4$1, i3, i4) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);

    var ActionsRetailNotificationPreferencesJourneyToken = new i0.InjectionToken('ActionsRetailNotificationPreferencesJourneyConfiguration injection token');
    function provideConfig(defaults) {
        return {
            provide: defaults,
            useFactory: function (custom) { return (Object.assign(Object.assign({}, new defaults()), custom)); },
            deps: [ActionsRetailNotificationPreferencesJourneyToken],
        };
    }
    var configDefaults = {
        notificationDismissTime: 5,
        specificationIDs: '1, 4',
        apiMode: 'engagements',
    };
    var ActionsRetailNotificationPreferencesJourneyConfigService = /** @class */ (function () {
        function ActionsRetailNotificationPreferencesJourneyConfigService(staticConfigOverrides) {
            this.staticConfig = Object.assign(Object.assign({}, configDefaults), staticConfigOverrides);
        }
        Object.defineProperty(ActionsRetailNotificationPreferencesJourneyConfigService.prototype, "notificationDismissTime$", {
            /**
             * Method to get notification dismiss time preference value.
             *
             * @returns notification dismiss time in seconds
             */
            get: function () {
                return rxjs.of(this.staticConfig.notificationDismissTime).pipe(operators.map(Number), operators.map(function (number) { return (isNaN(number) ? configDefaults.notificationDismissTime : number); }), operators.map(actionsCommonAng.secondsToMilliseconds));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActionsRetailNotificationPreferencesJourneyConfigService.prototype, "specificationIDs$", {
            /**
             * Method to get specification IDs.
             *
             * @returns specification IDs array
             */
            get: function () {
                return rxjs.of(this.staticConfig.specificationIDs).pipe(operators.map(function (data) { return data.replace(/\s/g, '').split(','); }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ActionsRetailNotificationPreferencesJourneyConfigService.prototype, "apiMode", {
            /**
             * Method to get api mode.
             *
             * @returns api mode string
             */
            get: function () {
                return this.staticConfig.apiMode;
            },
            enumerable: false,
            configurable: true
        });
        return ActionsRetailNotificationPreferencesJourneyConfigService;
    }());
    ActionsRetailNotificationPreferencesJourneyConfigService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesJourneyConfigService, deps: [{ token: ActionsRetailNotificationPreferencesJourneyToken, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ActionsRetailNotificationPreferencesJourneyConfigService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesJourneyConfigService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesJourneyConfigService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [ActionsRetailNotificationPreferencesJourneyToken]
                        }] }];
        } });

    var ActionsRetailNotificationPreferencesViewComponent = /** @class */ (function () {
        function ActionsRetailNotificationPreferencesViewComponent(config, router, route) {
            this.config = config;
            this.router = router;
            this.route = route;
        }
        ActionsRetailNotificationPreferencesViewComponent.prototype.onAccountSelect = function (accountId) {
            this.router.navigate(['../notification-details', { notificationSettingsAccountId: accountId }], {
                relativeTo: this.route,
            });
        };
        return ActionsRetailNotificationPreferencesViewComponent;
    }());
    ActionsRetailNotificationPreferencesViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesViewComponent, deps: [{ token: ActionsRetailNotificationPreferencesJourneyConfigService }, { token: i2__namespace.Router }, { token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ActionsRetailNotificationPreferencesViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: ActionsRetailNotificationPreferencesViewComponent, selector: "bb-actions-retail-notification-preferences", ngImport: i0__namespace, template: "<bb-header-ui\n  heading=\"Manage Notifications\"\n  i18n-heading=\"Actions retail notifications preferences heading@@actions-retail-notifications.preferences.heading\"\n  customClassName=\"px-0\"\n  headingType=\"h1\"\n>\n</bb-header-ui>\n<bb-header-ui\n  heading=\"Select your account\"\n  i18n-heading=\"\n    Actions retail notifications preferences subheading@@actions-retail-notifications.preferences.subheading\"\n  customClassName=\"px-0\"\n  headingType=\"h2\"\n></bb-header-ui>\n<div>\n  <bb-product-summary-list-widget (selectedAccount)=\"onAccountSelect($event)\"></bb-product-summary-list-widget>\n</div>\n", components: [{ type: i3__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4__namespace.ProductSummaryListWidgetComponent, selector: "bb-product-summary-list-widget", inputs: ["showIcons", "event.refreshAccountsList"], outputs: ["selectedAccount"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-actions-retail-notification-preferences',
                        templateUrl: 'actions-retail-notification-preferences-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ActionsRetailNotificationPreferencesJourneyConfigService }, { type: i2__namespace.Router }, { type: i2__namespace.ActivatedRoute }]; } });

    var ProductNotificationsSettingsComponent = /** @class */ (function () {
        function ProductNotificationsSettingsComponent(router, route, config) {
            this.router = router;
            this.route = route;
            this.config = config;
            this.selectedAccountId$ = this.route.params.pipe(operators.map(function (params) { return params.notificationSettingsAccountId || ''; }));
        }
        ProductNotificationsSettingsComponent.prototype.navigateBack = function () {
            this.router.navigate(['../manage-notifications'], { relativeTo: this.route });
        };
        return ProductNotificationsSettingsComponent;
    }());
    ProductNotificationsSettingsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ProductNotificationsSettingsComponent, deps: [{ token: i2__namespace.Router }, { token: i2__namespace.ActivatedRoute }, { token: ActionsRetailNotificationPreferencesJourneyConfigService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductNotificationsSettingsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: ProductNotificationsSettingsComponent, selector: "bb-product-notifications-settings", ngImport: i0__namespace, template: "<!-- TODO: replace bootstrap classes -->\n<div class=\"heading-widget bb-heading-widget px-0 pt-4 pb-5 flex-column-reverse align-items-start\">\n  <button\n    class=\"bb-heading-widget__button btn btn-link pl-0 ml-0 mb-3\"\n    (click)=\"navigateBack()\"\n    i18n-buttonTitle=\"Product notifications settings button title@@product-notifications.settings.button.title\"\n  >\n    <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n    <span>Back to Manage notifications</span>\n  </button>\n  <bb-header-ui\n    heading=\"Notification details\"\n    i18n-heading=\"Product notifications settings heading@@product-notifications.settings.heading\"\n    headingType=\"h2\"\n  ></bb-header-ui>\n</div>\n<bb-actions-product-notifications-settings-widget\n  [selectedAccountId]=\"selectedAccountId$ | async\"\n  [specificationIDs]=\"config.specificationIDs$ | async\"\n  [notificationDismissTime]=\"config.notificationDismissTime$ | async\"\n>\n</bb-actions-product-notifications-settings-widget>\n", components: [{ type: i3__namespace.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4__namespace$1.ActionsProductNotificationsSettingsWidgetComponent, selector: "bb-actions-product-notifications-settings-widget", inputs: ["selectedAccountId", "specificationIDs", "notificationDismissTime"] }], pipes: { "async": i5__namespace.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ProductNotificationsSettingsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-product-notifications-settings',
                        templateUrl: './product-notifications-settings.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i2__namespace.Router }, { type: i2__namespace.ActivatedRoute }, { type: ActionsRetailNotificationPreferencesJourneyConfigService }]; } });

    var routes = {
        path: '',
        children: [
            {
                path: '',
                redirectTo: 'manage-notifications',
                pathMatch: 'full',
            },
            { path: 'manage-notifications', component: ActionsRetailNotificationPreferencesViewComponent },
            {
                path: 'notification-details',
                component: ProductNotificationsSettingsComponent,
            },
        ],
    };

    var ActionNotificationsPreferencesDataFactory = function (injector) {
        if (injector.get(ActionsRetailNotificationPreferencesJourneyConfigService).apiMode === 'engagements') {
            return injector.get(actionsCommonAng.ActionsNotificationsPreferencesDataService);
        }
        else {
            return injector.get(actionsCommonAng.ActionsNotificationsSettingsDataService);
        }
    };

    var ActionsRetailNotificationPreferencesJourneyModule = /** @class */ (function () {
        function ActionsRetailNotificationPreferencesJourneyModule() {
        }
        ActionsRetailNotificationPreferencesJourneyModule.forRoot = function (data) {
            if (data === void 0) { data = { routes: routes }; }
            return {
                ngModule: ActionsRetailNotificationPreferencesJourneyModule,
                providers: [i2.provideRoutes([data.routes])],
            };
        };
        return ActionsRetailNotificationPreferencesJourneyModule;
    }());
    ActionsRetailNotificationPreferencesJourneyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesJourneyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ActionsRetailNotificationPreferencesJourneyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesJourneyModule, declarations: [ActionsRetailNotificationPreferencesViewComponent, ProductNotificationsSettingsComponent], imports: [i5.CommonModule,
            i3.HeaderModule,
            core.BackbaseCoreModule,
            i2.RouterModule,
            i4$1.ActionsProductNotificationsSettingsWidgetModule,
            i4.ProductSummaryListWidgetModule] });
    ActionsRetailNotificationPreferencesJourneyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesJourneyModule, providers: [
            ActionsRetailNotificationPreferencesJourneyConfigService,
            {
                provide: actionsCommonAng.NotificationsPreferencesBaseDataService,
                useFactory: ActionNotificationsPreferencesDataFactory,
                deps: [i0.Injector],
            },
        ], imports: [[
                i5.CommonModule,
                i3.HeaderModule,
                core.BackbaseCoreModule,
                i2.RouterModule,
                i4$1.ActionsProductNotificationsSettingsWidgetModule,
                i4.ProductSummaryListWidgetModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0__namespace, type: ActionsRetailNotificationPreferencesJourneyModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [ActionsRetailNotificationPreferencesViewComponent, ProductNotificationsSettingsComponent],
                        imports: [
                            i5.CommonModule,
                            i3.HeaderModule,
                            core.BackbaseCoreModule,
                            i2.RouterModule,
                            i4$1.ActionsProductNotificationsSettingsWidgetModule,
                            i4.ProductSummaryListWidgetModule,
                        ],
                        providers: [
                            ActionsRetailNotificationPreferencesJourneyConfigService,
                            {
                                provide: actionsCommonAng.NotificationsPreferencesBaseDataService,
                                useFactory: ActionNotificationsPreferencesDataFactory,
                                deps: [i0.Injector],
                            },
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ActionsRetailNotificationPreferencesJourneyConfigService = ActionsRetailNotificationPreferencesJourneyConfigService;
    exports.ActionsRetailNotificationPreferencesJourneyModule = ActionsRetailNotificationPreferencesJourneyModule;
    exports.ActionsRetailNotificationPreferencesJourneyToken = ActionsRetailNotificationPreferencesJourneyToken;
    exports.ActionsRetailNotificationPreferencesViewComponent = ActionsRetailNotificationPreferencesViewComponent;
    exports.ProductNotificationsSettingsComponent = ProductNotificationsSettingsComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-actions-retail-notification-preferences-journey-ang.umd.js.map
