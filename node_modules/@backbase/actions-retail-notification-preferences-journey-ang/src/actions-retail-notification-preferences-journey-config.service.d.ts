import { InjectionToken, Provider } from '@angular/core';
import { ApiMode } from '@backbase/actions-common-ang';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export interface ActionsRetailNotificationPreferencesJourneyConfiguration {
    notificationDismissTime: number;
    specificationIDs: string;
    apiMode: ApiMode;
}
export declare const ActionsRetailNotificationPreferencesJourneyToken: InjectionToken<Partial<ActionsRetailNotificationPreferencesJourneyConfiguration>>;
export declare function provideConfig<T>(defaults: new () => T): Provider;
export declare const configDefaults: ActionsRetailNotificationPreferencesJourneyConfiguration;
export declare class ActionsRetailNotificationPreferencesJourneyConfigService {
    private readonly staticConfig;
    constructor(staticConfigOverrides?: ActionsRetailNotificationPreferencesJourneyConfiguration);
    /**
     * Method to get notification dismiss time preference value.
     *
     * @returns notification dismiss time in seconds
     */
    get notificationDismissTime$(): Observable<number>;
    /**
     * Method to get specification IDs.
     *
     * @returns specification IDs array
     */
    get specificationIDs$(): Observable<string[]>;
    /**
     * Method to get api mode.
     *
     * @returns api mode string
     */
    get apiMode(): ApiMode;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsRetailNotificationPreferencesJourneyConfigService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ActionsRetailNotificationPreferencesJourneyConfigService>;
}
