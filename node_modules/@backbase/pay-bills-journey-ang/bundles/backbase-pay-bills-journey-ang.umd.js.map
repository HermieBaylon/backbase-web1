{"version":3,"file":"backbase-pay-bills-journey-ang.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/pay-bills-journey/src/communication.service.ts","../../../../libs/pay-bills-journey/src/services/pay-bills-navigation.service.ts","../../../../libs/pay-bills-journey/src/pay-bills-journey.component.ts","../../../../libs/pay-bills-journey/src/pay-bills-journey.component.html","../../../../libs/pay-bills-journey/src/services/pay-bills-journey-config.service.ts","../../../../libs/pay-bills-journey/src/views/billpay-enrolment-view.component.ts","../../../../libs/pay-bills-journey/src/services/pay-bills-state.service.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-ebill-payment-ui/billpay-ebill-payment-ui.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-ebill-payment-ui/billpay-ebill-payment-ui.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/bb-schedule-label-ui/schedule-label.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/bb-schedule-label-ui/schedule-label.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/bb-schedule-ui/schedule.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/bb-schedule-ui/schedule.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-form/billpay-payment-form.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-form/billpay-payment-form.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-discard-changes-modal/billpay-payment-discard-changes-modal.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-discard-changes-modal/billpay-payment-discard-changes-modal.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-form-container/billpay-payment-form-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-form-container/billpay-payment-form-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-form-view.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-review-container/billpay-payment-review-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-review-container/billpay-payment-review-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-review-view.component.ts","../../../../libs/pay-bills-journey/src/directives/base-payment-edit-form-container.model.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-recurring-edit-form-container/billpay-payment-recurring-edit-form-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-recurring-edit-form-container/billpay-payment-recurring-edit-form-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-recurring-edit-form-view.component.ts","../../../../libs/pay-bills-journey/src/directives/base-payment-edit-review-container.model.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-recurring-edit-review-container/billpay-payment-recurring-edit-review-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-recurring-edit-review-container/billpay-payment-recurring-edit-review-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-recurring-edit-review-view.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-one-off-edit-form-container/billpay-payment-one-off-edit-form-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-one-off-edit-form-container/billpay-payment-one-off-edit-form-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-oneoff-edit-form-view.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-one-off-edit-review-container/billpay-payment-one-off-edit-review-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-one-off-edit-review-container/billpay-payment-one-off-edit-review-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-oneoff-edit-review-view.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-frequency/billpay-payment-frequency.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-frequency/billpay-payment-frequency.component.html","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-start-date/billpay-payment-start-date.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-start-date/billpay-payment-start-date.component.html","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-end-date/billpay-payment-end-date.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-end-date/billpay-payment-end-date.component.html","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-compact-product-selector/billpay-payment-compact-product-selector.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-compact-product-selector/billpay-payment-compact-product-selector.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list-item/billpay-payment-multiple-bills-list-item.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list-item/billpay-payment-multiple-bills-list-item.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list/billpay-payment-multiple-bills-list.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list/billpay-payment-multiple-bills-list.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-sum-board/billpay-payment-multiple-bills-sum-board.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-sum-board/billpay-payment-multiple-bills-sum-board.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-multiple-bills-view.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-item/billpay-payment-multiple-bills-review-item.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-item/billpay-payment-multiple-bills-review-item.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-table/billpay-payment-multiple-bills-review-table.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-table/billpay-payment-multiple-bills-review-table.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-success/billpay-payment-multiple-bills-success.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-success/billpay-payment-multiple-bills-success.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review/billpay-payment-multiple-bills-review.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review/billpay-payment-multiple-bills-review.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-multiple-bills-review-view.component.ts","../../../../libs/pay-bills-journey/src/services/billpay-manage-payment-deactivate-guard.service.ts","../../../../libs/pay-bills-journey/src/components/pay-bills-journey-ui.module.ts","../../../../libs/pay-bills-journey/src/pay-bills-journey.module.ts","../../../../libs/pay-bills-journey/backbase-pay-bills-journey-ang.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export abstract class CommunicationService {\n  abstract navigateToPaymentsList(): void;\n  abstract navigateToPayeesList(): void;\n  abstract navigateToAddPayee(): void;\n  abstract navigateToPayeeSummary(payeeID: string): void;\n  abstract navigateToEditElectronicPayee(payeeID: string): void;\n  abstract navigateToEditManualPayee(payeeID: string): void;\n  abstract navigateToPayverisEbillEnrol(payeeID: string): void;\n  abstract navigateToMainAppPage(): void;\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, ParamMap, Router } from '@angular/router';\nimport { ONE_OFF_PAYMENT, RECURRING_PAYMENT } from '@backbase/billpay-journeys-common';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\nimport { CommunicationService } from '../communication.service';\nimport { PaymentRoutePageTypeParam, PaymentRouteParams, PaymentRoutePaymentTypeParam } from '../model/route.model';\n\n@Injectable()\nexport class PayBillsNavigationService {\n  private readonly defaultRelative: NavigationExtras;\n\n  readonly routeParams: Observable<PaymentRouteParams> = combineLatest([\n    this.getRouteParam(this.route, 'payee'),\n    this.getRouteParam(this.route, 'id'),\n  ]).pipe(\n    map(([payee, id]) => {\n      const pageType: PaymentRoutePageTypeParam = !!id ? 'edit' : 'new';\n      const paymentType: PaymentRoutePaymentTypeParam = this.extractPaymentTypeFromId(id, payee);\n      const paymentId = (id && id.substring(2)) || '';\n      const payeeId = (payee && payee.substring(2)) || '';\n\n      return {\n        pageType,\n        paymentType,\n        ...(!!paymentId && { paymentId }),\n        ...(!!payeeId && { payeeId }),\n      };\n    }),\n  );\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    @Optional() private readonly communicationService: CommunicationService,\n  ) {\n    this.defaultRelative = { relativeTo: this.route };\n  }\n\n  navigateToEditRecurringForm(id: string, extras?: NavigationExtras) {\n    this.router.navigate(['recurring', 'edit', id], extras || this.defaultRelative);\n  }\n\n  navigateToEditRecurringReview(id: string, extras?: NavigationExtras) {\n    this.router.navigate(['recurring', 'edit', id, 'review'], extras || this.defaultRelative);\n  }\n\n  navigateToEditOneOffForm(id: string, extras?: NavigationExtras) {\n    this.router.navigate(['one-off', 'edit', id], extras || this.defaultRelative);\n  }\n\n  navigateToEditOneOffReview(id: string, extras?: NavigationExtras) {\n    this.router.navigate(['one-off', 'edit', id, 'review'], extras || this.defaultRelative);\n  }\n\n  navigateToForm(extras?: NavigationExtras) {\n    this.router.navigate(['form'], extras || this.defaultRelative);\n  }\n\n  navigateToReview(extras?: NavigationExtras) {\n    this.router.navigate(['review'], extras || this.defaultRelative);\n  }\n\n  navigateToPayeeList() {\n    this.communicationService?.navigateToPayeesList();\n  }\n  navigateToPayments() {\n    this.communicationService?.navigateToPaymentsList();\n  }\n  navigateToAddPayee() {\n    this.communicationService?.navigateToAddPayee();\n  }\n  navigateToMainAppPage() {\n    this.communicationService?.navigateToMainAppPage();\n  }\n  navigateToEditManualPayee(id: string) {\n    this.communicationService?.navigateToEditManualPayee(id);\n  }\n  navigateToEditElectronicPayee(id: string) {\n    this.communicationService?.navigateToEditElectronicPayee(id);\n  }\n  navigateToPayeeSummary(id: string) {\n    this.communicationService?.navigateToPayeeSummary(id);\n  }\n  navigateToPayverisEbillEnrol(id: string) {\n    this.communicationService?.navigateToPayverisEbillEnrol(id);\n  }\n\n  private extractPaymentTypeFromId(paymentId: string | null, payeeId: string | null): PaymentRoutePaymentTypeParam {\n    if (!paymentId && !payeeId) {\n      return ONE_OFF_PAYMENT;\n    }\n    const idToUse: string = (paymentId ? paymentId : payeeId) as string;\n    return idToUse.substring(0, 1) === 'r' ? RECURRING_PAYMENT : ONE_OFF_PAYMENT;\n  }\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // Ensure that level that has actual value keeps it from being cleared.\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map(params => params[0] || params[1]),\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BillpayNotificationRoutingService } from '@backbase/billpay-journeys-common';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { PayBillsNavigationService } from './services/pay-bills-navigation.service';\n\n@Component({\n  selector: 'bb-pay-bills-journey',\n  templateUrl: './pay-bills-journey.component.html',\n  providers: [PayBillsNavigationService],\n})\nexport class PayBillsJourneyComponent implements OnInit, OnDestroy {\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly route: ActivatedRoute,\n    private readonly billpayNotificationRoutingService: BillpayNotificationRoutingService,\n  ) {}\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.setupNavigationSubscriptions();\n  }\n\n  private setupNavigationSubscriptions() {\n    this.billpayNotificationRoutingService.upcommingPaymentsSubject$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.navigationService.navigateToPayments());\n\n    this.route.paramMap.pipe(takeUntil(this.destroy$)).subscribe((param: ParamMap) => {\n      if (param.has('editRecurringPayment')) {\n        this.navigationService.navigateToEditRecurringForm(param.get('editRecurringPayment') as string);\n      } else if (param.has('editOneOffPayment')) {\n        this.navigationService.navigateToEditOneOffForm(param.get('editOneOffPayment') as string);\n      }\n    });\n\n    this.billpayNotificationRoutingService.managePayeesSubject$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.navigationService.navigateToAddPayee();\n    });\n  }\n}\n","<router-outlet></router-outlet>\n","import { Injectable, Optional, Inject, InjectionToken } from '@angular/core';\nimport { AccountNumberFormat, accountNumberFullFormat } from '@backbase/billpay-journeys-common';\nimport '@angular/localize/init';\nimport { Frequency, FrequencyKeys } from '@backbase/billpay-journeys-common';\n\nexport const PayBillsJourneyConfigurationToken = new InjectionToken<PayBillsJourneyConfiguration>(\n  'PayBillsJourneyConfigurationToken injection token',\n);\n\nexport interface PayBillsJourneyConfiguration {\n  notificationDismissTime: number;\n  accountNumberMasked: boolean;\n  paymentDetailsTitle: string;\n  paymentDefaultCurrency: string;\n  multipleBillsMode: boolean;\n  productNumberFormat?: AccountNumberFormat;\n  frequencies: Frequency[];\n}\n\nconst configDefaults: PayBillsJourneyConfiguration = {\n  notificationDismissTime: 5000,\n  accountNumberMasked: false,\n  paymentDetailsTitle: $localize`:@@pay-bills-journey-form-payment-details-title:Payment details`,\n  paymentDefaultCurrency: 'USD',\n  multipleBillsMode: false,\n  productNumberFormat: accountNumberFullFormat,\n  frequencies: [\n    { name: $localize`:@@billpay-common.frequency-label.once:Once`, value: FrequencyKeys.Once },\n    { name: $localize`:@@billpay-common.frequency-label.weekly:Weekly`, value: FrequencyKeys.Weekly },\n    {\n      name: $localize`:@@billpay-common.frequency-label.every-two-week:Every two weeks`,\n      value: FrequencyKeys.Biweekly,\n    },\n    { name: $localize`:@@billpay-common.frequency-label.monthly:Monthly`, value: FrequencyKeys.Monthly },\n  ],\n};\n\n@Injectable()\nexport class PayBillsJourneyConfigService {\n  private _config: PayBillsJourneyConfiguration;\n\n  constructor(@Optional() @Inject(PayBillsJourneyConfigurationToken) config: PayBillsJourneyConfiguration) {\n    config = config || {};\n    this._config = { ...configDefaults, ...config };\n  }\n\n  get defaults(): PayBillsJourneyConfiguration {\n    return configDefaults;\n  }\n  get notificationDismissTime(): number {\n    return this._config.notificationDismissTime;\n  }\n  get accountNumberMasked(): boolean {\n    return this._config.accountNumberMasked;\n  }\n  get paymentDetailsTitle(): string {\n    return this._config.paymentDetailsTitle;\n  }\n  get paymentDefaultCurrency(): string {\n    return this._config.paymentDefaultCurrency;\n  }\n  get multipleBillsMode(): boolean {\n    return this._config.multipleBillsMode;\n  }\n  get productNumberFormat(): AccountNumberFormat | undefined {\n    return this._config.productNumberFormat;\n  }\n  get frequencies(): Frequency[] {\n    return this._config.frequencies;\n  }\n}\n","import { Component } from '@angular/core';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\n@Component({\n  selector: 'bb-billpay-enrolment-view',\n  template: `\n    <div class=\"bb-block bb-block--lg\">\n      <bb-header-ui\n        headingType=\"h1\"\n        heading=\"Enrol in bill pay\"\n        i18n-heading=\"@@billpay-manage-payee-journey.enrolment-heading\"\n      ></bb-header-ui>\n    </div>\n    <bb-billpay-enrolment [notificationDismissTime]=\"config?.notificationDismissTime\"></bb-billpay-enrolment>\n  `,\n})\nexport class BillPayEnrolmentViewComponent {\n  constructor(readonly config: PayBillsJourneyConfigService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { PaymentFormState } from '@backbase/billpay-journeys-common';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class PayBillsStateService {\n  private readonly paymentStateSource = new BehaviorSubject<PaymentFormState[] | undefined>(undefined);\n  readonly paymentState: Observable<PaymentFormState[] | undefined> = this.paymentStateSource.asObservable();\n\n  private isFormProcessingValue = false;\n  set isFormProcessing(value: boolean) {\n    this.isFormProcessingValue = value;\n  }\n  get isFormProcessing() {\n    return this.isFormProcessingValue;\n  }\n\n  updatePaymentState(state?: PaymentFormState[]) {\n    this.paymentStateSource.next(state);\n  }\n\n  reset() {\n    this.isFormProcessing = false;\n    this.updatePaymentState();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Currency } from '@backbase/data-ang/billpay';\nimport { FormControl } from '@angular/forms';\nimport { BillpayUtilityService as Utility, PaymentAmount } from '@backbase/billpay-journeys-common';\n\nexport interface CurrencyUI {\n  amount: string;\n  currency: string;\n}\n\nexport interface LatestBill {\n  id?: string;\n  paymentDate?: string;\n  amount?: Currency;\n  minAmountDue?: Currency;\n  outstandingBalance?: Currency;\n  status?: string;\n  url?: string;\n  statementAvailable?: boolean;\n}\n\n@Component({\n  selector: 'bb-billpay-ebill-payment',\n  templateUrl: './billpay-ebill-payment-ui.component.html',\n})\nexport class BillpayEbillPaymentUIComponent implements OnInit {\n  /**\n   * Details of the latest eBill to be paid.\n   */\n  @Input() latestBill?: LatestBill;\n  /**\n   * Form control for the eBill payment form.\n   */\n  @Input() control?: FormControl;\n  /**\n   * Mark the form as submitted, controls validation elements. Defaults to false.\n   */\n  @Input() isSubmitted = false;\n\n  /**\n   * get the payment default currency preference. default to 'USD'.\n   */\n  @Input() eBillDefaultCurrency = 'USD';\n\n  /**\n   * unique key used for ids\n   */\n  readonly id = Utility.generateId();\n  touched?: boolean;\n\n  public customValue!: PaymentAmount;\n\n  ngOnInit() {\n    this.customValue = {\n      amount: '',\n      currency: this.eBillDefaultCurrency,\n      type: undefined,\n    };\n  }\n\n  setAmount(type: string) {\n    this.customValue.type = type;\n    if (type === 'Custom') {\n      this.setCustomAmount(this.customValue.amount);\n    } else {\n      const currency = this.getAmount(type);\n      if (currency) {\n        this.setValue({\n          amount: currency.amount,\n          currency: currency.currencyCode,\n          type: type,\n        });\n      }\n    }\n  }\n\n  setCustomAmount(ev: string) {\n    this.customValue.amount = ev;\n    this.setValue({ ...this.customValue, type: 'Custom' });\n  }\n\n  get showBalance(): boolean {\n    return !!(\n      this.latestBill && this.isDifferentAndNonZero(this.latestBill.outstandingBalance, this.latestBill.amount)\n    );\n  }\n\n  get showMinumum(): boolean {\n    return !!(this.latestBill && this.isDifferentAndNonZero(this.latestBill.minAmountDue, this.latestBill.amount));\n  }\n\n  private isDifferentAndNonZero(otherEbillAmount: Currency | undefined, ebillAmount: Currency | undefined): boolean {\n    return !!(\n      otherEbillAmount &&\n      ebillAmount &&\n      otherEbillAmount.amount !== ebillAmount.amount &&\n      0 !== +otherEbillAmount.amount\n    );\n  }\n\n  private setValue(newValue: any) {\n    if (this.control) {\n      this.control.setValue(newValue);\n    }\n  }\n\n  private getAmount(value: string) {\n    switch (value) {\n      case 'Minimum':\n        return this.latestBill && this.latestBill.minAmountDue;\n      case 'Balance':\n        return this.latestBill && this.latestBill.outstandingBalance;\n      case 'Due':\n      default:\n        return this.latestBill && this.latestBill.amount;\n    }\n  }\n}\n","<bb-alert-ui modifier=\"info\" title=\"\">\n  <span\n    data-role=\"ebill-info-alert\"\n    class=\"bb-text-bold\"\n    i18n=\"eBill payment alert|Alert for eBill information@@billpay.bb-payment-ebill.alert\"\n  >\n    eBill due on {{ latestBill?.paymentDate | bbDate: 'fullDate' }}.\n  </span>\n</bb-alert-ui>\n\n<bb-input-radio-group-ui\n  data-role=\"ebill-payment-group\"\n  [required]=\"true\"\n  [ngModel]=\"control?.value?.type\"\n  (ngModelChange)=\"setAmount($event)\"\n  [preselect]=\"false\"\n>\n  <bb-input-radio-ui value=\"Due\" [labelTemplate]=\"ebillPaymentDueLabelTemplate\">\n    <ng-template #ebillPaymentDueLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-due-message\">\n          <div\n            i18n=\"\n              eBill due amount radio label|Label for the radio button for selecting the eBill due\n              amount@@bb-billpay-payment-ebill.radio.due-amount\"\n          >\n            eBill amount due\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill due amount radio description|Description for the radio button for selecting the eBill due\n              amount@@bb-billpay-payment-ebill.radio.due-amount.description\"\n          >\n            Amount due on the latest billing cycle\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-due-message-amount\"\n            [amount]=\"latestBill?.amount?.amount\"\n            [currency]=\"latestBill?.amount?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Balance\" *ngIf=\"showBalance\" [labelTemplate]=\"ebillPaymentBalanceLabelTemplate\">\n    <ng-template #ebillPaymentBalanceLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-balance-message\">\n          <div\n            i18n=\"\n              eBill outstanding balance amount radio label|Label for the radio button for selecting the eBill\n              outstanding balance amount@@bb-billpay-payment-ebill.radio.outstanding-balance-amount\"\n          >\n            Total payee balance\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill total amount radio description|Description for the radio button for selecting the eBill total\n              amount@@bb-billpay-payment-ebill.radio.total-amount.description\"\n          >\n            Total amount owed\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-balance-message-amount\"\n            [amount]=\"latestBill?.outstandingBalance?.amount\"\n            [currency]=\"latestBill?.outstandingBalance?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Minimum\" *ngIf=\"showMinumum\" [labelTemplate]=\"ebillPaymentMinimumLabelTemplate\">\n    <ng-template #ebillPaymentMinimumLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-minimum-message\">\n          <div\n            i18n=\"\n              eBill minimum amount radio label|Label for the radio button for selecting the eBill minimum\n              amount@@bb-billpay-payment-ebill.radio.minimum-amount\"\n          >\n            eBill minimum payment\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill minimum amount radio description|Description for the radio button for selecting the eBill minimum\n              amount@@bb-billpay-payment-ebill.radio.minimum-amount.description\"\n          >\n            5% of the total balance\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-minimum-message-amount\"\n            [amount]=\"latestBill?.minAmountDue?.amount\"\n            [currency]=\"latestBill?.minAmountDue?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Custom\" [labelTemplate]=\"ebillPaymentOtherLabelTemplate\">\n    <ng-template #ebillPaymentOtherLabelTemplate>\n      <div class=\"pl-2 bb-form-field bb-form-field--md\">\n        <div\n          data-role=\"ebill-custom-message\"\n          i18n=\"\n            eBill other amount radio label|Label for the radio button for selecting an eBill other\n            amount@@bb-billpay-payment-ebill.radio.other-amount\"\n        >\n          Other amount\n        </div>\n        <span\n          class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n          i18n=\"\n            eBill other amount radio description|Description for the radio button for selecting the eBill other\n            amount@@bb-billpay-payment-ebill.radio.other-amount.description\"\n        >\n          Enter amount manually\n        </span>\n        <ng-container *ngIf=\"control?.value?.type === 'Custom'\">\n          <div class=\"position-relative\" [class.was-validated]=\"touched && !customValue?.amount\">\n            <bb-amount-input-ui\n              data-role=\"ebill-amount-input\"\n              [ngModel]=\"control?.value?.amount\"\n              (ngModelChange)=\"setCustomAmount($event)\"\n              (focusout)=\"touched = true\"\n              [autoDecimal]=\"true\"\n              wrapperClasses=\"bb-amount-input__field--large\"\n              [currency]=\"latestBill?.amount?.currencyCode\"\n              [required]=\"true\"\n              [aria-describedby]=\"'compact-amount-error-message' + id\"\n              [placeholder]=\"'0.00'\"\n            ></bb-amount-input-ui>\n          </div>\n          <bb-input-validation-message-ui\n            id=\"{{ 'compact-amount-error-message' + id }}\"\n            [showErrors]=\"touched && !customValue?.amount\"\n          >\n            <span> Field is required. </span>\n          </bb-input-validation-message-ui>\n        </ng-container>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n</bb-input-radio-group-ui>\n\n<bb-input-validation-message-ui role=\"alert\" [showErrors]=\"isSubmitted && control?.invalid\">\n  <p\n    *ngIf=\"!control?.errors?.amountInvalid\"\n    i18n=\"Payment amount cannot be zero|Error zero amount@@bb-billpay-payment-form.error.amount\"\n    data-role=\"invalid-amount\"\n  >\n    Payment amount cannot be zero.\n  </p>\n</bb-input-validation-message-ui>\n","import { Component, Input } from '@angular/core';\nimport { Frequency, FrequencyKeys, PaymentServicesTypes, Schedule } from '@backbase/billpay-journeys-common';\n\n@Component({\n  selector: 'bb-schedule-label-ui',\n  templateUrl: './schedule-label.component.html',\n})\nexport class ScheduleLabelComponent {\n  /**\n   * Details of the payment schedule.\n   */\n  @Input() item: Schedule | undefined;\n  /**\n   * Selects elements appropriate to a one-off payment. Defaults to true.\n   */\n  @Input() isSingleTransfer = true;\n  /**\n   * Minimum number of occurrences for recurring payments.\n   */\n  @Input() minOccurrences = 1;\n  /**\n   * Minimum number of occurrences for recurring payments.\n   */\n  @Input() frequencies?: Frequency[];\n  get frequencyLabel(): string {\n    const frequency = this.frequencies?.find(freq => this.item?.frequency === freq.value);\n    return $localize`:@@billpay-payment.form.schedule-frequency-label:${frequency?.name || ''}`;\n  }\n\n  get startDate(): string | undefined {\n    const date = String(\n      (this.item?.frequency === FrequencyKeys.Once &&\n        this.item.paymentService?.index !== PaymentServicesTypes.Other &&\n        this.item.paymentServiceDate) ||\n        this.item?.startDate,\n    );\n    return (this.item && date) || undefined;\n  }\n\n  get endDate(): Date | undefined {\n    return this.item && this.item.endDate && Date.parse(this.item.endDate) ? new Date(this.item.endDate) : undefined;\n  }\n\n  isToday(): boolean {\n    if (this.item === undefined) {\n      throw new Error('`item` input is required in `bb-schedule-label-ui` component');\n    }\n    const today = new Date().setHours(0, 0, 0, 0);\n    const startDate = new Date(this.item.startDate);\n    return startDate.setHours(0, 0, 0, 0) === today;\n  }\n\n  hasEnd(): boolean {\n    return !!this.item && (this.item.endDate !== undefined || this.item.repeat !== undefined);\n  }\n\n  hasLimit(): boolean {\n    return this.hasEnd() && !this.isSingleTransfer;\n  }\n}\n","<span>\n  <ng-container *ngIf=\"frequencyLabel; else defaultLabels\">{{ frequencyLabel }},</ng-container>\n  <!-- Remove default labels after journey migration phase 2 -->\n  <ng-template #defaultLabels>\n    <span\n      i18n=\"\n        Schedule frequency title list|List of titles for available schedule\n        frequencies@@billpay.bb-schedule-label-ui.frequency.list\"\n    >\n      {item?.frequency, select, ONCE {Once} WEEKLY {Weekly} EVERY_2_WEEKS {Every two weeks} MONTHLY {Monthly}\n      EVERY_4_WEEKS {Every for weeks} TWICE_A_MONTH {Semi monthly} EVERY_2_MONTHS {Every two months} EVERY_3_MONTHS {\n      Every three months} EVERY_6_MONTHS {Every six months} ANNUALLY {Annually}},\n    </span>\n  </ng-template>\n</span>\n<ng-container *ngIf=\"isSingleTransfer\">\n  <span\n    i18n=\"\n      On|Word to be used before a date to indicate that the payment will be executed on that\n      date@@billpay.bb-schedule-label-ui.label.on\"\n    >&nbsp;on</span\n  >\n</ng-container>\n\n<ng-container *ngIf=\"!isSingleTransfer\">\n  <span\n    i18n=\"\n      Schedule start|Word to be used before a date to indicate that this date is a starting date of the\n      schedule@@billpay.bb-schedule-label-ui.label.start\"\n    >&nbsp;starting</span\n  >\n</ng-container>\n\n<span>&nbsp;{{ startDate | date: 'mediumDate' }}</span>\n\n<ng-container *ngIf=\"hasLimit() && item?.endDate\"\n  >&sbquo;\n  <span\n    i18n=\"\n      Schedule end|Word to be used before a date to indicate that this date is an end date of the\n      schedule@@billpay.bb-schedule-label-ui.label.end\"\n    >Until&nbsp;{{ endDate | date: 'mediumDate' }}</span\n  >\n</ng-container>\n\n<ng-container *ngIf=\"hasLimit() && (item?.repeat || 0) >= minOccurrences\"\n  >&sbquo;\n  <span>{ item?.repeat, plural, =1 { {{ item?.repeat }} time} other { {{ item?.repeat }} times}}</span>\n</ng-container>\n","import { Component, Input, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { PaymentService } from '@backbase/data-ang/billpay';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  FrequencyKeys,\n  EndTypes,\n  PaymentServicesTypes,\n  PaymentServiceRadio,\n  BillpayPaymentScheduleService,\n  formControlOptions,\n  Frequency,\n  BillpayUtilityService as Utility,\n} from '@backbase/billpay-journeys-common';\n\n@Component({\n  selector: 'bb-schedule-ui',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnInit, OnDestroy, OnChanges {\n  readonly startDateLabelId = Utility.generateId();\n  readonly endingLabelId = Utility.generateId();\n  readonly id = Utility.generateId();\n  /**\n   * Array of valid frequencies that can be used to schedule payments.\n   */\n  @Input() frequencies: Array<Frequency> | undefined;\n  /**\n   * Minimum occurrences for the number of occurrences input box.\n   */\n  @Input() minOccurs: number | undefined;\n  /**\n   * Maximum occurrences for the number of occurrences input box.\n   */\n  @Input() maxOccurs: number | undefined;\n  /**\n   * Schedule form to be displayed.\n   */\n  @Input() scheduleForm: FormGroup | undefined;\n  /**\n   * Minimum start date for the datepicker elements.\n   */\n  @Input() minDate: string | undefined;\n  /**\n   * Set initial payment service for the initial component state.\n   */\n  @Input() defaultPaymentServiceType: PaymentServicesTypes = PaymentServicesTypes.Regular;\n  /**\n   * Mark the form as submitted, controls validation elements. Defaults to false.\n   */\n  @Input() formSubmitted = false;\n  /**\n   * Display relevant payment service radio button elements.\n   * @param services array of payment service details.\n   */\n  @Input() paymentServices: Array<PaymentService> | undefined;\n\n  private _paymentServiceRadios: Array<PaymentServiceRadio> | undefined;\n  private readonly destroy$ = new Subject<void>();\n\n  /** @internal */\n  constructor(private readonly scheduleService: BillpayPaymentScheduleService) {}\n\n  get paymentServiceRadios() {\n    return this._paymentServiceRadios;\n  }\n\n  get frequencyValues() {\n    return FrequencyKeys;\n  }\n\n  get endTypes() {\n    return EndTypes;\n  }\n\n  get item() {\n    return this.scheduleForm && this.scheduleForm.getRawValue();\n  }\n\n  get paymentServicesTypes() {\n    return PaymentServicesTypes;\n  }\n\n  private setDefaultPaymentServiceValue(index?: PaymentServicesTypes, options?: Object) {\n    // set default value from initial state form for mapped `paymentServiceRadios`\n    const paymentServiceControl = this.scheduleForm && this.scheduleForm.controls['paymentService'];\n    if (paymentServiceControl) {\n      paymentServiceControl.setValue(\n        this.paymentServiceRadios &&\n          this.paymentServiceRadios.find(\n            item => !!(item.service && item.index === (index || paymentServiceControl.value.index)),\n          ),\n        options,\n      );\n    }\n  }\n\n  ngOnInit() {\n    if (this.scheduleForm === undefined) {\n      throw new Error('`scheduleForm` input is required in `bb-schedule-ui` component');\n    }\n\n    if (this.frequencies === undefined) {\n      throw new Error('`frequencies` input is required in `bb-schedule-ui` component');\n    }\n\n    this.processEndTypeValueChanges();\n\n    this.processPaymentServiceValueChanges();\n\n    this.processFrequencyValueChanges();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.paymentServices) {\n      const isFirstChange = !this.paymentServiceRadios;\n      const service: Array<PaymentService> | undefined = changes.paymentServices.currentValue;\n      this._paymentServiceRadios =\n        service &&\n        service.map(item => ({\n          index: item.paymentServiceType || '',\n          service: item,\n        }));\n\n      if (this._paymentServiceRadios) {\n        this._paymentServiceRadios.push({\n          index: PaymentServicesTypes.Other,\n          service: service && service.find(item => item.paymentServiceType === PaymentServicesTypes.Regular),\n        });\n      }\n\n      this.setDefaultPaymentServiceValue(this.defaultPaymentServiceType, { emitEvent: !isFirstChange });\n    }\n  }\n\n  private processEndTypeValueChanges() {\n    if (!this.scheduleForm) return;\n    const endTypeControl = this.scheduleForm.controls['endType'];\n    const endDateControl = this.scheduleForm.controls['endDate'];\n    const repeatControl = this.scheduleForm.controls['repeat'];\n    if (endTypeControl && endDateControl && repeatControl) {\n      endTypeControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        switch (value) {\n          case EndTypes.After: {\n            repeatControl.enable(formControlOptions);\n            endDateControl.disable(formControlOptions);\n            break;\n          }\n          case EndTypes.On: {\n            endDateControl.enable(formControlOptions);\n            repeatControl.disable(formControlOptions);\n            break;\n          }\n          case EndTypes.Never:\n          default: {\n            endDateControl.disable(formControlOptions);\n            repeatControl.disable(formControlOptions);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  private processPaymentServiceValueChanges() {\n    if (!this.scheduleForm) return;\n    const startDateControl = this.scheduleForm.controls['startDate'];\n    const paymentServiceControl = this.scheduleForm.controls['paymentService'];\n    const paymentServiceDateControl = this.scheduleForm.controls['paymentServiceDate'];\n    const frequencyControl = this.scheduleForm.controls['frequency'];\n    const disableStartDate = () =>\n      frequencyControl.value === FrequencyKeys.Once && startDateControl.disable(formControlOptions);\n\n    if (startDateControl && paymentServiceControl && paymentServiceDateControl && frequencyControl) {\n      paymentServiceControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        if (value.index === PaymentServicesTypes.Other) {\n          startDateControl.enable(formControlOptions);\n          paymentServiceDateControl.disable(formControlOptions);\n        } else {\n          paymentServiceDateControl.enable(formControlOptions);\n          disableStartDate();\n          paymentServiceDateControl.setValue(this.getEstimatedStartDate(value.service.paymentServiceType));\n        }\n      });\n    }\n  }\n\n  private processFrequencyValueChanges() {\n    if (!this.scheduleForm) return;\n    const endTypeControl = this.scheduleForm.controls['endType'];\n    const endDateControl = this.scheduleForm.controls['endDate'];\n    const repeatControl = this.scheduleForm.controls['repeat'];\n    const startDateControl = this.scheduleForm.controls['startDate'];\n    const paymentServiceControl = this.scheduleForm.controls['paymentService'];\n    const frequencyControl = this.scheduleForm.controls['frequency'];\n    const paymentServiceDateControl = this.scheduleForm.controls['paymentServiceDate'];\n\n    if (startDateControl && frequencyControl && paymentServiceControl && endTypeControl && endDateControl) {\n      frequencyControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        if (value === FrequencyKeys.Once) {\n          paymentServiceControl.enable(formControlOptions);\n          paymentServiceControl.updateValueAndValidity();\n          paymentServiceDateControl.enable(formControlOptions);\n          endDateControl.disable(formControlOptions);\n          endTypeControl.disable(formControlOptions);\n          repeatControl.disable(formControlOptions);\n        } else {\n          paymentServiceControl.disable(formControlOptions);\n          paymentServiceDateControl.disable(formControlOptions);\n          startDateControl.enable(formControlOptions);\n          endDateControl.enable(formControlOptions);\n          repeatControl.enable(formControlOptions);\n          endTypeControl.enable();\n        }\n      });\n    }\n  }\n\n  getEstimatedStartDate(serviceType: PaymentServicesTypes): string {\n    const services = this.paymentServiceRadios && this.paymentServiceRadios.map(item => item.service);\n    return this.scheduleService.estimatedPaymentServiceDate(services, serviceType);\n  }\n\n  getEstimatedEndDate(): number | undefined {\n    const startDate = this.scheduleForm && this.scheduleForm.controls['startDate'].value;\n    const occurrences = this.scheduleForm && this.scheduleForm.controls['repeat'].value;\n    const freq = this.scheduleForm && this.scheduleForm.controls['frequency'].value;\n\n    return startDate && this.scheduleService.estimatedEndDate(startDate as string, freq, occurrences);\n  }\n\n  getEstimatedOccurs(): number {\n    const startDate = this.scheduleForm && this.scheduleForm.controls['startDate'].value;\n    const endDate = this.scheduleForm && this.scheduleForm.controls['endDate'].value;\n    const freq = this.scheduleForm && this.scheduleForm.controls['frequency'].value;\n\n    return (startDate && this.scheduleService.estimatedOccurences(startDate as string, endDate as string, freq)) || 0;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div [formGroup]=\"scheduleForm\" class=\"bb-block bb-block--md\">\n  <div class=\"bb-form-field bb-form-field--md bb-block bb-block--md\" *ngIf=\"frequencies?.length\">\n    <label\n      data-role=\"frequency-label\"\n      class=\"form-label\"\n      i18n=\"\n        Schedule frequency label|Label for a frequency dropdown in the component@@billpay.bb-schedule-ui.label.frequency\"\n    >\n      Frequency\n    </label>\n    <bb-dropdown-single-select-ui data-role=\"frequency-dropdown\" aria-label=\"frequency\" formControlName=\"frequency\">\n      <bb-dropdown-single-select-option-ui\n        *ngFor=\"let frequency of frequencies\"\n        [value]=\"frequency.value\"\n        [label]=\"frequency.name\"\n      ></bb-dropdown-single-select-option-ui>\n    </bb-dropdown-single-select-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\" [hidden]=\"item?.frequency !== frequencyValues.Once\">\n    <label\n      data-role=\"payment-date-label\"\n      class=\"bb-label\"\n      i18n=\"\n        Schedule once payment section name|Label for the section containing inputs that determine way of once payment\n        the scheduled payments@@billpay.bb-schedule-ui.label.once-date\"\n    >\n      Execution date\n    </label>\n    <bb-input-radio-group-ui\n      data-role=\"once-payment-group\"\n      formControlName=\"paymentService\"\n      [required]=\"true\"\n      aria-label=\"once-date-type\"\n    >\n      <bb-input-radio-ui\n        *ngFor=\"let radio of paymentServiceRadios\"\n        [value]=\"radio\"\n        aria-invalid=\"false\"\n        [labelTemplate]=\"radio.index !== 'OTHER' ? paymentServiceLabelTemplate : paymentServiceOtherLabelTemplate\"\n      >\n        <ng-template #paymentServiceLabelTemplate>\n          <div class=\"bb-text-align-left\">\n            <div>\n              <span\n                data-role=\"payment-option\"\n                i18n=\"Service label list|Radio Label@@billpay.bb-input-radio-ui.radio.label.once-date.service\"\n              >\n                { radio.service.paymentServiceType, select, REGULAR_PAYMENT {Earliest free delivery} EXPEDITED_PAYMENT\n                {Rush payment} OVERNIGHT_CHECK {Overnight check} }\n              </span>\n              <span\n                *ngIf=\"\n                  radio.service.paymentServiceType === paymentServicesTypes.Expedited ||\n                  radio.service.paymentServiceType === paymentServicesTypes.Overnight\n                \"\n                i18n=\"\n                  Service label fee text|Radio Label fee@@billpay.bb-input-radio-ui.radio.label.once-date.service.fee\"\n                >&nbsp;-&nbsp;{{\n                  radio.service.fee.amount | currency: radio.service.fee.currencyCode:'symbol-narrow'\n                }}&nbsp;fee</span\n              >\n            </div>\n            <div\n              data-role=\"delivery-by\"\n              class=\"bb-text-support bb-subtitle\"\n              i18n=\"\n                Service label subtext|Radio Label\n                subtext@@billpay.bb-input-radio-ui.radio.label.once-date.service.subtext\"\n            >\n              Delivery by {{ getEstimatedStartDate(radio.service.paymentServiceType) | date: 'longDate' }}\n            </div>\n          </div>\n        </ng-template>\n        <ng-template #paymentServiceOtherLabelTemplate>\n          <div class=\"bb-stack\">\n            <span\n              class=\"bb-stack__item bb-text-bold\"\n              id=\"billpay-schedule-other-date-{{ id }}\"\n              i18n=\"Other date|Radio Label@@billpay.bb-input-radio-ui.radio.label.once-date.other\"\n              data-role=\"other-date-label\"\n              >Other date</span\n            >\n            <span class=\"bb-stack__item\">\n              <bb-input-datepicker-ui\n                (click)=\"$event.preventDefault()\"\n                formControlName=\"startDate\"\n                [minDate]=\"minDate\"\n                data-role=\"once-start-date-calendar\"\n                aria-label=\"start-date\"\n                placement=\"top-right\"\n                aria-labelledby=\"billpay-schedule-other-date-{{ id }}\"\n                [datepickerDescribedby]=\"'billpay-schedule-other-date-describe-{{ id }}'\"\n              ></bb-input-datepicker-ui>\n              <bb-input-validation-message-ui\n                role=\"alert\"\n                id=\"'billpay-schedule-other-date-describe-{{ id }}'\"\n                [showErrors]=\"scheduleForm?.get('startDate')?.invalid && formSubmitted\"\n              >\n                <span\n                  *ngIf=\"scheduleForm?.get('startDate')?.errors?.required\"\n                  i18n=\"\n                    Execution date required error text|Error required message for Execution date input\n                    field@@billpay.bb-schedule-ui.error.required.startDate\"\n                  data-role=\"missing-schedule-execution-date\"\n                >\n                  Execution date is required.\n                </span>\n                <span\n                  *ngIf=\"scheduleForm?.get('startDate')?.errors?.pastDate\"\n                  i18n=\"\n                    Execution date past date error text |Error past date message for Execution date input\n                    field@@billpay.bb-schedule-ui.error.pastDate.startDate\"\n                  data-role=\"past-date-schedule-execution-date\"\n                >\n                  Execution date cannot be before delivery date.\n                </span>\n                <span\n                  *ngIf=\"scheduleForm?.get('startDate')?.errors?.invalidDateFormat\"\n                  i18n=\"\n                    Execution date invalid date error text |Error invalid date format message for Execution date input\n                    field@@billpay.bb-schedule-ui.error.invalidDateFormat\"\n                  data-role=\"invalid-date-schedule-execution-date\"\n                >\n                  Invalid date format.\n                </span>\n              </bb-input-validation-message-ui>\n            </span>\n          </div>\n        </ng-template>\n      </bb-input-radio-ui>\n    </bb-input-radio-group-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\" *ngIf=\"item?.frequency !== frequencyValues.Once\">\n    <label id=\"{{ startDateLabelId }}\" class=\"bb-text-bold\">\n      <span\n        *ngIf=\"true\"\n        id=\"billpay-schedule-start-date-{{ id }}\"\n        i18n-label=\"\n          Schedule start label|Label for an start date in scheduling component@@billpay.bb-schedule-ui.label.start\"\n        data-role=\"start-date-label\"\n      >\n        Start on\n      </span>\n    </label>\n    <div class=\"bb-form-field bb-form-field--sm\">\n      <bb-input-datepicker-ui\n        [aria-labelledby]=\"startDateLabelId\"\n        formControlName=\"startDate\"\n        [minDate]=\"minDate\"\n        data-role=\"start-date-calendar\"\n        aria-labelledby=\"billpay-schedule-start-date-{{ id }}\"\n        [datepickerDescribedby]=\"'billpay-schedule-start-date-error-{{ id }}'\"\n      ></bb-input-datepicker-ui>\n    </div>\n\n    <bb-input-validation-message-ui\n      id=\"'billpay-schedule-start-date-error-{{ id }}'\"\n      role=\"alert\"\n      [showErrors]=\"scheduleForm?.get('startDate')?.invalid && formSubmitted\"\n    >\n      <span\n        *ngIf=\"scheduleForm?.get('startDate')?.errors?.required\"\n        i18n=\"\n          Execution date required error text|Error required message for Execution date input\n          field@@billpay.bb-schedule-ui.error.required.startDate\"\n        data-role=\"missing-schedule-execution-date\"\n      >\n        Execution date is required.\n      </span>\n      <span\n        *ngIf=\"\n          scheduleForm?.get('startDate')?.errors?.pastDate ||\n          scheduleForm?.get('startDate')?.errors?.dateLessThanMinDate\n        \"\n        i18n=\"\n          Execution date past date error text |Error past date message for Execution date input\n          field@@billpay.bb-schedule-ui.error.pastDate.startDate\"\n        data-role=\"past-date-schedule-execution-date\"\n      >\n        Execution date cannot be before delivery date.\n      </span>\n      <span\n        *ngIf=\"scheduleForm?.get('startDate')?.errors?.invalidDateFormat\"\n        i18n=\"\n          Execution date invalid date error text |Error invalid date format message for Execution date input\n          field@@billpay.bb-schedule-ui.error.invalidDateFormat\"\n        data-role=\"invalid-date-schedule-execution-date\"\n      >\n        Invalid date format.\n      </span>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\" [hidden]=\"item?.frequency == frequencyValues.Once\">\n    <label\n      id=\"{{ endingLabelId }}\"\n      data-role=\"ending-label\"\n      class=\"bb-label\"\n      i18n=\"\n        Schedule ending section name|Label for the section containing inputs that determine way of ending of the\n        scheduled payments@@billpay.bb-schedule-ui.label.ending\"\n    >\n      End\n    </label>\n    <div class=\"bb-stack bb-stack--align-bottom\">\n      <div class=\"bb-stack__item\">\n        <bb-input-radio-group-ui [required]=\"true\" formControlName=\"endType\">\n          <bb-input-radio-ui\n            [value]=\"endTypes.Never\"\n            label=\"Never\"\n            aria-invalid=\"false\"\n            i18n-label=\"\n              Schedule never ends|Label for an option to never end the payment\n              schedule@@billpay.bb-schedule-ui.label.ending.never\"\n          >\n          </bb-input-radio-ui>\n          <bb-input-radio-ui [value]=\"endTypes.On\" aria-invalid=\"false\" [labelTemplate]=\"endingTemplate\">\n          </bb-input-radio-ui>\n          <bb-input-radio-ui [value]=\"endTypes.After\" aria-invalid=\"false\" [labelTemplate]=\"afterTemplate\">\n          </bb-input-radio-ui>\n          <ng-template #endingTemplate>\n            <div class=\"bb-stack\">\n              <span\n                data-role=\"ending-date-on-label\"\n                class=\"bb-stack__item bb-stack__item--spacing-lg\"\n                id=\"billpay-schedule-end-date-on-{{ id }}\"\n                i18n=\"\n                  Schedule end date|Label for an option to end the payment schedule on a specific\n                  date@@billpay.bb-schedule-ui.label.ending.on\"\n                >On</span\n              >\n              <div class=\"bb-stack__item\">\n                <bb-input-datepicker-ui\n                  formControlName=\"endDate\"\n                  data-role=\"ending-end-date\"\n                  i18n-aria-label=\"\n                    Schedule end date datepicker label|Aria label for end date payment schedule\n                    control@@billpay.bb-schedule-ui.label.end-date\"\n                  aria-label=\"end-date\"\n                  [minDate]=\"scheduleForm?.get('startDate')?.value\"\n                  placement=\"top-right\"\n                  aria-labelledby=\"billpay-schedule-end-date-on-{{ id }}\"\n                ></bb-input-datepicker-ui>\n                <bb-input-validation-message-ui\n                  role=\"alert\"\n                  *ngIf=\"scheduleForm?.get('endDate') as control\"\n                  [showErrors]=\"control?.invalid && formSubmitted\"\n                >\n                  <span\n                    *ngIf=\"control?.errors?.pastDate || control?.errors?.dateLessThanMinDate\"\n                    i18n=\"\n                      End date past date error text |Error past date message for End date input\n                      field@@billpay.bb-schedule-ui.end-date.past-date-error\"\n                    data-role=\"past-date-ending-end-date\"\n                  >\n                    End date could not be lower than start date.\n                  </span>\n                  <span\n                    *ngIf=\"control?.errors?.invalidDateFormat\"\n                    i18n=\"\n                      End date invalid date error text |Error invalid date format message for End date input\n                      field@@billpay.bb-schedule-ui.end-date.invalid-date-format-error\"\n                    data-role=\"invalid-date-schedule-end-date\"\n                  >\n                    Invalid date format.\n                  </span>\n                  <span\n                    *ngIf=\"control?.errors?.required\"\n                    i18n=\"\n                      End date invalid date error text |Date is required for End date input\n                      field@@billpay.bb-schedule-ui.end-date.date-required-error\"\n                    data-role=\"required-date-schedule-end-date\"\n                  >\n                    End date is required.\n                  </span>\n                </bb-input-validation-message-ui>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template #afterTemplate>\n            <div class=\"bb-stack\">\n              <span\n                class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                i18n=\"\n                  Schedule number of occurrences|Label for an option to end the payment schedule after some number of\n                  occurrences@@billpay.bb-schedule-ui.label.ending.after\"\n              >\n                After\n              </span>\n              <div class=\"bb-stack__item\">\n                <div class=\"bb-stack\">\n                  <div class=\"bb-stack__item bb-form-field bb-form-field--xs\">\n                    <bb-input-number-ui\n                      formControlName=\"repeat\"\n                      [min]=\"minOccurs\"\n                      [max]=\"maxOccurs\"\n                      data-role=\"ending-occurrences\"\n                      aria-label=\"occurrences\"\n                    ></bb-input-number-ui>\n                  </div>\n                  <span\n                    class=\"bb-stack__item\"\n                    i18n-label=\"\n                      Schedule occurrences text|Text to be appended after schedule end after some number of occurrences\n                      input@@billpay.bb-schedule-ui.label.ending.occurrences\"\n                  >\n                    Occurrences\n                  </span>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </bb-input-radio-group-ui>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"item?.frequency !== frequencyValues.Once && item?.endType !== endTypes.Never && item?.startDate\">\n    <bb-alert-ui modifier=\"info\" title=\"\">\n      <span class=\"bb-text-bold\" *ngIf=\"item?.endType === endTypes.After\" data-role=\"estimated-end-date-label\">\n        <span\n          i18n=\"Estimated end date|Label for estimated end date section@@billpay.bb-schedule-ui.label.estimated.date\"\n        >\n          Estimated end date {{ getEstimatedEndDate() | date: 'longDate' }}\n        </span>\n      </span>\n      <span class=\"bb-text-bold\" *ngIf=\"item?.endType === endTypes.On\">\n        <ng-container\n          i18n=\"\n            Estimated payment in total|Label for estimated payment in total\n            section@@billpay.bb-schedule-ui.label.estimated.occurs\"\n        >\n          { getEstimatedOccurs(), plural, =1 { {{ getEstimatedOccurs() }} payment in total } other {\n          {{ getEstimatedOccurs() }} payments in total }}\n        </ng-container>\n      </span>\n    </bb-alert-ui>\n  </div>\n  <div class=\"bb-block bb-block--md\" [hidden]=\"item?.frequency == frequencyValues.Once\">\n    <label\n      data-role=\"notify-me-label\"\n      class=\"bb-text-bold\"\n      i18n=\"\n        Notify me section name|Label for the section notify containing checkboxes @@billpay.bb-schedule-ui.label.notify\"\n    >\n      Notify me\n    </label>\n    <div>\n      <div class=\"bb-block bb-block--xs\">\n        <bb-input-checkbox-ui\n          [id]=\"'alertPendingCheckbox'\"\n          label=\"When a payment is pending\"\n          i18n-label=\"When a payment is pending|Checkbox Label@@bb-input-checkbox-ui.checkbox.label.pending\"\n          formControlName=\"alertPendingCheckbox\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n      <div class=\"bb-block bb-block--xs\">\n        <bb-input-checkbox-ui\n          [id]=\"'alertSentCheckbox'\"\n          label=\"When a payment has been sent\"\n          i18n-label=\"When a payment has been sent|Checkbox Label@@bb-input-checkbox-ui.checkbox.label.sent\"\n          formControlName=\"alertSentCheckbox\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n      <div>\n        <bb-input-checkbox-ui\n          [id]=\"'alertLastPendingCheckbox'\"\n          label=\"When the last payment is pending\"\n          i18n-label=\"When the last payment is pending|Checkbox Label@@bb-input-checkbox-ui.checkbox.label.last-pending\"\n          formControlName=\"alertLastPendingCheckbox\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n    </div>\n  </div>\n</div>\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { Account, Address, EbillSummary, PayeeSummary, PaymentService } from '@backbase/data-ang/billpay';\n\nimport {\n  AccountNumberFormat,\n  accountNumberFullFormat,\n  accountNumberMaskedFormat,\n  BillpayPaymentScheduleService,\n  EndTypes,\n  formControlOptions,\n  frequencies,\n  PaymentType,\n  PaymentAmount,\n  RECURRING_PAYMENT,\n  ONE_OFF_PAYMENT,\n  Frequency,\n  FrequencyKeys,\n  PaymentFormState,\n  PaymentServicesTypes,\n  Schedule,\n  PaymentServiceRadio,\n  BillpayUtilityService as Utility,\n} from '@backbase/billpay-journeys-common';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ProductSelectorComponent } from '@backbase/ui-ang/product-selector';\n\n@Component({\n  selector: 'bb-billpay-payment-form',\n  templateUrl: './billpay-payment-form.component.html',\n})\nexport class BillpayPaymentFormComponent implements OnInit, OnDestroy, AfterViewInit {\n  /**\n   * Array of payee summary details.\n   */\n  @Input() payeeSummaries: PayeeSummary[] | undefined;\n  /**\n   * Array of user's accounts.\n   */\n  @Input() accounts: Account[] | undefined;\n  /**\n   * Identifier for the payee that is currently selected to be paid from.\n   */\n  @Input() selectedPayeeId = '';\n  /**\n   * Details of the payment form.\n   */\n  @Input() paymentState: PaymentFormState | undefined;\n  /**\n   * Identifier for the payment when the form is an edit payment.\n   */\n  @Input() paymentId = '';\n  /**\n   * Whether the account number should be masked. Defaults to true.\n   */\n  @Input() accountNumberMask = true;\n\n  /**\n   * The type of the payment.\n   */\n  @Input() paymentType?: PaymentType;\n  /**\n   * Activates edit payment elements. Defaults to false.\n   */\n  @Input() isEditPayment = false;\n  /**\n   * get the payment details title preference. default to 'Payment details'.\n   */\n  @Input() paymentDetailsTitle = 'Payment details';\n\n  /**\n   * get the payment default currency preference. default to 'USD'.\n   */\n  @Input() paymentDefaultCurrency = 'USD';\n  /**\n   * Frequencies for schedule\n   */\n  private _frequencies?: Frequency[];\n  @Input() set frequencies(value: Frequency[] | undefined) {\n    this._frequencies = value;\n  }\n  get frequencies(): Array<Frequency> | undefined {\n    const isEditRecurring = this.isEditPayment && this.paymentType === RECURRING_PAYMENT;\n    const usableFrequencies = this._frequencies ? this._frequencies : frequencies;\n    return isEditRecurring ? usableFrequencies.filter(freq => freq.value !== FrequencyKeys.Once) : usableFrequencies;\n  }\n\n  @ViewChild('fromAccount') fromAccount!: ProductSelectorComponent;\n\n  @Output() submitPayment = new EventEmitter();\n  @Output() cancelPayment = new EventEmitter();\n  @Output() valueChanged = new EventEmitter<void>();\n\n  /**\n   * Payment form group\n   */\n  paymentForm: FormGroup = this.fb.group({});\n  /**\n   * Flag to display if payment is submitted\n   */\n  formSubmitted = false;\n  ebillSummary: EbillSummary | undefined;\n  defaultAmount!: PaymentAmount;\n  readonly minDate$ = new BehaviorSubject<string>(this.scheduleService.today);\n  readonly selectedAccount$ = new BehaviorSubject<Account | undefined>(undefined);\n  readonly selectedPayee$ = new BehaviorSubject<PayeeSummary | undefined>(undefined);\n  private readonly destroy$ = new Subject<void>();\n  /**\n   * Maximum occurrences for the number of occurrences input box.\n   */\n  readonly maxOccurs = 999;\n  /**\n   * Minimum occurrences for the number of occurrences input box.\n   */\n  readonly minOccurs = 1;\n  /**\n   * unique key used for ids\n   */\n  readonly id = Utility.generateId();\n\n  /** @internal */\n  constructor(private readonly fb: FormBuilder, private readonly scheduleService: BillpayPaymentScheduleService) {}\n\n  ngOnInit() {\n    this.defaultAmount = {\n      amount: '',\n      currency: this.paymentDefaultCurrency,\n      type: undefined,\n    };\n    this.selectedAccount$.next(this.defaultAccountFrom);\n    this.selectedPayee$.next(this.defaultPayeeTo);\n    if (this.defaultPayeeTo) {\n      this.ebillSummary = this.defaultPayeeTo.ebill;\n    }\n    this.minDate$.next(\n      this.scheduleService.estimatedPaymentServiceDate(\n        this.defaultPayeeTo && this.defaultPayeeTo.paymentServices,\n        PaymentServicesTypes.Regular,\n      ),\n    );\n    this.createForm();\n    this.proccessPaymentServiceValueChanges();\n    this.proccessFrequencyValueChanges();\n\n    this.paymentForm.valueChanges.pipe(takeUntil(this.destroy$), take(1)).subscribe(() => {\n      this.valueChanged.emit();\n    });\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      if (this.fromAccount) {\n        this.fromAccount.dropdownToggle.nativeElement.focus();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  cancel() {\n    this.cancelPayment.emit();\n  }\n\n  get defaultPaymentServiceType(): PaymentServicesTypes {\n    const payee = this.selectedPayee$.getValue();\n    return (\n      ((this.paymentState &&\n        payee &&\n        this.paymentState.payeeTo.id === payee.id &&\n        this.paymentState.schedule &&\n        this.paymentState.schedule.paymentService &&\n        this.paymentState.schedule.paymentService.index) as PaymentServicesTypes) || PaymentServicesTypes.Regular\n    );\n  }\n\n  get accountNumberFormatConfig(): AccountNumberFormat {\n    return this.accountNumberMask ? accountNumberMaskedFormat : accountNumberFullFormat;\n  }\n\n  get ebillPayment(): boolean {\n    return !!(\n      !this.isEditPayment &&\n      this.ebillSummary &&\n      this.ebillSummary.latestBill &&\n      this.ebillSummary.latestBill.status === 'UNPAID' &&\n      (!this.ebillSummary.status || this.ebillSummary.status === 'ACTIVE')\n    );\n  }\n\n  get frequencyKeys() {\n    return FrequencyKeys;\n  }\n\n  get schedule() {\n    return this.paymentForm?.controls['schedule'].value;\n  }\n\n  get amountGroup() {\n    return this.paymentForm?.get('amount');\n  }\n\n  get startDateControl() {\n    return this.paymentForm.get('schedule.startDate');\n  }\n\n  get endDateControl() {\n    return this.paymentForm.get('schedule.endDate');\n  }\n\n  get scheduleLabelData(): Schedule {\n    const schedule = this.schedule;\n    return {\n      ...schedule,\n      endDate: schedule.endType === EndTypes.On ? schedule.endDate : undefined,\n      repeat: schedule.endType === EndTypes.After ? schedule.repeat : undefined,\n    };\n  }\n\n  private get defaultAccountFrom(): Account | undefined {\n    return this.paymentState && this.paymentState.accountFrom ? this.paymentState.accountFrom : this.accounts?.[0];\n  }\n\n  private get defaultPayeeTo(): PayeeSummary | undefined {\n    return this.paymentState?.payeeTo\n      ? this.paymentState.payeeTo\n      : this.payeeSummaries && this.payeeSummaries.find(acc => acc.id === this.selectedPayeeId);\n  }\n\n  private getOvernightAddress(payee: PayeeSummary): Address | undefined {\n    return (this.hasOvernightCheck(payee.paymentServices) && payee.overnightDeliveryAddress) || undefined;\n  }\n\n  private hasOvernightCheck(services: PaymentService[] | undefined): boolean {\n    return !!services?.find((item: PaymentService) => item.paymentServiceType === PaymentServicesTypes.Overnight);\n  }\n\n  private get defaultOvernightAddressState(): Address {\n    const payee = this.selectedPayee$.getValue() || ({} as PayeeSummary);\n    const address = this.getOvernightAddress(payee) || ({} as Address);\n    return {\n      address1: address.address1 || '',\n      address2: address.address2 || '',\n      city: address.city || '',\n      state: address.state,\n      postalCode: address.postalCode || '',\n    };\n  }\n\n  private get defaultFormState(): PaymentFormState {\n    const payee = this.selectedPayee$.getValue() || ({} as PayeeSummary);\n    const paymentPayeeService =\n      payee.paymentServices &&\n      payee.paymentServices.find((item: PaymentService) => item.paymentServiceType === this.defaultPaymentServiceType);\n    const paymentPayeeServiceDate =\n      !this.paymentState || this.paymentState.schedule.frequency === this.frequencyKeys.Once\n        ? payee.paymentServices &&\n          this.scheduleService.estimatedPaymentServiceDate(payee.paymentServices, this.defaultPaymentServiceType)\n        : undefined;\n\n    const {\n      paymentId,\n      accountFrom = this.selectedAccount$.getValue() || ({} as Account),\n      payeeTo = payee,\n      amount = this.defaultAmount,\n      memo = '',\n      overnightDeliveryAddress = this.defaultOvernightAddressState,\n      schedule: {\n        frequency = this.findDefaultFrequency(),\n        startDate = this.minDate$.getValue(),\n        endDate = this.minDate$.getValue(),\n        repeat = 1,\n        endType = EndTypes.Never,\n        paymentService = this.getDefaultPaymentService(paymentPayeeService),\n        paymentServiceDate = paymentPayeeServiceDate,\n        alertPendingCheckbox = false,\n        alertSentCheckbox = false,\n        alertLastPendingCheckbox = false,\n      } = {},\n    } = this.paymentState || ({} as PaymentFormState);\n    return {\n      paymentId,\n      accountFrom,\n      payeeTo,\n      amount,\n      memo,\n      overnightDeliveryAddress,\n      schedule: {\n        frequency,\n        startDate,\n        endDate,\n        repeat,\n        endType,\n        paymentService,\n        paymentServiceDate,\n        alertPendingCheckbox,\n        alertSentCheckbox,\n        alertLastPendingCheckbox,\n      },\n    };\n  }\n\n  private proccessPaymentServiceValueChanges() {\n    const paymentServiceControl = this.paymentForm.get('schedule.paymentService');\n    const overnightAddressControl = this.paymentForm.controls['overnightDeliveryAddress'];\n    if (paymentServiceControl && overnightAddressControl) {\n      paymentServiceControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(val => {\n        if (val.service.paymentServiceType === PaymentServicesTypes.Overnight) {\n          overnightAddressControl.enable(formControlOptions);\n        } else {\n          overnightAddressControl.disable(formControlOptions);\n        }\n      });\n    }\n  }\n\n  private proccessFrequencyValueChanges() {\n    const frequencyControl = this.paymentForm.get('schedule.frequency');\n    const overnightAddressControl = this.paymentForm.controls['overnightDeliveryAddress'];\n    if (frequencyControl && overnightAddressControl) {\n      frequencyControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(val => {\n        if (val.value !== FrequencyKeys.Once) {\n          overnightAddressControl.disable(formControlOptions);\n        }\n      });\n    }\n  }\n\n  private createOvernightAddressFormGroup(): FormGroup {\n    const overnightAddress = this.defaultFormState.overnightDeliveryAddress || ({} as Address);\n    const paymentService = this.defaultFormState.schedule.paymentService;\n    const isOvernightAddressDisabled =\n      !paymentService ||\n      !paymentService.service ||\n      !paymentService.service.paymentServiceType ||\n      paymentService.service.paymentServiceType !== PaymentServicesTypes.Overnight;\n    return this.fb.group({\n      address1: [\n        {\n          value: overnightAddress.address1,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      address2: [\n        {\n          value: overnightAddress.address2,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      city: [\n        {\n          value: overnightAddress.city,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      state: [\n        {\n          value: overnightAddress.state,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      postalCode: [\n        {\n          value: overnightAddress.postalCode,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n    });\n  }\n\n  private createScheduleFormGroup(): FormGroup {\n    const initState = this.defaultFormState;\n    const paymentService = initState.schedule.paymentService;\n    const isEndDateDisabled = initState.schedule.endType !== EndTypes.On;\n    const isRepeatDisabled = initState.schedule.endType !== EndTypes.After;\n    const isStartDateDisabled = !!(\n      paymentService &&\n      paymentService.index !== PaymentServicesTypes.Other &&\n      initState.schedule.frequency === this.frequencyKeys.Once\n    );\n\n    //@TODO Replace startDate, endDate validators after fix angular issues\n    //https://github.com/angular/angular/issues/13461#issuecomment-502674629\n    //https://github.com/angular/angular/issues/10567\n    return this.fb.group({\n      frequency: [initState.schedule.frequency],\n      startDate: [\n        {\n          value: this.scheduleService.getLocalISODate(initState.schedule.startDate),\n          disabled: isStartDateDisabled,\n        },\n        [Validators.required, this.minDateValidator(this.minDate$.getValue())],\n      ],\n      endDate: [\n        {\n          value: this.scheduleService.getLocalISODate(initState.schedule.endDate as string),\n          disabled: isEndDateDisabled,\n        },\n        [Validators.required, this.minDateValidator(this.minDate$.getValue())],\n      ],\n      repeat: [{ value: initState.schedule.repeat, disabled: isRepeatDisabled }],\n      endType: [initState.schedule.endType],\n      paymentService: [initState.schedule.paymentService],\n      paymentServiceDate: [\n        {\n          value: initState.schedule.paymentServiceDate,\n          disabled: !isStartDateDisabled,\n        },\n      ],\n      alertPendingCheckbox: [initState.schedule.alertPendingCheckbox],\n      alertSentCheckbox: [initState.schedule.alertSentCheckbox],\n      alertLastPendingCheckbox: [initState.schedule.alertLastPendingCheckbox],\n    });\n  }\n\n  createForm(): void {\n    const initState = this.defaultFormState;\n    const amount = initState.amount.amount?.toString() || undefined;\n    this.paymentForm = this.fb.group({\n      paymentId: [this.paymentId],\n      accountFrom: [initState.accountFrom],\n      payeeTo: [initState.payeeTo],\n      amount: this.fb.group({\n        amount: [amount],\n        currency: [initState.amount.currency],\n        type: [initState.amount.type],\n      }),\n      memo: [initState.memo],\n      overnightDeliveryAddress: this.createOvernightAddressFormGroup(),\n      schedule: this.createScheduleFormGroup(),\n    });\n    this.setValidators();\n  }\n\n  amountValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value.amount || +control.value.amount <= 0) {\n      return {\n        amountInvalid: false,\n      };\n    } else {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n  }\n\n  isInvalidControl(control: FormControl): boolean {\n    return this.formSubmitted && control.invalid && control.touched;\n  }\n\n  private minDateValidator(minDate: string): ValidatorFn {\n    return (fg: AbstractControl): ValidationErrors | null => {\n      if (!fg.value) {\n        // eslint-disable-next-line no-null/no-null\n        return null;\n      }\n      if (new Date(fg.value).setHours(0, 0, 0, 0) < new Date(minDate).setHours(0, 0, 0, 0)) {\n        return {\n          pastDate: true,\n        };\n      } else {\n        // eslint-disable-next-line no-null/no-null\n        return null;\n      }\n    };\n  }\n\n  private notEmptyObjectValidator(control: AbstractControl): ValidationErrors | null {\n    // eslint-disable-next-line no-null/no-null\n    return Object.keys(control.value).length ? null : { notEmptyObject: false };\n  }\n\n  private processFormData(data: PaymentFormState): PaymentFormState {\n    switch (data.schedule.endType) {\n      case EndTypes.After:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            endDate: new Date(\n              this.scheduleService.estimatedEndDate(\n                data.schedule.startDate,\n                data.schedule.frequency,\n                data.schedule.repeat,\n              ),\n            ).toISOString(),\n          },\n        };\n      case EndTypes.On:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            repeat: this.scheduleService.estimatedOccurences(\n              data.schedule.startDate,\n              data.schedule.endDate || data.schedule.startDate,\n              data.schedule.frequency,\n            ),\n          },\n        };\n      default:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            ...(!data.schedule.startDate &&\n              this.defaultFormState.schedule.startDate && { startDate: this.defaultFormState.schedule.startDate }),\n          },\n        };\n    }\n  }\n\n  private setValidators() {\n    ([\n      ['accountFrom', [this.notEmptyObjectValidator]],\n      ['payeeTo', [this.notEmptyObjectValidator]],\n      ['amount', [Validators.required, this.amountValidator]],\n      ['schedule.repeat', [Validators.required, Validators.min(this.minOccurs), Validators.max(this.maxOccurs)]],\n      ['overnightDeliveryAddress.address1', [Validators.required, Validators.maxLength(40)]],\n      ['overnightDeliveryAddress.address2', [Validators.maxLength(40)]],\n      ['overnightDeliveryAddress.city', [Validators.required, Validators.maxLength(32)]],\n      ['overnightDeliveryAddress.state', [Validators.required]],\n      ['overnightDeliveryAddress.postalCode', [Validators.required, Validators.pattern(/^\\d{5}(\\d{4})?$/)]],\n    ] as [string, ValidatorFn[]][]).forEach(([controlName, validators]) => {\n      const control = this.paymentForm.get(controlName);\n      if (control) {\n        control.setValidators(validators);\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  handleSubmit(): void {\n    if (!this.formSubmitted) {\n      this.formSubmitted = true;\n    }\n    if (this.paymentForm.valid) {\n      this.submitPayment.emit(this.processFormData(this.paymentForm.value));\n    }\n    this.paymentForm.markAllAsTouched();\n  }\n\n  selectAccount(account: Account | undefined): void {\n    this.selectedAccount$.next(account);\n    this.paymentForm.controls['accountFrom'].setValue(account);\n  }\n\n  private setOvernightAddress(payee: PayeeSummary | undefined) {\n    const control = this.paymentForm.controls['overnightDeliveryAddress'];\n    if (payee?.overnightDeliveryAddress && this.hasOvernightCheck(payee.paymentServices)) {\n      control.setValue({\n        address1: payee.overnightDeliveryAddress.address1,\n        address2: payee.overnightDeliveryAddress.address2 || '',\n        city: payee.overnightDeliveryAddress.city,\n        state: payee.overnightDeliveryAddress.state,\n        postalCode: payee.overnightDeliveryAddress.postalCode,\n      });\n    } else {\n      control.reset();\n    }\n  }\n\n  selectPayee(payee: PayeeSummary | undefined): void {\n    this.selectedPayee$.next(payee);\n    this.paymentForm.controls['payeeTo'].setValue(payee);\n    this.minDate$.next(\n      this.scheduleService.estimatedPaymentServiceDate(payee && payee.paymentServices, PaymentServicesTypes.Regular),\n    );\n\n    if (this.startDateControl && this.endDateControl) {\n      this.startDateControl.setValue(this.minDate$.getValue());\n      this.endDateControl.setValue(this.minDate$.getValue());\n    }\n\n    this.setOvernightAddress(payee);\n\n    if (payee) {\n      this.ebillSummary = payee.ebill;\n    }\n    if (this.amountGroup) {\n      this.amountGroup.patchValue({ amount: ' ', type: undefined });\n    }\n  }\n\n  private getDefaultPaymentService(paymentService?: PaymentService): PaymentServiceRadio {\n    return {\n      index:\n        this.isEditPayment && this.paymentType === ONE_OFF_PAYMENT\n          ? PaymentServicesTypes.Other\n          : paymentService?.paymentServiceType || '',\n      service: paymentService,\n    };\n  }\n\n  private findDefaultFrequency(): FrequencyKeys {\n    let defaultFrequency: Frequency | undefined;\n\n    switch (this.paymentType) {\n      case ONE_OFF_PAYMENT: {\n        defaultFrequency = this.frequencies?.find(item => item.value === FrequencyKeys.Once);\n        break;\n      }\n      case RECURRING_PAYMENT: {\n        defaultFrequency = this.frequencies?.find(item => item.value === FrequencyKeys.Monthly);\n        break;\n      }\n    }\n\n    if (defaultFrequency === undefined) {\n      defaultFrequency = this.frequencies?.[0] || { value: FrequencyKeys.Once, name: '' };\n    }\n\n    return defaultFrequency.value as FrequencyKeys;\n  }\n}\n","<form data-role=\"payment-form\" [formGroup]=\"paymentForm\" (ngSubmit)=\"handleSubmit()\">\n  <!-- Payee To edit Label -->\n  <ng-container *ngIf=\"isEditPayment\">\n    <div class=\"bb-block bb-block--lg\">\n      <bb-header-ui\n        *ngIf=\"selectedPayee$ | async as payee\"\n        data-role=\"payee-to-edit-header\"\n        headingType=\"h1\"\n        heading=\"Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }}\"\n        i18n-heading=\"Payment to|Payee to edit label@@billpay-manage-payment.payee-to.edit.header\"\n      ></bb-header-ui>\n    </div>\n  </ng-container>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <!-- Account From -->\n      <ng-container *ngTemplateOutlet=\"paymentFormAccountFrom\"> </ng-container>\n\n      <!-- Payee To -->\n      <ng-container *ngTemplateOutlet=\"paymentFormPayeeTo\"> </ng-container>\n\n      <!-- Payment details -->\n      <ng-container *ngTemplateOutlet=\"formDetails\"> </ng-container>\n\n      <!-- Payment overnight delivery address -->\n      <ng-container *ngTemplateOutlet=\"formOvernightAddress\"> </ng-container>\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          i18n=\"Make payment button|Button text to make a payment@@bb-billpay-payment-form.button.submit\"\n          data-role=\"button-submit\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Continue\n        </button>\n        <button\n          bbButton\n          i18n=\"Make payment cancel button|Button text to make cancel a payment@@bb-billpay-payment-form.button.cancel\"\n          data-role=\"cancel-payment-button\"\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          (click)=\"cancel()\"\n          color=\"link\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n\n<ng-template #paymentFormAccountFrom>\n  <bb-fieldset-ui class=\"bb-block bb-block--lg\" data-role=\"account-from-selected\">\n    <label\n      data-role=\"select-account-label\"\n      aria-live=\"polite\"\n      class=\"bb-label\"\n      i18n=\"From|From section title@@billpay-manage-payment.section.from\"\n    >\n      From\n    </label>\n    <bb-product-selector-ui #fromAccount>\n      <ng-container bbDropdownToggle *ngIf=\"selectedAccount$ | async as selectedAccount\">\n        <bb-product-item-basic-account-ui\n          *ngIf=\"selectedAccount\"\n          [title]=\"selectedAccount.accountNickName\"\n          [productNumber]=\"selectedAccount.accountNumber\"\n          [productNumberFormat]=\"accountNumberFormatConfig\"\n          [amount]=\"selectedAccount.accountBalance?.amount\"\n          [currency]=\"selectedAccount.accountBalance?.currencyCode\"\n          [highlight]=\"false\"\n          [active]=\"false\"\n          data-role=\"account-from-selected-toggle\"\n          class=\"bb-text-align-left\"\n        >\n        </bb-product-item-basic-account-ui>\n\n        <div\n          *ngIf=\"!selectedAccount\"\n          data-role=\"select-account-option\"\n          i18n-aria-label=\"\n            Account selector aria label|Aria label to show when no account is being\n            selected@@bb-billpay-manage-payment.account.placeholder.label\"\n          aria-label=\"Select a debit account\"\n          i18n=\"\n            Account selector placeholder|Text to show when no account is being\n            selected@@bb-billpay-manage-payment.payee.placeholder\"\n          class=\"bb-text-align-left\"\n        >\n          Select an account\n        </div>\n      </ng-container>\n      <ng-container bbDropdownMenu>\n        <button\n          #listItem\n          bbButton\n          class=\"bb-product-selector__dropdown-item\"\n          color=\"unstyled\"\n          [block]=\"true\"\n          *ngFor=\"let account of accounts\"\n          (click)=\"selectAccount(account)\"\n          data-role=\"account-item\"\n        >\n          <bb-product-item-basic-account-ui\n            [title]=\"account.accountNickName\"\n            [productNumber]=\"account.accountNumber\"\n            [productNumberFormat]=\"accountNumberFormatConfig\"\n            [amount]=\"account.accountBalance?.amount\"\n            [currency]=\"account.accountBalance?.currencyCode\"\n            [highlight]=\"false\"\n            [active]=\"false\"\n            class=\"bb-stack__item bb-stack__item--fill bb-text-align-left\"\n            role=\"menuitem\"\n          >\n          </bb-product-item-basic-account-ui>\n        </button>\n      </ng-container>\n    </bb-product-selector-ui>\n    <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"isInvalidControl(paymentForm?.get('accountFrom'))\">\n      <span\n        *ngIf=\"!paymentForm?.get('accountFrom')?.errors?.notEmptyObject\"\n        i18n=\"Account from required error message@@bb-billpay-payment-form.error.account-from\"\n        data-role=\"invalid-account-from\"\n        >Please select an account</span\n      >\n    </bb-input-validation-message-ui>\n  </bb-fieldset-ui>\n</ng-template>\n\n<ng-template #paymentFormPayeeTo>\n  <bb-fieldset-ui *ngIf=\"!isEditPayment\" data-role=\"payee-to-product-selector\" class=\"bb-block bb-block--lg\">\n    <label\n      data-role=\"select-payee-label\"\n      aria-live=\"polite\"\n      class=\"bb-label\"\n      i18n=\"To|To section title@@billpay-manage-payment.section.to\"\n    >\n      To\n    </label>\n    <bb-product-selector-ui>\n      <ng-container bbDropdownToggle>\n        <ng-container *ngIf=\"selectedPayee$ | async as selectedPayee; else selectPauee\">\n          <bb-product-item-current-account-ui\n            *ngIf=\"selectedPayee\"\n            [title]=\"selectedPayee.nickName || selectedPayee.name\"\n            [mainSectionTitle]=\"(selectedPayee.nickName && selectedPayee.name) || ''\"\n            [highlight]=\"false\"\n            data-role=\"payee-to-selected-toggle\"\n            [active]=\"false\"\n            class=\"bb-text-align-left\"\n          >\n            <ng-template bbCustomProductItemCurrentAccountMainSection let-mainSectionTitle=\"mainSectionTitle\">\n              <div>\n                <span class=\"bb-text-support bb-subtitle\">{{ mainSectionTitle }}</span>\n              </div>\n            </ng-template>\n          </bb-product-item-current-account-ui>\n        </ng-container>\n        <ng-template #selectPauee>\n          <div\n            data-role=\"select-payee-label\"\n            class=\"bb-text-align-left\"\n            i18n=\"\n              Payee selector placeholder|Text to show when no payee is being\n              selected@@bb-billpay-manage-payment.payee.placeholder\"\n          >\n            Select a payee\n          </div>\n        </ng-template>\n      </ng-container>\n      <ng-container bbDropdownMenu>\n        <button\n          #listItem\n          bbButton\n          class=\"bb-product-selector__dropdown-item\"\n          color=\"unstyled\"\n          [block]=\"true\"\n          *ngFor=\"let payee of payeeSummaries\"\n          (click)=\"selectPayee(payee)\"\n          data-role=\"payee-item\"\n        >\n          <bb-product-item-current-account-ui\n            [title]=\"payee.nickName || payee.name\"\n            [mainSectionTitle]=\"(payee.nickName && payee.name) || ''\"\n            [highlight]=\"false\"\n            [active]=\"false\"\n            class=\"bb-stack__item bb-stack__item--fill bb-text-align-left\"\n            role=\"menuitem\"\n          >\n            <ng-template bbCustomProductItemCurrentAccountMainSection let-mainSectionTitle=\"mainSectionTitle\">\n              <div>\n                <span class=\"bb-text-support bb-subtitle\">\n                  {{ mainSectionTitle }}\n                </span>\n              </div>\n            </ng-template>\n          </bb-product-item-current-account-ui>\n        </button>\n      </ng-container>\n    </bb-product-selector-ui>\n    <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"isInvalidControl(paymentForm?.get('payeeTo'))\">\n      <span\n        *ngIf=\"!paymentForm?.get('payeeTo')?.errors?.notEmptyObject\"\n        i18n=\"Payee to required error message@@bb-billpay-payment-form.error.payee-to\"\n        data-role=\"invalid-payee-to\"\n      >\n        Please select a payee\n      </span>\n    </bb-input-validation-message-ui>\n  </bb-fieldset-ui>\n</ng-template>\n\n<ng-template #formDetails>\n  <fieldset class=\"bb-fieldset\" data-role=\"payment-details-fieldset\" *ngIf=\"selectedPayee$ | async\">\n    <legend class=\"bb-fieldset__heading border-bottom\">\n      <div class=\"bb-block bb-block--sm\">\n        <span i18n=\"Payment details|text for the 'payment details' payment@@bb-billpay-payment-form.payment-details\">{{\n          paymentDetailsTitle\n        }}</span>\n        <span\n          *ngIf=\"ebillPayment\"\n          class=\"bb-text-support bb-text-default\"\n          i18n=\"\n            Payment description Due|text for the 'payment description'\n            payment@@bb-billpay-payment-form.payment-description\"\n        >\n          - { paymentForm?.get('amount')?.value?.type, select, Due { eBill due amount } Minimum { eBill minimum amount }\n          Balance { eBill total amount } other { eBill custom amount } }\n        </span>\n      </div>\n    </legend>\n    <div class=\"bb-block bb-block--md\" *ngIf=\"ebillPayment\">\n      <bb-billpay-ebill-payment\n        [control]=\"amountGroup\"\n        [eBillDefaultCurrency]=\"paymentDefaultCurrency\"\n        [latestBill]=\"ebillSummary?.latestBill\"\n        [isSubmitted]=\"formSubmitted\"\n      ></bb-billpay-ebill-payment>\n    </div>\n\n    <div class=\"bb-block bb-block--md\" [formGroup]=\"amountGroup\" *ngIf=\"!ebillPayment\">\n      <label\n        class=\"bb-label\"\n        data-role=\"payment-amount-label\"\n        for=\"{{ 'billpay-amount-input-' + id }}\"\n        i18n=\"Amount of payment|ext for the 'payment details' amount@@bb-billpay-payment-form.payment-details.amount\"\n        >Amount</label\n      >\n      <div class=\"bb-form-field bb-form-field--md\">\n        <bb-amount-input-ui\n          formControlName=\"amount\"\n          data-role=\"amount\"\n          [id]=\"'billpay-amount-input-' + id\"\n          [autoDecimal]=\"true\"\n          wrapperClasses=\"bb-amount-input__field--large\"\n          [currency]=\"(selectedAccount$ | async)?.accountBalance?.currencyCode || defaultAmount.currency\"\n          placeholder=\"0.00\"\n          aria-describedby=\"{{ 'billpay-amount-errors-' + id }}\"\n        >\n        </bb-amount-input-ui>\n      </div>\n      <bb-input-validation-message-ui\n        role=\"alert\"\n        id=\"{{ 'billpay-amount-errors-' + id }}\"\n        [showErrors]=\"isInvalidControl(paymentForm?.get('amount'))\"\n      >\n        <span\n          *ngIf=\"!paymentForm?.get('amount')?.errors?.amountInvalid\"\n          i18n=\"Please add amount of this payment|Error zero amount@@bb-billpay-payment-form.error.amount\"\n          data-role=\"invalid-amount\"\n        >\n          Please add amount of this payment.\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"bb-fieldset\" [formGroup]=\"paymentForm\">\n      <label class=\"bb-label\" data-role=\"add-memo-label\" for=\"bb-billpay-payment-form-memo\">\n        <span i18n=\"Memo label|Label for payment memo@@bb-billpay-payment-form.label.memo\">Payment description</span>\n        <span class=\"bb-text-support\" i18n=\"label helper|optional text@@bb-billpay-payment-form.label.memo-helper\">\n          (Optional)</span\n        >\n      </label>\n      <div class=\"bb-form-field bb-form-field--md\">\n        <bb-textarea-ui\n          [id]=\"'bb-billpay-payment-form-memo'\"\n          formControlName=\"memo\"\n          data-role=\"memo\"\n          placeholder=\"Enter payment description\"\n          i18n-placeholder=\"\n            Enter payment description|Placeholder for payment description@@bb-billpay-payment-form.payment.description\"\n          [showCharCounter]=\"true\"\n          [maxLength]=\"140\"\n          [rows]=\"2\"\n        >\n        </bb-textarea-ui>\n      </div>\n    </div>\n\n    <!-- Payment scheduler -->\n    <bb-collapsible-ui\n      *ngIf=\"(selectedPayee$ | async) && (!isEditPayment || paymentType !== 'oneOff'); else editOneOffPaymentSchedule\"\n      data-role=\"schedule-toggle\"\n      [isOpen]=\"true\"\n    >\n      <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n        <div class=\"border-bottom bb-block bb-block--md\">\n          <button\n            bbButton\n            class=\"bb-stack bb-product-selector__item-content\"\n            (click)=\"toggle()\"\n            type=\"button\"\n            color=\"unstyled\"\n          >\n            <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-left\">\n              <div class=\"bb-block bb-block--sm\">\n                <span\n                  class=\"bb-heading-2\"\n                  data-role=\"schedule-section-title\"\n                  i18n=\"\n                    Schedule section title|Title of the form section with payment schedule\n                    fields@@bb-billpay-payment-form.section.schedule.title\"\n                >\n                  Schedule\n                </span>\n                <span class=\"bb-text-support bb-text-default\">\n                  <bb-schedule-label-ui\n                    [item]=\"scheduleLabelData\"\n                    [frequencies]=\"frequencies\"\n                    [minOccurrences]=\"minOccurs\"\n                    [isSingleTransfer]=\"schedule.frequency === frequencyKeys.Once\"\n                  >\n                  </bb-schedule-label-ui>\n                </span>\n              </div>\n            </div>\n            <bb-icon-ui\n              class=\"bb-stack__item\"\n              cropped\n              data-role=\"schedule-toggle-icon\"\n              aria-label=\"Schedule toggle\"\n              i18n-aria-label=\"\n                Schedule toggle label|Aria label for schedule\n                toggle@@bb-billpay-payment-form.bb-schedule-ui.label.toggle\"\n              [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"\n            ></bb-icon-ui>\n          </button>\n        </div>\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <bb-schedule-ui\n          [scheduleForm]=\"paymentForm.get('schedule')\"\n          [paymentServices]=\"(selectedPayee$ | async)?.paymentServices\"\n          [defaultPaymentServiceType]=\"defaultPaymentServiceType\"\n          [frequencies]=\"frequencies\"\n          [minOccurs]=\"minOccurs\"\n          [maxOccurs]=\"maxOccurs\"\n          [minDate]=\"minDate$ | async\"\n          [formSubmitted]=\"formSubmitted\"\n          data-role=\"payment-schedule\"\n        >\n        </bb-schedule-ui>\n      </ng-template>\n    </bb-collapsible-ui>\n\n    <ng-template #editOneOffPaymentSchedule>\n      <div *ngIf=\"selectedPayee$ | async\" class=\"bb-block bb-block--md\" [formGroup]=\"paymentForm.get('schedule')\">\n        <label class=\"bb-label\" data-role=\"deliver-payment-by-date\">\n          <span\n            id=\"billpay-schedule-end-date-on-{{ id }}\"\n            i18n=\"Deliver payment by label|Edit one off payment date@@bb-billpay-payment-form.label.deliver-payment-by\"\n            >Deliver payment by</span\n          >\n          <div>\n            <bb-input-datepicker-ui\n              formControlName=\"startDate\"\n              [minDate]=\"minDate$ | async\"\n              data-role=\"once-start-date-calendar\"\n              aria-label=\"start-date\"\n              aria-labelledby=\"billpay-schedule-end-date-on-{{ id }}\"\n              datepickerDescribedby=\"billpay-schedule-end-date-on-error-{{ id }}\"\n            ></bb-input-datepicker-ui>\n          </div>\n          <bb-input-validation-message-ui\n            id=\"billpay-schedule-end-date-on-error-{{ id }}\"\n            aria-live=\"polite\"\n            [showErrors]=\"paymentForm.get('schedule.startDate')?.invalid && formSubmitted\"\n          >\n            <span\n              *ngIf=\"paymentForm.get('schedule.startDate')?.hasError('required')\"\n              i18n=\"\n                Execution date required error text|Error required message for Execution date input\n                field@@bb-billpay-payment-form.error.required.startDate\"\n              data-role=\"missing-schedule-execution-date\"\n            >\n              Execution date is required.\n            </span>\n            <span\n              *ngIf=\"\n                paymentForm.get('schedule.startDate')?.hasError('pastDate') ||\n                paymentForm.get('schedule.startDate')?.hasError('dateLessThanMinDate')\n              \"\n              i18n=\"\n                Execution date past date error text |Error past date message for Execution date input\n                field@@bb-billpay-payment-form.error.pastDate.startDate\"\n              data-role=\"past-date-schedule-execution-date\"\n            >\n              Execution date cannot be before delivery date.\n            </span>\n            <span\n              *ngIf=\"paymentForm?.get('schedule.startDate')?.hasError('invalidDateFormat')\"\n              i18n=\"\n                Execution date invalid date error text |Error invalid date format message for Execution date input\n                field@@bb-billpay-payment-form.error.invalidDateFormat\"\n              data-role=\"invalid-date-schedule-execution-date\"\n            >\n              Invalid date format.\n            </span>\n          </bb-input-validation-message-ui>\n        </label>\n      </div>\n    </ng-template>\n  </fieldset>\n</ng-template>\n\n<ng-template #formOvernightAddress>\n  <ng-container\n    *ngIf=\"schedule.paymentService?.service?.paymentServiceType === 'OVERNIGHT_CHECK'\"\n    [formGroup]=\"paymentForm\"\n  >\n    <bb-fieldset-ui\n      i18n-heading=\"\n        Overnight check address|Text for the payment overnight\n        address@@bb-billpay-payment-form.payment-overnight-address\"\n      heading=\"Overnight check address\"\n      class=\"bb-block bb-block-xl\"\n    >\n      <bb-alert-ui\n        modifier=\"info\"\n        class=\"d-block\"\n        title=\"This address might be a dedicated PO box for overnight payments. Please check with your biller\"\n        i18n-title=\"alert title|Address alert@@bb-billpay-payment-form.payment-overnight-address.alert\"\n        data-role=\"overnight-alert-message\"\n      >\n      </bb-alert-ui>\n      <bb-billpay-address-form\n        [formGroup]=\"paymentForm.get('overnightDeliveryAddress')\"\n        formGroupName=\"overnightDeliveryAddress\"\n      ></bb-billpay-address-form>\n    </bb-fieldset-ui>\n  </ng-container>\n</ng-template>\n","import { Component, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-billpay-payment-discard-changes-modal',\n  templateUrl: './billpay-payment-discard-changes-modal.component.html',\n})\nexport class BillpayPaymentDiscardChangesModalComponent {\n  /**\n   * Modal title.\n   */\n  @Input() title?: string;\n  /**\n   * Modal subtitle.\n   */\n  @Input() subtitle?: string;\n  /**\n   * Modal confirm button text.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('confirm-button-label') confirmButtonLabel?: string;\n  /**\n   * Modal cancel button text.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('cancel-button-label') cancelButtonLabel?: string;\n\n  @Output() resolve = new EventEmitter<boolean>();\n\n  cancelModal() {\n    this.resolve.emit(false);\n  }\n\n  confirmModal() {\n    this.resolve.emit(true);\n  }\n}\n","<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"discard-payment-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        data-role=\"discard-payment-modal-header\"\n        headingType=\"h2\"\n        heading=\"{{ title }}\"\n        i18n-heading=\"Discard payment modal header@@billpay.payment-discard-changes.modal.header\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span\n        i18n=\"Discard payment modal body@@billpay.payment-discard-changes.modal.body\"\n        data-role=\"discard-payment-modal-body\"\n        >{{ subtitle }}</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"confirmModal()\"\n          data-role=\"discard-payment-modal-confirm-button\"\n          i18n=\"\n            Confirm button|Discard payment modal footer button@@billpay.payment-discard-changes.modal.footer.confirm\"\n        >\n          {{ confirmButtonLabel }}\n        </button>\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"bb-button-bar__button\"\n          (click)=\"cancelModal()\"\n          data-role=\"discard-payment-modal-cancel-button\"\n          i18n=\"Cancel button|Discard payment modal footer button@@billpay.payment-discard-changes.modal.footer.cancel\"\n        >\n          {{ cancelButtonLabel }}\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport { BillPayAccountsGetResponseBody, BillPayPayeesSummaryGetResponseBody } from '@backbase/data-ang/billpay';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  Frequency,\n  LoadingState,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PaymentRouteParams } from '../../../model/route.model';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'bb-billpay-payment-form-container',\n  templateUrl: './billpay-payment-form-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentFormContainerComponent implements OnInit, BillpayDiscardChangesFormComponent {\n  paymentRouteObservable$: Observable<PaymentRouteParams>;\n  paymentDataObservable$:\n    | Observable<(BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody) | undefined>\n    | undefined;\n\n  private isFormTouched = false;\n  @Input() frequencies?: Frequency[];\n\n  /** @internal */\n  constructor(\n    private readonly routerService: PayBillsNavigationService,\n    private readonly paymentDataService: BillpayPaymentDataService,\n    private readonly paymentStateService: PayBillsStateService,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private readonly route: ActivatedRoute,\n  ) {\n    this.paymentRouteObservable$ = this.routerService.routeParams;\n  }\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  @Input() accountNumberMasked?: boolean;\n  @Input() paymentDetailsTitle?: string;\n  @Input() paymentDefaultCurrency?: string;\n\n  ngOnInit() {\n    this.paymentDataObservable$ = combineLatest([\n      this.paymentRouteObservable$,\n      this.paymentDataService.getPayeesAndAccounts(),\n    ]).pipe(map(([routeParams, payeeSummariesAndAccounts]) => ({ ...routeParams, ...payeeSummariesAndAccounts })));\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if ((this.isFormTouched || this.paymentStateService.isFormProcessing) && !this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  hasNoErrorState(data: BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody) {\n    return (\n      this.payeesLoadingState !== LoadingState.Error &&\n      this.accountsLoadingState !== LoadingState.Error &&\n      !!data.accounts &&\n      !!data.payeeSummaries\n    );\n  }\n\n  onSubmittedFormData(data: PaymentFormState) {\n    this.paymentStateService.isFormProcessing = true;\n    this.paymentStateService.updatePaymentState([data]);\n    this.routerService.navigateToReview({ relativeTo: this.route.parent });\n  }\n\n  get paymentState() {\n    return this.paymentStateService.paymentState.pipe(map((state: PaymentFormState[] | undefined) => state?.[0]));\n  }\n\n  get payeesLoadingState() {\n    return this.paymentDataService.payeesLoadingState;\n  }\n\n  get accountsLoadingState() {\n    return this.paymentDataService.accountsLoadingState;\n  }\n\n  openModal(): Observable<boolean> {\n    return this.isFormTouched || this.paymentStateService.isFormProcessing\n      ? this.discardModalService.openModal()\n      : of(true);\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  onFormValueChanged() {\n    this.isFormTouched = true;\n  }\n\n  onCancelForm() {\n    this.routerService.navigateToPayeeList();\n  }\n}\n","<ng-container *ngIf=\"paymentDataObservable$ | async as paymentData; else loadingState\">\n  <ng-container *ngIf=\"hasNoErrorState(paymentData); else errorState\">\n    <section>\n      <bb-billpay-payment-form\n        *ngIf=\"paymentData.pageType === 'new'\"\n        [payeeSummaries]=\"paymentData?.payeeSummaries\"\n        [accounts]=\"paymentData?.accounts\"\n        [selectedPayeeId]=\"paymentData.payeeId\"\n        (submitPayment)=\"onSubmittedFormData($event)\"\n        (valueChanged)=\"onFormValueChanged()\"\n        (cancelPayment)=\"onCancelForm()\"\n        [paymentState]=\"paymentState | async\"\n        [accountNumberMask]=\"accountNumberMasked\"\n        [isEditPayment]=\"false\"\n        [paymentType]=\"paymentData.paymentType\"\n        [paymentDetailsTitle]=\"paymentDetailsTitle\"\n        [paymentDefaultCurrency]=\"paymentDefaultCurrency\"\n        [frequencies]=\"frequencies\"\n      >\n      </bb-billpay-payment-form>\n    </section>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-loading-indicator-ui loaderSize=\"lg\" data-role=\"loading-state\"> </bb-loading-indicator-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-empty-state-ui\n        data-role=\"error-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"error\"\n        subtitle=\"Try to reload the page or contact support\"\n        i18n-subtitle=\"\n          Try to reload the page or contact support|Payment loading error\n          subtitle@@bb-billpay-manage-payment-widget-ang.loading.subtitle\"\n        title=\"Payment information is not loading\"\n        i18n-title=\"\n          Payment information is not loading|Payment loading error\n          title@@bb-billpay-manage-payment-widget-ang.loading.title\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-create-form-page-discard-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Cancel payment?\"\n  i18n-title=\"Discard changes modal header@@billpay.manage-payment.discard-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel this payment? You will lose any details entered.\"\n  i18n-subtitle=\"Discard changes modal body@@billpay.manage-payment.discard-changes-modal.body\"\n  confirm-button-label=\"Cancel payment\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.discard-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue with payment\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.discard-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n","import { Component, ViewChild } from '@angular/core';\nimport { BillpayPaymentFormContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-form-container/billpay-payment-form-container.component';\nimport { Observable } from 'rxjs';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-stack\">\n      <div class=\"bb-block bb-block--sm bb-stack__item bb-stack__item--fill\">\n        <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n          <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n          <span i18n=\"button label|Back button@@pay-bills-journey.payee-list.back\">Back to Payee List</span>\n        </button>\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Make a payment\"\n          i18n-heading=\"@@pay-bills-journey.title.make-a-payment\"\n          data-role=\"pay-a-bill-journey-title\"\n        >\n        </bb-header-ui>\n        <p i18n=\"@@pay-bills-journey.pay-payee.header-description\" data-role=\"multiple-bills-widget-title-info\">\n          Add payees if you would like to pay a single bill or multiple bills\n        </p>\n      </div>\n    </div>\n    <bb-billpay-payment-form-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [paymentDetailsTitle]=\"config.paymentDetailsTitle\"\n      [paymentDefaultCurrency]=\"config.paymentDefaultCurrency\"\n      [frequencies]=\"config.frequencies\"\n      #paymentFormContainer\n    ></bb-billpay-payment-form-container>\n  `,\n})\nexport class BillpayPaymentFormViewComponent {\n  @ViewChild('paymentFormContainer') child!: BillpayPaymentFormContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n\n  goBack() {\n    this.routerService.navigateToPayeeList();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentParserService,\n  PaymentFormState,\n  PaymentReview,\n  Frequency,\n  BillpayPaymentDataService,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-payment-review-container',\n  templateUrl: './billpay-payment-review-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentReviewContainerComponent implements OnInit, OnDestroy, BillpayDiscardChangesFormComponent {\n  payment?: PaymentFormState;\n  paymentReview?: PaymentReview;\n  private readonly paymentConfirm$ = new BehaviorSubject<PaymentFormState | undefined>(undefined);\n  private readonly componentDestroyed$ = new Subject<void>();\n  @Input() frequencies?: Frequency[];\n  @Input() dismissTimeoutValue: number | undefined;\n  @Input() accountNumberMasked?: boolean;\n  paymentError = false;\n  hasDateError = false;\n  frequencyLabel?: string;\n  private editMode = false;\n\n  @ViewChild('notificationMessage') notificationMessageTemplate: TemplateRef<any> | string = '';\n  @ViewChild('notificationHeader') notificationHeaderTemplate: TemplateRef<any> | string = '';\n  @ViewChild('failAlert') failAlert!: ElementRef;\n\n  /** @internal */\n  constructor(\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly dataService: BillpayPaymentDataService,\n    private readonly stateService: PayBillsStateService,\n    private readonly notificationService: NotificationService,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private readonly paymentParserService: BillpayPaymentParserService,\n    private readonly route: ActivatedRoute,\n    private cdRef: ChangeDetectorRef,\n  ) {}\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  private get dismissTimeout(): number {\n    if (this.dismissTimeoutValue === undefined) {\n      throw new Error('Dismiss timeout value not found');\n    }\n    return this.dismissTimeoutValue;\n  }\n\n  ngOnInit() {\n    this.stateService.paymentState.pipe(take(1)).subscribe(payment => {\n      this.payment = payment?.[0];\n      this.paymentReview = this.payment && this.paymentParserService.paymentFormStateToReview(this.payment);\n      const frequency = this.frequencies?.find(freq => this.payment?.schedule?.frequency === freq.value);\n      this.frequencyLabel = frequency?.name || '';\n      if (!this.payment) {\n        this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n      }\n    });\n    this.paymentConfirm$\n      .pipe(takeUntil(this.componentDestroyed$), filter(Boolean))\n      .subscribe(payment => this.onPaymentConfirm(payment as PaymentFormState));\n  }\n\n  ngOnDestroy(): void {\n    this.componentDestroyed$.next();\n    this.componentDestroyed$.complete();\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if (!this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  onEdit() {\n    this.editMode = true;\n    this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n  }\n\n  navigateToPayments() {\n    this.navigationService.navigateToPayments();\n  }\n\n  cancel() {\n    this.navigationService.navigateToPayeeList();\n  }\n\n  confirmPayment(payment?: PaymentFormState) {\n    if (!payment) return;\n    this.paymentConfirm$.next(payment);\n  }\n\n  openModal(): Observable<boolean> {\n    return this.paymentConfirm$.pipe(\n      switchMap(payment => (payment || this.editMode ? of(true) : this.discardModalService.openModal())),\n      tap(isResolved => isResolved && !this.editMode && this.stateService.reset()),\n    );\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  private onPaymentConfirm(payment: PaymentFormState) {\n    this.paymentError = false;\n    this.hasDateError = false;\n    this.dataService\n      .createPayment(payment)\n      .pipe(takeUntil(this.componentDestroyed$))\n      .subscribe(\n        () => {\n          this.navigationService.navigateToPayeeList();\n          this.notificationService.showNotification({\n            header: this.notificationHeaderTemplate,\n            message: this.notificationMessageTemplate,\n            modifier: 'success',\n            ttl: this.dismissTimeout,\n          });\n        },\n        response => {\n          this.paymentError = true;\n          this.hasDateError = response.error?.errors?.some((a: any) => a.key === 'billpay.api.invalidPaymentDate');\n          this.cdRef.markForCheck();\n          this.failAlert.nativeElement.scrollIntoView(false);\n        },\n      );\n  }\n}\n","<ng-container *ngIf=\"payment\">\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block--xl\">\n        <ng-container *ngTemplateOutlet=\"reviewContent\"></ng-container>\n      </div>\n      <ng-container *ngTemplateOutlet=\"reviewButtons\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #reviewContent>\n  <div #failAlert>\n    <bb-alert-ui\n      title=\"Failed to submit payment. Please try again later.\"\n      i18n-title=\"Failed to submit payment|Title for payment error@@billpay-payment-review-container.error-alert\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-message\"\n      *ngIf=\"paymentError && !hasDateError\"\n    >\n    </bb-alert-ui>\n    <bb-alert-ui\n      title=\"The date selected is invalid.\"\n      i18n-title=\"\n        Failed to submit payment date|Title for payment date error@@billpay-payment-review-container.error-date-alert\"\n      message=\"The payment cannot be scheduled on this date. Please select another date in the previous step.\"\n      i18n-message=\"Date payment error|Date error for payment@@billpay-payment-review.date-error-alert.message\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-date-message\"\n      *ngIf=\"paymentError && hasDateError\"\n    >\n    </bb-alert-ui>\n  </div>\n  <bb-billpay-payment-review-card\n    [accountNumberMask]=\"accountNumberMasked\"\n    [paymentReview]=\"paymentReview\"\n    [frequencyLabel]=\"frequencyLabel\"\n  >\n  </bb-billpay-payment-review-card>\n</ng-template>\n\n<ng-template #reviewButtons>\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"confirm-payment-button\"\n      i18n=\"Payment details confirm button|Label for confirm payment button@@billpay-payment-review.confirm\"\n      (click)=\"confirmPayment(payment)\"\n      class=\"bb-button-bar__button\"\n    >\n      Submit\n    </button>\n    <button\n      bbButton\n      data-role=\"edit-payment-button\"\n      i18n=\"Payment details edit button|Label for edit payment button@@billpay-payment-review.edit\"\n      (click)=\"onEdit()\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n    >\n      Edit\n    </button>\n    <button\n      bbButton\n      data-role=\"cancel-payment-button\"\n      i18n=\"Payment details cancel button|Label for cancel payment button@@billpay-payment-review.cancel\"\n      (click)=\"cancel()\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n    >\n      Discard\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationMessage>\n  <ng-container *ngIf=\"payment?.payeeTo as payee\">\n    <span\n      i18n=\"\n        payment notification message|Payment confirmation success notification\n        message@@billpay-payment-review.confirm.notification.message\"\n      >Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }} has been scheduled\n      successfully</span\n    >\n    <div class=\"bb-button-bar\">\n      <button\n        bbButton\n        data-role=\"notification-secondary-button\"\n        class=\"bb-button-bar__button\"\n        (click)=\"navigateToPayments()\"\n        i18n=\"\n          payment notification button|Navigate to scheduled payments@@billpay-payment-review.confirm.notification.button\"\n      >\n        View scheduled payments\n      </button>\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      payment notification header|Payment confirmation success notification\n      header@@billpay-payment-review.confirm.notification.header\"\n    >Payment scheduled</span\n  >\n</ng-template>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-review-page-discard-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Cancel payment?\"\n  i18n-title=\"Discard changes modal header@@billpay.manage-payment.discard-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel this payment? You will lose any details entered.\"\n  i18n-subtitle=\"Discard changes modal body@@billpay.manage-payment.discard-changes-modal.body\"\n  confirm-button-label=\"Cancel payment\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.discard-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue with payment\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.discard-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n","import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentReviewContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-review-container/billpay-payment-review-container.component';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-stack\">\n      <div class=\"bb-block bb-block--sm bb-stack__item bb-stack__item--fill\">\n        <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n          <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n          <span i18n=\"button label|Back button@@pay-bills-journey.payee-list.back\">Back to Payee List</span>\n        </button>\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Review your payment\"\n          i18n-heading=\"@@pay-bills-journey.title.make-a-payment\"\n          data-role=\"pay-a-bill-journey-review-title\"\n        >\n        </bb-header-ui>\n      </div>\n    </div>\n    <bb-billpay-payment-review-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [dismissTimeoutValue]=\"config.notificationDismissTime\"\n      [frequencies]=\"config.frequencies\"\n      #paymentReviewContainer\n    ></bb-billpay-payment-review-container>\n  `,\n})\nexport class BillpayPaymentReviewViewComponent {\n  @ViewChild('paymentReviewContainer') child!: BillpayPaymentReviewContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayeeList();\n  }\n}\n","import { HostListener, OnDestroy, Directive, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, shareReplay, take, takeUntil } from 'rxjs/operators';\nimport { BillPayAccountsGetResponseBody, BillPayPayeesSummaryGetResponseBody } from '@backbase/data-ang/billpay';\n\nimport { PayBillsStateService } from '../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\n\n@Directive()\nexport abstract class BasePaymentEditFormContainerDirective implements OnDestroy, BillpayDiscardChangesFormComponent {\n  readonly id$: Observable<string>;\n  readonly payeesAndAccounts$: Observable<BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody>;\n\n  protected readonly destroy$ = new Subject<void>();\n  private isFormTouched = false;\n\n  @Input() accountNumberMasked?: boolean;\n  @Input() paymentDetailsTitle?: string;\n\n  abstract onPaymentSubmitted(payment: PaymentFormState, id: string): void;\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if ((this.isFormTouched || this.stateService.isFormProcessing) && !this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  /** @internal */\n  protected constructor(\n    protected readonly dataService: BillpayPaymentDataService,\n    protected readonly stateService: PayBillsStateService,\n    private readonly route: ActivatedRoute,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    readonly routerService: PayBillsNavigationService,\n  ) {\n    this.id$ = this.route.paramMap.pipe(\n      take(1),\n      map(params => params.get('id') || ''),\n    );\n\n    this.payeesAndAccounts$ = this.dataService.getPayeesAndAccounts().pipe(shareReplay(1), takeUntil(this.destroy$));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  openModal(): Observable<boolean> {\n    return this.isFormTouched || this.stateService.isFormProcessing ? this.discardModalService.openModal() : of(true);\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  onFormValueChanged() {\n    this.isFormTouched = true;\n  }\n\n  onCancelForm() {\n    this.routerService.navigateToPayeeList();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, combineLatest, of } from 'rxjs';\n\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  BillpayPaymentParserService,\n  Frequency,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\n\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { BasePaymentEditFormContainerDirective } from '../../../directives/base-payment-edit-form-container.model';\n\n@Component({\n  selector: 'bb-billpay-payment-recurring-edit-form-container',\n  templateUrl: './billpay-payment-recurring-edit-form-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentRecurringEditFormContainerComponent\n  extends BasePaymentEditFormContainerDirective\n  implements OnInit {\n  paymentRecurringState$?: Observable<PaymentFormState | PaymentFormState[]>;\n  hasLoadingError = false;\n  private activatedRoute?: ActivatedRoute;\n\n  @Input() frequencies?: Frequency[];\n\n  /** @internal */\n  constructor(\n    dataService: BillpayPaymentDataService,\n    stateService: PayBillsStateService,\n    route: ActivatedRoute,\n    discardModalService: BillpayDiscardChangesModalService,\n    readonly routerService: PayBillsNavigationService,\n    private readonly parserService: BillpayPaymentParserService,\n  ) {\n    super(dataService, stateService, route, discardModalService, routerService);\n    this.activatedRoute = route;\n  }\n\n  ngOnInit() {\n    this.paymentRecurringState$ = combineLatest([\n      this.id$,\n      this.stateService.paymentState.pipe(map((state?: PaymentFormState[]) => state?.[0])),\n      this.payeesAndAccounts$,\n    ]).pipe(\n      switchMap(([id, state, data]) => {\n        return (\n          (state && of(state)) ||\n          this.dataService.getRecurringPayment(id).pipe(\n            map(\n              payment =>\n                payment &&\n                data?.payeeSummaries &&\n                this.parserService.paymentRecurringToFormState(payment, data.payeeSummaries),\n            ),\n            catchError(() => {\n              this.hasLoadingError = true;\n              return of({} as PaymentFormState);\n            }),\n          )\n        );\n      }),\n    );\n  }\n\n  onPaymentSubmitted(data: PaymentFormState, id: string) {\n    this.stateService.isFormProcessing = true;\n    this.stateService.updatePaymentState([data]);\n    this.routerService.navigateToEditRecurringReview(id, { relativeTo: this.activatedRoute?.parent });\n  }\n}\n","<ng-container\n  *ngIf=\"{\n    state: paymentRecurringState$ | async,\n    payeeSummaries: (payeesAndAccounts$ | async)?.payeeSummaries,\n    accounts: (payeesAndAccounts$ | async)?.accounts,\n    paymentId: id$ | async\n  } as data\"\n>\n  <ng-container *ngIf=\"data.state; else loadingState\">\n    <ng-container *ngIf=\"!hasLoadingError; else errorState\">\n      <bb-billpay-payment-form\n        [payeeSummaries]=\"data.payeeSummaries\"\n        [accounts]=\"data.accounts\"\n        [selectedPayeeId]=\"data.state?.payeeTo?.id\"\n        [paymentState]=\"data.state\"\n        [isEditPayment]=\"true\"\n        [paymentType]=\"'recurring'\"\n        (cancelPayment)=\"onCancelForm()\"\n        [accountNumberMask]=\"accountNumberMasked\"\n        (submitPayment)=\"onPaymentSubmitted($event, data.paymentId)\"\n        (valueChanged)=\"onFormValueChanged()\"\n        [paymentDetailsTitle]=\"paymentDetailsTitle\"\n        [frequencies]=\"frequencies\"\n      >\n      </bb-billpay-payment-form>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #loadingState>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-loading-indicator-ui loaderSize=\"lg\" data-role=\"loading-state\"> </bb-loading-indicator-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"error\"\n          subtitle=\"Try to reload the page or contact support\"\n          i18n-subtitle=\"\n            Try to reload the page or contact support|Payee List loading\n            subtitle@@bb-billpay-manage-payment-widget-ang.loading.subtitle\"\n          title=\"Payment information is not loading\"\n          i18n-title=\"\n            Payment information is not loading|Form List loading\n            title@@bb-billpay-manage-payment-widget-ang.loading.title\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <bb-billpay-payment-discard-changes-modal\n    *ngIf=\"isDiscardModalOpen\"\n    data-role=\"billpay-payment-edit-review-page-lose-changes-modal\"\n    (resolve)=\"onModalResolve($event)\"\n    title=\"Lose changes?\"\n    i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n    subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n    i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n    confirm-button-label=\"Lose changes\"\n    i18n-confirm-button-label=\"\n      confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n    cancel-button-label=\"Continue editing\"\n    i18n-cancel-button-label=\"\n      cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n  ></bb-billpay-payment-discard-changes-modal>\n</ng-container>\n","import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentRecurringEditFormContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-recurring-edit-form-container/billpay-payment-recurring-edit-form-container.component';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-block\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n        <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n        <span i18n=\"button label|Back button@@pay-bills-journey.payments-list.back\">Back to payments list</span>\n      </button>\n    </div>\n    <bb-billpay-payment-recurring-edit-form-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [paymentDetailsTitle]=\"config.paymentDetailsTitle\"\n      [frequencies]=\"config.frequencies\"\n      #paymentRecurringEditForm\n    ></bb-billpay-payment-recurring-edit-form-container>\n  `,\n})\nexport class BillpayPaymentRecurringEditFormViewComponent {\n  @ViewChild('paymentRecurringEditForm') child!: BillpayPaymentRecurringEditFormContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayments();\n  }\n}\n","import { HostListener, OnDestroy, OnInit, TemplateRef, ViewChild, Directive, Input, ElementRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport { filter, first, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\n\nimport { PayBillsStateService } from '../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentParserService,\n  PaymentFormState,\n  PaymentReview,\n} from '@backbase/billpay-journeys-common';\n\n@Directive()\nexport abstract class BasePaymentEditReviewContainerDirective\n  implements OnInit, OnDestroy, BillpayDiscardChangesFormComponent {\n  payment?: PaymentFormState;\n  paymentReview?: PaymentReview;\n  readonly id$: Observable<string>;\n  paymentError = false;\n  hasDateError = false;\n\n  protected readonly paymentConfirm$ = new BehaviorSubject<PaymentFormState | undefined>(undefined);\n  protected readonly destroy$ = new Subject<void>();\n\n  @Input() dismissTimeoutValue: number | undefined;\n  @Input() accountNumberMasked?: boolean;\n\n  @ViewChild('notificationMessage') notificationMessageTemplate: TemplateRef<any> | string = '';\n  @ViewChild('notificationHeader') notificationHeaderTemplate: TemplateRef<any> | string = '';\n  @ViewChild('failAlert') failAlert!: ElementRef;\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if (!this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  abstract navigateToForm(id: string): void;\n  protected abstract onPaymentConfirm(payment: PaymentFormState, id: string): void;\n\n  /** @internal */\n  protected constructor(\n    private readonly route: ActivatedRoute,\n    private readonly stateService: PayBillsStateService,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private readonly paymentParserService: BillpayPaymentParserService,\n    readonly routerService: PayBillsNavigationService,\n  ) {\n    this.id$ = this.route.paramMap.pipe(\n      first(),\n      map(params => params.get('id') || ''),\n    );\n  }\n\n  ngOnInit() {\n    combineLatest([this.stateService.paymentState, this.id$])\n      .pipe(take(1))\n      .subscribe(([payment, id]: [PaymentFormState[] | undefined, string]) => {\n        this.payment = payment?.[0];\n        this.paymentReview = this.payment && this.paymentParserService.paymentFormStateToReview(this.payment);\n        if (!this.payment) {\n          this.navigateToForm(id);\n        }\n      });\n\n    combineLatest([this.paymentConfirm$.pipe(filter(Boolean)), this.id$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([payment, id]) => this.onPaymentConfirm(payment as PaymentFormState, id));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  confirmPayment(payment?: PaymentFormState) {\n    if (!payment) return;\n    this.paymentConfirm$.next(payment);\n  }\n\n  openModal(): Observable<boolean> {\n    return this.paymentConfirm$.pipe(\n      switchMap(payment => (payment ? of(true) : this.discardModalService.openModal())),\n      tap(isResolved => isResolved && this.stateService.reset()),\n    );\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  cancel() {\n    this.routerService.navigateToPayeeList();\n  }\n\n  protected get dismissTimeout(): number {\n    if (this.dismissTimeoutValue === undefined) {\n      throw new Error('Dismiss timeout value not found');\n    }\n    return this.dismissTimeoutValue;\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  BillpayPaymentParserService,\n  PaymentFormState,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n} from '@backbase/billpay-journeys-common';\nimport { BasePaymentEditReviewContainerDirective } from '../../../directives/base-payment-edit-review-container.model';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-payment-recurring-edit-review-container',\n  templateUrl: './billpay-payment-recurring-edit-review-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentRecurringEditReviewContainerComponent extends BasePaymentEditReviewContainerDirective {\n  private readonly activatedRoute?: ActivatedRoute;\n\n  /** @internal */\n  constructor(\n    route: ActivatedRoute,\n    stateService: PayBillsStateService,\n    discardModalService: BillpayDiscardChangesModalService,\n    paymentParserService: BillpayPaymentParserService,\n    routerService: PayBillsNavigationService,\n    private readonly dataService: BillpayPaymentDataService,\n    private readonly notificationService: NotificationService,\n    private cdRef: ChangeDetectorRef,\n  ) {\n    super(route, stateService, discardModalService, paymentParserService, routerService);\n    this.activatedRoute = route;\n  }\n\n  navigateToForm(id: string) {\n    this.routerService.navigateToEditRecurringForm(id, { relativeTo: this.activatedRoute?.parent });\n  }\n\n  protected onPaymentConfirm(payment: PaymentFormState, id: string) {\n    this.paymentError = false;\n    this.hasDateError = false;\n    this.dataService\n      .updatePaymentRecurring(payment, id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => {\n          this.routerService.navigateToPayments();\n          this.notificationService.showNotification({\n            header: this.notificationHeaderTemplate,\n            message: this.notificationMessageTemplate,\n            modifier: 'success',\n            ttl: this.dismissTimeout,\n          });\n        },\n        response => {\n          this.paymentError = true;\n          this.hasDateError = response.error?.errors?.some((a: any) => a.key === 'billpay.api.invalidPaymentDate');\n\n          this.cdRef.markForCheck();\n          this.failAlert.nativeElement.scrollIntoView(false);\n        },\n      );\n  }\n}\n","<ng-container *ngIf=\"payment\">\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block--xl\">\n        <ng-container *ngTemplateOutlet=\"recurringEditReviewContent\"></ng-container>\n      </div>\n\n      <ng-container *ngTemplateOutlet=\"recurringEditReviewButtons\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-edit-form-page-lose-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Lose changes?\"\n  i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n  i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n  confirm-button-label=\"Lose changes\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue editing\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n\n<ng-template #recurringEditReviewContent let-payment>\n  <div #failAlert>\n    <bb-alert-ui\n      title=\"Failed to submit payment. Please try again later.\"\n      i18n-title=\"Failed to submit payment|Title for payment error@@billpay-payment-review-container.error-alert\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-message\"\n      *ngIf=\"paymentError && !hasDateError\"\n    >\n    </bb-alert-ui>\n    <bb-alert-ui\n      title=\"The date selected is invalid.\"\n      i18n-title=\"\n        Failed to submit payment date|Title for payment date error@@billpay-payment-review-container.error-date-alert\"\n      message=\"The payment cannot be scheduled on this date. Please select another date in the previous step.\"\n      i18n-message=\"Date payment error|Date error for payment@@billpay-payment-review.date-error-alert.message\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-date-message\"\n      *ngIf=\"paymentError && hasDateError\"\n    >\n    </bb-alert-ui>\n  </div>\n  <bb-billpay-payment-review-card [accountNumberMask]=\"accountNumberMasked\" [paymentReview]=\"paymentReview\">\n  </bb-billpay-payment-review-card>\n</ng-template>\n\n<ng-template #recurringEditReviewButtons>\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"confirm-payment-button\"\n      i18n=\"\n        Payment details confirm button|Label for confirm payment recurring\n        button@@billpay-payment-recurring-review.confirm\"\n      (click)=\"confirmPayment(payment)\"\n      class=\"bb-button-bar__button\"\n    >\n      Confirm payment\n    </button>\n    <button\n      *ngIf=\"id$ | async as paymentId\"\n      bbButton\n      data-role=\"edit-payment-button\"\n      i18n=\"\n        Payment details edit button|Label for edit payment payment recurring\n        button@@billpay-payment-recurring-review.edit\"\n      (click)=\"navigateToForm(paymentId)\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n    >\n      Edit payment\n    </button>\n    <button\n      bbButton\n      data-role=\"cancel-payment-button\"\n      i18n=\"\n        Payment details cancel button|Label for cancel payment payment recurring\n        button@@billpay-payment-recurring-review.cancel\"\n      (click)=\"cancel()\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n    >\n      Cancel\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationMessage>\n  <ng-container *ngIf=\"payment?.payeeTo as payee\">\n    <span\n      i18n=\"\n        payment notification message|Payment confirmation success notification\n        message@@billpay-payment-recurring-review.confirm.notification.message\"\n      >Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }} has been edited\n      successfully</span\n    >\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      payment notification header|Payment confirmation success notification\n      header@@billpay-payment-recurring-review.confirm.notification.header\"\n    >Payment edited</span\n  >\n</ng-template>\n","import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentRecurringEditReviewContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-recurring-edit-review-container/billpay-payment-recurring-edit-review-container.component';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-block\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n        <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n        <span i18n=\"button label|Back button@@pay-bills-journey.payments-list.back\">Back to payments list</span>\n      </button>\n    </div>\n    <bb-billpay-payment-recurring-edit-review-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [dismissTimeoutValue]=\"config.notificationDismissTime\"\n      #paymentRecurringEditReviewContainer\n    ></bb-billpay-payment-recurring-edit-review-container>\n  `,\n})\nexport class BillpayPaymentRecurringEditReviewViewComponent {\n  @ViewChild('paymentRecurringEditReviewContainer') child!: BillpayPaymentRecurringEditReviewContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayments();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { BasePaymentEditFormContainerDirective } from '../../../directives/base-payment-edit-form-container.model';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  BillpayPaymentParserService,\n  Frequency,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\n\n@Component({\n  selector: 'bb-billpay-payment-one-off-edit-form-container',\n  templateUrl: './billpay-payment-one-off-edit-form-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentOneOffEditFormContainerComponent\n  extends BasePaymentEditFormContainerDirective\n  implements OnInit {\n  paymentOneOffState$?: Observable<PaymentFormState>;\n  hasLoadingError = false;\n  @Input() frequencies?: Frequency[];\n  private activatedRoute?: ActivatedRoute;\n\n  /** @internal */\n  constructor(\n    dataService: BillpayPaymentDataService,\n    stateService: PayBillsStateService,\n    route: ActivatedRoute,\n    discardModalService: BillpayDiscardChangesModalService,\n    readonly routerService: PayBillsNavigationService,\n    private readonly parserService: BillpayPaymentParserService,\n  ) {\n    super(dataService, stateService, route, discardModalService, routerService);\n    this.activatedRoute = route;\n  }\n\n  ngOnInit() {\n    this.paymentOneOffState$ = combineLatest([\n      this.id$,\n      this.stateService.paymentState.pipe(map((state?: PaymentFormState[]) => state?.[0])),\n      this.payeesAndAccounts$,\n    ]).pipe(\n      switchMap(([id, state, payeesAndAccounts]) =>\n        state\n          ? of(state)\n          : this.dataService.getOneOffPayment(id).pipe(\n              map(\n                payment =>\n                  payment &&\n                  payeesAndAccounts.payeeSummaries &&\n                  this.parserService.paymentOneOffToFormState(payment, payeesAndAccounts.payeeSummaries),\n              ),\n              catchError(() => {\n                this.hasLoadingError = true;\n                return of({} as PaymentFormState);\n              }),\n            ),\n      ),\n    );\n  }\n\n  onPaymentSubmitted(payment: PaymentFormState, id: string) {\n    this.stateService.isFormProcessing = true;\n    this.stateService.updatePaymentState([payment]);\n    this.routerService.navigateToEditOneOffReview(id, { relativeTo: this.activatedRoute?.parent });\n  }\n}\n","<ng-container\n  *ngIf=\"{\n    state: paymentOneOffState$ | async,\n    paymentId: id$ | async,\n    accounts: (payeesAndAccounts$ | async)?.accounts,\n    payeeSummaries: (payeesAndAccounts$ | async)?.payeeSummaries\n  } as data\"\n>\n  <ng-container *ngIf=\"data.state; else loadingState\">\n    <ng-container *ngIf=\"!hasLoadingError; else errorState\">\n      <bb-billpay-payment-form\n        [payeeSummaries]=\"data.payeeSummaries\"\n        [accounts]=\"data.accounts\"\n        [selectedPayeeId]=\"data.state?.payeeTo?.id\"\n        [paymentState]=\"data.state\"\n        [isEditPayment]=\"true\"\n        [paymentType]=\"'oneOff'\"\n        (cancelPayment)=\"onCancelForm()\"\n        [accountNumberMask]=\"accountNumberMasked\"\n        (submitPayment)=\"onPaymentSubmitted($event, data.paymentId)\"\n        (valueChanged)=\"onFormValueChanged()\"\n        [paymentDetailsTitle]=\"paymentDetailsTitle\"\n        [frequencies]=\"frequencies\"\n      >\n      </bb-billpay-payment-form>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #loadingState>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-loading-indicator-ui loaderSize=\"lg\" data-role=\"loading-state\"> </bb-loading-indicator-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"error\"\n          subtitle=\"Try to reload the page or contact support\"\n          i18n-subtitle=\"\n            Try to reload the page or contact support|Payee List loading\n            subtitle@@bb-billpay-manage-payment-widget-ang.loading.subtitle\"\n          title=\"Payment information is not loading\"\n          i18n-title=\"\n            Payment information is not loading|Form List loading\n            title@@bb-billpay-manage-payment-widget-ang.loading.title\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <bb-billpay-payment-discard-changes-modal\n    *ngIf=\"isDiscardModalOpen\"\n    data-role=\"billpay-payment-edit-form-page-lose-changes-modal\"\n    (resolve)=\"onModalResolve($event)\"\n    title=\"Lose changes?\"\n    i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n    subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n    i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n    confirm-button-label=\"Lose changes\"\n    i18n-confirm-button-label=\"\n      confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n    cancel-button-label=\"Continue editing\"\n    i18n-cancel-button-label=\"\n      cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n  ></bb-billpay-payment-discard-changes-modal>\n</ng-container>\n","import { Component, ViewChild } from '@angular/core';\nimport { BillpayPaymentOneOffEditFormContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-one-off-edit-form-container/billpay-payment-one-off-edit-form-container.component';\nimport { Observable } from 'rxjs';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-block\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n        <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n        <span i18n=\"button label|Back button@@pay-bills-journey.payments-list.back\">Back to payments list</span>\n      </button>\n    </div>\n    <bb-billpay-payment-one-off-edit-form-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [paymentDetailsTitle]=\"config.paymentDetailsTitle\"\n      [frequencies]=\"config.frequencies\"\n      #paymentOneOffEditForm\n    ></bb-billpay-payment-one-off-edit-form-container>\n  `,\n})\nexport class BillpayPaymentOneOffEditFormViewComponent {\n  @ViewChild('paymentOneOffEditForm') child!: BillpayPaymentOneOffEditFormContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayments();\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  BillpayPaymentParserService,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\n\nimport { BasePaymentEditReviewContainerDirective } from '../../../directives/base-payment-edit-review-container.model';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-payment-one-off-edit-review-container',\n  templateUrl: './billpay-payment-one-off-edit-review-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentOneOffEditReviewContainerComponent extends BasePaymentEditReviewContainerDirective {\n  private readonly activatedRoute?: ActivatedRoute;\n\n  /** @internal */\n  constructor(\n    route: ActivatedRoute,\n    stateService: PayBillsStateService,\n    discardModalService: BillpayDiscardChangesModalService,\n    paymentParserService: BillpayPaymentParserService,\n    readonly routerService: PayBillsNavigationService,\n    private readonly dataService: BillpayPaymentDataService,\n    private readonly notificationService: NotificationService,\n    private cdRef: ChangeDetectorRef,\n  ) {\n    super(route, stateService, discardModalService, paymentParserService, routerService);\n    this.activatedRoute = route;\n  }\n\n  navigateToForm(id: string) {\n    this.routerService.navigateToEditOneOffForm(id, { relativeTo: this.activatedRoute?.parent });\n  }\n\n  protected onPaymentConfirm(payment: PaymentFormState, id: string) {\n    this.paymentError = false;\n    this.hasDateError = false;\n\n    this.dataService\n      .updatePaymentOneOff(payment, id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => {\n          this.routerService.navigateToPayments();\n          this.notificationService.showNotification({\n            header: this.notificationHeaderTemplate,\n            message: this.notificationMessageTemplate,\n            modifier: 'success',\n            ttl: this.dismissTimeout,\n          });\n        },\n        error => {\n          this.paymentError = true;\n          this.hasDateError = error.error?.errors?.some((a: any) => a.key === 'billpay.api.invalidPaymentDate');\n          this.cdRef.detectChanges();\n          this.failAlert.nativeElement.scrollIntoView(false);\n        },\n      );\n  }\n}\n","<ng-container *ngIf=\"payment\">\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block--xl\">\n        <ng-container *ngTemplateOutlet=\"oneOffEditReviewContent\"></ng-container>\n      </div>\n\n      <ng-container *ngTemplateOutlet=\"oneOffEditReviewButtons\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-edit-review-page-lose-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Lose changes?\"\n  i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n  i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n  confirm-button-label=\"Lose changes\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue editing\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n\n<ng-template #oneOffEditReviewContent>\n  <div #failAlert>\n    <bb-alert-ui\n      title=\"Failed to submit payment. Please try again later.\"\n      i18n-title=\"Failed to submit payment|Title for payment error@@billpay-payment-review-container.error-alert\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-message\"\n      *ngIf=\"paymentError && !hasDateError\"\n    >\n    </bb-alert-ui>\n    <bb-alert-ui\n      title=\"The date selected is invalid.\"\n      i18n-title=\"\n        Failed to submit payment date|Title for payment date error@@billpay-payment-review-container.error-date-alert\"\n      message=\"The payment cannot be scheduled on this date. Please select another date in the previous step.\"\n      i18n-message=\"Date payment error|Date error for payment@@billpay-payment-review.date-error-alert.message\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-date-message\"\n      *ngIf=\"paymentError && hasDateError\"\n    >\n    </bb-alert-ui>\n  </div>\n  <bb-billpay-payment-review-card [accountNumberMask]=\"accountNumberMasked\" [paymentReview]=\"paymentReview\">\n  </bb-billpay-payment-review-card>\n</ng-template>\n\n<ng-template #oneOffEditReviewButtons>\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"confirm-payment-button\"\n      i18n=\"\n        Payment details confirm button|Label for confirm payment oneOff button@@billpay-payment-oneOff-review.confirm\"\n      (click)=\"confirmPayment(payment)\"\n      class=\"bb-button-bar__button\"\n    >\n      Confirm payment\n    </button>\n    <button\n      *ngIf=\"id$ | async as paymentId\"\n      bbButton\n      data-role=\"edit-payment-button\"\n      i18n=\"\n        Payment details edit button|Label for edit payment payment oneOff button@@billpay-payment-oneOff-review.edit\"\n      (click)=\"navigateToForm(paymentId)\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n    >\n      Edit payment\n    </button>\n    <button\n      bbButton\n      data-role=\"cancel-payment-button\"\n      i18n=\"\n        Payment details cancel button|Label for cancel payment payment oneOff\n        button@@billpay-payment-oneOff-review.cancel\"\n      (click)=\"cancel()\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n    >\n      Cancel\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationMessage>\n  <ng-container *ngIf=\"payment?.payeeTo as payee\">\n    <span\n      i18n=\"\n        payment notification message|Payment confirmation success notification\n        message@@billpay-payment-oneOff-review.confirm.notification.message\"\n      >Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }} has been edited\n      successfully</span\n    >\n  </ng-container>\n</ng-template>\n\n<ng-template notificationHeader>\n  <span\n    i18n=\"\n      payment notification header|Payment confirmation success notification\n      header@@billpay-payment-oneOff-review.confirm.notification.header\"\n    >Payment edited</span\n  >\n</ng-template>\n","import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentOneOffEditReviewContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-one-off-edit-review-container/billpay-payment-one-off-edit-review-container.component';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-block\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n        <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n        <span i18n=\"button label|Back button@@pay-bills-journey.payments-list.back\">Back to payments list</span>\n      </button>\n    </div>\n    <bb-billpay-payment-one-off-edit-review-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [dismissTimeoutValue]=\"config.notificationDismissTime\"\n      #paymentOneOffEditReviewContainer\n    ></bb-billpay-payment-one-off-edit-review-container>\n  `,\n})\nexport class BillpayPaymentOneOffEditReviewViewComponent {\n  @ViewChild('paymentOneOffEditReviewContainer') child!: BillpayPaymentOneOffEditReviewContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayments();\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BillpayUtilityService as Utility, formControlOptions, FrequencyKeys } from '@backbase/billpay-journeys-common';\nimport { Frequency } from '@backbase/billpay-journeys-common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-billpay-payment-frequency',\n  templateUrl: './billpay-payment-frequency.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentFrequencyComponent implements OnInit, OnDestroy {\n  @Input() scheduleForm?: FormGroup;\n  @Input() frequencies?: Array<Frequency>;\n  private readonly destroy$ = new Subject<void>();\n  readonly id = Utility.generateId();\n\n  ngOnInit() {\n    this.processFrequencyValueChanges();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private processFrequencyValueChanges() {\n    if (!this.scheduleForm) return;\n    const endTypeControl = this.scheduleForm.controls['endType'];\n    const endDateControl = this.scheduleForm.controls['endDate'];\n    const repeatControl = this.scheduleForm.controls['repeat'];\n    const startDateControl = this.scheduleForm.controls['startDate'];\n    const paymentServiceControl = this.scheduleForm.controls['paymentService'];\n    const frequencyControl = this.scheduleForm.controls['frequency'];\n    const paymentServiceDateControl = this.scheduleForm.controls['paymentServiceDate'];\n    const sendDateControl = this.scheduleForm.controls['sendDate'];\n\n    if (startDateControl && frequencyControl && paymentServiceControl && endTypeControl && endDateControl) {\n      frequencyControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        if (value === FrequencyKeys.Once) {\n          paymentServiceControl.enable(formControlOptions);\n          sendDateControl.enable(formControlOptions);\n          paymentServiceControl.updateValueAndValidity();\n          paymentServiceDateControl.enable(formControlOptions);\n          endDateControl.disable(formControlOptions);\n          endTypeControl.disable(formControlOptions);\n          repeatControl.disable(formControlOptions);\n        } else {\n          paymentServiceControl.disable(formControlOptions);\n          paymentServiceDateControl.disable(formControlOptions);\n          sendDateControl.disable(formControlOptions);\n          startDateControl.enable(formControlOptions);\n          endDateControl.enable(formControlOptions);\n          repeatControl.enable(formControlOptions);\n          endTypeControl.enable();\n        }\n      });\n    }\n  }\n}\n","<div class=\"bb-form-field bb-form-field--md bb-block bb-block--md\">\n  <label\n    data-role=\"billpay-payment-frequency-label\"\n    class=\"form-label\"\n    i18n=\"@@billpay.billpay-payment-schedule.label.frequency\"\n    [id]=\"'billpay-payment-frequency-label' + id\"\n  >\n    Frequency\n  </label>\n  <bb-dropdown-single-select-ui\n    [formControl]=\"scheduleForm?.get('frequency')\"\n    [aria-labelledby]=\"'billpay-payment-frequency-label' + id\"\n    data-role=\"billpay-payment-frequency\"\n  >\n    <bb-dropdown-single-select-option-ui\n      *ngFor=\"let frequency of frequencies\"\n      [value]=\"frequency.value\"\n      [label]=\"frequency.name\"\n    >\n    </bb-dropdown-single-select-option-ui>\n  </bb-dropdown-single-select-ui>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Frequency, BillpayUtilityService as Utility } from '@backbase/billpay-journeys-common';\nimport { FrequencyKeys } from '@backbase/billpay-journeys-common';\n\n@Component({\n  selector: 'bb-billpay-payment-start-date',\n  templateUrl: './billpay-payment-start-date.component.html',\n})\nexport class BillpayPaymentStartDateComponent {\n  @Input() scheduleForm?: FormGroup;\n  @Input() frequencies?: Array<Frequency>;\n  @Input() minDate: string | undefined;\n  frequencyValues = FrequencyKeys;\n  readonly id = Utility.generateId();\n\n  get formValue() {\n    return this.scheduleForm?.getRawValue();\n  }\n}\n","<div class=\"bb-block bb-block--md\" *ngIf=\"formValue?.frequency !== frequencyValues.Once\">\n  <label id=\"billpay-start-date-{{ id }}\" class=\"bb-text-bold\">\n    <span\n      *ngIf=\"true\"\n      i18n-label=\"@@billpay.billpay-payment-start-date.label.start\"\n      data-role=\"billpay-start-date-label\"\n      id=\"'billpay-start-date-' + {{ id }}\"\n    >\n      Start On\n    </span>\n  </label>\n  <div class=\"bb-form-field bb-form-field--sm\">\n    <bb-input-datepicker-ui\n      [aria-labelledby]=\"'billpay-start-date-' + id\"\n      [formControl]=\"scheduleForm?.get('startDate')\"\n      [minDate]=\"minDate\"\n      data-role=\"billpay-start-date-calendar\"\n      [datepickerDescribedby]=\"'billpay-start-date-error-{{ id }}'\"\n    ></bb-input-datepicker-ui>\n  </div>\n\n  <bb-input-validation-message-ui\n    id=\"billpay-start-date-error-{{ id }}\"\n    role=\"alert\"\n    [showErrors]=\"scheduleForm?.get('startDate')?.invalid && scheduleForm?.get('startDate')?.touched\"\n  >\n    <span\n      *ngIf=\"scheduleForm?.get('startDate')?.errors?.required\"\n      i18n=\"@@billpay.billpay-payment-start-date.error.required.startDate\"\n      data-role=\"missing-schedule-execution-date\"\n    >\n      Execution date is required.\n    </span>\n    <span\n      *ngIf=\"\n        scheduleForm?.get('startDate')?.errors?.pastDate || scheduleForm?.get('startDate')?.errors?.dateLessThanMinDate\n      \"\n      i18n=\"@@billpay.billpay-payment-start-date.error.pastDate.startDate\"\n      data-role=\"past-date-schedule-execution-date\"\n    >\n      Execution date could not be in a past.\n    </span>\n    <span\n      *ngIf=\"scheduleForm?.get('startDate')?.errors?.invalidDateFormat\"\n      i18n=\"@@billpay.billpay-payment-start-date.error.invalidDateFormat\"\n      data-role=\"invalid-date-schedule-execution-date\"\n    >\n      Invalid date format.\n    </span>\n  </bb-input-validation-message-ui>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  BillpayUtilityService as Utility,\n  EndTypes,\n  formControlOptions,\n  FrequencyKeys,\n} from '@backbase/billpay-journeys-common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-billpay-payment-end-date',\n  templateUrl: './billpay-payment-end-date.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentEndDateComponent implements OnInit, OnDestroy {\n  @Input() scheduleForm?: FormGroup;\n  readonly endTypes = EndTypes;\n  frequencyValues = FrequencyKeys;\n  readonly id = Utility.generateId();\n  private readonly destroy$ = new Subject<void>();\n\n  get formValue() {\n    return this.scheduleForm?.getRawValue();\n  }\n\n  ngOnInit() {\n    this.processEndTypeValueChanges();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private processEndTypeValueChanges() {\n    if (!this.scheduleForm) return;\n    const endTypeControl = this.scheduleForm.controls['endType'];\n    const endDateControl = this.scheduleForm.controls['endDate'];\n    const repeatControl = this.scheduleForm.controls['repeat'];\n    if (endTypeControl && endDateControl && repeatControl) {\n      endTypeControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        switch (value) {\n          case EndTypes.After: {\n            repeatControl.enable(formControlOptions);\n            endDateControl.disable(formControlOptions);\n            break;\n          }\n          case EndTypes.On: {\n            endDateControl.enable(formControlOptions);\n            repeatControl.disable(formControlOptions);\n            break;\n          }\n          case EndTypes.Never:\n          default: {\n            endDateControl.disable(formControlOptions);\n            repeatControl.disable(formControlOptions);\n            break;\n          }\n        }\n      });\n    }\n  }\n}\n","<div class=\"bb-block bb-block--md\" [hidden]=\"formValue?.frequency == frequencyValues.Once\">\n  <label\n    id=\"billpay-end-date-label-{{ id }}\"\n    data-role=\"billpay-form-end-date-label\"\n    class=\"bb-label\"\n    i18n=\"@@billpay.billpay-payment-end-date.label.ending\"\n  >\n    End\n  </label>\n  <div class=\"bb-stack bb-stack--align-bottom\">\n    <div class=\"bb-stack__item\">\n      <bb-input-radio-group-ui\n        data-role=\"billpay-end-date-options\"\n        [required]=\"true\"\n        [aria-labelledby]=\"'billpay-end-date-label-' + id\"\n        [formControl]=\"scheduleForm?.get('endType')\"\n      >\n        <bb-input-radio-ui\n          [value]=\"endTypes.Never\"\n          label=\"Never\"\n          aria-invalid=\"false\"\n          data-role=\"ending-never-selector\"\n          i18n-label=\"\n            Schedule never ends|Label for an option to never end the payment\n            schedule@@billpay.billpay-payment-end-date.label.ending.never\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <bb-input-radio-ui\n          [value]=\"endTypes.On\"\n          aria-invalid=\"false\"\n          [labelTemplate]=\"endingTemplate\"\n          data-role=\"ending-on-selector\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <bb-input-radio-ui\n          [value]=\"endTypes.After\"\n          aria-invalid=\"false\"\n          data-role=\"ending-after-selector\"\n          [labelTemplate]=\"afterTemplate\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <ng-template #endingTemplate>\n          <div class=\"bb-stack\">\n            <span\n              data-role=\"ending-date-on-label\"\n              class=\"bb-stack__item bb-stack__item--spacing-lg\"\n              i18n=\"@@billpay.billpay-payment-end-date.label.ending.on\"\n              id=\"billpay-end-date-on-{{ id }}\"\n              >On</span\n            >\n            <div class=\"bb-stack__item\">\n              <bb-input-datepicker-ui\n                [formControl]=\"scheduleForm?.get('endDate')\"\n                data-role=\"ending-end-date\"\n                i18n-aria-label=\"@@billpay.billpay-payment-end-date.label.end-date\"\n                aria-label=\"end-date\"\n                [minDate]=\"scheduleForm?.get('startDate')?.value\"\n                placement=\"top-right\"\n                datepickerDescribedby=\"billpay-end-date-on-{{ id }}\"\n                aria-labelledby=\"billpay-end-date-on-{{ id }}\"\n              ></bb-input-datepicker-ui>\n              <bb-input-validation-message-ui\n                role=\"alert\"\n                *ngIf=\"scheduleForm?.get('endDate') as control\"\n                [showErrors]=\"control?.invalid && control?.touched\"\n              >\n                <span\n                  *ngIf=\"control.errors?.pastDate || control.errors?.dateLessThanMinDate\"\n                  i18n=\"\n                    End date past date error text |Error past date message for End date input\n                    field@@billpay.billpay-payment-end-date.past-date-error\"\n                  data-role=\"past-date-ending-end-date\"\n                >\n                  End date could not be lower than start date.\n                </span>\n                <span\n                  *ngIf=\"control.errors?.invalidDateFormat\"\n                  i18n=\"@@billpay.billpay-payment-end-date.invalid-date-format-error\"\n                  data-role=\"invalid-date-schedule-end-date\"\n                >\n                  Invalid date format.\n                </span>\n                <span\n                  *ngIf=\"control.errors?.required\"\n                  i18n=\"@@billpay.billpay-payment-end-date.date-required-error\"\n                  data-role=\"required-date-schedule-end-date\"\n                >\n                  End date is required.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </ng-template>\n        <ng-template #afterTemplate>\n          <div class=\"bb-stack\">\n            <span\n              class=\"bb-stack__item bb-stack__item--spacing-sm\"\n              i18n=\"@@billpay.billpay-payment-end-date.label.ending.after\"\n            >\n              After\n            </span>\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item bb-form-field bb-form-field--xs\">\n                  <bb-input-number-ui\n                    [formControl]=\"scheduleForm?.get('repeat')\"\n                    data-role=\"ending-occurrences\"\n                    aria-label=\"occurrences\"\n                  ></bb-input-number-ui>\n                </div>\n                <span class=\"bb-stack__item\" i18n-label=\"@@billpay.billpay-payment-end-date.label.ending.occurrences\">\n                  Occurrences\n                </span>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </bb-input-radio-group-ui>\n    </div>\n  </div>\n</div>\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AccountNumberFormat } from '@backbase/billpay-journeys-common';\nimport { Account } from '@backbase/data-ang/billpay';\n\n@Component({\n  selector: 'bb-billpay-payment-compact-product-selector',\n  templateUrl: './billpay-payment-compact-product-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentCompactProductSelectorComponent {\n  @Input() paymentForm?: FormGroup;\n  @Input() accounts?: Account[];\n  @Input() productNumberFormat?: AccountNumberFormat;\n  @Output() selectItem = new EventEmitter<Account>();\n\n  onSelectItem(account: Account) {\n    this.selectItem.emit(account);\n  }\n}\n","<div class=\"bb-form-field bb-form-field--md\">\n  <label\n    i18n=\"@@bb-billpay-multiple-bills-list-item.product-selector.label\"\n    data-role=\"multiple-bills-form-from-account-label\"\n    >Pay From</label\n  >\n  <bb-product-selector-ui [autoClose]=\"true\" *ngIf=\"paymentForm?.get('accountFrom')?.value as selectedAccount\">\n    <ng-container bbDropdownToggle>\n      <ng-container *ngTemplateOutlet=\"productItemContent; context: { $implicit: selectedAccount }\"></ng-container>\n    </ng-container>\n    <ng-container bbDropdownMenu>\n      <ng-container *ngIf=\"accounts?.length\">\n        <button\n          *ngFor=\"let account of accounts\"\n          (click)=\"onSelectItem(account)\"\n          bbButton\n          color=\"unstyled\"\n          class=\"bb-product-selector__dropdown-item bb-billpay-multiple-bills-selector\"\n          data-role=\"product-selector-dropdown-item\"\n          [ngClass]=\"{\n            'bb-billpay-multiple-bills-selector--selected-bg': account.accountNumber === selectedAccount?.accountNumber\n          }\"\n        >\n          <ng-container *ngTemplateOutlet=\"productItemContent; context: { $implicit: account }\"></ng-container>\n        </button>\n      </ng-container>\n    </ng-container>\n  </bb-product-selector-ui>\n</div>\n\n<ng-template #productItemContent let-account>\n  <bb-ellipsis-ui [text]=\"account?.accountNickName\" data-role=\"compact-product-selector-account-name\"></bb-ellipsis-ui>\n  <div class=\"bb-account-info bb-text-default\">\n    <bb-ellipsis-ui\n      [text]=\"account?.accountNumber | paymentCardNumber: productNumberFormat\"\n      class=\"bb-account-info__product-number\"\n      data-role=\"compact-product-selector-account-number\"\n    ></bb-ellipsis-ui>\n  </div>\n  <bb-amount-ui\n    class=\"bb-subtitle bb-text-bold\"\n    [currency]=\"account?.accountBalance?.currencyCode\"\n    [amount]=\"account?.accountBalance?.amount\"\n    [mapCurrency]=\"true\"\n    data-role=\"compact-product-selector-amount\"\n  >\n  </bb-amount-ui>\n</ng-template>\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport {\n  BillpayPayeeDataService,\n  BillpayPayeeSummaryItemBaseComponent,\n  BillpayPaymentScheduleService,\n  BillpayUtilityService as Utility,\n  PaymentServicesTypes,\n  Frequency,\n} from '@backbase/billpay-journeys-common';\n\nimport { Account, PayeeSummary } from '@backbase/data-ang/billpay';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { PayBillsJourneyConfigService } from '../../../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { MediaQueryService } from '@backbase/ui-ang/media-query-lib';\n\n@Component({\n  selector: 'bb-billpay-multiple-bills-list-item',\n  templateUrl: './billpay-payment-multiple-bills-list-item.component.html',\n})\nexport class BillpayPaymentMultipleBillsListItemComponent\n  extends BillpayPayeeSummaryItemBaseComponent\n  implements OnInit, OnDestroy {\n  @Input() payeeSummary: PayeeSummary | undefined;\n  @Input() paymentForm: FormGroup | undefined;\n  @Input() accounts?: Account[];\n  @Input() inheritedId?: string;\n  minDate!: string;\n  isCollapsed = true;\n  frequencies?: Frequency[];\n  id = Utility.generateId();\n  readonly productNumberFormat = this.configService.productNumberFormat;\n\n  get latestBill() {\n    return this.payeeSummary?.ebill?.latestBill;\n  }\n\n  ngOnInit() {\n    this.minDate = this.scheduleService.estimatedPaymentServiceDate(\n      this.payeeSummary?.paymentServices,\n      PaymentServicesTypes.Regular,\n    );\n    this.syncPeerFields(this.paymentForm?.get('schedule.sendDate'));\n  }\n\n  constructor(\n    payeeDataService: BillpayPayeeDataService,\n    dropdownButtonConfig: NgbDropdownConfig,\n    private readonly mediaQueryService: MediaQueryService,\n    private readonly scheduleService: BillpayPaymentScheduleService,\n    private readonly configService: PayBillsJourneyConfigService,\n    private readonly navigationService: PayBillsNavigationService,\n  ) {\n    super(payeeDataService, dropdownButtonConfig);\n    this.frequencies = this.configService.frequencies;\n  }\n\n  // Sync peer datepicker fields that are duplicated for the sake of responsive designs\n  private syncPeerFields(formControl?: AbstractControl | null) {\n    this.mediaQueryService\n      .isMediaBreakpointMatches('max-width', 'lg')\n      .pipe(takeUntil(this.destroy$), distinctUntilChanged())\n      .subscribe(() => {\n        formControl?.patchValue(formControl.value, { emitEvent: false, onlySelf: true });\n      });\n  }\n\n  selectItem(account: Account) {\n    this.paymentForm?.patchValue({ accountFrom: account });\n  }\n\n  handleEditPayee(): void {\n    if (this.payeeSummary && !this.payeeSummary.electronic) {\n      this.navigationService.navigateToEditManualPayee(this.payeeSummary.id);\n    } else if (this.payeeSummary?.electronic) {\n      this.navigationService.navigateToEditElectronicPayee(this.payeeSummary.id);\n    }\n  }\n\n  handleViewSummary(): void {\n    if (this.payeeSummary) {\n      this.navigationService.navigateToPayeeSummary(this.payeeSummary.id);\n    }\n  }\n\n  handleGetEbills() {\n    if (this.payeeSummary) {\n      this.navigationService.navigateToPayverisEbillEnrol(this.payeeSummary.id);\n    }\n  }\n}\n","<div class=\"bb-billpay-multiple-bills-list-item__content\">\n  <div class=\"bb-billpay-multiple-bills__grid-container\">\n    <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-sm\">\n      <ng-container *ngTemplateOutlet=\"payeeDescTemp\"></ng-container>\n    </div>\n    <div\n      class=\"bb-billpay-multiple-bills__grid-item bb-billpay-multiple-bills__grid-item--higher bb-text-align-center bb-d-none bb-d-lg-block\"\n      data-role=\"multiple-bills-list-titles-due-date\"\n    >\n      <span>{{ latestBill?.paymentDate | bbDate: 'MM/dd/y' }}</span>\n    </div>\n    <div\n      class=\"bb-text-align-left bb-text-align-right--lg-up bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-sm bb-billpay-multiple-bills__grid-item--second-row bb-billpay-multiple-bills__grid-item--higher\"\n      data-role=\"multiple-bills-minimum-amount-due\"\n    >\n      <bb-amount-ui\n        *ngIf=\"latestBill?.minAmountDue as minAmountDue\"\n        class=\"bb-text-bold\"\n        [currency]=\"minAmountDue.currencyCode || 'USD'\"\n        [amount]=\"minAmountDue.amount || 0\"\n      ></bb-amount-ui>\n    </div>\n    <div class=\"bb-billpay-multiple-bills__grid-item bb-d-none bb-d-lg-block bb-stack__item bb-stack__item--spacing-xs\">\n      <ng-container *ngTemplateOutlet=\"deliveryDateTemp\"></ng-container>\n    </div>\n    <div\n      class=\"bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-none bb-billpay-multiple-bills__grid-item--second-row\"\n    >\n      <ng-container *ngTemplateOutlet=\"amountInputTemp\"></ng-container>\n    </div>\n    <div\n      class=\"bb-billpay-multiple-bills__grid-item bb-billpay-multiple-bills__grid-item--higher bb-text-align-right bb-stack bb-stack--align-top\"\n    >\n      <div\n        class=\"bb-stack__item bb-stack__item--spacing-md bb-stack__item--push-right\"\n        data-role=\"multiple-bills-actions-list\"\n      >\n        <bb-dropdown-menu-ui\n          btnColor=\"text-link\"\n          container=\"body\"\n          icon=\"ellipsis-h\"\n          buttonSize=\"sm\"\n          iconSize=\"sm\"\n          [btnCircle]=\"true\"\n          [attr.aria-label]=\"'More options for ' + payeeName\"\n          i18n-attr.aria-label=\"\n            More options for payee aria label|Aria label for more payee\n            options@@bb-billpay-payee-list-item.aria-label.more-payee-options\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <ng-container *ngIf=\"payeeSummary?.ebill?.capable\">\n              <a\n              role=\"menuitem\"\n              target=\"_blank\"\n              data-role=\"stop-ebills-menu-item\"\n              class=\"dropdown-item bb-dropdown-single-select\"\n              *ngIf=\"showStopEbills\"\n              (bbKeyboardClick)=\"handleStopEbills($event)\"\n              >\n                <span\n                  i18n=\"\n                    Stop eBills dropdown list button|Button in the dropdown list for getting\n                    eBills@@bb-billpay-payee-summary-item.button.dropdown.stop-eBills\"\n                  >Stop eBills</span\n                >\n              </a>\n            </ng-container>\n\n            <a\n              role=\"menuitem\"\n              data-role=\"view-payee-menu-item\"\n              class=\"dropdown-item bb-dropdown-single-select\"\n              (bbKeyboardClick)=\"handleViewSummary($event)\"\n            >\n              <span\n                i18n=\"\n                  View payee dropdown list button|Button in the dropdown list for viewing the\n                  payee@@bb-billpay-payee-summary-item.button.dropdown.view-payee\"\n                >View payee</span\n              >\n            </a>\n            <a\n              role=\"menuitem\"\n              data-role=\"edit-payee-menu-item\"\n              class=\"dropdown-item bb-dropdown-single-select\"\n              (bbKeyboardClick)=\"handleEditPayee()\"\n            >\n              <span\n                i18n=\"\n                  Edit payee dropdown list button|Button in the dropdown list for editing the\n                  payee@@bb-billpay-payee-summary-item.button.dropdown.edit-payee\"\n                >Edit payee</span\n              >\n            </a>\n            <a\n              role=\"menuitem\"\n              data-role=\"delete-payee-menu-item\"\n              class=\"dropdown-item bb-dropdown-single-select\"\n              (bbKeyboardClick)=\"handleDeletePayee($event)\"\n            >\n              <span\n                i18n=\"\n                  Delete payee dropdown list button|Button in the dropdown list for deleting the\n                  payee@@bb-billpay-payee-summary-item.button.dropdown.delete-payee\"\n                >Delete payee</span\n              >\n            </a>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n      <div class=\"bb-stack__item\">\n        <button\n          bbButton\n          color=\"text-link\"\n          [circle]=\"true\"\n          aria-label=\"dropdown-button\"\n          buttonSize=\"sm\"\n          (click)=\"isCollapsed = !isCollapsed\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          [attr.aria-controls]=\"'collapse' + id\"\n          data-role=\"multiple-bills-item-dropdown-button\"\n        >\n          <bb-icon-ui\n            name=\"{{ isCollapsed ? 'toggle-down' : 'toggle-up' }}\"\n            data-role=\"schedule-toggle-icon\"\n          ></bb-icon-ui>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div\n    [ngbCollapse]=\"isCollapsed\"\n    [attr.id]=\"'collapse' + id\"\n    class=\"bb-billpay-multiple-bills-list-item__collapsible-area\"\n  >\n    <div class=\"bb-stack bb-d-block bb-d-lg-flex\">\n      <div class=\"bb-stack__item bb-stack__item--spacing-xl\">\n        <div class=\"bb-block bb-block--md\" *ngIf=\"accounts\">\n          <ng-container *ngTemplateOutlet=\"productSelectorTemp\"></ng-container>\n        </div>\n        <div class=\"bb-form-field bb-form-field--md bb-d-lg-none bb-block bb-block--md\">\n          <label\n            id=\"billpay-delivery-date-label-{{ id }}\"\n            i18n=\"@@bb-billpay-multiple-bills-list-item.sen-date.label\"\n            data-role=\"multiple-bills-form-delivery-date-label\"\n            >Est. Delivery</label\n          >\n          <ng-container *ngTemplateOutlet=\"deliveryDateTemp\"></ng-container>\n        </div>\n        <div>\n          <ng-container *ngTemplateOutlet=\"scheduleTemp\"></ng-container>\n        </div>\n        <div class=\"bb-block bb-block--sm\">\n          <ng-container *ngTemplateOutlet=\"memoTemp\"></ng-container>\n        </div>\n      </div>\n      <div class=\"bb-stack__item--align-top\" data-role=\"multiple-bills-outstanding-amount\">\n        <div class=\"bb-stack__item--align-top\">\n          <ng-container *ngIf=\"latestBill?.outstandingBalance as outstandingBalance\">\n            <label for=\"outstanding-amount-{{ id }}\" class=\"bb-text-semi-bold bb-block bb-block--sm\"\n              >Outstanding Amount</label\n            >\n            <br />\n            <bb-amount-ui\n              id=\"outstanding-amount-{{ id }}\"\n              class=\"bb-text-default\"\n              [currency]=\"outstandingBalance.currencyCode || 'USD'\"\n              [amount]=\"outstandingBalance.amount || 0\"\n            ></bb-amount-ui>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Delivery date  -->\n  <ng-template #deliveryDateTemp>\n    <bb-input-datepicker-ui\n      [formControl]=\"paymentForm?.get('schedule.sendDate')\"\n      [minDate]=\"minDate\"\n      data-role=\"once-delivery-date-calendar\"\n      aria-label=\"delivery-date\"\n      datepickerDescribedby=\"multiple-payments-start-date-tooltip-{{ inheritedId }}\"\n      aria-labelledby=\"billpay-delivery-date-label-{{ id }}\"\n    ></bb-input-datepicker-ui>\n  </ng-template>\n\n  <!-- Amount Input -->\n  <ng-template #amountInputTemp>\n    <bb-amount-input-ui\n      [formControl]=\"paymentForm?.get('amount.amount')\"\n      data-role=\"multiple-bills-amount-input\"\n      [autoDecimal]=\"true\"\n      wrapperClasses=\"bb-text-bold\"\n      [currency]=\"paymentForm?.get('amount.currency')?.value\"\n      placeholder=\"0.00\"\n      aria-labelledby=\"multiple-payments-amount-label-{{ inheritedId }}\"\n    ></bb-amount-input-ui>\n  </ng-template>\n\n  <!-- Memo -->\n  <ng-template #memoTemp>\n    <label class=\"bb-label\" data-role=\"multiple-bills-form-memo-label\" for=\"bb-billpay-payment-form-memo-{{ id }}\">\n      <span i18n=\"bb-billpay-multiple-bills-list-item.memo.label\">Memo</span>\n      <span class=\"bb-text-default bb-text-support\" i18n=\"@@bb-billpay-multiple-bills-list-item.memo.title-suffix\">\n        (Optional)\n      </span>\n    </label>\n    <br />\n    <span\n      class=\"bb-subtitle text-muted\"\n      i18n=\"@@bb-billpay-multiple-bills-list-item.memo.helper-text\"\n      data-role=\"multiple-bills-form-memo-desc\"\n      id=\"'bb-billpay-payment-form-memo-desc-'{{ id }}\"\n      >This will be printed on the check sent to the payee</span\n    >\n    <div class=\"bb-form-field bb-form-field--md\">\n      <bb-textarea-ui\n        [id]=\"'bb-billpay-payment-form-memo-' + id\"\n        [aria-describedby]=\"'bb-billpay-payment-form-memo-desc-' + id\"\n        [formControl]=\"paymentForm?.get('memo')\"\n        data-role=\"memo\"\n        [maxLength]=\"140\"\n        [rows]=\"2\"\n        [showCharCounter]=\"true\"\n      >\n      </bb-textarea-ui>\n    </div>\n  </ng-template>\n\n  <!-- Schedule -->\n  <ng-template #scheduleTemp>\n    <bb-billpay-payment-frequency\n      *ngIf=\"frequencies?.length\"\n      [scheduleForm]=\"paymentForm?.get('schedule')\"\n      [frequencies]=\"frequencies\"\n    ></bb-billpay-payment-frequency>\n    <bb-billpay-payment-start-date\n      [scheduleForm]=\"paymentForm?.get('schedule')\"\n      [frequencies]=\"frequencies\"\n      [minDate]=\"minDate\"\n    ></bb-billpay-payment-start-date>\n    <bb-billpay-payment-end-date [scheduleForm]=\"paymentForm?.get('schedule')\"></bb-billpay-payment-end-date>\n  </ng-template>\n\n  <ng-template #productSelectorTemp>\n    <bb-billpay-payment-compact-product-selector\n      [accounts]=\"accounts\"\n      [paymentForm]=\"paymentForm\"\n      (selectItem)=\"selectItem($event)\"\n      [productNumberFormat]=\"productNumberFormat\"\n    ></bb-billpay-payment-compact-product-selector>\n  </ng-template>\n\n  <!-- Payee infos -->\n  <ng-template #payeeDescTemp>\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <a\n          attr.aria-describedby=\"{{\n            [\n              ebillRetrieveErrorId,\n              noEbillsDueId,\n              ebillsAvailableId,\n              recurringPaymentScheduledIdId,\n              ebillPaymentScheduledId,\n              ebillDueOnId,\n              ebillSupportErrorId,\n              ebillUserActionErrorId,\n              ebillUnknownErrorId\n            ].join(' ')\n          }}\"\n          (bbKeyboardClick)=\"handleViewSummary($event)\"\n          role=\"link\"\n          tabindex=\"0\"\n          class=\"bb-text-bold bb-text-default\"\n          [attr.aria-label]=\"'view payee summary for ' + payeeName\"\n          data-role=\"payee-name\"\n          >{{ payeeName }}</a\n        >\n\n        <div *ngIf=\"isLatestEbillPaid\" class=\"bb-stack bb-stack--align-top\">\n          <bb-icon-ui\n            class=\"bb-stack__item bb-stack__item--spacing-none\"\n            data-role=\"ebill-payment-icon\"\n            name=\"savings-accounts\"\n            color=\"secondary\"\n          ></bb-icon-ui>\n          <span\n            id=\"{{ ebillPaymentScheduledId }}\"\n            class=\"bb-stack__item bb-text-support\"\n            data-role=\"ebill-payment-label\"\n            i18n=\"\n              eBill payment scheduled note|Text for the information that an eBill payment is\n              scheduled@@bb-billpay-multiple-bills-list-item.note.eBill-payment-scheduled\"\n            >eBill payment scheduled</span\n          >\n        </div>\n\n        <div *ngIf=\"areEbillsDue\" class=\"bb-stack bb-d-lg-none\">\n          <bb-icon-ui\n            class=\"bb-stack__item bb-stack__item--spacing-sm\"\n            data-role=\"receipt-icon\"\n            size=\"sm\"\n            name=\"receipt\"\n            color=\"secondary\"\n          ></bb-icon-ui>\n          <span\n            id=\"{{ ebillDueOnId }}\"\n            class=\"bb-stack__item bb-subtitle bb-text-support\"\n            data-role=\"due-date-label\"\n            *ngIf=\"latestBill?.paymentDate as ebillPaymentDate\"\n            i18n=\"\n              Ebill due note|Text for the information about the due\n              eBill@@bb-billpay-multiple-bills-list-item.note.ebill-due\"\n            >eBill due on {{ ebillPaymentDate | bbDate: 'MMM d' }}</span\n          >\n        </div>\n\n        <div *ngIf=\"areEbillsInErrorState\" class=\"bb-stack bb-stack--wrap bb-stack--align-top\">\n          <ng-container *ngIf=\"isEbillsErrorUpdateCredentials\">\n            <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n              <div class=\"bb-stack\">\n                <bb-icon-ui\n                  class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                  data-role=\"ebills-error-icon\"\n                  size=\"sm\"\n                  name=\"error-outline\"\n                  color=\"danger\"\n                ></bb-icon-ui>\n                <div\n                  id=\"{{ ebillRetrieveErrorId }}\"\n                  class=\"bb-stack__item bb-subtitle bb-text-danger\"\n                  data-role=\"ebills-error-cannot-be-retrieved-message\"\n                  i18n=\"\n                    Ebills cannot be retrieved error|Error text to display when the eBills cannot be retrieved due to\n                    invalid login\n                    credentials@@bb-billpay-multiple-bills-list-item.ebill-error.ebills-cannot-be-retrieved\"\n                >\n                  eBills cannot be retrieved.\n                </div>\n              </div>\n            </div>\n            <a\n              class=\"bb-stack__item\"\n              (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n              tabindex=\"0\"\n              role=\"button\"\n              class=\"bb-stack__item bb-subtitle\"\n              i18n=\"\n                Ebills update login credentials link|Button text to display for updating login credentials for the\n                payee@@bb-billpay-multiple-bills-list-item.ebill-link.update-login-credentials\"\n              attr.aria-label=\"Update login credentials for {{ payeeName }}\"\n              i18n-attr.aria-label=\"\n                Ebills update login credentials link aria label|Aria label for updating login credentials for the\n                payee@@bb-billpay-multiple-bills-list-item.ebill-link.aria-label.update-login-credentials\"\n              data-role=\"ebills-update-login-credentials-button\"\n              >Update login credentials\n            </a>\n          </ng-container>\n\n          <ng-container *ngIf=\"isEbillsErrorNotSupported\">\n            <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n              <div class=\"bb-stack\">\n                <bb-icon-ui\n                  class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                  data-role=\"ebills-error-icon\"\n                  size=\"sm\"\n                  name=\"error-outline\"\n                  color=\"danger\"\n                ></bb-icon-ui>\n                <div\n                  id=\"{{ ebillSupportErrorId }}\"\n                  class=\"bb-stack__item bb-subtitle bb-text-danger\"\n                  data-role=\"ebills-error-no-longer-supported-message\"\n                  i18n=\"\n                    Biller no longer supports ebills error|Error text to display when the payee no longer supports\n                    eBills@@bb-billpay-multiple-bills-list-item.ebill-error.ebills-no-longer-available\"\n                >\n                  This biller no longer supports eBills.\n                </div>\n              </div>\n            </div>\n            <a\n              (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n              tabindex=\"0\"\n              role=\"button\"\n              class=\"bb-stack__item bb-subtitle\"\n              attr.aria-label=\"Disable eBills for {{ payeeName }}\"\n              i18n-attr.aria-label=\"\n                Disable eBills link aria label|Aria label for Disable\n                eBills@@bb-billpay-multiple-bills-list-item.ebill-link.ebills-no-longer-available\"\n              i18n=\"\n                Disable eBills for this payee link|Button text to display to disable eBills for the\n                payee@@bb-billpay-multiple-bills-list-item.ebill-link.aria-label.ebills-no-longer-available\"\n              data-role=\"ebills-disabled-button\"\n              >Disable eBills for this payee\n            </a>\n          </ng-container>\n\n          <ng-container *ngIf=\"isEbillsErrorUserAction\">\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-stack\">\n                <bb-icon-ui\n                  class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                  data-role=\"ebills-error-icon\"\n                  name=\"error-outline\"\n                  size=\"sm\"\n                  color=\"danger\"\n                ></bb-icon-ui>\n                <div\n                  id=\"{{ ebillUserActionErrorId }}\"\n                  class=\"bb-stack__item bb-subtitle bb-text-danger\"\n                  data-role=\"ebills-error-login-to-biller-message\"\n                  i18n=\"\n                    Please log in to biller to resolve error|Error text to display when the user must log into the\n                    biller's site to resolve an\n                    issue@@bb-billpay-multiple-bills-list-item.ebill-error.log-in-to-bille-site\"\n                >\n                  Please log in to the biller's site to resolve an issue and continue receiving eBills for this payee.\n                </div>\n              </div>\n            </div>\n            <a\n              (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n              tabindex=\"0\"\n              role=\"button\"\n              class=\"bb-stack__item bb-subtitle\"\n              i18n=\"\n                Refresh status for payee link|Button text to display for refreshing the status of eBills for the\n                payee@@bb-billpay-multiple-bills-list-item.ebill-link.refresh-status\"\n              attr.aria-label=\"Refresh status for {{ payeeName }}\"\n              i18n-attr.aria-label=\"\n                Refresh status for payee link aria label|Aria label for Refresh\n                status@@bb-billpay-multiple-bills-list-item.ebill-link.aria-label.refresh-status\"\n              data-role=\"ebills-refresh-status-button\"\n              >Refresh status\n            </a>\n          </ng-container>\n\n          <ng-container *ngIf=\"isEbillsErrorUnknown\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui\n                class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                data-role=\"ebills-error-icon\"\n                name=\"error-outline\"\n                size=\"sm\"\n                color=\"danger\"\n              ></bb-icon-ui>\n              <div\n                attr.id=\"{{ ebillUnknownErrorId }}\"\n                class=\"bb-stack__item bb-subtitle bb-text-danger\"\n                data-role=\"ebills-error-try-again-later-message\"\n                i18n=\"\n                  Ebills cannot be retrieved error|Error text to display when eBills cannot currently be retreived for\n                  the payee@@bb-billpay-multiple-bills-list-item.ebill-error.ebills-cannot-be-retrieved\"\n              >\n                eBills cannot be retrieved, please try again later or contact support\n              </div>\n            </div>\n          </ng-container>\n        </div>\n\n        <div\n          *ngIf=\"areEbillsEnabledButNotDue\"\n          id=\"{{ noEbillsDueId }}\"\n          class=\"bb-text-support\"\n          data-role=\"no-due-date-label\"\n          i18n=\"\n            No eBill due note|Text for the information that no eBill is\n            due@@bb-billpay-multiple-bills-list-item.note.no-ebill-due\"\n        >\n          No eBills due\n        </div>\n\n        <div *ngIf=\"areEbillsAvailable\" class=\"bb-stack\">\n          <a data-role=\"get-ebills-menu-item\" (bbKeyboardClick)=\"handleGetEbills()\" tabindex=\"0\" role=\"button\" class=\"bb-stack__item bb-subtitle\">\n            <span\n              i18n=\"\n                Get eBills dropdown list button|Button in the dropdown list for getting\n                eBills@@bb-billpay-payee-summary-item.button.dropdown.get-eBills\"\n              >Get eBills</span\n            >\n          </a>\n        </div>\n\n        <div *ngIf=\"areRecurringPaymentsScheduled\" class=\"bb-stack bb-stack--align-top\">\n          <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n            <bb-icon-ui data-role=\"recurring-payment-icon\" size=\"sm\" name=\"repeat\" color=\"secondary\"></bb-icon-ui>\n          </div>\n          <div\n            id=\"{{ recurringPaymentScheduledIdId }}\"\n            class=\"bb-stack__item bb-subtitle bb-text-support\"\n            data-role=\"recurring-payment-label\"\n            i18n=\"\n              Recurring payments scheduled note|Text for the information that recurring payments are\n              scheduled@@bb-billpay-multiple-bills-list-item.note.recurring-payments-scheduled\"\n          >\n            Recurring Payments Scheduled\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BillpayUtilityService as Utility } from '@backbase/billpay-journeys-common';\nimport { Account, PayeeSummary } from '@backbase/data-ang/billpay';\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-list',\n  templateUrl: './billpay-payment-multiple-bills-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsListComponent {\n  _payeeSummaries: PayeeSummary[] = [];\n  @Input() set payeeSummaries(value: PayeeSummary[]) {\n    this._payeeSummaries = this.sortByDueDate(value);\n  }\n  get payeeSummaries() {\n    return this._payeeSummaries;\n  }\n  @Input() paymentsFormGroup?: FormGroup;\n  @Input() accounts?: Account[];\n  @Input() isForEbills = false;\n  readonly id = Utility.generateId();\n\n  /**\n   * Sorting payee summaries by due date. Initial view display ascending list(earliest date first)\n   */\n  private sortByDueDate(payeeSummaries = this.payeeSummaries) {\n    const payeeWithoutDate = payeeSummaries.filter(payee => !payee.ebill?.latestBill?.paymentDate);\n    const payeeWithDate = payeeSummaries\n      .filter(payee => !!payee.ebill?.latestBill?.paymentDate)\n      .sort((payee1: PayeeSummary, payee2: PayeeSummary) => {\n        const date1 = new Date(payee1.ebill?.latestBill?.paymentDate || '').getTime();\n        const date2 = new Date(payee2.ebill?.latestBill?.paymentDate || '').getTime();\n        return this.ascendingList ? date1 - date2 : date2 - date1;\n      });\n    return [...payeeWithDate, ...payeeWithoutDate];\n  }\n  /**\n   * Indicates the way payees are sorted in the list\n   */\n  ascendingList = true;\n\n  /**\n   * Set sorted payees\n   */\n  onSortClick() {\n    this.ascendingList = !this.ascendingList;\n    this.payeeSummaries = this.sortByDueDate();\n  }\n\n  /**\n   * Set sorted payees\n   */\n  trackByFunction(_index: number, payee: PayeeSummary) {\n    return payee.ebill?.latestBill?.paymentDate;\n  }\n}\n","<form [formGroup]=\"paymentsFormGroup\" class=\"bb-billpay-multiple-bills-form\">\n  <div class=\"bb-d-none bb-d-lg-block bb-billpay-multiple-bills-form__titles\">\n    <div class=\"bb-billpay-multiple-bills__grid-container bb-stack\">\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.payee\"\n          data-role=\"multiple-bills-list-titles-payee\"\n          >Payee</span\n        >\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-text-align-center\">\n        <div class=\"bb-inline-stack\" *ngIf=\"isForEbills\" data-role=\"multiple-bills-list-titles-due-date-label\">\n          <span\n            class=\"bb-subtitle bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n            i18n=\"@@bb-billpay-multiple-bills-list.titles.due-date\"\n            >Due Date</span\n          >\n          <button bbButton color=\"unstyled\" (click)=\"onSortClick()\" aria-label=\"Sort by due date ascending\">\n            <bb-icon-ui name=\"{{ ascendingList ? 'caret-down' : 'caret-up' }}\" size=\"xs\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-sm bb-text-align-right\">\n        <span\n          *ngIf=\"isForEbills\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.amount-due\"\n          data-role=\"multiple-bills-list-titles-amount-due\"\n          >Amount Due</span\n        >\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.delivery-date\"\n          data-role=\"multiple-bills-list-titles-delivery-date\"\n          >Est. Delivery\n        </span>\n        <span\n          bbTooltip=\"The date we expect your payment to reach the payee. That may vary from payee to payee.\"\n          placement=\"top\"\n          [triggers]=\"'hover'\"\n          i18n=\"@@bb-billpay-multiple-bills-list.delivery-date.label.tooltip\"\n          class=\"bb-stack__item bb-d-flex\"\n          id=\"multiple-payments-start-date-tooltip-{{ id }}\"\n        >\n          <bb-icon-ui name=\"info\" size=\"sm\" class=\"bb-billpay-multiple-bills__tooltip\"></bb-icon-ui>\n        </span>\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.amount\"\n          id=\"multiple-payments-amount-label-{{ id }}\"\n          data-role=\"multiple-bills-list-titles-amount\"\n          >Amount</span\n        >\n      </div>\n    </div>\n  </div>\n  <bb-billpay-multiple-bills-list-item\n    *ngFor=\"let payeeSummary of payeeSummaries; trackBy: trackByFunction\"\n    [payeeSummary]=\"payeeSummary\"\n    [paymentForm]=\"paymentsFormGroup?.controls[payeeSummary.id]\"\n    [accounts]=\"accounts\"\n    [inheritedId]=\"id\"\n    class=\"bb-billpay-multiple-bills-list-item\"\n  ></bb-billpay-multiple-bills-list-item>\n</form>\n","import { Component, ChangeDetectionStrategy, Input, TemplateRef } from '@angular/core';\nimport { PayBillsJourneyConfigService } from '../../../services/pay-bills-journey-config.service';\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-sum-board',\n  templateUrl: './billpay-payment-multiple-bills-sum-board.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsSumBoardComponent {\n  @Input() totalAmount?: number;\n  @Input() actionButtons?: TemplateRef<any>;\n  @Input() inheritedId?: string;\n  readonly currency = this.configService.paymentDefaultCurrency;\n  constructor(private readonly configService: PayBillsJourneyConfigService) {}\n}\n","<div data-role=\"multiple-bills-sum-board\" class=\"bb-billpay-multiple-bills-board bb-stack\">\n  <div class=\"bb-stack bb-stack--wrap container\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <label\n        id=\"total-amount-label-{{ inheritedId }}\"\n        class=\"bb-text-default bb-subtitle bb-block bb-block--xs\"\n        i18n=\"label|amount label@@billpay-payments-journey.multiple-bills.board.amount-label\"\n        data-role=\"multiple-bills-sum-board-amount-label\"\n        >Total Amount</label\n      >\n      <br />\n      <bb-amount-ui\n        id=\"total-amount-{{ inheritedId }}\"\n        class=\"bb-heading-1\"\n        [currency]=\"currency\"\n        [amount]=\"totalAmount || 0\"\n        data-role=\"multiple-bills-sum-board-amount\"\n      ></bb-amount-ui>\n    </div>\n    <div class=\"bb-stack__item bb-billpay-multiple-bills-board-desc\" *ngIf=\"!totalAmount; else buttonsTemp\">\n      <div class=\"card card-sm card--shadowless bb-inline-stack bb-billpay-multiple-bills-board-desc__body\">\n        <div class=\"card-body\">\n          <span\n            bbTooltip=\"You can start by filling the amounts on the bills you would like to pay\"\n            i18n-bbbTooltip=\"\n              description|description\n              tooltip[classList]@@billpay-payments-journey.multiple-bills.board.description-tooltip\"\n            triggers=\"hover\"\n            placement=\"top\"\n            class=\"bb-stack bb-d-md-none\"\n          >\n            <bb-icon-ui name=\"dns\" size=\"md\" color=\"primary\"></bb-icon-ui>\n          </span>\n          <div class=\"bb-inline-stack bb-d-none bb-d-md-flex\">\n            <bb-icon-ui name=\"dns\" size=\"md\" class=\"bb-stack__item bb-stack__item--spacing-sm\"></bb-icon-ui>\n            <div\n              class=\"bb-subtitle\"\n              i18n=\"description|description text@@billpay-payments-journey.multiple-bills.board.description\"\n              data-role=\"multiple-bills-sum-board-description\"\n            >\n              You can start by filling the amounts on the bills you would like to pay\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #buttonsTemp>\n  <ng-container [ngTemplateOutlet]=\"actionButtons\"></ng-container>\n</ng-template>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  ViewChild,\n  TemplateRef,\n  OnDestroy,\n  HostListener,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  BillpayPaymentScheduleService,\n  BillpayUtilityService as Utility,\n  EndTypes,\n  LoadingState,\n  PaymentServicesTypes,\n} from '@backbase/billpay-journeys-common';\nimport { HttpResponse } from '@backbase/foundation-ang/web-sdk';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, shareReplay, skip, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { Account, Address, PayeeSummary, PaymentService, PaymentServiceSummary } from '@backbase/data-ang/billpay';\nimport { BillpayPayeeDataService } from '@backbase/billpay-journeys-common';\nimport { FrequencyKeys, PayeeSummariesByEbill, PaymentFormState } from '@backbase/billpay-journeys-common';\n\nimport { PayBillsStateService } from '../../services/pay-bills-state.service';\nimport { Observable, of, Subject } from 'rxjs';\nimport { PayBillsNavigationService } from '../../services/pay-bills-navigation.service';\nimport { PayBillsJourneyConfigService } from '../../services/pay-bills-journey-config.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills',\n  templateUrl: './billpay-payment-multiple-bills.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsComponent implements OnInit, OnDestroy {\n  payeeSummariesByEbillObservable$?: Observable<PayeeSummariesByEbill | undefined>;\n  private payeeSummaries?: PayeeSummary[];\n  private accounts?: Account[];\n  paymentsFormGroup = this.fb.group({});\n  totalAmount$: Observable<number> = this.paymentsFormGroup.valueChanges.pipe(\n    map((forms: FormGroup) =>\n      Object.values(forms).reduce((acc: number, form: PaymentFormState) => acc + +form.amount.amount, 0),\n    ),\n  );\n  accounts$?: Observable<Account[]>;\n\n  readonly selectedDeleteEbills$: Observable<PayeeSummary | undefined> = this.payeeDataService.selectedDeleteEbills;\n  readonly selectedDeletePayee$: Observable<PayeeSummary | undefined> = this.payeeDataService.selectedDeletePayee;\n\n  get isErrorState() {\n    const payeeState = this.payeeDataService.payeesLoadingState;\n    const accountState = this.paymentDataService.accountsLoadingState;\n    return payeeState === 'error' || accountState === LoadingState.Error;\n  }\n  private readonly destroy$ = new Subject<void>();\n\n  @ViewChild('notificationMessage') notificationMessageTemplate: TemplateRef<any> | string = '';\n  @ViewChild('notificationHeader') notificationHeaderTemplate: TemplateRef<any> | string = '';\n\n  isDeleteModalOpened = false;\n  isDeleteEbillsModalOpen = false;\n  isNavigateModalOpened = false;\n  notificationType = '';\n  readonly id = Utility.generateId();\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if ((this.paymentsFormGroup.touched || this.paymentStateService.isFormProcessing) && !this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private readonly payeeDataService: BillpayPayeeDataService,\n    private readonly fb: FormBuilder,\n    private readonly scheduleService: BillpayPaymentScheduleService,\n    private readonly paymentStateService: PayBillsStateService,\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly route: ActivatedRoute,\n    private readonly paymentDataService: BillpayPaymentDataService,\n    private readonly configService: PayBillsJourneyConfigService,\n    private readonly notificationService: NotificationService,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private cdRef: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.payeeSummariesByEbillObservable$ = this.payeeDataService.getPayees().pipe(\n      tap(payeeSummariesByEbill => {\n        const { ebillsEnabled = [], ebillsNotEnabled = [] } = payeeSummariesByEbill || ({} as PayeeSummariesByEbill);\n        this.payeeSummaries = [...ebillsEnabled, ...ebillsNotEnabled];\n        this.createForm(this.payeeSummaries);\n        if (this.paymentStateService.isFormProcessing) {\n          this.patchPaymentDataToForm();\n        }\n      }),\n      shareReplay(),\n    );\n    this.accounts$ = this.paymentDataService.getPayeesAndAccounts().pipe(\n      map(data => {\n        this.accounts = data.accounts;\n        this.patchFormValue({ accountFrom: data.accounts?.[0] });\n        return data.accounts;\n      }),\n      shareReplay(),\n    );\n\n    this.payeeDataService.selectedDeletePayee\n      .pipe(takeUntil(this.destroy$), skip(1))\n      .subscribe(payee => (payee ? (this.isDeleteModalOpened = true) : this.openNavigateModal()));\n\n    this.payeeDataService.selectedDeleteEbills\n      .pipe(takeUntil(this.destroy$), skip(1))\n      .subscribe(payee => (payee ? (this.isDeleteEbillsModalOpen = true) : this.openNavigateModal()));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  handleClearForm() {\n    this.patchFormValue();\n    this.paymentsFormGroup.markAsUntouched();\n    this.paymentStateService.isFormProcessing = false;\n  }\n\n  defaultFormState(payeeSummary: PayeeSummary) {\n    const address = this.hasOvernightCheck(payeeSummary?.paymentServices)\n      ? payeeSummary?.overnightDeliveryAddress\n      : ({} as Address);\n    const paymentServiceDate = this.scheduleService.estimatedPaymentServiceDate(\n      payeeSummary?.paymentServices,\n      PaymentServicesTypes.Regular,\n    );\n\n    const minDate = this.scheduleService.estimatedPaymentServiceDate(\n      payeeSummary?.paymentServices,\n      PaymentServicesTypes.Regular,\n    );\n\n    return {\n      accountFrom: this.accounts?.[0],\n      payeeTo: payeeSummary,\n      amount: {\n        amount: ' ',\n        currency: this.configService.paymentDefaultCurrency,\n      },\n      memo: '',\n      overnightDeliveryAddress: {\n        address1: address?.address1,\n        address2: address?.address2,\n        city: address?.city,\n        state: address?.state,\n        postalCode: address?.postalCode,\n      },\n      schedule: {\n        frequency: FrequencyKeys.Once,\n        startDate: minDate,\n        sendDate: minDate,\n        repeat: 1,\n        endDate: minDate,\n        endType: EndTypes.Never,\n        paymentService: this.defaultPaymentService,\n        paymentServiceDate,\n        alertPendingCheckbox: false,\n        alertSentCheckbox: false,\n        alertLastPendingCheckbox: false,\n      },\n    };\n  }\n\n  areBothListsPresent({ ebillsEnabled, ebillsNotEnabled }: PayeeSummariesByEbill): boolean {\n    return Boolean(ebillsEnabled?.length && ebillsNotEnabled?.length);\n  }\n\n  createForm(payeeSummaries: PayeeSummary[]) {\n    payeeSummaries.forEach(payee => {\n      const defaults = this.defaultFormState(payee);\n      this.paymentsFormGroup?.registerControl(\n        payee.id,\n        this.fb.group({\n          accountFrom: [defaults.accountFrom],\n          payeeTo: [defaults.payeeTo],\n          amount: this.fb.group({\n            amount: [defaults.amount.amount],\n            currency: [defaults.amount.currency],\n          }),\n          memo: [defaults.memo],\n          overnightDeliveryAddress: this.createOvernightAddressFormGroup(payee),\n          schedule: this.fb.group({\n            frequency: defaults.schedule.frequency,\n            startDate: [defaults.schedule.startDate],\n            sendDate: [defaults.schedule.sendDate],\n            repeat: [defaults.schedule.repeat],\n            endDate: [defaults.schedule.endDate],\n            endType: [defaults.schedule.endType],\n            paymentService: [defaults.schedule.paymentService],\n            paymentServiceDate: [defaults.schedule.paymentServiceDate],\n            alertPendingCheckbox: [defaults.schedule.alertPendingCheckbox],\n            alertSentCheckbox: [defaults.schedule.alertSentCheckbox],\n            alertLastPendingCheckbox: [defaults.schedule.alertLastPendingCheckbox],\n          }),\n        }),\n      );\n    });\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  private createOvernightAddressFormGroup(payeeSummary: PayeeSummary): FormGroup {\n    const address = this.hasOvernightCheck(payeeSummary.paymentServices)\n      ? payeeSummary.overnightDeliveryAddress\n      : ({} as Address);\n    const paymentService = this.defaultPaymentService(payeeSummary);\n    const isOvernightAddressDisabled =\n      !paymentService?.paymentServiceType || paymentService.paymentServiceType !== PaymentServicesTypes.Overnight;\n\n    return this.fb.group({\n      address1: [\n        {\n          value: address?.address1,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      address2: [\n        {\n          value: address?.address2,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      city: [\n        {\n          value: address?.city,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      state: [\n        {\n          value: address?.state,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      postalCode: [\n        {\n          value: address?.postalCode,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n    });\n  }\n\n  private hasOvernightCheck = (services: PaymentService[] | undefined): boolean => {\n    return !!services?.find(item => item.paymentServiceType === PaymentServicesTypes.Overnight);\n  };\n\n  private defaultPaymentService(payee: PayeeSummary): PaymentServiceSummary | undefined {\n    return payee?.paymentServices?.find(\n      (item: PaymentServiceSummary) => item.paymentServiceType === PaymentServicesTypes.Regular,\n    );\n  }\n\n  handleSubmit() {\n    const paymentForms = Object.entries(this.paymentsFormGroup.value as PaymentFormState[])\n      .filter(([_id, form]) => !!+form.amount.amount)\n      .map(([_id, form]) => this.processFormData(form));\n    this.paymentStateService.isFormProcessing = true;\n    this.paymentStateService.updatePaymentState(paymentForms as any);\n    this.navigationService.navigateToReview({ relativeTo: this.route.parent });\n  }\n\n  private processFormData(data: PaymentFormState): PaymentFormState {\n    const startDate = data.schedule.frequency === FrequencyKeys.Once ? data.schedule.sendDate : data.schedule.startDate;\n    switch (data.schedule.endType) {\n      case EndTypes.After:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            startDate: startDate || '',\n            endDate: new Date(\n              this.scheduleService.estimatedEndDate(\n                data.schedule.startDate,\n                data.schedule.frequency,\n                data.schedule.repeat,\n              ),\n            ).toISOString(),\n          },\n        };\n      case EndTypes.On:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            startDate: startDate || '',\n            repeat: this.scheduleService.estimatedOccurences(\n              data.schedule.startDate,\n              data.schedule.endDate || data.schedule.startDate,\n              data.schedule.frequency,\n            ),\n          },\n        };\n      default:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            startDate: startDate || '',\n          },\n        };\n    }\n  }\n\n  private patchFormValue(value?: any) {\n    this.payeeSummaries?.forEach(payee => {\n      const formValue = value || this.defaultFormState(payee);\n      this.paymentsFormGroup.controls[payee.id].patchValue(formValue);\n    });\n  }\n\n  onDeleteEbills(resolve: boolean) {\n    this.isDeleteEbillsModalOpen = false;\n    if (resolve) {\n      this.deleteEbills()\n        .pipe(take(1))\n        .subscribe(() => {\n          this.deletionNotify('ebills');\n        });\n    }\n  }\n\n  onDeletePayee(resolve: boolean) {\n    this.isDeleteModalOpened = false;\n    if (resolve) {\n      this.deletePayee()\n        .pipe(take(1))\n        .subscribe(() => {\n          this.deletionNotify('delete');\n        });\n    }\n  }\n\n  onNavigateToPayments(hasNavigated: boolean) {\n    if (hasNavigated) {\n      this.navigationService.navigateToPayments();\n    }\n    this.isNavigateModalOpened = false;\n  }\n\n  private deletionNotify(type: string) {\n    this.payeeDataService.reloadPayees();\n    this.notificationType = type;\n    this.notificationService.showNotification({\n      header: this.notificationHeaderTemplate,\n      message: this.notificationMessageTemplate,\n      modifier: 'success',\n      ttl: this.configService.notificationDismissTime,\n    });\n  }\n\n  private openNavigateModal() {\n    this.isNavigateModalOpened = true;\n  }\n\n  openModal(): Observable<boolean> {\n    this.cdRef.markForCheck();\n    return this.paymentsFormGroup.touched || this.paymentStateService.isFormProcessing\n      ? this.discardModalService.openModal()\n      : of(true);\n  }\n\n  private patchPaymentDataToForm() {\n    this.paymentStateService.paymentState.pipe(take(1)).subscribe(paymentsState => {\n      if (paymentsState) {\n        paymentsState.forEach(payment => {\n          this.paymentsFormGroup.get(payment.payeeTo.id)?.patchValue(payment);\n        });\n      }\n    });\n  }\n\n  private deletePayee(): Observable<HttpResponse<any> | {}> {\n    return this.payeeDataService.selectedDeletePayee.pipe(\n      switchMap((payee: any) =>\n        payee ? this.payeeDataService.deletePayee(payee.id, payee.electronic) : (of() as Observable<any>),\n      ),\n    );\n  }\n  private deleteEbills(): Observable<HttpResponse<PayeeSummary> | {}> {\n    return this.payeeDataService.selectedDeleteEbills.pipe(\n      switchMap((payee: any) => (payee ? this.payeeDataService.deleteEbills(payee.id) : (of() as Observable<any>))),\n    );\n  }\n}\n","<ng-container *ngIf=\"!isErrorState; else errorState\">\n  <ng-container\n    *ngIf=\"(accounts$ | async) && payeeSummariesByEbillObservable$ | async as ebillGroupedData; else loadingState\"\n  >\n    <ng-container\n      *ngIf=\"\n        (ebillGroupedData.ebillsEnabled.length || ebillGroupedData.ebillsNotEnabled.length) &&\n          (accounts$ | async)?.length;\n        else emptyState\n      \"\n    >\n      <div class=\"bb-billpay-multiple-bills\">\n        <div\n          class=\"bb-block bb-block--lg\"\n          *ngIf=\"ebillGroupedData.ebillsEnabled.length\"\n          data-role=\"payees-with-active-e-bills-list\"\n        >\n          <div class=\"card card-lg\">\n            <div class=\"card-body\">\n              <div class=\"bb-block bb-block--lg\">\n                <bb-header-ui\n                  headingType=\"h2\"\n                  *ngIf=\"areBothListsPresent(ebillGroupedData)\"\n                  data-role=\"sub-header\"\n                  heading=\"Payees with Active eBills\"\n                  i18n-heading=\"\n                    Payees with eBills title|Title for the list of payees with eBills\n                    enabled@@billpay-payments-journey.multiple-bills.title.payees-with-ebills\"\n                >\n                </bb-header-ui>\n              </div>\n              <bb-billpay-payment-multiple-bills-list\n                [paymentsFormGroup]=\"paymentsFormGroup\"\n                [payeeSummaries]=\"ebillGroupedData.ebillsEnabled\"\n                [accounts]=\"accounts$ | async\"\n                [isForEbills]=\"true\"\n              ></bb-billpay-payment-multiple-bills-list>\n            </div>\n          </div>\n        </div>\n\n        <div\n          class=\"bb-billpay-multiple-bills-other-payees-card card card-lg\"\n          data-role=\"all-other-payees-list\"\n          *ngIf=\"ebillGroupedData.ebillsNotEnabled.length\"\n        >\n          <div class=\"card-body\">\n            <div class=\"bb-block bb-block--lg\">\n              <bb-header-ui\n                headingType=\"h2\"\n                *ngIf=\"areBothListsPresent(ebillGroupedData)\"\n                data-role=\"sub-header\"\n                heading=\"All Other Payees\"\n                i18n-heading=\"\n                  Payees without eBills title|Title for the list of payees that do not have eBills\n                  enabled@@billpay-payments-journey.multiple-bills.title.other-payees\"\n              >\n              </bb-header-ui>\n            </div>\n            <bb-billpay-payment-multiple-bills-list\n              [paymentsFormGroup]=\"paymentsFormGroup\"\n              [payeeSummaries]=\"ebillGroupedData.ebillsNotEnabled\"\n              [accounts]=\"accounts$ | async\"\n            ></bb-billpay-payment-multiple-bills-list>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payment-multiple-bills-sum-board\n  [totalAmount]=\"totalAmount$ | async\"\n  [actionButtons]=\"actionButtons\"\n  [inheritedId]=\"id\"\n></bb-billpay-payment-multiple-bills-sum-board>\n\n<ng-template #loadingState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #emptyState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        data-role=\"empty-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"assignment-ind\"\n        subtitle=\"Add a payee to make a bill payment\"\n        i18n-subtitle=\"\n          Add a payee to make a bill payment|Payee List no payees\n          subtitle@@bb-billpay-manage-widget-ang.bb-empty-state-ui.subtitle\"\n        title=\"No Payees\"\n        i18n-title=\"\n          No payees state text|Payee List no payees\n          title@@billpay-payments-journey.multiple-bills.bb-empty-state-ui.title\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-empty-state-ui\n        data-role=\"error-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"error-outline\"\n        subtitle=\"Try to reload the page or contact support\"\n        i18n-subtitle=\"\n          Try to reload the page or contact the support.|Payee List loading\n          subtitle@@bb-billpay-payee-list-widget-ang.loading.subtitle\"\n        title=\"Payee list is not loading\"\n        i18n-title=\"Payee list is not loading|Payee List loading title@@bb-billpay-payee-list-widget-ang.loading.title\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #actionButtons>\n  <div>\n    <div class=\"bb-stack\">\n      <button\n        bbButton\n        color=\"link\"\n        class=\"bb-stack__item bb-stack__item--spacing-md\"\n        (click)=\"handleClearForm()\"\n        data-role=\"multiple-bills-clear-button\"\n        i18n=\"@@billpay-payments-journey.multiple-bills.board.clear-button\"\n      >\n        Clear All\n      </button>\n      <button\n        bbButton\n        color=\"primary\"\n        class=\"bb-button-bar__button bb-stack__item bb-stack__item--spacing-none\"\n        data-role=\"multiple-bills-confirm-button\"\n        i18n=\"@@billpay-payments-journey.multiple-bills.board.confirm-button\"\n        attr.aria-describedby=\"total-amount-label-{{ id }}  total-amount-{{ id }}\"\n        (click)=\"handleSubmit()\"\n      >\n        Confirm Payment\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<bb-billpay-payee-delete-modal\n  *ngIf=\"isDeleteModalOpened\"\n  (resolve)=\"onDeletePayee($event)\"\n></bb-billpay-payee-delete-modal>\n\n<bb-billpay-ebills-delete-modal\n  *ngIf=\"isDeleteEbillsModalOpen\"\n  (resolve)=\"onDeleteEbills($event)\"\n></bb-billpay-ebills-delete-modal>\n\n<bb-billpay-payee-navigate-modal\n  *ngIf=\"isNavigateModalOpened\"\n  (resolve)=\"onNavigateToPayments($event)\"\n></bb-billpay-payee-navigate-modal>\n\n<ng-template #notificationMessage>\n  <div [ngSwitch]=\"notificationType\">\n    <div *ngSwitchCase=\"'ebills'\">\n      <span\n        *ngIf=\"selectedDeleteEbills$ | async as payee\"\n        i18n=\"\n          stop ebill notification message|Payee stop ebill confirmation success notification\n          message@@billpay-payee-list.stop-ebill-confirm.notification.message\"\n        >eBills for {{ payee.nickName ? payee.nickName + ' (' + payee.name + ')' : payee.name }} has been stopped\n        successfully</span\n      >\n    </div>\n    <div *ngSwitchCase=\"'delete'\">\n      <span\n        *ngIf=\"selectedDeletePayee$ | async as payee\"\n        i18n=\"\n          delete payee notification message|Payee delete confirmation success notification\n          message@@billpay-payee-list.delete-payee-confirm.notification.message\"\n        >The payee {{ payee.nickName ? payee.nickName + ' (' + payee.name + ')' : payee.name }} has been deleted\n        successfully</span\n      >\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <div [ngSwitch]=\"notificationType\">\n    <span\n      *ngSwitchCase=\"'ebills'\"\n      class=\"bb-text-bold\"\n      i18n=\"\n        eBills stopped notification header|eBills stopped confirmation success notification\n        header@@billpay-payee-list.confirm.notification.header\"\n      >eBills stopped</span\n    >\n    <span\n      *ngSwitchCase=\"'delete'\"\n      class=\"bb-text-bold\"\n      i18n=\"\n        delete payee notification header|Payee delete confirmation success notification\n        header@@billpay-payee-list.confirm.notification.header\"\n      >Payee deleted</span\n    >\n  </div>\n</ng-template>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-review-page-discard-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Cancel Bill Payments?\"\n  i18n-title=\"Discard changes modal header@@billpay.multiple-bills.discard-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel bill payments? Entered data will be lost.\"\n  i18n-subtitle=\"Discard changes modal body@@billpay.multiple-bills.discard-changes-modal.body\"\n  confirm-button-label=\"Cancel payment\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.multiple-bills.discard-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue with payment\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.multiple-bills.discard-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n","import { Component, ViewChild } from '@angular/core';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n} from '@backbase/billpay-journeys-common';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentMultipleBillsComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills.component';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-stack bb-block bb-block--lg\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Pay Bills\"\n          i18n-heading=\"@@pay-bills-journey.title.pay-bills\"\n          data-role=\"multiple-bills-widget-title\"\n        >\n        </bb-header-ui>\n        <p i18n=\"@@pay-bills-journey.pay-payee.header-description\" data-role=\"multiple-bills-widget-title-info\">\n          Add payees if you would like to pay a single bill or multiple bills\n        </p>\n      </div>\n      <div class=\"bb-stack__item\">\n        <button bbButton color=\"secondary\" data-role=\"pay-a-bill-add-payee\" (click)=\"addPayee()\">\n          <i class=\"bb-icon bb-icon-add\"></i>\n          <span class=\"bb-accounts-overview-table__header-row\" i18n=\"@@pay-bills-journey.pay-bills.add-payee-button\"\n            >Add Payee</span\n          >\n        </button>\n      </div>\n    </div>\n    <bb-billpay-payment-multiple-bills #multipleBillsReview></bb-billpay-payment-multiple-bills>\n  `,\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentMultipleBillsViewComponent implements BillpayDiscardChangesFormComponent {\n  @ViewChild('multipleBillsReview') child!: BillpayPaymentMultipleBillsComponent;\n  constructor(private readonly navigationService: PayBillsNavigationService) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  addPayee() {\n    this.navigationService?.navigateToAddPayee();\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport {\n  BillpayPaymentScheduleService,\n  BillpayUtilityService as Utility,\n  FrequencyKeys,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsJourneyConfigService } from '../../../services/pay-bills-journey-config.service';\nimport { PaymentResult } from '../../../model/payment.model';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[bb-billpay-payment-multiple-bills-review-item]',\n  templateUrl: 'billpay-payment-multiple-bills-review-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsReviewItemComponent {\n  @Input() payment?: PaymentResult;\n  @Input() last?: boolean;\n  isCollapsed = true;\n  readonly id = Utility.generateId();\n\n  get endDate(): number {\n    const { startDate, repeat, frequency } = this.payment?.schedule || {};\n    const date = startDate || new Date().toISOString();\n    return this.scheduleService.estimatedEndDate(date, frequency as FrequencyKeys, repeat);\n  }\n\n  get frequencyLabel(): string {\n    const frequency = this.configservice.frequencies.find(\n      frequency => this.payment?.schedule.frequency === frequency.value,\n    );\n    return $localize`:@@pay-bill-journey.review-item.frequency-label:${frequency?.name || ''}`;\n  }\n\n  constructor(\n    private readonly scheduleService: BillpayPaymentScheduleService,\n    private readonly configservice: PayBillsJourneyConfigService,\n  ) {}\n}\n","<tr class=\"billpay-multipl-ebills-review__tr\" [class.billpay-multipl-ebills-review__item--expanded]=\"!isCollapsed\">\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-block bb-d-md-table-cell\">\n    <ng-container *ngIf=\"payment?.hasOwnProperty('succeeded'); else payeeTmp\">\n      <div class=\"bb-stack\">\n        <bb-icon-ui\n          class=\"bb-stack__item bb-stack__item--spacing-md\"\n          [name]=\"payment?.succeeded ? 'success' : 'error-outline'\"\n          size=\"md\"\n          [color]=\"payment?.succeeded ? 'success' : 'danger'\"\n        ></bb-icon-ui>\n        <div class=\"bb-stack__item\">\n          <ng-container *ngTemplateOutlet=\"payeeNameTmp\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    {{ payment?.accountFrom.accountNickName }} (*{{ payment?.accountFrom.accountNumber | slice: -4 }})\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    {{ payment?.schedule?.startDate | bbDate: 'MM/dd/yyyy' }}\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    <ng-container *ngTemplateOutlet=\"amountTmp; context: payment\"></ng-container>\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-text-align-right\">\n    <button\n      bbButton\n      class=\"billpay-multipl-ebills-review__toggler\"\n      buttonSize=\"sm\"\n      color=\"text-link\"\n      [circle]=\"true\"\n      aria-label=\"dropdown-button\"\n      data-role=\"multipl-ebills-review-toggler\"\n      (click)=\"isCollapsed = !isCollapsed\"\n      [attr.aria-expanded]=\"!isCollapsed\"\n      [attr.aria-controls]=\"'collapse' + id\"\n    >\n      <bb-icon-ui\n        class=\"bb-stack__item\"\n        [name]=\"isCollapsed ? 'toggle-down' : 'toggle-up'\"\n        size=\"md\"\n        data-role=\"toggle-icon\"\n      ></bb-icon-ui>\n    </button>\n  </td>\n</tr>\n<tr *ngIf=\"payment?.hasOwnProperty('succeeded')\" class=\"billpay-multipl-ebills-review__tr\">\n  <td *ngIf=\"!payment?.succeeded\" colspan=\"5\" class=\"billpay-multipl-ebills-review__cell\">\n    <span class=\"bb-text-danger\" i18n=\"@@bb-billpay-multiple-bills-review.mixed-results.fail-message\"\n      >The payment of this bill could not be scheduled.</span\n    >\n  </td>\n</tr>\n<!-- Mobile screen view -->\n<tr class=\"bb-d-md-none billpay-multipl-ebills-review__tr\">\n  <td colspan=\"2\" class=\"billpay-multipl-ebills-review__cell\">\n    <ng-container *ngTemplateOutlet=\"amountTmp; context: payment\"></ng-container>\n  </td>\n</tr>\n<!-- Extra fields -->\n<tr data-role=\"multipl-ebills-extended-fields\" class=\"billpay-multipl-ebills-review__tr\">\n  <td colspan=\"5\">\n    <div [id]=\"'collapse' + id\" [ngbCollapse]=\"isCollapsed\">\n      <div class=\"billpay-multipl-ebills-review__cell\">\n        <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\" *ngIf=\"payment?.memo\">\n          <bb-icon-ui\n            name=\"subject\"\n            size=\"sm\"\n            color=\"secondary\"\n            class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n          ></bb-icon-ui>\n          <div class=\"bb-stack__item\">\n            <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n              <span i18n=\"@@bb-billpay-multiple-bills-review.memo\">Memo</span>\n            </div>\n            <div class=\"break-word bb-subtitle bb-text-support\" data-role=\"payment-description\">\n              {{ payment?.memo }}\n            </div>\n          </div>\n        </div>\n        <ng-container *ngIf=\"payment?.schedule as schedule\">\n          <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n            <bb-icon-ui\n              name=\"cached\"\n              size=\"sm\"\n              color=\"secondary\"\n              class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n            ></bb-icon-ui>\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n                <span\n                  i18n=\"\n                    Payment details frequency|Label for frequency in details\n                    group@@billpay-multiple-bills-review.details.frequency-label\"\n                  >Frequency</span\n                >\n              </div>\n              <div data-role=\"payment-frequency\">\n                {{ frequencyLabel }}\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"schedule.frequency === 'ONCE'\">\n            <ng-container *ngIf=\"payment?.overnightDeliveryAddress as address\">\n              <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n                <bb-icon-ui\n                  name=\"subject\"\n                  size=\"sm\"\n                  color=\"secondary\"\n                  class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n                ></bb-icon-ui>\n                <div class=\"bb-stack__item\">\n                  <div\n                    data-role=\"overnight-address-label\"\n                    i18n=\"\n                      Payment overnight address|Label for overnight\n                      address@@billpay-payment-review-card.details.overnight-address.label\"\n                    class=\"bb-text-bold\"\n                  >\n                    Overnight check address\n                  </div>\n                  <div data-role=\"overnight-address\" class=\"bb-block bb-block--md\">\n                    <div>{{ address.address1 }}</div>\n                    <div *ngIf=\"address.address2\">{{ address.address2 }}</div>\n                    <div>{{ address.city }}&nbsp;{{ address.state }}&nbsp;{{ address.postalCode }}</div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n\n          <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n            <bb-icon-ui\n              name=\"today\"\n              size=\"sm\"\n              color=\"secondary\"\n              class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n            ></bb-icon-ui>\n            <div class=\"bb-stack__item\">\n              <div\n                i18n=\"\n                  Payment details deliver by|Label for deliver by in details\n                  group@@billpay-payment-review-card.details.amount.other\"\n                class=\"bb-text-bold\"\n                data-role=\"deliver-by\"\n              >\n                { schedule.frequency, select, ONCE {Deliver payment by } other {Deliver first payment by } }\n              </div>\n              <div data-role=\"deliver-date\">\n                {{ schedule.startDate | date: 'mediumDate' }}\n              </div>\n            </div>\n          </div>\n\n          <ng-container *ngIf=\"schedule.frequency !== 'ONCE'\">\n            <!-- EndDate -->\n            <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n              <bb-icon-ui\n                name=\"today\"\n                size=\"sm\"\n                color=\"secondary\"\n                class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n              ></bb-icon-ui>\n              <div class=\"bb-stack__item\">\n                <div\n                  i18n=\"\n                    Payment details ending|Label for ending in details\n                    group@@billpay-payment-review-card.details.ending-label\"\n                  class=\"bb-text-bold\"\n                  data-role=\"ending-label\"\n                >\n                  Ending\n                </div>\n                <div data-role=\"ending\">\n                  <span\n                    *ngIf=\"schedule?.repeat; else neverEndingTmp\"\n                    i18n=\"\n                      Payment details ending|Label for ending in details\n                      group@@billpay-payment-review-card.details.ending\"\n                    >After { schedule.repeat, plural, =1 {{{schedule.repeat}} payment } other\n                    {{{schedule.repeat}} payments } } (estimated {{ endDate | date: 'mediumDate' }})\n                  </span>\n                  <ng-template #neverEndingTmp>\n                    <span\n                      i18n=\"\n                        Payment details ending|Label for never ending\n                        payment@@billpay-payment-review-card.details.ending.never\"\n                      >Never\n                    </span>\n                  </ng-template>\n                </div>\n              </div>\n            </div>\n\n            <!-- Notify section -->\n            <ng-container\n              *ngIf=\"\n                schedule?.alertPendingCheckbox || schedule?.alertSentCheckbox || schedule?.alertLastPendingCheckbox\n              \"\n            >\n              <div\n                i18n=\"\n                  Payment details notify me|Label for notify me in details\n                  group@@billpay-payment-review-card.details.notify\"\n                class=\"bb-text-bold\"\n                data-role=\"notify-label\"\n              >\n                Notify me\n              </div>\n              <div>\n                <ul>\n                  <li\n                    *ngIf=\"schedule?.alertPendingCheckbox\"\n                    i18n=\"\n                      Payment details when a payment is pending|Label for when a payment is pending in details\n                      group@@billpay-payment-review-card.details.notify.pending\"\n                    data-role=\"alertPendingCheckbox\"\n                  >\n                    When a payment is pending\n                  </li>\n                  <li\n                    *ngIf=\"schedule?.alertSentCheckbox\"\n                    i18n=\"\n                      Payment details when a payment has been sent|Label for when a payment has been sent in details\n                      group@@billpay-payment-review-card.details.notify.sent\"\n                    data-role=\"alertSentCheckbox\"\n                  >\n                    When a payment has been sent\n                  </li>\n                  <li\n                    *ngIf=\"schedule?.alertLastPendingCheckbox\"\n                    i18n=\"\n                      Payment details when the last payment is pending|Label for when the last payment is pending in\n                      details group@@billpay-payment-review-card.details.notify.pending.last\"\n                    data-role=\"alertLastPendingCheckbox\"\n                  >\n                    When the last payment is pending\n                  </li>\n                </ul>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </td>\n</tr>\n<tr class=\"billpay-multipl-ebills-review__tr billpay-multipl-ebills-review__tr--last\" aria-hidden=\"true\">\n  <td colspan=\"5\"></td>\n</tr>\n<tr class=\"billpay-multipl-ebills-review__seperator\" aria-hidden=\"true\" *ngIf=\"!last\"></tr>\n<!-- Payee -->\n<ng-template #payeeTmp>\n  <ng-container\n    *ngIf=\"\n      payment?.payeeTo?.ebill?.enabled &&\n        payment?.payeeTo?.ebill?.latestBill?.status !== 'PAID' &&\n        payment?.payeeTo?.ebill?.latestBill?.paymentDate;\n      else payeeNameTmp\n    \"\n  >\n    <label class=\"bb-block bb-block--no-margin\">{{ payment?.payeeTo?.nickName || payment?.payeeTo?.name }}</label>\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n        data-role=\"receipt-icon\"\n        size=\"sm\"\n        name=\"receipt\"\n        color=\"secondary\"\n      ></bb-icon-ui>\n      <span\n        class=\"bb-stack__item bb-subtitle bb-text-support\"\n        data-role=\"due-date-label\"\n        *ngIf=\"payment?.payeeTo?.ebill?.latestBill?.paymentDate as ebillPaymentDate\"\n      >\n        <bb-amount-ui\n          *ngIf=\"payment?.payeeTo?.ebill?.latestBill?.minAmountDue as minAmountDue\"\n          [currency]=\"minAmountDue?.currency\"\n          [amount]=\"minAmountDue?.amount\"\n        ></bb-amount-ui>\n        <span\n          i18n=\"\n            Ebill due note|Text for the information about the due eBill@@bb-billpay-multiple-bills-review.note.ebill-due\"\n        >\n          due on</span\n        >\n        {{ ebillPaymentDate | bbDate: 'MMM d' }}\n      </span>\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #payeeNameTmp>\n  <label class=\"bb-label\">{{ payment?.payeeTo?.nickName || payment?.payeeTo?.name }}</label>\n</ng-template>\n<!-- Amount -->\n<ng-template #amountTmp let-amount=\"amount\">\n  <bb-amount-ui class=\"bb-text-semi-bold\" [currency]=\"amount.currency\" [amount]=\"amount.amount\"> </bb-amount-ui>\n</ng-template>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { PaymentResult } from '../../../model/payment.model';\n\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-review-table',\n  templateUrl: 'billpay-payment-multiple-bills-review-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsReviewTableComponent {\n  @Input() payments?: PaymentResult[];\n}\n","<table\n  class=\"billpay-multipl-ebills-review\"\n  aria-label=\"Review Your Payment\"\n  i18n-aria-label=\"@@billpay-payments-journey.multiple-bills.table-description\"\n>\n  <thead>\n    <tr class=\"bb-d-none bb-d-md-table-row\">\n      <th scope=\"col\" class=\"billpay-multipl-ebills-review__cell\">\n        <span\n          i18n=\"@@bb-billpay-multiple-bills-review.titles.payee\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          data-role=\"multiple-ebills-review-payee\"\n          >Payee</span\n        >\n      </th>\n      <th scope=\"col\" class=\"billpay-multipl-ebills-review__cell\">\n        <span\n          i18n=\"@@bb-billpay-multiple-bills-review.titles.from-account\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          data-role=\"multiple-ebills-review-from-account\"\n          >From Account</span\n        >\n      </th>\n      <th scope=\"col\" class=\"billpay-multipl-ebills-review__cell\">\n        <div class=\"bb-stack\">\n          <span\n            class=\"bb-subtitle bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n            i18n=\"@@bb-billpay-multiple-bills-review.titles.delivery-date\"\n            data-role=\"multiple-bills-review-delivery-date\"\n            >Est. Delivery\n          </span>\n          <span\n            bbTooltip=\"The date we expect your payment to reach the payee. That may vary from payee to payee.\"\n            placement=\"top\"\n            [triggers]=\"'hover'\"\n            i18n=\"@@bb-billpay-multiple-bills-review.delivery-date.tooltip\"\n            class=\"bb-d-flex\"\n          >\n            <bb-icon-ui name=\"info\" size=\"sm\" class=\"bb-billpay-multiple-bills__tooltip\"></bb-icon-ui>\n          </span>\n        </div>\n      </th>\n      <th scope=\"col\" class=\"billpay-multipl-ebills-review__cell\">\n        <span\n          i18n=\"@@bb-billpay-multiple-bills-review.titles.amount\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          data-role=\"multiple-ebills-review-amount\"\n          >Amount</span\n        >\n      </th>\n      <th scope=\"col\" aria-hidden=\"true\"></th>\n    </tr>\n  </thead>\n  <tbody\n    bb-billpay-payment-multiple-bills-review-item\n    *ngFor=\"let payment of payments; let last = last\"\n    [last]=\"last\"\n    [payment]=\"payment\"\n  ></tbody>\n</table>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PaymentFormState, BillpayUtilityService as Utility } from '@backbase/billpay-journeys-common';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { PaymentResult } from '../../../model/payment.model';\n\ndeclare const $localize: any;\n\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-success',\n  templateUrl: 'billpay-payment-multiple-bills-success.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsSuccessComponent {\n  readonly id = Utility.generateId();\n  successMsg?: string;\n  mixedMsg?: string;\n  allSucceeded = true;\n  payments?: PaymentResult[];\n\n  @Input() set results(value: PaymentResult[]) {\n    const succeded = value.filter(payment => payment.succeeded);\n    this.allSucceeded = succeded.length === value.length;\n    if (this.allSucceeded) {\n      const getPayee = (payment: PaymentFormState) => payment.payeeTo.nickName || payment.payeeTo.name;\n      const payees = value\n        .map((payment, i) => {\n          if (i === 0) return getPayee(payment);\n          return i === value.length - 1 ? ' and ' + getPayee(payment) : ', ' + getPayee(payment);\n        })\n        .join('');\n      this.successMsg = $localize`You’ve just scheduled ${value.length} payment${\n        value.length > 1 ? 's' : ''\n      } to ${payees}.`;\n    } else {\n      this.payments = value;\n      this.mixedMsg = $localize`You scheduled sucessfully ${succeded.length} out of ${value.length} bills.`;\n    }\n  }\n\n  private readonly resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-pay-bills-journey',\n    getURIFromAssetID: (assetId: string) => `${assetId}`,\n  });\n\n  successImg: Observable<string> = this.resolveAsset('succeed.svg');\n  successImgNoMotion: Observable<string> = this.resolveAsset('no-motion.svg');\n\n  constructor(\n    private readonly assetsService: AssetsService,\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  payMore() {\n    this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n  }\n  goToMyAccounts() {\n    this.navigationService?.navigateToMainAppPage();\n  }\n}\n","<div class=\"card card-lg bb-billpay-multiple-bills-other-payees-card\">\n  <div class=\"card-body\">\n    <ng-container *ngIf=\"allSucceeded; else mixedStatus\">\n      <div class=\"bb-text-align-center bb-block--xl\" role=\"alert\">\n        <picture>\n          <source srcset=\"{{ successImgNoMotion | async }}\" media=\"(prefers-reduced-motion: reduce)\" />\n          <img\n            srcset=\"{{ (successImg | async) + '?' + id }}\"\n            alt=\"Success!\"\n            i18n-alt=\"Success!|Text for transfer succeeded@@bb-billpay-multiple-bills-review.transfer-succeeded\"\n            data-role=\"transfer-success-anim\"\n            class=\"img-fluid\"\n          />\n        </picture>\n        <bb-header-ui\n          headingClasses=\"bb-text-semi-bold\"\n          headingType=\"h2\"\n          data-role=\"success-title\"\n          heading=\"Your Bills Were Successfully Scheduled!\"\n          i18n-heading=\"@@billpay-payments-journey.multiple-bills.success.title\"\n        ></bb-header-ui>\n        <span class=\"bb-text-support\">{{ successMsg }}</span>\n      </div>\n    </ng-container>\n    <div class=\"bb-stack bb-stack--center\">\n      <button\n        bbButton\n        color=\"primary\"\n        class=\"bb-stack__item\"\n        data-role=\"multiple-bills-success-pay-more\"\n        i18n=\"@@bb-billpay-multiple-bills-review.transfer-done\"\n        (click)=\"payMore()\"\n      >\n        Pay Another Bill\n      </button>\n      <button bbButton color=\"secondary\" class=\"bb-stack__item\" i18n=\"@@bb-billpay-multiple-bills-review.my-accounts\" (click)=\"goToMyAccounts()\">\n        Go to My Accounts\n      </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #mixedStatus>\n  <div class=\"bb-text-align-center bb-block--xl\">\n    <bb-header-ui\n      headingClasses=\"bb-text-semi-bold\"\n      headingType=\"h2\"\n      data-role=\"success-title\"\n      [heading]=\"mixedMsg\"\n    ></bb-header-ui>\n    <span class=\"bb-text-support\" i18n=\"@@billpay-payments-journey.multiple-bills.mixed-status.message\"\n      >Review the payments that have been processed and the other that failed below</span\n    >\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <bb-billpay-payment-multiple-bills-review-table\n      [payments]=\"payments\"\n    ></bb-billpay-payment-multiple-bills-review-table>\n  </div>\n</ng-template>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  PaymentFormState,\n  BillpayUtilityService as Utility,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { forkJoin, Observable, of, Subject } from 'rxjs';\nimport { catchError, map, mapTo, takeUntil, tap } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PaymentResult } from '../../../model/payment.model';\n\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-review',\n  templateUrl: 'billpay-payment-multiple-bills-review.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentMultipleBillsReviewComponent implements OnDestroy {\n  private readonly destroy$ = new Subject();\n  private editMode = false;\n  /**\n   * Flag for payment error\n   */\n  paymentError = false;\n  /**\n   * Flag for submitting payment\n   */\n  submittingPayment = false;\n  readonly id = Utility.generateId();\n  /**\n   * Refrence for fail alert\n   */\n  @ViewChild('failAlert') failAlert!: ElementRef;\n  /**\n   * List of payments\n   */\n  payments$ = this.paymentStateService.paymentState.pipe(\n    tap(paymentForms => {\n      if (!paymentForms?.length) {\n        this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n      }\n    }),\n  );\n  /**\n   * Carry the amount for total amount to be paid\n   */\n  totalAmount$ = this.payments$.pipe(\n    map(payments => payments?.reduce((acc: number, payment: PaymentFormState) => acc + +payment.amount.amount, 0)),\n  );\n  /**\n   * List of responses results\n   */\n  results?: PaymentResult[] = [];\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  constructor(\n    private readonly paymentStateService: PayBillsStateService,\n    private readonly dataService: BillpayPaymentDataService,\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly route: ActivatedRoute,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private cdRef: ChangeDetectorRef,\n  ) {}\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if (!this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  /**\n   * Methos to send payment to server\n   */\n  onPaymentConfirm(payments: PaymentFormState[]) {\n    this.paymentError = false;\n    this.results = [];\n    this.submittingPayment = true;\n    forkJoin(\n      payments.map(payment =>\n        this.dataService.createPayment(payment).pipe(\n          mapTo({ ...payment, succeeded: true }),\n          catchError(() => of({ succeeded: false, ...payment })),\n        ),\n      ),\n    )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(async responseList => {\n        this.submittingPayment = false;\n        this.paymentStateService.isFormProcessing = false;\n        const errors = responseList.filter(response => !response?.succeeded);\n        errors.length === payments.length ? this.allFailed() : (this.results = responseList);\n        this.cdRef.markForCheck();\n      });\n  }\n\n  private navigateToForm(resetFormValue: boolean = false) {\n    if (resetFormValue) {\n      this.paymentStateService.reset();\n    }\n    this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n  }\n\n  private allFailed() {\n    this.paymentStateService.isFormProcessing = true;\n    this.submittingPayment = false;\n    this.paymentError = true;\n    this.cdRef.markForCheck();\n    this.failAlert?.nativeElement.scrollIntoView(false);\n  }\n\n  openModal(): Observable<boolean> {\n    if (this.paymentStateService.isFormProcessing && !this.editMode && !this.paymentError) {\n      return this.discardModalService.openModal();\n    }\n    return of(true);\n  }\n\n  onCancel() {\n    this.navigateToForm(!!this.paymentError);\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n    if (isConfirmed) {\n      this.paymentStateService.reset();\n    }\n  }\n\n  onEdit() {\n    this.editMode = true;\n    this.navigateToForm();\n  }\n}\n","<ng-container *ngIf=\"payments$ | async as payments\">\n  <ng-container *ngTemplateOutlet=\"results?.length ? successScreen : reviewTemplate\"> </ng-container>\n  <ng-template #reviewTemplate>\n    <div class=\"card card-lg bb-billpay-multiple-bills-other-payees-card\">\n      <div class=\"card-body\">\n        <div #failAlert>\n          <bb-alert-ui\n            title=\"Something went wrong. Please try again\"\n            i18n-title=\"@@billpay-payments-journey.multiple-bills.fail-message\"\n            (close)=\"(false)\"\n            modifier=\"error\"\n            data-role=\"failure-message\"\n            *ngIf=\"paymentError\"\n          >\n          </bb-alert-ui>\n        </div>\n        <bb-billpay-payment-multiple-bills-review-table\n          [payments]=\"payments\"\n        ></bb-billpay-payment-multiple-bills-review-table>\n      </div>\n    </div>\n\n    <bb-billpay-payment-multiple-bills-sum-board\n      [totalAmount]=\"totalAmount$ | async\"\n      [actionButtons]=\"actionButtons\"\n      [inheritedId]=\"id\"\n    ></bb-billpay-payment-multiple-bills-sum-board>\n  </ng-template>\n  <ng-template #actionButtons>\n    <div>\n      <div class=\"bb-stack\">\n        <button\n          bbButton\n          color=\"link\"\n          class=\"btn-link bb-stack__item bb-stack__item--spacing-md bb-d-none bb-d-md-block\"\n          data-role=\"multiple-bills-cancel-button\"\n          i18n=\"@@billpay-payments-journey.multiple-bills.board.cancel-button\"\n          (click)=\"onCancel()\"\n        >\n          Cancel\n        </button>\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"bb-d-none bb-d-md-block bb-stack__item bb-stack__item--spacing-md\"\n          data-role=\"multiple-bills-edit-button\"\n          i18n=\"@@billpay-payments-journey.multiple-bills.board.edit-button\"\n          (click)=\"onEdit()\"\n        >\n          Edit Payment\n        </button>\n        <button\n          bbButton\n          color=\"secondary\"\n          [circle]=\"true\"\n          class=\"bb-d-md-none bb-stack__item bb-stack__item--spacing-md\"\n          data-role=\"multiple-bills-edit-button\"\n          i18n=\"@@billpay-payments-journey.multiple-bills.board.edit-button\"\n          (click)=\"onEdit()\"\n        >\n          <bb-icon-ui name=\"edit\"></bb-icon-ui>\n        </button>\n        <bb-load-button-ui\n          color=\"primary\"\n          class=\"bb-stack__item bb-stack__item--spacing-none\"\n          data-role=\"multiple-bills-confirm-button\"\n          [isLoading]=\"submittingPayment\"\n          (click)=\"onPaymentConfirm(payments)\"\n          attr.aria-describedby=\"total-amount-label-{{ id }}  total-amount-{{ id }}\"\n        >\n          <span i18n=\"@@billpay-payments-journey.multiple-bills.board.confirm-button\" class=\"bb-d-none bb-d-md-block\"\n            >Confirm Payment</span\n          >\n          <span i18n=\"@@billpay-payments-journey.multiple-bills.board.confirm-button.mobile\" class=\"bb-d-md-none\"\n            >Pay</span\n          >\n        </bb-load-button-ui>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template #successScreen>\n    <bb-billpay-payment-multiple-bills-success [results]=\"results\"></bb-billpay-payment-multiple-bills-success>\n  </ng-template>\n</ng-container>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-review-page-discard-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Cancel Bill Payments?\"\n  i18n-title=\"Discard changes modal header@@billpay.multiple-bills.discard-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel bill payments? Entered data will be lost.\"\n  i18n-subtitle=\"Discard changes modal body@@billpay.multiple-bills.discard-changes-modal.body\"\n  confirm-button-label=\"Cancel Payments\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.multiple-bills.discard-changes-modal.confirm-button\"\n  cancel-button-label=\"Not Now\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.multiple-bills.discard-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n","import { Component, ViewChild } from '@angular/core';\nimport { BillpayDiscardChangesFormComponent } from '@backbase/billpay-journeys-common';\nimport { BillpayPaymentMultipleBillsReviewComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review/billpay-payment-multiple-bills-review.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n  template: `\n    <div class=\"bb-block bb-block--lg bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-block bb-block--md pl-0\"\n          data-role=\"pay-a-bill-journey-back\"\n          (click)=\"navigateToForm()\"\n        >\n          <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n          <span i18n=\"button label|Back button@@pay-bills-journey.back-to-multiple-bills\">Back To Pay Bills</span>\n        </button>\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Review Your Payments\"\n          i18n-heading=\"@@pay-bills-journey.title.review-bills\"\n          data-role=\"pay-a-bill-journey-title\"\n        >\n        </bb-header-ui>\n      </div>\n    </div>\n    <bb-billpay-payment-multiple-bills-review #multipleBillsReview></bb-billpay-payment-multiple-bills-review>\n  `,\n})\nexport class BillpayPaymentMultipleBillsReviewViewComponent implements BillpayDiscardChangesFormComponent {\n  @ViewChild('multipleBillsReview') child!: BillpayPaymentMultipleBillsReviewComponent;\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n\n  navigateToForm() {\n    this.child.onCancel();\n  }\n}\n","import { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { BillpayBaseDeactivateGuardService } from '@backbase/billpay-journeys-common';\n\n@Injectable()\nexport class BillpayManagePaymentDeactivateGuardService extends BillpayBaseDeactivateGuardService {\n  protected readonly allowedNextRoutes = [\n    /^.*;payee=.+$/,\n    /^.*\\/review$/,\n    /^.*\\/recurring\\/edit\\/.+(\\/review.+)?$/,\n    /^.*\\/one-off\\/edit\\/.+(\\/review.+)?$/,\n  ];\n  protected readonly allowedPreviousRoutes = [\n    /^.*;payee=.+$/,\n    /^.*(\\/review)$/,\n    /^.*(\\/form){1}$/,\n    /^.*\\/recurring\\/edit\\/.+(\\/review.+)?$/,\n    /^.*\\/one-off\\/edit\\/.+(\\/review.+)?$/,\n  ];\n  /** @internal */\n  constructor(router: Router, location: Location) {\n    super(router, location);\n  }\n}\n","import { BillpayPaymentMultipleBillsComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills.component';\nimport { BillpayPaymentMultipleBillsSumBoardComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-sum-board/billpay-payment-multiple-bills-sum-board.component';\nimport { BillpayPaymentMultipleBillsListItemComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list-item/billpay-payment-multiple-bills-list-item.component';\nimport { BillpayPaymentMultipleBillsListComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list/billpay-payment-multiple-bills-list.component';\n\nimport { BillpayPaymentFrequencyComponent } from '../components/form-components/billpay-payment-frequency/billpay-payment-frequency.component';\nimport { BillpayPaymentStartDateComponent } from '../components/form-components/billpay-payment-start-date/billpay-payment-start-date.component';\nimport { BillpayPaymentEndDateComponent } from '../components/form-components/billpay-payment-end-date/billpay-payment-end-date.component';\nimport { BillpayPaymentMultipleBillsReviewComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review/billpay-payment-multiple-bills-review.component';\nimport { BillpayPaymentMultipleBillsReviewItemComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-item/billpay-payment-multiple-bills-review-item.component';\nimport { BillpayPaymentMultipleBillsSuccessComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-success/billpay-payment-multiple-bills-success.component';\nimport { BillpayPaymentCompactProductSelectorComponent } from '../components/form-components/billpay-payment-compact-product-selector/billpay-payment-compact-product-selector.component';\nimport { BillpayPaymentMultipleBillsReviewTableComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-table/billpay-payment-multiple-bills-review-table.component';\nimport { BillpayPaymentFormContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-form-container/billpay-payment-form-container.component';\nimport { BillpayEbillPaymentUIComponent } from './billpay-payment-single-bill/billpay-ebill-payment-ui/billpay-ebill-payment-ui.component';\nimport { ScheduleComponent } from './billpay-payment-single-bill/bb-schedule-ui/schedule.component';\nimport { ScheduleLabelComponent } from './billpay-payment-single-bill/bb-schedule-label-ui/schedule-label.component';\nimport { BillpayPaymentDiscardChangesModalComponent } from './billpay-payment-single-bill/billpay-payment-discard-changes-modal/billpay-payment-discard-changes-modal.component';\nimport { BillpayPaymentFormComponent } from './billpay-payment-single-bill/billpay-payment-form/billpay-payment-form.component';\nimport { BillpayPaymentRecurringEditReviewContainerComponent } from './billpay-payment-single-bill/billpay-payment-recurring-edit-review-container/billpay-payment-recurring-edit-review-container.component';\nimport { BillpayPaymentReviewContainerComponent } from './billpay-payment-single-bill/billpay-payment-review-container/billpay-payment-review-container.component';\nimport { BillpayPaymentRecurringEditFormContainerComponent } from './billpay-payment-single-bill/billpay-payment-recurring-edit-form-container/billpay-payment-recurring-edit-form-container.component';\nimport { BillpayPaymentOneOffEditReviewContainerComponent } from './billpay-payment-single-bill/billpay-payment-one-off-edit-review-container/billpay-payment-one-off-edit-review-container.component';\nimport { BillpayPaymentOneOffEditFormContainerComponent } from './billpay-payment-single-bill/billpay-payment-one-off-edit-form-container/billpay-payment-one-off-edit-form-container.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BillpayJourneysCommonModule } from '@backbase/billpay-journeys-common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { AmountInputModule } from '@backbase/ui-ang/amount-input';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CharCounterModule } from '@backbase/ui-ang/char-counter';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { CurrencyInputModule } from '@backbase/ui-ang/currency-input';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { FieldsetModule } from '@backbase/ui-ang/fieldset';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { InputNumberModule } from '@backbase/ui-ang/input-number';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { ProductItemCurrentAccountModule } from '@backbase/ui-ang/product-item-current-account';\nimport { ProductSelectorModule } from '@backbase/ui-ang/product-selector';\nimport { TextareaModule } from '@backbase/ui-ang/textarea';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nconst uiAngModules = [\n  LoadingIndicatorModule,\n  BbDatePipeModule,\n  EmptyStateModule,\n  ModalModule,\n  DropdownSingleSelectModule,\n  InputRadioGroupModule,\n  InputNumberModule,\n  ButtonModule,\n  InputCheckboxModule,\n  ProductItemCurrentAccountModule,\n  ProductItemBasicAccountModule,\n  ProductSelectorModule,\n  CurrencyInputModule,\n  CharCounterModule,\n  IconModule,\n  FieldsetModule,\n  AlertModule,\n  InputValidationMessageModule,\n  InputDatepickerModule,\n  CollapsibleModule,\n  TextareaModule,\n  AmountInputModule,\n  AlertModule,\n  AmountModule,\n  DropdownMenuModule,\n  EllipsisModule,\n  HeaderModule,\n  LoadButtonModule,\n  TooltipModule,\n];\n\nconst components = [\n  BillpayPaymentMultipleBillsComponent,\n  BillpayPaymentMultipleBillsSumBoardComponent,\n  BillpayPaymentMultipleBillsListItemComponent,\n  BillpayPaymentMultipleBillsListComponent,\n  BillpayPaymentMultipleBillsReviewComponent,\n  BillpayPaymentMultipleBillsReviewItemComponent,\n  BillpayPaymentMultipleBillsReviewTableComponent,\n  BillpayPaymentMultipleBillsSuccessComponent,\n  BillpayPaymentFrequencyComponent,\n  BillpayPaymentStartDateComponent,\n  BillpayPaymentEndDateComponent,\n  BillpayPaymentCompactProductSelectorComponent,\n  BillpayPaymentFormContainerComponent,\n  BillpayEbillPaymentUIComponent,\n  ScheduleComponent,\n  ScheduleLabelComponent,\n  BillpayPaymentDiscardChangesModalComponent,\n  BillpayPaymentFormComponent,\n  BillpayPaymentRecurringEditReviewContainerComponent,\n  BillpayPaymentReviewContainerComponent,\n  BillpayPaymentRecurringEditFormContainerComponent,\n  BillpayPaymentOneOffEditReviewContainerComponent,\n  BillpayPaymentOneOffEditFormContainerComponent,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [CommonModule, ReactiveFormsModule, NgbModule, BillpayJourneysCommonModule, ...uiAngModules],\n  exports: [...components, ...uiAngModules],\n})\nexport class PayBillsJourneyUiModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  BillpayJourneysCommonModule,\n  BillpayEnrolmentGuard,\n  BillpayPayeeDataService,\n  BillpayPaymentDataService,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsJourneyComponent } from './pay-bills-journey.component';\nimport { BillPayEnrolmentViewComponent } from './views/billpay-enrolment-view.component';\nimport { BillpayPaymentFormViewComponent } from './views/billpay-payment-form-view.component';\nimport { BillpayPaymentReviewViewComponent } from './views/billpay-payment-review-view.component';\nimport { BillpayPaymentRecurringEditFormViewComponent } from './views/billpay-payment-recurring-edit-form-view.component';\nimport { BillpayPaymentRecurringEditReviewViewComponent } from './views/billpay-payment-recurring-edit-review-view.component';\nimport { BillpayPaymentOneOffEditFormViewComponent } from './views/billpay-payment-oneoff-edit-form-view.component';\nimport { BillpayPaymentOneOffEditReviewViewComponent } from './views/billpay-payment-oneoff-edit-review-view.component';\nimport { BillpayPaymentMultipleBillsViewComponent } from './views/billpay-payment-multiple-bills-view.component';\nimport { PayBillsStateService } from './services/pay-bills-state.service';\nimport { BillpayPaymentMultipleBillsReviewViewComponent } from './views/billpay-payment-multiple-bills-review-view.component';\nimport { BillpayManagePaymentDeactivateGuardService } from './services/billpay-manage-payment-deactivate-guard.service';\nimport { PayBillsJourneyUiModule } from './components/pay-bills-journey-ui.module';\nimport { PayBillsJourneyConfigService } from './services/pay-bills-journey-config.service';\n\nexport const defaultRoute: Route = {\n  path: '',\n  component: PayBillsJourneyComponent,\n  children: [\n    { path: 'enrolment', component: BillPayEnrolmentViewComponent },\n    {\n      path: '',\n      canActivate: [BillpayEnrolmentGuard],\n      children: [\n        { path: '', redirectTo: 'form', pathMatch: 'full' },\n        {\n          path: 'form',\n          component: BillpayPaymentMultipleBillsViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'review',\n          component: BillpayPaymentMultipleBillsReviewViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'recurring/edit/:id',\n          component: BillpayPaymentRecurringEditFormViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'recurring/edit/:id/review',\n          component: BillpayPaymentRecurringEditReviewViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'one-off/edit/:id',\n          component: BillpayPaymentOneOffEditFormViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'one-off/edit/:id/review',\n          component: BillpayPaymentOneOffEditReviewViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n      ],\n    },\n  ],\n};\n\nconst components = [\n  BillPayEnrolmentViewComponent,\n  BillpayPaymentFormViewComponent,\n  BillpayPaymentReviewViewComponent,\n  BillpayPaymentRecurringEditFormViewComponent,\n  BillpayPaymentRecurringEditReviewViewComponent,\n  BillpayPaymentOneOffEditFormViewComponent,\n  BillpayPaymentOneOffEditReviewViewComponent,\n  BillpayPaymentMultipleBillsViewComponent,\n  BillpayPaymentMultipleBillsReviewViewComponent,\n];\n\n@NgModule({\n  declarations: [PayBillsJourneyComponent, ...components],\n  imports: [\n    CommonModule,\n    RouterModule,\n    BillpayJourneysCommonModule,\n    ReactiveFormsModule,\n    PayBillsJourneyUiModule,\n    FormsModule,\n    NgbModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { PayBillsJourneyComponent },\n    }),\n  ],\n  providers: [\n    BillpayManagePaymentDeactivateGuardService,\n    PayBillsStateService,\n    BillpayPaymentDataService,\n    PayBillsJourneyConfigService,\n    BillpayPayeeDataService,\n  ],\n})\nexport class PayBillsJourneyModule {\n  static forRoot(\n    data: { route: Route; [key: string]: any } = { route: defaultRoute },\n  ): ModuleWithProviders<PayBillsJourneyModule> {\n    return {\n      ngModule: PayBillsJourneyModule,\n      providers: [provideRoutes([data.route])],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["combineLatest","map","ONE_OFF_PAYMENT","RECURRING_PAYMENT","pluck","Injectable","Optional","Subject","takeUntil","Component","InjectionToken","accountNumberFullFormat","FrequencyKeys","Inject","BehaviorSubject","Utility","Input","PaymentServicesTypes","EndTypes","formControlOptions","EventEmitter","frequencies","take","accountNumberMaskedFormat","Validators","ViewChild","Output","LoadingState","of","BillpayDiscardChangesModalService","HostListener","filter","switchMap","tap","ChangeDetectionStrategy","shareReplay","Directive","catchError","first","distinctUntilChanged","BillpayPayeeSummaryItemBaseComponent","skip","forkJoin","mapTo","BillpayBaseDeactivateGuardService","LoadingIndicatorModule","BbDatePipeModule","EmptyStateModule","ModalModule","DropdownSingleSelectModule","InputRadioGroupModule","InputNumberModule","ButtonModule","InputCheckboxModule","ProductItemCurrentAccountModule","ProductItemBasicAccountModule","ProductSelectorModule","CurrencyInputModule","CharCounterModule","IconModule","FieldsetModule","AlertModule","InputValidationMessageModule","InputDatepickerModule","CollapsibleModule","TextareaModule","AmountInputModule","AmountModule","DropdownMenuModule","EllipsisModule","HeaderModule","LoadButtonModule","TooltipModule","components","CommonModule","ReactiveFormsModule","NgbModule","BillpayJourneysCommonModule","NgModule","BillpayEnrolmentGuard","provideRoutes","RouterModule","FormsModule","BillpayPaymentDataService","BillpayPayeeDataService","BackbaseCoreModule"],"mappings":"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"}