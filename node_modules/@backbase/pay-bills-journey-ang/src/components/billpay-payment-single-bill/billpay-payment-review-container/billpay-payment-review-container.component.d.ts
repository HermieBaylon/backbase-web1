import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { Observable } from 'rxjs';
import { BillpayDiscardChangesFormComponent, BillpayDiscardChangesModalService, BillpayPaymentParserService, PaymentFormState, PaymentReview, Frequency, BillpayPaymentDataService } from '@backbase/billpay-journeys-common';
import { PayBillsStateService } from '../../../services/pay-bills-state.service';
import { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';
import { ActivatedRoute } from '@angular/router';
import { NotificationService } from '@backbase/ui-ang/notification';
import * as i0 from "@angular/core";
export declare class BillpayPaymentReviewContainerComponent implements OnInit, OnDestroy, BillpayDiscardChangesFormComponent {
    private readonly navigationService;
    private readonly dataService;
    private readonly stateService;
    private readonly notificationService;
    private readonly discardModalService;
    private readonly paymentParserService;
    private readonly route;
    private cdRef;
    payment?: PaymentFormState;
    paymentReview?: PaymentReview;
    private readonly paymentConfirm$;
    private readonly componentDestroyed$;
    frequencies?: Frequency[];
    dismissTimeoutValue: number | undefined;
    accountNumberMasked?: boolean;
    paymentError: boolean;
    hasDateError: boolean;
    frequencyLabel?: string;
    private editMode;
    notificationMessageTemplate: TemplateRef<any> | string;
    notificationHeaderTemplate: TemplateRef<any> | string;
    failAlert: ElementRef;
    /** @internal */
    constructor(navigationService: PayBillsNavigationService, dataService: BillpayPaymentDataService, stateService: PayBillsStateService, notificationService: NotificationService, discardModalService: BillpayDiscardChangesModalService, paymentParserService: BillpayPaymentParserService, route: ActivatedRoute, cdRef: ChangeDetectorRef);
    get isDiscardModalOpen(): boolean;
    private get dismissTimeout();
    ngOnInit(): void;
    ngOnDestroy(): void;
    onWindowUnload($event: BeforeUnloadEvent): void;
    onEdit(): void;
    navigateToPayments(): void;
    cancel(): void;
    confirmPayment(payment?: PaymentFormState): void;
    openModal(): Observable<boolean>;
    onModalResolve(isConfirmed: boolean): void;
    private onPaymentConfirm;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillpayPaymentReviewContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BillpayPaymentReviewContainerComponent, "bb-billpay-payment-review-container", never, { "frequencies": "frequencies"; "dismissTimeoutValue": "dismissTimeoutValue"; "accountNumberMasked": "accountNumberMasked"; }, {}, never, never>;
}
