import { InjectionToken } from '@angular/core';
import { AccountNumberFormat } from '@backbase/billpay-journeys-common';
import '@angular/localize/init';
import { Frequency } from '@backbase/billpay-journeys-common';
import * as i0 from "@angular/core";
export declare const PayBillsJourneyConfigurationToken: InjectionToken<PayBillsJourneyConfiguration>;
export interface PayBillsJourneyConfiguration {
    notificationDismissTime: number;
    accountNumberMasked: boolean;
    paymentDetailsTitle: string;
    paymentDefaultCurrency: string;
    multipleBillsMode: boolean;
    productNumberFormat?: AccountNumberFormat;
    frequencies: Frequency[];
}
export declare class PayBillsJourneyConfigService {
    private _config;
    constructor(config: PayBillsJourneyConfiguration);
    get defaults(): PayBillsJourneyConfiguration;
    get notificationDismissTime(): number;
    get accountNumberMasked(): boolean;
    get paymentDetailsTitle(): string;
    get paymentDefaultCurrency(): string;
    get multipleBillsMode(): boolean;
    get productNumberFormat(): AccountNumberFormat | undefined;
    get frequencies(): Frequency[];
    static ɵfac: i0.ɵɵFactoryDeclaration<PayBillsJourneyConfigService, [{ optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<PayBillsJourneyConfigService>;
}
