import { ChangeDetectionStrategy, Component } from '@angular/core';
import { BillpayDiscardChangesModalService, } from '@backbase/billpay-journeys-common';
import { BasePaymentEditReviewContainerDirective } from '../../../directives/base-payment-edit-review-container.model';
import { takeUntil } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../../services/pay-bills-state.service";
import * as i3 from "@backbase/billpay-journeys-common";
import * as i4 from "../../../services/pay-bills-navigation.service";
import * as i5 from "@backbase/ui-ang/notification";
import * as i6 from "../billpay-payment-discard-changes-modal/billpay-payment-discard-changes-modal.component";
import * as i7 from "@backbase/ui-ang/alert";
import * as i8 from "@angular/common";
import * as i9 from "@backbase/ui-ang/button";
export class BillpayPaymentRecurringEditReviewContainerComponent extends BasePaymentEditReviewContainerDirective {
    /** @internal */
    constructor(route, stateService, discardModalService, paymentParserService, routerService, dataService, notificationService, cdRef) {
        super(route, stateService, discardModalService, paymentParserService, routerService);
        this.dataService = dataService;
        this.notificationService = notificationService;
        this.cdRef = cdRef;
        this.activatedRoute = route;
    }
    navigateToForm(id) {
        var _a;
        this.routerService.navigateToEditRecurringForm(id, { relativeTo: (_a = this.activatedRoute) === null || _a === void 0 ? void 0 : _a.parent });
    }
    onPaymentConfirm(payment, id) {
        this.paymentError = false;
        this.hasDateError = false;
        this.dataService
            .updatePaymentRecurring(payment, id)
            .pipe(takeUntil(this.destroy$))
            .subscribe(() => {
            this.routerService.navigateToPayments();
            this.notificationService.showNotification({
                header: this.notificationHeaderTemplate,
                message: this.notificationMessageTemplate,
                modifier: 'success',
                ttl: this.dismissTimeout,
            });
        }, response => {
            var _a, _b;
            this.paymentError = true;
            this.hasDateError = (_b = (_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) === null || _b === void 0 ? void 0 : _b.some((a) => a.key === 'billpay.api.invalidPaymentDate');
            this.cdRef.markForCheck();
            this.failAlert.nativeElement.scrollIntoView(false);
        });
    }
}
BillpayPaymentRecurringEditReviewContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentRecurringEditReviewContainerComponent, deps: [{ token: i1.ActivatedRoute }, { token: i2.PayBillsStateService }, { token: i3.BillpayDiscardChangesModalService }, { token: i3.BillpayPaymentParserService }, { token: i4.PayBillsNavigationService }, { token: i3.BillpayPaymentDataService }, { token: i5.NotificationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
BillpayPaymentRecurringEditReviewContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentRecurringEditReviewContainerComponent, selector: "bb-billpay-payment-recurring-edit-review-container", providers: [BillpayDiscardChangesModalService], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"payment\">\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block--xl\">\n        <ng-container *ngTemplateOutlet=\"recurringEditReviewContent\"></ng-container>\n      </div>\n\n      <ng-container *ngTemplateOutlet=\"recurringEditReviewButtons\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-edit-form-page-lose-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Lose changes?\"\n  i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n  i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n  confirm-button-label=\"Lose changes\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue editing\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n\n<ng-template #recurringEditReviewContent let-payment>\n  <div #failAlert>\n    <bb-alert-ui\n      title=\"Failed to submit payment. Please try again later.\"\n      i18n-title=\"Failed to submit payment|Title for payment error@@billpay-payment-review-container.error-alert\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-message\"\n      *ngIf=\"paymentError && !hasDateError\"\n    >\n    </bb-alert-ui>\n    <bb-alert-ui\n      title=\"The date selected is invalid.\"\n      i18n-title=\"\n        Failed to submit payment date|Title for payment date error@@billpay-payment-review-container.error-date-alert\"\n      message=\"The payment cannot be scheduled on this date. Please select another date in the previous step.\"\n      i18n-message=\"Date payment error|Date error for payment@@billpay-payment-review.date-error-alert.message\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-date-message\"\n      *ngIf=\"paymentError && hasDateError\"\n    >\n    </bb-alert-ui>\n  </div>\n  <bb-billpay-payment-review-card [accountNumberMask]=\"accountNumberMasked\" [paymentReview]=\"paymentReview\">\n  </bb-billpay-payment-review-card>\n</ng-template>\n\n<ng-template #recurringEditReviewButtons>\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"confirm-payment-button\"\n      i18n=\"\n        Payment details confirm button|Label for confirm payment recurring\n        button@@billpay-payment-recurring-review.confirm\"\n      (click)=\"confirmPayment(payment)\"\n      class=\"bb-button-bar__button\"\n    >\n      Confirm payment\n    </button>\n    <button\n      *ngIf=\"id$ | async as paymentId\"\n      bbButton\n      data-role=\"edit-payment-button\"\n      i18n=\"\n        Payment details edit button|Label for edit payment payment recurring\n        button@@billpay-payment-recurring-review.edit\"\n      (click)=\"navigateToForm(paymentId)\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n    >\n      Edit payment\n    </button>\n    <button\n      bbButton\n      data-role=\"cancel-payment-button\"\n      i18n=\"\n        Payment details cancel button|Label for cancel payment payment recurring\n        button@@billpay-payment-recurring-review.cancel\"\n      (click)=\"cancel()\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n    >\n      Cancel\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationMessage>\n  <ng-container *ngIf=\"payment?.payeeTo as payee\">\n    <span\n      i18n=\"\n        payment notification message|Payment confirmation success notification\n        message@@billpay-payment-recurring-review.confirm.notification.message\"\n      >Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }} has been edited\n      successfully</span\n    >\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      payment notification header|Payment confirmation success notification\n      header@@billpay-payment-recurring-review.confirm.notification.header\"\n    >Payment edited</span\n  >\n</ng-template>\n", components: [{ type: i6.BillpayPaymentDiscardChangesModalComponent, selector: "bb-billpay-payment-discard-changes-modal", inputs: ["title", "subtitle", "confirm-button-label", "cancel-button-label"], outputs: ["resolve"] }, { type: i7.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i3.BillpayPaymentReviewCardComponent, selector: "bb-billpay-payment-review-card", inputs: ["paymentReview", "accountNumberMask", "frequencyLabel"] }], directives: [{ type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i8.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i9.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i8.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentRecurringEditReviewContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-payment-recurring-edit-review-container',
                    templateUrl: './billpay-payment-recurring-edit-review-container.component.html',
                    providers: [BillpayDiscardChangesModalService],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.PayBillsStateService }, { type: i3.BillpayDiscardChangesModalService }, { type: i3.BillpayPaymentParserService }, { type: i4.PayBillsNavigationService }, { type: i3.BillpayPaymentDataService }, { type: i5.NotificationService }, { type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,