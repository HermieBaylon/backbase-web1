import { Component, Input } from '@angular/core';
import { BillpayUtilityService as Utility } from '@backbase/billpay-journeys-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/alert";
import * as i2 from "@backbase/ui-ang/input-radio-group";
import * as i3 from "@backbase/ui-ang/amount";
import * as i4 from "@backbase/ui-ang/amount-input";
import * as i5 from "@backbase/ui-ang/input-validation-message";
import * as i6 from "@angular/forms";
import * as i7 from "@angular/common";
import * as i8 from "@backbase/ui-ang/date-pipe";
export class BillpayEbillPaymentUIComponent {
    constructor() {
        /**
         * Mark the form as submitted, controls validation elements. Defaults to false.
         */
        this.isSubmitted = false;
        /**
         * get the payment default currency preference. default to 'USD'.
         */
        this.eBillDefaultCurrency = 'USD';
        /**
         * unique key used for ids
         */
        this.id = Utility.generateId();
    }
    ngOnInit() {
        this.customValue = {
            amount: '',
            currency: this.eBillDefaultCurrency,
            type: undefined,
        };
    }
    setAmount(type) {
        this.customValue.type = type;
        if (type === 'Custom') {
            this.setCustomAmount(this.customValue.amount);
        }
        else {
            const currency = this.getAmount(type);
            if (currency) {
                this.setValue({
                    amount: currency.amount,
                    currency: currency.currencyCode,
                    type: type,
                });
            }
        }
    }
    setCustomAmount(ev) {
        this.customValue.amount = ev;
        this.setValue(Object.assign(Object.assign({}, this.customValue), { type: 'Custom' }));
    }
    get showBalance() {
        return !!(this.latestBill && this.isDifferentAndNonZero(this.latestBill.outstandingBalance, this.latestBill.amount));
    }
    get showMinumum() {
        return !!(this.latestBill && this.isDifferentAndNonZero(this.latestBill.minAmountDue, this.latestBill.amount));
    }
    isDifferentAndNonZero(otherEbillAmount, ebillAmount) {
        return !!(otherEbillAmount &&
            ebillAmount &&
            otherEbillAmount.amount !== ebillAmount.amount &&
            0 !== +otherEbillAmount.amount);
    }
    setValue(newValue) {
        if (this.control) {
            this.control.setValue(newValue);
        }
    }
    getAmount(value) {
        switch (value) {
            case 'Minimum':
                return this.latestBill && this.latestBill.minAmountDue;
            case 'Balance':
                return this.latestBill && this.latestBill.outstandingBalance;
            case 'Due':
            default:
                return this.latestBill && this.latestBill.amount;
        }
    }
}
BillpayEbillPaymentUIComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayEbillPaymentUIComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BillpayEbillPaymentUIComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayEbillPaymentUIComponent, selector: "bb-billpay-ebill-payment", inputs: { latestBill: "latestBill", control: "control", isSubmitted: "isSubmitted", eBillDefaultCurrency: "eBillDefaultCurrency" }, ngImport: i0, template: "<bb-alert-ui modifier=\"info\" title=\"\">\n  <span\n    data-role=\"ebill-info-alert\"\n    class=\"bb-text-bold\"\n    i18n=\"eBill payment alert|Alert for eBill information@@billpay.bb-payment-ebill.alert\"\n  >\n    eBill due on {{ latestBill?.paymentDate | bbDate: 'fullDate' }}.\n  </span>\n</bb-alert-ui>\n\n<bb-input-radio-group-ui\n  data-role=\"ebill-payment-group\"\n  [required]=\"true\"\n  [ngModel]=\"control?.value?.type\"\n  (ngModelChange)=\"setAmount($event)\"\n  [preselect]=\"false\"\n>\n  <bb-input-radio-ui value=\"Due\" [labelTemplate]=\"ebillPaymentDueLabelTemplate\">\n    <ng-template #ebillPaymentDueLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-due-message\">\n          <div\n            i18n=\"\n              eBill due amount radio label|Label for the radio button for selecting the eBill due\n              amount@@bb-billpay-payment-ebill.radio.due-amount\"\n          >\n            eBill amount due\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill due amount radio description|Description for the radio button for selecting the eBill due\n              amount@@bb-billpay-payment-ebill.radio.due-amount.description\"\n          >\n            Amount due on the latest billing cycle\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-due-message-amount\"\n            [amount]=\"latestBill?.amount?.amount\"\n            [currency]=\"latestBill?.amount?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Balance\" *ngIf=\"showBalance\" [labelTemplate]=\"ebillPaymentBalanceLabelTemplate\">\n    <ng-template #ebillPaymentBalanceLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-balance-message\">\n          <div\n            i18n=\"\n              eBill outstanding balance amount radio label|Label for the radio button for selecting the eBill\n              outstanding balance amount@@bb-billpay-payment-ebill.radio.outstanding-balance-amount\"\n          >\n            Total payee balance\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill total amount radio description|Description for the radio button for selecting the eBill total\n              amount@@bb-billpay-payment-ebill.radio.total-amount.description\"\n          >\n            Total amount owed\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-balance-message-amount\"\n            [amount]=\"latestBill?.outstandingBalance?.amount\"\n            [currency]=\"latestBill?.outstandingBalance?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Minimum\" *ngIf=\"showMinumum\" [labelTemplate]=\"ebillPaymentMinimumLabelTemplate\">\n    <ng-template #ebillPaymentMinimumLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-minimum-message\">\n          <div\n            i18n=\"\n              eBill minimum amount radio label|Label for the radio button for selecting the eBill minimum\n              amount@@bb-billpay-payment-ebill.radio.minimum-amount\"\n          >\n            eBill minimum payment\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill minimum amount radio description|Description for the radio button for selecting the eBill minimum\n              amount@@bb-billpay-payment-ebill.radio.minimum-amount.description\"\n          >\n            5% of the total balance\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-minimum-message-amount\"\n            [amount]=\"latestBill?.minAmountDue?.amount\"\n            [currency]=\"latestBill?.minAmountDue?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Custom\" [labelTemplate]=\"ebillPaymentOtherLabelTemplate\">\n    <ng-template #ebillPaymentOtherLabelTemplate>\n      <div class=\"pl-2 bb-form-field bb-form-field--md\">\n        <div\n          data-role=\"ebill-custom-message\"\n          i18n=\"\n            eBill other amount radio label|Label for the radio button for selecting an eBill other\n            amount@@bb-billpay-payment-ebill.radio.other-amount\"\n        >\n          Other amount\n        </div>\n        <span\n          class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n          i18n=\"\n            eBill other amount radio description|Description for the radio button for selecting the eBill other\n            amount@@bb-billpay-payment-ebill.radio.other-amount.description\"\n        >\n          Enter amount manually\n        </span>\n        <ng-container *ngIf=\"control?.value?.type === 'Custom'\">\n          <div class=\"position-relative\" [class.was-validated]=\"touched && !customValue?.amount\">\n            <bb-amount-input-ui\n              data-role=\"ebill-amount-input\"\n              [ngModel]=\"control?.value?.amount\"\n              (ngModelChange)=\"setCustomAmount($event)\"\n              (focusout)=\"touched = true\"\n              [autoDecimal]=\"true\"\n              wrapperClasses=\"bb-amount-input__field--large\"\n              [currency]=\"latestBill?.amount?.currencyCode\"\n              [required]=\"true\"\n              [aria-describedby]=\"'compact-amount-error-message' + id\"\n              [placeholder]=\"'0.00'\"\n            ></bb-amount-input-ui>\n          </div>\n          <bb-input-validation-message-ui\n            id=\"{{ 'compact-amount-error-message' + id }}\"\n            [showErrors]=\"touched && !customValue?.amount\"\n          >\n            <span> Field is required. </span>\n          </bb-input-validation-message-ui>\n        </ng-container>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n</bb-input-radio-group-ui>\n\n<bb-input-validation-message-ui role=\"alert\" [showErrors]=\"isSubmitted && control?.invalid\">\n  <p\n    *ngIf=\"!control?.errors?.amountInvalid\"\n    i18n=\"Payment amount cannot be zero|Error zero amount@@bb-billpay-payment-form.error.amount\"\n    data-role=\"invalid-amount\"\n  >\n    Payment amount cannot be zero.\n  </p>\n</bb-input-validation-message-ui>\n", components: [{ type: i1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i2.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i2.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }, { type: i3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i4.AmountInputComponent, selector: "bb-amount-input-ui", inputs: ["placeholder", "maxLength", "wrapperClasses", "mapCurrency", "currency", "autoDecimal"] }, { type: i5.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i6.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "bbDate": i8.BbDatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayEbillPaymentUIComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-ebill-payment',
                    templateUrl: './billpay-ebill-payment-ui.component.html',
                }]
        }], propDecorators: { latestBill: [{
                type: Input
            }], control: [{
                type: Input
            }], isSubmitted: [{
                type: Input
            }], eBillDefaultCurrency: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,