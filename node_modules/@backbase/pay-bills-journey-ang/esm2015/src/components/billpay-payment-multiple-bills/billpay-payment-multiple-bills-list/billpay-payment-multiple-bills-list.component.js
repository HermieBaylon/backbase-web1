import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { BillpayUtilityService as Utility } from '@backbase/billpay-journeys-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "../billpay-payment-multiple-bills-list-item/billpay-payment-multiple-bills-list-item.component";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
import * as i5 from "@backbase/ui-ang/button";
import * as i6 from "@backbase/ui-ang/tooltip-directive";
export class BillpayPaymentMultipleBillsListComponent {
    constructor() {
        this._payeeSummaries = [];
        this.isForEbills = false;
        this.id = Utility.generateId();
        /**
         * Indicates the way payees are sorted in the list
         */
        this.ascendingList = true;
    }
    set payeeSummaries(value) {
        this._payeeSummaries = this.sortByDueDate(value);
    }
    get payeeSummaries() {
        return this._payeeSummaries;
    }
    /**
     * Sorting payee summaries by due date. Initial view display ascending list(earliest date first)
     */
    sortByDueDate(payeeSummaries = this.payeeSummaries) {
        const payeeWithoutDate = payeeSummaries.filter(payee => { var _a, _b; return !((_b = (_a = payee.ebill) === null || _a === void 0 ? void 0 : _a.latestBill) === null || _b === void 0 ? void 0 : _b.paymentDate); });
        const payeeWithDate = payeeSummaries
            .filter(payee => { var _a, _b; return !!((_b = (_a = payee.ebill) === null || _a === void 0 ? void 0 : _a.latestBill) === null || _b === void 0 ? void 0 : _b.paymentDate); })
            .sort((payee1, payee2) => {
            var _a, _b, _c, _d;
            const date1 = new Date(((_b = (_a = payee1.ebill) === null || _a === void 0 ? void 0 : _a.latestBill) === null || _b === void 0 ? void 0 : _b.paymentDate) || '').getTime();
            const date2 = new Date(((_d = (_c = payee2.ebill) === null || _c === void 0 ? void 0 : _c.latestBill) === null || _d === void 0 ? void 0 : _d.paymentDate) || '').getTime();
            return this.ascendingList ? date1 - date2 : date2 - date1;
        });
        return [...payeeWithDate, ...payeeWithoutDate];
    }
    /**
     * Set sorted payees
     */
    onSortClick() {
        this.ascendingList = !this.ascendingList;
        this.payeeSummaries = this.sortByDueDate();
    }
    /**
     * Set sorted payees
     */
    trackByFunction(_index, payee) {
        var _a, _b;
        return (_b = (_a = payee.ebill) === null || _a === void 0 ? void 0 : _a.latestBill) === null || _b === void 0 ? void 0 : _b.paymentDate;
    }
}
BillpayPaymentMultipleBillsListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentMultipleBillsListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BillpayPaymentMultipleBillsListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentMultipleBillsListComponent, selector: "bb-billpay-payment-multiple-bills-list", inputs: { payeeSummaries: "payeeSummaries", paymentsFormGroup: "paymentsFormGroup", accounts: "accounts", isForEbills: "isForEbills" }, ngImport: i0, template: "<form [formGroup]=\"paymentsFormGroup\" class=\"bb-billpay-multiple-bills-form\">\n  <div class=\"bb-d-none bb-d-lg-block bb-billpay-multiple-bills-form__titles\">\n    <div class=\"bb-billpay-multiple-bills__grid-container bb-stack\">\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.payee\"\n          data-role=\"multiple-bills-list-titles-payee\"\n          >Payee</span\n        >\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-text-align-center\">\n        <div class=\"bb-inline-stack\" *ngIf=\"isForEbills\" data-role=\"multiple-bills-list-titles-due-date-label\">\n          <span\n            class=\"bb-subtitle bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n            i18n=\"@@bb-billpay-multiple-bills-list.titles.due-date\"\n            >Due Date</span\n          >\n          <button bbButton color=\"unstyled\" (click)=\"onSortClick()\" aria-label=\"Sort by due date ascending\">\n            <bb-icon-ui name=\"{{ ascendingList ? 'caret-down' : 'caret-up' }}\" size=\"xs\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-sm bb-text-align-right\">\n        <span\n          *ngIf=\"isForEbills\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.amount-due\"\n          data-role=\"multiple-bills-list-titles-amount-due\"\n          >Amount Due</span\n        >\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.delivery-date\"\n          data-role=\"multiple-bills-list-titles-delivery-date\"\n          >Est. Delivery\n        </span>\n        <span\n          bbTooltip=\"The date we expect your payment to reach the payee. That may vary from payee to payee.\"\n          placement=\"top\"\n          [triggers]=\"'hover'\"\n          i18n=\"@@bb-billpay-multiple-bills-list.delivery-date.label.tooltip\"\n          class=\"bb-stack__item bb-d-flex\"\n          id=\"multiple-payments-start-date-tooltip-{{ id }}\"\n        >\n          <bb-icon-ui name=\"info\" size=\"sm\" class=\"bb-billpay-multiple-bills__tooltip\"></bb-icon-ui>\n        </span>\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.amount\"\n          id=\"multiple-payments-amount-label-{{ id }}\"\n          data-role=\"multiple-bills-list-titles-amount\"\n          >Amount</span\n        >\n      </div>\n    </div>\n  </div>\n  <bb-billpay-multiple-bills-list-item\n    *ngFor=\"let payeeSummary of payeeSummaries; trackBy: trackByFunction\"\n    [payeeSummary]=\"payeeSummary\"\n    [paymentForm]=\"paymentsFormGroup?.controls[payeeSummary.id]\"\n    [accounts]=\"accounts\"\n    [inheritedId]=\"id\"\n    class=\"bb-billpay-multiple-bills-list-item\"\n  ></bb-billpay-multiple-bills-list-item>\n</form>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.BillpayPaymentMultipleBillsListItemComponent, selector: "bb-billpay-multiple-bills-list-item", inputs: ["payeeSummary", "paymentForm", "accounts", "inheritedId"] }], directives: [{ type: i3.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i3.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i6.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentMultipleBillsListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-payment-multiple-bills-list',
                    templateUrl: './billpay-payment-multiple-bills-list.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { payeeSummaries: [{
                type: Input
            }], paymentsFormGroup: [{
                type: Input
            }], accounts: [{
                type: Input
            }], isForEbills: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,