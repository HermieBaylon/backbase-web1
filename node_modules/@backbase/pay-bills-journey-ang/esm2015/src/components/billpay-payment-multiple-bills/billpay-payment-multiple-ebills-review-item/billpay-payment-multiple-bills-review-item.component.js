import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { BillpayUtilityService as Utility, } from '@backbase/billpay-journeys-common';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/billpay-journeys-common";
import * as i2 from "../../../services/pay-bills-journey-config.service";
import * as i3 from "@backbase/ui-ang/icon";
import * as i4 from "@backbase/ui-ang/amount";
import * as i5 from "@angular/common";
import * as i6 from "@backbase/ui-ang/button";
import * as i7 from "@ng-bootstrap/ng-bootstrap";
import * as i8 from "@backbase/ui-ang/date-pipe";
export class BillpayPaymentMultipleBillsReviewItemComponent {
    constructor(scheduleService, configservice) {
        this.scheduleService = scheduleService;
        this.configservice = configservice;
        this.isCollapsed = true;
        this.id = Utility.generateId();
    }
    get endDate() {
        var _a;
        const { startDate, repeat, frequency } = ((_a = this.payment) === null || _a === void 0 ? void 0 : _a.schedule) || {};
        const date = startDate || new Date().toISOString();
        return this.scheduleService.estimatedEndDate(date, frequency, repeat);
    }
    get frequencyLabel() {
        const frequency = this.configservice.frequencies.find(frequency => { var _a; return ((_a = this.payment) === null || _a === void 0 ? void 0 : _a.schedule.frequency) === frequency.value; });
        return $localize `:@@pay-bill-journey.review-item.frequency-label:${(frequency === null || frequency === void 0 ? void 0 : frequency.name) || ''}`;
    }
}
BillpayPaymentMultipleBillsReviewItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentMultipleBillsReviewItemComponent, deps: [{ token: i1.BillpayPaymentScheduleService }, { token: i2.PayBillsJourneyConfigService }], target: i0.ɵɵFactoryTarget.Component });
BillpayPaymentMultipleBillsReviewItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentMultipleBillsReviewItemComponent, selector: "[bb-billpay-payment-multiple-bills-review-item]", inputs: { payment: "payment", last: "last" }, ngImport: i0, template: "<tr class=\"billpay-multipl-ebills-review__tr\" [class.billpay-multipl-ebills-review__item--expanded]=\"!isCollapsed\">\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-block bb-d-md-table-cell\">\n    <ng-container *ngIf=\"payment?.hasOwnProperty('succeeded'); else payeeTmp\">\n      <div class=\"bb-stack\">\n        <bb-icon-ui\n          class=\"bb-stack__item bb-stack__item--spacing-md\"\n          [name]=\"payment?.succeeded ? 'success' : 'error-outline'\"\n          size=\"md\"\n          [color]=\"payment?.succeeded ? 'success' : 'danger'\"\n        ></bb-icon-ui>\n        <div class=\"bb-stack__item\">\n          <ng-container *ngTemplateOutlet=\"payeeNameTmp\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    {{ payment?.accountFrom.accountNickName }} (*{{ payment?.accountFrom.accountNumber | slice: -4 }})\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    {{ payment?.schedule?.startDate | bbDate: 'MM/dd/yyyy' }}\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    <ng-container *ngTemplateOutlet=\"amountTmp; context: payment\"></ng-container>\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-text-align-right\">\n    <button\n      bbButton\n      class=\"billpay-multipl-ebills-review__toggler\"\n      buttonSize=\"sm\"\n      color=\"text-link\"\n      [circle]=\"true\"\n      aria-label=\"dropdown-button\"\n      data-role=\"multipl-ebills-review-toggler\"\n      (click)=\"isCollapsed = !isCollapsed\"\n      [attr.aria-expanded]=\"!isCollapsed\"\n      [attr.aria-controls]=\"'collapse' + id\"\n    >\n      <bb-icon-ui\n        class=\"bb-stack__item\"\n        [name]=\"isCollapsed ? 'toggle-down' : 'toggle-up'\"\n        size=\"md\"\n        data-role=\"toggle-icon\"\n      ></bb-icon-ui>\n    </button>\n  </td>\n</tr>\n<tr *ngIf=\"payment?.hasOwnProperty('succeeded')\" class=\"billpay-multipl-ebills-review__tr\">\n  <td *ngIf=\"!payment?.succeeded\" colspan=\"5\" class=\"billpay-multipl-ebills-review__cell\">\n    <span class=\"bb-text-danger\" i18n=\"@@bb-billpay-multiple-bills-review.mixed-results.fail-message\"\n      >The payment of this bill could not be scheduled.</span\n    >\n  </td>\n</tr>\n<!-- Mobile screen view -->\n<tr class=\"bb-d-md-none billpay-multipl-ebills-review__tr\">\n  <td colspan=\"2\" class=\"billpay-multipl-ebills-review__cell\">\n    <ng-container *ngTemplateOutlet=\"amountTmp; context: payment\"></ng-container>\n  </td>\n</tr>\n<!-- Extra fields -->\n<tr data-role=\"multipl-ebills-extended-fields\" class=\"billpay-multipl-ebills-review__tr\">\n  <td colspan=\"5\">\n    <div [id]=\"'collapse' + id\" [ngbCollapse]=\"isCollapsed\">\n      <div class=\"billpay-multipl-ebills-review__cell\">\n        <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\" *ngIf=\"payment?.memo\">\n          <bb-icon-ui\n            name=\"subject\"\n            size=\"sm\"\n            color=\"secondary\"\n            class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n          ></bb-icon-ui>\n          <div class=\"bb-stack__item\">\n            <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n              <span i18n=\"@@bb-billpay-multiple-bills-review.memo\">Memo</span>\n            </div>\n            <div class=\"break-word bb-subtitle bb-text-support\" data-role=\"payment-description\">\n              {{ payment?.memo }}\n            </div>\n          </div>\n        </div>\n        <ng-container *ngIf=\"payment?.schedule as schedule\">\n          <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n            <bb-icon-ui\n              name=\"cached\"\n              size=\"sm\"\n              color=\"secondary\"\n              class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n            ></bb-icon-ui>\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n                <span\n                  i18n=\"\n                    Payment details frequency|Label for frequency in details\n                    group@@billpay-multiple-bills-review.details.frequency-label\"\n                  >Frequency</span\n                >\n              </div>\n              <div data-role=\"payment-frequency\">\n                {{ frequencyLabel }}\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"schedule.frequency === 'ONCE'\">\n            <ng-container *ngIf=\"payment?.overnightDeliveryAddress as address\">\n              <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n                <bb-icon-ui\n                  name=\"subject\"\n                  size=\"sm\"\n                  color=\"secondary\"\n                  class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n                ></bb-icon-ui>\n                <div class=\"bb-stack__item\">\n                  <div\n                    data-role=\"overnight-address-label\"\n                    i18n=\"\n                      Payment overnight address|Label for overnight\n                      address@@billpay-payment-review-card.details.overnight-address.label\"\n                    class=\"bb-text-bold\"\n                  >\n                    Overnight check address\n                  </div>\n                  <div data-role=\"overnight-address\" class=\"bb-block bb-block--md\">\n                    <div>{{ address.address1 }}</div>\n                    <div *ngIf=\"address.address2\">{{ address.address2 }}</div>\n                    <div>{{ address.city }}&nbsp;{{ address.state }}&nbsp;{{ address.postalCode }}</div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n\n          <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n            <bb-icon-ui\n              name=\"today\"\n              size=\"sm\"\n              color=\"secondary\"\n              class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n            ></bb-icon-ui>\n            <div class=\"bb-stack__item\">\n              <div\n                i18n=\"\n                  Payment details deliver by|Label for deliver by in details\n                  group@@billpay-payment-review-card.details.amount.other\"\n                class=\"bb-text-bold\"\n                data-role=\"deliver-by\"\n              >\n                { schedule.frequency, select, ONCE {Deliver payment by } other {Deliver first payment by } }\n              </div>\n              <div data-role=\"deliver-date\">\n                {{ schedule.startDate | date: 'mediumDate' }}\n              </div>\n            </div>\n          </div>\n\n          <ng-container *ngIf=\"schedule.frequency !== 'ONCE'\">\n            <!-- EndDate -->\n            <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n              <bb-icon-ui\n                name=\"today\"\n                size=\"sm\"\n                color=\"secondary\"\n                class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n              ></bb-icon-ui>\n              <div class=\"bb-stack__item\">\n                <div\n                  i18n=\"\n                    Payment details ending|Label for ending in details\n                    group@@billpay-payment-review-card.details.ending-label\"\n                  class=\"bb-text-bold\"\n                  data-role=\"ending-label\"\n                >\n                  Ending\n                </div>\n                <div data-role=\"ending\">\n                  <span\n                    *ngIf=\"schedule?.repeat; else neverEndingTmp\"\n                    i18n=\"\n                      Payment details ending|Label for ending in details\n                      group@@billpay-payment-review-card.details.ending\"\n                    >After { schedule.repeat, plural, =1 {{{schedule.repeat}} payment } other\n                    {{{schedule.repeat}} payments } } (estimated {{ endDate | date: 'mediumDate' }})\n                  </span>\n                  <ng-template #neverEndingTmp>\n                    <span\n                      i18n=\"\n                        Payment details ending|Label for never ending\n                        payment@@billpay-payment-review-card.details.ending.never\"\n                      >Never\n                    </span>\n                  </ng-template>\n                </div>\n              </div>\n            </div>\n\n            <!-- Notify section -->\n            <ng-container\n              *ngIf=\"\n                schedule?.alertPendingCheckbox || schedule?.alertSentCheckbox || schedule?.alertLastPendingCheckbox\n              \"\n            >\n              <div\n                i18n=\"\n                  Payment details notify me|Label for notify me in details\n                  group@@billpay-payment-review-card.details.notify\"\n                class=\"bb-text-bold\"\n                data-role=\"notify-label\"\n              >\n                Notify me\n              </div>\n              <div>\n                <ul>\n                  <li\n                    *ngIf=\"schedule?.alertPendingCheckbox\"\n                    i18n=\"\n                      Payment details when a payment is pending|Label for when a payment is pending in details\n                      group@@billpay-payment-review-card.details.notify.pending\"\n                    data-role=\"alertPendingCheckbox\"\n                  >\n                    When a payment is pending\n                  </li>\n                  <li\n                    *ngIf=\"schedule?.alertSentCheckbox\"\n                    i18n=\"\n                      Payment details when a payment has been sent|Label for when a payment has been sent in details\n                      group@@billpay-payment-review-card.details.notify.sent\"\n                    data-role=\"alertSentCheckbox\"\n                  >\n                    When a payment has been sent\n                  </li>\n                  <li\n                    *ngIf=\"schedule?.alertLastPendingCheckbox\"\n                    i18n=\"\n                      Payment details when the last payment is pending|Label for when the last payment is pending in\n                      details group@@billpay-payment-review-card.details.notify.pending.last\"\n                    data-role=\"alertLastPendingCheckbox\"\n                  >\n                    When the last payment is pending\n                  </li>\n                </ul>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </td>\n</tr>\n<tr class=\"billpay-multipl-ebills-review__tr billpay-multipl-ebills-review__tr--last\" aria-hidden=\"true\">\n  <td colspan=\"5\"></td>\n</tr>\n<tr class=\"billpay-multipl-ebills-review__seperator\" aria-hidden=\"true\" *ngIf=\"!last\"></tr>\n<!-- Payee -->\n<ng-template #payeeTmp>\n  <ng-container\n    *ngIf=\"\n      payment?.payeeTo?.ebill?.enabled &&\n        payment?.payeeTo?.ebill?.latestBill?.status !== 'PAID' &&\n        payment?.payeeTo?.ebill?.latestBill?.paymentDate;\n      else payeeNameTmp\n    \"\n  >\n    <label class=\"bb-block bb-block--no-margin\">{{ payment?.payeeTo?.nickName || payment?.payeeTo?.name }}</label>\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n        data-role=\"receipt-icon\"\n        size=\"sm\"\n        name=\"receipt\"\n        color=\"secondary\"\n      ></bb-icon-ui>\n      <span\n        class=\"bb-stack__item bb-subtitle bb-text-support\"\n        data-role=\"due-date-label\"\n        *ngIf=\"payment?.payeeTo?.ebill?.latestBill?.paymentDate as ebillPaymentDate\"\n      >\n        <bb-amount-ui\n          *ngIf=\"payment?.payeeTo?.ebill?.latestBill?.minAmountDue as minAmountDue\"\n          [currency]=\"minAmountDue?.currency\"\n          [amount]=\"minAmountDue?.amount\"\n        ></bb-amount-ui>\n        <span\n          i18n=\"\n            Ebill due note|Text for the information about the due eBill@@bb-billpay-multiple-bills-review.note.ebill-due\"\n        >\n          due on</span\n        >\n        {{ ebillPaymentDate | bbDate: 'MMM d' }}\n      </span>\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #payeeNameTmp>\n  <label class=\"bb-label\">{{ payment?.payeeTo?.nickName || payment?.payeeTo?.name }}</label>\n</ng-template>\n<!-- Amount -->\n<ng-template #amountTmp let-amount=\"amount\">\n  <bb-amount-ui class=\"bb-text-semi-bold\" [currency]=\"amount.currency\" [amount]=\"amount.amount\"> </bb-amount-ui>\n</ng-template>\n", components: [{ type: i3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i4.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i6.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i7.NgbCollapse, selector: "[ngbCollapse]", inputs: ["ngbCollapse", "animation"], outputs: ["ngbCollapseChange", "shown", "hidden"], exportAs: ["ngbCollapse"] }], pipes: { "slice": i5.SlicePipe, "bbDate": i8.BbDatePipe, "date": i5.DatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentMultipleBillsReviewItemComponent, decorators: [{
            type: Component,
            args: [{
                    // eslint-disable-next-line @angular-eslint/component-selector
                    selector: '[bb-billpay-payment-multiple-bills-review-item]',
                    templateUrl: 'billpay-payment-multiple-bills-review-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.BillpayPaymentScheduleService }, { type: i2.PayBillsJourneyConfigService }]; }, propDecorators: { payment: [{
                type: Input
            }], last: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,