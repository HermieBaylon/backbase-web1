import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/product-selector";
import * as i2 from "@backbase/ui-ang/ellipsis";
import * as i3 from "@backbase/ui-ang/amount";
import * as i4 from "@angular/common";
import * as i5 from "@backbase/ui-ang/button";
import * as i6 from "@backbase/ui-ang/payment-card-number-pipe";
export class BillpayPaymentCompactProductSelectorComponent {
    constructor() {
        this.selectItem = new EventEmitter();
    }
    onSelectItem(account) {
        this.selectItem.emit(account);
    }
}
BillpayPaymentCompactProductSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentCompactProductSelectorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BillpayPaymentCompactProductSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentCompactProductSelectorComponent, selector: "bb-billpay-payment-compact-product-selector", inputs: { paymentForm: "paymentForm", accounts: "accounts", productNumberFormat: "productNumberFormat" }, outputs: { selectItem: "selectItem" }, ngImport: i0, template: "<div class=\"bb-form-field bb-form-field--md\">\n  <label\n    i18n=\"@@bb-billpay-multiple-bills-list-item.product-selector.label\"\n    data-role=\"multiple-bills-form-from-account-label\"\n    >Pay From</label\n  >\n  <bb-product-selector-ui [autoClose]=\"true\" *ngIf=\"paymentForm?.get('accountFrom')?.value as selectedAccount\">\n    <ng-container bbDropdownToggle>\n      <ng-container *ngTemplateOutlet=\"productItemContent; context: { $implicit: selectedAccount }\"></ng-container>\n    </ng-container>\n    <ng-container bbDropdownMenu>\n      <ng-container *ngIf=\"accounts?.length\">\n        <button\n          *ngFor=\"let account of accounts\"\n          (click)=\"onSelectItem(account)\"\n          bbButton\n          color=\"unstyled\"\n          class=\"bb-product-selector__dropdown-item bb-billpay-multiple-bills-selector\"\n          data-role=\"product-selector-dropdown-item\"\n          [ngClass]=\"{\n            'bb-billpay-multiple-bills-selector--selected-bg': account.accountNumber === selectedAccount?.accountNumber\n          }\"\n        >\n          <ng-container *ngTemplateOutlet=\"productItemContent; context: { $implicit: account }\"></ng-container>\n        </button>\n      </ng-container>\n    </ng-container>\n  </bb-product-selector-ui>\n</div>\n\n<ng-template #productItemContent let-account>\n  <bb-ellipsis-ui [text]=\"account?.accountNickName\" data-role=\"compact-product-selector-account-name\"></bb-ellipsis-ui>\n  <div class=\"bb-account-info bb-text-default\">\n    <bb-ellipsis-ui\n      [text]=\"account?.accountNumber | paymentCardNumber: productNumberFormat\"\n      class=\"bb-account-info__product-number\"\n      data-role=\"compact-product-selector-account-number\"\n    ></bb-ellipsis-ui>\n  </div>\n  <bb-amount-ui\n    class=\"bb-subtitle bb-text-bold\"\n    [currency]=\"account?.accountBalance?.currencyCode\"\n    [amount]=\"account?.accountBalance?.amount\"\n    [mapCurrency]=\"true\"\n    data-role=\"compact-product-selector-amount\"\n  >\n  </bb-amount-ui>\n</ng-template>\n", components: [{ type: i1.ProductSelectorComponent, selector: "bb-product-selector-ui", inputs: ["autoClose", "position", "container"] }, { type: i2.EllipsisComponent, selector: "bb-ellipsis-ui", inputs: ["text", "tooltipTriggers", "lineClamp"] }, { type: i3.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "paymentCardNumber": i6.PaymentCardNumberPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentCompactProductSelectorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-payment-compact-product-selector',
                    templateUrl: './billpay-payment-compact-product-selector.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { paymentForm: [{
                type: Input
            }], accounts: [{
                type: Input
            }], productNumberFormat: [{
                type: Input
            }], selectItem: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1wYXltZW50LWNvbXBhY3QtcHJvZHVjdC1zZWxlY3Rvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3BheS1iaWxscy1qb3VybmV5L3NyYy9jb21wb25lbnRzL2Zvcm0tY29tcG9uZW50cy9iaWxscGF5LXBheW1lbnQtY29tcGFjdC1wcm9kdWN0LXNlbGVjdG9yL2JpbGxwYXktcGF5bWVudC1jb21wYWN0LXByb2R1Y3Qtc2VsZWN0b3IuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9wYXktYmlsbHMtam91cm5leS9zcmMvY29tcG9uZW50cy9mb3JtLWNvbXBvbmVudHMvYmlsbHBheS1wYXltZW50LWNvbXBhY3QtcHJvZHVjdC1zZWxlY3Rvci9iaWxscGF5LXBheW1lbnQtY29tcGFjdC1wcm9kdWN0LXNlbGVjdG9yLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7O0FBVWhHLE1BQU0sT0FBTyw2Q0FBNkM7SUFMMUQ7UUFTWSxlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztLQUtwRDtJQUhDLFlBQVksQ0FBQyxPQUFnQjtRQUMzQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDOzsySUFSVSw2Q0FBNkM7K0hBQTdDLDZDQUE2QyxvT0NWMUQsKy9EQWdEQTs0RkR0Q2EsNkNBQTZDO2tCQUx6RCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw2Q0FBNkM7b0JBQ3ZELFdBQVcsRUFBRSwyREFBMkQ7b0JBQ3hFLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs4QkFFVSxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csbUJBQW1CO3NCQUEzQixLQUFLO2dCQUNJLFVBQVU7c0JBQW5CLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEFjY291bnROdW1iZXJGb3JtYXQgfSBmcm9tICdAYmFja2Jhc2UvYmlsbHBheS1qb3VybmV5cy1jb21tb24nO1xuaW1wb3J0IHsgQWNjb3VudCB9IGZyb20gJ0BiYWNrYmFzZS9kYXRhLWFuZy9iaWxscGF5JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItYmlsbHBheS1wYXltZW50LWNvbXBhY3QtcHJvZHVjdC1zZWxlY3RvcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9iaWxscGF5LXBheW1lbnQtY29tcGFjdC1wcm9kdWN0LXNlbGVjdG9yLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEJpbGxwYXlQYXltZW50Q29tcGFjdFByb2R1Y3RTZWxlY3RvckNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHBheW1lbnRGb3JtPzogRm9ybUdyb3VwO1xuICBASW5wdXQoKSBhY2NvdW50cz86IEFjY291bnRbXTtcbiAgQElucHV0KCkgcHJvZHVjdE51bWJlckZvcm1hdD86IEFjY291bnROdW1iZXJGb3JtYXQ7XG4gIEBPdXRwdXQoKSBzZWxlY3RJdGVtID0gbmV3IEV2ZW50RW1pdHRlcjxBY2NvdW50PigpO1xuXG4gIG9uU2VsZWN0SXRlbShhY2NvdW50OiBBY2NvdW50KSB7XG4gICAgdGhpcy5zZWxlY3RJdGVtLmVtaXQoYWNjb3VudCk7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJiYi1mb3JtLWZpZWxkIGJiLWZvcm0tZmllbGQtLW1kXCI+XG4gIDxsYWJlbFxuICAgIGkxOG49XCJAQGJiLWJpbGxwYXktbXVsdGlwbGUtYmlsbHMtbGlzdC1pdGVtLnByb2R1Y3Qtc2VsZWN0b3IubGFiZWxcIlxuICAgIGRhdGEtcm9sZT1cIm11bHRpcGxlLWJpbGxzLWZvcm0tZnJvbS1hY2NvdW50LWxhYmVsXCJcbiAgICA+UGF5IEZyb208L2xhYmVsXG4gID5cbiAgPGJiLXByb2R1Y3Qtc2VsZWN0b3ItdWkgW2F1dG9DbG9zZV09XCJ0cnVlXCIgKm5nSWY9XCJwYXltZW50Rm9ybT8uZ2V0KCdhY2NvdW50RnJvbScpPy52YWx1ZSBhcyBzZWxlY3RlZEFjY291bnRcIj5cbiAgICA8bmctY29udGFpbmVyIGJiRHJvcGRvd25Ub2dnbGU+XG4gICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwicHJvZHVjdEl0ZW1Db250ZW50OyBjb250ZXh0OiB7ICRpbXBsaWNpdDogc2VsZWN0ZWRBY2NvdW50IH1cIj48L25nLWNvbnRhaW5lcj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8bmctY29udGFpbmVyIGJiRHJvcGRvd25NZW51PlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImFjY291bnRzPy5sZW5ndGhcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICpuZ0Zvcj1cImxldCBhY2NvdW50IG9mIGFjY291bnRzXCJcbiAgICAgICAgICAoY2xpY2spPVwib25TZWxlY3RJdGVtKGFjY291bnQpXCJcbiAgICAgICAgICBiYkJ1dHRvblxuICAgICAgICAgIGNvbG9yPVwidW5zdHlsZWRcIlxuICAgICAgICAgIGNsYXNzPVwiYmItcHJvZHVjdC1zZWxlY3Rvcl9fZHJvcGRvd24taXRlbSBiYi1iaWxscGF5LW11bHRpcGxlLWJpbGxzLXNlbGVjdG9yXCJcbiAgICAgICAgICBkYXRhLXJvbGU9XCJwcm9kdWN0LXNlbGVjdG9yLWRyb3Bkb3duLWl0ZW1cIlxuICAgICAgICAgIFtuZ0NsYXNzXT1cIntcbiAgICAgICAgICAgICdiYi1iaWxscGF5LW11bHRpcGxlLWJpbGxzLXNlbGVjdG9yLS1zZWxlY3RlZC1iZyc6IGFjY291bnQuYWNjb3VudE51bWJlciA9PT0gc2VsZWN0ZWRBY2NvdW50Py5hY2NvdW50TnVtYmVyXG4gICAgICAgICAgfVwiXG4gICAgICAgID5cbiAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwicHJvZHVjdEl0ZW1Db250ZW50OyBjb250ZXh0OiB7ICRpbXBsaWNpdDogYWNjb3VudCB9XCI+PC9uZy1jb250YWluZXI+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvYmItcHJvZHVjdC1zZWxlY3Rvci11aT5cbjwvZGl2PlxuXG48bmctdGVtcGxhdGUgI3Byb2R1Y3RJdGVtQ29udGVudCBsZXQtYWNjb3VudD5cbiAgPGJiLWVsbGlwc2lzLXVpIFt0ZXh0XT1cImFjY291bnQ/LmFjY291bnROaWNrTmFtZVwiIGRhdGEtcm9sZT1cImNvbXBhY3QtcHJvZHVjdC1zZWxlY3Rvci1hY2NvdW50LW5hbWVcIj48L2JiLWVsbGlwc2lzLXVpPlxuICA8ZGl2IGNsYXNzPVwiYmItYWNjb3VudC1pbmZvIGJiLXRleHQtZGVmYXVsdFwiPlxuICAgIDxiYi1lbGxpcHNpcy11aVxuICAgICAgW3RleHRdPVwiYWNjb3VudD8uYWNjb3VudE51bWJlciB8IHBheW1lbnRDYXJkTnVtYmVyOiBwcm9kdWN0TnVtYmVyRm9ybWF0XCJcbiAgICAgIGNsYXNzPVwiYmItYWNjb3VudC1pbmZvX19wcm9kdWN0LW51bWJlclwiXG4gICAgICBkYXRhLXJvbGU9XCJjb21wYWN0LXByb2R1Y3Qtc2VsZWN0b3ItYWNjb3VudC1udW1iZXJcIlxuICAgID48L2JiLWVsbGlwc2lzLXVpPlxuICA8L2Rpdj5cbiAgPGJiLWFtb3VudC11aVxuICAgIGNsYXNzPVwiYmItc3VidGl0bGUgYmItdGV4dC1ib2xkXCJcbiAgICBbY3VycmVuY3ldPVwiYWNjb3VudD8uYWNjb3VudEJhbGFuY2U/LmN1cnJlbmN5Q29kZVwiXG4gICAgW2Ftb3VudF09XCJhY2NvdW50Py5hY2NvdW50QmFsYW5jZT8uYW1vdW50XCJcbiAgICBbbWFwQ3VycmVuY3ldPVwidHJ1ZVwiXG4gICAgZGF0YS1yb2xlPVwiY29tcGFjdC1wcm9kdWN0LXNlbGVjdG9yLWFtb3VudFwiXG4gID5cbiAgPC9iYi1hbW91bnQtdWk+XG48L25nLXRlbXBsYXRlPlxuIl19