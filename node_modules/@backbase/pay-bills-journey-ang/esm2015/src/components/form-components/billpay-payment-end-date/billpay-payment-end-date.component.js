import { Component, ChangeDetectionStrategy, Input } from '@angular/core';
import { BillpayUtilityService as Utility, EndTypes, formControlOptions, FrequencyKeys, } from '@backbase/billpay-journeys-common';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/input-radio-group";
import * as i2 from "@backbase/ui-ang/input-datepicker";
import * as i3 from "@backbase/ui-ang/input-validation-message";
import * as i4 from "@backbase/ui-ang/input-number";
import * as i5 from "@angular/forms";
import * as i6 from "@angular/common";
export class BillpayPaymentEndDateComponent {
    constructor() {
        this.endTypes = EndTypes;
        this.frequencyValues = FrequencyKeys;
        this.id = Utility.generateId();
        this.destroy$ = new Subject();
    }
    get formValue() {
        var _a;
        return (_a = this.scheduleForm) === null || _a === void 0 ? void 0 : _a.getRawValue();
    }
    ngOnInit() {
        this.processEndTypeValueChanges();
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    processEndTypeValueChanges() {
        if (!this.scheduleForm)
            return;
        const endTypeControl = this.scheduleForm.controls['endType'];
        const endDateControl = this.scheduleForm.controls['endDate'];
        const repeatControl = this.scheduleForm.controls['repeat'];
        if (endTypeControl && endDateControl && repeatControl) {
            endTypeControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {
                switch (value) {
                    case EndTypes.After: {
                        repeatControl.enable(formControlOptions);
                        endDateControl.disable(formControlOptions);
                        break;
                    }
                    case EndTypes.On: {
                        endDateControl.enable(formControlOptions);
                        repeatControl.disable(formControlOptions);
                        break;
                    }
                    case EndTypes.Never:
                    default: {
                        endDateControl.disable(formControlOptions);
                        repeatControl.disable(formControlOptions);
                        break;
                    }
                }
            });
        }
    }
}
BillpayPaymentEndDateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentEndDateComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BillpayPaymentEndDateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPaymentEndDateComponent, selector: "bb-billpay-payment-end-date", inputs: { scheduleForm: "scheduleForm" }, ngImport: i0, template: "<div class=\"bb-block bb-block--md\" [hidden]=\"formValue?.frequency == frequencyValues.Once\">\n  <label\n    id=\"billpay-end-date-label-{{ id }}\"\n    data-role=\"billpay-form-end-date-label\"\n    class=\"bb-label\"\n    i18n=\"@@billpay.billpay-payment-end-date.label.ending\"\n  >\n    End\n  </label>\n  <div class=\"bb-stack bb-stack--align-bottom\">\n    <div class=\"bb-stack__item\">\n      <bb-input-radio-group-ui\n        data-role=\"billpay-end-date-options\"\n        [required]=\"true\"\n        [aria-labelledby]=\"'billpay-end-date-label-' + id\"\n        [formControl]=\"scheduleForm?.get('endType')\"\n      >\n        <bb-input-radio-ui\n          [value]=\"endTypes.Never\"\n          label=\"Never\"\n          aria-invalid=\"false\"\n          data-role=\"ending-never-selector\"\n          i18n-label=\"\n            Schedule never ends|Label for an option to never end the payment\n            schedule@@billpay.billpay-payment-end-date.label.ending.never\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <bb-input-radio-ui\n          [value]=\"endTypes.On\"\n          aria-invalid=\"false\"\n          [labelTemplate]=\"endingTemplate\"\n          data-role=\"ending-on-selector\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <bb-input-radio-ui\n          [value]=\"endTypes.After\"\n          aria-invalid=\"false\"\n          data-role=\"ending-after-selector\"\n          [labelTemplate]=\"afterTemplate\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <ng-template #endingTemplate>\n          <div class=\"bb-stack\">\n            <span\n              data-role=\"ending-date-on-label\"\n              class=\"bb-stack__item bb-stack__item--spacing-lg\"\n              i18n=\"@@billpay.billpay-payment-end-date.label.ending.on\"\n              id=\"billpay-end-date-on-{{ id }}\"\n              >On</span\n            >\n            <div class=\"bb-stack__item\">\n              <bb-input-datepicker-ui\n                [formControl]=\"scheduleForm?.get('endDate')\"\n                data-role=\"ending-end-date\"\n                i18n-aria-label=\"@@billpay.billpay-payment-end-date.label.end-date\"\n                aria-label=\"end-date\"\n                [minDate]=\"scheduleForm?.get('startDate')?.value\"\n                placement=\"top-right\"\n                datepickerDescribedby=\"billpay-end-date-on-{{ id }}\"\n                aria-labelledby=\"billpay-end-date-on-{{ id }}\"\n              ></bb-input-datepicker-ui>\n              <bb-input-validation-message-ui\n                role=\"alert\"\n                *ngIf=\"scheduleForm?.get('endDate') as control\"\n                [showErrors]=\"control?.invalid && control?.touched\"\n              >\n                <span\n                  *ngIf=\"control.errors?.pastDate || control.errors?.dateLessThanMinDate\"\n                  i18n=\"\n                    End date past date error text |Error past date message for End date input\n                    field@@billpay.billpay-payment-end-date.past-date-error\"\n                  data-role=\"past-date-ending-end-date\"\n                >\n                  End date could not be lower than start date.\n                </span>\n                <span\n                  *ngIf=\"control.errors?.invalidDateFormat\"\n                  i18n=\"@@billpay.billpay-payment-end-date.invalid-date-format-error\"\n                  data-role=\"invalid-date-schedule-end-date\"\n                >\n                  Invalid date format.\n                </span>\n                <span\n                  *ngIf=\"control.errors?.required\"\n                  i18n=\"@@billpay.billpay-payment-end-date.date-required-error\"\n                  data-role=\"required-date-schedule-end-date\"\n                >\n                  End date is required.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </ng-template>\n        <ng-template #afterTemplate>\n          <div class=\"bb-stack\">\n            <span\n              class=\"bb-stack__item bb-stack__item--spacing-sm\"\n              i18n=\"@@billpay.billpay-payment-end-date.label.ending.after\"\n            >\n              After\n            </span>\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item bb-form-field bb-form-field--xs\">\n                  <bb-input-number-ui\n                    [formControl]=\"scheduleForm?.get('repeat')\"\n                    data-role=\"ending-occurrences\"\n                    aria-label=\"occurrences\"\n                  ></bb-input-number-ui>\n                </div>\n                <span class=\"bb-stack__item\" i18n-label=\"@@billpay.billpay-payment-end-date.label.ending.occurrences\">\n                  Occurrences\n                </span>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </bb-input-radio-group-ui>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i1.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }, { type: i2.InputDatepickerComponent, selector: "bb-input-datepicker-ui", inputs: ["rangeSelection", "rangeSelectionSplit", "clickOpen", "focusOpen", "placement", "datepickerDescribedby", "ariaLabelForButton", "minDate", "maxDate", "markDisabled", "icon", "iconSize", "iconColor", "btnColor", "ariaLabel", "navigation", "autocomplete", "firstDayOfWeek", "displayMonths", "placeholder", "overrideDateFormat"], outputs: ["focusedDate"] }, { type: i3.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i4.InputNumberComponent, selector: "bb-input-number-ui", inputs: ["placeholder", "max", "min", "step", "readonly", "autocomplete", "ariaLabel", "allowNonDigits", "allowNegativeSign"] }], directives: [{ type: i5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { type: i2.MinDateValidatorDirective, selector: "bb-input-datepicker-ui[minDate]", inputs: ["minDate"] }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPaymentEndDateComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-payment-end-date',
                    templateUrl: './billpay-payment-end-date.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { scheduleForm: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,