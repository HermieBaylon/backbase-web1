{"version":3,"file":"backbase-pay-bills-journey-ang.js","sources":["../../../../libs/pay-bills-journey/src/communication.service.ts","../../../../libs/pay-bills-journey/src/services/pay-bills-navigation.service.ts","../../../../libs/pay-bills-journey/src/pay-bills-journey.component.ts","../../../../libs/pay-bills-journey/src/pay-bills-journey.component.html","../../../../libs/pay-bills-journey/src/services/pay-bills-journey-config.service.ts","../../../../libs/pay-bills-journey/src/views/billpay-enrolment-view.component.ts","../../../../libs/pay-bills-journey/src/services/pay-bills-state.service.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-ebill-payment-ui/billpay-ebill-payment-ui.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-ebill-payment-ui/billpay-ebill-payment-ui.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/bb-schedule-label-ui/schedule-label.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/bb-schedule-label-ui/schedule-label.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/bb-schedule-ui/schedule.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/bb-schedule-ui/schedule.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-form/billpay-payment-form.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-form/billpay-payment-form.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-discard-changes-modal/billpay-payment-discard-changes-modal.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-discard-changes-modal/billpay-payment-discard-changes-modal.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-form-container/billpay-payment-form-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-form-container/billpay-payment-form-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-form-view.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-review-container/billpay-payment-review-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-review-container/billpay-payment-review-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-review-view.component.ts","../../../../libs/pay-bills-journey/src/directives/base-payment-edit-form-container.model.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-recurring-edit-form-container/billpay-payment-recurring-edit-form-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-recurring-edit-form-container/billpay-payment-recurring-edit-form-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-recurring-edit-form-view.component.ts","../../../../libs/pay-bills-journey/src/directives/base-payment-edit-review-container.model.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-recurring-edit-review-container/billpay-payment-recurring-edit-review-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-recurring-edit-review-container/billpay-payment-recurring-edit-review-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-recurring-edit-review-view.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-one-off-edit-form-container/billpay-payment-one-off-edit-form-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-one-off-edit-form-container/billpay-payment-one-off-edit-form-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-oneoff-edit-form-view.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-one-off-edit-review-container/billpay-payment-one-off-edit-review-container.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-single-bill/billpay-payment-one-off-edit-review-container/billpay-payment-one-off-edit-review-container.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-oneoff-edit-review-view.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-frequency/billpay-payment-frequency.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-frequency/billpay-payment-frequency.component.html","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-start-date/billpay-payment-start-date.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-start-date/billpay-payment-start-date.component.html","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-end-date/billpay-payment-end-date.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-end-date/billpay-payment-end-date.component.html","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-compact-product-selector/billpay-payment-compact-product-selector.component.ts","../../../../libs/pay-bills-journey/src/components/form-components/billpay-payment-compact-product-selector/billpay-payment-compact-product-selector.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list-item/billpay-payment-multiple-bills-list-item.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list-item/billpay-payment-multiple-bills-list-item.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list/billpay-payment-multiple-bills-list.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list/billpay-payment-multiple-bills-list.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-sum-board/billpay-payment-multiple-bills-sum-board.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-sum-board/billpay-payment-multiple-bills-sum-board.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-bills.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-multiple-bills-view.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-item/billpay-payment-multiple-bills-review-item.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-item/billpay-payment-multiple-bills-review-item.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-table/billpay-payment-multiple-bills-review-table.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-table/billpay-payment-multiple-bills-review-table.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-success/billpay-payment-multiple-bills-success.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-success/billpay-payment-multiple-bills-success.component.html","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review/billpay-payment-multiple-bills-review.component.ts","../../../../libs/pay-bills-journey/src/components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review/billpay-payment-multiple-bills-review.component.html","../../../../libs/pay-bills-journey/src/views/billpay-payment-multiple-bills-review-view.component.ts","../../../../libs/pay-bills-journey/src/services/billpay-manage-payment-deactivate-guard.service.ts","../../../../libs/pay-bills-journey/src/components/pay-bills-journey-ui.module.ts","../../../../libs/pay-bills-journey/src/pay-bills-journey.module.ts","../../../../libs/pay-bills-journey/backbase-pay-bills-journey-ang.ts"],"sourcesContent":["export abstract class CommunicationService {\n  abstract navigateToPaymentsList(): void;\n  abstract navigateToPayeesList(): void;\n  abstract navigateToAddPayee(): void;\n  abstract navigateToPayeeSummary(payeeID: string): void;\n  abstract navigateToEditElectronicPayee(payeeID: string): void;\n  abstract navigateToEditManualPayee(payeeID: string): void;\n  abstract navigateToPayverisEbillEnrol(payeeID: string): void;\n  abstract navigateToMainAppPage(): void;\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, ParamMap, Router } from '@angular/router';\nimport { ONE_OFF_PAYMENT, RECURRING_PAYMENT } from '@backbase/billpay-journeys-common';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\nimport { CommunicationService } from '../communication.service';\nimport { PaymentRoutePageTypeParam, PaymentRouteParams, PaymentRoutePaymentTypeParam } from '../model/route.model';\n\n@Injectable()\nexport class PayBillsNavigationService {\n  private readonly defaultRelative: NavigationExtras;\n\n  readonly routeParams: Observable<PaymentRouteParams> = combineLatest([\n    this.getRouteParam(this.route, 'payee'),\n    this.getRouteParam(this.route, 'id'),\n  ]).pipe(\n    map(([payee, id]) => {\n      const pageType: PaymentRoutePageTypeParam = !!id ? 'edit' : 'new';\n      const paymentType: PaymentRoutePaymentTypeParam = this.extractPaymentTypeFromId(id, payee);\n      const paymentId = (id && id.substring(2)) || '';\n      const payeeId = (payee && payee.substring(2)) || '';\n\n      return {\n        pageType,\n        paymentType,\n        ...(!!paymentId && { paymentId }),\n        ...(!!payeeId && { payeeId }),\n      };\n    }),\n  );\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    @Optional() private readonly communicationService: CommunicationService,\n  ) {\n    this.defaultRelative = { relativeTo: this.route };\n  }\n\n  navigateToEditRecurringForm(id: string, extras?: NavigationExtras) {\n    this.router.navigate(['recurring', 'edit', id], extras || this.defaultRelative);\n  }\n\n  navigateToEditRecurringReview(id: string, extras?: NavigationExtras) {\n    this.router.navigate(['recurring', 'edit', id, 'review'], extras || this.defaultRelative);\n  }\n\n  navigateToEditOneOffForm(id: string, extras?: NavigationExtras) {\n    this.router.navigate(['one-off', 'edit', id], extras || this.defaultRelative);\n  }\n\n  navigateToEditOneOffReview(id: string, extras?: NavigationExtras) {\n    this.router.navigate(['one-off', 'edit', id, 'review'], extras || this.defaultRelative);\n  }\n\n  navigateToForm(extras?: NavigationExtras) {\n    this.router.navigate(['form'], extras || this.defaultRelative);\n  }\n\n  navigateToReview(extras?: NavigationExtras) {\n    this.router.navigate(['review'], extras || this.defaultRelative);\n  }\n\n  navigateToPayeeList() {\n    this.communicationService?.navigateToPayeesList();\n  }\n  navigateToPayments() {\n    this.communicationService?.navigateToPaymentsList();\n  }\n  navigateToAddPayee() {\n    this.communicationService?.navigateToAddPayee();\n  }\n  navigateToMainAppPage() {\n    this.communicationService?.navigateToMainAppPage();\n  }\n  navigateToEditManualPayee(id: string) {\n    this.communicationService?.navigateToEditManualPayee(id);\n  }\n  navigateToEditElectronicPayee(id: string) {\n    this.communicationService?.navigateToEditElectronicPayee(id);\n  }\n  navigateToPayeeSummary(id: string) {\n    this.communicationService?.navigateToPayeeSummary(id);\n  }\n  navigateToPayverisEbillEnrol(id: string) {\n    this.communicationService?.navigateToPayverisEbillEnrol(id);\n  }\n\n  private extractPaymentTypeFromId(paymentId: string | null, payeeId: string | null): PaymentRoutePaymentTypeParam {\n    if (!paymentId && !payeeId) {\n      return ONE_OFF_PAYMENT;\n    }\n    const idToUse: string = (paymentId ? paymentId : payeeId) as string;\n    return idToUse.substring(0, 1) === 'r' ? RECURRING_PAYMENT : ONE_OFF_PAYMENT;\n  }\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // Ensure that level that has actual value keeps it from being cleared.\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map(params => params[0] || params[1]),\n    );\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BillpayNotificationRoutingService } from '@backbase/billpay-journeys-common';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { PayBillsNavigationService } from './services/pay-bills-navigation.service';\n\n@Component({\n  selector: 'bb-pay-bills-journey',\n  templateUrl: './pay-bills-journey.component.html',\n  providers: [PayBillsNavigationService],\n})\nexport class PayBillsJourneyComponent implements OnInit, OnDestroy {\n  private readonly destroy$ = new Subject<void>();\n\n  constructor(\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly route: ActivatedRoute,\n    private readonly billpayNotificationRoutingService: BillpayNotificationRoutingService,\n  ) {}\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnInit(): void {\n    this.setupNavigationSubscriptions();\n  }\n\n  private setupNavigationSubscriptions() {\n    this.billpayNotificationRoutingService.upcommingPaymentsSubject$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.navigationService.navigateToPayments());\n\n    this.route.paramMap.pipe(takeUntil(this.destroy$)).subscribe((param: ParamMap) => {\n      if (param.has('editRecurringPayment')) {\n        this.navigationService.navigateToEditRecurringForm(param.get('editRecurringPayment') as string);\n      } else if (param.has('editOneOffPayment')) {\n        this.navigationService.navigateToEditOneOffForm(param.get('editOneOffPayment') as string);\n      }\n    });\n\n    this.billpayNotificationRoutingService.managePayeesSubject$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.navigationService.navigateToAddPayee();\n    });\n  }\n}\n","<router-outlet></router-outlet>\n","import { Injectable, Optional, Inject, InjectionToken } from '@angular/core';\nimport { AccountNumberFormat, accountNumberFullFormat } from '@backbase/billpay-journeys-common';\nimport '@angular/localize/init';\nimport { Frequency, FrequencyKeys } from '@backbase/billpay-journeys-common';\n\nexport const PayBillsJourneyConfigurationToken = new InjectionToken<PayBillsJourneyConfiguration>(\n  'PayBillsJourneyConfigurationToken injection token',\n);\n\nexport interface PayBillsJourneyConfiguration {\n  notificationDismissTime: number;\n  accountNumberMasked: boolean;\n  paymentDetailsTitle: string;\n  paymentDefaultCurrency: string;\n  multipleBillsMode: boolean;\n  productNumberFormat?: AccountNumberFormat;\n  frequencies: Frequency[];\n}\n\nconst configDefaults: PayBillsJourneyConfiguration = {\n  notificationDismissTime: 5000,\n  accountNumberMasked: false,\n  paymentDetailsTitle: $localize`:@@pay-bills-journey-form-payment-details-title:Payment details`,\n  paymentDefaultCurrency: 'USD',\n  multipleBillsMode: false,\n  productNumberFormat: accountNumberFullFormat,\n  frequencies: [\n    { name: $localize`:@@billpay-common.frequency-label.once:Once`, value: FrequencyKeys.Once },\n    { name: $localize`:@@billpay-common.frequency-label.weekly:Weekly`, value: FrequencyKeys.Weekly },\n    {\n      name: $localize`:@@billpay-common.frequency-label.every-two-week:Every two weeks`,\n      value: FrequencyKeys.Biweekly,\n    },\n    { name: $localize`:@@billpay-common.frequency-label.monthly:Monthly`, value: FrequencyKeys.Monthly },\n  ],\n};\n\n@Injectable()\nexport class PayBillsJourneyConfigService {\n  private _config: PayBillsJourneyConfiguration;\n\n  constructor(@Optional() @Inject(PayBillsJourneyConfigurationToken) config: PayBillsJourneyConfiguration) {\n    config = config || {};\n    this._config = { ...configDefaults, ...config };\n  }\n\n  get defaults(): PayBillsJourneyConfiguration {\n    return configDefaults;\n  }\n  get notificationDismissTime(): number {\n    return this._config.notificationDismissTime;\n  }\n  get accountNumberMasked(): boolean {\n    return this._config.accountNumberMasked;\n  }\n  get paymentDetailsTitle(): string {\n    return this._config.paymentDetailsTitle;\n  }\n  get paymentDefaultCurrency(): string {\n    return this._config.paymentDefaultCurrency;\n  }\n  get multipleBillsMode(): boolean {\n    return this._config.multipleBillsMode;\n  }\n  get productNumberFormat(): AccountNumberFormat | undefined {\n    return this._config.productNumberFormat;\n  }\n  get frequencies(): Frequency[] {\n    return this._config.frequencies;\n  }\n}\n","import { Component } from '@angular/core';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\n@Component({\n  selector: 'bb-billpay-enrolment-view',\n  template: `\n    <div class=\"bb-block bb-block--lg\">\n      <bb-header-ui\n        headingType=\"h1\"\n        heading=\"Enrol in bill pay\"\n        i18n-heading=\"@@billpay-manage-payee-journey.enrolment-heading\"\n      ></bb-header-ui>\n    </div>\n    <bb-billpay-enrolment [notificationDismissTime]=\"config?.notificationDismissTime\"></bb-billpay-enrolment>\n  `,\n})\nexport class BillPayEnrolmentViewComponent {\n  constructor(readonly config: PayBillsJourneyConfigService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { PaymentFormState } from '@backbase/billpay-journeys-common';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class PayBillsStateService {\n  private readonly paymentStateSource = new BehaviorSubject<PaymentFormState[] | undefined>(undefined);\n  readonly paymentState: Observable<PaymentFormState[] | undefined> = this.paymentStateSource.asObservable();\n\n  private isFormProcessingValue = false;\n  set isFormProcessing(value: boolean) {\n    this.isFormProcessingValue = value;\n  }\n  get isFormProcessing() {\n    return this.isFormProcessingValue;\n  }\n\n  updatePaymentState(state?: PaymentFormState[]) {\n    this.paymentStateSource.next(state);\n  }\n\n  reset() {\n    this.isFormProcessing = false;\n    this.updatePaymentState();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Currency } from '@backbase/data-ang/billpay';\nimport { FormControl } from '@angular/forms';\nimport { BillpayUtilityService as Utility, PaymentAmount } from '@backbase/billpay-journeys-common';\n\nexport interface CurrencyUI {\n  amount: string;\n  currency: string;\n}\n\nexport interface LatestBill {\n  id?: string;\n  paymentDate?: string;\n  amount?: Currency;\n  minAmountDue?: Currency;\n  outstandingBalance?: Currency;\n  status?: string;\n  url?: string;\n  statementAvailable?: boolean;\n}\n\n@Component({\n  selector: 'bb-billpay-ebill-payment',\n  templateUrl: './billpay-ebill-payment-ui.component.html',\n})\nexport class BillpayEbillPaymentUIComponent implements OnInit {\n  /**\n   * Details of the latest eBill to be paid.\n   */\n  @Input() latestBill?: LatestBill;\n  /**\n   * Form control for the eBill payment form.\n   */\n  @Input() control?: FormControl;\n  /**\n   * Mark the form as submitted, controls validation elements. Defaults to false.\n   */\n  @Input() isSubmitted = false;\n\n  /**\n   * get the payment default currency preference. default to 'USD'.\n   */\n  @Input() eBillDefaultCurrency = 'USD';\n\n  /**\n   * unique key used for ids\n   */\n  readonly id = Utility.generateId();\n  touched?: boolean;\n\n  public customValue!: PaymentAmount;\n\n  ngOnInit() {\n    this.customValue = {\n      amount: '',\n      currency: this.eBillDefaultCurrency,\n      type: undefined,\n    };\n  }\n\n  setAmount(type: string) {\n    this.customValue.type = type;\n    if (type === 'Custom') {\n      this.setCustomAmount(this.customValue.amount);\n    } else {\n      const currency = this.getAmount(type);\n      if (currency) {\n        this.setValue({\n          amount: currency.amount,\n          currency: currency.currencyCode,\n          type: type,\n        });\n      }\n    }\n  }\n\n  setCustomAmount(ev: string) {\n    this.customValue.amount = ev;\n    this.setValue({ ...this.customValue, type: 'Custom' });\n  }\n\n  get showBalance(): boolean {\n    return !!(\n      this.latestBill && this.isDifferentAndNonZero(this.latestBill.outstandingBalance, this.latestBill.amount)\n    );\n  }\n\n  get showMinumum(): boolean {\n    return !!(this.latestBill && this.isDifferentAndNonZero(this.latestBill.minAmountDue, this.latestBill.amount));\n  }\n\n  private isDifferentAndNonZero(otherEbillAmount: Currency | undefined, ebillAmount: Currency | undefined): boolean {\n    return !!(\n      otherEbillAmount &&\n      ebillAmount &&\n      otherEbillAmount.amount !== ebillAmount.amount &&\n      0 !== +otherEbillAmount.amount\n    );\n  }\n\n  private setValue(newValue: any) {\n    if (this.control) {\n      this.control.setValue(newValue);\n    }\n  }\n\n  private getAmount(value: string) {\n    switch (value) {\n      case 'Minimum':\n        return this.latestBill && this.latestBill.minAmountDue;\n      case 'Balance':\n        return this.latestBill && this.latestBill.outstandingBalance;\n      case 'Due':\n      default:\n        return this.latestBill && this.latestBill.amount;\n    }\n  }\n}\n","<bb-alert-ui modifier=\"info\" title=\"\">\n  <span\n    data-role=\"ebill-info-alert\"\n    class=\"bb-text-bold\"\n    i18n=\"eBill payment alert|Alert for eBill information@@billpay.bb-payment-ebill.alert\"\n  >\n    eBill due on {{ latestBill?.paymentDate | bbDate: 'fullDate' }}.\n  </span>\n</bb-alert-ui>\n\n<bb-input-radio-group-ui\n  data-role=\"ebill-payment-group\"\n  [required]=\"true\"\n  [ngModel]=\"control?.value?.type\"\n  (ngModelChange)=\"setAmount($event)\"\n  [preselect]=\"false\"\n>\n  <bb-input-radio-ui value=\"Due\" [labelTemplate]=\"ebillPaymentDueLabelTemplate\">\n    <ng-template #ebillPaymentDueLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-due-message\">\n          <div\n            i18n=\"\n              eBill due amount radio label|Label for the radio button for selecting the eBill due\n              amount@@bb-billpay-payment-ebill.radio.due-amount\"\n          >\n            eBill amount due\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill due amount radio description|Description for the radio button for selecting the eBill due\n              amount@@bb-billpay-payment-ebill.radio.due-amount.description\"\n          >\n            Amount due on the latest billing cycle\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-due-message-amount\"\n            [amount]=\"latestBill?.amount?.amount\"\n            [currency]=\"latestBill?.amount?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Balance\" *ngIf=\"showBalance\" [labelTemplate]=\"ebillPaymentBalanceLabelTemplate\">\n    <ng-template #ebillPaymentBalanceLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-balance-message\">\n          <div\n            i18n=\"\n              eBill outstanding balance amount radio label|Label for the radio button for selecting the eBill\n              outstanding balance amount@@bb-billpay-payment-ebill.radio.outstanding-balance-amount\"\n          >\n            Total payee balance\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill total amount radio description|Description for the radio button for selecting the eBill total\n              amount@@bb-billpay-payment-ebill.radio.total-amount.description\"\n          >\n            Total amount owed\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-balance-message-amount\"\n            [amount]=\"latestBill?.outstandingBalance?.amount\"\n            [currency]=\"latestBill?.outstandingBalance?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Minimum\" *ngIf=\"showMinumum\" [labelTemplate]=\"ebillPaymentMinimumLabelTemplate\">\n    <ng-template #ebillPaymentMinimumLabelTemplate>\n      <div class=\"pl-2 bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-stack__item--fill\" data-role=\"ebill-minimum-message\">\n          <div\n            i18n=\"\n              eBill minimum amount radio label|Label for the radio button for selecting the eBill minimum\n              amount@@bb-billpay-payment-ebill.radio.minimum-amount\"\n          >\n            eBill minimum payment\n          </div>\n          <span\n            class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n            i18n=\"\n              eBill minimum amount radio description|Description for the radio button for selecting the eBill minimum\n              amount@@bb-billpay-payment-ebill.radio.minimum-amount.description\"\n          >\n            5% of the total balance\n          </span>\n        </div>\n        <div class=\"bb-stack__item bb-stack__break--sm-down\">\n          <bb-amount-ui\n            data-role=\"ebill-minimum-message-amount\"\n            [amount]=\"latestBill?.minAmountDue?.amount\"\n            [currency]=\"latestBill?.minAmountDue?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n\n  <bb-input-radio-ui value=\"Custom\" [labelTemplate]=\"ebillPaymentOtherLabelTemplate\">\n    <ng-template #ebillPaymentOtherLabelTemplate>\n      <div class=\"pl-2 bb-form-field bb-form-field--md\">\n        <div\n          data-role=\"ebill-custom-message\"\n          i18n=\"\n            eBill other amount radio label|Label for the radio button for selecting an eBill other\n            amount@@bb-billpay-payment-ebill.radio.other-amount\"\n        >\n          Other amount\n        </div>\n        <span\n          class=\"bb-text-support bb-subtitle bb-input-radio-group__radio-label\"\n          i18n=\"\n            eBill other amount radio description|Description for the radio button for selecting the eBill other\n            amount@@bb-billpay-payment-ebill.radio.other-amount.description\"\n        >\n          Enter amount manually\n        </span>\n        <ng-container *ngIf=\"control?.value?.type === 'Custom'\">\n          <div class=\"position-relative\" [class.was-validated]=\"touched && !customValue?.amount\">\n            <bb-amount-input-ui\n              data-role=\"ebill-amount-input\"\n              [ngModel]=\"control?.value?.amount\"\n              (ngModelChange)=\"setCustomAmount($event)\"\n              (focusout)=\"touched = true\"\n              [autoDecimal]=\"true\"\n              wrapperClasses=\"bb-amount-input__field--large\"\n              [currency]=\"latestBill?.amount?.currencyCode\"\n              [required]=\"true\"\n              [aria-describedby]=\"'compact-amount-error-message' + id\"\n              [placeholder]=\"'0.00'\"\n            ></bb-amount-input-ui>\n          </div>\n          <bb-input-validation-message-ui\n            id=\"{{ 'compact-amount-error-message' + id }}\"\n            [showErrors]=\"touched && !customValue?.amount\"\n          >\n            <span> Field is required. </span>\n          </bb-input-validation-message-ui>\n        </ng-container>\n      </div>\n    </ng-template>\n  </bb-input-radio-ui>\n</bb-input-radio-group-ui>\n\n<bb-input-validation-message-ui role=\"alert\" [showErrors]=\"isSubmitted && control?.invalid\">\n  <p\n    *ngIf=\"!control?.errors?.amountInvalid\"\n    i18n=\"Payment amount cannot be zero|Error zero amount@@bb-billpay-payment-form.error.amount\"\n    data-role=\"invalid-amount\"\n  >\n    Payment amount cannot be zero.\n  </p>\n</bb-input-validation-message-ui>\n","import { Component, Input } from '@angular/core';\nimport { Frequency, FrequencyKeys, PaymentServicesTypes, Schedule } from '@backbase/billpay-journeys-common';\n\n@Component({\n  selector: 'bb-schedule-label-ui',\n  templateUrl: './schedule-label.component.html',\n})\nexport class ScheduleLabelComponent {\n  /**\n   * Details of the payment schedule.\n   */\n  @Input() item: Schedule | undefined;\n  /**\n   * Selects elements appropriate to a one-off payment. Defaults to true.\n   */\n  @Input() isSingleTransfer = true;\n  /**\n   * Minimum number of occurrences for recurring payments.\n   */\n  @Input() minOccurrences = 1;\n  /**\n   * Minimum number of occurrences for recurring payments.\n   */\n  @Input() frequencies?: Frequency[];\n  get frequencyLabel(): string {\n    const frequency = this.frequencies?.find(freq => this.item?.frequency === freq.value);\n    return $localize`:@@billpay-payment.form.schedule-frequency-label:${frequency?.name || ''}`;\n  }\n\n  get startDate(): string | undefined {\n    const date = String(\n      (this.item?.frequency === FrequencyKeys.Once &&\n        this.item.paymentService?.index !== PaymentServicesTypes.Other &&\n        this.item.paymentServiceDate) ||\n        this.item?.startDate,\n    );\n    return (this.item && date) || undefined;\n  }\n\n  get endDate(): Date | undefined {\n    return this.item && this.item.endDate && Date.parse(this.item.endDate) ? new Date(this.item.endDate) : undefined;\n  }\n\n  isToday(): boolean {\n    if (this.item === undefined) {\n      throw new Error('`item` input is required in `bb-schedule-label-ui` component');\n    }\n    const today = new Date().setHours(0, 0, 0, 0);\n    const startDate = new Date(this.item.startDate);\n    return startDate.setHours(0, 0, 0, 0) === today;\n  }\n\n  hasEnd(): boolean {\n    return !!this.item && (this.item.endDate !== undefined || this.item.repeat !== undefined);\n  }\n\n  hasLimit(): boolean {\n    return this.hasEnd() && !this.isSingleTransfer;\n  }\n}\n","<span>\n  <ng-container *ngIf=\"frequencyLabel; else defaultLabels\">{{ frequencyLabel }},</ng-container>\n  <!-- Remove default labels after journey migration phase 2 -->\n  <ng-template #defaultLabels>\n    <span\n      i18n=\"\n        Schedule frequency title list|List of titles for available schedule\n        frequencies@@billpay.bb-schedule-label-ui.frequency.list\"\n    >\n      {item?.frequency, select, ONCE {Once} WEEKLY {Weekly} EVERY_2_WEEKS {Every two weeks} MONTHLY {Monthly}\n      EVERY_4_WEEKS {Every for weeks} TWICE_A_MONTH {Semi monthly} EVERY_2_MONTHS {Every two months} EVERY_3_MONTHS {\n      Every three months} EVERY_6_MONTHS {Every six months} ANNUALLY {Annually}},\n    </span>\n  </ng-template>\n</span>\n<ng-container *ngIf=\"isSingleTransfer\">\n  <span\n    i18n=\"\n      On|Word to be used before a date to indicate that the payment will be executed on that\n      date@@billpay.bb-schedule-label-ui.label.on\"\n    >&nbsp;on</span\n  >\n</ng-container>\n\n<ng-container *ngIf=\"!isSingleTransfer\">\n  <span\n    i18n=\"\n      Schedule start|Word to be used before a date to indicate that this date is a starting date of the\n      schedule@@billpay.bb-schedule-label-ui.label.start\"\n    >&nbsp;starting</span\n  >\n</ng-container>\n\n<span>&nbsp;{{ startDate | date: 'mediumDate' }}</span>\n\n<ng-container *ngIf=\"hasLimit() && item?.endDate\"\n  >&sbquo;\n  <span\n    i18n=\"\n      Schedule end|Word to be used before a date to indicate that this date is an end date of the\n      schedule@@billpay.bb-schedule-label-ui.label.end\"\n    >Until&nbsp;{{ endDate | date: 'mediumDate' }}</span\n  >\n</ng-container>\n\n<ng-container *ngIf=\"hasLimit() && (item?.repeat || 0) >= minOccurrences\"\n  >&sbquo;\n  <span>{ item?.repeat, plural, =1 { {{ item?.repeat }} time} other { {{ item?.repeat }} times}}</span>\n</ng-container>\n","import { Component, Input, OnInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { PaymentService } from '@backbase/data-ang/billpay';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  FrequencyKeys,\n  EndTypes,\n  PaymentServicesTypes,\n  PaymentServiceRadio,\n  BillpayPaymentScheduleService,\n  formControlOptions,\n  Frequency,\n  BillpayUtilityService as Utility,\n} from '@backbase/billpay-journeys-common';\n\n@Component({\n  selector: 'bb-schedule-ui',\n  templateUrl: './schedule.component.html',\n})\nexport class ScheduleComponent implements OnInit, OnDestroy, OnChanges {\n  readonly startDateLabelId = Utility.generateId();\n  readonly endingLabelId = Utility.generateId();\n  readonly id = Utility.generateId();\n  /**\n   * Array of valid frequencies that can be used to schedule payments.\n   */\n  @Input() frequencies: Array<Frequency> | undefined;\n  /**\n   * Minimum occurrences for the number of occurrences input box.\n   */\n  @Input() minOccurs: number | undefined;\n  /**\n   * Maximum occurrences for the number of occurrences input box.\n   */\n  @Input() maxOccurs: number | undefined;\n  /**\n   * Schedule form to be displayed.\n   */\n  @Input() scheduleForm: FormGroup | undefined;\n  /**\n   * Minimum start date for the datepicker elements.\n   */\n  @Input() minDate: string | undefined;\n  /**\n   * Set initial payment service for the initial component state.\n   */\n  @Input() defaultPaymentServiceType: PaymentServicesTypes = PaymentServicesTypes.Regular;\n  /**\n   * Mark the form as submitted, controls validation elements. Defaults to false.\n   */\n  @Input() formSubmitted = false;\n  /**\n   * Display relevant payment service radio button elements.\n   * @param services array of payment service details.\n   */\n  @Input() paymentServices: Array<PaymentService> | undefined;\n\n  private _paymentServiceRadios: Array<PaymentServiceRadio> | undefined;\n  private readonly destroy$ = new Subject<void>();\n\n  /** @internal */\n  constructor(private readonly scheduleService: BillpayPaymentScheduleService) {}\n\n  get paymentServiceRadios() {\n    return this._paymentServiceRadios;\n  }\n\n  get frequencyValues() {\n    return FrequencyKeys;\n  }\n\n  get endTypes() {\n    return EndTypes;\n  }\n\n  get item() {\n    return this.scheduleForm && this.scheduleForm.getRawValue();\n  }\n\n  get paymentServicesTypes() {\n    return PaymentServicesTypes;\n  }\n\n  private setDefaultPaymentServiceValue(index?: PaymentServicesTypes, options?: Object) {\n    // set default value from initial state form for mapped `paymentServiceRadios`\n    const paymentServiceControl = this.scheduleForm && this.scheduleForm.controls['paymentService'];\n    if (paymentServiceControl) {\n      paymentServiceControl.setValue(\n        this.paymentServiceRadios &&\n          this.paymentServiceRadios.find(\n            item => !!(item.service && item.index === (index || paymentServiceControl.value.index)),\n          ),\n        options,\n      );\n    }\n  }\n\n  ngOnInit() {\n    if (this.scheduleForm === undefined) {\n      throw new Error('`scheduleForm` input is required in `bb-schedule-ui` component');\n    }\n\n    if (this.frequencies === undefined) {\n      throw new Error('`frequencies` input is required in `bb-schedule-ui` component');\n    }\n\n    this.processEndTypeValueChanges();\n\n    this.processPaymentServiceValueChanges();\n\n    this.processFrequencyValueChanges();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.paymentServices) {\n      const isFirstChange = !this.paymentServiceRadios;\n      const service: Array<PaymentService> | undefined = changes.paymentServices.currentValue;\n      this._paymentServiceRadios =\n        service &&\n        service.map(item => ({\n          index: item.paymentServiceType || '',\n          service: item,\n        }));\n\n      if (this._paymentServiceRadios) {\n        this._paymentServiceRadios.push({\n          index: PaymentServicesTypes.Other,\n          service: service && service.find(item => item.paymentServiceType === PaymentServicesTypes.Regular),\n        });\n      }\n\n      this.setDefaultPaymentServiceValue(this.defaultPaymentServiceType, { emitEvent: !isFirstChange });\n    }\n  }\n\n  private processEndTypeValueChanges() {\n    if (!this.scheduleForm) return;\n    const endTypeControl = this.scheduleForm.controls['endType'];\n    const endDateControl = this.scheduleForm.controls['endDate'];\n    const repeatControl = this.scheduleForm.controls['repeat'];\n    if (endTypeControl && endDateControl && repeatControl) {\n      endTypeControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        switch (value) {\n          case EndTypes.After: {\n            repeatControl.enable(formControlOptions);\n            endDateControl.disable(formControlOptions);\n            break;\n          }\n          case EndTypes.On: {\n            endDateControl.enable(formControlOptions);\n            repeatControl.disable(formControlOptions);\n            break;\n          }\n          case EndTypes.Never:\n          default: {\n            endDateControl.disable(formControlOptions);\n            repeatControl.disable(formControlOptions);\n            break;\n          }\n        }\n      });\n    }\n  }\n\n  private processPaymentServiceValueChanges() {\n    if (!this.scheduleForm) return;\n    const startDateControl = this.scheduleForm.controls['startDate'];\n    const paymentServiceControl = this.scheduleForm.controls['paymentService'];\n    const paymentServiceDateControl = this.scheduleForm.controls['paymentServiceDate'];\n    const frequencyControl = this.scheduleForm.controls['frequency'];\n    const disableStartDate = () =>\n      frequencyControl.value === FrequencyKeys.Once && startDateControl.disable(formControlOptions);\n\n    if (startDateControl && paymentServiceControl && paymentServiceDateControl && frequencyControl) {\n      paymentServiceControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        if (value.index === PaymentServicesTypes.Other) {\n          startDateControl.enable(formControlOptions);\n          paymentServiceDateControl.disable(formControlOptions);\n        } else {\n          paymentServiceDateControl.enable(formControlOptions);\n          disableStartDate();\n          paymentServiceDateControl.setValue(this.getEstimatedStartDate(value.service.paymentServiceType));\n        }\n      });\n    }\n  }\n\n  private processFrequencyValueChanges() {\n    if (!this.scheduleForm) return;\n    const endTypeControl = this.scheduleForm.controls['endType'];\n    const endDateControl = this.scheduleForm.controls['endDate'];\n    const repeatControl = this.scheduleForm.controls['repeat'];\n    const startDateControl = this.scheduleForm.controls['startDate'];\n    const paymentServiceControl = this.scheduleForm.controls['paymentService'];\n    const frequencyControl = this.scheduleForm.controls['frequency'];\n    const paymentServiceDateControl = this.scheduleForm.controls['paymentServiceDate'];\n\n    if (startDateControl && frequencyControl && paymentServiceControl && endTypeControl && endDateControl) {\n      frequencyControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        if (value === FrequencyKeys.Once) {\n          paymentServiceControl.enable(formControlOptions);\n          paymentServiceControl.updateValueAndValidity();\n          paymentServiceDateControl.enable(formControlOptions);\n          endDateControl.disable(formControlOptions);\n          endTypeControl.disable(formControlOptions);\n          repeatControl.disable(formControlOptions);\n        } else {\n          paymentServiceControl.disable(formControlOptions);\n          paymentServiceDateControl.disable(formControlOptions);\n          startDateControl.enable(formControlOptions);\n          endDateControl.enable(formControlOptions);\n          repeatControl.enable(formControlOptions);\n          endTypeControl.enable();\n        }\n      });\n    }\n  }\n\n  getEstimatedStartDate(serviceType: PaymentServicesTypes): string {\n    const services = this.paymentServiceRadios && this.paymentServiceRadios.map(item => item.service);\n    return this.scheduleService.estimatedPaymentServiceDate(services, serviceType);\n  }\n\n  getEstimatedEndDate(): number | undefined {\n    const startDate = this.scheduleForm && this.scheduleForm.controls['startDate'].value;\n    const occurrences = this.scheduleForm && this.scheduleForm.controls['repeat'].value;\n    const freq = this.scheduleForm && this.scheduleForm.controls['frequency'].value;\n\n    return startDate && this.scheduleService.estimatedEndDate(startDate as string, freq, occurrences);\n  }\n\n  getEstimatedOccurs(): number {\n    const startDate = this.scheduleForm && this.scheduleForm.controls['startDate'].value;\n    const endDate = this.scheduleForm && this.scheduleForm.controls['endDate'].value;\n    const freq = this.scheduleForm && this.scheduleForm.controls['frequency'].value;\n\n    return (startDate && this.scheduleService.estimatedOccurences(startDate as string, endDate as string, freq)) || 0;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div [formGroup]=\"scheduleForm\" class=\"bb-block bb-block--md\">\n  <div class=\"bb-form-field bb-form-field--md bb-block bb-block--md\" *ngIf=\"frequencies?.length\">\n    <label\n      data-role=\"frequency-label\"\n      class=\"form-label\"\n      i18n=\"\n        Schedule frequency label|Label for a frequency dropdown in the component@@billpay.bb-schedule-ui.label.frequency\"\n    >\n      Frequency\n    </label>\n    <bb-dropdown-single-select-ui data-role=\"frequency-dropdown\" aria-label=\"frequency\" formControlName=\"frequency\">\n      <bb-dropdown-single-select-option-ui\n        *ngFor=\"let frequency of frequencies\"\n        [value]=\"frequency.value\"\n        [label]=\"frequency.name\"\n      ></bb-dropdown-single-select-option-ui>\n    </bb-dropdown-single-select-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\" [hidden]=\"item?.frequency !== frequencyValues.Once\">\n    <label\n      data-role=\"payment-date-label\"\n      class=\"bb-label\"\n      i18n=\"\n        Schedule once payment section name|Label for the section containing inputs that determine way of once payment\n        the scheduled payments@@billpay.bb-schedule-ui.label.once-date\"\n    >\n      Execution date\n    </label>\n    <bb-input-radio-group-ui\n      data-role=\"once-payment-group\"\n      formControlName=\"paymentService\"\n      [required]=\"true\"\n      aria-label=\"once-date-type\"\n    >\n      <bb-input-radio-ui\n        *ngFor=\"let radio of paymentServiceRadios\"\n        [value]=\"radio\"\n        aria-invalid=\"false\"\n        [labelTemplate]=\"radio.index !== 'OTHER' ? paymentServiceLabelTemplate : paymentServiceOtherLabelTemplate\"\n      >\n        <ng-template #paymentServiceLabelTemplate>\n          <div class=\"bb-text-align-left\">\n            <div>\n              <span\n                data-role=\"payment-option\"\n                i18n=\"Service label list|Radio Label@@billpay.bb-input-radio-ui.radio.label.once-date.service\"\n              >\n                { radio.service.paymentServiceType, select, REGULAR_PAYMENT {Earliest free delivery} EXPEDITED_PAYMENT\n                {Rush payment} OVERNIGHT_CHECK {Overnight check} }\n              </span>\n              <span\n                *ngIf=\"\n                  radio.service.paymentServiceType === paymentServicesTypes.Expedited ||\n                  radio.service.paymentServiceType === paymentServicesTypes.Overnight\n                \"\n                i18n=\"\n                  Service label fee text|Radio Label fee@@billpay.bb-input-radio-ui.radio.label.once-date.service.fee\"\n                >&nbsp;-&nbsp;{{\n                  radio.service.fee.amount | currency: radio.service.fee.currencyCode:'symbol-narrow'\n                }}&nbsp;fee</span\n              >\n            </div>\n            <div\n              data-role=\"delivery-by\"\n              class=\"bb-text-support bb-subtitle\"\n              i18n=\"\n                Service label subtext|Radio Label\n                subtext@@billpay.bb-input-radio-ui.radio.label.once-date.service.subtext\"\n            >\n              Delivery by {{ getEstimatedStartDate(radio.service.paymentServiceType) | date: 'longDate' }}\n            </div>\n          </div>\n        </ng-template>\n        <ng-template #paymentServiceOtherLabelTemplate>\n          <div class=\"bb-stack\">\n            <span\n              class=\"bb-stack__item bb-text-bold\"\n              id=\"billpay-schedule-other-date-{{ id }}\"\n              i18n=\"Other date|Radio Label@@billpay.bb-input-radio-ui.radio.label.once-date.other\"\n              data-role=\"other-date-label\"\n              >Other date</span\n            >\n            <span class=\"bb-stack__item\">\n              <bb-input-datepicker-ui\n                (click)=\"$event.preventDefault()\"\n                formControlName=\"startDate\"\n                [minDate]=\"minDate\"\n                data-role=\"once-start-date-calendar\"\n                aria-label=\"start-date\"\n                placement=\"top-right\"\n                aria-labelledby=\"billpay-schedule-other-date-{{ id }}\"\n                [datepickerDescribedby]=\"'billpay-schedule-other-date-describe-{{ id }}'\"\n              ></bb-input-datepicker-ui>\n              <bb-input-validation-message-ui\n                role=\"alert\"\n                id=\"'billpay-schedule-other-date-describe-{{ id }}'\"\n                [showErrors]=\"scheduleForm?.get('startDate')?.invalid && formSubmitted\"\n              >\n                <span\n                  *ngIf=\"scheduleForm?.get('startDate')?.errors?.required\"\n                  i18n=\"\n                    Execution date required error text|Error required message for Execution date input\n                    field@@billpay.bb-schedule-ui.error.required.startDate\"\n                  data-role=\"missing-schedule-execution-date\"\n                >\n                  Execution date is required.\n                </span>\n                <span\n                  *ngIf=\"scheduleForm?.get('startDate')?.errors?.pastDate\"\n                  i18n=\"\n                    Execution date past date error text |Error past date message for Execution date input\n                    field@@billpay.bb-schedule-ui.error.pastDate.startDate\"\n                  data-role=\"past-date-schedule-execution-date\"\n                >\n                  Execution date cannot be before delivery date.\n                </span>\n                <span\n                  *ngIf=\"scheduleForm?.get('startDate')?.errors?.invalidDateFormat\"\n                  i18n=\"\n                    Execution date invalid date error text |Error invalid date format message for Execution date input\n                    field@@billpay.bb-schedule-ui.error.invalidDateFormat\"\n                  data-role=\"invalid-date-schedule-execution-date\"\n                >\n                  Invalid date format.\n                </span>\n              </bb-input-validation-message-ui>\n            </span>\n          </div>\n        </ng-template>\n      </bb-input-radio-ui>\n    </bb-input-radio-group-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\" *ngIf=\"item?.frequency !== frequencyValues.Once\">\n    <label id=\"{{ startDateLabelId }}\" class=\"bb-text-bold\">\n      <span\n        *ngIf=\"true\"\n        id=\"billpay-schedule-start-date-{{ id }}\"\n        i18n-label=\"\n          Schedule start label|Label for an start date in scheduling component@@billpay.bb-schedule-ui.label.start\"\n        data-role=\"start-date-label\"\n      >\n        Start on\n      </span>\n    </label>\n    <div class=\"bb-form-field bb-form-field--sm\">\n      <bb-input-datepicker-ui\n        [aria-labelledby]=\"startDateLabelId\"\n        formControlName=\"startDate\"\n        [minDate]=\"minDate\"\n        data-role=\"start-date-calendar\"\n        aria-labelledby=\"billpay-schedule-start-date-{{ id }}\"\n        [datepickerDescribedby]=\"'billpay-schedule-start-date-error-{{ id }}'\"\n      ></bb-input-datepicker-ui>\n    </div>\n\n    <bb-input-validation-message-ui\n      id=\"'billpay-schedule-start-date-error-{{ id }}'\"\n      role=\"alert\"\n      [showErrors]=\"scheduleForm?.get('startDate')?.invalid && formSubmitted\"\n    >\n      <span\n        *ngIf=\"scheduleForm?.get('startDate')?.errors?.required\"\n        i18n=\"\n          Execution date required error text|Error required message for Execution date input\n          field@@billpay.bb-schedule-ui.error.required.startDate\"\n        data-role=\"missing-schedule-execution-date\"\n      >\n        Execution date is required.\n      </span>\n      <span\n        *ngIf=\"\n          scheduleForm?.get('startDate')?.errors?.pastDate ||\n          scheduleForm?.get('startDate')?.errors?.dateLessThanMinDate\n        \"\n        i18n=\"\n          Execution date past date error text |Error past date message for Execution date input\n          field@@billpay.bb-schedule-ui.error.pastDate.startDate\"\n        data-role=\"past-date-schedule-execution-date\"\n      >\n        Execution date cannot be before delivery date.\n      </span>\n      <span\n        *ngIf=\"scheduleForm?.get('startDate')?.errors?.invalidDateFormat\"\n        i18n=\"\n          Execution date invalid date error text |Error invalid date format message for Execution date input\n          field@@billpay.bb-schedule-ui.error.invalidDateFormat\"\n        data-role=\"invalid-date-schedule-execution-date\"\n      >\n        Invalid date format.\n      </span>\n    </bb-input-validation-message-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--md\" [hidden]=\"item?.frequency == frequencyValues.Once\">\n    <label\n      id=\"{{ endingLabelId }}\"\n      data-role=\"ending-label\"\n      class=\"bb-label\"\n      i18n=\"\n        Schedule ending section name|Label for the section containing inputs that determine way of ending of the\n        scheduled payments@@billpay.bb-schedule-ui.label.ending\"\n    >\n      End\n    </label>\n    <div class=\"bb-stack bb-stack--align-bottom\">\n      <div class=\"bb-stack__item\">\n        <bb-input-radio-group-ui [required]=\"true\" formControlName=\"endType\">\n          <bb-input-radio-ui\n            [value]=\"endTypes.Never\"\n            label=\"Never\"\n            aria-invalid=\"false\"\n            i18n-label=\"\n              Schedule never ends|Label for an option to never end the payment\n              schedule@@billpay.bb-schedule-ui.label.ending.never\"\n          >\n          </bb-input-radio-ui>\n          <bb-input-radio-ui [value]=\"endTypes.On\" aria-invalid=\"false\" [labelTemplate]=\"endingTemplate\">\n          </bb-input-radio-ui>\n          <bb-input-radio-ui [value]=\"endTypes.After\" aria-invalid=\"false\" [labelTemplate]=\"afterTemplate\">\n          </bb-input-radio-ui>\n          <ng-template #endingTemplate>\n            <div class=\"bb-stack\">\n              <span\n                data-role=\"ending-date-on-label\"\n                class=\"bb-stack__item bb-stack__item--spacing-lg\"\n                id=\"billpay-schedule-end-date-on-{{ id }}\"\n                i18n=\"\n                  Schedule end date|Label for an option to end the payment schedule on a specific\n                  date@@billpay.bb-schedule-ui.label.ending.on\"\n                >On</span\n              >\n              <div class=\"bb-stack__item\">\n                <bb-input-datepicker-ui\n                  formControlName=\"endDate\"\n                  data-role=\"ending-end-date\"\n                  i18n-aria-label=\"\n                    Schedule end date datepicker label|Aria label for end date payment schedule\n                    control@@billpay.bb-schedule-ui.label.end-date\"\n                  aria-label=\"end-date\"\n                  [minDate]=\"scheduleForm?.get('startDate')?.value\"\n                  placement=\"top-right\"\n                  aria-labelledby=\"billpay-schedule-end-date-on-{{ id }}\"\n                ></bb-input-datepicker-ui>\n                <bb-input-validation-message-ui\n                  role=\"alert\"\n                  *ngIf=\"scheduleForm?.get('endDate') as control\"\n                  [showErrors]=\"control?.invalid && formSubmitted\"\n                >\n                  <span\n                    *ngIf=\"control?.errors?.pastDate || control?.errors?.dateLessThanMinDate\"\n                    i18n=\"\n                      End date past date error text |Error past date message for End date input\n                      field@@billpay.bb-schedule-ui.end-date.past-date-error\"\n                    data-role=\"past-date-ending-end-date\"\n                  >\n                    End date could not be lower than start date.\n                  </span>\n                  <span\n                    *ngIf=\"control?.errors?.invalidDateFormat\"\n                    i18n=\"\n                      End date invalid date error text |Error invalid date format message for End date input\n                      field@@billpay.bb-schedule-ui.end-date.invalid-date-format-error\"\n                    data-role=\"invalid-date-schedule-end-date\"\n                  >\n                    Invalid date format.\n                  </span>\n                  <span\n                    *ngIf=\"control?.errors?.required\"\n                    i18n=\"\n                      End date invalid date error text |Date is required for End date input\n                      field@@billpay.bb-schedule-ui.end-date.date-required-error\"\n                    data-role=\"required-date-schedule-end-date\"\n                  >\n                    End date is required.\n                  </span>\n                </bb-input-validation-message-ui>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template #afterTemplate>\n            <div class=\"bb-stack\">\n              <span\n                class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                i18n=\"\n                  Schedule number of occurrences|Label for an option to end the payment schedule after some number of\n                  occurrences@@billpay.bb-schedule-ui.label.ending.after\"\n              >\n                After\n              </span>\n              <div class=\"bb-stack__item\">\n                <div class=\"bb-stack\">\n                  <div class=\"bb-stack__item bb-form-field bb-form-field--xs\">\n                    <bb-input-number-ui\n                      formControlName=\"repeat\"\n                      [min]=\"minOccurs\"\n                      [max]=\"maxOccurs\"\n                      data-role=\"ending-occurrences\"\n                      aria-label=\"occurrences\"\n                    ></bb-input-number-ui>\n                  </div>\n                  <span\n                    class=\"bb-stack__item\"\n                    i18n-label=\"\n                      Schedule occurrences text|Text to be appended after schedule end after some number of occurrences\n                      input@@billpay.bb-schedule-ui.label.ending.occurrences\"\n                  >\n                    Occurrences\n                  </span>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </bb-input-radio-group-ui>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"item?.frequency !== frequencyValues.Once && item?.endType !== endTypes.Never && item?.startDate\">\n    <bb-alert-ui modifier=\"info\" title=\"\">\n      <span class=\"bb-text-bold\" *ngIf=\"item?.endType === endTypes.After\" data-role=\"estimated-end-date-label\">\n        <span\n          i18n=\"Estimated end date|Label for estimated end date section@@billpay.bb-schedule-ui.label.estimated.date\"\n        >\n          Estimated end date {{ getEstimatedEndDate() | date: 'longDate' }}\n        </span>\n      </span>\n      <span class=\"bb-text-bold\" *ngIf=\"item?.endType === endTypes.On\">\n        <ng-container\n          i18n=\"\n            Estimated payment in total|Label for estimated payment in total\n            section@@billpay.bb-schedule-ui.label.estimated.occurs\"\n        >\n          { getEstimatedOccurs(), plural, =1 { {{ getEstimatedOccurs() }} payment in total } other {\n          {{ getEstimatedOccurs() }} payments in total }}\n        </ng-container>\n      </span>\n    </bb-alert-ui>\n  </div>\n  <div class=\"bb-block bb-block--md\" [hidden]=\"item?.frequency == frequencyValues.Once\">\n    <label\n      data-role=\"notify-me-label\"\n      class=\"bb-text-bold\"\n      i18n=\"\n        Notify me section name|Label for the section notify containing checkboxes @@billpay.bb-schedule-ui.label.notify\"\n    >\n      Notify me\n    </label>\n    <div>\n      <div class=\"bb-block bb-block--xs\">\n        <bb-input-checkbox-ui\n          [id]=\"'alertPendingCheckbox'\"\n          label=\"When a payment is pending\"\n          i18n-label=\"When a payment is pending|Checkbox Label@@bb-input-checkbox-ui.checkbox.label.pending\"\n          formControlName=\"alertPendingCheckbox\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n      <div class=\"bb-block bb-block--xs\">\n        <bb-input-checkbox-ui\n          [id]=\"'alertSentCheckbox'\"\n          label=\"When a payment has been sent\"\n          i18n-label=\"When a payment has been sent|Checkbox Label@@bb-input-checkbox-ui.checkbox.label.sent\"\n          formControlName=\"alertSentCheckbox\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n      <div>\n        <bb-input-checkbox-ui\n          [id]=\"'alertLastPendingCheckbox'\"\n          label=\"When the last payment is pending\"\n          i18n-label=\"When the last payment is pending|Checkbox Label@@bb-input-checkbox-ui.checkbox.label.last-pending\"\n          formControlName=\"alertLastPendingCheckbox\"\n        >\n        </bb-input-checkbox-ui>\n      </div>\n    </div>\n  </div>\n</div>\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\nimport { Account, Address, EbillSummary, PayeeSummary, PaymentService } from '@backbase/data-ang/billpay';\n\nimport {\n  AccountNumberFormat,\n  accountNumberFullFormat,\n  accountNumberMaskedFormat,\n  BillpayPaymentScheduleService,\n  EndTypes,\n  formControlOptions,\n  frequencies,\n  PaymentType,\n  PaymentAmount,\n  RECURRING_PAYMENT,\n  ONE_OFF_PAYMENT,\n  Frequency,\n  FrequencyKeys,\n  PaymentFormState,\n  PaymentServicesTypes,\n  Schedule,\n  PaymentServiceRadio,\n  BillpayUtilityService as Utility,\n} from '@backbase/billpay-journeys-common';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ProductSelectorComponent } from '@backbase/ui-ang/product-selector';\n\n@Component({\n  selector: 'bb-billpay-payment-form',\n  templateUrl: './billpay-payment-form.component.html',\n})\nexport class BillpayPaymentFormComponent implements OnInit, OnDestroy, AfterViewInit {\n  /**\n   * Array of payee summary details.\n   */\n  @Input() payeeSummaries: PayeeSummary[] | undefined;\n  /**\n   * Array of user's accounts.\n   */\n  @Input() accounts: Account[] | undefined;\n  /**\n   * Identifier for the payee that is currently selected to be paid from.\n   */\n  @Input() selectedPayeeId = '';\n  /**\n   * Details of the payment form.\n   */\n  @Input() paymentState: PaymentFormState | undefined;\n  /**\n   * Identifier for the payment when the form is an edit payment.\n   */\n  @Input() paymentId = '';\n  /**\n   * Whether the account number should be masked. Defaults to true.\n   */\n  @Input() accountNumberMask = true;\n\n  /**\n   * The type of the payment.\n   */\n  @Input() paymentType?: PaymentType;\n  /**\n   * Activates edit payment elements. Defaults to false.\n   */\n  @Input() isEditPayment = false;\n  /**\n   * get the payment details title preference. default to 'Payment details'.\n   */\n  @Input() paymentDetailsTitle = 'Payment details';\n\n  /**\n   * get the payment default currency preference. default to 'USD'.\n   */\n  @Input() paymentDefaultCurrency = 'USD';\n  /**\n   * Frequencies for schedule\n   */\n  private _frequencies?: Frequency[];\n  @Input() set frequencies(value: Frequency[] | undefined) {\n    this._frequencies = value;\n  }\n  get frequencies(): Array<Frequency> | undefined {\n    const isEditRecurring = this.isEditPayment && this.paymentType === RECURRING_PAYMENT;\n    const usableFrequencies = this._frequencies ? this._frequencies : frequencies;\n    return isEditRecurring ? usableFrequencies.filter(freq => freq.value !== FrequencyKeys.Once) : usableFrequencies;\n  }\n\n  @ViewChild('fromAccount') fromAccount!: ProductSelectorComponent;\n\n  @Output() submitPayment = new EventEmitter();\n  @Output() cancelPayment = new EventEmitter();\n  @Output() valueChanged = new EventEmitter<void>();\n\n  /**\n   * Payment form group\n   */\n  paymentForm: FormGroup = this.fb.group({});\n  /**\n   * Flag to display if payment is submitted\n   */\n  formSubmitted = false;\n  ebillSummary: EbillSummary | undefined;\n  defaultAmount!: PaymentAmount;\n  readonly minDate$ = new BehaviorSubject<string>(this.scheduleService.today);\n  readonly selectedAccount$ = new BehaviorSubject<Account | undefined>(undefined);\n  readonly selectedPayee$ = new BehaviorSubject<PayeeSummary | undefined>(undefined);\n  private readonly destroy$ = new Subject<void>();\n  /**\n   * Maximum occurrences for the number of occurrences input box.\n   */\n  readonly maxOccurs = 999;\n  /**\n   * Minimum occurrences for the number of occurrences input box.\n   */\n  readonly minOccurs = 1;\n  /**\n   * unique key used for ids\n   */\n  readonly id = Utility.generateId();\n\n  /** @internal */\n  constructor(private readonly fb: FormBuilder, private readonly scheduleService: BillpayPaymentScheduleService) {}\n\n  ngOnInit() {\n    this.defaultAmount = {\n      amount: '',\n      currency: this.paymentDefaultCurrency,\n      type: undefined,\n    };\n    this.selectedAccount$.next(this.defaultAccountFrom);\n    this.selectedPayee$.next(this.defaultPayeeTo);\n    if (this.defaultPayeeTo) {\n      this.ebillSummary = this.defaultPayeeTo.ebill;\n    }\n    this.minDate$.next(\n      this.scheduleService.estimatedPaymentServiceDate(\n        this.defaultPayeeTo && this.defaultPayeeTo.paymentServices,\n        PaymentServicesTypes.Regular,\n      ),\n    );\n    this.createForm();\n    this.proccessPaymentServiceValueChanges();\n    this.proccessFrequencyValueChanges();\n\n    this.paymentForm.valueChanges.pipe(takeUntil(this.destroy$), take(1)).subscribe(() => {\n      this.valueChanged.emit();\n    });\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      if (this.fromAccount) {\n        this.fromAccount.dropdownToggle.nativeElement.focus();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  cancel() {\n    this.cancelPayment.emit();\n  }\n\n  get defaultPaymentServiceType(): PaymentServicesTypes {\n    const payee = this.selectedPayee$.getValue();\n    return (\n      ((this.paymentState &&\n        payee &&\n        this.paymentState.payeeTo.id === payee.id &&\n        this.paymentState.schedule &&\n        this.paymentState.schedule.paymentService &&\n        this.paymentState.schedule.paymentService.index) as PaymentServicesTypes) || PaymentServicesTypes.Regular\n    );\n  }\n\n  get accountNumberFormatConfig(): AccountNumberFormat {\n    return this.accountNumberMask ? accountNumberMaskedFormat : accountNumberFullFormat;\n  }\n\n  get ebillPayment(): boolean {\n    return !!(\n      !this.isEditPayment &&\n      this.ebillSummary &&\n      this.ebillSummary.latestBill &&\n      this.ebillSummary.latestBill.status === 'UNPAID' &&\n      (!this.ebillSummary.status || this.ebillSummary.status === 'ACTIVE')\n    );\n  }\n\n  get frequencyKeys() {\n    return FrequencyKeys;\n  }\n\n  get schedule() {\n    return this.paymentForm?.controls['schedule'].value;\n  }\n\n  get amountGroup() {\n    return this.paymentForm?.get('amount');\n  }\n\n  get startDateControl() {\n    return this.paymentForm.get('schedule.startDate');\n  }\n\n  get endDateControl() {\n    return this.paymentForm.get('schedule.endDate');\n  }\n\n  get scheduleLabelData(): Schedule {\n    const schedule = this.schedule;\n    return {\n      ...schedule,\n      endDate: schedule.endType === EndTypes.On ? schedule.endDate : undefined,\n      repeat: schedule.endType === EndTypes.After ? schedule.repeat : undefined,\n    };\n  }\n\n  private get defaultAccountFrom(): Account | undefined {\n    return this.paymentState && this.paymentState.accountFrom ? this.paymentState.accountFrom : this.accounts?.[0];\n  }\n\n  private get defaultPayeeTo(): PayeeSummary | undefined {\n    return this.paymentState?.payeeTo\n      ? this.paymentState.payeeTo\n      : this.payeeSummaries && this.payeeSummaries.find(acc => acc.id === this.selectedPayeeId);\n  }\n\n  private getOvernightAddress(payee: PayeeSummary): Address | undefined {\n    return (this.hasOvernightCheck(payee.paymentServices) && payee.overnightDeliveryAddress) || undefined;\n  }\n\n  private hasOvernightCheck(services: PaymentService[] | undefined): boolean {\n    return !!services?.find((item: PaymentService) => item.paymentServiceType === PaymentServicesTypes.Overnight);\n  }\n\n  private get defaultOvernightAddressState(): Address {\n    const payee = this.selectedPayee$.getValue() || ({} as PayeeSummary);\n    const address = this.getOvernightAddress(payee) || ({} as Address);\n    return {\n      address1: address.address1 || '',\n      address2: address.address2 || '',\n      city: address.city || '',\n      state: address.state,\n      postalCode: address.postalCode || '',\n    };\n  }\n\n  private get defaultFormState(): PaymentFormState {\n    const payee = this.selectedPayee$.getValue() || ({} as PayeeSummary);\n    const paymentPayeeService =\n      payee.paymentServices &&\n      payee.paymentServices.find((item: PaymentService) => item.paymentServiceType === this.defaultPaymentServiceType);\n    const paymentPayeeServiceDate =\n      !this.paymentState || this.paymentState.schedule.frequency === this.frequencyKeys.Once\n        ? payee.paymentServices &&\n          this.scheduleService.estimatedPaymentServiceDate(payee.paymentServices, this.defaultPaymentServiceType)\n        : undefined;\n\n    const {\n      paymentId,\n      accountFrom = this.selectedAccount$.getValue() || ({} as Account),\n      payeeTo = payee,\n      amount = this.defaultAmount,\n      memo = '',\n      overnightDeliveryAddress = this.defaultOvernightAddressState,\n      schedule: {\n        frequency = this.findDefaultFrequency(),\n        startDate = this.minDate$.getValue(),\n        endDate = this.minDate$.getValue(),\n        repeat = 1,\n        endType = EndTypes.Never,\n        paymentService = this.getDefaultPaymentService(paymentPayeeService),\n        paymentServiceDate = paymentPayeeServiceDate,\n        alertPendingCheckbox = false,\n        alertSentCheckbox = false,\n        alertLastPendingCheckbox = false,\n      } = {},\n    } = this.paymentState || ({} as PaymentFormState);\n    return {\n      paymentId,\n      accountFrom,\n      payeeTo,\n      amount,\n      memo,\n      overnightDeliveryAddress,\n      schedule: {\n        frequency,\n        startDate,\n        endDate,\n        repeat,\n        endType,\n        paymentService,\n        paymentServiceDate,\n        alertPendingCheckbox,\n        alertSentCheckbox,\n        alertLastPendingCheckbox,\n      },\n    };\n  }\n\n  private proccessPaymentServiceValueChanges() {\n    const paymentServiceControl = this.paymentForm.get('schedule.paymentService');\n    const overnightAddressControl = this.paymentForm.controls['overnightDeliveryAddress'];\n    if (paymentServiceControl && overnightAddressControl) {\n      paymentServiceControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(val => {\n        if (val.service.paymentServiceType === PaymentServicesTypes.Overnight) {\n          overnightAddressControl.enable(formControlOptions);\n        } else {\n          overnightAddressControl.disable(formControlOptions);\n        }\n      });\n    }\n  }\n\n  private proccessFrequencyValueChanges() {\n    const frequencyControl = this.paymentForm.get('schedule.frequency');\n    const overnightAddressControl = this.paymentForm.controls['overnightDeliveryAddress'];\n    if (frequencyControl && overnightAddressControl) {\n      frequencyControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(val => {\n        if (val.value !== FrequencyKeys.Once) {\n          overnightAddressControl.disable(formControlOptions);\n        }\n      });\n    }\n  }\n\n  private createOvernightAddressFormGroup(): FormGroup {\n    const overnightAddress = this.defaultFormState.overnightDeliveryAddress || ({} as Address);\n    const paymentService = this.defaultFormState.schedule.paymentService;\n    const isOvernightAddressDisabled =\n      !paymentService ||\n      !paymentService.service ||\n      !paymentService.service.paymentServiceType ||\n      paymentService.service.paymentServiceType !== PaymentServicesTypes.Overnight;\n    return this.fb.group({\n      address1: [\n        {\n          value: overnightAddress.address1,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      address2: [\n        {\n          value: overnightAddress.address2,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      city: [\n        {\n          value: overnightAddress.city,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      state: [\n        {\n          value: overnightAddress.state,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      postalCode: [\n        {\n          value: overnightAddress.postalCode,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n    });\n  }\n\n  private createScheduleFormGroup(): FormGroup {\n    const initState = this.defaultFormState;\n    const paymentService = initState.schedule.paymentService;\n    const isEndDateDisabled = initState.schedule.endType !== EndTypes.On;\n    const isRepeatDisabled = initState.schedule.endType !== EndTypes.After;\n    const isStartDateDisabled = !!(\n      paymentService &&\n      paymentService.index !== PaymentServicesTypes.Other &&\n      initState.schedule.frequency === this.frequencyKeys.Once\n    );\n\n    //@TODO Replace startDate, endDate validators after fix angular issues\n    //https://github.com/angular/angular/issues/13461#issuecomment-502674629\n    //https://github.com/angular/angular/issues/10567\n    return this.fb.group({\n      frequency: [initState.schedule.frequency],\n      startDate: [\n        {\n          value: this.scheduleService.getLocalISODate(initState.schedule.startDate),\n          disabled: isStartDateDisabled,\n        },\n        [Validators.required, this.minDateValidator(this.minDate$.getValue())],\n      ],\n      endDate: [\n        {\n          value: this.scheduleService.getLocalISODate(initState.schedule.endDate as string),\n          disabled: isEndDateDisabled,\n        },\n        [Validators.required, this.minDateValidator(this.minDate$.getValue())],\n      ],\n      repeat: [{ value: initState.schedule.repeat, disabled: isRepeatDisabled }],\n      endType: [initState.schedule.endType],\n      paymentService: [initState.schedule.paymentService],\n      paymentServiceDate: [\n        {\n          value: initState.schedule.paymentServiceDate,\n          disabled: !isStartDateDisabled,\n        },\n      ],\n      alertPendingCheckbox: [initState.schedule.alertPendingCheckbox],\n      alertSentCheckbox: [initState.schedule.alertSentCheckbox],\n      alertLastPendingCheckbox: [initState.schedule.alertLastPendingCheckbox],\n    });\n  }\n\n  createForm(): void {\n    const initState = this.defaultFormState;\n    const amount = initState.amount.amount?.toString() || undefined;\n    this.paymentForm = this.fb.group({\n      paymentId: [this.paymentId],\n      accountFrom: [initState.accountFrom],\n      payeeTo: [initState.payeeTo],\n      amount: this.fb.group({\n        amount: [amount],\n        currency: [initState.amount.currency],\n        type: [initState.amount.type],\n      }),\n      memo: [initState.memo],\n      overnightDeliveryAddress: this.createOvernightAddressFormGroup(),\n      schedule: this.createScheduleFormGroup(),\n    });\n    this.setValidators();\n  }\n\n  amountValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value.amount || +control.value.amount <= 0) {\n      return {\n        amountInvalid: false,\n      };\n    } else {\n      // eslint-disable-next-line no-null/no-null\n      return null;\n    }\n  }\n\n  isInvalidControl(control: FormControl): boolean {\n    return this.formSubmitted && control.invalid && control.touched;\n  }\n\n  private minDateValidator(minDate: string): ValidatorFn {\n    return (fg: AbstractControl): ValidationErrors | null => {\n      if (!fg.value) {\n        // eslint-disable-next-line no-null/no-null\n        return null;\n      }\n      if (new Date(fg.value).setHours(0, 0, 0, 0) < new Date(minDate).setHours(0, 0, 0, 0)) {\n        return {\n          pastDate: true,\n        };\n      } else {\n        // eslint-disable-next-line no-null/no-null\n        return null;\n      }\n    };\n  }\n\n  private notEmptyObjectValidator(control: AbstractControl): ValidationErrors | null {\n    // eslint-disable-next-line no-null/no-null\n    return Object.keys(control.value).length ? null : { notEmptyObject: false };\n  }\n\n  private processFormData(data: PaymentFormState): PaymentFormState {\n    switch (data.schedule.endType) {\n      case EndTypes.After:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            endDate: new Date(\n              this.scheduleService.estimatedEndDate(\n                data.schedule.startDate,\n                data.schedule.frequency,\n                data.schedule.repeat,\n              ),\n            ).toISOString(),\n          },\n        };\n      case EndTypes.On:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            repeat: this.scheduleService.estimatedOccurences(\n              data.schedule.startDate,\n              data.schedule.endDate || data.schedule.startDate,\n              data.schedule.frequency,\n            ),\n          },\n        };\n      default:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            ...(!data.schedule.startDate &&\n              this.defaultFormState.schedule.startDate && { startDate: this.defaultFormState.schedule.startDate }),\n          },\n        };\n    }\n  }\n\n  private setValidators() {\n    ([\n      ['accountFrom', [this.notEmptyObjectValidator]],\n      ['payeeTo', [this.notEmptyObjectValidator]],\n      ['amount', [Validators.required, this.amountValidator]],\n      ['schedule.repeat', [Validators.required, Validators.min(this.minOccurs), Validators.max(this.maxOccurs)]],\n      ['overnightDeliveryAddress.address1', [Validators.required, Validators.maxLength(40)]],\n      ['overnightDeliveryAddress.address2', [Validators.maxLength(40)]],\n      ['overnightDeliveryAddress.city', [Validators.required, Validators.maxLength(32)]],\n      ['overnightDeliveryAddress.state', [Validators.required]],\n      ['overnightDeliveryAddress.postalCode', [Validators.required, Validators.pattern(/^\\d{5}(\\d{4})?$/)]],\n    ] as [string, ValidatorFn[]][]).forEach(([controlName, validators]) => {\n      const control = this.paymentForm.get(controlName);\n      if (control) {\n        control.setValidators(validators);\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  handleSubmit(): void {\n    if (!this.formSubmitted) {\n      this.formSubmitted = true;\n    }\n    if (this.paymentForm.valid) {\n      this.submitPayment.emit(this.processFormData(this.paymentForm.value));\n    }\n    this.paymentForm.markAllAsTouched();\n  }\n\n  selectAccount(account: Account | undefined): void {\n    this.selectedAccount$.next(account);\n    this.paymentForm.controls['accountFrom'].setValue(account);\n  }\n\n  private setOvernightAddress(payee: PayeeSummary | undefined) {\n    const control = this.paymentForm.controls['overnightDeliveryAddress'];\n    if (payee?.overnightDeliveryAddress && this.hasOvernightCheck(payee.paymentServices)) {\n      control.setValue({\n        address1: payee.overnightDeliveryAddress.address1,\n        address2: payee.overnightDeliveryAddress.address2 || '',\n        city: payee.overnightDeliveryAddress.city,\n        state: payee.overnightDeliveryAddress.state,\n        postalCode: payee.overnightDeliveryAddress.postalCode,\n      });\n    } else {\n      control.reset();\n    }\n  }\n\n  selectPayee(payee: PayeeSummary | undefined): void {\n    this.selectedPayee$.next(payee);\n    this.paymentForm.controls['payeeTo'].setValue(payee);\n    this.minDate$.next(\n      this.scheduleService.estimatedPaymentServiceDate(payee && payee.paymentServices, PaymentServicesTypes.Regular),\n    );\n\n    if (this.startDateControl && this.endDateControl) {\n      this.startDateControl.setValue(this.minDate$.getValue());\n      this.endDateControl.setValue(this.minDate$.getValue());\n    }\n\n    this.setOvernightAddress(payee);\n\n    if (payee) {\n      this.ebillSummary = payee.ebill;\n    }\n    if (this.amountGroup) {\n      this.amountGroup.patchValue({ amount: ' ', type: undefined });\n    }\n  }\n\n  private getDefaultPaymentService(paymentService?: PaymentService): PaymentServiceRadio {\n    return {\n      index:\n        this.isEditPayment && this.paymentType === ONE_OFF_PAYMENT\n          ? PaymentServicesTypes.Other\n          : paymentService?.paymentServiceType || '',\n      service: paymentService,\n    };\n  }\n\n  private findDefaultFrequency(): FrequencyKeys {\n    let defaultFrequency: Frequency | undefined;\n\n    switch (this.paymentType) {\n      case ONE_OFF_PAYMENT: {\n        defaultFrequency = this.frequencies?.find(item => item.value === FrequencyKeys.Once);\n        break;\n      }\n      case RECURRING_PAYMENT: {\n        defaultFrequency = this.frequencies?.find(item => item.value === FrequencyKeys.Monthly);\n        break;\n      }\n    }\n\n    if (defaultFrequency === undefined) {\n      defaultFrequency = this.frequencies?.[0] || { value: FrequencyKeys.Once, name: '' };\n    }\n\n    return defaultFrequency.value as FrequencyKeys;\n  }\n}\n","<form data-role=\"payment-form\" [formGroup]=\"paymentForm\" (ngSubmit)=\"handleSubmit()\">\n  <!-- Payee To edit Label -->\n  <ng-container *ngIf=\"isEditPayment\">\n    <div class=\"bb-block bb-block--lg\">\n      <bb-header-ui\n        *ngIf=\"selectedPayee$ | async as payee\"\n        data-role=\"payee-to-edit-header\"\n        headingType=\"h1\"\n        heading=\"Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }}\"\n        i18n-heading=\"Payment to|Payee to edit label@@billpay-manage-payment.payee-to.edit.header\"\n      ></bb-header-ui>\n    </div>\n  </ng-container>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <!-- Account From -->\n      <ng-container *ngTemplateOutlet=\"paymentFormAccountFrom\"> </ng-container>\n\n      <!-- Payee To -->\n      <ng-container *ngTemplateOutlet=\"paymentFormPayeeTo\"> </ng-container>\n\n      <!-- Payment details -->\n      <ng-container *ngTemplateOutlet=\"formDetails\"> </ng-container>\n\n      <!-- Payment overnight delivery address -->\n      <ng-container *ngTemplateOutlet=\"formOvernightAddress\"> </ng-container>\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          i18n=\"Make payment button|Button text to make a payment@@bb-billpay-payment-form.button.submit\"\n          data-role=\"button-submit\"\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Continue\n        </button>\n        <button\n          bbButton\n          i18n=\"Make payment cancel button|Button text to make cancel a payment@@bb-billpay-payment-form.button.cancel\"\n          data-role=\"cancel-payment-button\"\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          (click)=\"cancel()\"\n          color=\"link\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n\n<ng-template #paymentFormAccountFrom>\n  <bb-fieldset-ui class=\"bb-block bb-block--lg\" data-role=\"account-from-selected\">\n    <label\n      data-role=\"select-account-label\"\n      aria-live=\"polite\"\n      class=\"bb-label\"\n      i18n=\"From|From section title@@billpay-manage-payment.section.from\"\n    >\n      From\n    </label>\n    <bb-product-selector-ui #fromAccount>\n      <ng-container bbDropdownToggle *ngIf=\"selectedAccount$ | async as selectedAccount\">\n        <bb-product-item-basic-account-ui\n          *ngIf=\"selectedAccount\"\n          [title]=\"selectedAccount.accountNickName\"\n          [productNumber]=\"selectedAccount.accountNumber\"\n          [productNumberFormat]=\"accountNumberFormatConfig\"\n          [amount]=\"selectedAccount.accountBalance?.amount\"\n          [currency]=\"selectedAccount.accountBalance?.currencyCode\"\n          [highlight]=\"false\"\n          [active]=\"false\"\n          data-role=\"account-from-selected-toggle\"\n          class=\"bb-text-align-left\"\n        >\n        </bb-product-item-basic-account-ui>\n\n        <div\n          *ngIf=\"!selectedAccount\"\n          data-role=\"select-account-option\"\n          i18n-aria-label=\"\n            Account selector aria label|Aria label to show when no account is being\n            selected@@bb-billpay-manage-payment.account.placeholder.label\"\n          aria-label=\"Select a debit account\"\n          i18n=\"\n            Account selector placeholder|Text to show when no account is being\n            selected@@bb-billpay-manage-payment.payee.placeholder\"\n          class=\"bb-text-align-left\"\n        >\n          Select an account\n        </div>\n      </ng-container>\n      <ng-container bbDropdownMenu>\n        <button\n          #listItem\n          bbButton\n          class=\"bb-product-selector__dropdown-item\"\n          color=\"unstyled\"\n          [block]=\"true\"\n          *ngFor=\"let account of accounts\"\n          (click)=\"selectAccount(account)\"\n          data-role=\"account-item\"\n        >\n          <bb-product-item-basic-account-ui\n            [title]=\"account.accountNickName\"\n            [productNumber]=\"account.accountNumber\"\n            [productNumberFormat]=\"accountNumberFormatConfig\"\n            [amount]=\"account.accountBalance?.amount\"\n            [currency]=\"account.accountBalance?.currencyCode\"\n            [highlight]=\"false\"\n            [active]=\"false\"\n            class=\"bb-stack__item bb-stack__item--fill bb-text-align-left\"\n            role=\"menuitem\"\n          >\n          </bb-product-item-basic-account-ui>\n        </button>\n      </ng-container>\n    </bb-product-selector-ui>\n    <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"isInvalidControl(paymentForm?.get('accountFrom'))\">\n      <span\n        *ngIf=\"!paymentForm?.get('accountFrom')?.errors?.notEmptyObject\"\n        i18n=\"Account from required error message@@bb-billpay-payment-form.error.account-from\"\n        data-role=\"invalid-account-from\"\n        >Please select an account</span\n      >\n    </bb-input-validation-message-ui>\n  </bb-fieldset-ui>\n</ng-template>\n\n<ng-template #paymentFormPayeeTo>\n  <bb-fieldset-ui *ngIf=\"!isEditPayment\" data-role=\"payee-to-product-selector\" class=\"bb-block bb-block--lg\">\n    <label\n      data-role=\"select-payee-label\"\n      aria-live=\"polite\"\n      class=\"bb-label\"\n      i18n=\"To|To section title@@billpay-manage-payment.section.to\"\n    >\n      To\n    </label>\n    <bb-product-selector-ui>\n      <ng-container bbDropdownToggle>\n        <ng-container *ngIf=\"selectedPayee$ | async as selectedPayee; else selectPauee\">\n          <bb-product-item-current-account-ui\n            *ngIf=\"selectedPayee\"\n            [title]=\"selectedPayee.nickName || selectedPayee.name\"\n            [mainSectionTitle]=\"(selectedPayee.nickName && selectedPayee.name) || ''\"\n            [highlight]=\"false\"\n            data-role=\"payee-to-selected-toggle\"\n            [active]=\"false\"\n            class=\"bb-text-align-left\"\n          >\n            <ng-template bbCustomProductItemCurrentAccountMainSection let-mainSectionTitle=\"mainSectionTitle\">\n              <div>\n                <span class=\"bb-text-support bb-subtitle\">{{ mainSectionTitle }}</span>\n              </div>\n            </ng-template>\n          </bb-product-item-current-account-ui>\n        </ng-container>\n        <ng-template #selectPauee>\n          <div\n            data-role=\"select-payee-label\"\n            class=\"bb-text-align-left\"\n            i18n=\"\n              Payee selector placeholder|Text to show when no payee is being\n              selected@@bb-billpay-manage-payment.payee.placeholder\"\n          >\n            Select a payee\n          </div>\n        </ng-template>\n      </ng-container>\n      <ng-container bbDropdownMenu>\n        <button\n          #listItem\n          bbButton\n          class=\"bb-product-selector__dropdown-item\"\n          color=\"unstyled\"\n          [block]=\"true\"\n          *ngFor=\"let payee of payeeSummaries\"\n          (click)=\"selectPayee(payee)\"\n          data-role=\"payee-item\"\n        >\n          <bb-product-item-current-account-ui\n            [title]=\"payee.nickName || payee.name\"\n            [mainSectionTitle]=\"(payee.nickName && payee.name) || ''\"\n            [highlight]=\"false\"\n            [active]=\"false\"\n            class=\"bb-stack__item bb-stack__item--fill bb-text-align-left\"\n            role=\"menuitem\"\n          >\n            <ng-template bbCustomProductItemCurrentAccountMainSection let-mainSectionTitle=\"mainSectionTitle\">\n              <div>\n                <span class=\"bb-text-support bb-subtitle\">\n                  {{ mainSectionTitle }}\n                </span>\n              </div>\n            </ng-template>\n          </bb-product-item-current-account-ui>\n        </button>\n      </ng-container>\n    </bb-product-selector-ui>\n    <bb-input-validation-message-ui role=\"alert\" [showErrors]=\"isInvalidControl(paymentForm?.get('payeeTo'))\">\n      <span\n        *ngIf=\"!paymentForm?.get('payeeTo')?.errors?.notEmptyObject\"\n        i18n=\"Payee to required error message@@bb-billpay-payment-form.error.payee-to\"\n        data-role=\"invalid-payee-to\"\n      >\n        Please select a payee\n      </span>\n    </bb-input-validation-message-ui>\n  </bb-fieldset-ui>\n</ng-template>\n\n<ng-template #formDetails>\n  <fieldset class=\"bb-fieldset\" data-role=\"payment-details-fieldset\" *ngIf=\"selectedPayee$ | async\">\n    <legend class=\"bb-fieldset__heading border-bottom\">\n      <div class=\"bb-block bb-block--sm\">\n        <span i18n=\"Payment details|text for the 'payment details' payment@@bb-billpay-payment-form.payment-details\">{{\n          paymentDetailsTitle\n        }}</span>\n        <span\n          *ngIf=\"ebillPayment\"\n          class=\"bb-text-support bb-text-default\"\n          i18n=\"\n            Payment description Due|text for the 'payment description'\n            payment@@bb-billpay-payment-form.payment-description\"\n        >\n          - { paymentForm?.get('amount')?.value?.type, select, Due { eBill due amount } Minimum { eBill minimum amount }\n          Balance { eBill total amount } other { eBill custom amount } }\n        </span>\n      </div>\n    </legend>\n    <div class=\"bb-block bb-block--md\" *ngIf=\"ebillPayment\">\n      <bb-billpay-ebill-payment\n        [control]=\"amountGroup\"\n        [eBillDefaultCurrency]=\"paymentDefaultCurrency\"\n        [latestBill]=\"ebillSummary?.latestBill\"\n        [isSubmitted]=\"formSubmitted\"\n      ></bb-billpay-ebill-payment>\n    </div>\n\n    <div class=\"bb-block bb-block--md\" [formGroup]=\"amountGroup\" *ngIf=\"!ebillPayment\">\n      <label\n        class=\"bb-label\"\n        data-role=\"payment-amount-label\"\n        for=\"{{ 'billpay-amount-input-' + id }}\"\n        i18n=\"Amount of payment|ext for the 'payment details' amount@@bb-billpay-payment-form.payment-details.amount\"\n        >Amount</label\n      >\n      <div class=\"bb-form-field bb-form-field--md\">\n        <bb-amount-input-ui\n          formControlName=\"amount\"\n          data-role=\"amount\"\n          [id]=\"'billpay-amount-input-' + id\"\n          [autoDecimal]=\"true\"\n          wrapperClasses=\"bb-amount-input__field--large\"\n          [currency]=\"(selectedAccount$ | async)?.accountBalance?.currencyCode || defaultAmount.currency\"\n          placeholder=\"0.00\"\n          aria-describedby=\"{{ 'billpay-amount-errors-' + id }}\"\n        >\n        </bb-amount-input-ui>\n      </div>\n      <bb-input-validation-message-ui\n        role=\"alert\"\n        id=\"{{ 'billpay-amount-errors-' + id }}\"\n        [showErrors]=\"isInvalidControl(paymentForm?.get('amount'))\"\n      >\n        <span\n          *ngIf=\"!paymentForm?.get('amount')?.errors?.amountInvalid\"\n          i18n=\"Please add amount of this payment|Error zero amount@@bb-billpay-payment-form.error.amount\"\n          data-role=\"invalid-amount\"\n        >\n          Please add amount of this payment.\n        </span>\n      </bb-input-validation-message-ui>\n    </div>\n\n    <div class=\"bb-fieldset\" [formGroup]=\"paymentForm\">\n      <label class=\"bb-label\" data-role=\"add-memo-label\" for=\"bb-billpay-payment-form-memo\">\n        <span i18n=\"Memo label|Label for payment memo@@bb-billpay-payment-form.label.memo\">Payment description</span>\n        <span class=\"bb-text-support\" i18n=\"label helper|optional text@@bb-billpay-payment-form.label.memo-helper\">\n          (Optional)</span\n        >\n      </label>\n      <div class=\"bb-form-field bb-form-field--md\">\n        <bb-textarea-ui\n          [id]=\"'bb-billpay-payment-form-memo'\"\n          formControlName=\"memo\"\n          data-role=\"memo\"\n          placeholder=\"Enter payment description\"\n          i18n-placeholder=\"\n            Enter payment description|Placeholder for payment description@@bb-billpay-payment-form.payment.description\"\n          [showCharCounter]=\"true\"\n          [maxLength]=\"140\"\n          [rows]=\"2\"\n        >\n        </bb-textarea-ui>\n      </div>\n    </div>\n\n    <!-- Payment scheduler -->\n    <bb-collapsible-ui\n      *ngIf=\"(selectedPayee$ | async) && (!isEditPayment || paymentType !== 'oneOff'); else editOneOffPaymentSchedule\"\n      data-role=\"schedule-toggle\"\n      [isOpen]=\"true\"\n    >\n      <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n        <div class=\"border-bottom bb-block bb-block--md\">\n          <button\n            bbButton\n            class=\"bb-stack bb-product-selector__item-content\"\n            (click)=\"toggle()\"\n            type=\"button\"\n            color=\"unstyled\"\n          >\n            <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-left\">\n              <div class=\"bb-block bb-block--sm\">\n                <span\n                  class=\"bb-heading-2\"\n                  data-role=\"schedule-section-title\"\n                  i18n=\"\n                    Schedule section title|Title of the form section with payment schedule\n                    fields@@bb-billpay-payment-form.section.schedule.title\"\n                >\n                  Schedule\n                </span>\n                <span class=\"bb-text-support bb-text-default\">\n                  <bb-schedule-label-ui\n                    [item]=\"scheduleLabelData\"\n                    [frequencies]=\"frequencies\"\n                    [minOccurrences]=\"minOccurs\"\n                    [isSingleTransfer]=\"schedule.frequency === frequencyKeys.Once\"\n                  >\n                  </bb-schedule-label-ui>\n                </span>\n              </div>\n            </div>\n            <bb-icon-ui\n              class=\"bb-stack__item\"\n              cropped\n              data-role=\"schedule-toggle-icon\"\n              aria-label=\"Schedule toggle\"\n              i18n-aria-label=\"\n                Schedule toggle label|Aria label for schedule\n                toggle@@bb-billpay-payment-form.bb-schedule-ui.label.toggle\"\n              [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"\n            ></bb-icon-ui>\n          </button>\n        </div>\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <bb-schedule-ui\n          [scheduleForm]=\"paymentForm.get('schedule')\"\n          [paymentServices]=\"(selectedPayee$ | async)?.paymentServices\"\n          [defaultPaymentServiceType]=\"defaultPaymentServiceType\"\n          [frequencies]=\"frequencies\"\n          [minOccurs]=\"minOccurs\"\n          [maxOccurs]=\"maxOccurs\"\n          [minDate]=\"minDate$ | async\"\n          [formSubmitted]=\"formSubmitted\"\n          data-role=\"payment-schedule\"\n        >\n        </bb-schedule-ui>\n      </ng-template>\n    </bb-collapsible-ui>\n\n    <ng-template #editOneOffPaymentSchedule>\n      <div *ngIf=\"selectedPayee$ | async\" class=\"bb-block bb-block--md\" [formGroup]=\"paymentForm.get('schedule')\">\n        <label class=\"bb-label\" data-role=\"deliver-payment-by-date\">\n          <span\n            id=\"billpay-schedule-end-date-on-{{ id }}\"\n            i18n=\"Deliver payment by label|Edit one off payment date@@bb-billpay-payment-form.label.deliver-payment-by\"\n            >Deliver payment by</span\n          >\n          <div>\n            <bb-input-datepicker-ui\n              formControlName=\"startDate\"\n              [minDate]=\"minDate$ | async\"\n              data-role=\"once-start-date-calendar\"\n              aria-label=\"start-date\"\n              aria-labelledby=\"billpay-schedule-end-date-on-{{ id }}\"\n              datepickerDescribedby=\"billpay-schedule-end-date-on-error-{{ id }}\"\n            ></bb-input-datepicker-ui>\n          </div>\n          <bb-input-validation-message-ui\n            id=\"billpay-schedule-end-date-on-error-{{ id }}\"\n            aria-live=\"polite\"\n            [showErrors]=\"paymentForm.get('schedule.startDate')?.invalid && formSubmitted\"\n          >\n            <span\n              *ngIf=\"paymentForm.get('schedule.startDate')?.hasError('required')\"\n              i18n=\"\n                Execution date required error text|Error required message for Execution date input\n                field@@bb-billpay-payment-form.error.required.startDate\"\n              data-role=\"missing-schedule-execution-date\"\n            >\n              Execution date is required.\n            </span>\n            <span\n              *ngIf=\"\n                paymentForm.get('schedule.startDate')?.hasError('pastDate') ||\n                paymentForm.get('schedule.startDate')?.hasError('dateLessThanMinDate')\n              \"\n              i18n=\"\n                Execution date past date error text |Error past date message for Execution date input\n                field@@bb-billpay-payment-form.error.pastDate.startDate\"\n              data-role=\"past-date-schedule-execution-date\"\n            >\n              Execution date cannot be before delivery date.\n            </span>\n            <span\n              *ngIf=\"paymentForm?.get('schedule.startDate')?.hasError('invalidDateFormat')\"\n              i18n=\"\n                Execution date invalid date error text |Error invalid date format message for Execution date input\n                field@@bb-billpay-payment-form.error.invalidDateFormat\"\n              data-role=\"invalid-date-schedule-execution-date\"\n            >\n              Invalid date format.\n            </span>\n          </bb-input-validation-message-ui>\n        </label>\n      </div>\n    </ng-template>\n  </fieldset>\n</ng-template>\n\n<ng-template #formOvernightAddress>\n  <ng-container\n    *ngIf=\"schedule.paymentService?.service?.paymentServiceType === 'OVERNIGHT_CHECK'\"\n    [formGroup]=\"paymentForm\"\n  >\n    <bb-fieldset-ui\n      i18n-heading=\"\n        Overnight check address|Text for the payment overnight\n        address@@bb-billpay-payment-form.payment-overnight-address\"\n      heading=\"Overnight check address\"\n      class=\"bb-block bb-block-xl\"\n    >\n      <bb-alert-ui\n        modifier=\"info\"\n        class=\"d-block\"\n        title=\"This address might be a dedicated PO box for overnight payments. Please check with your biller\"\n        i18n-title=\"alert title|Address alert@@bb-billpay-payment-form.payment-overnight-address.alert\"\n        data-role=\"overnight-alert-message\"\n      >\n      </bb-alert-ui>\n      <bb-billpay-address-form\n        [formGroup]=\"paymentForm.get('overnightDeliveryAddress')\"\n        formGroupName=\"overnightDeliveryAddress\"\n      ></bb-billpay-address-form>\n    </bb-fieldset-ui>\n  </ng-container>\n</ng-template>\n","import { Component, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-billpay-payment-discard-changes-modal',\n  templateUrl: './billpay-payment-discard-changes-modal.component.html',\n})\nexport class BillpayPaymentDiscardChangesModalComponent {\n  /**\n   * Modal title.\n   */\n  @Input() title?: string;\n  /**\n   * Modal subtitle.\n   */\n  @Input() subtitle?: string;\n  /**\n   * Modal confirm button text.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('confirm-button-label') confirmButtonLabel?: string;\n  /**\n   * Modal cancel button text.\n   */\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('cancel-button-label') cancelButtonLabel?: string;\n\n  @Output() resolve = new EventEmitter<boolean>();\n\n  cancelModal() {\n    this.resolve.emit(false);\n  }\n\n  confirmModal() {\n    this.resolve.emit(true);\n  }\n}\n","<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"discard-payment-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        data-role=\"discard-payment-modal-header\"\n        headingType=\"h2\"\n        heading=\"{{ title }}\"\n        i18n-heading=\"Discard payment modal header@@billpay.payment-discard-changes.modal.header\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span\n        i18n=\"Discard payment modal body@@billpay.payment-discard-changes.modal.body\"\n        data-role=\"discard-payment-modal-body\"\n        >{{ subtitle }}</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"confirmModal()\"\n          data-role=\"discard-payment-modal-confirm-button\"\n          i18n=\"\n            Confirm button|Discard payment modal footer button@@billpay.payment-discard-changes.modal.footer.confirm\"\n        >\n          {{ confirmButtonLabel }}\n        </button>\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"bb-button-bar__button\"\n          (click)=\"cancelModal()\"\n          data-role=\"discard-payment-modal-cancel-button\"\n          i18n=\"Cancel button|Discard payment modal footer button@@billpay.payment-discard-changes.modal.footer.cancel\"\n        >\n          {{ cancelButtonLabel }}\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport { BillPayAccountsGetResponseBody, BillPayPayeesSummaryGetResponseBody } from '@backbase/data-ang/billpay';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  Frequency,\n  LoadingState,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PaymentRouteParams } from '../../../model/route.model';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'bb-billpay-payment-form-container',\n  templateUrl: './billpay-payment-form-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentFormContainerComponent implements OnInit, BillpayDiscardChangesFormComponent {\n  paymentRouteObservable$: Observable<PaymentRouteParams>;\n  paymentDataObservable$:\n    | Observable<(BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody) | undefined>\n    | undefined;\n\n  private isFormTouched = false;\n  @Input() frequencies?: Frequency[];\n\n  /** @internal */\n  constructor(\n    private readonly routerService: PayBillsNavigationService,\n    private readonly paymentDataService: BillpayPaymentDataService,\n    private readonly paymentStateService: PayBillsStateService,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private readonly route: ActivatedRoute,\n  ) {\n    this.paymentRouteObservable$ = this.routerService.routeParams;\n  }\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  @Input() accountNumberMasked?: boolean;\n  @Input() paymentDetailsTitle?: string;\n  @Input() paymentDefaultCurrency?: string;\n\n  ngOnInit() {\n    this.paymentDataObservable$ = combineLatest([\n      this.paymentRouteObservable$,\n      this.paymentDataService.getPayeesAndAccounts(),\n    ]).pipe(map(([routeParams, payeeSummariesAndAccounts]) => ({ ...routeParams, ...payeeSummariesAndAccounts })));\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if ((this.isFormTouched || this.paymentStateService.isFormProcessing) && !this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  hasNoErrorState(data: BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody) {\n    return (\n      this.payeesLoadingState !== LoadingState.Error &&\n      this.accountsLoadingState !== LoadingState.Error &&\n      !!data.accounts &&\n      !!data.payeeSummaries\n    );\n  }\n\n  onSubmittedFormData(data: PaymentFormState) {\n    this.paymentStateService.isFormProcessing = true;\n    this.paymentStateService.updatePaymentState([data]);\n    this.routerService.navigateToReview({ relativeTo: this.route.parent });\n  }\n\n  get paymentState() {\n    return this.paymentStateService.paymentState.pipe(map((state: PaymentFormState[] | undefined) => state?.[0]));\n  }\n\n  get payeesLoadingState() {\n    return this.paymentDataService.payeesLoadingState;\n  }\n\n  get accountsLoadingState() {\n    return this.paymentDataService.accountsLoadingState;\n  }\n\n  openModal(): Observable<boolean> {\n    return this.isFormTouched || this.paymentStateService.isFormProcessing\n      ? this.discardModalService.openModal()\n      : of(true);\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  onFormValueChanged() {\n    this.isFormTouched = true;\n  }\n\n  onCancelForm() {\n    this.routerService.navigateToPayeeList();\n  }\n}\n","<ng-container *ngIf=\"paymentDataObservable$ | async as paymentData; else loadingState\">\n  <ng-container *ngIf=\"hasNoErrorState(paymentData); else errorState\">\n    <section>\n      <bb-billpay-payment-form\n        *ngIf=\"paymentData.pageType === 'new'\"\n        [payeeSummaries]=\"paymentData?.payeeSummaries\"\n        [accounts]=\"paymentData?.accounts\"\n        [selectedPayeeId]=\"paymentData.payeeId\"\n        (submitPayment)=\"onSubmittedFormData($event)\"\n        (valueChanged)=\"onFormValueChanged()\"\n        (cancelPayment)=\"onCancelForm()\"\n        [paymentState]=\"paymentState | async\"\n        [accountNumberMask]=\"accountNumberMasked\"\n        [isEditPayment]=\"false\"\n        [paymentType]=\"paymentData.paymentType\"\n        [paymentDetailsTitle]=\"paymentDetailsTitle\"\n        [paymentDefaultCurrency]=\"paymentDefaultCurrency\"\n        [frequencies]=\"frequencies\"\n      >\n      </bb-billpay-payment-form>\n    </section>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-loading-indicator-ui loaderSize=\"lg\" data-role=\"loading-state\"> </bb-loading-indicator-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-empty-state-ui\n        data-role=\"error-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"error\"\n        subtitle=\"Try to reload the page or contact support\"\n        i18n-subtitle=\"\n          Try to reload the page or contact support|Payment loading error\n          subtitle@@bb-billpay-manage-payment-widget-ang.loading.subtitle\"\n        title=\"Payment information is not loading\"\n        i18n-title=\"\n          Payment information is not loading|Payment loading error\n          title@@bb-billpay-manage-payment-widget-ang.loading.title\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-create-form-page-discard-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Cancel payment?\"\n  i18n-title=\"Discard changes modal header@@billpay.manage-payment.discard-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel this payment? You will lose any details entered.\"\n  i18n-subtitle=\"Discard changes modal body@@billpay.manage-payment.discard-changes-modal.body\"\n  confirm-button-label=\"Cancel payment\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.discard-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue with payment\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.discard-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n","import { Component, ViewChild } from '@angular/core';\nimport { BillpayPaymentFormContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-form-container/billpay-payment-form-container.component';\nimport { Observable } from 'rxjs';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-stack\">\n      <div class=\"bb-block bb-block--sm bb-stack__item bb-stack__item--fill\">\n        <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n          <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n          <span i18n=\"button label|Back button@@pay-bills-journey.payee-list.back\">Back to Payee List</span>\n        </button>\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Make a payment\"\n          i18n-heading=\"@@pay-bills-journey.title.make-a-payment\"\n          data-role=\"pay-a-bill-journey-title\"\n        >\n        </bb-header-ui>\n        <p i18n=\"@@pay-bills-journey.pay-payee.header-description\" data-role=\"multiple-bills-widget-title-info\">\n          Add payees if you would like to pay a single bill or multiple bills\n        </p>\n      </div>\n    </div>\n    <bb-billpay-payment-form-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [paymentDetailsTitle]=\"config.paymentDetailsTitle\"\n      [paymentDefaultCurrency]=\"config.paymentDefaultCurrency\"\n      [frequencies]=\"config.frequencies\"\n      #paymentFormContainer\n    ></bb-billpay-payment-form-container>\n  `,\n})\nexport class BillpayPaymentFormViewComponent {\n  @ViewChild('paymentFormContainer') child!: BillpayPaymentFormContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n\n  goBack() {\n    this.routerService.navigateToPayeeList();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentParserService,\n  PaymentFormState,\n  PaymentReview,\n  Frequency,\n  BillpayPaymentDataService,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-payment-review-container',\n  templateUrl: './billpay-payment-review-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentReviewContainerComponent implements OnInit, OnDestroy, BillpayDiscardChangesFormComponent {\n  payment?: PaymentFormState;\n  paymentReview?: PaymentReview;\n  private readonly paymentConfirm$ = new BehaviorSubject<PaymentFormState | undefined>(undefined);\n  private readonly componentDestroyed$ = new Subject<void>();\n  @Input() frequencies?: Frequency[];\n  @Input() dismissTimeoutValue: number | undefined;\n  @Input() accountNumberMasked?: boolean;\n  paymentError = false;\n  hasDateError = false;\n  frequencyLabel?: string;\n  private editMode = false;\n\n  @ViewChild('notificationMessage') notificationMessageTemplate: TemplateRef<any> | string = '';\n  @ViewChild('notificationHeader') notificationHeaderTemplate: TemplateRef<any> | string = '';\n  @ViewChild('failAlert') failAlert!: ElementRef;\n\n  /** @internal */\n  constructor(\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly dataService: BillpayPaymentDataService,\n    private readonly stateService: PayBillsStateService,\n    private readonly notificationService: NotificationService,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private readonly paymentParserService: BillpayPaymentParserService,\n    private readonly route: ActivatedRoute,\n    private cdRef: ChangeDetectorRef,\n  ) {}\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  private get dismissTimeout(): number {\n    if (this.dismissTimeoutValue === undefined) {\n      throw new Error('Dismiss timeout value not found');\n    }\n    return this.dismissTimeoutValue;\n  }\n\n  ngOnInit() {\n    this.stateService.paymentState.pipe(take(1)).subscribe(payment => {\n      this.payment = payment?.[0];\n      this.paymentReview = this.payment && this.paymentParserService.paymentFormStateToReview(this.payment);\n      const frequency = this.frequencies?.find(freq => this.payment?.schedule?.frequency === freq.value);\n      this.frequencyLabel = frequency?.name || '';\n      if (!this.payment) {\n        this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n      }\n    });\n    this.paymentConfirm$\n      .pipe(takeUntil(this.componentDestroyed$), filter(Boolean))\n      .subscribe(payment => this.onPaymentConfirm(payment as PaymentFormState));\n  }\n\n  ngOnDestroy(): void {\n    this.componentDestroyed$.next();\n    this.componentDestroyed$.complete();\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if (!this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  onEdit() {\n    this.editMode = true;\n    this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n  }\n\n  navigateToPayments() {\n    this.navigationService.navigateToPayments();\n  }\n\n  cancel() {\n    this.navigationService.navigateToPayeeList();\n  }\n\n  confirmPayment(payment?: PaymentFormState) {\n    if (!payment) return;\n    this.paymentConfirm$.next(payment);\n  }\n\n  openModal(): Observable<boolean> {\n    return this.paymentConfirm$.pipe(\n      switchMap(payment => (payment || this.editMode ? of(true) : this.discardModalService.openModal())),\n      tap(isResolved => isResolved && !this.editMode && this.stateService.reset()),\n    );\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  private onPaymentConfirm(payment: PaymentFormState) {\n    this.paymentError = false;\n    this.hasDateError = false;\n    this.dataService\n      .createPayment(payment)\n      .pipe(takeUntil(this.componentDestroyed$))\n      .subscribe(\n        () => {\n          this.navigationService.navigateToPayeeList();\n          this.notificationService.showNotification({\n            header: this.notificationHeaderTemplate,\n            message: this.notificationMessageTemplate,\n            modifier: 'success',\n            ttl: this.dismissTimeout,\n          });\n        },\n        response => {\n          this.paymentError = true;\n          this.hasDateError = response.error?.errors?.some((a: any) => a.key === 'billpay.api.invalidPaymentDate');\n          this.cdRef.markForCheck();\n          this.failAlert.nativeElement.scrollIntoView(false);\n        },\n      );\n  }\n}\n","<ng-container *ngIf=\"payment\">\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block--xl\">\n        <ng-container *ngTemplateOutlet=\"reviewContent\"></ng-container>\n      </div>\n      <ng-container *ngTemplateOutlet=\"reviewButtons\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #reviewContent>\n  <div #failAlert>\n    <bb-alert-ui\n      title=\"Failed to submit payment. Please try again later.\"\n      i18n-title=\"Failed to submit payment|Title for payment error@@billpay-payment-review-container.error-alert\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-message\"\n      *ngIf=\"paymentError && !hasDateError\"\n    >\n    </bb-alert-ui>\n    <bb-alert-ui\n      title=\"The date selected is invalid.\"\n      i18n-title=\"\n        Failed to submit payment date|Title for payment date error@@billpay-payment-review-container.error-date-alert\"\n      message=\"The payment cannot be scheduled on this date. Please select another date in the previous step.\"\n      i18n-message=\"Date payment error|Date error for payment@@billpay-payment-review.date-error-alert.message\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-date-message\"\n      *ngIf=\"paymentError && hasDateError\"\n    >\n    </bb-alert-ui>\n  </div>\n  <bb-billpay-payment-review-card\n    [accountNumberMask]=\"accountNumberMasked\"\n    [paymentReview]=\"paymentReview\"\n    [frequencyLabel]=\"frequencyLabel\"\n  >\n  </bb-billpay-payment-review-card>\n</ng-template>\n\n<ng-template #reviewButtons>\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"confirm-payment-button\"\n      i18n=\"Payment details confirm button|Label for confirm payment button@@billpay-payment-review.confirm\"\n      (click)=\"confirmPayment(payment)\"\n      class=\"bb-button-bar__button\"\n    >\n      Submit\n    </button>\n    <button\n      bbButton\n      data-role=\"edit-payment-button\"\n      i18n=\"Payment details edit button|Label for edit payment button@@billpay-payment-review.edit\"\n      (click)=\"onEdit()\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n    >\n      Edit\n    </button>\n    <button\n      bbButton\n      data-role=\"cancel-payment-button\"\n      i18n=\"Payment details cancel button|Label for cancel payment button@@billpay-payment-review.cancel\"\n      (click)=\"cancel()\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n    >\n      Discard\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationMessage>\n  <ng-container *ngIf=\"payment?.payeeTo as payee\">\n    <span\n      i18n=\"\n        payment notification message|Payment confirmation success notification\n        message@@billpay-payment-review.confirm.notification.message\"\n      >Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }} has been scheduled\n      successfully</span\n    >\n    <div class=\"bb-button-bar\">\n      <button\n        bbButton\n        data-role=\"notification-secondary-button\"\n        class=\"bb-button-bar__button\"\n        (click)=\"navigateToPayments()\"\n        i18n=\"\n          payment notification button|Navigate to scheduled payments@@billpay-payment-review.confirm.notification.button\"\n      >\n        View scheduled payments\n      </button>\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      payment notification header|Payment confirmation success notification\n      header@@billpay-payment-review.confirm.notification.header\"\n    >Payment scheduled</span\n  >\n</ng-template>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-review-page-discard-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Cancel payment?\"\n  i18n-title=\"Discard changes modal header@@billpay.manage-payment.discard-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel this payment? You will lose any details entered.\"\n  i18n-subtitle=\"Discard changes modal body@@billpay.manage-payment.discard-changes-modal.body\"\n  confirm-button-label=\"Cancel payment\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.discard-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue with payment\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.discard-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n","import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentReviewContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-review-container/billpay-payment-review-container.component';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-stack\">\n      <div class=\"bb-block bb-block--sm bb-stack__item bb-stack__item--fill\">\n        <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n          <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n          <span i18n=\"button label|Back button@@pay-bills-journey.payee-list.back\">Back to Payee List</span>\n        </button>\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Review your payment\"\n          i18n-heading=\"@@pay-bills-journey.title.make-a-payment\"\n          data-role=\"pay-a-bill-journey-review-title\"\n        >\n        </bb-header-ui>\n      </div>\n    </div>\n    <bb-billpay-payment-review-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [dismissTimeoutValue]=\"config.notificationDismissTime\"\n      [frequencies]=\"config.frequencies\"\n      #paymentReviewContainer\n    ></bb-billpay-payment-review-container>\n  `,\n})\nexport class BillpayPaymentReviewViewComponent {\n  @ViewChild('paymentReviewContainer') child!: BillpayPaymentReviewContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayeeList();\n  }\n}\n","import { HostListener, OnDestroy, Directive, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, shareReplay, take, takeUntil } from 'rxjs/operators';\nimport { BillPayAccountsGetResponseBody, BillPayPayeesSummaryGetResponseBody } from '@backbase/data-ang/billpay';\n\nimport { PayBillsStateService } from '../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\n\n@Directive()\nexport abstract class BasePaymentEditFormContainerDirective implements OnDestroy, BillpayDiscardChangesFormComponent {\n  readonly id$: Observable<string>;\n  readonly payeesAndAccounts$: Observable<BillPayPayeesSummaryGetResponseBody & BillPayAccountsGetResponseBody>;\n\n  protected readonly destroy$ = new Subject<void>();\n  private isFormTouched = false;\n\n  @Input() accountNumberMasked?: boolean;\n  @Input() paymentDetailsTitle?: string;\n\n  abstract onPaymentSubmitted(payment: PaymentFormState, id: string): void;\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if ((this.isFormTouched || this.stateService.isFormProcessing) && !this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  /** @internal */\n  protected constructor(\n    protected readonly dataService: BillpayPaymentDataService,\n    protected readonly stateService: PayBillsStateService,\n    private readonly route: ActivatedRoute,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    readonly routerService: PayBillsNavigationService,\n  ) {\n    this.id$ = this.route.paramMap.pipe(\n      take(1),\n      map(params => params.get('id') || ''),\n    );\n\n    this.payeesAndAccounts$ = this.dataService.getPayeesAndAccounts().pipe(shareReplay(1), takeUntil(this.destroy$));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  openModal(): Observable<boolean> {\n    return this.isFormTouched || this.stateService.isFormProcessing ? this.discardModalService.openModal() : of(true);\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  onFormValueChanged() {\n    this.isFormTouched = true;\n  }\n\n  onCancelForm() {\n    this.routerService.navigateToPayeeList();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, combineLatest, of } from 'rxjs';\n\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  BillpayPaymentParserService,\n  Frequency,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\n\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { BasePaymentEditFormContainerDirective } from '../../../directives/base-payment-edit-form-container.model';\n\n@Component({\n  selector: 'bb-billpay-payment-recurring-edit-form-container',\n  templateUrl: './billpay-payment-recurring-edit-form-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentRecurringEditFormContainerComponent\n  extends BasePaymentEditFormContainerDirective\n  implements OnInit {\n  paymentRecurringState$?: Observable<PaymentFormState | PaymentFormState[]>;\n  hasLoadingError = false;\n  private activatedRoute?: ActivatedRoute;\n\n  @Input() frequencies?: Frequency[];\n\n  /** @internal */\n  constructor(\n    dataService: BillpayPaymentDataService,\n    stateService: PayBillsStateService,\n    route: ActivatedRoute,\n    discardModalService: BillpayDiscardChangesModalService,\n    readonly routerService: PayBillsNavigationService,\n    private readonly parserService: BillpayPaymentParserService,\n  ) {\n    super(dataService, stateService, route, discardModalService, routerService);\n    this.activatedRoute = route;\n  }\n\n  ngOnInit() {\n    this.paymentRecurringState$ = combineLatest([\n      this.id$,\n      this.stateService.paymentState.pipe(map((state?: PaymentFormState[]) => state?.[0])),\n      this.payeesAndAccounts$,\n    ]).pipe(\n      switchMap(([id, state, data]) => {\n        return (\n          (state && of(state)) ||\n          this.dataService.getRecurringPayment(id).pipe(\n            map(\n              payment =>\n                payment &&\n                data?.payeeSummaries &&\n                this.parserService.paymentRecurringToFormState(payment, data.payeeSummaries),\n            ),\n            catchError(() => {\n              this.hasLoadingError = true;\n              return of({} as PaymentFormState);\n            }),\n          )\n        );\n      }),\n    );\n  }\n\n  onPaymentSubmitted(data: PaymentFormState, id: string) {\n    this.stateService.isFormProcessing = true;\n    this.stateService.updatePaymentState([data]);\n    this.routerService.navigateToEditRecurringReview(id, { relativeTo: this.activatedRoute?.parent });\n  }\n}\n","<ng-container\n  *ngIf=\"{\n    state: paymentRecurringState$ | async,\n    payeeSummaries: (payeesAndAccounts$ | async)?.payeeSummaries,\n    accounts: (payeesAndAccounts$ | async)?.accounts,\n    paymentId: id$ | async\n  } as data\"\n>\n  <ng-container *ngIf=\"data.state; else loadingState\">\n    <ng-container *ngIf=\"!hasLoadingError; else errorState\">\n      <bb-billpay-payment-form\n        [payeeSummaries]=\"data.payeeSummaries\"\n        [accounts]=\"data.accounts\"\n        [selectedPayeeId]=\"data.state?.payeeTo?.id\"\n        [paymentState]=\"data.state\"\n        [isEditPayment]=\"true\"\n        [paymentType]=\"'recurring'\"\n        (cancelPayment)=\"onCancelForm()\"\n        [accountNumberMask]=\"accountNumberMasked\"\n        (submitPayment)=\"onPaymentSubmitted($event, data.paymentId)\"\n        (valueChanged)=\"onFormValueChanged()\"\n        [paymentDetailsTitle]=\"paymentDetailsTitle\"\n        [frequencies]=\"frequencies\"\n      >\n      </bb-billpay-payment-form>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #loadingState>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-loading-indicator-ui loaderSize=\"lg\" data-role=\"loading-state\"> </bb-loading-indicator-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"error\"\n          subtitle=\"Try to reload the page or contact support\"\n          i18n-subtitle=\"\n            Try to reload the page or contact support|Payee List loading\n            subtitle@@bb-billpay-manage-payment-widget-ang.loading.subtitle\"\n          title=\"Payment information is not loading\"\n          i18n-title=\"\n            Payment information is not loading|Form List loading\n            title@@bb-billpay-manage-payment-widget-ang.loading.title\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <bb-billpay-payment-discard-changes-modal\n    *ngIf=\"isDiscardModalOpen\"\n    data-role=\"billpay-payment-edit-review-page-lose-changes-modal\"\n    (resolve)=\"onModalResolve($event)\"\n    title=\"Lose changes?\"\n    i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n    subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n    i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n    confirm-button-label=\"Lose changes\"\n    i18n-confirm-button-label=\"\n      confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n    cancel-button-label=\"Continue editing\"\n    i18n-cancel-button-label=\"\n      cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n  ></bb-billpay-payment-discard-changes-modal>\n</ng-container>\n","import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentRecurringEditFormContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-recurring-edit-form-container/billpay-payment-recurring-edit-form-container.component';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-block\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n        <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n        <span i18n=\"button label|Back button@@pay-bills-journey.payments-list.back\">Back to payments list</span>\n      </button>\n    </div>\n    <bb-billpay-payment-recurring-edit-form-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [paymentDetailsTitle]=\"config.paymentDetailsTitle\"\n      [frequencies]=\"config.frequencies\"\n      #paymentRecurringEditForm\n    ></bb-billpay-payment-recurring-edit-form-container>\n  `,\n})\nexport class BillpayPaymentRecurringEditFormViewComponent {\n  @ViewChild('paymentRecurringEditForm') child!: BillpayPaymentRecurringEditFormContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayments();\n  }\n}\n","import { HostListener, OnDestroy, OnInit, TemplateRef, ViewChild, Directive, Input, ElementRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport { filter, first, map, switchMap, take, takeUntil, tap } from 'rxjs/operators';\n\nimport { PayBillsStateService } from '../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentParserService,\n  PaymentFormState,\n  PaymentReview,\n} from '@backbase/billpay-journeys-common';\n\n@Directive()\nexport abstract class BasePaymentEditReviewContainerDirective\n  implements OnInit, OnDestroy, BillpayDiscardChangesFormComponent {\n  payment?: PaymentFormState;\n  paymentReview?: PaymentReview;\n  readonly id$: Observable<string>;\n  paymentError = false;\n  hasDateError = false;\n\n  protected readonly paymentConfirm$ = new BehaviorSubject<PaymentFormState | undefined>(undefined);\n  protected readonly destroy$ = new Subject<void>();\n\n  @Input() dismissTimeoutValue: number | undefined;\n  @Input() accountNumberMasked?: boolean;\n\n  @ViewChild('notificationMessage') notificationMessageTemplate: TemplateRef<any> | string = '';\n  @ViewChild('notificationHeader') notificationHeaderTemplate: TemplateRef<any> | string = '';\n  @ViewChild('failAlert') failAlert!: ElementRef;\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if (!this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  abstract navigateToForm(id: string): void;\n  protected abstract onPaymentConfirm(payment: PaymentFormState, id: string): void;\n\n  /** @internal */\n  protected constructor(\n    private readonly route: ActivatedRoute,\n    private readonly stateService: PayBillsStateService,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private readonly paymentParserService: BillpayPaymentParserService,\n    readonly routerService: PayBillsNavigationService,\n  ) {\n    this.id$ = this.route.paramMap.pipe(\n      first(),\n      map(params => params.get('id') || ''),\n    );\n  }\n\n  ngOnInit() {\n    combineLatest([this.stateService.paymentState, this.id$])\n      .pipe(take(1))\n      .subscribe(([payment, id]: [PaymentFormState[] | undefined, string]) => {\n        this.payment = payment?.[0];\n        this.paymentReview = this.payment && this.paymentParserService.paymentFormStateToReview(this.payment);\n        if (!this.payment) {\n          this.navigateToForm(id);\n        }\n      });\n\n    combineLatest([this.paymentConfirm$.pipe(filter(Boolean)), this.id$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([payment, id]) => this.onPaymentConfirm(payment as PaymentFormState, id));\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  confirmPayment(payment?: PaymentFormState) {\n    if (!payment) return;\n    this.paymentConfirm$.next(payment);\n  }\n\n  openModal(): Observable<boolean> {\n    return this.paymentConfirm$.pipe(\n      switchMap(payment => (payment ? of(true) : this.discardModalService.openModal())),\n      tap(isResolved => isResolved && this.stateService.reset()),\n    );\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  cancel() {\n    this.routerService.navigateToPayeeList();\n  }\n\n  protected get dismissTimeout(): number {\n    if (this.dismissTimeoutValue === undefined) {\n      throw new Error('Dismiss timeout value not found');\n    }\n    return this.dismissTimeoutValue;\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  BillpayPaymentParserService,\n  PaymentFormState,\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n} from '@backbase/billpay-journeys-common';\nimport { BasePaymentEditReviewContainerDirective } from '../../../directives/base-payment-edit-review-container.model';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-payment-recurring-edit-review-container',\n  templateUrl: './billpay-payment-recurring-edit-review-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentRecurringEditReviewContainerComponent extends BasePaymentEditReviewContainerDirective {\n  private readonly activatedRoute?: ActivatedRoute;\n\n  /** @internal */\n  constructor(\n    route: ActivatedRoute,\n    stateService: PayBillsStateService,\n    discardModalService: BillpayDiscardChangesModalService,\n    paymentParserService: BillpayPaymentParserService,\n    routerService: PayBillsNavigationService,\n    private readonly dataService: BillpayPaymentDataService,\n    private readonly notificationService: NotificationService,\n    private cdRef: ChangeDetectorRef,\n  ) {\n    super(route, stateService, discardModalService, paymentParserService, routerService);\n    this.activatedRoute = route;\n  }\n\n  navigateToForm(id: string) {\n    this.routerService.navigateToEditRecurringForm(id, { relativeTo: this.activatedRoute?.parent });\n  }\n\n  protected onPaymentConfirm(payment: PaymentFormState, id: string) {\n    this.paymentError = false;\n    this.hasDateError = false;\n    this.dataService\n      .updatePaymentRecurring(payment, id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => {\n          this.routerService.navigateToPayments();\n          this.notificationService.showNotification({\n            header: this.notificationHeaderTemplate,\n            message: this.notificationMessageTemplate,\n            modifier: 'success',\n            ttl: this.dismissTimeout,\n          });\n        },\n        response => {\n          this.paymentError = true;\n          this.hasDateError = response.error?.errors?.some((a: any) => a.key === 'billpay.api.invalidPaymentDate');\n\n          this.cdRef.markForCheck();\n          this.failAlert.nativeElement.scrollIntoView(false);\n        },\n      );\n  }\n}\n","<ng-container *ngIf=\"payment\">\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block--xl\">\n        <ng-container *ngTemplateOutlet=\"recurringEditReviewContent\"></ng-container>\n      </div>\n\n      <ng-container *ngTemplateOutlet=\"recurringEditReviewButtons\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-edit-form-page-lose-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Lose changes?\"\n  i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n  i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n  confirm-button-label=\"Lose changes\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue editing\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n\n<ng-template #recurringEditReviewContent let-payment>\n  <div #failAlert>\n    <bb-alert-ui\n      title=\"Failed to submit payment. Please try again later.\"\n      i18n-title=\"Failed to submit payment|Title for payment error@@billpay-payment-review-container.error-alert\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-message\"\n      *ngIf=\"paymentError && !hasDateError\"\n    >\n    </bb-alert-ui>\n    <bb-alert-ui\n      title=\"The date selected is invalid.\"\n      i18n-title=\"\n        Failed to submit payment date|Title for payment date error@@billpay-payment-review-container.error-date-alert\"\n      message=\"The payment cannot be scheduled on this date. Please select another date in the previous step.\"\n      i18n-message=\"Date payment error|Date error for payment@@billpay-payment-review.date-error-alert.message\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-date-message\"\n      *ngIf=\"paymentError && hasDateError\"\n    >\n    </bb-alert-ui>\n  </div>\n  <bb-billpay-payment-review-card [accountNumberMask]=\"accountNumberMasked\" [paymentReview]=\"paymentReview\">\n  </bb-billpay-payment-review-card>\n</ng-template>\n\n<ng-template #recurringEditReviewButtons>\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"confirm-payment-button\"\n      i18n=\"\n        Payment details confirm button|Label for confirm payment recurring\n        button@@billpay-payment-recurring-review.confirm\"\n      (click)=\"confirmPayment(payment)\"\n      class=\"bb-button-bar__button\"\n    >\n      Confirm payment\n    </button>\n    <button\n      *ngIf=\"id$ | async as paymentId\"\n      bbButton\n      data-role=\"edit-payment-button\"\n      i18n=\"\n        Payment details edit button|Label for edit payment payment recurring\n        button@@billpay-payment-recurring-review.edit\"\n      (click)=\"navigateToForm(paymentId)\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n    >\n      Edit payment\n    </button>\n    <button\n      bbButton\n      data-role=\"cancel-payment-button\"\n      i18n=\"\n        Payment details cancel button|Label for cancel payment payment recurring\n        button@@billpay-payment-recurring-review.cancel\"\n      (click)=\"cancel()\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n    >\n      Cancel\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationMessage>\n  <ng-container *ngIf=\"payment?.payeeTo as payee\">\n    <span\n      i18n=\"\n        payment notification message|Payment confirmation success notification\n        message@@billpay-payment-recurring-review.confirm.notification.message\"\n      >Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }} has been edited\n      successfully</span\n    >\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      payment notification header|Payment confirmation success notification\n      header@@billpay-payment-recurring-review.confirm.notification.header\"\n    >Payment edited</span\n  >\n</ng-template>\n","import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentRecurringEditReviewContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-recurring-edit-review-container/billpay-payment-recurring-edit-review-container.component';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-block\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n        <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n        <span i18n=\"button label|Back button@@pay-bills-journey.payments-list.back\">Back to payments list</span>\n      </button>\n    </div>\n    <bb-billpay-payment-recurring-edit-review-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [dismissTimeoutValue]=\"config.notificationDismissTime\"\n      #paymentRecurringEditReviewContainer\n    ></bb-billpay-payment-recurring-edit-review-container>\n  `,\n})\nexport class BillpayPaymentRecurringEditReviewViewComponent {\n  @ViewChild('paymentRecurringEditReviewContainer') child!: BillpayPaymentRecurringEditReviewContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayments();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { map, switchMap, catchError } from 'rxjs/operators';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { BasePaymentEditFormContainerDirective } from '../../../directives/base-payment-edit-form-container.model';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  BillpayPaymentParserService,\n  Frequency,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\n\n@Component({\n  selector: 'bb-billpay-payment-one-off-edit-form-container',\n  templateUrl: './billpay-payment-one-off-edit-form-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentOneOffEditFormContainerComponent\n  extends BasePaymentEditFormContainerDirective\n  implements OnInit {\n  paymentOneOffState$?: Observable<PaymentFormState>;\n  hasLoadingError = false;\n  @Input() frequencies?: Frequency[];\n  private activatedRoute?: ActivatedRoute;\n\n  /** @internal */\n  constructor(\n    dataService: BillpayPaymentDataService,\n    stateService: PayBillsStateService,\n    route: ActivatedRoute,\n    discardModalService: BillpayDiscardChangesModalService,\n    readonly routerService: PayBillsNavigationService,\n    private readonly parserService: BillpayPaymentParserService,\n  ) {\n    super(dataService, stateService, route, discardModalService, routerService);\n    this.activatedRoute = route;\n  }\n\n  ngOnInit() {\n    this.paymentOneOffState$ = combineLatest([\n      this.id$,\n      this.stateService.paymentState.pipe(map((state?: PaymentFormState[]) => state?.[0])),\n      this.payeesAndAccounts$,\n    ]).pipe(\n      switchMap(([id, state, payeesAndAccounts]) =>\n        state\n          ? of(state)\n          : this.dataService.getOneOffPayment(id).pipe(\n              map(\n                payment =>\n                  payment &&\n                  payeesAndAccounts.payeeSummaries &&\n                  this.parserService.paymentOneOffToFormState(payment, payeesAndAccounts.payeeSummaries),\n              ),\n              catchError(() => {\n                this.hasLoadingError = true;\n                return of({} as PaymentFormState);\n              }),\n            ),\n      ),\n    );\n  }\n\n  onPaymentSubmitted(payment: PaymentFormState, id: string) {\n    this.stateService.isFormProcessing = true;\n    this.stateService.updatePaymentState([payment]);\n    this.routerService.navigateToEditOneOffReview(id, { relativeTo: this.activatedRoute?.parent });\n  }\n}\n","<ng-container\n  *ngIf=\"{\n    state: paymentOneOffState$ | async,\n    paymentId: id$ | async,\n    accounts: (payeesAndAccounts$ | async)?.accounts,\n    payeeSummaries: (payeesAndAccounts$ | async)?.payeeSummaries\n  } as data\"\n>\n  <ng-container *ngIf=\"data.state; else loadingState\">\n    <ng-container *ngIf=\"!hasLoadingError; else errorState\">\n      <bb-billpay-payment-form\n        [payeeSummaries]=\"data.payeeSummaries\"\n        [accounts]=\"data.accounts\"\n        [selectedPayeeId]=\"data.state?.payeeTo?.id\"\n        [paymentState]=\"data.state\"\n        [isEditPayment]=\"true\"\n        [paymentType]=\"'oneOff'\"\n        (cancelPayment)=\"onCancelForm()\"\n        [accountNumberMask]=\"accountNumberMasked\"\n        (submitPayment)=\"onPaymentSubmitted($event, data.paymentId)\"\n        (valueChanged)=\"onFormValueChanged()\"\n        [paymentDetailsTitle]=\"paymentDetailsTitle\"\n        [frequencies]=\"frequencies\"\n      >\n      </bb-billpay-payment-form>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #loadingState>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-loading-indicator-ui loaderSize=\"lg\" data-role=\"loading-state\"> </bb-loading-indicator-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #errorState>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"error\"\n          subtitle=\"Try to reload the page or contact support\"\n          i18n-subtitle=\"\n            Try to reload the page or contact support|Payee List loading\n            subtitle@@bb-billpay-manage-payment-widget-ang.loading.subtitle\"\n          title=\"Payment information is not loading\"\n          i18n-title=\"\n            Payment information is not loading|Form List loading\n            title@@bb-billpay-manage-payment-widget-ang.loading.title\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-template>\n\n  <bb-billpay-payment-discard-changes-modal\n    *ngIf=\"isDiscardModalOpen\"\n    data-role=\"billpay-payment-edit-form-page-lose-changes-modal\"\n    (resolve)=\"onModalResolve($event)\"\n    title=\"Lose changes?\"\n    i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n    subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n    i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n    confirm-button-label=\"Lose changes\"\n    i18n-confirm-button-label=\"\n      confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n    cancel-button-label=\"Continue editing\"\n    i18n-cancel-button-label=\"\n      cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n  ></bb-billpay-payment-discard-changes-modal>\n</ng-container>\n","import { Component, ViewChild } from '@angular/core';\nimport { BillpayPaymentOneOffEditFormContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-one-off-edit-form-container/billpay-payment-one-off-edit-form-container.component';\nimport { Observable } from 'rxjs';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-block\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n        <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n        <span i18n=\"button label|Back button@@pay-bills-journey.payments-list.back\">Back to payments list</span>\n      </button>\n    </div>\n    <bb-billpay-payment-one-off-edit-form-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [paymentDetailsTitle]=\"config.paymentDetailsTitle\"\n      [frequencies]=\"config.frequencies\"\n      #paymentOneOffEditForm\n    ></bb-billpay-payment-one-off-edit-form-container>\n  `,\n})\nexport class BillpayPaymentOneOffEditFormViewComponent {\n  @ViewChild('paymentOneOffEditForm') child!: BillpayPaymentOneOffEditFormContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayments();\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  BillpayPaymentParserService,\n  PaymentFormState,\n} from '@backbase/billpay-journeys-common';\n\nimport { BasePaymentEditReviewContainerDirective } from '../../../directives/base-payment-edit-review-container.model';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-payment-one-off-edit-review-container',\n  templateUrl: './billpay-payment-one-off-edit-review-container.component.html',\n  providers: [BillpayDiscardChangesModalService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentOneOffEditReviewContainerComponent extends BasePaymentEditReviewContainerDirective {\n  private readonly activatedRoute?: ActivatedRoute;\n\n  /** @internal */\n  constructor(\n    route: ActivatedRoute,\n    stateService: PayBillsStateService,\n    discardModalService: BillpayDiscardChangesModalService,\n    paymentParserService: BillpayPaymentParserService,\n    readonly routerService: PayBillsNavigationService,\n    private readonly dataService: BillpayPaymentDataService,\n    private readonly notificationService: NotificationService,\n    private cdRef: ChangeDetectorRef,\n  ) {\n    super(route, stateService, discardModalService, paymentParserService, routerService);\n    this.activatedRoute = route;\n  }\n\n  navigateToForm(id: string) {\n    this.routerService.navigateToEditOneOffForm(id, { relativeTo: this.activatedRoute?.parent });\n  }\n\n  protected onPaymentConfirm(payment: PaymentFormState, id: string) {\n    this.paymentError = false;\n    this.hasDateError = false;\n\n    this.dataService\n      .updatePaymentOneOff(payment, id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => {\n          this.routerService.navigateToPayments();\n          this.notificationService.showNotification({\n            header: this.notificationHeaderTemplate,\n            message: this.notificationMessageTemplate,\n            modifier: 'success',\n            ttl: this.dismissTimeout,\n          });\n        },\n        error => {\n          this.paymentError = true;\n          this.hasDateError = error.error?.errors?.some((a: any) => a.key === 'billpay.api.invalidPaymentDate');\n          this.cdRef.detectChanges();\n          this.failAlert.nativeElement.scrollIntoView(false);\n        },\n      );\n  }\n}\n","<ng-container *ngIf=\"payment\">\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <div class=\"bb-block bb-block--xl\">\n        <ng-container *ngTemplateOutlet=\"oneOffEditReviewContent\"></ng-container>\n      </div>\n\n      <ng-container *ngTemplateOutlet=\"oneOffEditReviewButtons\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-edit-review-page-lose-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Lose changes?\"\n  i18n-title=\"Lose changes modal header@@billpay.manage-payment.lose-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel editing this payment? You will lose any changes made.\"\n  i18n-subtitle=\"Lose changes modal body@@billpay.manage-payment.lose-changes-modal.body\"\n  confirm-button-label=\"Lose changes\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.manage-payment.lose-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue editing\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.manage-payment.lose-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n\n<ng-template #oneOffEditReviewContent>\n  <div #failAlert>\n    <bb-alert-ui\n      title=\"Failed to submit payment. Please try again later.\"\n      i18n-title=\"Failed to submit payment|Title for payment error@@billpay-payment-review-container.error-alert\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-message\"\n      *ngIf=\"paymentError && !hasDateError\"\n    >\n    </bb-alert-ui>\n    <bb-alert-ui\n      title=\"The date selected is invalid.\"\n      i18n-title=\"\n        Failed to submit payment date|Title for payment date error@@billpay-payment-review-container.error-date-alert\"\n      message=\"The payment cannot be scheduled on this date. Please select another date in the previous step.\"\n      i18n-message=\"Date payment error|Date error for payment@@billpay-payment-review.date-error-alert.message\"\n      (close)=\"(false)\"\n      modifier=\"error\"\n      data-role=\"failure-date-message\"\n      *ngIf=\"paymentError && hasDateError\"\n    >\n    </bb-alert-ui>\n  </div>\n  <bb-billpay-payment-review-card [accountNumberMask]=\"accountNumberMasked\" [paymentReview]=\"paymentReview\">\n  </bb-billpay-payment-review-card>\n</ng-template>\n\n<ng-template #oneOffEditReviewButtons>\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"confirm-payment-button\"\n      i18n=\"\n        Payment details confirm button|Label for confirm payment oneOff button@@billpay-payment-oneOff-review.confirm\"\n      (click)=\"confirmPayment(payment)\"\n      class=\"bb-button-bar__button\"\n    >\n      Confirm payment\n    </button>\n    <button\n      *ngIf=\"id$ | async as paymentId\"\n      bbButton\n      data-role=\"edit-payment-button\"\n      i18n=\"\n        Payment details edit button|Label for edit payment payment oneOff button@@billpay-payment-oneOff-review.edit\"\n      (click)=\"navigateToForm(paymentId)\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\"\n    >\n      Edit payment\n    </button>\n    <button\n      bbButton\n      data-role=\"cancel-payment-button\"\n      i18n=\"\n        Payment details cancel button|Label for cancel payment payment oneOff\n        button@@billpay-payment-oneOff-review.cancel\"\n      (click)=\"cancel()\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n    >\n      Cancel\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationMessage>\n  <ng-container *ngIf=\"payment?.payeeTo as payee\">\n    <span\n      i18n=\"\n        payment notification message|Payment confirmation success notification\n        message@@billpay-payment-oneOff-review.confirm.notification.message\"\n      >Payment to {{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }} has been edited\n      successfully</span\n    >\n  </ng-container>\n</ng-template>\n\n<ng-template notificationHeader>\n  <span\n    i18n=\"\n      payment notification header|Payment confirmation success notification\n      header@@billpay-payment-oneOff-review.confirm.notification.header\"\n    >Payment edited</span\n  >\n</ng-template>\n","import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentOneOffEditReviewContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-one-off-edit-review-container/billpay-payment-one-off-edit-review-container.component';\nimport { PayBillsJourneyConfigService } from '../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-block\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"goBack()\">\n        <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n        <span i18n=\"button label|Back button@@pay-bills-journey.payments-list.back\">Back to payments list</span>\n      </button>\n    </div>\n    <bb-billpay-payment-one-off-edit-review-container\n      [accountNumberMasked]=\"config.accountNumberMasked\"\n      [dismissTimeoutValue]=\"config.notificationDismissTime\"\n      #paymentOneOffEditReviewContainer\n    ></bb-billpay-payment-one-off-edit-review-container>\n  `,\n})\nexport class BillpayPaymentOneOffEditReviewViewComponent {\n  @ViewChild('paymentOneOffEditReviewContainer') child!: BillpayPaymentOneOffEditReviewContainerComponent;\n  constructor(\n    readonly config: PayBillsJourneyConfigService,\n    private readonly routerService: PayBillsNavigationService,\n  ) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  goBack() {\n    this.routerService.navigateToPayments();\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BillpayUtilityService as Utility, formControlOptions, FrequencyKeys } from '@backbase/billpay-journeys-common';\nimport { Frequency } from '@backbase/billpay-journeys-common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-billpay-payment-frequency',\n  templateUrl: './billpay-payment-frequency.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentFrequencyComponent implements OnInit, OnDestroy {\n  @Input() scheduleForm?: FormGroup;\n  @Input() frequencies?: Array<Frequency>;\n  private readonly destroy$ = new Subject<void>();\n  readonly id = Utility.generateId();\n\n  ngOnInit() {\n    this.processFrequencyValueChanges();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private processFrequencyValueChanges() {\n    if (!this.scheduleForm) return;\n    const endTypeControl = this.scheduleForm.controls['endType'];\n    const endDateControl = this.scheduleForm.controls['endDate'];\n    const repeatControl = this.scheduleForm.controls['repeat'];\n    const startDateControl = this.scheduleForm.controls['startDate'];\n    const paymentServiceControl = this.scheduleForm.controls['paymentService'];\n    const frequencyControl = this.scheduleForm.controls['frequency'];\n    const paymentServiceDateControl = this.scheduleForm.controls['paymentServiceDate'];\n    const sendDateControl = this.scheduleForm.controls['sendDate'];\n\n    if (startDateControl && frequencyControl && paymentServiceControl && endTypeControl && endDateControl) {\n      frequencyControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        if (value === FrequencyKeys.Once) {\n          paymentServiceControl.enable(formControlOptions);\n          sendDateControl.enable(formControlOptions);\n          paymentServiceControl.updateValueAndValidity();\n          paymentServiceDateControl.enable(formControlOptions);\n          endDateControl.disable(formControlOptions);\n          endTypeControl.disable(formControlOptions);\n          repeatControl.disable(formControlOptions);\n        } else {\n          paymentServiceControl.disable(formControlOptions);\n          paymentServiceDateControl.disable(formControlOptions);\n          sendDateControl.disable(formControlOptions);\n          startDateControl.enable(formControlOptions);\n          endDateControl.enable(formControlOptions);\n          repeatControl.enable(formControlOptions);\n          endTypeControl.enable();\n        }\n      });\n    }\n  }\n}\n","<div class=\"bb-form-field bb-form-field--md bb-block bb-block--md\">\n  <label\n    data-role=\"billpay-payment-frequency-label\"\n    class=\"form-label\"\n    i18n=\"@@billpay.billpay-payment-schedule.label.frequency\"\n    [id]=\"'billpay-payment-frequency-label' + id\"\n  >\n    Frequency\n  </label>\n  <bb-dropdown-single-select-ui\n    [formControl]=\"scheduleForm?.get('frequency')\"\n    [aria-labelledby]=\"'billpay-payment-frequency-label' + id\"\n    data-role=\"billpay-payment-frequency\"\n  >\n    <bb-dropdown-single-select-option-ui\n      *ngFor=\"let frequency of frequencies\"\n      [value]=\"frequency.value\"\n      [label]=\"frequency.name\"\n    >\n    </bb-dropdown-single-select-option-ui>\n  </bb-dropdown-single-select-ui>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Frequency, BillpayUtilityService as Utility } from '@backbase/billpay-journeys-common';\nimport { FrequencyKeys } from '@backbase/billpay-journeys-common';\n\n@Component({\n  selector: 'bb-billpay-payment-start-date',\n  templateUrl: './billpay-payment-start-date.component.html',\n})\nexport class BillpayPaymentStartDateComponent {\n  @Input() scheduleForm?: FormGroup;\n  @Input() frequencies?: Array<Frequency>;\n  @Input() minDate: string | undefined;\n  frequencyValues = FrequencyKeys;\n  readonly id = Utility.generateId();\n\n  get formValue() {\n    return this.scheduleForm?.getRawValue();\n  }\n}\n","<div class=\"bb-block bb-block--md\" *ngIf=\"formValue?.frequency !== frequencyValues.Once\">\n  <label id=\"billpay-start-date-{{ id }}\" class=\"bb-text-bold\">\n    <span\n      *ngIf=\"true\"\n      i18n-label=\"@@billpay.billpay-payment-start-date.label.start\"\n      data-role=\"billpay-start-date-label\"\n      id=\"'billpay-start-date-' + {{ id }}\"\n    >\n      Start On\n    </span>\n  </label>\n  <div class=\"bb-form-field bb-form-field--sm\">\n    <bb-input-datepicker-ui\n      [aria-labelledby]=\"'billpay-start-date-' + id\"\n      [formControl]=\"scheduleForm?.get('startDate')\"\n      [minDate]=\"minDate\"\n      data-role=\"billpay-start-date-calendar\"\n      [datepickerDescribedby]=\"'billpay-start-date-error-{{ id }}'\"\n    ></bb-input-datepicker-ui>\n  </div>\n\n  <bb-input-validation-message-ui\n    id=\"billpay-start-date-error-{{ id }}\"\n    role=\"alert\"\n    [showErrors]=\"scheduleForm?.get('startDate')?.invalid && scheduleForm?.get('startDate')?.touched\"\n  >\n    <span\n      *ngIf=\"scheduleForm?.get('startDate')?.errors?.required\"\n      i18n=\"@@billpay.billpay-payment-start-date.error.required.startDate\"\n      data-role=\"missing-schedule-execution-date\"\n    >\n      Execution date is required.\n    </span>\n    <span\n      *ngIf=\"\n        scheduleForm?.get('startDate')?.errors?.pastDate || scheduleForm?.get('startDate')?.errors?.dateLessThanMinDate\n      \"\n      i18n=\"@@billpay.billpay-payment-start-date.error.pastDate.startDate\"\n      data-role=\"past-date-schedule-execution-date\"\n    >\n      Execution date could not be in a past.\n    </span>\n    <span\n      *ngIf=\"scheduleForm?.get('startDate')?.errors?.invalidDateFormat\"\n      i18n=\"@@billpay.billpay-payment-start-date.error.invalidDateFormat\"\n      data-role=\"invalid-date-schedule-execution-date\"\n    >\n      Invalid date format.\n    </span>\n  </bb-input-validation-message-ui>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy, Input, OnDestroy } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  BillpayUtilityService as Utility,\n  EndTypes,\n  formControlOptions,\n  FrequencyKeys,\n} from '@backbase/billpay-journeys-common';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-billpay-payment-end-date',\n  templateUrl: './billpay-payment-end-date.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentEndDateComponent implements OnInit, OnDestroy {\n  @Input() scheduleForm?: FormGroup;\n  readonly endTypes = EndTypes;\n  frequencyValues = FrequencyKeys;\n  readonly id = Utility.generateId();\n  private readonly destroy$ = new Subject<void>();\n\n  get formValue() {\n    return this.scheduleForm?.getRawValue();\n  }\n\n  ngOnInit() {\n    this.processEndTypeValueChanges();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private processEndTypeValueChanges() {\n    if (!this.scheduleForm) return;\n    const endTypeControl = this.scheduleForm.controls['endType'];\n    const endDateControl = this.scheduleForm.controls['endDate'];\n    const repeatControl = this.scheduleForm.controls['repeat'];\n    if (endTypeControl && endDateControl && repeatControl) {\n      endTypeControl.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n        switch (value) {\n          case EndTypes.After: {\n            repeatControl.enable(formControlOptions);\n            endDateControl.disable(formControlOptions);\n            break;\n          }\n          case EndTypes.On: {\n            endDateControl.enable(formControlOptions);\n            repeatControl.disable(formControlOptions);\n            break;\n          }\n          case EndTypes.Never:\n          default: {\n            endDateControl.disable(formControlOptions);\n            repeatControl.disable(formControlOptions);\n            break;\n          }\n        }\n      });\n    }\n  }\n}\n","<div class=\"bb-block bb-block--md\" [hidden]=\"formValue?.frequency == frequencyValues.Once\">\n  <label\n    id=\"billpay-end-date-label-{{ id }}\"\n    data-role=\"billpay-form-end-date-label\"\n    class=\"bb-label\"\n    i18n=\"@@billpay.billpay-payment-end-date.label.ending\"\n  >\n    End\n  </label>\n  <div class=\"bb-stack bb-stack--align-bottom\">\n    <div class=\"bb-stack__item\">\n      <bb-input-radio-group-ui\n        data-role=\"billpay-end-date-options\"\n        [required]=\"true\"\n        [aria-labelledby]=\"'billpay-end-date-label-' + id\"\n        [formControl]=\"scheduleForm?.get('endType')\"\n      >\n        <bb-input-radio-ui\n          [value]=\"endTypes.Never\"\n          label=\"Never\"\n          aria-invalid=\"false\"\n          data-role=\"ending-never-selector\"\n          i18n-label=\"\n            Schedule never ends|Label for an option to never end the payment\n            schedule@@billpay.billpay-payment-end-date.label.ending.never\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <bb-input-radio-ui\n          [value]=\"endTypes.On\"\n          aria-invalid=\"false\"\n          [labelTemplate]=\"endingTemplate\"\n          data-role=\"ending-on-selector\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <bb-input-radio-ui\n          [value]=\"endTypes.After\"\n          aria-invalid=\"false\"\n          data-role=\"ending-after-selector\"\n          [labelTemplate]=\"afterTemplate\"\n          role=\"radio\"\n        >\n        </bb-input-radio-ui>\n        <ng-template #endingTemplate>\n          <div class=\"bb-stack\">\n            <span\n              data-role=\"ending-date-on-label\"\n              class=\"bb-stack__item bb-stack__item--spacing-lg\"\n              i18n=\"@@billpay.billpay-payment-end-date.label.ending.on\"\n              id=\"billpay-end-date-on-{{ id }}\"\n              >On</span\n            >\n            <div class=\"bb-stack__item\">\n              <bb-input-datepicker-ui\n                [formControl]=\"scheduleForm?.get('endDate')\"\n                data-role=\"ending-end-date\"\n                i18n-aria-label=\"@@billpay.billpay-payment-end-date.label.end-date\"\n                aria-label=\"end-date\"\n                [minDate]=\"scheduleForm?.get('startDate')?.value\"\n                placement=\"top-right\"\n                datepickerDescribedby=\"billpay-end-date-on-{{ id }}\"\n                aria-labelledby=\"billpay-end-date-on-{{ id }}\"\n              ></bb-input-datepicker-ui>\n              <bb-input-validation-message-ui\n                role=\"alert\"\n                *ngIf=\"scheduleForm?.get('endDate') as control\"\n                [showErrors]=\"control?.invalid && control?.touched\"\n              >\n                <span\n                  *ngIf=\"control.errors?.pastDate || control.errors?.dateLessThanMinDate\"\n                  i18n=\"\n                    End date past date error text |Error past date message for End date input\n                    field@@billpay.billpay-payment-end-date.past-date-error\"\n                  data-role=\"past-date-ending-end-date\"\n                >\n                  End date could not be lower than start date.\n                </span>\n                <span\n                  *ngIf=\"control.errors?.invalidDateFormat\"\n                  i18n=\"@@billpay.billpay-payment-end-date.invalid-date-format-error\"\n                  data-role=\"invalid-date-schedule-end-date\"\n                >\n                  Invalid date format.\n                </span>\n                <span\n                  *ngIf=\"control.errors?.required\"\n                  i18n=\"@@billpay.billpay-payment-end-date.date-required-error\"\n                  data-role=\"required-date-schedule-end-date\"\n                >\n                  End date is required.\n                </span>\n              </bb-input-validation-message-ui>\n            </div>\n          </div>\n        </ng-template>\n        <ng-template #afterTemplate>\n          <div class=\"bb-stack\">\n            <span\n              class=\"bb-stack__item bb-stack__item--spacing-sm\"\n              i18n=\"@@billpay.billpay-payment-end-date.label.ending.after\"\n            >\n              After\n            </span>\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item bb-form-field bb-form-field--xs\">\n                  <bb-input-number-ui\n                    [formControl]=\"scheduleForm?.get('repeat')\"\n                    data-role=\"ending-occurrences\"\n                    aria-label=\"occurrences\"\n                  ></bb-input-number-ui>\n                </div>\n                <span class=\"bb-stack__item\" i18n-label=\"@@billpay.billpay-payment-end-date.label.ending.occurrences\">\n                  Occurrences\n                </span>\n              </div>\n            </div>\n          </div>\n        </ng-template>\n      </bb-input-radio-group-ui>\n    </div>\n  </div>\n</div>\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AccountNumberFormat } from '@backbase/billpay-journeys-common';\nimport { Account } from '@backbase/data-ang/billpay';\n\n@Component({\n  selector: 'bb-billpay-payment-compact-product-selector',\n  templateUrl: './billpay-payment-compact-product-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentCompactProductSelectorComponent {\n  @Input() paymentForm?: FormGroup;\n  @Input() accounts?: Account[];\n  @Input() productNumberFormat?: AccountNumberFormat;\n  @Output() selectItem = new EventEmitter<Account>();\n\n  onSelectItem(account: Account) {\n    this.selectItem.emit(account);\n  }\n}\n","<div class=\"bb-form-field bb-form-field--md\">\n  <label\n    i18n=\"@@bb-billpay-multiple-bills-list-item.product-selector.label\"\n    data-role=\"multiple-bills-form-from-account-label\"\n    >Pay From</label\n  >\n  <bb-product-selector-ui [autoClose]=\"true\" *ngIf=\"paymentForm?.get('accountFrom')?.value as selectedAccount\">\n    <ng-container bbDropdownToggle>\n      <ng-container *ngTemplateOutlet=\"productItemContent; context: { $implicit: selectedAccount }\"></ng-container>\n    </ng-container>\n    <ng-container bbDropdownMenu>\n      <ng-container *ngIf=\"accounts?.length\">\n        <button\n          *ngFor=\"let account of accounts\"\n          (click)=\"onSelectItem(account)\"\n          bbButton\n          color=\"unstyled\"\n          class=\"bb-product-selector__dropdown-item bb-billpay-multiple-bills-selector\"\n          data-role=\"product-selector-dropdown-item\"\n          [ngClass]=\"{\n            'bb-billpay-multiple-bills-selector--selected-bg': account.accountNumber === selectedAccount?.accountNumber\n          }\"\n        >\n          <ng-container *ngTemplateOutlet=\"productItemContent; context: { $implicit: account }\"></ng-container>\n        </button>\n      </ng-container>\n    </ng-container>\n  </bb-product-selector-ui>\n</div>\n\n<ng-template #productItemContent let-account>\n  <bb-ellipsis-ui [text]=\"account?.accountNickName\" data-role=\"compact-product-selector-account-name\"></bb-ellipsis-ui>\n  <div class=\"bb-account-info bb-text-default\">\n    <bb-ellipsis-ui\n      [text]=\"account?.accountNumber | paymentCardNumber: productNumberFormat\"\n      class=\"bb-account-info__product-number\"\n      data-role=\"compact-product-selector-account-number\"\n    ></bb-ellipsis-ui>\n  </div>\n  <bb-amount-ui\n    class=\"bb-subtitle bb-text-bold\"\n    [currency]=\"account?.accountBalance?.currencyCode\"\n    [amount]=\"account?.accountBalance?.amount\"\n    [mapCurrency]=\"true\"\n    data-role=\"compact-product-selector-amount\"\n  >\n  </bb-amount-ui>\n</ng-template>\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport {\n  BillpayPayeeDataService,\n  BillpayPayeeSummaryItemBaseComponent,\n  BillpayPaymentScheduleService,\n  BillpayUtilityService as Utility,\n  PaymentServicesTypes,\n  Frequency,\n} from '@backbase/billpay-journeys-common';\n\nimport { Account, PayeeSummary } from '@backbase/data-ang/billpay';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { PayBillsJourneyConfigService } from '../../../services/pay-bills-journey-config.service';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { MediaQueryService } from '@backbase/ui-ang/media-query-lib';\n\n@Component({\n  selector: 'bb-billpay-multiple-bills-list-item',\n  templateUrl: './billpay-payment-multiple-bills-list-item.component.html',\n})\nexport class BillpayPaymentMultipleBillsListItemComponent\n  extends BillpayPayeeSummaryItemBaseComponent\n  implements OnInit, OnDestroy {\n  @Input() payeeSummary: PayeeSummary | undefined;\n  @Input() paymentForm: FormGroup | undefined;\n  @Input() accounts?: Account[];\n  @Input() inheritedId?: string;\n  minDate!: string;\n  isCollapsed = true;\n  frequencies?: Frequency[];\n  id = Utility.generateId();\n  readonly productNumberFormat = this.configService.productNumberFormat;\n\n  get latestBill() {\n    return this.payeeSummary?.ebill?.latestBill;\n  }\n\n  ngOnInit() {\n    this.minDate = this.scheduleService.estimatedPaymentServiceDate(\n      this.payeeSummary?.paymentServices,\n      PaymentServicesTypes.Regular,\n    );\n    this.syncPeerFields(this.paymentForm?.get('schedule.sendDate'));\n  }\n\n  constructor(\n    payeeDataService: BillpayPayeeDataService,\n    dropdownButtonConfig: NgbDropdownConfig,\n    private readonly mediaQueryService: MediaQueryService,\n    private readonly scheduleService: BillpayPaymentScheduleService,\n    private readonly configService: PayBillsJourneyConfigService,\n    private readonly navigationService: PayBillsNavigationService,\n  ) {\n    super(payeeDataService, dropdownButtonConfig);\n    this.frequencies = this.configService.frequencies;\n  }\n\n  // Sync peer datepicker fields that are duplicated for the sake of responsive designs\n  private syncPeerFields(formControl?: AbstractControl | null) {\n    this.mediaQueryService\n      .isMediaBreakpointMatches('max-width', 'lg')\n      .pipe(takeUntil(this.destroy$), distinctUntilChanged())\n      .subscribe(() => {\n        formControl?.patchValue(formControl.value, { emitEvent: false, onlySelf: true });\n      });\n  }\n\n  selectItem(account: Account) {\n    this.paymentForm?.patchValue({ accountFrom: account });\n  }\n\n  handleEditPayee(): void {\n    if (this.payeeSummary && !this.payeeSummary.electronic) {\n      this.navigationService.navigateToEditManualPayee(this.payeeSummary.id);\n    } else if (this.payeeSummary?.electronic) {\n      this.navigationService.navigateToEditElectronicPayee(this.payeeSummary.id);\n    }\n  }\n\n  handleViewSummary(): void {\n    if (this.payeeSummary) {\n      this.navigationService.navigateToPayeeSummary(this.payeeSummary.id);\n    }\n  }\n\n  handleGetEbills() {\n    if (this.payeeSummary) {\n      this.navigationService.navigateToPayverisEbillEnrol(this.payeeSummary.id);\n    }\n  }\n}\n","<div class=\"bb-billpay-multiple-bills-list-item__content\">\n  <div class=\"bb-billpay-multiple-bills__grid-container\">\n    <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-sm\">\n      <ng-container *ngTemplateOutlet=\"payeeDescTemp\"></ng-container>\n    </div>\n    <div\n      class=\"bb-billpay-multiple-bills__grid-item bb-billpay-multiple-bills__grid-item--higher bb-text-align-center bb-d-none bb-d-lg-block\"\n      data-role=\"multiple-bills-list-titles-due-date\"\n    >\n      <span>{{ latestBill?.paymentDate | bbDate: 'MM/dd/y' }}</span>\n    </div>\n    <div\n      class=\"bb-text-align-left bb-text-align-right--lg-up bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-sm bb-billpay-multiple-bills__grid-item--second-row bb-billpay-multiple-bills__grid-item--higher\"\n      data-role=\"multiple-bills-minimum-amount-due\"\n    >\n      <bb-amount-ui\n        *ngIf=\"latestBill?.minAmountDue as minAmountDue\"\n        class=\"bb-text-bold\"\n        [currency]=\"minAmountDue.currencyCode || 'USD'\"\n        [amount]=\"minAmountDue.amount || 0\"\n      ></bb-amount-ui>\n    </div>\n    <div class=\"bb-billpay-multiple-bills__grid-item bb-d-none bb-d-lg-block bb-stack__item bb-stack__item--spacing-xs\">\n      <ng-container *ngTemplateOutlet=\"deliveryDateTemp\"></ng-container>\n    </div>\n    <div\n      class=\"bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-none bb-billpay-multiple-bills__grid-item--second-row\"\n    >\n      <ng-container *ngTemplateOutlet=\"amountInputTemp\"></ng-container>\n    </div>\n    <div\n      class=\"bb-billpay-multiple-bills__grid-item bb-billpay-multiple-bills__grid-item--higher bb-text-align-right bb-stack bb-stack--align-top\"\n    >\n      <div\n        class=\"bb-stack__item bb-stack__item--spacing-md bb-stack__item--push-right\"\n        data-role=\"multiple-bills-actions-list\"\n      >\n        <bb-dropdown-menu-ui\n          btnColor=\"text-link\"\n          container=\"body\"\n          icon=\"ellipsis-h\"\n          buttonSize=\"sm\"\n          iconSize=\"sm\"\n          [btnCircle]=\"true\"\n          [attr.aria-label]=\"'More options for ' + payeeName\"\n          i18n-attr.aria-label=\"\n            More options for payee aria label|Aria label for more payee\n            options@@bb-billpay-payee-list-item.aria-label.more-payee-options\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <ng-container *ngIf=\"payeeSummary?.ebill?.capable\">\n              <a\n              role=\"menuitem\"\n              target=\"_blank\"\n              data-role=\"stop-ebills-menu-item\"\n              class=\"dropdown-item bb-dropdown-single-select\"\n              *ngIf=\"showStopEbills\"\n              (bbKeyboardClick)=\"handleStopEbills($event)\"\n              >\n                <span\n                  i18n=\"\n                    Stop eBills dropdown list button|Button in the dropdown list for getting\n                    eBills@@bb-billpay-payee-summary-item.button.dropdown.stop-eBills\"\n                  >Stop eBills</span\n                >\n              </a>\n            </ng-container>\n\n            <a\n              role=\"menuitem\"\n              data-role=\"view-payee-menu-item\"\n              class=\"dropdown-item bb-dropdown-single-select\"\n              (bbKeyboardClick)=\"handleViewSummary($event)\"\n            >\n              <span\n                i18n=\"\n                  View payee dropdown list button|Button in the dropdown list for viewing the\n                  payee@@bb-billpay-payee-summary-item.button.dropdown.view-payee\"\n                >View payee</span\n              >\n            </a>\n            <a\n              role=\"menuitem\"\n              data-role=\"edit-payee-menu-item\"\n              class=\"dropdown-item bb-dropdown-single-select\"\n              (bbKeyboardClick)=\"handleEditPayee()\"\n            >\n              <span\n                i18n=\"\n                  Edit payee dropdown list button|Button in the dropdown list for editing the\n                  payee@@bb-billpay-payee-summary-item.button.dropdown.edit-payee\"\n                >Edit payee</span\n              >\n            </a>\n            <a\n              role=\"menuitem\"\n              data-role=\"delete-payee-menu-item\"\n              class=\"dropdown-item bb-dropdown-single-select\"\n              (bbKeyboardClick)=\"handleDeletePayee($event)\"\n            >\n              <span\n                i18n=\"\n                  Delete payee dropdown list button|Button in the dropdown list for deleting the\n                  payee@@bb-billpay-payee-summary-item.button.dropdown.delete-payee\"\n                >Delete payee</span\n              >\n            </a>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n      <div class=\"bb-stack__item\">\n        <button\n          bbButton\n          color=\"text-link\"\n          [circle]=\"true\"\n          aria-label=\"dropdown-button\"\n          buttonSize=\"sm\"\n          (click)=\"isCollapsed = !isCollapsed\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          [attr.aria-controls]=\"'collapse' + id\"\n          data-role=\"multiple-bills-item-dropdown-button\"\n        >\n          <bb-icon-ui\n            name=\"{{ isCollapsed ? 'toggle-down' : 'toggle-up' }}\"\n            data-role=\"schedule-toggle-icon\"\n          ></bb-icon-ui>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div\n    [ngbCollapse]=\"isCollapsed\"\n    [attr.id]=\"'collapse' + id\"\n    class=\"bb-billpay-multiple-bills-list-item__collapsible-area\"\n  >\n    <div class=\"bb-stack bb-d-block bb-d-lg-flex\">\n      <div class=\"bb-stack__item bb-stack__item--spacing-xl\">\n        <div class=\"bb-block bb-block--md\" *ngIf=\"accounts\">\n          <ng-container *ngTemplateOutlet=\"productSelectorTemp\"></ng-container>\n        </div>\n        <div class=\"bb-form-field bb-form-field--md bb-d-lg-none bb-block bb-block--md\">\n          <label\n            id=\"billpay-delivery-date-label-{{ id }}\"\n            i18n=\"@@bb-billpay-multiple-bills-list-item.sen-date.label\"\n            data-role=\"multiple-bills-form-delivery-date-label\"\n            >Est. Delivery</label\n          >\n          <ng-container *ngTemplateOutlet=\"deliveryDateTemp\"></ng-container>\n        </div>\n        <div>\n          <ng-container *ngTemplateOutlet=\"scheduleTemp\"></ng-container>\n        </div>\n        <div class=\"bb-block bb-block--sm\">\n          <ng-container *ngTemplateOutlet=\"memoTemp\"></ng-container>\n        </div>\n      </div>\n      <div class=\"bb-stack__item--align-top\" data-role=\"multiple-bills-outstanding-amount\">\n        <div class=\"bb-stack__item--align-top\">\n          <ng-container *ngIf=\"latestBill?.outstandingBalance as outstandingBalance\">\n            <label for=\"outstanding-amount-{{ id }}\" class=\"bb-text-semi-bold bb-block bb-block--sm\"\n              >Outstanding Amount</label\n            >\n            <br />\n            <bb-amount-ui\n              id=\"outstanding-amount-{{ id }}\"\n              class=\"bb-text-default\"\n              [currency]=\"outstandingBalance.currencyCode || 'USD'\"\n              [amount]=\"outstandingBalance.amount || 0\"\n            ></bb-amount-ui>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Delivery date  -->\n  <ng-template #deliveryDateTemp>\n    <bb-input-datepicker-ui\n      [formControl]=\"paymentForm?.get('schedule.sendDate')\"\n      [minDate]=\"minDate\"\n      data-role=\"once-delivery-date-calendar\"\n      aria-label=\"delivery-date\"\n      datepickerDescribedby=\"multiple-payments-start-date-tooltip-{{ inheritedId }}\"\n      aria-labelledby=\"billpay-delivery-date-label-{{ id }}\"\n    ></bb-input-datepicker-ui>\n  </ng-template>\n\n  <!-- Amount Input -->\n  <ng-template #amountInputTemp>\n    <bb-amount-input-ui\n      [formControl]=\"paymentForm?.get('amount.amount')\"\n      data-role=\"multiple-bills-amount-input\"\n      [autoDecimal]=\"true\"\n      wrapperClasses=\"bb-text-bold\"\n      [currency]=\"paymentForm?.get('amount.currency')?.value\"\n      placeholder=\"0.00\"\n      aria-labelledby=\"multiple-payments-amount-label-{{ inheritedId }}\"\n    ></bb-amount-input-ui>\n  </ng-template>\n\n  <!-- Memo -->\n  <ng-template #memoTemp>\n    <label class=\"bb-label\" data-role=\"multiple-bills-form-memo-label\" for=\"bb-billpay-payment-form-memo-{{ id }}\">\n      <span i18n=\"bb-billpay-multiple-bills-list-item.memo.label\">Memo</span>\n      <span class=\"bb-text-default bb-text-support\" i18n=\"@@bb-billpay-multiple-bills-list-item.memo.title-suffix\">\n        (Optional)\n      </span>\n    </label>\n    <br />\n    <span\n      class=\"bb-subtitle text-muted\"\n      i18n=\"@@bb-billpay-multiple-bills-list-item.memo.helper-text\"\n      data-role=\"multiple-bills-form-memo-desc\"\n      id=\"'bb-billpay-payment-form-memo-desc-'{{ id }}\"\n      >This will be printed on the check sent to the payee</span\n    >\n    <div class=\"bb-form-field bb-form-field--md\">\n      <bb-textarea-ui\n        [id]=\"'bb-billpay-payment-form-memo-' + id\"\n        [aria-describedby]=\"'bb-billpay-payment-form-memo-desc-' + id\"\n        [formControl]=\"paymentForm?.get('memo')\"\n        data-role=\"memo\"\n        [maxLength]=\"140\"\n        [rows]=\"2\"\n        [showCharCounter]=\"true\"\n      >\n      </bb-textarea-ui>\n    </div>\n  </ng-template>\n\n  <!-- Schedule -->\n  <ng-template #scheduleTemp>\n    <bb-billpay-payment-frequency\n      *ngIf=\"frequencies?.length\"\n      [scheduleForm]=\"paymentForm?.get('schedule')\"\n      [frequencies]=\"frequencies\"\n    ></bb-billpay-payment-frequency>\n    <bb-billpay-payment-start-date\n      [scheduleForm]=\"paymentForm?.get('schedule')\"\n      [frequencies]=\"frequencies\"\n      [minDate]=\"minDate\"\n    ></bb-billpay-payment-start-date>\n    <bb-billpay-payment-end-date [scheduleForm]=\"paymentForm?.get('schedule')\"></bb-billpay-payment-end-date>\n  </ng-template>\n\n  <ng-template #productSelectorTemp>\n    <bb-billpay-payment-compact-product-selector\n      [accounts]=\"accounts\"\n      [paymentForm]=\"paymentForm\"\n      (selectItem)=\"selectItem($event)\"\n      [productNumberFormat]=\"productNumberFormat\"\n    ></bb-billpay-payment-compact-product-selector>\n  </ng-template>\n\n  <!-- Payee infos -->\n  <ng-template #payeeDescTemp>\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <a\n          attr.aria-describedby=\"{{\n            [\n              ebillRetrieveErrorId,\n              noEbillsDueId,\n              ebillsAvailableId,\n              recurringPaymentScheduledIdId,\n              ebillPaymentScheduledId,\n              ebillDueOnId,\n              ebillSupportErrorId,\n              ebillUserActionErrorId,\n              ebillUnknownErrorId\n            ].join(' ')\n          }}\"\n          (bbKeyboardClick)=\"handleViewSummary($event)\"\n          role=\"link\"\n          tabindex=\"0\"\n          class=\"bb-text-bold bb-text-default\"\n          [attr.aria-label]=\"'view payee summary for ' + payeeName\"\n          data-role=\"payee-name\"\n          >{{ payeeName }}</a\n        >\n\n        <div *ngIf=\"isLatestEbillPaid\" class=\"bb-stack bb-stack--align-top\">\n          <bb-icon-ui\n            class=\"bb-stack__item bb-stack__item--spacing-none\"\n            data-role=\"ebill-payment-icon\"\n            name=\"savings-accounts\"\n            color=\"secondary\"\n          ></bb-icon-ui>\n          <span\n            id=\"{{ ebillPaymentScheduledId }}\"\n            class=\"bb-stack__item bb-text-support\"\n            data-role=\"ebill-payment-label\"\n            i18n=\"\n              eBill payment scheduled note|Text for the information that an eBill payment is\n              scheduled@@bb-billpay-multiple-bills-list-item.note.eBill-payment-scheduled\"\n            >eBill payment scheduled</span\n          >\n        </div>\n\n        <div *ngIf=\"areEbillsDue\" class=\"bb-stack bb-d-lg-none\">\n          <bb-icon-ui\n            class=\"bb-stack__item bb-stack__item--spacing-sm\"\n            data-role=\"receipt-icon\"\n            size=\"sm\"\n            name=\"receipt\"\n            color=\"secondary\"\n          ></bb-icon-ui>\n          <span\n            id=\"{{ ebillDueOnId }}\"\n            class=\"bb-stack__item bb-subtitle bb-text-support\"\n            data-role=\"due-date-label\"\n            *ngIf=\"latestBill?.paymentDate as ebillPaymentDate\"\n            i18n=\"\n              Ebill due note|Text for the information about the due\n              eBill@@bb-billpay-multiple-bills-list-item.note.ebill-due\"\n            >eBill due on {{ ebillPaymentDate | bbDate: 'MMM d' }}</span\n          >\n        </div>\n\n        <div *ngIf=\"areEbillsInErrorState\" class=\"bb-stack bb-stack--wrap bb-stack--align-top\">\n          <ng-container *ngIf=\"isEbillsErrorUpdateCredentials\">\n            <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n              <div class=\"bb-stack\">\n                <bb-icon-ui\n                  class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                  data-role=\"ebills-error-icon\"\n                  size=\"sm\"\n                  name=\"error-outline\"\n                  color=\"danger\"\n                ></bb-icon-ui>\n                <div\n                  id=\"{{ ebillRetrieveErrorId }}\"\n                  class=\"bb-stack__item bb-subtitle bb-text-danger\"\n                  data-role=\"ebills-error-cannot-be-retrieved-message\"\n                  i18n=\"\n                    Ebills cannot be retrieved error|Error text to display when the eBills cannot be retrieved due to\n                    invalid login\n                    credentials@@bb-billpay-multiple-bills-list-item.ebill-error.ebills-cannot-be-retrieved\"\n                >\n                  eBills cannot be retrieved.\n                </div>\n              </div>\n            </div>\n            <a\n              class=\"bb-stack__item\"\n              (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n              tabindex=\"0\"\n              role=\"button\"\n              class=\"bb-stack__item bb-subtitle\"\n              i18n=\"\n                Ebills update login credentials link|Button text to display for updating login credentials for the\n                payee@@bb-billpay-multiple-bills-list-item.ebill-link.update-login-credentials\"\n              attr.aria-label=\"Update login credentials for {{ payeeName }}\"\n              i18n-attr.aria-label=\"\n                Ebills update login credentials link aria label|Aria label for updating login credentials for the\n                payee@@bb-billpay-multiple-bills-list-item.ebill-link.aria-label.update-login-credentials\"\n              data-role=\"ebills-update-login-credentials-button\"\n              >Update login credentials\n            </a>\n          </ng-container>\n\n          <ng-container *ngIf=\"isEbillsErrorNotSupported\">\n            <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n              <div class=\"bb-stack\">\n                <bb-icon-ui\n                  class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                  data-role=\"ebills-error-icon\"\n                  size=\"sm\"\n                  name=\"error-outline\"\n                  color=\"danger\"\n                ></bb-icon-ui>\n                <div\n                  id=\"{{ ebillSupportErrorId }}\"\n                  class=\"bb-stack__item bb-subtitle bb-text-danger\"\n                  data-role=\"ebills-error-no-longer-supported-message\"\n                  i18n=\"\n                    Biller no longer supports ebills error|Error text to display when the payee no longer supports\n                    eBills@@bb-billpay-multiple-bills-list-item.ebill-error.ebills-no-longer-available\"\n                >\n                  This biller no longer supports eBills.\n                </div>\n              </div>\n            </div>\n            <a\n              (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n              tabindex=\"0\"\n              role=\"button\"\n              class=\"bb-stack__item bb-subtitle\"\n              attr.aria-label=\"Disable eBills for {{ payeeName }}\"\n              i18n-attr.aria-label=\"\n                Disable eBills link aria label|Aria label for Disable\n                eBills@@bb-billpay-multiple-bills-list-item.ebill-link.ebills-no-longer-available\"\n              i18n=\"\n                Disable eBills for this payee link|Button text to display to disable eBills for the\n                payee@@bb-billpay-multiple-bills-list-item.ebill-link.aria-label.ebills-no-longer-available\"\n              data-role=\"ebills-disabled-button\"\n              >Disable eBills for this payee\n            </a>\n          </ng-container>\n\n          <ng-container *ngIf=\"isEbillsErrorUserAction\">\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-stack\">\n                <bb-icon-ui\n                  class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                  data-role=\"ebills-error-icon\"\n                  name=\"error-outline\"\n                  size=\"sm\"\n                  color=\"danger\"\n                ></bb-icon-ui>\n                <div\n                  id=\"{{ ebillUserActionErrorId }}\"\n                  class=\"bb-stack__item bb-subtitle bb-text-danger\"\n                  data-role=\"ebills-error-login-to-biller-message\"\n                  i18n=\"\n                    Please log in to biller to resolve error|Error text to display when the user must log into the\n                    biller's site to resolve an\n                    issue@@bb-billpay-multiple-bills-list-item.ebill-error.log-in-to-bille-site\"\n                >\n                  Please log in to the biller's site to resolve an issue and continue receiving eBills for this payee.\n                </div>\n              </div>\n            </div>\n            <a\n              (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n              tabindex=\"0\"\n              role=\"button\"\n              class=\"bb-stack__item bb-subtitle\"\n              i18n=\"\n                Refresh status for payee link|Button text to display for refreshing the status of eBills for the\n                payee@@bb-billpay-multiple-bills-list-item.ebill-link.refresh-status\"\n              attr.aria-label=\"Refresh status for {{ payeeName }}\"\n              i18n-attr.aria-label=\"\n                Refresh status for payee link aria label|Aria label for Refresh\n                status@@bb-billpay-multiple-bills-list-item.ebill-link.aria-label.refresh-status\"\n              data-role=\"ebills-refresh-status-button\"\n              >Refresh status\n            </a>\n          </ng-container>\n\n          <ng-container *ngIf=\"isEbillsErrorUnknown\">\n            <div class=\"bb-stack\">\n              <bb-icon-ui\n                class=\"bb-stack__item bb-stack__item--spacing-sm\"\n                data-role=\"ebills-error-icon\"\n                name=\"error-outline\"\n                size=\"sm\"\n                color=\"danger\"\n              ></bb-icon-ui>\n              <div\n                attr.id=\"{{ ebillUnknownErrorId }}\"\n                class=\"bb-stack__item bb-subtitle bb-text-danger\"\n                data-role=\"ebills-error-try-again-later-message\"\n                i18n=\"\n                  Ebills cannot be retrieved error|Error text to display when eBills cannot currently be retreived for\n                  the payee@@bb-billpay-multiple-bills-list-item.ebill-error.ebills-cannot-be-retrieved\"\n              >\n                eBills cannot be retrieved, please try again later or contact support\n              </div>\n            </div>\n          </ng-container>\n        </div>\n\n        <div\n          *ngIf=\"areEbillsEnabledButNotDue\"\n          id=\"{{ noEbillsDueId }}\"\n          class=\"bb-text-support\"\n          data-role=\"no-due-date-label\"\n          i18n=\"\n            No eBill due note|Text for the information that no eBill is\n            due@@bb-billpay-multiple-bills-list-item.note.no-ebill-due\"\n        >\n          No eBills due\n        </div>\n\n        <div *ngIf=\"areEbillsAvailable\" class=\"bb-stack\">\n          <a data-role=\"get-ebills-menu-item\" (bbKeyboardClick)=\"handleGetEbills()\" tabindex=\"0\" role=\"button\" class=\"bb-stack__item bb-subtitle\">\n            <span\n              i18n=\"\n                Get eBills dropdown list button|Button in the dropdown list for getting\n                eBills@@bb-billpay-payee-summary-item.button.dropdown.get-eBills\"\n              >Get eBills</span\n            >\n          </a>\n        </div>\n\n        <div *ngIf=\"areRecurringPaymentsScheduled\" class=\"bb-stack bb-stack--align-top\">\n          <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n            <bb-icon-ui data-role=\"recurring-payment-icon\" size=\"sm\" name=\"repeat\" color=\"secondary\"></bb-icon-ui>\n          </div>\n          <div\n            id=\"{{ recurringPaymentScheduledIdId }}\"\n            class=\"bb-stack__item bb-subtitle bb-text-support\"\n            data-role=\"recurring-payment-label\"\n            i18n=\"\n              Recurring payments scheduled note|Text for the information that recurring payments are\n              scheduled@@bb-billpay-multiple-bills-list-item.note.recurring-payments-scheduled\"\n          >\n            Recurring Payments Scheduled\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BillpayUtilityService as Utility } from '@backbase/billpay-journeys-common';\nimport { Account, PayeeSummary } from '@backbase/data-ang/billpay';\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-list',\n  templateUrl: './billpay-payment-multiple-bills-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsListComponent {\n  _payeeSummaries: PayeeSummary[] = [];\n  @Input() set payeeSummaries(value: PayeeSummary[]) {\n    this._payeeSummaries = this.sortByDueDate(value);\n  }\n  get payeeSummaries() {\n    return this._payeeSummaries;\n  }\n  @Input() paymentsFormGroup?: FormGroup;\n  @Input() accounts?: Account[];\n  @Input() isForEbills = false;\n  readonly id = Utility.generateId();\n\n  /**\n   * Sorting payee summaries by due date. Initial view display ascending list(earliest date first)\n   */\n  private sortByDueDate(payeeSummaries = this.payeeSummaries) {\n    const payeeWithoutDate = payeeSummaries.filter(payee => !payee.ebill?.latestBill?.paymentDate);\n    const payeeWithDate = payeeSummaries\n      .filter(payee => !!payee.ebill?.latestBill?.paymentDate)\n      .sort((payee1: PayeeSummary, payee2: PayeeSummary) => {\n        const date1 = new Date(payee1.ebill?.latestBill?.paymentDate || '').getTime();\n        const date2 = new Date(payee2.ebill?.latestBill?.paymentDate || '').getTime();\n        return this.ascendingList ? date1 - date2 : date2 - date1;\n      });\n    return [...payeeWithDate, ...payeeWithoutDate];\n  }\n  /**\n   * Indicates the way payees are sorted in the list\n   */\n  ascendingList = true;\n\n  /**\n   * Set sorted payees\n   */\n  onSortClick() {\n    this.ascendingList = !this.ascendingList;\n    this.payeeSummaries = this.sortByDueDate();\n  }\n\n  /**\n   * Set sorted payees\n   */\n  trackByFunction(_index: number, payee: PayeeSummary) {\n    return payee.ebill?.latestBill?.paymentDate;\n  }\n}\n","<form [formGroup]=\"paymentsFormGroup\" class=\"bb-billpay-multiple-bills-form\">\n  <div class=\"bb-d-none bb-d-lg-block bb-billpay-multiple-bills-form__titles\">\n    <div class=\"bb-billpay-multiple-bills__grid-container bb-stack\">\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.payee\"\n          data-role=\"multiple-bills-list-titles-payee\"\n          >Payee</span\n        >\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-text-align-center\">\n        <div class=\"bb-inline-stack\" *ngIf=\"isForEbills\" data-role=\"multiple-bills-list-titles-due-date-label\">\n          <span\n            class=\"bb-subtitle bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n            i18n=\"@@bb-billpay-multiple-bills-list.titles.due-date\"\n            >Due Date</span\n          >\n          <button bbButton color=\"unstyled\" (click)=\"onSortClick()\" aria-label=\"Sort by due date ascending\">\n            <bb-icon-ui name=\"{{ ascendingList ? 'caret-down' : 'caret-up' }}\" size=\"xs\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item bb-stack__item--spacing-sm bb-text-align-right\">\n        <span\n          *ngIf=\"isForEbills\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.amount-due\"\n          data-role=\"multiple-bills-list-titles-amount-due\"\n          >Amount Due</span\n        >\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.delivery-date\"\n          data-role=\"multiple-bills-list-titles-delivery-date\"\n          >Est. Delivery\n        </span>\n        <span\n          bbTooltip=\"The date we expect your payment to reach the payee. That may vary from payee to payee.\"\n          placement=\"top\"\n          [triggers]=\"'hover'\"\n          i18n=\"@@bb-billpay-multiple-bills-list.delivery-date.label.tooltip\"\n          class=\"bb-stack__item bb-d-flex\"\n          id=\"multiple-payments-start-date-tooltip-{{ id }}\"\n        >\n          <bb-icon-ui name=\"info\" size=\"sm\" class=\"bb-billpay-multiple-bills__tooltip\"></bb-icon-ui>\n        </span>\n      </div>\n      <div class=\"bb-billpay-multiple-bills__grid-item bb-stack__item\">\n        <span\n          class=\"bb-subtitle bb-text-semi-bold\"\n          i18n=\"@@bb-billpay-multiple-bills-list.titles.amount\"\n          id=\"multiple-payments-amount-label-{{ id }}\"\n          data-role=\"multiple-bills-list-titles-amount\"\n          >Amount</span\n        >\n      </div>\n    </div>\n  </div>\n  <bb-billpay-multiple-bills-list-item\n    *ngFor=\"let payeeSummary of payeeSummaries; trackBy: trackByFunction\"\n    [payeeSummary]=\"payeeSummary\"\n    [paymentForm]=\"paymentsFormGroup?.controls[payeeSummary.id]\"\n    [accounts]=\"accounts\"\n    [inheritedId]=\"id\"\n    class=\"bb-billpay-multiple-bills-list-item\"\n  ></bb-billpay-multiple-bills-list-item>\n</form>\n","import { Component, ChangeDetectionStrategy, Input, TemplateRef } from '@angular/core';\nimport { PayBillsJourneyConfigService } from '../../../services/pay-bills-journey-config.service';\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-sum-board',\n  templateUrl: './billpay-payment-multiple-bills-sum-board.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsSumBoardComponent {\n  @Input() totalAmount?: number;\n  @Input() actionButtons?: TemplateRef<any>;\n  @Input() inheritedId?: string;\n  readonly currency = this.configService.paymentDefaultCurrency;\n  constructor(private readonly configService: PayBillsJourneyConfigService) {}\n}\n","<div data-role=\"multiple-bills-sum-board\" class=\"bb-billpay-multiple-bills-board bb-stack\">\n  <div class=\"bb-stack bb-stack--wrap container\">\n    <div class=\"bb-stack__item bb-stack__item--fill\">\n      <label\n        id=\"total-amount-label-{{ inheritedId }}\"\n        class=\"bb-text-default bb-subtitle bb-block bb-block--xs\"\n        i18n=\"label|amount label@@billpay-payments-journey.multiple-bills.board.amount-label\"\n        data-role=\"multiple-bills-sum-board-amount-label\"\n        >Total Amount</label\n      >\n      <br />\n      <bb-amount-ui\n        id=\"total-amount-{{ inheritedId }}\"\n        class=\"bb-heading-1\"\n        [currency]=\"currency\"\n        [amount]=\"totalAmount || 0\"\n        data-role=\"multiple-bills-sum-board-amount\"\n      ></bb-amount-ui>\n    </div>\n    <div class=\"bb-stack__item bb-billpay-multiple-bills-board-desc\" *ngIf=\"!totalAmount; else buttonsTemp\">\n      <div class=\"card card-sm card--shadowless bb-inline-stack bb-billpay-multiple-bills-board-desc__body\">\n        <div class=\"card-body\">\n          <span\n            bbTooltip=\"You can start by filling the amounts on the bills you would like to pay\"\n            i18n-bbbTooltip=\"\n              description|description\n              tooltip[classList]@@billpay-payments-journey.multiple-bills.board.description-tooltip\"\n            triggers=\"hover\"\n            placement=\"top\"\n            class=\"bb-stack bb-d-md-none\"\n          >\n            <bb-icon-ui name=\"dns\" size=\"md\" color=\"primary\"></bb-icon-ui>\n          </span>\n          <div class=\"bb-inline-stack bb-d-none bb-d-md-flex\">\n            <bb-icon-ui name=\"dns\" size=\"md\" class=\"bb-stack__item bb-stack__item--spacing-sm\"></bb-icon-ui>\n            <div\n              class=\"bb-subtitle\"\n              i18n=\"description|description text@@billpay-payments-journey.multiple-bills.board.description\"\n              data-role=\"multiple-bills-sum-board-description\"\n            >\n              You can start by filling the amounts on the bills you would like to pay\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #buttonsTemp>\n  <ng-container [ngTemplateOutlet]=\"actionButtons\"></ng-container>\n</ng-template>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  ViewChild,\n  TemplateRef,\n  OnDestroy,\n  HostListener,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  BillpayPaymentScheduleService,\n  BillpayUtilityService as Utility,\n  EndTypes,\n  LoadingState,\n  PaymentServicesTypes,\n} from '@backbase/billpay-journeys-common';\nimport { HttpResponse } from '@backbase/foundation-ang/web-sdk';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, shareReplay, skip, switchMap, take, takeUntil, tap } from 'rxjs/operators';\nimport { Account, Address, PayeeSummary, PaymentService, PaymentServiceSummary } from '@backbase/data-ang/billpay';\nimport { BillpayPayeeDataService } from '@backbase/billpay-journeys-common';\nimport { FrequencyKeys, PayeeSummariesByEbill, PaymentFormState } from '@backbase/billpay-journeys-common';\n\nimport { PayBillsStateService } from '../../services/pay-bills-state.service';\nimport { Observable, of, Subject } from 'rxjs';\nimport { PayBillsNavigationService } from '../../services/pay-bills-navigation.service';\nimport { PayBillsJourneyConfigService } from '../../services/pay-bills-journey-config.service';\nimport { NotificationService } from '@backbase/ui-ang/notification';\n\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills',\n  templateUrl: './billpay-payment-multiple-bills.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsComponent implements OnInit, OnDestroy {\n  payeeSummariesByEbillObservable$?: Observable<PayeeSummariesByEbill | undefined>;\n  private payeeSummaries?: PayeeSummary[];\n  private accounts?: Account[];\n  paymentsFormGroup = this.fb.group({});\n  totalAmount$: Observable<number> = this.paymentsFormGroup.valueChanges.pipe(\n    map((forms: FormGroup) =>\n      Object.values(forms).reduce((acc: number, form: PaymentFormState) => acc + +form.amount.amount, 0),\n    ),\n  );\n  accounts$?: Observable<Account[]>;\n\n  readonly selectedDeleteEbills$: Observable<PayeeSummary | undefined> = this.payeeDataService.selectedDeleteEbills;\n  readonly selectedDeletePayee$: Observable<PayeeSummary | undefined> = this.payeeDataService.selectedDeletePayee;\n\n  get isErrorState() {\n    const payeeState = this.payeeDataService.payeesLoadingState;\n    const accountState = this.paymentDataService.accountsLoadingState;\n    return payeeState === 'error' || accountState === LoadingState.Error;\n  }\n  private readonly destroy$ = new Subject<void>();\n\n  @ViewChild('notificationMessage') notificationMessageTemplate: TemplateRef<any> | string = '';\n  @ViewChild('notificationHeader') notificationHeaderTemplate: TemplateRef<any> | string = '';\n\n  isDeleteModalOpened = false;\n  isDeleteEbillsModalOpen = false;\n  isNavigateModalOpened = false;\n  notificationType = '';\n  readonly id = Utility.generateId();\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if ((this.paymentsFormGroup.touched || this.paymentStateService.isFormProcessing) && !this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private readonly payeeDataService: BillpayPayeeDataService,\n    private readonly fb: FormBuilder,\n    private readonly scheduleService: BillpayPaymentScheduleService,\n    private readonly paymentStateService: PayBillsStateService,\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly route: ActivatedRoute,\n    private readonly paymentDataService: BillpayPaymentDataService,\n    private readonly configService: PayBillsJourneyConfigService,\n    private readonly notificationService: NotificationService,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private cdRef: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.payeeSummariesByEbillObservable$ = this.payeeDataService.getPayees().pipe(\n      tap(payeeSummariesByEbill => {\n        const { ebillsEnabled = [], ebillsNotEnabled = [] } = payeeSummariesByEbill || ({} as PayeeSummariesByEbill);\n        this.payeeSummaries = [...ebillsEnabled, ...ebillsNotEnabled];\n        this.createForm(this.payeeSummaries);\n        if (this.paymentStateService.isFormProcessing) {\n          this.patchPaymentDataToForm();\n        }\n      }),\n      shareReplay(),\n    );\n    this.accounts$ = this.paymentDataService.getPayeesAndAccounts().pipe(\n      map(data => {\n        this.accounts = data.accounts;\n        this.patchFormValue({ accountFrom: data.accounts?.[0] });\n        return data.accounts;\n      }),\n      shareReplay(),\n    );\n\n    this.payeeDataService.selectedDeletePayee\n      .pipe(takeUntil(this.destroy$), skip(1))\n      .subscribe(payee => (payee ? (this.isDeleteModalOpened = true) : this.openNavigateModal()));\n\n    this.payeeDataService.selectedDeleteEbills\n      .pipe(takeUntil(this.destroy$), skip(1))\n      .subscribe(payee => (payee ? (this.isDeleteEbillsModalOpen = true) : this.openNavigateModal()));\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  handleClearForm() {\n    this.patchFormValue();\n    this.paymentsFormGroup.markAsUntouched();\n    this.paymentStateService.isFormProcessing = false;\n  }\n\n  defaultFormState(payeeSummary: PayeeSummary) {\n    const address = this.hasOvernightCheck(payeeSummary?.paymentServices)\n      ? payeeSummary?.overnightDeliveryAddress\n      : ({} as Address);\n    const paymentServiceDate = this.scheduleService.estimatedPaymentServiceDate(\n      payeeSummary?.paymentServices,\n      PaymentServicesTypes.Regular,\n    );\n\n    const minDate = this.scheduleService.estimatedPaymentServiceDate(\n      payeeSummary?.paymentServices,\n      PaymentServicesTypes.Regular,\n    );\n\n    return {\n      accountFrom: this.accounts?.[0],\n      payeeTo: payeeSummary,\n      amount: {\n        amount: ' ',\n        currency: this.configService.paymentDefaultCurrency,\n      },\n      memo: '',\n      overnightDeliveryAddress: {\n        address1: address?.address1,\n        address2: address?.address2,\n        city: address?.city,\n        state: address?.state,\n        postalCode: address?.postalCode,\n      },\n      schedule: {\n        frequency: FrequencyKeys.Once,\n        startDate: minDate,\n        sendDate: minDate,\n        repeat: 1,\n        endDate: minDate,\n        endType: EndTypes.Never,\n        paymentService: this.defaultPaymentService,\n        paymentServiceDate,\n        alertPendingCheckbox: false,\n        alertSentCheckbox: false,\n        alertLastPendingCheckbox: false,\n      },\n    };\n  }\n\n  areBothListsPresent({ ebillsEnabled, ebillsNotEnabled }: PayeeSummariesByEbill): boolean {\n    return Boolean(ebillsEnabled?.length && ebillsNotEnabled?.length);\n  }\n\n  createForm(payeeSummaries: PayeeSummary[]) {\n    payeeSummaries.forEach(payee => {\n      const defaults = this.defaultFormState(payee);\n      this.paymentsFormGroup?.registerControl(\n        payee.id,\n        this.fb.group({\n          accountFrom: [defaults.accountFrom],\n          payeeTo: [defaults.payeeTo],\n          amount: this.fb.group({\n            amount: [defaults.amount.amount],\n            currency: [defaults.amount.currency],\n          }),\n          memo: [defaults.memo],\n          overnightDeliveryAddress: this.createOvernightAddressFormGroup(payee),\n          schedule: this.fb.group({\n            frequency: defaults.schedule.frequency,\n            startDate: [defaults.schedule.startDate],\n            sendDate: [defaults.schedule.sendDate],\n            repeat: [defaults.schedule.repeat],\n            endDate: [defaults.schedule.endDate],\n            endType: [defaults.schedule.endType],\n            paymentService: [defaults.schedule.paymentService],\n            paymentServiceDate: [defaults.schedule.paymentServiceDate],\n            alertPendingCheckbox: [defaults.schedule.alertPendingCheckbox],\n            alertSentCheckbox: [defaults.schedule.alertSentCheckbox],\n            alertLastPendingCheckbox: [defaults.schedule.alertLastPendingCheckbox],\n          }),\n        }),\n      );\n    });\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n  }\n\n  private createOvernightAddressFormGroup(payeeSummary: PayeeSummary): FormGroup {\n    const address = this.hasOvernightCheck(payeeSummary.paymentServices)\n      ? payeeSummary.overnightDeliveryAddress\n      : ({} as Address);\n    const paymentService = this.defaultPaymentService(payeeSummary);\n    const isOvernightAddressDisabled =\n      !paymentService?.paymentServiceType || paymentService.paymentServiceType !== PaymentServicesTypes.Overnight;\n\n    return this.fb.group({\n      address1: [\n        {\n          value: address?.address1,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      address2: [\n        {\n          value: address?.address2,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      city: [\n        {\n          value: address?.city,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      state: [\n        {\n          value: address?.state,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n      postalCode: [\n        {\n          value: address?.postalCode,\n          disabled: isOvernightAddressDisabled,\n        },\n      ],\n    });\n  }\n\n  private hasOvernightCheck = (services: PaymentService[] | undefined): boolean => {\n    return !!services?.find(item => item.paymentServiceType === PaymentServicesTypes.Overnight);\n  };\n\n  private defaultPaymentService(payee: PayeeSummary): PaymentServiceSummary | undefined {\n    return payee?.paymentServices?.find(\n      (item: PaymentServiceSummary) => item.paymentServiceType === PaymentServicesTypes.Regular,\n    );\n  }\n\n  handleSubmit() {\n    const paymentForms = Object.entries(this.paymentsFormGroup.value as PaymentFormState[])\n      .filter(([_id, form]) => !!+form.amount.amount)\n      .map(([_id, form]) => this.processFormData(form));\n    this.paymentStateService.isFormProcessing = true;\n    this.paymentStateService.updatePaymentState(paymentForms as any);\n    this.navigationService.navigateToReview({ relativeTo: this.route.parent });\n  }\n\n  private processFormData(data: PaymentFormState): PaymentFormState {\n    const startDate = data.schedule.frequency === FrequencyKeys.Once ? data.schedule.sendDate : data.schedule.startDate;\n    switch (data.schedule.endType) {\n      case EndTypes.After:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            startDate: startDate || '',\n            endDate: new Date(\n              this.scheduleService.estimatedEndDate(\n                data.schedule.startDate,\n                data.schedule.frequency,\n                data.schedule.repeat,\n              ),\n            ).toISOString(),\n          },\n        };\n      case EndTypes.On:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            startDate: startDate || '',\n            repeat: this.scheduleService.estimatedOccurences(\n              data.schedule.startDate,\n              data.schedule.endDate || data.schedule.startDate,\n              data.schedule.frequency,\n            ),\n          },\n        };\n      default:\n        return {\n          ...data,\n          schedule: {\n            ...data.schedule,\n            startDate: startDate || '',\n          },\n        };\n    }\n  }\n\n  private patchFormValue(value?: any) {\n    this.payeeSummaries?.forEach(payee => {\n      const formValue = value || this.defaultFormState(payee);\n      this.paymentsFormGroup.controls[payee.id].patchValue(formValue);\n    });\n  }\n\n  onDeleteEbills(resolve: boolean) {\n    this.isDeleteEbillsModalOpen = false;\n    if (resolve) {\n      this.deleteEbills()\n        .pipe(take(1))\n        .subscribe(() => {\n          this.deletionNotify('ebills');\n        });\n    }\n  }\n\n  onDeletePayee(resolve: boolean) {\n    this.isDeleteModalOpened = false;\n    if (resolve) {\n      this.deletePayee()\n        .pipe(take(1))\n        .subscribe(() => {\n          this.deletionNotify('delete');\n        });\n    }\n  }\n\n  onNavigateToPayments(hasNavigated: boolean) {\n    if (hasNavigated) {\n      this.navigationService.navigateToPayments();\n    }\n    this.isNavigateModalOpened = false;\n  }\n\n  private deletionNotify(type: string) {\n    this.payeeDataService.reloadPayees();\n    this.notificationType = type;\n    this.notificationService.showNotification({\n      header: this.notificationHeaderTemplate,\n      message: this.notificationMessageTemplate,\n      modifier: 'success',\n      ttl: this.configService.notificationDismissTime,\n    });\n  }\n\n  private openNavigateModal() {\n    this.isNavigateModalOpened = true;\n  }\n\n  openModal(): Observable<boolean> {\n    this.cdRef.markForCheck();\n    return this.paymentsFormGroup.touched || this.paymentStateService.isFormProcessing\n      ? this.discardModalService.openModal()\n      : of(true);\n  }\n\n  private patchPaymentDataToForm() {\n    this.paymentStateService.paymentState.pipe(take(1)).subscribe(paymentsState => {\n      if (paymentsState) {\n        paymentsState.forEach(payment => {\n          this.paymentsFormGroup.get(payment.payeeTo.id)?.patchValue(payment);\n        });\n      }\n    });\n  }\n\n  private deletePayee(): Observable<HttpResponse<any> | {}> {\n    return this.payeeDataService.selectedDeletePayee.pipe(\n      switchMap((payee: any) =>\n        payee ? this.payeeDataService.deletePayee(payee.id, payee.electronic) : (of() as Observable<any>),\n      ),\n    );\n  }\n  private deleteEbills(): Observable<HttpResponse<PayeeSummary> | {}> {\n    return this.payeeDataService.selectedDeleteEbills.pipe(\n      switchMap((payee: any) => (payee ? this.payeeDataService.deleteEbills(payee.id) : (of() as Observable<any>))),\n    );\n  }\n}\n","<ng-container *ngIf=\"!isErrorState; else errorState\">\n  <ng-container\n    *ngIf=\"(accounts$ | async) && payeeSummariesByEbillObservable$ | async as ebillGroupedData; else loadingState\"\n  >\n    <ng-container\n      *ngIf=\"\n        (ebillGroupedData.ebillsEnabled.length || ebillGroupedData.ebillsNotEnabled.length) &&\n          (accounts$ | async)?.length;\n        else emptyState\n      \"\n    >\n      <div class=\"bb-billpay-multiple-bills\">\n        <div\n          class=\"bb-block bb-block--lg\"\n          *ngIf=\"ebillGroupedData.ebillsEnabled.length\"\n          data-role=\"payees-with-active-e-bills-list\"\n        >\n          <div class=\"card card-lg\">\n            <div class=\"card-body\">\n              <div class=\"bb-block bb-block--lg\">\n                <bb-header-ui\n                  headingType=\"h2\"\n                  *ngIf=\"areBothListsPresent(ebillGroupedData)\"\n                  data-role=\"sub-header\"\n                  heading=\"Payees with Active eBills\"\n                  i18n-heading=\"\n                    Payees with eBills title|Title for the list of payees with eBills\n                    enabled@@billpay-payments-journey.multiple-bills.title.payees-with-ebills\"\n                >\n                </bb-header-ui>\n              </div>\n              <bb-billpay-payment-multiple-bills-list\n                [paymentsFormGroup]=\"paymentsFormGroup\"\n                [payeeSummaries]=\"ebillGroupedData.ebillsEnabled\"\n                [accounts]=\"accounts$ | async\"\n                [isForEbills]=\"true\"\n              ></bb-billpay-payment-multiple-bills-list>\n            </div>\n          </div>\n        </div>\n\n        <div\n          class=\"bb-billpay-multiple-bills-other-payees-card card card-lg\"\n          data-role=\"all-other-payees-list\"\n          *ngIf=\"ebillGroupedData.ebillsNotEnabled.length\"\n        >\n          <div class=\"card-body\">\n            <div class=\"bb-block bb-block--lg\">\n              <bb-header-ui\n                headingType=\"h2\"\n                *ngIf=\"areBothListsPresent(ebillGroupedData)\"\n                data-role=\"sub-header\"\n                heading=\"All Other Payees\"\n                i18n-heading=\"\n                  Payees without eBills title|Title for the list of payees that do not have eBills\n                  enabled@@billpay-payments-journey.multiple-bills.title.other-payees\"\n              >\n              </bb-header-ui>\n            </div>\n            <bb-billpay-payment-multiple-bills-list\n              [paymentsFormGroup]=\"paymentsFormGroup\"\n              [payeeSummaries]=\"ebillGroupedData.ebillsNotEnabled\"\n              [accounts]=\"accounts$ | async\"\n            ></bb-billpay-payment-multiple-bills-list>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payment-multiple-bills-sum-board\n  [totalAmount]=\"totalAmount$ | async\"\n  [actionButtons]=\"actionButtons\"\n  [inheritedId]=\"id\"\n></bb-billpay-payment-multiple-bills-sum-board>\n\n<ng-template #loadingState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #emptyState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        data-role=\"empty-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"assignment-ind\"\n        subtitle=\"Add a payee to make a bill payment\"\n        i18n-subtitle=\"\n          Add a payee to make a bill payment|Payee List no payees\n          subtitle@@bb-billpay-manage-widget-ang.bb-empty-state-ui.subtitle\"\n        title=\"No Payees\"\n        i18n-title=\"\n          No payees state text|Payee List no payees\n          title@@billpay-payments-journey.multiple-bills.bb-empty-state-ui.title\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-empty-state-ui\n        data-role=\"error-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"error-outline\"\n        subtitle=\"Try to reload the page or contact support\"\n        i18n-subtitle=\"\n          Try to reload the page or contact the support.|Payee List loading\n          subtitle@@bb-billpay-payee-list-widget-ang.loading.subtitle\"\n        title=\"Payee list is not loading\"\n        i18n-title=\"Payee list is not loading|Payee List loading title@@bb-billpay-payee-list-widget-ang.loading.title\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #actionButtons>\n  <div>\n    <div class=\"bb-stack\">\n      <button\n        bbButton\n        color=\"link\"\n        class=\"bb-stack__item bb-stack__item--spacing-md\"\n        (click)=\"handleClearForm()\"\n        data-role=\"multiple-bills-clear-button\"\n        i18n=\"@@billpay-payments-journey.multiple-bills.board.clear-button\"\n      >\n        Clear All\n      </button>\n      <button\n        bbButton\n        color=\"primary\"\n        class=\"bb-button-bar__button bb-stack__item bb-stack__item--spacing-none\"\n        data-role=\"multiple-bills-confirm-button\"\n        i18n=\"@@billpay-payments-journey.multiple-bills.board.confirm-button\"\n        attr.aria-describedby=\"total-amount-label-{{ id }}  total-amount-{{ id }}\"\n        (click)=\"handleSubmit()\"\n      >\n        Confirm Payment\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<bb-billpay-payee-delete-modal\n  *ngIf=\"isDeleteModalOpened\"\n  (resolve)=\"onDeletePayee($event)\"\n></bb-billpay-payee-delete-modal>\n\n<bb-billpay-ebills-delete-modal\n  *ngIf=\"isDeleteEbillsModalOpen\"\n  (resolve)=\"onDeleteEbills($event)\"\n></bb-billpay-ebills-delete-modal>\n\n<bb-billpay-payee-navigate-modal\n  *ngIf=\"isNavigateModalOpened\"\n  (resolve)=\"onNavigateToPayments($event)\"\n></bb-billpay-payee-navigate-modal>\n\n<ng-template #notificationMessage>\n  <div [ngSwitch]=\"notificationType\">\n    <div *ngSwitchCase=\"'ebills'\">\n      <span\n        *ngIf=\"selectedDeleteEbills$ | async as payee\"\n        i18n=\"\n          stop ebill notification message|Payee stop ebill confirmation success notification\n          message@@billpay-payee-list.stop-ebill-confirm.notification.message\"\n        >eBills for {{ payee.nickName ? payee.nickName + ' (' + payee.name + ')' : payee.name }} has been stopped\n        successfully</span\n      >\n    </div>\n    <div *ngSwitchCase=\"'delete'\">\n      <span\n        *ngIf=\"selectedDeletePayee$ | async as payee\"\n        i18n=\"\n          delete payee notification message|Payee delete confirmation success notification\n          message@@billpay-payee-list.delete-payee-confirm.notification.message\"\n        >The payee {{ payee.nickName ? payee.nickName + ' (' + payee.name + ')' : payee.name }} has been deleted\n        successfully</span\n      >\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <div [ngSwitch]=\"notificationType\">\n    <span\n      *ngSwitchCase=\"'ebills'\"\n      class=\"bb-text-bold\"\n      i18n=\"\n        eBills stopped notification header|eBills stopped confirmation success notification\n        header@@billpay-payee-list.confirm.notification.header\"\n      >eBills stopped</span\n    >\n    <span\n      *ngSwitchCase=\"'delete'\"\n      class=\"bb-text-bold\"\n      i18n=\"\n        delete payee notification header|Payee delete confirmation success notification\n        header@@billpay-payee-list.confirm.notification.header\"\n      >Payee deleted</span\n    >\n  </div>\n</ng-template>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-review-page-discard-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Cancel Bill Payments?\"\n  i18n-title=\"Discard changes modal header@@billpay.multiple-bills.discard-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel bill payments? Entered data will be lost.\"\n  i18n-subtitle=\"Discard changes modal body@@billpay.multiple-bills.discard-changes-modal.body\"\n  confirm-button-label=\"Cancel payment\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.multiple-bills.discard-changes-modal.confirm-button\"\n  cancel-button-label=\"Continue with payment\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.multiple-bills.discard-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n","import { Component, ViewChild } from '@angular/core';\nimport {\n  BillpayDiscardChangesFormComponent,\n  BillpayDiscardChangesModalService,\n} from '@backbase/billpay-journeys-common';\nimport { Observable } from 'rxjs';\nimport { BillpayPaymentMultipleBillsComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills.component';\nimport { PayBillsNavigationService } from '../services/pay-bills-navigation.service';\n\n@Component({\n  template: `\n    <div class=\"bb-stack bb-block bb-block--lg\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Pay Bills\"\n          i18n-heading=\"@@pay-bills-journey.title.pay-bills\"\n          data-role=\"multiple-bills-widget-title\"\n        >\n        </bb-header-ui>\n        <p i18n=\"@@pay-bills-journey.pay-payee.header-description\" data-role=\"multiple-bills-widget-title-info\">\n          Add payees if you would like to pay a single bill or multiple bills\n        </p>\n      </div>\n      <div class=\"bb-stack__item\">\n        <button bbButton color=\"secondary\" data-role=\"pay-a-bill-add-payee\" (click)=\"addPayee()\">\n          <i class=\"bb-icon bb-icon-add\"></i>\n          <span class=\"bb-accounts-overview-table__header-row\" i18n=\"@@pay-bills-journey.pay-bills.add-payee-button\"\n            >Add Payee</span\n          >\n        </button>\n      </div>\n    </div>\n    <bb-billpay-payment-multiple-bills #multipleBillsReview></bb-billpay-payment-multiple-bills>\n  `,\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentMultipleBillsViewComponent implements BillpayDiscardChangesFormComponent {\n  @ViewChild('multipleBillsReview') child!: BillpayPaymentMultipleBillsComponent;\n  constructor(private readonly navigationService: PayBillsNavigationService) {}\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n  addPayee() {\n    this.navigationService?.navigateToAddPayee();\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport {\n  BillpayPaymentScheduleService,\n  BillpayUtilityService as Utility,\n  FrequencyKeys,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsJourneyConfigService } from '../../../services/pay-bills-journey-config.service';\nimport { PaymentResult } from '../../../model/payment.model';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[bb-billpay-payment-multiple-bills-review-item]',\n  templateUrl: 'billpay-payment-multiple-bills-review-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsReviewItemComponent {\n  @Input() payment?: PaymentResult;\n  @Input() last?: boolean;\n  isCollapsed = true;\n  readonly id = Utility.generateId();\n\n  get endDate(): number {\n    const { startDate, repeat, frequency } = this.payment?.schedule || {};\n    const date = startDate || new Date().toISOString();\n    return this.scheduleService.estimatedEndDate(date, frequency as FrequencyKeys, repeat);\n  }\n\n  get frequencyLabel(): string {\n    const frequency = this.configservice.frequencies.find(\n      frequency => this.payment?.schedule.frequency === frequency.value,\n    );\n    return $localize`:@@pay-bill-journey.review-item.frequency-label:${frequency?.name || ''}`;\n  }\n\n  constructor(\n    private readonly scheduleService: BillpayPaymentScheduleService,\n    private readonly configservice: PayBillsJourneyConfigService,\n  ) {}\n}\n","<tr class=\"billpay-multipl-ebills-review__tr\" [class.billpay-multipl-ebills-review__item--expanded]=\"!isCollapsed\">\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-block bb-d-md-table-cell\">\n    <ng-container *ngIf=\"payment?.hasOwnProperty('succeeded'); else payeeTmp\">\n      <div class=\"bb-stack\">\n        <bb-icon-ui\n          class=\"bb-stack__item bb-stack__item--spacing-md\"\n          [name]=\"payment?.succeeded ? 'success' : 'error-outline'\"\n          size=\"md\"\n          [color]=\"payment?.succeeded ? 'success' : 'danger'\"\n        ></bb-icon-ui>\n        <div class=\"bb-stack__item\">\n          <ng-container *ngTemplateOutlet=\"payeeNameTmp\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    {{ payment?.accountFrom.accountNickName }} (*{{ payment?.accountFrom.accountNumber | slice: -4 }})\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    {{ payment?.schedule?.startDate | bbDate: 'MM/dd/yyyy' }}\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-d-none bb-d-md-table-cell\">\n    <ng-container *ngTemplateOutlet=\"amountTmp; context: payment\"></ng-container>\n  </td>\n  <td class=\"billpay-multipl-ebills-review__cell bb-text-align-right\">\n    <button\n      bbButton\n      class=\"billpay-multipl-ebills-review__toggler\"\n      buttonSize=\"sm\"\n      color=\"text-link\"\n      [circle]=\"true\"\n      aria-label=\"dropdown-button\"\n      data-role=\"multipl-ebills-review-toggler\"\n      (click)=\"isCollapsed = !isCollapsed\"\n      [attr.aria-expanded]=\"!isCollapsed\"\n      [attr.aria-controls]=\"'collapse' + id\"\n    >\n      <bb-icon-ui\n        class=\"bb-stack__item\"\n        [name]=\"isCollapsed ? 'toggle-down' : 'toggle-up'\"\n        size=\"md\"\n        data-role=\"toggle-icon\"\n      ></bb-icon-ui>\n    </button>\n  </td>\n</tr>\n<tr *ngIf=\"payment?.hasOwnProperty('succeeded')\" class=\"billpay-multipl-ebills-review__tr\">\n  <td *ngIf=\"!payment?.succeeded\" colspan=\"5\" class=\"billpay-multipl-ebills-review__cell\">\n    <span class=\"bb-text-danger\" i18n=\"@@bb-billpay-multiple-bills-review.mixed-results.fail-message\"\n      >The payment of this bill could not be scheduled.</span\n    >\n  </td>\n</tr>\n<!-- Mobile screen view -->\n<tr class=\"bb-d-md-none billpay-multipl-ebills-review__tr\">\n  <td colspan=\"2\" class=\"billpay-multipl-ebills-review__cell\">\n    <ng-container *ngTemplateOutlet=\"amountTmp; context: payment\"></ng-container>\n  </td>\n</tr>\n<!-- Extra fields -->\n<tr data-role=\"multipl-ebills-extended-fields\" class=\"billpay-multipl-ebills-review__tr\">\n  <td colspan=\"5\">\n    <div [id]=\"'collapse' + id\" [ngbCollapse]=\"isCollapsed\">\n      <div class=\"billpay-multipl-ebills-review__cell\">\n        <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\" *ngIf=\"payment?.memo\">\n          <bb-icon-ui\n            name=\"subject\"\n            size=\"sm\"\n            color=\"secondary\"\n            class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n          ></bb-icon-ui>\n          <div class=\"bb-stack__item\">\n            <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n              <span i18n=\"@@bb-billpay-multiple-bills-review.memo\">Memo</span>\n            </div>\n            <div class=\"break-word bb-subtitle bb-text-support\" data-role=\"payment-description\">\n              {{ payment?.memo }}\n            </div>\n          </div>\n        </div>\n        <ng-container *ngIf=\"payment?.schedule as schedule\">\n          <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n            <bb-icon-ui\n              name=\"cached\"\n              size=\"sm\"\n              color=\"secondary\"\n              class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n            ></bb-icon-ui>\n            <div class=\"bb-stack__item\">\n              <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n                <span\n                  i18n=\"\n                    Payment details frequency|Label for frequency in details\n                    group@@billpay-multiple-bills-review.details.frequency-label\"\n                  >Frequency</span\n                >\n              </div>\n              <div data-role=\"payment-frequency\">\n                {{ frequencyLabel }}\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"schedule.frequency === 'ONCE'\">\n            <ng-container *ngIf=\"payment?.overnightDeliveryAddress as address\">\n              <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n                <bb-icon-ui\n                  name=\"subject\"\n                  size=\"sm\"\n                  color=\"secondary\"\n                  class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n                ></bb-icon-ui>\n                <div class=\"bb-stack__item\">\n                  <div\n                    data-role=\"overnight-address-label\"\n                    i18n=\"\n                      Payment overnight address|Label for overnight\n                      address@@billpay-payment-review-card.details.overnight-address.label\"\n                    class=\"bb-text-bold\"\n                  >\n                    Overnight check address\n                  </div>\n                  <div data-role=\"overnight-address\" class=\"bb-block bb-block--md\">\n                    <div>{{ address.address1 }}</div>\n                    <div *ngIf=\"address.address2\">{{ address.address2 }}</div>\n                    <div>{{ address.city }}&nbsp;{{ address.state }}&nbsp;{{ address.postalCode }}</div>\n                  </div>\n                </div>\n              </div>\n            </ng-container>\n          </ng-container>\n\n          <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n            <bb-icon-ui\n              name=\"today\"\n              size=\"sm\"\n              color=\"secondary\"\n              class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n            ></bb-icon-ui>\n            <div class=\"bb-stack__item\">\n              <div\n                i18n=\"\n                  Payment details deliver by|Label for deliver by in details\n                  group@@billpay-payment-review-card.details.amount.other\"\n                class=\"bb-text-bold\"\n                data-role=\"deliver-by\"\n              >\n                { schedule.frequency, select, ONCE {Deliver payment by } other {Deliver first payment by } }\n              </div>\n              <div data-role=\"deliver-date\">\n                {{ schedule.startDate | date: 'mediumDate' }}\n              </div>\n            </div>\n          </div>\n\n          <ng-container *ngIf=\"schedule.frequency !== 'ONCE'\">\n            <!-- EndDate -->\n            <div class=\"bb-block bb-block--md bb-stack bb-stack--align-top\">\n              <bb-icon-ui\n                name=\"today\"\n                size=\"sm\"\n                color=\"secondary\"\n                class=\"bb-stack__item bb-stack__item--spacing-sm bicon\"\n              ></bb-icon-ui>\n              <div class=\"bb-stack__item\">\n                <div\n                  i18n=\"\n                    Payment details ending|Label for ending in details\n                    group@@billpay-payment-review-card.details.ending-label\"\n                  class=\"bb-text-bold\"\n                  data-role=\"ending-label\"\n                >\n                  Ending\n                </div>\n                <div data-role=\"ending\">\n                  <span\n                    *ngIf=\"schedule?.repeat; else neverEndingTmp\"\n                    i18n=\"\n                      Payment details ending|Label for ending in details\n                      group@@billpay-payment-review-card.details.ending\"\n                    >After { schedule.repeat, plural, =1 {{{schedule.repeat}} payment } other\n                    {{{schedule.repeat}} payments } } (estimated {{ endDate | date: 'mediumDate' }})\n                  </span>\n                  <ng-template #neverEndingTmp>\n                    <span\n                      i18n=\"\n                        Payment details ending|Label for never ending\n                        payment@@billpay-payment-review-card.details.ending.never\"\n                      >Never\n                    </span>\n                  </ng-template>\n                </div>\n              </div>\n            </div>\n\n            <!-- Notify section -->\n            <ng-container\n              *ngIf=\"\n                schedule?.alertPendingCheckbox || schedule?.alertSentCheckbox || schedule?.alertLastPendingCheckbox\n              \"\n            >\n              <div\n                i18n=\"\n                  Payment details notify me|Label for notify me in details\n                  group@@billpay-payment-review-card.details.notify\"\n                class=\"bb-text-bold\"\n                data-role=\"notify-label\"\n              >\n                Notify me\n              </div>\n              <div>\n                <ul>\n                  <li\n                    *ngIf=\"schedule?.alertPendingCheckbox\"\n                    i18n=\"\n                      Payment details when a payment is pending|Label for when a payment is pending in details\n                      group@@billpay-payment-review-card.details.notify.pending\"\n                    data-role=\"alertPendingCheckbox\"\n                  >\n                    When a payment is pending\n                  </li>\n                  <li\n                    *ngIf=\"schedule?.alertSentCheckbox\"\n                    i18n=\"\n                      Payment details when a payment has been sent|Label for when a payment has been sent in details\n                      group@@billpay-payment-review-card.details.notify.sent\"\n                    data-role=\"alertSentCheckbox\"\n                  >\n                    When a payment has been sent\n                  </li>\n                  <li\n                    *ngIf=\"schedule?.alertLastPendingCheckbox\"\n                    i18n=\"\n                      Payment details when the last payment is pending|Label for when the last payment is pending in\n                      details group@@billpay-payment-review-card.details.notify.pending.last\"\n                    data-role=\"alertLastPendingCheckbox\"\n                  >\n                    When the last payment is pending\n                  </li>\n                </ul>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </td>\n</tr>\n<tr class=\"billpay-multipl-ebills-review__tr billpay-multipl-ebills-review__tr--last\" aria-hidden=\"true\">\n  <td colspan=\"5\"></td>\n</tr>\n<tr class=\"billpay-multipl-ebills-review__seperator\" aria-hidden=\"true\" *ngIf=\"!last\"></tr>\n<!-- Payee -->\n<ng-template #payeeTmp>\n  <ng-container\n    *ngIf=\"\n      payment?.payeeTo?.ebill?.enabled &&\n        payment?.payeeTo?.ebill?.latestBill?.status !== 'PAID' &&\n        payment?.payeeTo?.ebill?.latestBill?.paymentDate;\n      else payeeNameTmp\n    \"\n  >\n    <label class=\"bb-block bb-block--no-margin\">{{ payment?.payeeTo?.nickName || payment?.payeeTo?.name }}</label>\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n        data-role=\"receipt-icon\"\n        size=\"sm\"\n        name=\"receipt\"\n        color=\"secondary\"\n      ></bb-icon-ui>\n      <span\n        class=\"bb-stack__item bb-subtitle bb-text-support\"\n        data-role=\"due-date-label\"\n        *ngIf=\"payment?.payeeTo?.ebill?.latestBill?.paymentDate as ebillPaymentDate\"\n      >\n        <bb-amount-ui\n          *ngIf=\"payment?.payeeTo?.ebill?.latestBill?.minAmountDue as minAmountDue\"\n          [currency]=\"minAmountDue?.currency\"\n          [amount]=\"minAmountDue?.amount\"\n        ></bb-amount-ui>\n        <span\n          i18n=\"\n            Ebill due note|Text for the information about the due eBill@@bb-billpay-multiple-bills-review.note.ebill-due\"\n        >\n          due on</span\n        >\n        {{ ebillPaymentDate | bbDate: 'MMM d' }}\n      </span>\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #payeeNameTmp>\n  <label class=\"bb-label\">{{ payment?.payeeTo?.nickName || payment?.payeeTo?.name }}</label>\n</ng-template>\n<!-- Amount -->\n<ng-template #amountTmp let-amount=\"amount\">\n  <bb-amount-ui class=\"bb-text-semi-bold\" [currency]=\"amount.currency\" [amount]=\"amount.amount\"> </bb-amount-ui>\n</ng-template>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { PaymentResult } from '../../../model/payment.model';\n\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-review-table',\n  templateUrl: 'billpay-payment-multiple-bills-review-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsReviewTableComponent {\n  @Input() payments?: PaymentResult[];\n}\n","<table\n  class=\"billpay-multipl-ebills-review\"\n  aria-label=\"Review Your Payment\"\n  i18n-aria-label=\"@@billpay-payments-journey.multiple-bills.table-description\"\n>\n  <thead>\n    <tr class=\"bb-d-none bb-d-md-table-row\">\n      <th scope=\"col\" class=\"billpay-multipl-ebills-review__cell\">\n        <span\n          i18n=\"@@bb-billpay-multiple-bills-review.titles.payee\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          data-role=\"multiple-ebills-review-payee\"\n          >Payee</span\n        >\n      </th>\n      <th scope=\"col\" class=\"billpay-multipl-ebills-review__cell\">\n        <span\n          i18n=\"@@bb-billpay-multiple-bills-review.titles.from-account\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          data-role=\"multiple-ebills-review-from-account\"\n          >From Account</span\n        >\n      </th>\n      <th scope=\"col\" class=\"billpay-multipl-ebills-review__cell\">\n        <div class=\"bb-stack\">\n          <span\n            class=\"bb-subtitle bb-text-semi-bold bb-stack__item bb-stack__item--spacing-xs\"\n            i18n=\"@@bb-billpay-multiple-bills-review.titles.delivery-date\"\n            data-role=\"multiple-bills-review-delivery-date\"\n            >Est. Delivery\n          </span>\n          <span\n            bbTooltip=\"The date we expect your payment to reach the payee. That may vary from payee to payee.\"\n            placement=\"top\"\n            [triggers]=\"'hover'\"\n            i18n=\"@@bb-billpay-multiple-bills-review.delivery-date.tooltip\"\n            class=\"bb-d-flex\"\n          >\n            <bb-icon-ui name=\"info\" size=\"sm\" class=\"bb-billpay-multiple-bills__tooltip\"></bb-icon-ui>\n          </span>\n        </div>\n      </th>\n      <th scope=\"col\" class=\"billpay-multipl-ebills-review__cell\">\n        <span\n          i18n=\"@@bb-billpay-multiple-bills-review.titles.amount\"\n          class=\"bb-subtitle bb-text-semi-bold\"\n          data-role=\"multiple-ebills-review-amount\"\n          >Amount</span\n        >\n      </th>\n      <th scope=\"col\" aria-hidden=\"true\"></th>\n    </tr>\n  </thead>\n  <tbody\n    bb-billpay-payment-multiple-bills-review-item\n    *ngFor=\"let payment of payments; let last = last\"\n    [last]=\"last\"\n    [payment]=\"payment\"\n  ></tbody>\n</table>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PaymentFormState, BillpayUtilityService as Utility } from '@backbase/billpay-journeys-common';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { PaymentResult } from '../../../model/payment.model';\n\ndeclare const $localize: any;\n\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-success',\n  templateUrl: 'billpay-payment-multiple-bills-success.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BillpayPaymentMultipleBillsSuccessComponent {\n  readonly id = Utility.generateId();\n  successMsg?: string;\n  mixedMsg?: string;\n  allSucceeded = true;\n  payments?: PaymentResult[];\n\n  @Input() set results(value: PaymentResult[]) {\n    const succeded = value.filter(payment => payment.succeeded);\n    this.allSucceeded = succeded.length === value.length;\n    if (this.allSucceeded) {\n      const getPayee = (payment: PaymentFormState) => payment.payeeTo.nickName || payment.payeeTo.name;\n      const payees = value\n        .map((payment, i) => {\n          if (i === 0) return getPayee(payment);\n          return i === value.length - 1 ? ' and ' + getPayee(payment) : ', ' + getPayee(payment);\n        })\n        .join('');\n      this.successMsg = $localize`You’ve just scheduled ${value.length} payment${\n        value.length > 1 ? 's' : ''\n      } to ${payees}.`;\n    } else {\n      this.payments = value;\n      this.mixedMsg = $localize`You scheduled sucessfully ${succeded.length} out of ${value.length} bills.`;\n    }\n  }\n\n  private readonly resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-pay-bills-journey',\n    getURIFromAssetID: (assetId: string) => `${assetId}`,\n  });\n\n  successImg: Observable<string> = this.resolveAsset('succeed.svg');\n  successImgNoMotion: Observable<string> = this.resolveAsset('no-motion.svg');\n\n  constructor(\n    private readonly assetsService: AssetsService,\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly route: ActivatedRoute,\n  ) {}\n\n  payMore() {\n    this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n  }\n  goToMyAccounts() {\n    this.navigationService?.navigateToMainAppPage();\n  }\n}\n","<div class=\"card card-lg bb-billpay-multiple-bills-other-payees-card\">\n  <div class=\"card-body\">\n    <ng-container *ngIf=\"allSucceeded; else mixedStatus\">\n      <div class=\"bb-text-align-center bb-block--xl\" role=\"alert\">\n        <picture>\n          <source srcset=\"{{ successImgNoMotion | async }}\" media=\"(prefers-reduced-motion: reduce)\" />\n          <img\n            srcset=\"{{ (successImg | async) + '?' + id }}\"\n            alt=\"Success!\"\n            i18n-alt=\"Success!|Text for transfer succeeded@@bb-billpay-multiple-bills-review.transfer-succeeded\"\n            data-role=\"transfer-success-anim\"\n            class=\"img-fluid\"\n          />\n        </picture>\n        <bb-header-ui\n          headingClasses=\"bb-text-semi-bold\"\n          headingType=\"h2\"\n          data-role=\"success-title\"\n          heading=\"Your Bills Were Successfully Scheduled!\"\n          i18n-heading=\"@@billpay-payments-journey.multiple-bills.success.title\"\n        ></bb-header-ui>\n        <span class=\"bb-text-support\">{{ successMsg }}</span>\n      </div>\n    </ng-container>\n    <div class=\"bb-stack bb-stack--center\">\n      <button\n        bbButton\n        color=\"primary\"\n        class=\"bb-stack__item\"\n        data-role=\"multiple-bills-success-pay-more\"\n        i18n=\"@@bb-billpay-multiple-bills-review.transfer-done\"\n        (click)=\"payMore()\"\n      >\n        Pay Another Bill\n      </button>\n      <button bbButton color=\"secondary\" class=\"bb-stack__item\" i18n=\"@@bb-billpay-multiple-bills-review.my-accounts\" (click)=\"goToMyAccounts()\">\n        Go to My Accounts\n      </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #mixedStatus>\n  <div class=\"bb-text-align-center bb-block--xl\">\n    <bb-header-ui\n      headingClasses=\"bb-text-semi-bold\"\n      headingType=\"h2\"\n      data-role=\"success-title\"\n      [heading]=\"mixedMsg\"\n    ></bb-header-ui>\n    <span class=\"bb-text-support\" i18n=\"@@billpay-payments-journey.multiple-bills.mixed-status.message\"\n      >Review the payments that have been processed and the other that failed below</span\n    >\n  </div>\n  <div class=\"bb-block bb-block--xl\">\n    <bb-billpay-payment-multiple-bills-review-table\n      [payments]=\"payments\"\n    ></bb-billpay-payment-multiple-bills-review-table>\n  </div>\n</ng-template>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  BillpayDiscardChangesModalService,\n  BillpayPaymentDataService,\n  PaymentFormState,\n  BillpayUtilityService as Utility,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsNavigationService } from '../../../services/pay-bills-navigation.service';\nimport { forkJoin, Observable, of, Subject } from 'rxjs';\nimport { catchError, map, mapTo, takeUntil, tap } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { PayBillsStateService } from '../../../services/pay-bills-state.service';\nimport { PaymentResult } from '../../../model/payment.model';\n\n@Component({\n  selector: 'bb-billpay-payment-multiple-bills-review',\n  templateUrl: 'billpay-payment-multiple-bills-review.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [BillpayDiscardChangesModalService],\n})\nexport class BillpayPaymentMultipleBillsReviewComponent implements OnDestroy {\n  private readonly destroy$ = new Subject();\n  private editMode = false;\n  /**\n   * Flag for payment error\n   */\n  paymentError = false;\n  /**\n   * Flag for submitting payment\n   */\n  submittingPayment = false;\n  readonly id = Utility.generateId();\n  /**\n   * Refrence for fail alert\n   */\n  @ViewChild('failAlert') failAlert!: ElementRef;\n  /**\n   * List of payments\n   */\n  payments$ = this.paymentStateService.paymentState.pipe(\n    tap(paymentForms => {\n      if (!paymentForms?.length) {\n        this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n      }\n    }),\n  );\n  /**\n   * Carry the amount for total amount to be paid\n   */\n  totalAmount$ = this.payments$.pipe(\n    map(payments => payments?.reduce((acc: number, payment: PaymentFormState) => acc + +payment.amount.amount, 0)),\n  );\n  /**\n   * List of responses results\n   */\n  results?: PaymentResult[] = [];\n\n  get isDiscardModalOpen() {\n    return this.discardModalService.isDiscardModalOpen;\n  }\n\n  constructor(\n    private readonly paymentStateService: PayBillsStateService,\n    private readonly dataService: BillpayPaymentDataService,\n    private readonly navigationService: PayBillsNavigationService,\n    private readonly route: ActivatedRoute,\n    private readonly discardModalService: BillpayDiscardChangesModalService,\n    private cdRef: ChangeDetectorRef,\n  ) {}\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  onWindowUnload($event: BeforeUnloadEvent) {\n    if (!this.isDiscardModalOpen) {\n      $event.returnValue = true;\n    }\n  }\n\n  /**\n   * Methos to send payment to server\n   */\n  onPaymentConfirm(payments: PaymentFormState[]) {\n    this.paymentError = false;\n    this.results = [];\n    this.submittingPayment = true;\n    forkJoin(\n      payments.map(payment =>\n        this.dataService.createPayment(payment).pipe(\n          mapTo({ ...payment, succeeded: true }),\n          catchError(() => of({ succeeded: false, ...payment })),\n        ),\n      ),\n    )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(async responseList => {\n        this.submittingPayment = false;\n        this.paymentStateService.isFormProcessing = false;\n        const errors = responseList.filter(response => !response?.succeeded);\n        errors.length === payments.length ? this.allFailed() : (this.results = responseList);\n        this.cdRef.markForCheck();\n      });\n  }\n\n  private navigateToForm(resetFormValue: boolean = false) {\n    if (resetFormValue) {\n      this.paymentStateService.reset();\n    }\n    this.navigationService.navigateToForm({ relativeTo: this.route.parent });\n  }\n\n  private allFailed() {\n    this.paymentStateService.isFormProcessing = true;\n    this.submittingPayment = false;\n    this.paymentError = true;\n    this.cdRef.markForCheck();\n    this.failAlert?.nativeElement.scrollIntoView(false);\n  }\n\n  openModal(): Observable<boolean> {\n    if (this.paymentStateService.isFormProcessing && !this.editMode && !this.paymentError) {\n      return this.discardModalService.openModal();\n    }\n    return of(true);\n  }\n\n  onCancel() {\n    this.navigateToForm(!!this.paymentError);\n  }\n\n  onModalResolve(isConfirmed: boolean) {\n    this.discardModalService.onModalResolve(isConfirmed);\n    if (isConfirmed) {\n      this.paymentStateService.reset();\n    }\n  }\n\n  onEdit() {\n    this.editMode = true;\n    this.navigateToForm();\n  }\n}\n","<ng-container *ngIf=\"payments$ | async as payments\">\n  <ng-container *ngTemplateOutlet=\"results?.length ? successScreen : reviewTemplate\"> </ng-container>\n  <ng-template #reviewTemplate>\n    <div class=\"card card-lg bb-billpay-multiple-bills-other-payees-card\">\n      <div class=\"card-body\">\n        <div #failAlert>\n          <bb-alert-ui\n            title=\"Something went wrong. Please try again\"\n            i18n-title=\"@@billpay-payments-journey.multiple-bills.fail-message\"\n            (close)=\"(false)\"\n            modifier=\"error\"\n            data-role=\"failure-message\"\n            *ngIf=\"paymentError\"\n          >\n          </bb-alert-ui>\n        </div>\n        <bb-billpay-payment-multiple-bills-review-table\n          [payments]=\"payments\"\n        ></bb-billpay-payment-multiple-bills-review-table>\n      </div>\n    </div>\n\n    <bb-billpay-payment-multiple-bills-sum-board\n      [totalAmount]=\"totalAmount$ | async\"\n      [actionButtons]=\"actionButtons\"\n      [inheritedId]=\"id\"\n    ></bb-billpay-payment-multiple-bills-sum-board>\n  </ng-template>\n  <ng-template #actionButtons>\n    <div>\n      <div class=\"bb-stack\">\n        <button\n          bbButton\n          color=\"link\"\n          class=\"btn-link bb-stack__item bb-stack__item--spacing-md bb-d-none bb-d-md-block\"\n          data-role=\"multiple-bills-cancel-button\"\n          i18n=\"@@billpay-payments-journey.multiple-bills.board.cancel-button\"\n          (click)=\"onCancel()\"\n        >\n          Cancel\n        </button>\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"bb-d-none bb-d-md-block bb-stack__item bb-stack__item--spacing-md\"\n          data-role=\"multiple-bills-edit-button\"\n          i18n=\"@@billpay-payments-journey.multiple-bills.board.edit-button\"\n          (click)=\"onEdit()\"\n        >\n          Edit Payment\n        </button>\n        <button\n          bbButton\n          color=\"secondary\"\n          [circle]=\"true\"\n          class=\"bb-d-md-none bb-stack__item bb-stack__item--spacing-md\"\n          data-role=\"multiple-bills-edit-button\"\n          i18n=\"@@billpay-payments-journey.multiple-bills.board.edit-button\"\n          (click)=\"onEdit()\"\n        >\n          <bb-icon-ui name=\"edit\"></bb-icon-ui>\n        </button>\n        <bb-load-button-ui\n          color=\"primary\"\n          class=\"bb-stack__item bb-stack__item--spacing-none\"\n          data-role=\"multiple-bills-confirm-button\"\n          [isLoading]=\"submittingPayment\"\n          (click)=\"onPaymentConfirm(payments)\"\n          attr.aria-describedby=\"total-amount-label-{{ id }}  total-amount-{{ id }}\"\n        >\n          <span i18n=\"@@billpay-payments-journey.multiple-bills.board.confirm-button\" class=\"bb-d-none bb-d-md-block\"\n            >Confirm Payment</span\n          >\n          <span i18n=\"@@billpay-payments-journey.multiple-bills.board.confirm-button.mobile\" class=\"bb-d-md-none\"\n            >Pay</span\n          >\n        </bb-load-button-ui>\n      </div>\n    </div>\n  </ng-template>\n  <ng-template #successScreen>\n    <bb-billpay-payment-multiple-bills-success [results]=\"results\"></bb-billpay-payment-multiple-bills-success>\n  </ng-template>\n</ng-container>\n\n<bb-billpay-payment-discard-changes-modal\n  *ngIf=\"isDiscardModalOpen\"\n  data-role=\"billpay-payment-review-page-discard-changes-modal\"\n  (resolve)=\"onModalResolve($event)\"\n  title=\"Cancel Bill Payments?\"\n  i18n-title=\"Discard changes modal header@@billpay.multiple-bills.discard-changes-modal.header\"\n  subtitle=\"Are you sure you want to cancel bill payments? Entered data will be lost.\"\n  i18n-subtitle=\"Discard changes modal body@@billpay.multiple-bills.discard-changes-modal.body\"\n  confirm-button-label=\"Cancel Payments\"\n  i18n-confirm-button-label=\"\n    confirm modal button|Cancel payment confirmation button@@billpay.multiple-bills.discard-changes-modal.confirm-button\"\n  cancel-button-label=\"Not Now\"\n  i18n-cancel-button-label=\"\n    cancel modal button|Continue with current payment button@@billpay.multiple-bills.discard-changes-modal.cancel-button\"\n></bb-billpay-payment-discard-changes-modal>\n","import { Component, ViewChild } from '@angular/core';\nimport { BillpayDiscardChangesFormComponent } from '@backbase/billpay-journeys-common';\nimport { BillpayPaymentMultipleBillsReviewComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review/billpay-payment-multiple-bills-review.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n  template: `\n    <div class=\"bb-block bb-block--lg bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-block bb-block--md pl-0\"\n          data-role=\"pay-a-bill-journey-back\"\n          (click)=\"navigateToForm()\"\n        >\n          <i aria-hidden=\"true\" class=\"bb-icon bb-icon-arrow-back\"></i>\n          <span i18n=\"button label|Back button@@pay-bills-journey.back-to-multiple-bills\">Back To Pay Bills</span>\n        </button>\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Review Your Payments\"\n          i18n-heading=\"@@pay-bills-journey.title.review-bills\"\n          data-role=\"pay-a-bill-journey-title\"\n        >\n        </bb-header-ui>\n      </div>\n    </div>\n    <bb-billpay-payment-multiple-bills-review #multipleBillsReview></bb-billpay-payment-multiple-bills-review>\n  `,\n})\nexport class BillpayPaymentMultipleBillsReviewViewComponent implements BillpayDiscardChangesFormComponent {\n  @ViewChild('multipleBillsReview') child!: BillpayPaymentMultipleBillsReviewComponent;\n  openModal(): Observable<boolean> {\n    return this.child.openModal();\n  }\n\n  navigateToForm() {\n    this.child.onCancel();\n  }\n}\n","import { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { BillpayBaseDeactivateGuardService } from '@backbase/billpay-journeys-common';\n\n@Injectable()\nexport class BillpayManagePaymentDeactivateGuardService extends BillpayBaseDeactivateGuardService {\n  protected readonly allowedNextRoutes = [\n    /^.*;payee=.+$/,\n    /^.*\\/review$/,\n    /^.*\\/recurring\\/edit\\/.+(\\/review.+)?$/,\n    /^.*\\/one-off\\/edit\\/.+(\\/review.+)?$/,\n  ];\n  protected readonly allowedPreviousRoutes = [\n    /^.*;payee=.+$/,\n    /^.*(\\/review)$/,\n    /^.*(\\/form){1}$/,\n    /^.*\\/recurring\\/edit\\/.+(\\/review.+)?$/,\n    /^.*\\/one-off\\/edit\\/.+(\\/review.+)?$/,\n  ];\n  /** @internal */\n  constructor(router: Router, location: Location) {\n    super(router, location);\n  }\n}\n","import { BillpayPaymentMultipleBillsComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills.component';\nimport { BillpayPaymentMultipleBillsSumBoardComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-sum-board/billpay-payment-multiple-bills-sum-board.component';\nimport { BillpayPaymentMultipleBillsListItemComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list-item/billpay-payment-multiple-bills-list-item.component';\nimport { BillpayPaymentMultipleBillsListComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-bills-list/billpay-payment-multiple-bills-list.component';\n\nimport { BillpayPaymentFrequencyComponent } from '../components/form-components/billpay-payment-frequency/billpay-payment-frequency.component';\nimport { BillpayPaymentStartDateComponent } from '../components/form-components/billpay-payment-start-date/billpay-payment-start-date.component';\nimport { BillpayPaymentEndDateComponent } from '../components/form-components/billpay-payment-end-date/billpay-payment-end-date.component';\nimport { BillpayPaymentMultipleBillsReviewComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review/billpay-payment-multiple-bills-review.component';\nimport { BillpayPaymentMultipleBillsReviewItemComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-item/billpay-payment-multiple-bills-review-item.component';\nimport { BillpayPaymentMultipleBillsSuccessComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-success/billpay-payment-multiple-bills-success.component';\nimport { BillpayPaymentCompactProductSelectorComponent } from '../components/form-components/billpay-payment-compact-product-selector/billpay-payment-compact-product-selector.component';\nimport { BillpayPaymentMultipleBillsReviewTableComponent } from '../components/billpay-payment-multiple-bills/billpay-payment-multiple-ebills-review-table/billpay-payment-multiple-bills-review-table.component';\nimport { BillpayPaymentFormContainerComponent } from '../components/billpay-payment-single-bill/billpay-payment-form-container/billpay-payment-form-container.component';\nimport { BillpayEbillPaymentUIComponent } from './billpay-payment-single-bill/billpay-ebill-payment-ui/billpay-ebill-payment-ui.component';\nimport { ScheduleComponent } from './billpay-payment-single-bill/bb-schedule-ui/schedule.component';\nimport { ScheduleLabelComponent } from './billpay-payment-single-bill/bb-schedule-label-ui/schedule-label.component';\nimport { BillpayPaymentDiscardChangesModalComponent } from './billpay-payment-single-bill/billpay-payment-discard-changes-modal/billpay-payment-discard-changes-modal.component';\nimport { BillpayPaymentFormComponent } from './billpay-payment-single-bill/billpay-payment-form/billpay-payment-form.component';\nimport { BillpayPaymentRecurringEditReviewContainerComponent } from './billpay-payment-single-bill/billpay-payment-recurring-edit-review-container/billpay-payment-recurring-edit-review-container.component';\nimport { BillpayPaymentReviewContainerComponent } from './billpay-payment-single-bill/billpay-payment-review-container/billpay-payment-review-container.component';\nimport { BillpayPaymentRecurringEditFormContainerComponent } from './billpay-payment-single-bill/billpay-payment-recurring-edit-form-container/billpay-payment-recurring-edit-form-container.component';\nimport { BillpayPaymentOneOffEditReviewContainerComponent } from './billpay-payment-single-bill/billpay-payment-one-off-edit-review-container/billpay-payment-one-off-edit-review-container.component';\nimport { BillpayPaymentOneOffEditFormContainerComponent } from './billpay-payment-single-bill/billpay-payment-one-off-edit-form-container/billpay-payment-one-off-edit-form-container.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BillpayJourneysCommonModule } from '@backbase/billpay-journeys-common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { AmountInputModule } from '@backbase/ui-ang/amount-input';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CharCounterModule } from '@backbase/ui-ang/char-counter';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { CurrencyInputModule } from '@backbase/ui-ang/currency-input';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EllipsisModule } from '@backbase/ui-ang/ellipsis';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { FieldsetModule } from '@backbase/ui-ang/fieldset';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { InputNumberModule } from '@backbase/ui-ang/input-number';\nimport { InputRadioGroupModule } from '@backbase/ui-ang/input-radio-group';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { ProductItemCurrentAccountModule } from '@backbase/ui-ang/product-item-current-account';\nimport { ProductSelectorModule } from '@backbase/ui-ang/product-selector';\nimport { TextareaModule } from '@backbase/ui-ang/textarea';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\n\nconst uiAngModules = [\n  LoadingIndicatorModule,\n  BbDatePipeModule,\n  EmptyStateModule,\n  ModalModule,\n  DropdownSingleSelectModule,\n  InputRadioGroupModule,\n  InputNumberModule,\n  ButtonModule,\n  InputCheckboxModule,\n  ProductItemCurrentAccountModule,\n  ProductItemBasicAccountModule,\n  ProductSelectorModule,\n  CurrencyInputModule,\n  CharCounterModule,\n  IconModule,\n  FieldsetModule,\n  AlertModule,\n  InputValidationMessageModule,\n  InputDatepickerModule,\n  CollapsibleModule,\n  TextareaModule,\n  AmountInputModule,\n  AlertModule,\n  AmountModule,\n  DropdownMenuModule,\n  EllipsisModule,\n  HeaderModule,\n  LoadButtonModule,\n  TooltipModule,\n];\n\nconst components = [\n  BillpayPaymentMultipleBillsComponent,\n  BillpayPaymentMultipleBillsSumBoardComponent,\n  BillpayPaymentMultipleBillsListItemComponent,\n  BillpayPaymentMultipleBillsListComponent,\n  BillpayPaymentMultipleBillsReviewComponent,\n  BillpayPaymentMultipleBillsReviewItemComponent,\n  BillpayPaymentMultipleBillsReviewTableComponent,\n  BillpayPaymentMultipleBillsSuccessComponent,\n  BillpayPaymentFrequencyComponent,\n  BillpayPaymentStartDateComponent,\n  BillpayPaymentEndDateComponent,\n  BillpayPaymentCompactProductSelectorComponent,\n  BillpayPaymentFormContainerComponent,\n  BillpayEbillPaymentUIComponent,\n  ScheduleComponent,\n  ScheduleLabelComponent,\n  BillpayPaymentDiscardChangesModalComponent,\n  BillpayPaymentFormComponent,\n  BillpayPaymentRecurringEditReviewContainerComponent,\n  BillpayPaymentReviewContainerComponent,\n  BillpayPaymentRecurringEditFormContainerComponent,\n  BillpayPaymentOneOffEditReviewContainerComponent,\n  BillpayPaymentOneOffEditFormContainerComponent,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [CommonModule, ReactiveFormsModule, NgbModule, BillpayJourneysCommonModule, ...uiAngModules],\n  exports: [...components, ...uiAngModules],\n})\nexport class PayBillsJourneyUiModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  BillpayJourneysCommonModule,\n  BillpayEnrolmentGuard,\n  BillpayPayeeDataService,\n  BillpayPaymentDataService,\n} from '@backbase/billpay-journeys-common';\nimport { PayBillsJourneyComponent } from './pay-bills-journey.component';\nimport { BillPayEnrolmentViewComponent } from './views/billpay-enrolment-view.component';\nimport { BillpayPaymentFormViewComponent } from './views/billpay-payment-form-view.component';\nimport { BillpayPaymentReviewViewComponent } from './views/billpay-payment-review-view.component';\nimport { BillpayPaymentRecurringEditFormViewComponent } from './views/billpay-payment-recurring-edit-form-view.component';\nimport { BillpayPaymentRecurringEditReviewViewComponent } from './views/billpay-payment-recurring-edit-review-view.component';\nimport { BillpayPaymentOneOffEditFormViewComponent } from './views/billpay-payment-oneoff-edit-form-view.component';\nimport { BillpayPaymentOneOffEditReviewViewComponent } from './views/billpay-payment-oneoff-edit-review-view.component';\nimport { BillpayPaymentMultipleBillsViewComponent } from './views/billpay-payment-multiple-bills-view.component';\nimport { PayBillsStateService } from './services/pay-bills-state.service';\nimport { BillpayPaymentMultipleBillsReviewViewComponent } from './views/billpay-payment-multiple-bills-review-view.component';\nimport { BillpayManagePaymentDeactivateGuardService } from './services/billpay-manage-payment-deactivate-guard.service';\nimport { PayBillsJourneyUiModule } from './components/pay-bills-journey-ui.module';\nimport { PayBillsJourneyConfigService } from './services/pay-bills-journey-config.service';\n\nexport const defaultRoute: Route = {\n  path: '',\n  component: PayBillsJourneyComponent,\n  children: [\n    { path: 'enrolment', component: BillPayEnrolmentViewComponent },\n    {\n      path: '',\n      canActivate: [BillpayEnrolmentGuard],\n      children: [\n        { path: '', redirectTo: 'form', pathMatch: 'full' },\n        {\n          path: 'form',\n          component: BillpayPaymentMultipleBillsViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'review',\n          component: BillpayPaymentMultipleBillsReviewViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'recurring/edit/:id',\n          component: BillpayPaymentRecurringEditFormViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'recurring/edit/:id/review',\n          component: BillpayPaymentRecurringEditReviewViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'one-off/edit/:id',\n          component: BillpayPaymentOneOffEditFormViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n        {\n          path: 'one-off/edit/:id/review',\n          component: BillpayPaymentOneOffEditReviewViewComponent,\n          canDeactivate: [BillpayManagePaymentDeactivateGuardService],\n        },\n      ],\n    },\n  ],\n};\n\nconst components = [\n  BillPayEnrolmentViewComponent,\n  BillpayPaymentFormViewComponent,\n  BillpayPaymentReviewViewComponent,\n  BillpayPaymentRecurringEditFormViewComponent,\n  BillpayPaymentRecurringEditReviewViewComponent,\n  BillpayPaymentOneOffEditFormViewComponent,\n  BillpayPaymentOneOffEditReviewViewComponent,\n  BillpayPaymentMultipleBillsViewComponent,\n  BillpayPaymentMultipleBillsReviewViewComponent,\n];\n\n@NgModule({\n  declarations: [PayBillsJourneyComponent, ...components],\n  imports: [\n    CommonModule,\n    RouterModule,\n    BillpayJourneysCommonModule,\n    ReactiveFormsModule,\n    PayBillsJourneyUiModule,\n    FormsModule,\n    NgbModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { PayBillsJourneyComponent },\n    }),\n  ],\n  providers: [\n    BillpayManagePaymentDeactivateGuardService,\n    PayBillsStateService,\n    BillpayPaymentDataService,\n    PayBillsJourneyConfigService,\n    BillpayPayeeDataService,\n  ],\n})\nexport class PayBillsJourneyModule {\n  static forRoot(\n    data: { route: Route; [key: string]: any } = { route: defaultRoute },\n  ): ModuleWithProviders<PayBillsJourneyModule> {\n    return {\n      ngModule: PayBillsJourneyModule,\n      providers: [provideRoutes([data.route])],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Utility","components"],"mappings":"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"}