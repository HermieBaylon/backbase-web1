{"version":3,"file":"backbase-turnovers-widget-ang.js","sources":["../../../../libs/turnovers-widget/src/bb-turnovers-legend/bb-turnovers-legend.component.ts","../../../../libs/turnovers-widget/src/bb-turnovers-legend/bb-turnovers-legend.component.html","../../../../libs/turnovers-widget/src/ngx-charts/common/bb-grid-panel-series.component.ts","../../../../libs/turnovers-widget/src/ngx-charts/common/bb-grid-panel-series.component.html","../../../../libs/turnovers-widget/src/constants.ts","../../../../libs/turnovers-widget/src/turnovers-vertical-bar-chart/turnovers-vertical-bar-chart.component.ts","../../../../libs/turnovers-widget/src/turnovers-vertical-grouped-bar-chart/bb-charts-series-vertical.component.ts","../../../../libs/turnovers-widget/src/turnovers-vertical-grouped-bar-chart/bb-charts-series-vertical.component.html","../../../../libs/turnovers-widget/src/turnovers-vertical-grouped-bar-chart/turnovers-vertical-grouped-bar-chart.component.ts","../../../../libs/turnovers-widget/src/turnovers-vertical-grouped-bar-chart/turnovers-vertical-grouped-bar-chart.component.html","../../../../libs/turnovers-widget/src/turnovers-bar-chart/turnovers-bar-chart.component.ts","../../../../libs/turnovers-widget/src/turnovers-bar-chart/turnovers-bar-chart.component.html","../../../../libs/turnovers-widget/src/turnovers-vertical-stacked-bar-chart/turnovers-vertical-stacked-bar-chart.component.ts","../../../../libs/turnovers-widget/src/turnovers-vertical-stacked-bar-chart/turnovers-vertical-stacked-bar-chart.component.html","../../../../libs/turnovers-widget/src/model/turnovers.ts","../../../../libs/turnovers-widget/src/turnovers-widget-helpers.service.ts","../../../../libs/turnovers-widget/src/turnovers.service.ts","../../../../libs/turnovers-widget/src/turnovers/turnovers.component.ts","../../../../libs/turnovers-widget/src/turnovers/turnovers.component.html","../../../../libs/turnovers-widget/src/turnovers-widget.component.ts","../../../../libs/turnovers-widget/src/turnovers-widget.component.html","../../../../libs/turnovers-widget/src/turnovers-widget.module.ts","../../../../libs/turnovers-widget/backbase-turnovers-widget-ang.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { ColorHelper, formatLabel } from '@swimlane/ngx-charts';\nimport { LegendEntries } from '../model/turnovers';\n\n@Component({\n  selector: 'bb-charts-legend',\n  templateUrl: './bb-turnovers-legend.component.html',\n  styleUrls: ['./bb-turnovers-legend.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BbTurnoversLegendComponent implements OnChanges {\n  /**\n   * The data for the chart legend.\n   */\n  @Input() data: string[] = [];\n  /**\n   * The title for the chart legend.\n   */\n  @Input() title?: string;\n  /**\n   * The color palette for the chart legend.\n   */\n  @Input() colors?: ColorHelper;\n  /**\n   * The height for the chart legend.\n   */\n  @Input() height?: number;\n  /**\n   * The width for the chart legend.\n   */\n  @Input() width?: number;\n  /**\n   * The active entries for the chart legend.\n   */\n  @Input() activeEntries?: any[] = [];\n\n  /**\n   * EventEmitter for triggering a labelClick event.\n   */\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  /**\n   * EventEmitter for triggering a labelActivate event.\n   */\n  @Output() labelActivate: EventEmitter<any> = new EventEmitter();\n  /**\n   * EventEmitter for triggering a labelDeactivate event.\n   */\n  @Output() labelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  legendEntries: LegendEntries[] = [];\n\n  constructor(private readonly cd: ChangeDetectorRef) {}\n\n  ngOnChanges(): void {\n    this.update();\n  }\n\n  update(): void {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n\n  getLegendEntries(): LegendEntries[] {\n    const items = [];\n\n    for (const label of this.data) {\n      const formattedLabel = formatLabel(label);\n\n      const idx = items.findIndex((i) => {\n        return i.label === formattedLabel;\n      });\n\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors?.getColor(label),\n        });\n      }\n    }\n\n    return items;\n  }\n\n  isActive(entry: LegendEntries): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find((d: any) => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activate(item: any) {\n    this.labelActivate.emit(item);\n  }\n\n  deactivate(item: any) {\n    this.labelDeactivate.emit(item);\n  }\n\n  trackBy(index: number, item: LegendEntries): string {\n    return item.label;\n  }\n}\n","<div class=\"row\">\n  <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n    <span class=\"legend-title-text\">{{title}}</span>\n  </header>\n  <div class=\"legend-wrap\">\n    <ul class=\"legend-labels d-flex px-5 mb-3\"\n      [style.max-height.px]=\"height ? height - 45 : 'inherit'\">\n      <li\n        *ngFor=\"let entry of legendEntries; trackBy: trackBy\"\n        class=\"legend-label text-dark text-capitalize\">\n        <ngx-charts-legend-entry\n          [label]=\"entry.label\"\n          [formattedLabel]=\"entry.formattedLabel\"\n          [color]=\"entry.color\"\n          [isActive]=\"isActive(entry)\"\n          (select)=\"labelClick.emit($event)\"\n          (activate)=\"activate($event)\"\n          (deactivate)=\"deactivate($event)\">\n        </ngx-charts-legend-entry>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges } from '@angular/core';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\nimport { ScaleBand, ScaleLinear } from 'd3-scale';\nimport { ChartData, ChartDataLabels, Dims } from '../../model/turnovers';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'g[bb-charts-grid-panel-series]',\n  templateUrl: './bb-grid-panel-series.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BbGridPanelSeriesComponent implements OnChanges {\n  gridPanels: ChartDataLabels[] = [];\n\n  /**\n   * Array of Chart data objects needed for the chart to be rendered.\n   */\n  @Input() data: ChartData[] = [];\n  /**\n   * Dimensions of the chart.\n   */\n  @Input()\n  dims: Dims = {\n    height: 0,\n    width: 0,\n  };\n\n  /**\n   * Horizontal scale of the chart.\n   */\n  @Input() xScale?: ScaleBand<string>;\n  /**\n   * Vertical scale of the chart.\n   */\n  @Input() yScale?: ScaleLinear<number, number>;\n\n  _orient?: string;\n  @Input()('orient') set orient(val: string) {\n    this.deprecationService.logDeprecatedFeature('Removed #orient input from #BbGridPanelSeriesComponent');\n    this._orient = val;\n  }\n  get orient() {\n    return this._orient || 'vertical';\n  }\n\n  ngOnChanges() {\n    this.update();\n  }\n\n  update() {\n    this.gridPanels = this.getChartDataLabels();\n  }\n\n  private getChartDataLabels(): ChartDataLabels[] {\n    return this.data.map((d) => {\n      const labelName = d.name ?? '';\n      let width = 0;\n      let xValue = 0;\n\n      if (!!this.xScale) {\n        const offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        xValue = (this.xScale(labelName) || 0) - offset / 2;\n      }\n\n      return {\n        name: labelName,\n        class: d.badge === 'forecast' ? 'forecast' : '',\n        width: width,\n        height: this.dims.height,\n        x: xValue,\n        y: 0,\n        roundEdges: false,\n      };\n    });\n  }\n\n  getGridPanels(): any[] {\n    this.deprecationService.logDeprecatedFeature(\n      '#getGridPanels deprecation in favor of private method #getChartDataLabels from #BbGridPanelSeriesComponent',\n    );\n    const localXScale: any = this.xScale;\n    const localYScale: any = this.yScale;\n\n    return this.data.map((d) => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n\n      if (this.orient === 'vertical') {\n        offset = localXScale.bandwidth() * localXScale.paddingInner();\n        width = localXScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = (localXScale(d.name) || 0) - offset / 2;\n        y = 0;\n      } else if (this.orient === 'horizontal') {\n        offset = localYScale.bandwidth() * localYScale.paddingInner();\n        width = this.dims.width;\n        height = localYScale.bandwidth() + offset;\n        x = 0;\n        y = localYScale(d.name) - offset / 2;\n      }\n\n      return {\n        name: d.name,\n        class: d.badge === 'forecast' ? 'forecast' : '',\n        height,\n        width,\n        x,\n        y,\n      };\n    });\n  }\n\n  constructor(private deprecationService: DeprecationsService) {}\n}\n","<svg:g *ngFor=\"let gridPanel of gridPanels\">\n  <svg:g ngx-charts-grid-panel\n    [height]=\"gridPanel.height\"\n    [width]=\"gridPanel.width\"\n    [x]=\"gridPanel.x\"\n    [y]=\"gridPanel.y\"\n    [class.grid-panel]=\"true\"\n    [class.forecast]=\"gridPanel.class === 'forecast'\">\n  </svg:g>\n</svg:g>\n","import { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Period {\n  interval: string;\n  duration: number;\n  default?: boolean;\n}\n\nexport interface GridData {\n  name: string;\n  class: string;\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n}\n\nexport interface Properties {\n  name: string;\n  value: boolean;\n}\n\nexport const PROPERTIES = {\n  FORECAST: {\n    name: 'showForecast',\n    value: true,\n  },\n};\n\nexport const PERIODS: Period[] = [\n  {\n    interval: 'MONTH',\n    duration: 6,\n    default: true,\n  },\n  {\n    interval: 'MONTH',\n    duration: 12,\n  },\n];\n\nexport type Interval = 'DAY' | 'WEEK' | 'MONTH' | 'YEAR';\n\nexport type Forecast = 'NONE' | 'AVG';\n\nexport const INTERVAL: { [key: string]: Interval } = {\n  DAY: 'DAY',\n  WEEK: 'WEEK',\n  MONTH: 'MONTH',\n  YEAR: 'YEAR',\n};\n\nexport const DEFAULT_INTERVAL = INTERVAL.MONTH;\nexport const DEFAULT_DURATION = 6;\nexport const DEFAULT_START_DAY = 1;\n\nexport const BAR_COLORS_CSS_VAR = '--chart-group-bar-color';\nexport const CHART_COLORS = ['#004285', '#107bb5'];\n\nexport const MOBILE_WIDGET_WIDTH = 688;\n\nexport const filterInputParameters = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  Output,\n  PLATFORM_ID,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  BaseChartComponent,\n  calculateViewDimensions,\n  ColorHelper,\n  ScaleType,\n  ViewDimensions,\n} from '@swimlane/ngx-charts';\nimport { ScaleBand, scaleBand, ScaleLinear, scaleLinear } from 'd3-scale';\nimport { ChartData, LabelMaxHeight } from '../model/turnovers';\n\n@Component({\n  template: '',\n})\nexport class TurnoversVerticalBarChartComponent extends BaseChartComponent {\n  /**\n   * Enable/Disable chart legend.\n   */\n  @Input() legend = false;\n  /**\n   * The title for the chart legend.\n   */\n  @Input() legendTitle = '';\n  /**\n   * Hide/show the horizontal axis.\n   */\n  @Input() xAxis = true;\n  /**\n   * Hide/show the vertical axis.\n   */\n  @Input() yAxis = true;\n  /**\n   * Show the horizontal axis label.\n   */\n  @Input() showXAxisLabel = true;\n  /**\n   * Show the vertical axis label.\n   */\n  @Input() showYAxisLabel = true;\n  /**\n   * The label for the horizontal axis.\n   */\n  @Input() xAxisLabel = '';\n  /**\n   * The label for the vertical axis.\n   */\n  @Input() yAxisLabel = '';\n  /**\n   * Enable/Disable chart tooltip.\n   */\n  @Input() tooltipDisabled = false;\n  /**\n   * Enable/Disable chart gradient.\n   */\n  @Input() gradient = false;\n  /**\n   * Show/hide chart grid lines.\n   */\n  @Input() showGridLines = true;\n  /**\n   * The active entries for the chart legend.\n   */\n  @Input() activeEntries: any[] = [];\n  /**\n   * Sets the scheme type of the chart.\n   */\n  @Input() schemeType: ScaleType = ScaleType.Ordinal;\n  /**\n   * Horizontal axis tick formatting.\n   */\n  @Input() xAxisTickFormatting: any;\n  /**\n   * Vertical axis tick formatting.\n   */\n  @Input() yAxisTickFormatting: any;\n  /**\n   * Padding of the chart bars.\n   */\n  @Input() barPadding = 8;\n  /**\n   * Enable/Disable rounded corners.\n   */\n  @Input() roundDomains = true;\n  /**\n   * Enable/disable rounded edges for the bars.\n   */\n  @Input() roundEdges = false;\n  /**\n   * Maximum vertical chart scale.\n   */\n  @Input() yScaleMax = 0;\n  /**\n   * Hide/show the data labels.\n   */\n  @Input() showDataLabel = false;\n  /**\n   * Formatting for the data labels.\n   */\n  @Input() dataLabelFormatting: any;\n  /**\n   * Array of Chart data objects needed for the chart to be rendered.\n   */\n  @Input() groupsData: ChartData[] = [];\n  /**\n   * The chart tooltip template.\n   */\n  @Input() tooltipTemplate: TemplateRef<any> | undefined;\n  /**\n   * The chart legend template.\n   */\n  @Input() legendTemplate: TemplateRef<any> | null = null;\n\n  /**\n   * EventEmitter for triggering a activate event.\n   */\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  /**\n   * EventEmitter for triggering a deactivate event.\n   */\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  dims: ViewDimensions = { width: 0, height: 0, xOffset: 0 };\n  groupDomain: any[] = [];\n  innerDomain: any[] = [];\n  valueDomain: any[] = [];\n  transform: string | undefined;\n  colors: ColorHelper | undefined;\n  margin = [10, 20, 10, 20];\n  xAxisHeight = 0;\n  yAxisWidth = 0;\n  dataLabelMaxHeight: LabelMaxHeight = { negative: 0, positive: 0 };\n\n  constructor(chartElement: ElementRef, zone: NgZone, cd: ChangeDetectorRef, @Inject(PLATFORM_ID) platformId: string) {\n    super(chartElement, zone, cd, platformId);\n  }\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n\n    this.setColors();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getGroupDomain() {\n    const domain: any[] = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain: any[] = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n    return domain;\n  }\n\n  getXScale(): ScaleBand<string> {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\n  }\n\n  getYScale(): ScaleLinear<number, number> {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onDataLabelMaxHeightChanged(event: any, groupIndex?: number) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onClick(data: any, group?: any) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index: number, item: any) {\n    return item.name;\n  }\n\n  setColors(): void {\n    const domain = this.schemeType === ScaleType.Ordinal ? this.innerDomain : this.valueDomain;\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  updateYAxisWidth(axis: { width: number }) {\n    this.yAxisWidth = axis.width;\n    this.update();\n  }\n\n  updateXAxisHeight(axis: { height: number }) {\n    this.xAxisHeight = axis.height;\n    this.update();\n  }\n\n  onActivate(event: any, group?: any) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex((d) => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event: any, group?: any) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const idx = this.activeEntries.findIndex((d) => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries]; // NOSONAR false positive - https://github.com/SonarSource/SonarTS/issues/760\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import { animate, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, TemplateRef } from '@angular/core';\nimport { DeprecationsService } from '@backbase/foundation-ang/future';\nimport {\n  BarOrientation,\n  ColorHelper,\n  DataItem,\n  formatLabel,\n  PlacementTypes,\n  ScaleType,\n  StyleTypes,\n  ViewDimensions,\n} from '@swimlane/ngx-charts';\nimport { ScaleBand, ScaleLinear } from 'd3-scale';\nimport { ChartBarData, ChartColors, ChartData, ChartDataLabels, FormattedChartDataLabels } from '../model/turnovers';\n\nexport enum D0Types {\n  positive = 'positive',\n  negative = 'negative',\n}\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'g[bb-charts-series-vertical]',\n  templateUrl: './bb-charts-series-vertical.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n        }),\n        animate(500, style({ opacity: 0 })),\n      ]),\n    ]),\n  ],\n})\nexport class BbSeriesVerticalComponent implements OnChanges {\n  /**\n   * The dimensions of the chart bars.\n   */\n  @Input() dims?: ViewDimensions;\n  /**\n   * The type of the chart bars.\n   */\n  @Input() type = 'standard';\n  /**\n   * Array of Chart data objects needed for the chart to be rendered.\n   */\n  @Input() series: ChartBarData[] | undefined;\n  /**\n   * Horizonta scale of the chart bars.\n   */\n  @Input() xScale?: ScaleBand<string>;\n  /**\n   * Vertical of the chart bars.\n   */\n  @Input() yScale?: ScaleLinear<number, number>;\n  /**\n   * The color palette of the chart bars.\n   */\n  @Input() colors?: ColorHelper;\n  /**\n   * Enable/disable bars gradient.\n   */\n  @Input() gradient: boolean = false;\n  /**\n   * The active entries for the chart bars.\n   */\n  @Input() activeEntries: any[] = [];\n  /**\n   * Name of the chart series.\n   */\n  @Input() seriesName? = '';\n  /**\n   * Enabel/Disable bars tooltip.\n   */\n  @Input() tooltipDisabled = false;\n  /**\n   * Show/Hide tooltip caret.\n   */\n  @Input() tooltipShowCaret = false;\n  /**\n   * Template for the bar tooltip.\n   */\n  @Input() tooltipTemplate: TemplateRef<any> | undefined;\n  /**\n   * Enable/disable bars rounded edges.\n   */\n  @Input() roundEdges = false;\n  /**\n   * Enable/disable bars animation.\n   */\n  @Input() animations = true;\n  /**\n   * Show/hide bars label.\n   */\n  @Input() showDataLabel = false;\n  /**\n   * Formatting for the bars labels.\n   */\n  @Input() dataLabelFormatting: any;\n  /**\n   * Chart data objects needed for the chart to be rendered.\n   */\n  @Input() groupData: ChartData | undefined;\n\n  /**\n   * EventEmitter for triggering a select event.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() select = new EventEmitter();\n  /**\n   * EventEmitter for triggering a activate event.\n   */\n  @Output() activate = new EventEmitter();\n  /**\n   * EventEmitter for triggering a deactivate event.\n   */\n  @Output() deactivate = new EventEmitter();\n  /**\n   * EventEmitter for triggering a dataLabelHeightChanged event.\n   */\n  @Output() dataLabelHeightChanged = new EventEmitter();\n\n  tooltipPlacement?: PlacementTypes = PlacementTypes.Top;\n  tooltipType?: StyleTypes = StyleTypes.tooltip;\n  orientation: BarOrientation = BarOrientation.Vertical;\n\n  bars: FormattedChartDataLabels[] | undefined;\n  x: number | undefined;\n  y: number | undefined;\n  barsForDataLabels: ChartDataLabels[] = [];\n\n  private getColors(value: string | number, label: string, offset0?: string | number, offset1?: string | number) {\n    const bar: ChartColors = {};\n\n    if (this.colors) {\n      if (this.colors.scaleType === ScaleType.Ordinal) {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(offset1 || 0);\n          bar.gradientStops = this.colors.getLinearGradientStops(offset1 || 0, offset0);\n        }\n      }\n    }\n\n    return bar;\n  }\n\n  private tooltipText(label: string, value: string) {\n    return this.tooltipDisabled\n      ? undefined\n      : `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${value}</span>\n    `;\n  }\n\n  ngOnChanges() {\n    if (!this.series) {\n      throw new Error('[series] should be provided to the component!');\n    }\n\n    this.update(this.series);\n  }\n\n  update(series: ChartBarData[]) {\n    this.bars = this.formatChartData(series);\n    this.barsForDataLabels = this.updatedLabels(series);\n  }\n\n  updateDataLabels(series: ChartBarData[]) {\n    this.deprecationService.logDeprecatedFeature(\n      '#updateDataLabels inside #BbSeriesVerticalComponent deprecated in favor of #updatedLabels, which returns the formatted object instead of assigning values within itself',\n    );\n    this.barsForDataLabels = this.updatedLabels(series);\n  }\n\n  updatedBars(series: ChartBarData[]): ChartData[] {\n    let d0Type = D0Types.positive;\n    const width = this.xScale?.bandwidth();\n    const yScaleMin = Math.max(this.yScale!.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0,\n    };\n\n    return series.map((d, index, group) => {\n      const value = d.value || 0;\n      const label = d.name || '';\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0,\n      };\n\n      // Use data of the group of bars for tooltips\n      if (this.groupData) {\n        bar.data = {\n          group: group.map((barEl) => ({ ...barEl, color: this.colors?.getColor(barEl.name || '') })),\n          diff: this.groupData.diff,\n          currency: this.groupData.currency,\n          value: d.value,\n          badge: this.groupData.badge,\n        };\n      }\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale!(value) - this.yScale!(yScaleMin));\n        bar.x = this.xScale?.(label);\n        bar.y = this.yScale?.(Math.max(0, value));\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.height = Math.ceil(this.yScale!(offset0) - this.yScale!(offset1));\n        bar.x = 0;\n        bar.y = this.yScale?.(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        bar.roundEdges = index === 1;\n      }\n\n      Object.assign(bar, this.getColors(value, label, bar.offset0, bar.offset1));\n\n      let tooltipLabel = formattedLabel;\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} • ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n      }\n\n      bar.tooltipText = this.tooltipText(tooltipLabel, value.toLocaleString());\n      return bar;\n    });\n  }\n\n  private updatedLabels(series: ChartBarData[]): ChartDataLabels[] {\n    return series.map((d: ChartBarData) => ({\n      name: d.name,\n      series: this.seriesName ? this.seriesName : d.name,\n      total: d.value,\n      x: this.xScale?.(d.name) || 0,\n      y: this.yScale?.(0) || 0,\n      height: this.yScale ? this.yScale(d.value) - this.yScale(0) : 0,\n      width: this.xScale?.bandwidth() || 0,\n      roundEdges: this.roundEdges,\n    }));\n  }\n\n  private formatChartData(series: ChartBarData[]): FormattedChartDataLabels[] {\n    const yScaleMin = Math.max(this.yScale!.domain()[0], 0);\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0,\n    };\n    const formattedSeries: FormattedChartDataLabels[] = series.map((d, index, group) => {\n      const value = d.value || 0;\n      const label = d.name || '';\n      const d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n      const formattedLabel = formatLabel(label);\n      const tooltipLabel = this.seriesName ? `${this.seriesName} • ${formattedLabel}` : formattedLabel;\n\n      const data: ChartData = {\n        name: this.seriesName || '',\n        group: group.map((barEl) => ({ ...barEl, color: this.colors?.getColor(barEl.name || '') })),\n        series: group.map((barEl) => ({ ...barEl, color: this.colors?.getColor(barEl.name || '') })),\n        diff: this.groupData?.diff,\n        currency: this.groupData?.currency,\n        value: d.value,\n        badge: this.groupData?.badge,\n      };\n      const graphData: DataItem = {\n        name: this.seriesName || '',\n        value: d.value,\n      };\n      const standardType: ChartDataLabels = {\n        height: Math.abs(this.yScale!(value) - this.yScale!(yScaleMin)),\n        offset0: undefined,\n        offset1: undefined,\n        roundEdges: this.roundEdges,\n        x: this.xScale?.(label) || 0,\n        y: this.yScale?.(Math.max(0, value)) || 0,\n        width: this.xScale?.bandwidth() || 0,\n      };\n      const stackedType: ChartDataLabels = {\n        height: Math.ceil(this.yScale!(d0[d0Type]) - this.yScale!(d0[d0Type] + value)),\n        offset0: d0[d0Type],\n        offset1: d0[d0Type] + value,\n        roundEdges: index === 1,\n        x: 0,\n        y: this.yScale?.(d0[d0Type] + value) || 0,\n        width: this.xScale?.bandwidth() || 0,\n      };\n      const typeObject: ChartDataLabels = this.type === 'stacked' ? stackedType : standardType;\n\n      const returnObject: FormattedChartDataLabels = {\n        ...typeObject,\n        ...this.getColors(value, label, typeObject.offset0, typeObject.offset1),\n        data,\n        tooltipText: this.tooltipText(tooltipLabel, value.toLocaleString()),\n        formattedLabel,\n        value,\n        label,\n        graphData: { ...graphData },\n      };\n\n      return returnObject;\n    });\n\n    return formattedSeries;\n  }\n\n  updateTooltipSettings() {\n    this.deprecationService.logDeprecatedFeature(\n      'Deprecated #updateTooltipSettings method inside #BbSeriesVerticalComponent in favor of assigning values during component creation',\n    );\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : PlacementTypes.Top;\n    this.tooltipType = this.tooltipDisabled ? undefined : StyleTypes.tooltip;\n  }\n\n  isActive(entry: any): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find((d) => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data: any) {\n    this.select.emit(data);\n  }\n\n  trackBy(index: number, bar: any): string {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index: number, barLabel: any) {\n    return `${index}#${barLabel.series}#${barLabel.total}`;\n  }\n\n  constructor(private deprecationService: DeprecationsService) {}\n}\n","<svg:g ngx-charts-bar\n  *ngFor=\"let bar of bars; trackBy: trackBy\"\n  [@animationState]=\"'active'\"\n  [@.disabled]=\"!animations\"\n  [width]=\"bar.width\"\n  [height]=\"bar.height\"\n  [x]=\"bar.x\"\n  [y]=\"bar.y\"\n  [fill]=\"bar.color\"\n  [stops]=\"bar.gradientStops\"\n  [data]=\"bar.graphData\"\n  [orientation]=\"orientation\"\n  [roundEdges]=\"bar.roundEdges\"\n  [gradient]=\"gradient\"\n  [isActive]=\"isActive(bar)\"\n  (select)=\"onClick($event)\"\n  (activate)=\"activate.emit($event)\"\n  (deactivate)=\"deactivate.emit($event)\"\n  ngx-tooltip\n  [tooltipCssClass]=\"'chart-tooltip p-0 border-0'\"\n  [tooltipShowCaret]=\"tooltipShowCaret\"\n  [tooltipDisabled]=\"tooltipDisabled\"\n  [tooltipPlacement]=\"tooltipPlacement\"\n  [tooltipType]=\"tooltipType\"\n  [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n  [tooltipTemplate]=\"tooltipTemplate\"\n  [tooltipContext]=\"bar.data\"\n  [animations]=\"animations\">\n</svg:g>\n<svg:g *ngIf=\"showDataLabel\">\n  <svg:g ngx-charts-bar-label \n    *ngFor=\"let b of barsForDataLabels; let i = index; trackBy:trackDataLabelBy\"\n    [barX]=\"b.x\"\n    [barY]=\"b.y\"\n    [barWidth]=\"b.width\"\n    [barHeight]=\"b.height\"\n    [value]=\"b.total\"\n    [valueFormatting]=\"dataLabelFormatting\"\n    [orientation]=\"orientation\"\n    (dimensionsChanged)=\"dataLabelHeightChanged.emit({size:$event, index:i})\"\n  />\n</svg:g>\n","import { animate, style, transition, trigger } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  PLATFORM_ID,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { LegendOptions, LegendPosition, ScaleType } from '@swimlane/ngx-charts';\nimport { scaleBand, ScaleBand, ScaleLinear, scaleLinear } from 'd3-scale';\nimport { ChartData } from '../model/turnovers';\nimport { TurnoversVerticalBarChartComponent } from '../turnovers-vertical-bar-chart/turnovers-vertical-bar-chart.component';\n\n@Component({\n  selector: 'bb-charts-bar-vertical-2d',\n  templateUrl: './turnovers-vertical-grouped-bar-chart.component.html',\n  styleUrls: ['../turnovers-vertical-stacked-bar-chart/turnovers-vertical-stacked-bar-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' })),\n      ]),\n    ]),\n  ],\n})\nexport class TurnoversVerticalGroupedBarChartComponent extends TurnoversVerticalBarChartComponent {\n  /**\n   * Sets the scale type of the chart.\n   */\n  @Input() scaleType: ScaleType = ScaleType.Ordinal;\n  /**\n   * Sets the group padding.\n   */\n  @Input() groupPadding = 16;\n  /**\n   * Array of Chart data objects needed for the chart to be rendered.\n   */\n  @Input() results: ChartData[] = [];\n\n  groupScale?: ScaleBand<string>;\n  innerScale?: ScaleBand<string>;\n  valueScale?: ScaleLinear<number, number>;\n  legendOptions: LegendOptions = {\n    colors: undefined,\n    domain: [],\n    scaleType: this.schemeType,\n    title: '',\n    position: LegendPosition.Below,\n  };\n\n  constructor(chartElement: ElementRef, zone: NgZone, cd: ChangeDetectorRef, @Inject(PLATFORM_ID) platformId: string) {\n    super(chartElement, zone, cd, platformId);\n  }\n\n  update(): void {\n    super.update();\n\n    this.valueDomain = this.getValueDomain();\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.getLegendOptions();\n  }\n\n  getGroupScale(): ScaleBand<string> {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): ScaleBand<string> {\n    const width = this.groupScale ? this.groupScale.bandwidth() : 1;\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\n  }\n\n  getValueScale(): ScaleLinear<number, number> {\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getValueDomain(): number[] {\n    const domain: number[] = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n\n    return [min, max];\n  }\n\n  groupTransform(group: ChartData): string {\n    const labelName = group.name ?? '';\n    return `translate(${this.groupScale?.(labelName)}, 0)`;\n  }\n\n  getLegendOptions(): void {\n    if (!this.colors) {\n      return;\n    }\n    if (this.legendOptions.scaleType === ScaleType.Ordinal) {\n      this.legendOptions.domain = this.innerDomain;\n      this.legendOptions.colors = this.colors;\n      this.legendOptions.title = this.legendTitle || '';\n    } else {\n      this.legendOptions.domain = this.valueDomain;\n      this.legendOptions.colors = this.colors.scale;\n    }\n  }\n}\n","<ngx-charts-chart\n  [view]=\"[width, height]\"\n  [showLegend]=\"legend\"\n  [legendOptions]=\"legendOptions\"\n  [activeEntries]=\"activeEntries\"\n  [animations]=\"animations\"\n  (legendLabelActivate)=\"onActivate($event)\"\n  (legendLabelDeactivate)=\"onDeactivate($event)\"\n  (legendLabelClick)=\"onClick($event)\">\n  <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n    <svg:g bb-charts-grid-panel-series\n      [xScale]=\"groupScale\"\n      [yScale]=\"valueScale\"\n      [data]=\"groupsData\"\n      [dims]=\"dims\"\n    >\n    </svg:g>\n    <svg:g ngx-charts-x-axis\n      *ngIf=\"xAxis\"\n      [xScale]=\"groupScale\"\n      [dims]=\"dims\"\n      [showLabel]=\"showXAxisLabel\"\n      [labelText]=\"xAxisLabel\"\n      [tickFormatting]=\"xAxisTickFormatting\"\n      [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n      (dimensionsChanged)=\"updateXAxisHeight($event)\">\n    </svg:g>\n    <svg:g ngx-charts-y-axis\n      *ngIf=\"yAxis\"\n      [yScale]=\"valueScale\"\n      [dims]=\"dims\"\n      [showGridLines]=\"showGridLines\"\n      [showLabel]=\"showYAxisLabel\"\n      [labelText]=\"yAxisLabel\"\n      [tickFormatting]=\"yAxisTickFormatting\"\n      (dimensionsChanged)=\"updateYAxisWidth($event)\">\n    </svg:g>\n    <svg:g bb-charts-series-vertical\n      *ngFor=\"let group of groupsData; let index = index; trackBy:trackBy\"\n      [@animationState]=\"'active'\"\n      [attr.transform]=\"groupTransform(group)\"\n      [attr.opacity]=\"(group.badge ? 0.5 : 1)\"\n      [activeEntries]=\"activeEntries\"\n      [xScale]=\"innerScale\"\n      [yScale]=\"valueScale\"\n      [colors]=\"colors\"\n      [series]=\"group.series\"\n      [dims]=\"dims\"\n      [gradient]=\"gradient\"\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [showDataLabel]=\"showDataLabel\"\n      [dataLabelFormatting]=\"dataLabelFormatting\"\n      [seriesName]=\"group.name\"\n      [groupData]=\"group\"\n      [roundEdges]=\"roundEdges\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event, group)\"\n      (activate)=\"onActivate($event, group)\"\n      (deactivate)=\"onDeactivate($event, group)\"\n      (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n    />\n  </svg:g>\n</ngx-charts-chart>\n\n<ng-container\n  [ngTemplateOutlet]=\"legendTemplate\"\n  [ngTemplateOutletContext]=\"{\n    legendOptions: this.legendOptions,\n    activeEntries: this.activeEntries,\n    height: this.height,\n    onActivate: this.onActivate.bind(this),\n    onDeactivate: this.onDeactivate.bind(this),\n    onClick: this.onClick.bind(this)\n  }\"\n></ng-container>\n","import { CurrencyPipe } from '@angular/common';\nimport { Component, Directive, Input, ViewChild } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { CssVariablesService } from '@backbase/ui-ang/css-variables-lib';\nimport { BarComponent } from '@swimlane/ngx-charts';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BAR_COLORS_CSS_VAR, CHART_COLORS, MOBILE_WIDGET_WIDTH } from '../constants';\nimport { ChartData } from '../model/turnovers';\n\n@Component({\n  selector: 'bb-turnovers-bar-chart',\n  templateUrl: './turnovers-bar-chart.component.html',\n  providers: [CssVariablesService],\n})\nexport class TurnoversBarChartComponent {\n  @ViewChild('bbChartsBarVertical2d') barChart2d: BarComponent | undefined;\n\n  /**\n   * Array of Chart data objects needed for the chart to be rendered.\n   */\n  @Input() chartSeriesData: ChartData[] = [];\n  /**\n   * Disable/enable the forecast option on the chart.\n   */\n  @Input() forecast? = false;\n  // bar chart\n\n  // options\n  readonly chartOptions: Observable<{}> = from(this.cssVariableService.getCssVariable(BAR_COLORS_CSS_VAR)).pipe(\n    map((cssVar) => ({\n      colors: cssVar ? cssVar.split(',') : CHART_COLORS,\n      showXAxis: true,\n      showYAxis: true,\n      gradient: false,\n      showLegend: false,\n      showXAxisLabel: true,\n      showYAxisLabel: true,\n    })),\n  );\n\n  constructor(private readonly currencyPipe: CurrencyPipe, private readonly cssVariableService: CssVariablesService) {}\n\n  yAxisTickFormatting(value: number) {\n    const currency = this.chartSeriesData[0].currency;\n\n    if (this.barChart2d && this.barChart2d.width < MOBILE_WIDGET_WIDTH) {\n      const amountVal = value / 1000;\n\n      if (amountVal <= 999) {\n        return `${this.currencyPipe.transform(amountVal, currency, 'symbol', '1.0')}k`;\n      }\n\n      return `${this.currencyPipe.transform(amountVal / 1000, currency, 'symbol', '1.0')}m`;\n    }\n\n    return this.currencyPipe.transform(value, currency, 'symbol', '1.0');\n  }\n}\n\n@Directive({\n  selector: '[bbTurnoversChartTooltipCustomizable]',\n})\nexport class TurnoversChartTooltipCustomizableDirective extends BbTemplate<TurnoversBarChartComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTurnoversChartLegendCustomizable]',\n})\nexport class TurnoversChartLegendCustomizableDirective extends BbTemplate<TurnoversBarChartComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTurnoversVerticalGroupedBarChartCustomizable]',\n})\nexport class TurnoversVerticalGroupedBarChartCustomizableDirective extends BbTemplate<\n  TurnoversBarChartComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTurnoversVerticalStackedBarChartCustomizable]',\n})\nexport class TurnoversVerticalStackedBarChartCustomizableDirective extends BbTemplate<\n  TurnoversBarChartComponent,\n  undefined\n> {}\n","<div class=\"position-relative pb-25p pb-md-50p\">\n  <ng-container *ngIf=\"this.chartOptions | async as options\">\n    <ng-container\n      bbTurnoversVerticalGroupedBarChartCustomizable\n      [bbHostRef]=\"this\"\n      [bbTemplateContext]=\"{options: options}\"\n    ></ng-container>\n    <ng-container\n      bbTurnoversVerticalStackedBarChartCustomizable\n      [bbHostRef]=\"this\"\n      [bbTemplateContext]=\"{options: options}\"\n    ></ng-container>\n  </ng-container>\n</div>\n\n<ng-template bbTurnoversVerticalGroupedBarChartCustomizable let-hostRef let-options=\"context.options\">\n  <div class=\"bb-turnovers-vertical-chart\">\n    <bb-charts-bar-vertical-2d\n      #bbChartsBarVertical2d\n      class=\"position-static transform-none\"\n      [scheme]=\"{ domain: options.colors }\"\n      [results]=\"hostRef.chartSeriesData\"\n      [groupsData]=\"hostRef.chartSeriesData\"\n      [xAxis]=\"options.showXAxis\"\n      [yAxis]=\"options.showYAxis\"\n      [showXAxisLabel]=\"options.showXAxisLabel\"\n      [showYAxisLabel]=\"options.showYAxisLabel\"\n      [legend]=\"options.showLegend\"\n      [gradient]=\"options.gradient\"\n      [barPadding]=\"0\"\n      [groupPadding]=\"6\"\n      [roundEdges]=\"true\"\n      [legendTemplate]=\"legendTemplate\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [yAxisTickFormatting]=\"yAxisTickFormatting.bind(this)\">\n    </bb-charts-bar-vertical-2d>\n  </div>\n</ng-template>\n\n<ng-template bbTurnoversVerticalStackedBarChartCustomizable let-hostRef let-options=\"context.options\">\n</ng-template>\n\n<ng-template bbTurnoversChartLegendCustomizable #legendTemplate\n  let-legendOptions=\"legendOptions\"\n  let-activeEntries=\"activeEntries\"\n  let-height=\"height\"\n  let-onActivate=\"onActivate\"\n  let-onDeactivate=\"onDeactivate\"\n  let-onClick=\"onClick\">\n  <bb-charts-legend\n    class=\"chart-legend\"\n    [data]=\"legendOptions.domain\"\n    [title]=\"legendOptions.title\"\n    [colors]=\"legendOptions.colors\"\n    [height]=\"height\"\n    [activeEntries]=\"activeEntries\"\n    (labelClick)=\"onClick($event)\"\n    (labelActivate)=\"onActivate($event)\"\n    (labelDeactivate)=\"onDeactivate($event)\">\n  </bb-charts-legend>\n</ng-template>\n\n<ng-template bbTurnoversChartTooltipCustomizable #tooltipTemplate let-model=\"model\">\n  <div class=\"chart-tooltip-default bb-arrow-bottom text-dark\">\n    <div\n      *ngIf=\"model.badge\"\n      class=\"pb-1 mb-2 font-weight-bold border-bottom border-dark text-capitalize text-left\">\n      {{model.badge}}\n    </div>\n    <div>\n      <div class=\"d-flex pb-1 align-items-center\" *ngFor=\"let bar of model.series; let i = index\">\n        <span [ngStyle]=\"{'color': bar.color}\" class=\"bicon bicon-circle\"></span>\n        <span class=\"text-capitalize\">{{bar.name}}</span>\n        <span class=\"ml-auto font-weight-bold\">\n          <bb-amount-ui\n            [amount]=\"i === 0 ? bar.value : (-bar.value)\"\n            [currency]=\"bar.currency\"\n            [showPlusSign]=\"i === 0 && bar.value > 0\"\n          ></bb-amount-ui>\n        </span>\n      </div>\n      <div class=\"d-flex pt-1 pl-1 align-items-center\">\n        <span i18n=\"Difference|tooltip difference label@@turnovers.tooltip.diff\">Difference</span>\n        <span class=\"ml-auto font-weight-bold\">\n          <bb-amount-ui\n            [amount]=\"model.diff\"\n            [currency]=\"model.currency\"\n            [showPlusSign]=\"model.diff !== 0\"\n          ></bb-amount-ui>\n        </span>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { animate, style, transition, trigger } from '@angular/animations';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  PLATFORM_ID,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { LegendOptions, LegendPosition, ScaleType } from '@swimlane/ngx-charts';\nimport { ScaleBand, ScaleLinear } from 'd3-scale';\nimport { ChartData } from '../model/turnovers';\nimport { TurnoversVerticalBarChartComponent } from '../turnovers-vertical-bar-chart/turnovers-vertical-bar-chart.component';\n\n@Component({\n  selector: 'bb-charts-bar-vertical-stacked',\n  templateUrl: './turnovers-vertical-stacked-bar-chart.component.html',\n  styleUrls: ['turnovers-vertical-stacked-bar-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*',\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' })),\n      ]),\n    ]),\n  ],\n})\nexport class TurnoversVerticalStackedBarChartComponent extends TurnoversVerticalBarChartComponent {\n  /**\n   * An array of numbers to set the horizontal points on the chart.\n   */\n  @Input() xAxisTicks: number[] = [];\n  /**\n   * An array of numbers to set the vertical points on the chart.\n   */\n  @Input() yAxisTicks: number[] = [];\n\n  xScale?: ScaleBand<string>;\n  yScale?: ScaleLinear<number, number>;\n  tickFormatting: ((label: string) => string) | undefined;\n  legendOptions?: LegendOptions;\n\n  constructor(chartElement: ElementRef, zone: NgZone, cd: ChangeDetectorRef, @Inject(PLATFORM_ID) platformId: string) {\n    super(chartElement, zone, cd, platformId);\n  }\n\n  update(): void {\n    super.update();\n\n    this.valueDomain = this.getValueDomain();\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n    this.legendOptions = this.getLegendOptions();\n  }\n\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n\n  groupTransform(group: ChartData) {\n    const labelName = group.name ?? '';\n    return `translate(${this.xScale?.(labelName)}, 0)`;\n  }\n\n  getLegendOptions(): LegendOptions {\n    const opts: LegendOptions = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: '',\n      position: LegendPosition.Below,\n    };\n    if (opts.scaleType === ScaleType.Ordinal) {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors?.scale;\n    }\n\n    return opts;\n  }\n}\n","<ngx-charts-chart\n  [view]=\"[width, height]\"\n  [showLegend]=\"legend\"\n  [legendOptions]=\"legendOptions\"\n  [activeEntries]=\"activeEntries\"\n  [animations]=\"animations\"\n  (legendLabelActivate)=\"onActivate($event)\"\n  (legendLabelDeactivate)=\"onDeactivate($event)\"\n  (legendLabelClick)=\"onClick($event)\">\n  <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n    <svg:g bb-charts-grid-panel-series\n      [xScale]=\"xScale\"\n      [yScale]=\"yScale\"\n      [data]=\"groupsData\"\n      [dims]=\"dims\"\n    >\n    </svg:g>\n    <svg:g ngx-charts-x-axis\n      *ngIf=\"xAxis\"\n      [xScale]=\"xScale\"\n      [dims]=\"dims\"\n      [showLabel]=\"showXAxisLabel\"\n      [labelText]=\"xAxisLabel\"\n      [tickFormatting]=\"xAxisTickFormatting\"\n      [ticks]=\"xAxisTicks\"\n      [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n      (dimensionsChanged)=\"updateXAxisHeight($event)\">\n    </svg:g>\n    <svg:g ngx-charts-y-axis\n      *ngIf=\"yAxis\"\n      [yScale]=\"yScale\"\n      [dims]=\"dims\"\n      [showGridLines]=\"showGridLines\"\n      [showLabel]=\"showYAxisLabel\"\n      [labelText]=\"yAxisLabel\"\n      [tickFormatting]=\"yAxisTickFormatting\"\n      [ticks]=\"yAxisTicks\"\n      (dimensionsChanged)=\"updateYAxisWidth($event)\">\n    </svg:g>\n    <svg:g bb-charts-series-vertical\n      *ngFor=\"let group of results; let index = index; trackBy:trackBy\"\n      [@animationState]=\"'active'\"\n      [attr.transform]=\"groupTransform(group)\"\n      [attr.opacity]=\"(group.badge ? 0.5 : 1)\"\n      [type]=\"'stacked'\"\n      [xScale]=\"xScale\"\n      [yScale]=\"yScale\"\n      [activeEntries]=\"activeEntries\"\n      [colors]=\"colors\"\n      [series]=\"group.series\"\n      [dims]=\"dims\"\n      [roundEdges]=\"roundEdges\"\n      [gradient]=\"gradient\"\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [showDataLabel]=\"showDataLabel\"\n      [dataLabelFormatting]=\"dataLabelFormatting\"\n      [seriesName]=\"group.name\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event, group)\"\n      (activate)=\"onActivate($event, group)\"\n      (deactivate)=\"onDeactivate($event, group)\"\n      (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n    />\n  </svg:g>\n</ngx-charts-chart>\n\n<ng-container\n  [ngTemplateOutlet]=\"legendTemplate\"\n  [ngTemplateOutletContext]=\"{\n    legendOptions: this.legendOptions,\n    activeEntries: this.activeEntries,\n    height: this.height,\n    onActivate: this.onActivate.bind(this),\n    onDeactivate: this.onDeactivate.bind(this),\n    onClick: this.onClick.bind(this)\n  }\"\n></ng-container>\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Turnover as TurnoverItem } from '@backbase/data-ang/transactions';\nimport { DataItem, Gradient } from '@swimlane/ngx-charts';\n\nexport interface ChartLabels {\n  income: string;\n  spending: string;\n  forecast: string;\n}\n\nexport interface ChartBarData {\n  color?: string;\n  currency: string;\n  name: string;\n  value: number;\n}\n\nexport interface Dims {\n  height: number;\n  width: number;\n}\n\nexport interface LabelMaxHeight {\n  negative: number;\n  positive: number;\n}\n\nexport interface ChartData {\n  series: ChartBarData[];\n  name?: string;\n  value?: number;\n  diff?: string | number;\n  currency?: string;\n  badge?: string;\n  background?: string;\n  group?: ChartBarData[];\n}\n\nexport interface ChartDataLabels {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  total?: number;\n  class?: string;\n  name?: string;\n  offset0?: number;\n  offset1?: number;\n  roundEdges: boolean;\n  series?: string;\n}\n\nexport interface ChartColors {\n  color?: string;\n  gradientStops?: Gradient[];\n}\n\nexport interface FormattedChartDataLabels extends ChartDataLabels, ChartColors {\n  data?: ChartData;\n  formattedLabel?: string;\n  label?: string;\n  tooltipText?: string;\n  value?: number;\n  graphData: DataItem;\n}\n\nexport interface LegendEntries {\n  label: string;\n  formattedLabel: string;\n  color: string | undefined;\n}\n\nexport interface TurnoversData {\n  turnovers: TurnoverItem[];\n  forecast: Forecast[];\n  additions?: { [key: string]: any };\n}\n\nexport interface Forecast extends TurnoverItem {\n  forecast: boolean;\n}\n\nexport interface CashFlowItem extends TurnoverItem {\n  forecast?: boolean;\n}\n\nexport interface TurnoversDateParams {\n  periodStartDate: string;\n  periodEndDate: string;\n  intervalDuration: 'DAY' | 'WEEK' | 'MONTH' | 'YEAR';\n  intervalStartDay?: number | undefined;\n  forecast?: 'NONE' | 'AVG' | undefined;\n}\n\nexport interface TurnoversGetParams extends TurnoversDateParams {\n  arrangementIds: string[];\n}\n\nexport interface TurnoversError {\n  message: string;\n  key?: string;\n  context?: object;\n}\n\nconst getMessageFromResponse = (error: HttpErrorResponse) => {\n  const responseBody = error.error;\n\n  if (responseBody && responseBody.errors && responseBody.errors[0] && responseBody.errors[0].message) {\n    return responseBody.errors[0].message;\n  } else {\n    return undefined;\n  }\n};\n\nexport const parseError = (error: HttpErrorResponse): TurnoversError => {\n  // TODO: should have more user-friendly messages\n  if (error.error instanceof ErrorEvent) {\n    // Client-side or network error.\n    return {\n      message: 'An unexpected error occurred',\n    };\n  } else {\n    // Backend returns unsuccessful response code.  In case of 400, try to get a message from the\n    // response.\n    switch (error.status) {\n      case 400:\n        return {\n          message: getMessageFromResponse(error) || 'Error 400',\n        };\n      case 401:\n        return {\n          message: 'Error 401',\n        };\n      case 403:\n        return {\n          message: 'Error 403',\n        };\n      case 404:\n        return {\n          message: 'Error 404',\n        };\n      default:\n        return {\n          message: 'An unexpected error occurred',\n        };\n    }\n  }\n};\n","import { DatePipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Turnover } from '@backbase/data-ang/transactions';\nimport { DEFAULT_START_DAY, Period } from './constants';\nimport { CashFlowItem, ChartData, ChartLabels } from './model/turnovers';\n\n@Injectable()\nexport class TurnoversWidgetHelpersService {\n  constructor(private readonly datePipe: DatePipe) {}\n\n  getChartData(turnovers: Turnover[], labels: ChartLabels): ChartData[] {\n    return (turnovers || []).map(function (barData: CashFlowItem) {\n      return {\n        series: [\n          {\n            name: labels.income,\n            value: Number(barData.creditAmount.amount),\n            currency: barData.creditAmount.currencyCode,\n          },\n          {\n            name: labels.spending,\n            value: Number(barData.debitAmount.amount),\n            currency: barData.debitAmount.currencyCode,\n          },\n        ],\n        currency: barData.balance.currencyCode,\n        diff: Number(barData.balance.amount),\n        badge: barData.forecast ? labels.forecast : '',\n        name: barData.intervalStartDate.slice(0, 10) + (barData.forecast ? ' ' : ''),\n      };\n    });\n  }\n\n  periodToDate(period: Period) {\n    const date = new Date();\n    // current date already covers one period\n    const intervalCount = period.duration;\n    switch (period.interval) {\n      case 'DAY':\n        date.setDate(date.getDate() - intervalCount);\n        break;\n      case 'WEEK':\n        date.setDate(date.getDate() - intervalCount * 7);\n        break;\n      case 'YEAR':\n        date.setFullYear(date.getFullYear() - intervalCount);\n        break;\n      case 'MONTH':\n      default:\n        date.setMonth(date.getMonth() - (intervalCount - 1));\n        date.setDate(DEFAULT_START_DAY);\n        break;\n    }\n\n    return date.toISOString().slice(0, 10);\n  }\n\n  extendTurnoverItem = (barData: Turnover): Turnover => ({\n    ...barData,\n    intervalStartDate: this.datePipe.transform(barData.intervalStartDate.slice(0, 10), 'MMM') || '',\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { TurnoversHttpService } from '@backbase/data-ang/transactions';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CashFlowItem, TurnoversData, TurnoversGetParams } from './model/turnovers';\n\n@Injectable()\nexport class TurnoversService {\n  constructor(private readonly turnoversDataHttpService: TurnoversHttpService) {}\n\n  loadAnalysisData(params: TurnoversGetParams): Observable<CashFlowItem[]> {\n    return this.turnoversDataHttpService.getTurnovers(params).pipe(\n      map((body): TurnoversData => {\n        return {\n          turnovers: body.turnovers || [],\n          forecast: (body.forecast || []).map((item) => ({ ...item, forecast: true })),\n        };\n      }),\n      map((body: TurnoversData): CashFlowItem[] => {\n        return (body.turnovers || []).concat(params.forecast && body.forecast ? body.forecast : []);\n      }),\n    );\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Component, Directive, ElementRef, Input, ViewChild } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { catchError, filter, map, pluck, switchMap, tap } from 'rxjs/operators';\nimport { DEFAULT_INTERVAL, DEFAULT_START_DAY, Period, PERIODS } from '../constants';\nimport {\n  ChartData,\n  ChartLabels,\n  parseError,\n  TurnoversDateParams,\n  TurnoversError,\n  TurnoversGetParams,\n} from '../model/turnovers';\nimport { TurnoversWidgetHelpersService } from '../turnovers-widget-helpers.service';\nimport { TurnoversService } from '../turnovers.service';\n\n@Component({\n  selector: 'bb-turnovers',\n  templateUrl: './turnovers.component.html',\n  providers: [TurnoversService, DatePipe, TurnoversWidgetHelpersService],\n})\nexport class TurnoversComponent {\n  /**\n   * Disable/enable the forecast option on the chart.\n   */\n  @Input() forecast? = false;\n  @ViewChild('incomeLabel', { static: true })\n  incomeRef: ElementRef<any> | undefined;\n  @ViewChild('spendingLabel', { static: true })\n  spendingRef: ElementRef<any> | undefined;\n  @ViewChild('forecastLabel', { static: true })\n  forecastRef: ElementRef<any> | undefined;\n\n  readonly hostRef = this;\n\n  selectedTab: Period = PERIODS[Math.max(PERIODS.map((item) => item.default).indexOf(true), 0)];\n  error: TurnoversError | undefined;\n  isLoading: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    private readonly service: TurnoversService,\n    private readonly route: ActivatedRoute,\n    private readonly helpers: TurnoversWidgetHelpersService,\n  ) {}\n\n  private readonly initialDateParams: TurnoversDateParams = {\n    periodStartDate: this.helpers.periodToDate(PERIODS[0]),\n    periodEndDate: new Date().toISOString().slice(0, 10),\n    intervalDuration: DEFAULT_INTERVAL,\n    intervalStartDay: DEFAULT_START_DAY,\n  };\n\n  readonly arrangementIds: Observable<string[]> = this.getRouteParam(this.route, 'selectedAccount').pipe(\n    map((selectedAccount) => (selectedAccount ? [selectedAccount] : [])), // TODO: remove once arrangement ids are passed as an array\n  );\n\n  readonly dateParams: BehaviorSubject<TurnoversDateParams> = new BehaviorSubject(this.initialDateParams);\n\n  readonly chartSeriesData: Observable<ChartData[]> = combineLatest(\n    this.arrangementIds,\n    this.dateParams.asObservable(),\n  ).pipe(\n    tap(() => (this.error = undefined)),\n    filter(([selectedAccounts]) => !!selectedAccounts.length),\n    map(\n      ([selectedAccounts, dateParams]): TurnoversGetParams => ({\n        arrangementIds: selectedAccounts,\n        ...dateParams,\n        forecast: this.forecast ? 'AVG' : undefined,\n      }),\n    ),\n    switchMap((params) => {\n      this.isLoading.next(true);\n      const data = this.service.loadAnalysisData(params);\n      data.subscribe({ complete: () => this.isLoading.next(false) });\n      return data;\n    }),\n    map((items) => items.map(this.helpers.extendTurnoverItem)),\n    map((items) => this.helpers.getChartData(items, this.labels)),\n    catchError((error: HttpErrorResponse) => {\n      this.handleError(error);\n      return of([]);\n    }),\n  );\n\n  get labels(): ChartLabels {\n    return {\n      income: (<ElementRef>this.incomeRef).nativeElement.textContent,\n      spending: (<ElementRef>this.spendingRef).nativeElement.textContent,\n      forecast: (<ElementRef>this.forecastRef).nativeElement.textContent,\n    };\n  }\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // ensure that level that has actual value keeps it from being cleared\n    return combineLatest(paramValue, this.getRouteParam(route.parent, param)).pipe(\n      map((params) => params[0] || params[1]),\n    );\n  }\n\n  handleError = (error: HttpErrorResponse) => {\n    this.error = parseError(error);\n    return of([]);\n  };\n\n  onTabChange(num: number) {\n    this.selectedTab = PERIODS[Math.max(PERIODS.map((item) => item.duration).indexOf(num), 0)];\n    this.dateParams.next({\n      ...this.initialDateParams,\n      periodStartDate: this.helpers.periodToDate(this.selectedTab),\n      periodEndDate: new Date().toISOString().slice(0, 10),\n    });\n  }\n}\n\n@Directive({\n  selector: '[bbTurnoversItemCustomizable]',\n})\nexport class TurnoversItemCustomizableDirective extends BbTemplate<TurnoversComponent, ChartData[] | undefined> {}\n\n@Directive({\n  selector: '[bbTurnoversControlsCustomizable]',\n})\nexport class TurnoversControlsCustomizableDirective extends BbTemplate<TurnoversComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTurnoversEmptyStateCustomizable]',\n})\nexport class TurnoversEmptyStateCustomizableDirective extends BbTemplate<TurnoversComponent, undefined> {}\n","<ng-container *ngIf=\"(arrangementIds | async)?.length; else emptyState\">\n  <ng-container *ngIf=\"chartSeriesData | async; let data; else loadingState\">\n    <div *ngIf=\"!error; else errorState\">\n      <div *ngIf=\"data.length; else emptyState\">\n        <ng-container \n          bbTurnoversItemCustomizable \n          [bbHostRef]=\"hostRef\" \n          [bbTemplateContext]=\"data\"\n        ></ng-container>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template bbTurnoversItemCustomizable let-hostRef let-chartSeriesData=\"context\">\n  <ng-container bbTurnoversControlsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n  <bb-turnovers-bar-chart\n    *ngIf=\"(isLoading | async) === false; else loadingState\"\n    class=\"bb-turnovers-bar-chart bb-chart\"\n    [chartSeriesData]=\"chartSeriesData\"\n    [forecast]=\"forecast\">\n  </bb-turnovers-bar-chart>\n</ng-template>\n<ng-template bbTurnoversControlsCustomizable let-hostRef>\n  <div class=\"bb-turnovers-controls\">\n    <div class=\"btn-group btn-group-sm\">\n      <button\n        bbButton\n        data-role=\"6-month-btn\"\n        [value]='6'\n        (click)=\"hostRef.onTabChange(6)\"\n        [color]=\"hostRef.selectedTab.duration === 6 ? 'primary' : 'secondary'\"\n        i18n=\"Data period|Six month label@@turnovers.label.duration.month.six\"\n      >\n        6 Months\n      </button>\n      <button\n        bbButton \n        data-role=\"12-month-btn\"\n        [value]='12'\n        (click)=\"hostRef.onTabChange(12)\"\n        [color]=\"hostRef.selectedTab.duration === 12 ? 'primary' : 'secondary'\"\n        i18n=\"Data period|Twelve month label@@turnovers.label.duration.month.twelve\"\n      >\n        12 Months\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui\n    i18n-text=\"Loading turnovers data|Text to display while loading turnovers@@turnovers.state.loadingTurnovers\"\n    text=\"Loading transactions data...\"\n  ></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #emptyState>\n  <ng-container bbTurnoversEmptyStateCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>\n\n<ng-template bbTurnoversEmptyStateCustomizable let-hostRef>\n  <ng-container bbTurnoversControlsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n    <bb-empty-state-ui\n      i18n-title=\"No data title|Title of a message that is shown when there are no turnovers@@turnovers.state.noResultsFound.title\"\n      title=\"No data found\"\n      i18n-subtitle=\"No data subtitle|Subtitle of a message that is shown when there are no turnovers@@turnovers.state.noResultsFound.subtitle\"\n      subtitle=\"You don't have any data to be displayed. Please try selecting a different period.\"\n      iconSize=\"xxl\"\n      iconModifier=\"bar-chart\"\n    ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <bb-empty-state-ui\n    data-role=\"errorState\"\n    title=\"\"\n    [subtitle]=\"error?.message\"\n    iconModifier=\"error\"\n    iconSize=\"xxl\"\n    iconColor=\"gray\"\n    iconClasses=\"text-muted\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<span #incomeLabel class=\"ng-cloak\" i18n=\"Incoming|Label for income dataset on the chart@@turnovers.chart.income\">Incoming</span>\n<span #spendingLabel class=\"ng-cloak\" i18n=\"Outgoing|Label for spending dataset on the chart@@turnovers.chart.spending\">Outgoing</span>\n<span #forecastLabel class=\"ng-cloak\" i18n=\"forecast|Label for forecast data on the chart@@turnovers.chart.forecast\">Forecast</span>\n","import { Component, Input, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Property } from '@backbase/foundation-ang/web-sdk';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { filterInputParameters, Properties, PROPERTIES } from './constants';\n\n@Component({\n  selector: 'bb-turnovers-widget',\n  templateUrl: './turnovers-widget.component.html',\n})\nexport class TurnoversWidgetComponent {\n  // eslint-disable-next-line\n  @Input('forecast') set forecastValue(value: boolean) {\n    this.forecastSubject.next(value);\n  }\n\n  forecast = this.getProperty(PROPERTIES.FORECAST).pipe(map((propertyValue) => propertyValue === true));\n\n  private readonly forecastSubject = new BehaviorSubject<boolean>(true);\n\n  readonly forecast$: Observable<boolean> = filterInputParameters(this.forecastSubject.asObservable(), this.forecast);\n\n  private getProperty(property: Properties): Observable<Property> {\n    return this.itemModel ? this.itemModel.property(property.name, property.value) : of(property.value);\n  }\n\n  constructor(@Optional() private readonly itemModel: ItemModel) {}\n}\n","<bb-turnovers\n  [forecast]=\"(forecast | async) || undefined\"\n></bb-turnovers>","// General modules\nimport { CommonModule, CurrencyPipe, DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// Backbase modules\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { FormatAmountModule } from '@backbase/ui-ang/amount';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { BbTurnoversLegendComponent } from './bb-turnovers-legend/bb-turnovers-legend.component';\nimport { BbGridPanelSeriesComponent } from './ngx-charts/common/bb-grid-panel-series.component';\nimport {\n  TurnoversBarChartComponent,\n  TurnoversChartLegendCustomizableDirective,\n  TurnoversChartTooltipCustomizableDirective,\n  TurnoversVerticalGroupedBarChartCustomizableDirective,\n  TurnoversVerticalStackedBarChartCustomizableDirective,\n} from './turnovers-bar-chart/turnovers-bar-chart.component';\nimport { TurnoversVerticalBarChartComponent } from './turnovers-vertical-bar-chart/turnovers-vertical-bar-chart.component';\nimport { BbSeriesVerticalComponent } from './turnovers-vertical-grouped-bar-chart/bb-charts-series-vertical.component';\nimport { TurnoversVerticalGroupedBarChartComponent } from './turnovers-vertical-grouped-bar-chart/turnovers-vertical-grouped-bar-chart.component';\nimport { TurnoversVerticalStackedBarChartComponent } from './turnovers-vertical-stacked-bar-chart/turnovers-vertical-stacked-bar-chart.component';\nimport { TurnoversWidgetComponent } from './turnovers-widget.component';\n// Components\nimport {\n  TurnoversComponent,\n  TurnoversControlsCustomizableDirective,\n  TurnoversEmptyStateCustomizableDirective,\n  TurnoversItemCustomizableDirective,\n} from './turnovers/turnovers.component';\n\nconst components = [\n  TurnoversWidgetComponent,\n  TurnoversComponent,\n  TurnoversBarChartComponent,\n  TurnoversVerticalBarChartComponent,\n  TurnoversVerticalStackedBarChartComponent,\n  TurnoversVerticalGroupedBarChartComponent,\n  BbTurnoversLegendComponent,\n  BbSeriesVerticalComponent,\n  BbGridPanelSeriesComponent,\n];\n\nconst customizables = [\n  TurnoversItemCustomizableDirective,\n  TurnoversControlsCustomizableDirective,\n  TurnoversChartTooltipCustomizableDirective,\n  TurnoversChartLegendCustomizableDirective,\n  TurnoversVerticalStackedBarChartCustomizableDirective,\n  TurnoversVerticalGroupedBarChartCustomizableDirective,\n  TurnoversEmptyStateCustomizableDirective,\n];\nconst modules = [FormatAmountModule, LoadingIndicatorModule, EmptyStateModule, ButtonModule];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { TurnoversWidgetComponent },\n    }),\n    NgxChartsModule,\n    ...modules,\n  ],\n  providers: [DatePipe, CurrencyPipe],\n  entryComponents: [TurnoversComponent],\n  declarations: [...components, ...customizables],\n  exports: [...components, ...customizables, ...modules],\n})\nexport class TurnoversWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}