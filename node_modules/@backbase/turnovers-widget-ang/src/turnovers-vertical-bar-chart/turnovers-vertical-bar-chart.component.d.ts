import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, TemplateRef } from '@angular/core';
import { BaseChartComponent, ColorHelper, ScaleType, ViewDimensions } from '@swimlane/ngx-charts';
import { ScaleBand, ScaleLinear } from 'd3-scale';
import { ChartData, LabelMaxHeight } from '../model/turnovers';
import * as i0 from "@angular/core";
export declare class TurnoversVerticalBarChartComponent extends BaseChartComponent {
    /**
     * Enable/Disable chart legend.
     */
    legend: boolean;
    /**
     * The title for the chart legend.
     */
    legendTitle: string;
    /**
     * Hide/show the horizontal axis.
     */
    xAxis: boolean;
    /**
     * Hide/show the vertical axis.
     */
    yAxis: boolean;
    /**
     * Show the horizontal axis label.
     */
    showXAxisLabel: boolean;
    /**
     * Show the vertical axis label.
     */
    showYAxisLabel: boolean;
    /**
     * The label for the horizontal axis.
     */
    xAxisLabel: string;
    /**
     * The label for the vertical axis.
     */
    yAxisLabel: string;
    /**
     * Enable/Disable chart tooltip.
     */
    tooltipDisabled: boolean;
    /**
     * Enable/Disable chart gradient.
     */
    gradient: boolean;
    /**
     * Show/hide chart grid lines.
     */
    showGridLines: boolean;
    /**
     * The active entries for the chart legend.
     */
    activeEntries: any[];
    /**
     * Sets the scheme type of the chart.
     */
    schemeType: ScaleType;
    /**
     * Horizontal axis tick formatting.
     */
    xAxisTickFormatting: any;
    /**
     * Vertical axis tick formatting.
     */
    yAxisTickFormatting: any;
    /**
     * Padding of the chart bars.
     */
    barPadding: number;
    /**
     * Enable/Disable rounded corners.
     */
    roundDomains: boolean;
    /**
     * Enable/disable rounded edges for the bars.
     */
    roundEdges: boolean;
    /**
     * Maximum vertical chart scale.
     */
    yScaleMax: number;
    /**
     * Hide/show the data labels.
     */
    showDataLabel: boolean;
    /**
     * Formatting for the data labels.
     */
    dataLabelFormatting: any;
    /**
     * Array of Chart data objects needed for the chart to be rendered.
     */
    groupsData: ChartData[];
    /**
     * The chart tooltip template.
     */
    tooltipTemplate: TemplateRef<any> | undefined;
    /**
     * The chart legend template.
     */
    legendTemplate: TemplateRef<any> | null;
    /**
     * EventEmitter for triggering a activate event.
     */
    activate: EventEmitter<any>;
    /**
     * EventEmitter for triggering a deactivate event.
     */
    deactivate: EventEmitter<any>;
    dims: ViewDimensions;
    groupDomain: any[];
    innerDomain: any[];
    valueDomain: any[];
    transform: string | undefined;
    colors: ColorHelper | undefined;
    margin: number[];
    xAxisHeight: number;
    yAxisWidth: number;
    dataLabelMaxHeight: LabelMaxHeight;
    constructor(chartElement: ElementRef, zone: NgZone, cd: ChangeDetectorRef, platformId: string);
    update(): void;
    getGroupDomain(): any[];
    getInnerDomain(): any[];
    getXScale(): ScaleBand<string>;
    getYScale(): ScaleLinear<number, number>;
    onDataLabelMaxHeightChanged(event: any, groupIndex?: number): void;
    onClick(data: any, group?: any): void;
    trackBy(index: number, item: any): any;
    setColors(): void;
    updateYAxisWidth(axis: {
        width: number;
    }): void;
    updateXAxisHeight(axis: {
        height: number;
    }): void;
    onActivate(event: any, group?: any): void;
    onDeactivate(event: any, group?: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TurnoversVerticalBarChartComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TurnoversVerticalBarChartComponent, "ng-component", never, { "legend": "legend"; "legendTitle": "legendTitle"; "xAxis": "xAxis"; "yAxis": "yAxis"; "showXAxisLabel": "showXAxisLabel"; "showYAxisLabel": "showYAxisLabel"; "xAxisLabel": "xAxisLabel"; "yAxisLabel": "yAxisLabel"; "tooltipDisabled": "tooltipDisabled"; "gradient": "gradient"; "showGridLines": "showGridLines"; "activeEntries": "activeEntries"; "schemeType": "schemeType"; "xAxisTickFormatting": "xAxisTickFormatting"; "yAxisTickFormatting": "yAxisTickFormatting"; "barPadding": "barPadding"; "roundDomains": "roundDomains"; "roundEdges": "roundEdges"; "yScaleMax": "yScaleMax"; "showDataLabel": "showDataLabel"; "dataLabelFormatting": "dataLabelFormatting"; "groupsData": "groupsData"; "tooltipTemplate": "tooltipTemplate"; "legendTemplate": "legendTemplate"; }, { "activate": "activate"; "deactivate": "deactivate"; }, never, never>;
}
