import * as i0 from '@angular/core';
import { InjectionToken, Injectable, Optional, Inject, Component, NgModule } from '@angular/core';
import * as i2 from '@angular/router';
import { provideRoutes, RouterModule } from '@angular/router';
import { EntitlementsGuard, EntitlementsModule } from '@backbase/foundation-ang/entitlements';
import '@angular/localize/init';
import { JourneyConfigurationService } from '@backbase/account-statement-common-ang';
import { of, combineLatest } from 'rxjs';
import * as i1 from '@backbase/ui-ang/header';
import { HeaderModule } from '@backbase/ui-ang/header';
import { map } from 'rxjs/operators';
import * as i2$1 from '@backbase/account-statement-list-widget-ang';
import { AccountStatementListWidgetModule } from '@backbase/account-statement-list-widget-ang';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';

const RETAIL_JOURNEY_DEFAULT_CONFIGURATION = {
    showCategory: true,
    showDescription: true,
};

/**
 * Injection token to override the journey configurations.
 * Application developer can override the journey configuration by providing their value for this token.
 *
 * @public
 *
 * @usageNotes
 *
 * ### Usage
 *
 * ```typescript
 * import { ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN } from '@backbase/account-statement-retail-journey-ang';
 *
 * @NgModule({
 *  providers: [{ provide: ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN, useValue: { headingType: 'h2'} }]
 * })
 * export class AppModule {}
 *
 * ```
 */
const ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN = new InjectionToken('AccountStatementRetailJourneyConfiguration injection token');
/**
 * Configuration service for the Account Statement Retail Journey Configuration Service.
 *
 * @public
 *
 * @remarks
 * This will allow the application developer to override the configurations specific to this journey via injection token @see {@link @backbase/account-statement-retail-journey-ang#ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN}
 */
class AccountStatementRetailJourneyConfigurationService extends JourneyConfigurationService {
    constructor(staticConfigOverrides) {
        super(Object.assign(Object.assign({}, RETAIL_JOURNEY_DEFAULT_CONFIGURATION), staticConfigOverrides));
    }
    /**
     * Show description
     *
     * @defaultValue true
     * @returns An observable of boolean
     */
    get showDescription() {
        return of(this.staticConfig.showDescription);
    }
    /** Combined observable with journey config properties */
    get allConfig() {
        return of(Object.assign({}, this.staticConfig));
    }
}
AccountStatementRetailJourneyConfigurationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyConfigurationService, deps: [{ token: ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
AccountStatementRetailJourneyConfigurationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyConfigurationService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyConfigurationService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN]
                }] }]; } });

class AccountStatementRetailJourneyComponent {
}
AccountStatementRetailJourneyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AccountStatementRetailJourneyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementRetailJourneyComponent, selector: "bb-account-statement-retail-journey", providers: [AccountStatementRetailJourneyConfigurationService], ngImport: i0, template: "<div class=\"bb-heading-widget page-heading-primary page-heading-wrapped px-0 pb-4\">\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Download Statements\"\n    i18n-heading=\"\n      Download statements title|Title of the Account Statements journey@account-statement-retail-journey.heading-title\n    \"\n  ></bb-header-ui>\n</div>\n\n<router-outlet></router-outlet>\n", components: [{ type: i1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i2.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-statement-retail-journey',
                    templateUrl: './account-statement-retail-journey.component.html',
                    providers: [AccountStatementRetailJourneyConfigurationService],
                }]
        }] });

class AccountStatementRetailViewComponent {
    constructor(configService) {
        this.configService = configService;
        /**
         * View model for Account Statements Retail view
         */
        this.vm$ = combineLatest([
            this.configService.allConfig,
        ]).pipe(map(([config]) => ({ config })));
    }
}
AccountStatementRetailViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailViewComponent, deps: [{ token: AccountStatementRetailJourneyConfigurationService }], target: i0.ɵɵFactoryTarget.Component });
AccountStatementRetailViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementRetailViewComponent, selector: "bb-account-statement-retail-view", ngImport: i0, template: "<bb-account-statement-list-widget\n  *ngIf=\"vm$ | async as vm\"\n  [absoluteDateLimit]=\"vm.config.absoluteDateLimit\"\n  [notificationDismissTime]=\"vm.config.notificationDismissTime\"\n  [pageSize]=\"vm.config.pageSize\"\n  [paginationType]=\"vm.config.paginationType\"\n  [relativeDateLimit]=\"vm.config.relativeDateLimit\"\n  [showCategory]=\"vm.config.showCategory\"\n  [showDescription]=\"vm.config.showDescription\"\n  [sortingDirection]=\"vm.config.sortingDirection\"\n  [sortingOrder]=\"vm.config.sortingOrder\"\n>\n</bb-account-statement-list-widget>\n", components: [{ type: i2$1.AccountStatementListWidgetComponent, selector: "bb-account-statement-list-widget", inputs: ["showDescription"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-statement-retail-view',
                    templateUrl: './account-statement-retail-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: AccountStatementRetailJourneyConfigurationService }]; } });

const accountStatementRetailJourney = {
    path: '',
    component: AccountStatementRetailJourneyComponent,
    canActivate: [EntitlementsGuard],
    data: {
        entitlements: 'AccountStatements.ManageStatements.view',
    },
    children: [
        {
            path: '',
            component: AccountStatementRetailViewComponent,
        },
        { path: '**', redirectTo: '', pathMatch: 'full' },
    ],
};

const components = [AccountStatementRetailJourneyComponent, AccountStatementRetailViewComponent];
const imports = [HeaderModule, AccountStatementListWidgetModule];
class AccountStatementRetailJourneyModule {
    /**
     * Configure routes provided by application developer to the journey.
     *
     * @public
     *
     * @example
     *
     * ```
     * @NgModule({
     *  imports: [AccountStatementRetailJourneyAngModule.forRoot({route: JOURNEY_ROUTE})]
     * })
     * class MyNgModule {}
     * ```
     *
     * @param data Object containing routes for the journey.
     * @returns The new `NgModule`.
     */
    static forRoot(data = { routes: accountStatementRetailJourney }) {
        return {
            ngModule: AccountStatementRetailJourneyModule,
            providers: [provideRoutes([data.routes])],
        };
    }
}
AccountStatementRetailJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AccountStatementRetailJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyModule, declarations: [AccountStatementRetailJourneyComponent, AccountStatementRetailViewComponent], imports: [CommonModule, RouterModule, EntitlementsModule, AccountStatementListWidgetModule, HeaderModule, AccountStatementListWidgetModule], exports: [AccountStatementRetailJourneyComponent, AccountStatementRetailViewComponent] });
AccountStatementRetailJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyModule, imports: [[CommonModule, RouterModule, EntitlementsModule, AccountStatementListWidgetModule, ...imports]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...components],
                    imports: [CommonModule, RouterModule, EntitlementsModule, AccountStatementListWidgetModule, ...imports],
                    exports: [...components],
                }]
        }] });

/*
 * Public API Surface of account-statement-retail-journey-ang
 */

/**
 * Generated bundle index. Do not edit.
 */

export { ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN, AccountStatementRetailJourneyComponent, AccountStatementRetailJourneyConfigurationService, AccountStatementRetailJourneyModule, AccountStatementRetailViewComponent };
//# sourceMappingURL=backbase-account-statement-retail-journey-ang.js.map
