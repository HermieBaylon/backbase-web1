{"version":3,"file":"backbase-account-statement-retail-journey-ang.js","sources":["../../../../libs/account-statement-retail-journey-ang/src/constants/retail-journey-default-configuration.ts","../../../../libs/account-statement-retail-journey-ang/src/account-statement-retail-journey-configuration.service.ts","../../../../libs/account-statement-retail-journey-ang/src/account-statement-retail-journey.component.ts","../../../../libs/account-statement-retail-journey-ang/src/account-statement-retail-journey.component.html","../../../../libs/account-statement-retail-journey-ang/src/view/account-statement-retail-view.component.ts","../../../../libs/account-statement-retail-journey-ang/src/view/account-statement-retail-view.component.html","../../../../libs/account-statement-retail-journey-ang/src/account-statement-retail-journey.routes.ts","../../../../libs/account-statement-retail-journey-ang/src/account-statement-retail-journey.module.ts","../../../../libs/account-statement-retail-journey-ang/public_api.ts","../../../../libs/account-statement-retail-journey-ang/backbase-account-statement-retail-journey-ang.ts"],"sourcesContent":["export const RETAIL_JOURNEY_DEFAULT_CONFIGURATION = {\n  showCategory: true,\n  showDescription: true,\n} as const;\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport '@angular/localize/init';\nimport { JourneyConfigurationService } from '@backbase/account-statement-common-ang';\nimport { Observable, of } from 'rxjs';\nimport { AccountStatementRetailJourneyConfiguration } from './models/account-statement-retail-journey-configuration.model';\nimport { RETAIL_JOURNEY_DEFAULT_CONFIGURATION } from './constants/retail-journey-default-configuration';\n\n/**\n * Injection token to override the journey configurations.\n * Application developer can override the journey configuration by providing their value for this token.\n *\n * @public\n *\n * @usageNotes\n *\n * ### Usage\n *\n * ```typescript\n * import { ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN } from '@backbase/account-statement-retail-journey-ang';\n *\n * @NgModule({\n *  providers: [{ provide: ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN, useValue: { headingType: 'h2'} }]\n * })\n * export class AppModule {}\n *\n * ```\n */\nexport const ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN = new InjectionToken<\n  Partial<AccountStatementRetailJourneyConfiguration>\n>('AccountStatementRetailJourneyConfiguration injection token');\n\n/**\n * Configuration service for the Account Statement Retail Journey Configuration Service.\n *\n * @public\n *\n * @remarks\n * This will allow the application developer to override the configurations specific to this journey via injection token @see {@link @backbase/account-statement-retail-journey-ang#ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN}\n */\n@Injectable()\nexport class AccountStatementRetailJourneyConfigurationService extends JourneyConfigurationService<AccountStatementRetailJourneyConfiguration> {\n  constructor(\n    @Optional()\n    @Inject(ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN)\n    staticConfigOverrides: AccountStatementRetailJourneyConfiguration,\n  ) {\n    super({ ...RETAIL_JOURNEY_DEFAULT_CONFIGURATION, ...staticConfigOverrides });\n  }\n\n  /**\n   * Show description\n   *\n   * @defaultValue true\n   * @returns An observable of boolean\n   */\n  get showDescription(): Observable<boolean> {\n    return of(this.staticConfig.showDescription);\n  }\n\n  /** Combined observable with journey config properties */\n  get allConfig(): Observable<AccountStatementRetailJourneyConfiguration> {\n    return of({ ...this.staticConfig });\n  }\n}\n","import { Component } from '@angular/core';\nimport { AccountStatementRetailJourneyConfigurationService } from './account-statement-retail-journey-configuration.service';\n\n@Component({\n  selector: 'bb-account-statement-retail-journey',\n  templateUrl: './account-statement-retail-journey.component.html',\n  providers: [AccountStatementRetailJourneyConfigurationService],\n})\nexport class AccountStatementRetailJourneyComponent {}\n","<div class=\"bb-heading-widget page-heading-primary page-heading-wrapped px-0 pb-4\">\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Download Statements\"\n    i18n-heading=\"\n      Download statements title|Title of the Account Statements journey@account-statement-retail-journey.heading-title\n    \"\n  ></bb-header-ui>\n</div>\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountStatementRetailJourneyConfigurationService } from '../account-statement-retail-journey-configuration.service';\nimport { AccountStatementRetailJourneyConfiguration } from '../models/account-statement-retail-journey-configuration.model';\n\n@Component({\n  selector: 'bb-account-statement-retail-view',\n  templateUrl: './account-statement-retail-view.component.html',\n})\nexport class AccountStatementRetailViewComponent {\n  /**\n   * View model for Account Statements Retail view\n   */\n  readonly vm$: Observable<{ config: AccountStatementRetailJourneyConfiguration }> = combineLatest([\n    this.configService.allConfig,\n  ]).pipe(map(([config]) => ({ config })));\n\n  constructor(private readonly configService: AccountStatementRetailJourneyConfigurationService) {}\n}\n","<bb-account-statement-list-widget\n  *ngIf=\"vm$ | async as vm\"\n  [absoluteDateLimit]=\"vm.config.absoluteDateLimit\"\n  [notificationDismissTime]=\"vm.config.notificationDismissTime\"\n  [pageSize]=\"vm.config.pageSize\"\n  [paginationType]=\"vm.config.paginationType\"\n  [relativeDateLimit]=\"vm.config.relativeDateLimit\"\n  [showCategory]=\"vm.config.showCategory\"\n  [showDescription]=\"vm.config.showDescription\"\n  [sortingDirection]=\"vm.config.sortingDirection\"\n  [sortingOrder]=\"vm.config.sortingOrder\"\n>\n</bb-account-statement-list-widget>\n","import { Route } from '@angular/router';\nimport { EntitlementsGuard } from '@backbase/foundation-ang/entitlements';\nimport { AccountStatementRetailJourneyComponent } from './account-statement-retail-journey.component';\nimport { AccountStatementRetailViewComponent } from './view/account-statement-retail-view.component';\n\nexport const accountStatementRetailJourney: Route = {\n  path: '',\n  component: AccountStatementRetailJourneyComponent,\n  canActivate: [EntitlementsGuard],\n  data: {\n    entitlements: 'AccountStatements.ManageStatements.view',\n  },\n  children: [\n    {\n      path: '',\n      component: AccountStatementRetailViewComponent,\n    },\n    { path: '**', redirectTo: '', pathMatch: 'full' },\n  ],\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideRoutes, RouterModule, Route } from '@angular/router';\nimport { accountStatementRetailJourney } from './account-statement-retail-journey.routes';\n\nimport { AccountStatementRetailJourneyComponent } from './account-statement-retail-journey.component';\n\nimport { CommonModule } from '@angular/common';\nimport { EntitlementsModule } from '@backbase/foundation-ang/entitlements';\nimport { AccountStatementListWidgetModule } from '@backbase/account-statement-list-widget-ang';\nimport { AccountStatementRetailViewComponent } from './view/account-statement-retail-view.component';\nimport { HeaderModule } from '@backbase/ui-ang/header';\n\nconst components = [AccountStatementRetailJourneyComponent, AccountStatementRetailViewComponent];\n\nconst imports = [HeaderModule, AccountStatementListWidgetModule];\n\n@NgModule({\n  declarations: [...components],\n  imports: [CommonModule, RouterModule, EntitlementsModule, AccountStatementListWidgetModule, ...imports],\n  exports: [...components],\n})\nexport class AccountStatementRetailJourneyModule {\n  /**\n   * Configure routes provided by application developer to the journey.\n   *\n   * @public\n   *\n   * @example\n   *\n   * ```\n   * @NgModule({\n   *  imports: [AccountStatementRetailJourneyAngModule.forRoot({route: JOURNEY_ROUTE})]\n   * })\n   * class MyNgModule {}\n   * ```\n   *\n   * @param data Object containing routes for the journey.\n   * @returns The new `NgModule`.\n   */\n\n  static forRoot(\n    data: { [key: string]: any; routes: Route } = { routes: accountStatementRetailJourney },\n  ): ModuleWithProviders<AccountStatementRetailJourneyModule> {\n    return {\n      ngModule: AccountStatementRetailJourneyModule,\n      providers: [provideRoutes([data.routes])],\n    };\n  }\n}\n","/*\n * Public API Surface of account-statement-retail-journey-ang\n */\nexport { AccountStatementRetailJourneyModule } from './src/account-statement-retail-journey.module';\nexport { ACCOUNT_STATEMENT_RETAIL_JOURNEY_CONFIGURATION_TOKEN } from './src/account-statement-retail-journey-configuration.service';\nexport { AccountStatementRetailJourneyConfigurationService } from './src/account-statement-retail-journey-configuration.service';\nexport { AccountStatementRetailJourneyConfiguration } from './src/models/account-statement-retail-journey-configuration.model';\n\n// views\nexport { AccountStatementRetailJourneyComponent } from './src/account-statement-retail-journey.component';\nexport { AccountStatementRetailViewComponent } from './src/view/account-statement-retail-view.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}