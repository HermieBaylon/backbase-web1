import { NgModule } from '@angular/core';
import { provideRoutes, RouterModule } from '@angular/router';
import { accountStatementRetailJourney } from './account-statement-retail-journey.routes';
import { AccountStatementRetailJourneyComponent } from './account-statement-retail-journey.component';
import { CommonModule } from '@angular/common';
import { EntitlementsModule } from '@backbase/foundation-ang/entitlements';
import { AccountStatementListWidgetModule } from '@backbase/account-statement-list-widget-ang';
import { AccountStatementRetailViewComponent } from './view/account-statement-retail-view.component';
import { HeaderModule } from '@backbase/ui-ang/header';
import * as i0 from "@angular/core";
const components = [AccountStatementRetailJourneyComponent, AccountStatementRetailViewComponent];
const imports = [HeaderModule, AccountStatementListWidgetModule];
export class AccountStatementRetailJourneyModule {
    /**
     * Configure routes provided by application developer to the journey.
     *
     * @public
     *
     * @example
     *
     * ```
     * @NgModule({
     *  imports: [AccountStatementRetailJourneyAngModule.forRoot({route: JOURNEY_ROUTE})]
     * })
     * class MyNgModule {}
     * ```
     *
     * @param data Object containing routes for the journey.
     * @returns The new `NgModule`.
     */
    static forRoot(data = { routes: accountStatementRetailJourney }) {
        return {
            ngModule: AccountStatementRetailJourneyModule,
            providers: [provideRoutes([data.routes])],
        };
    }
}
AccountStatementRetailJourneyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AccountStatementRetailJourneyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyModule, declarations: [AccountStatementRetailJourneyComponent, AccountStatementRetailViewComponent], imports: [CommonModule, RouterModule, EntitlementsModule, AccountStatementListWidgetModule, HeaderModule, AccountStatementListWidgetModule], exports: [AccountStatementRetailJourneyComponent, AccountStatementRetailViewComponent] });
AccountStatementRetailJourneyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyModule, imports: [[CommonModule, RouterModule, EntitlementsModule, AccountStatementListWidgetModule, ...imports]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementRetailJourneyModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...components],
                    imports: [CommonModule, RouterModule, EntitlementsModule, AccountStatementListWidgetModule, ...imports],
                    exports: [...components],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC1zdGF0ZW1lbnQtcmV0YWlsLWpvdXJuZXkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9hY2NvdW50LXN0YXRlbWVudC1yZXRhaWwtam91cm5leS1hbmcvc3JjL2FjY291bnQtc3RhdGVtZW50LXJldGFpbC1qb3VybmV5Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBUyxNQUFNLGlCQUFpQixDQUFDO0FBQ3JFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBRTFGLE9BQU8sRUFBRSxzQ0FBc0MsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBRXRHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUMvRixPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNyRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7O0FBRXZELE1BQU0sVUFBVSxHQUFHLENBQUMsc0NBQXNDLEVBQUUsbUNBQW1DLENBQUMsQ0FBQztBQUVqRyxNQUFNLE9BQU8sR0FBRyxDQUFDLFlBQVksRUFBRSxnQ0FBZ0MsQ0FBQyxDQUFDO0FBT2pFLE1BQU0sT0FBTyxtQ0FBbUM7SUFDOUM7Ozs7Ozs7Ozs7Ozs7Ozs7T0FnQkc7SUFFSCxNQUFNLENBQUMsT0FBTyxDQUNaLE9BQThDLEVBQUUsTUFBTSxFQUFFLDZCQUE2QixFQUFFO1FBRXZGLE9BQU87WUFDTCxRQUFRLEVBQUUsbUNBQW1DO1lBQzdDLFNBQVMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1NBQzFDLENBQUM7SUFDSixDQUFDOztpSUExQlUsbUNBQW1DO2tJQUFuQyxtQ0FBbUMsaUJBVDVCLHNDQUFzQyxFQUFFLG1DQUFtQyxhQU1uRixZQUFZLEVBQUUsWUFBWSxFQUFFLGtCQUFrQixFQUFFLGdDQUFnQyxFQUozRSxZQUFZLEVBQUUsZ0NBQWdDLGFBRjNDLHNDQUFzQyxFQUFFLG1DQUFtQztrSUFTbEYsbUNBQW1DLFlBSHJDLENBQUMsWUFBWSxFQUFFLFlBQVksRUFBRSxrQkFBa0IsRUFBRSxnQ0FBZ0MsRUFBRSxHQUFHLE9BQU8sQ0FBQzs0RkFHNUYsbUNBQW1DO2tCQUwvQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDO29CQUM3QixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLGtCQUFrQixFQUFFLGdDQUFnQyxFQUFFLEdBQUcsT0FBTyxDQUFDO29CQUN2RyxPQUFPLEVBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQztpQkFDekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgcHJvdmlkZVJvdXRlcywgUm91dGVyTW9kdWxlLCBSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBhY2NvdW50U3RhdGVtZW50UmV0YWlsSm91cm5leSB9IGZyb20gJy4vYWNjb3VudC1zdGF0ZW1lbnQtcmV0YWlsLWpvdXJuZXkucm91dGVzJztcblxuaW1wb3J0IHsgQWNjb3VudFN0YXRlbWVudFJldGFpbEpvdXJuZXlDb21wb25lbnQgfSBmcm9tICcuL2FjY291bnQtc3RhdGVtZW50LXJldGFpbC1qb3VybmV5LmNvbXBvbmVudCc7XG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBFbnRpdGxlbWVudHNNb2R1bGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvZW50aXRsZW1lbnRzJztcbmltcG9ydCB7IEFjY291bnRTdGF0ZW1lbnRMaXN0V2lkZ2V0TW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL2FjY291bnQtc3RhdGVtZW50LWxpc3Qtd2lkZ2V0LWFuZyc7XG5pbXBvcnQgeyBBY2NvdW50U3RhdGVtZW50UmV0YWlsVmlld0NvbXBvbmVudCB9IGZyb20gJy4vdmlldy9hY2NvdW50LXN0YXRlbWVudC1yZXRhaWwtdmlldy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGVhZGVyTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9oZWFkZXInO1xuXG5jb25zdCBjb21wb25lbnRzID0gW0FjY291bnRTdGF0ZW1lbnRSZXRhaWxKb3VybmV5Q29tcG9uZW50LCBBY2NvdW50U3RhdGVtZW50UmV0YWlsVmlld0NvbXBvbmVudF07XG5cbmNvbnN0IGltcG9ydHMgPSBbSGVhZGVyTW9kdWxlLCBBY2NvdW50U3RhdGVtZW50TGlzdFdpZGdldE1vZHVsZV07XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogWy4uLmNvbXBvbmVudHNdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBSb3V0ZXJNb2R1bGUsIEVudGl0bGVtZW50c01vZHVsZSwgQWNjb3VudFN0YXRlbWVudExpc3RXaWRnZXRNb2R1bGUsIC4uLmltcG9ydHNdLFxuICBleHBvcnRzOiBbLi4uY29tcG9uZW50c10sXG59KVxuZXhwb3J0IGNsYXNzIEFjY291bnRTdGF0ZW1lbnRSZXRhaWxKb3VybmV5TW9kdWxlIHtcbiAgLyoqXG4gICAqIENvbmZpZ3VyZSByb3V0ZXMgcHJvdmlkZWQgYnkgYXBwbGljYXRpb24gZGV2ZWxvcGVyIHRvIHRoZSBqb3VybmV5LlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqXG4gICAqIGBgYFxuICAgKiBATmdNb2R1bGUoe1xuICAgKiAgaW1wb3J0czogW0FjY291bnRTdGF0ZW1lbnRSZXRhaWxKb3VybmV5QW5nTW9kdWxlLmZvclJvb3Qoe3JvdXRlOiBKT1VSTkVZX1JPVVRFfSldXG4gICAqIH0pXG4gICAqIGNsYXNzIE15TmdNb2R1bGUge31cbiAgICogYGBgXG4gICAqXG4gICAqIEBwYXJhbSBkYXRhIE9iamVjdCBjb250YWluaW5nIHJvdXRlcyBmb3IgdGhlIGpvdXJuZXkuXG4gICAqIEByZXR1cm5zIFRoZSBuZXcgYE5nTW9kdWxlYC5cbiAgICovXG5cbiAgc3RhdGljIGZvclJvb3QoXG4gICAgZGF0YTogeyBba2V5OiBzdHJpbmddOiBhbnk7IHJvdXRlczogUm91dGUgfSA9IHsgcm91dGVzOiBhY2NvdW50U3RhdGVtZW50UmV0YWlsSm91cm5leSB9LFxuICApOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEFjY291bnRTdGF0ZW1lbnRSZXRhaWxKb3VybmV5TW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBBY2NvdW50U3RhdGVtZW50UmV0YWlsSm91cm5leU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW3Byb3ZpZGVSb3V0ZXMoW2RhdGEucm91dGVzXSldLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==