{"version":3,"file":"backbase-consent-details-widget-ang.js","sources":["../../../../libs/consent-details-widget-ang/src/consent-details-widget/model/consent-details-error.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details.service.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-error/consent-details-error.component.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-error/consent-details-error.component.html","../../../../libs/consent-details-widget-ang/src/consent-details-widget/model/constants.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-header/consent-details-header.component.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-header/consent-details-header.component.html","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-tpp-details/consent-details-tpp-details.component.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-tpp-details/consent-details-tpp-details.component.html","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-accounts-list/consent-details-accounts-list.component.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-accounts-list/consent-details-accounts-list.component.html","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-permissions-list/consent-details-permissions-list.component.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-permissions-list/consent-details-permissions-list.component.html","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-container/consent-details-container.component.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget/consent-details-container/consent-details-container.component.html","../../../../libs/consent-details-widget-ang/src/consent-details-widget.component.ts","../../../../libs/consent-details-widget-ang/src/consent-details-widget.module.ts","../../../../libs/consent-details-widget-ang/backbase-consent-details-widget-ang.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\n\nexport class ConsentDetailsAccessDenied {\n  kind: 'ConsentDetailsAccessDenied' = 'ConsentDetailsAccessDenied';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class ConsentDetailsNotFound {\n  kind: 'ConsentDetailsNotFound' = 'ConsentDetailsNotFound';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class ConsentDetailsBadRequest {\n  kind: 'ConsentDetailsBadRequest' = 'ConsentDetailsBadRequest';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class ConsentDetailsUnknownError {\n  kind: 'ConsentDetailsUnknownError' = 'ConsentDetailsUnknownError';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class ConsentDetailsConnectivityError {\n  kind: 'ConsentDetailsConnectivityError' = 'ConsentDetailsConnectivityError';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport type ConsentDetailsError =\n  | ConsentDetailsAccessDenied\n  | ConsentDetailsNotFound\n  | ConsentDetailsBadRequest\n  | ConsentDetailsUnknownError\n  | ConsentDetailsConnectivityError;\n\nexport const parseError = (error: HttpErrorResponse): ConsentDetailsError => {\n  if (error.error instanceof ErrorEvent) {\n    return new ConsentDetailsUnknownError(error);\n  } else {\n    switch (error.status) {\n      case 0:\n        return new ConsentDetailsConnectivityError(error);\n      case 400:\n        return new ConsentDetailsBadRequest(error);\n      case 401:\n        return new ConsentDetailsAccessDenied(error);\n      case 403:\n        return new ConsentDetailsAccessDenied(error);\n      case 404:\n        return new ConsentDetailsNotFound(error);\n      default:\n        return new ConsentDetailsUnknownError(error);\n    }\n  }\n};\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { ConsentsHttpService } from '@backbase/data-ang/consent';\nimport { BehaviorSubject, combineLatest, Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, filter, pluck, switchMap, take, tap } from 'rxjs/operators';\n\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { ConsentDetails } from './model/types';\nimport { ConsentDetailsError, parseError } from './model/consent-details-error';\n\n@Injectable()\nexport class ConsentDetailsService {\n  private readonly consentId = new ReplaySubject<string>(1);\n  private readonly revokingComplete = new BehaviorSubject<boolean>(true);\n\n  readonly loading = new BehaviorSubject<boolean>(true);\n  readonly error = new BehaviorSubject<ConsentDetailsError | undefined>(undefined);\n\n  readonly consentDetails = combineLatest([this.consentId, this.revokingComplete]).pipe(\n    filter(([id]) => !!id),\n    distinctUntilChanged(),\n    tap(() => this.loading.next(true)),\n    switchMap(([id]) => this.getConsentDetailsById(id)),\n    tap(() => this.error.next(undefined)),\n    catchError((error: ConsentDetailsError) => {\n      this.error.next(error);\n      return of(undefined);\n    }),\n    tap(() => this.loading.next(false)),\n  );\n\n  constructor(\n    private readonly consentDataService: ConsentsHttpService,\n    private readonly notification: NotificationService,\n  ) {}\n\n  getConsentFrom(consentId: Observable<string>) {\n    consentId.subscribe(this.consentId);\n  }\n\n  requestRevoke(\n    errorTemplateRef: TemplateRef<any> | string,\n    successTemplateRef: TemplateRef<any> | string,\n  ): Observable<any | undefined> {\n    return this.consentId.pipe(\n      take(1),\n      filter((id: string) => !!id),\n      switchMap((id: string) => this.revokeConsentById(id)),\n      tap(() => {\n        this.revokingComplete.next(true);\n        this.showNotification(successTemplateRef, 'success');\n      }),\n      catchError(() => {\n        this.showNotification(errorTemplateRef, 'error');\n        return of(undefined);\n      }),\n    );\n  }\n\n  private getConsentDetailsById(id: string): Observable<ConsentDetails> {\n    return this.consentDataService.getIdByIdgetId({ id }, 'response').pipe(\n      pluck<HttpResponse<ConsentDetails>, ConsentDetails>('body'),\n      catchError<ConsentDetails, never>((error: HttpErrorResponse) => {\n        throw parseError(error);\n      }),\n    );\n  }\n\n  private revokeConsentById(id: string): Observable<any> {\n    return this.consentDataService.postRevokeById({ id }, 'response').pipe(\n      catchError((error: HttpErrorResponse) => {\n        throw parseError(error);\n      }),\n    );\n  }\n\n  private showNotification(templateRef: TemplateRef<any> | string, modifier: 'success' | 'error') {\n    this.notification.showNotification({\n      header: templateRef,\n      message: '',\n      modifier,\n    });\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-consent-details-error',\n  templateUrl: './consent-details-error.component.html',\n})\nexport class ConsentDetailsErrorComponent {\n  /**\n   * Id Required for checking invalid consent\n   */\n  @Input() consentId: string | undefined | null;\n  /**\n   * Error kind to check against\n   */\n  @Input() errorKind: string | undefined;\n}\n","<bb-empty-state-ui\n  *ngIf=\"!consentId\"\n  title=\"Consent Details Not Found\"\n  i18n-title=\"\n    Consent Details Not Found|Empty state label when there is no consent\n    id@@consent-details.error.noConsentRequest.title\"\n  subtitle=\"Consent Details Not Found.\"\n  i18n-subtitle=\"\n    Consent Details Not Found subtitle|Empty state subtitle label when there is no consent\n    id@@consent-details.error.noConsentRequest.subtitle\"\n  iconModifier=\"error\"></bb-empty-state-ui>\n\n<ng-container *ngIf=\"consentId && errorKind\" [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentDetailsAccessDenied'\"\n    title=\"Permissions required\"\n    i18n-title=\"\n      Permissions required|Error state label when user does not have permissions to view consent\n      details@@consent-details.error.accessDenied.title\"\n    subtitle=\"You don't have permissions to see the consent's details.\"\n    i18n-subtitle=\"\n      No Permissions Subtitle|Error state subtitle label when user does not have permissions to view consent\n      details@@consent-details.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentDetailsConnectivityError'\"\n    title=\"Connectivity Error\"\n    i18n-title=\"\n      Connectivity Error title|Empty state label when there is connectivity\n      error@@consent-details.error.connectivity.title\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n    i18n-subtitle=\"\n      Connectivity Error subtitle|Empty state subtitle label when there is connectivity\n      error@@consent-details.error.connectivity.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentDetailsNotFound'\"\n    title=\"Consent Details Not Found\"\n    i18n-title=\"\n      Consent Details Not Found|Empty state label when the id is invalid@@consent-details.error.notFound.title\"\n    subtitle=\"Consent Details Not Found.\"\n    i18n-subtitle=\"\n      notFound Error subtitle|Empty state subtitle label when there is notFound\n      error@@consent-details.error.notFound.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n\n  <!-- This will usually happen on environment misconfiguration -->\n  <!-- ConsentDetailsUnknownError | ConsentDetailsBadRequest-->\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"Unexpected Error\"\n    i18n-title=\"\n      Unexpected Error title|Empty state label when there is an unexpected error@@consent-details.error.unexpected.title\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n    i18n-subtitle=\"\n      Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n      error@@consent-details.error.unexpected.subtitle\"\n    iconModifier=\"user\"></bb-empty-state-ui>\n</ng-container>\n","export enum Status {\n  ACTIVE = 'ACTIVE',\n  REVOKED = 'REVOKED',\n  EXPIRED = 'EXPIRED',\n}\n\nexport const Permission = {\n  ReadAccountsDetail: 'ReadAccountsDetail',\n  ReadBalances: 'ReadBalances',\n  ReadTransactionsDetail: 'ReadTransactionsDetail',\n  ReadBeneficiariesDetail: 'ReadBeneficiariesDetail',\n  ReadDirectDebits: 'ReadDirectDebits',\n  ReadProducts: 'ReadProducts',\n  ReadStandingOrdersDetail: 'ReadStandingOrdersDetail',\n  ReadTransactionsCredits: 'ReadTransactionsCredits',\n  ReadTransactionsDebits: 'ReadTransactionsDebits',\n};\n","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Tpp } from '@backbase/data-ang/consent';\n\nimport { Status } from '../model/constants';\nimport { ConsentDetailsHeaderCustomizableContext } from '../model/types';\n\n@Component({\n  selector: 'bb-consent-details-header',\n  templateUrl: './consent-details-header.component.html',\n})\nexport class ConsentDetailsHeaderComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentDetailsHeaderComponent = this;\n  /**\n   * Third party provider\n   */\n  @Input() tpp: Tpp | undefined;\n  /**\n   * Status of the Consent\n   */\n  @Input() status = '';\n  /**\n   * Expiry date of the Consent\n   */\n  @Input() expiryDate = '';\n  /**\n   * Emitter that fires when you revoke consent\n   */\n  @Output() revokeConsent: EventEmitter<void> = new EventEmitter<void>();\n  /**\n   * Consent status enumeration\n   */\n  readonly Status = Status;\n  /**\n   * Revoke consent button click event handler.\n   * Emit revoke consent event\n   */\n  onRevokeConsent(): void {\n    this.revokeConsent.emit();\n  }\n}\n\n@Directive({\n  selector: '[bbConsentDetailsHeaderCustomizable]',\n})\nexport class ConsentDetailsHeaderCustomizableDirective extends BbTemplate<\n  ConsentDetailsHeaderComponent,\n  ConsentDetailsHeaderCustomizableContext\n> {}\n","<ng-container\n  bbConsentDetailsHeaderCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    tpp: tpp,\n    status: status,\n    expiryDate: expiryDate\n  }\">\n</ng-container>\n\n<ng-template\n  bbConsentDetailsHeaderCustomizable\n  let-hostRef\n  let-tpp=\"context.tpp\"\n  let-status=\"context.status\"\n  let-expiryDate=\"context.expiryDate\">\n  <div class=\"bb-consent-details-header bb-stack\">\n    <div class=\"bb-stack__item\">\n      <bb-third-party-provider-ui\n        [name]=\"tpp?.name\"\n        [url]=\"tpp?.website\"\n        [image]=\"tpp?.imageUrl\"\n        [verified]=\"tpp?.isTrusted\"\n        [condensed]=\"true\">\n      </bb-third-party-provider-ui>\n    </div>\n\n    <!-- Large Viewports -->\n    <div data-role=\"status-badge-large\" class=\"bb-stack__item\">\n      <bb-badge-ui\n        data-role=\"status-badge-active\"\n        i18n-text=\"Active|Consent status active@@consent-details.header.badge.active\"\n        *ngIf=\"status === hostRef.Status.ACTIVE\"\n        color=\"success\"\n        text=\"Active\">\n      </bb-badge-ui>\n      <bb-badge-ui\n        data-role=\"status-badge-expired\"\n        i18n-text=\"Expired|Consent status expired@@consent-details.header.badge.expired\"\n        *ngIf=\"status === hostRef.Status.EXPIRED\"\n        color=\"secondary\"\n        text=\"Expired\">\n      </bb-badge-ui>\n      <bb-badge-ui\n        data-role=\"status-badge-revoked\"\n        i18n-text=\"Revoked|Consent status revoked@@consent-details.header.badge.revoked\"\n        *ngIf=\"status === hostRef.Status.REVOKED\"\n        color=\"danger\"\n        text=\"Revoked\">\n      </bb-badge-ui>\n    </div>\n\n    <div class=\"bb-consent-details-header__status-wrapper bb-stack__item bb-stack__item--push-right\">\n      <div class=\"bb-consent-details-header__status bb-text-align-right\">\n        <div\n          i18n=\"Expired on|Consent is expired@@consent-details.header.heading.expiredOn\"\n          class=\"bb-text-bold\"\n          *ngIf=\"status === hostRef.Status.EXPIRED\">\n          Expired on\n        </div>\n        <div\n          data-role=\"token-expiry-label-active\"\n          i18n=\"Expiry Date|Expiry Date of Consent@@consent-details.header.heading.expiryDate\"\n          class=\"bb-text-bold\"\n          *ngIf=\"status !== hostRef.Status.EXPIRED\">\n          Expiry date\n        </div>\n        <div data-role=\"expiry-date\">\n          {{ expiryDate | bbDate: 'bbShort' }}\n        </div>\n      </div>\n      <button\n        bbButton\n        *ngIf=\"status === hostRef.Status.ACTIVE\"\n        (click)=\"hostRef.onRevokeConsent()\"\n        color=\"danger\"\n        data-role=\"revoke-consent-button\"\n        type=\"submit\">\n        <span i18n=\"Revoke Consent|Revoke consent button@@consent-details.header.button.revoke-consent\">\n          Revoke Consent\n        </span>\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Tpp } from '@backbase/data-ang/consent';\n\n@Component({\n  selector: 'bb-consent-third-party-details',\n  templateUrl: './consent-details-tpp-details.component.html',\n})\nexport class ConsentDetailsTppDetailsComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentDetailsTppDetailsComponent = this;\n  /**\n   * Third party provider\n   */\n  @Input() tpp: Tpp | undefined;\n}\n\n@Directive({\n  selector: '[bbConsentDetailsTppDetailsCustomizable]',\n})\nexport class ConsentDetailsTppDetailsCustomizableDirective extends BbTemplate<ConsentDetailsTppDetailsComponent, Tpp> {}\n","<ng-container bbConsentDetailsTppDetailsCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"tpp\"> </ng-container>\n\n<ng-template bbConsentDetailsTppDetailsCustomizable let-hostRef let-tpp=\"context\">\n  <div class=\"bb-consent-details-tpp\">\n    <div class=\"bb-consent-details-tpp__info-label\">\n      <span i18n=\"Third Party Information|TPP Info@@consent-details.tpp-details.heading.tppDetails\" class=\"bb-text-bold\"\n        >Third Party Information</span\n      >\n    </div>\n    <div *ngIf=\"tpp.externalId\" class=\"bb-block bb-block--md\">\n      <div\n        i18n=\"Third Party ID|TPPID Heading@@consent-details.tpp-details.heading.TPPID\"\n        data-role=\"third-party-id-label\"\n        class=\"bb-text-bold\">\n        Third party ID\n      </div>\n      <div class=\"bb-subtitle\" data-role=\"third-party-id-value\">\n        {{ tpp.externalId }}\n      </div>\n    </div>\n    <div *ngIf=\"tpp.mail || tpp.phonenumber\" class=\"bb-block bb-block--md\" data-role=\"contact-information-value\">\n      <div\n        i18n=\"Contact Information|Contact Information heading@@consent-details.tpp-details.heading.contact-information\"\n        data-role=\"contact-information-label\"\n        class=\"bb-text-bold\">\n        Contact information\n      </div>\n      <div *ngIf=\"tpp.mail\" data-role=\"third-party-email-value\" class=\"bb-subtitle\">\n        {{ tpp.mail }}\n      </div>\n      <div *ngIf=\"tpp.phonenumber && tpp.country\" data-role=\"third-party-phone-value\" class=\"bb-subtitle\">\n        {{ tpp.phonenumber | phoneNumber: tpp.country }}\n      </div>\n    </div>\n    <div *ngIf=\"tpp.address\" class=\"bb-block bb-block--md\">\n      <div\n        i18n=\"Legal Address|Legal Address Heading@@consent-details.tpp-details.heading.legal-address\"\n        data-role=\"legal-address-label\"\n        class=\"bb-text-bold\">\n        Legal address\n      </div>\n      <div class=\"bb-subtitle\" data-role=\"legal-address-value\">\n        {{ tpp.address }}\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Account } from '../model/types';\n@Component({\n  selector: 'bb-consent-details-accounts-list',\n  templateUrl: './consent-details-accounts-list.component.html',\n})\nexport class ConsentDetailsAccountsListComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentDetailsAccountsListComponent = this;\n  /**\n   * List of accounts\n   */\n  @Input() accounts: Account[] = [];\n}\n\n@Directive({\n  selector: '[bbConsentDetailsAccountsListCustomizable]',\n})\nexport class ConsentDetailsAccountsListCustomizableDirective extends BbTemplate<\n  ConsentDetailsAccountsListComponent,\n  Account[]\n> {}\n","<ng-container bbConsentDetailsAccountsListCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"accounts\">\n</ng-container>\n\n<ng-template bbConsentDetailsAccountsListCustomizable let-hostRef let-accounts=\"context\">\n  <div class=\"bb-block bb-block--lg\">\n    <div\n      i18n=\"Accounts Exposed|Accounts Exposed Heading@@consent-details.accounts-list.heading.accounts-exposed\"\n      class=\"bb-text-bold bb-block bb-block--sm\"\n      data-role=\"account-exposed-details-label\">\n      Accounts Exposed\n    </div>\n    <div data-role=\"accounts-exposed\" class=\"bb-consent-details-accounts-item card\">\n      <div class=\"card-section\" *ngFor=\"let account of accounts\">\n        <bb-product-item-basic-account-ui\n          [title]=\"account.name\"\n          [productNumber]=\"account.number\"\n          [amount]=\"account.balance\"\n          [currency]=\"account.currency\"\n          [highlight]=\"false\"\n          [active]=\"false\"></bb-product-item-basic-account-ui>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Directive, Input } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { Permission } from '../model/constants';\n\n@Component({\n  selector: 'bb-consent-details-permissions-list',\n  templateUrl: './consent-details-permissions-list.component.html',\n})\nexport class ConsentDetailsPermissionsListComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentDetailsPermissionsListComponent = this;\n  /**\n   * List of permissions\n   */\n  @Input() permissions: string[] = [];\n  /**\n   * Permission mapper\n   */\n  readonly Permission = Permission;\n  /**\n   * Check if permission contains provided permission\n   * @param permission\n   */\n  hasPermission(permission: string): boolean {\n    return this.permissions.includes(permission);\n  }\n}\n\n@Directive({\n  selector: '[bbConsentDetailsPermissionsListCustomizable]',\n})\nexport class ConsentDetailsPermissionsListCustomizableDirective extends BbTemplate<\n  ConsentDetailsPermissionsListComponent,\n  string[]\n> {}\n","<ng-container bbConsentDetailsPermissionsListCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"permissions\">\n</ng-container>\n\n<ng-template bbConsentDetailsPermissionsListCustomizable let-hostRef let-permissions=\"context\">\n  <div\n    i18n=\"Permissions granted|Permissions granted heading@@consent-details.permissions.heading.permissions-granted\"\n    data-role=\"permissions-granted-label\"\n    class=\"bb-text-bold bb-block bb-block--sm\">\n    Permissions granted\n  </div>\n  <div class=\"bb-consent-details-permissions card\">\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadAccountsDetail)\">\n      <div\n        class=\"bb-text-bold\"\n        data-role=\"account-information-label\"\n        i18n=\"\n          Account Information|Account Information Permission\n          title@@consent-details.label.permission.ReadAccountsDetail.title\">\n        Account information\n      </div>\n      <div\n        class=\"bb-consent-details-permissions__details\"\n        i18n=\"\n          Account Information details|Account Information Permission\n          subtitle@@consent-details.label.permission.ReadAccountsDetail.subtitle\">\n        Name, number\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadBalances)\">\n      <div\n        class=\"bb-text-bold\"\n        data-role=\"account-balance-label\"\n        i18n=\"Account Balance|Account Balance Permission title@@consent-details.label.permission.ReadBalances.title\">\n        Account balance\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsDetail)\">\n      <div\n        class=\"bb-text-bold\"\n        data-role=\"transactions-label\"\n        i18n=\"\n          Transactions|Transaction Details Permission\n          title@@consent-details.label.permission.ReadTransactionsDetail.title\">\n        Transactions\n      </div>\n      <div\n        class=\"bb-consent-details-permissions__details\"\n        i18n=\"\n          Transactions details |Transaction Details Permission\n          subtitle@@consent-details.label.permission.ReadTransactionsDetail.subtitle\">\n        Category, amount, date, time, beneficiary details\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadBeneficiariesDetail)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"Beneficiaries|Beneficiaries title@@consent-details.label.permission.ReadBeneficiariesDetail.title\">\n        Beneficiaries details\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadDirectDebits)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"Direct Debits|Direct Debits Permission title@@consent-details.label.permission.ReadDirectDebits.title\">\n        Direct Debits\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadProducts)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"Products|Products Permission title@@consent-details.label.permission.ReadProducts.title\">\n        Products\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadStandingOrdersDetail)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"\n          Standing Orders|Standing Orders Permission\n          title@@consent-details.label.permission.ReadStandingOrdersDetail.title\">\n        Standing Orders\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsCredits)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"\n          Transactions Credits|Transactions Credits Permission\n          title@@consent-details.label.permission.ReadTransactionsCredits.title\">\n        Transactions Credits\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsDebits)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"\n          Transactions Debits|Transactions Debits Permission\n          title@@consent-details.label.permission.ReadTransactionsDebits.title\">\n        Transactions Debits\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Directive, TemplateRef, ViewChild, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\nimport { ConsentDetailsService } from '../consent-details.service';\nimport { ConsentDetails, ConsentDetailsContainerCustomizableContext } from '../model/types';\nimport { Status } from '../model/constants';\nimport { ConsentDetailsError } from '../model/consent-details-error';\n\n@Component({\n  selector: 'bb-consent-details-container',\n  templateUrl: './consent-details-container.component.html',\n})\nexport class ConsentDetailsContainerComponent implements OnInit {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentDetailsContainerComponent = this;\n  /**\n   * Notification error template reference\n   */\n  @ViewChild('notificationError', { static: true })\n  notificationErrorTemplate: TemplateRef<any> | string = '';\n  /**\n   * Notification success template reference\n   */\n  @ViewChild('notificationSuccess', { static: true })\n  notificationSuccessTemplate: TemplateRef<any> | string = '';\n  /**\n   * Stream of loading spinner visibility flag\n   */\n  readonly loading: Observable<boolean> = this.detailsService.loading;\n  /**\n   * Stream of consent details request errors\n   */\n  readonly error: Observable<ConsentDetailsError | undefined> = this.detailsService.error;\n  /**\n   * Stream of consent ID\n   */\n  readonly consentId: Observable<string> = this.getRouteParam(this.route, 'consentId').pipe(\n    map((consentId: string | null) => consentId || ''),\n  );\n  /**\n   * Stream of consent details\n   */\n  readonly consentDetails: Observable<ConsentDetails | undefined> = this.detailsService.consentDetails;\n  /**\n   * Consent reject modal visibility flag\n   */\n  isModalOpen = false;\n  /**\n   * Consent status enumeration\n   */\n  readonly Status = Status;\n\n  ngOnInit() {\n    this.detailsService.getConsentFrom(this.consentId);\n  }\n\n  /**\n   * Open consent reject modal\n   */\n  openRejectConsentModal(): void {\n    this.isModalOpen = true;\n  }\n\n  /**\n   * Close consent reject modal\n   */\n  dismissRejectConsentModal(): void {\n    this.isModalOpen = false;\n  }\n\n  /**\n   * Revoke consent\n   */\n  revokeConsent(): void {\n    this.detailsService.requestRevoke(this.notificationErrorTemplate, this.notificationSuccessTemplate).subscribe();\n    this.dismissRejectConsentModal();\n  }\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = route.paramMap.pipe(pluck<ParamMap, string | null>('params', param));\n\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map(params => params[0] || params[1]),\n    );\n  }\n\n  constructor(private readonly detailsService: ConsentDetailsService, private readonly route: ActivatedRoute) {}\n}\n\n@Directive({\n  selector: '[bbConsentDetailsContainerCustomizable]',\n})\nexport class ConsentDetailsContainerCustomizableDirective extends BbTemplate<\n  ConsentDetailsContainerComponent,\n  ConsentDetailsContainerCustomizableContext\n> {}\n","<ng-container\n  bbConsentDetailsContainerCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    consentDetails: consentDetails | async,\n    loading: loading | async,\n    error: error | async\n  }\">\n</ng-container>\n\n<ng-template\n  bbConsentDetailsContainerCustomizable\n  let-hostRef\n  let-consentDetails=\"context.consentDetails\"\n  let-error=\"context.error\"\n  let-loading=\"context.loading\">\n  <ng-container *ngIf=\"hostRef.consentId | async; else errorTemplate\">\n    <ng-container *ngIf=\"!loading; else loadingTemplate\">\n      <ng-container *ngIf=\"!error; else errorTemplate\">\n        <bb-consent-details-header\n          [expiryDate]=\"consentDetails?.expiryDate\"\n          [status]=\"consentDetails?.status\"\n          [tpp]=\"consentDetails?.tpp\"\n          (revokeConsent)=\"hostRef.openRejectConsentModal()\">\n        </bb-consent-details-header>\n\n        <div class=\"bb-consent-details\">\n          <!-- Large Viewports -->\n          <div class=\"bb-consent-details__lg\">\n            <bb-consent-third-party-details [tpp]=\"consentDetails?.tpp\"> </bb-consent-third-party-details>\n            <div class=\"bb-consent-details__lg-wrapper\">\n              <div class=\"bb-consent-details__lg-wrapper-item\">\n                <bb-consent-details-accounts-list [accounts]=\"consentDetails?.accounts\">\n                </bb-consent-details-accounts-list>\n              </div>\n              <bb-consent-details-permissions-list [permissions]=\"consentDetails?.permissions\">\n              </bb-consent-details-permissions-list>\n            </div>\n          </div>\n\n          <!-- Mobile Viewports -->\n          <div class=\"bb-consent-details__sm\">\n            <div class=\"bb-block bb-block--lg\">\n              <div class=\"bb-block bb-block--md\">\n                <div\n                  i18n=\"Expired on|Consent is expired@@consent-details.container.heading.expiredOn\"\n                  class=\"bb-text-bold\"\n                  *ngIf=\"consentDetails?.status === hostRef.Status.EXPIRED\">\n                  Expired on\n                </div>\n                <div\n                  i18n=\"Expiry Date|Expiry Date of Consent@@consent-details.container.heading.expiryDate\"\n                  class=\"bb-text-bold\"\n                  *ngIf=\"consentDetails?.status !== hostRef.Status.EXPIRED\">\n                  Expiry date\n                </div>\n                <div>\n                  {{ consentDetails.expiryDate | bbDate: 'bbShort' }}\n                </div>\n              </div>\n              <div class=\"bb-block bb-block--md\">\n                <bb-consent-details-accounts-list [accounts]=\"consentDetails?.accounts\">\n                </bb-consent-details-accounts-list>\n              </div>\n              <bb-consent-details-permissions-list [permissions]=\"consentDetails?.permissions\">\n              </bb-consent-details-permissions-list>\n            </div>\n            <bb-collapsible-ui>\n              <ng-template bbCollapsibleHeader let-toggle=\"toggle\">\n                <div class=\"bb-block bb-block--md\">\n                  <div (click)=\"toggle()\" class=\"bb-consent-details__sm-collapsible\">\n                    <span\n                      class=\"bb-text-bold\"\n                      i18n=\"See other details|Third party details@@consent-details.container.label.seeDetails\">\n                      See other details\n                    </span>\n                    <bb-icon-ui name=\"toggle-down\" size=\"sm\"> </bb-icon-ui>\n                  </div>\n                </div>\n              </ng-template>\n              <ng-template bbCollapsibleBody>\n                <bb-consent-third-party-details [tpp]=\"consentDetails?.tpp\"> </bb-consent-third-party-details>\n              </ng-template>\n            </bb-collapsible-ui>\n\n            <!-- Small Viewport Revoke Button -->\n            <div\n              *ngIf=\"consentDetails?.status === hostRef.Status.ACTIVE\"\n              class=\"bb-consent-details__button bb-button-bar\">\n              <button\n                bbButton\n                class=\"bb-button-bar__button\"\n                (click)=\"hostRef.openRejectConsentModal()\"\n                color=\"danger\"\n                i18n=\"Revoke Consent|Revoke consent button@@consent-details.header.button.revoke-consent\">\n                Revoke Consent\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <bb-modal-ui [isOpen]=\"hostRef.isModalOpen\">\n          <bb-modal-header-ui>\n            <ng-template bbCustomModalHeader>\n              <span\n                class=\"bb-text-bold\"\n                data-role=\"dialog-title\"\n                i18n=\"Revoke Consent?|Revoke consent heading@@consent-details.container.heading.revoke-consent\"\n                bbConfirmTitle>\n                Revoke Consent?\n              </span>\n            </ng-template>\n          </bb-modal-header-ui>\n          <bb-modal-body-ui>\n            <ng-template bbCustomModalBody>\n              <div\n                data-role=\"dialog-question\"\n                i18n=\"\n                  Are you sure you want to permanently revoke consent? This action can't be undone.| Revoke Consent\n                  body@@consent-details.container.body.revoke-consent\"\n                bbConfirmBody>\n                Are you sure you want to permanently revoke consent for {{ consentDetails?.tpp.name }}? This action\n                can't be undone.\n              </div>\n            </ng-template>\n          </bb-modal-body-ui>\n          <bb-modal-footer-ui>\n            <ng-template bbCustomModalFooter>\n              <button\n                bbButton\n                data-role=\"cancel-button\"\n                color=\"secondary\"\n                (click)=\"hostRef.dismissRejectConsentModal()\"\n                i18n=\"Cancel|Cancel and close modal@@consent-details.container.button.label.cancel\">\n                Cancel\n              </button>\n              <button\n                bbButton\n                color=\"danger\"\n                data-role=\"revoke-button\"\n                (click)=\"hostRef.revokeConsent()\"\n                i18n=\"Revoke|Approve revoking of consent@@consent-details.container.button.label.revoke\">\n                Revoke\n              </button>\n            </ng-template>\n          </bb-modal-footer-ui>\n        </bb-modal-ui>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #loadingTemplate>\n      <div class=\"bb-state-container\">\n        <bb-loading-indicator-ui loadersize=\"lg\"></bb-loading-indicator-ui>\n      </div>\n    </ng-template>\n  </ng-container>\n  <ng-template #errorTemplate>\n    <div class=\"bb-state-container\">\n      <bb-consent-details-error [consentId]=\"hostRef.consentId | async\" [errorKind]=\"error?.kind\">\n      </bb-consent-details-error>\n    </div>\n  </ng-template>\n</ng-template>\n\n<ng-template #notificationError>\n  <span i18n=\"Failed to revoke consent|Error notification message@@consent-details.container.notification.error\">\n    Failed to revoke consent\n  </span>\n</ng-template>\n\n<ng-template #notificationSuccess>\n  <span\n    i18n=\"Successfully revoked consent |Success notification message@@consent-details.container.notification.success\">\n    Consent was revoked\n  </span>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bb-consent-details-widget',\n  template: ` <bb-consent-details-container></bb-consent-details-container> `,\n})\nexport class ConsentDetailsWidgetComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { ConsentUiModule } from '@backbase/consent-ui';\n\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { PhoneNumberModule } from '@backbase/ui-ang/phone-number-format-pipe';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { ConsentDetailsService } from './consent-details-widget/consent-details.service';\nimport { ConsentDetailsErrorComponent } from './consent-details-widget/consent-details-error/consent-details-error.component';\nimport {\n  ConsentDetailsHeaderComponent,\n  ConsentDetailsHeaderCustomizableDirective,\n} from './consent-details-widget/consent-details-header/consent-details-header.component';\nimport {\n  ConsentDetailsContainerComponent,\n  ConsentDetailsContainerCustomizableDirective,\n} from './consent-details-widget/consent-details-container/consent-details-container.component';\nimport {\n  ConsentDetailsPermissionsListComponent,\n  ConsentDetailsPermissionsListCustomizableDirective,\n} from './consent-details-widget/consent-details-permissions-list/consent-details-permissions-list.component';\nimport {\n  ConsentDetailsAccountsListComponent,\n  ConsentDetailsAccountsListCustomizableDirective,\n} from './consent-details-widget/consent-details-accounts-list/consent-details-accounts-list.component';\nimport {\n  ConsentDetailsTppDetailsComponent,\n  ConsentDetailsTppDetailsCustomizableDirective,\n} from './consent-details-widget/consent-details-tpp-details/consent-details-tpp-details.component';\nimport { ConsentDetailsWidgetComponent } from './consent-details-widget.component';\n\nconst components = [\n  ConsentDetailsWidgetComponent,\n  ConsentDetailsTppDetailsComponent,\n  ConsentDetailsAccountsListComponent,\n  ConsentDetailsPermissionsListComponent,\n  ConsentDetailsContainerComponent,\n  ConsentDetailsHeaderComponent,\n  ConsentDetailsErrorComponent,\n];\n\nconst directives = [\n  ConsentDetailsContainerCustomizableDirective,\n  ConsentDetailsHeaderCustomizableDirective,\n  ConsentDetailsTppDetailsCustomizableDirective,\n  ConsentDetailsPermissionsListCustomizableDirective,\n  ConsentDetailsAccountsListCustomizableDirective,\n];\n\nconst uiModules = [\n  ConsentUiModule,\n  CollapsibleModule,\n  PhoneNumberModule,\n  ProductItemBasicAccountModule,\n  BbDatePipeModule,\n  IconModule,\n  ModalModule,\n  LoadingIndicatorModule,\n  BadgeModule,\n  EmptyStateModule,\n  ButtonModule,\n  NotificationModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { ConsentDetailsWidgetComponent },\n    }),\n    ...uiModules,\n  ],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules],\n  providers: [ConsentDetailsService],\n})\nexport class ConsentDetailsWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}