import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/empty-state";
import * as i2 from "@angular/common";
export class ConsentDetailsErrorComponent {
}
ConsentDetailsErrorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ConsentDetailsErrorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentDetailsErrorComponent, selector: "bb-consent-details-error", inputs: { consentId: "consentId", errorKind: "errorKind" }, ngImport: i0, template: "<bb-empty-state-ui\n  *ngIf=\"!consentId\"\n  title=\"Consent Details Not Found\"\n  i18n-title=\"\n    Consent Details Not Found|Empty state label when there is no consent\n    id@@consent-details.error.noConsentRequest.title\"\n  subtitle=\"Consent Details Not Found.\"\n  i18n-subtitle=\"\n    Consent Details Not Found subtitle|Empty state subtitle label when there is no consent\n    id@@consent-details.error.noConsentRequest.subtitle\"\n  iconModifier=\"error\"></bb-empty-state-ui>\n\n<ng-container *ngIf=\"consentId && errorKind\" [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentDetailsAccessDenied'\"\n    title=\"Permissions required\"\n    i18n-title=\"\n      Permissions required|Error state label when user does not have permissions to view consent\n      details@@consent-details.error.accessDenied.title\"\n    subtitle=\"You don't have permissions to see the consent's details.\"\n    i18n-subtitle=\"\n      No Permissions Subtitle|Error state subtitle label when user does not have permissions to view consent\n      details@@consent-details.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentDetailsConnectivityError'\"\n    title=\"Connectivity Error\"\n    i18n-title=\"\n      Connectivity Error title|Empty state label when there is connectivity\n      error@@consent-details.error.connectivity.title\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n    i18n-subtitle=\"\n      Connectivity Error subtitle|Empty state subtitle label when there is connectivity\n      error@@consent-details.error.connectivity.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentDetailsNotFound'\"\n    title=\"Consent Details Not Found\"\n    i18n-title=\"\n      Consent Details Not Found|Empty state label when the id is invalid@@consent-details.error.notFound.title\"\n    subtitle=\"Consent Details Not Found.\"\n    i18n-subtitle=\"\n      notFound Error subtitle|Empty state subtitle label when there is notFound\n      error@@consent-details.error.notFound.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n\n  <!-- This will usually happen on environment misconfiguration -->\n  <!-- ConsentDetailsUnknownError | ConsentDetailsBadRequest-->\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"Unexpected Error\"\n    i18n-title=\"\n      Unexpected Error title|Empty state label when there is an unexpected error@@consent-details.error.unexpected.title\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n    i18n-subtitle=\"\n      Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n      error@@consent-details.error.unexpected.subtitle\"\n    iconModifier=\"user\"></bb-empty-state-ui>\n</ng-container>\n", components: [{ type: i1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.NgSwitchDefault, selector: "[ngSwitchDefault]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsErrorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-consent-details-error',
                    templateUrl: './consent-details-error.component.html',
                }]
        }], propDecorators: { consentId: [{
                type: Input
            }], errorKind: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC1kZXRhaWxzLWVycm9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29uc2VudC1kZXRhaWxzLXdpZGdldC1hbmcvc3JjL2NvbnNlbnQtZGV0YWlscy13aWRnZXQvY29uc2VudC1kZXRhaWxzLWVycm9yL2NvbnNlbnQtZGV0YWlscy1lcnJvci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbnNlbnQtZGV0YWlscy13aWRnZXQtYW5nL3NyYy9jb25zZW50LWRldGFpbHMtd2lkZ2V0L2NvbnNlbnQtZGV0YWlscy1lcnJvci9jb25zZW50LWRldGFpbHMtZXJyb3IuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFNakQsTUFBTSxPQUFPLDRCQUE0Qjs7MEhBQTVCLDRCQUE0Qjs4R0FBNUIsNEJBQTRCLDRIQ056Qyw4MkZBNkRBOzRGRHZEYSw0QkFBNEI7a0JBSnhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsV0FBVyxFQUFFLHdDQUF3QztpQkFDdEQ7OEJBS1UsU0FBUztzQkFBakIsS0FBSztnQkFJRyxTQUFTO3NCQUFqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1jb25zZW50LWRldGFpbHMtZXJyb3InLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uc2VudC1kZXRhaWxzLWVycm9yLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQ29uc2VudERldGFpbHNFcnJvckNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBJZCBSZXF1aXJlZCBmb3IgY2hlY2tpbmcgaW52YWxpZCBjb25zZW50XG4gICAqL1xuICBASW5wdXQoKSBjb25zZW50SWQ6IHN0cmluZyB8IHVuZGVmaW5lZCB8IG51bGw7XG4gIC8qKlxuICAgKiBFcnJvciBraW5kIHRvIGNoZWNrIGFnYWluc3RcbiAgICovXG4gIEBJbnB1dCgpIGVycm9yS2luZDogc3RyaW5nIHwgdW5kZWZpbmVkO1xufVxuIiwiPGJiLWVtcHR5LXN0YXRlLXVpXG4gICpuZ0lmPVwiIWNvbnNlbnRJZFwiXG4gIHRpdGxlPVwiQ29uc2VudCBEZXRhaWxzIE5vdCBGb3VuZFwiXG4gIGkxOG4tdGl0bGU9XCJcbiAgICBDb25zZW50IERldGFpbHMgTm90IEZvdW5kfEVtcHR5IHN0YXRlIGxhYmVsIHdoZW4gdGhlcmUgaXMgbm8gY29uc2VudFxuICAgIGlkQEBjb25zZW50LWRldGFpbHMuZXJyb3Iubm9Db25zZW50UmVxdWVzdC50aXRsZVwiXG4gIHN1YnRpdGxlPVwiQ29uc2VudCBEZXRhaWxzIE5vdCBGb3VuZC5cIlxuICBpMThuLXN1YnRpdGxlPVwiXG4gICAgQ29uc2VudCBEZXRhaWxzIE5vdCBGb3VuZCBzdWJ0aXRsZXxFbXB0eSBzdGF0ZSBzdWJ0aXRsZSBsYWJlbCB3aGVuIHRoZXJlIGlzIG5vIGNvbnNlbnRcbiAgICBpZEBAY29uc2VudC1kZXRhaWxzLmVycm9yLm5vQ29uc2VudFJlcXVlc3Quc3VidGl0bGVcIlxuICBpY29uTW9kaWZpZXI9XCJlcnJvclwiPjwvYmItZW1wdHktc3RhdGUtdWk+XG5cbjxuZy1jb250YWluZXIgKm5nSWY9XCJjb25zZW50SWQgJiYgZXJyb3JLaW5kXCIgW25nU3dpdGNoXT1cImVycm9yS2luZFwiPlxuICA8YmItZW1wdHktc3RhdGUtdWlcbiAgICAqbmdTd2l0Y2hDYXNlPVwiJ0NvbnNlbnREZXRhaWxzQWNjZXNzRGVuaWVkJ1wiXG4gICAgdGl0bGU9XCJQZXJtaXNzaW9ucyByZXF1aXJlZFwiXG4gICAgaTE4bi10aXRsZT1cIlxuICAgICAgUGVybWlzc2lvbnMgcmVxdWlyZWR8RXJyb3Igc3RhdGUgbGFiZWwgd2hlbiB1c2VyIGRvZXMgbm90IGhhdmUgcGVybWlzc2lvbnMgdG8gdmlldyBjb25zZW50XG4gICAgICBkZXRhaWxzQEBjb25zZW50LWRldGFpbHMuZXJyb3IuYWNjZXNzRGVuaWVkLnRpdGxlXCJcbiAgICBzdWJ0aXRsZT1cIllvdSBkb24ndCBoYXZlIHBlcm1pc3Npb25zIHRvIHNlZSB0aGUgY29uc2VudCdzIGRldGFpbHMuXCJcbiAgICBpMThuLXN1YnRpdGxlPVwiXG4gICAgICBObyBQZXJtaXNzaW9ucyBTdWJ0aXRsZXxFcnJvciBzdGF0ZSBzdWJ0aXRsZSBsYWJlbCB3aGVuIHVzZXIgZG9lcyBub3QgaGF2ZSBwZXJtaXNzaW9ucyB0byB2aWV3IGNvbnNlbnRcbiAgICAgIGRldGFpbHNAQGNvbnNlbnQtZGV0YWlscy5lcnJvci5hY2Nlc3NEZW5pZWQuc3VidGl0bGVcIlxuICAgIGljb25Nb2RpZmllcj1cImxvY2tcIj48L2JiLWVtcHR5LXN0YXRlLXVpPlxuXG4gIDxiYi1lbXB0eS1zdGF0ZS11aVxuICAgICpuZ1N3aXRjaENhc2U9XCInQ29uc2VudERldGFpbHNDb25uZWN0aXZpdHlFcnJvcidcIlxuICAgIHRpdGxlPVwiQ29ubmVjdGl2aXR5IEVycm9yXCJcbiAgICBpMThuLXRpdGxlPVwiXG4gICAgICBDb25uZWN0aXZpdHkgRXJyb3IgdGl0bGV8RW1wdHkgc3RhdGUgbGFiZWwgd2hlbiB0aGVyZSBpcyBjb25uZWN0aXZpdHlcbiAgICAgIGVycm9yQEBjb25zZW50LWRldGFpbHMuZXJyb3IuY29ubmVjdGl2aXR5LnRpdGxlXCJcbiAgICBzdWJ0aXRsZT1cIkFyZSB5b3UgY29ubmVjdGVkIHRvIHRoZSBpbnRlcm5ldD8gUGxlYXNlIGNoZWNrIHlvdXIgY29ubmVjdGlvbiBhbmQgdHJ5IGFnYWluLlwiXG4gICAgaTE4bi1zdWJ0aXRsZT1cIlxuICAgICAgQ29ubmVjdGl2aXR5IEVycm9yIHN1YnRpdGxlfEVtcHR5IHN0YXRlIHN1YnRpdGxlIGxhYmVsIHdoZW4gdGhlcmUgaXMgY29ubmVjdGl2aXR5XG4gICAgICBlcnJvckBAY29uc2VudC1kZXRhaWxzLmVycm9yLmNvbm5lY3Rpdml0eS5zdWJ0aXRsZVwiXG4gICAgaWNvbk1vZGlmaWVyPVwiZXJyb3JcIj48L2JiLWVtcHR5LXN0YXRlLXVpPlxuXG4gIDxiYi1lbXB0eS1zdGF0ZS11aVxuICAgICpuZ1N3aXRjaENhc2U9XCInQ29uc2VudERldGFpbHNOb3RGb3VuZCdcIlxuICAgIHRpdGxlPVwiQ29uc2VudCBEZXRhaWxzIE5vdCBGb3VuZFwiXG4gICAgaTE4bi10aXRsZT1cIlxuICAgICAgQ29uc2VudCBEZXRhaWxzIE5vdCBGb3VuZHxFbXB0eSBzdGF0ZSBsYWJlbCB3aGVuIHRoZSBpZCBpcyBpbnZhbGlkQEBjb25zZW50LWRldGFpbHMuZXJyb3Iubm90Rm91bmQudGl0bGVcIlxuICAgIHN1YnRpdGxlPVwiQ29uc2VudCBEZXRhaWxzIE5vdCBGb3VuZC5cIlxuICAgIGkxOG4tc3VidGl0bGU9XCJcbiAgICAgIG5vdEZvdW5kIEVycm9yIHN1YnRpdGxlfEVtcHR5IHN0YXRlIHN1YnRpdGxlIGxhYmVsIHdoZW4gdGhlcmUgaXMgbm90Rm91bmRcbiAgICAgIGVycm9yQEBjb25zZW50LWRldGFpbHMuZXJyb3Iubm90Rm91bmQuc3VidGl0bGVcIlxuICAgIGljb25Nb2RpZmllcj1cImVycm9yXCI+PC9iYi1lbXB0eS1zdGF0ZS11aT5cblxuICA8IS0tIFRoaXMgd2lsbCB1c3VhbGx5IGhhcHBlbiBvbiBlbnZpcm9ubWVudCBtaXNjb25maWd1cmF0aW9uIC0tPlxuICA8IS0tIENvbnNlbnREZXRhaWxzVW5rbm93bkVycm9yIHwgQ29uc2VudERldGFpbHNCYWRSZXF1ZXN0LS0+XG4gIDxiYi1lbXB0eS1zdGF0ZS11aVxuICAgICpuZ1N3aXRjaERlZmF1bHRcbiAgICB0aXRsZT1cIlVuZXhwZWN0ZWQgRXJyb3JcIlxuICAgIGkxOG4tdGl0bGU9XCJcbiAgICAgIFVuZXhwZWN0ZWQgRXJyb3IgdGl0bGV8RW1wdHkgc3RhdGUgbGFiZWwgd2hlbiB0aGVyZSBpcyBhbiB1bmV4cGVjdGVkIGVycm9yQEBjb25zZW50LWRldGFpbHMuZXJyb3IudW5leHBlY3RlZC50aXRsZVwiXG4gICAgc3VidGl0bGU9XCJTb21ldGhpbmcncyBnb25lIHdyb25nIHdpdGggb3VyIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5cIlxuICAgIGkxOG4tc3VidGl0bGU9XCJcbiAgICAgIFVuZXhwZWN0ZWQgRXJyb3Igc3VidGl0bGV8RW1wdHkgc3RhdGUgc3VidGl0bGUgbGFiZWwgd2hlbiB0aGVyZSBpcyBhbiB1bmV4cGVjdGVkXG4gICAgICBlcnJvckBAY29uc2VudC1kZXRhaWxzLmVycm9yLnVuZXhwZWN0ZWQuc3VidGl0bGVcIlxuICAgIGljb25Nb2RpZmllcj1cInVzZXJcIj48L2JiLWVtcHR5LXN0YXRlLXVpPlxuPC9uZy1jb250YWluZXI+XG4iXX0=