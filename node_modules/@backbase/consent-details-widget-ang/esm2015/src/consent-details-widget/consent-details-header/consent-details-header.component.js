import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Status } from '../model/constants';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/consent-ui";
import * as i2 from "@backbase/ui-ang/badge";
import * as i3 from "@angular/common";
import * as i4 from "@backbase/ui-ang/button";
import * as i5 from "@backbase/ui-ang/date-pipe";
export class ConsentDetailsHeaderComponent {
    constructor() {
        /**
         * Component context
         */
        this.hostRef = this;
        /**
         * Status of the Consent
         */
        this.status = '';
        /**
         * Expiry date of the Consent
         */
        this.expiryDate = '';
        /**
         * Emitter that fires when you revoke consent
         */
        this.revokeConsent = new EventEmitter();
        /**
         * Consent status enumeration
         */
        this.Status = Status;
    }
    /**
     * Revoke consent button click event handler.
     * Emit revoke consent event
     */
    onRevokeConsent() {
        this.revokeConsent.emit();
    }
}
ConsentDetailsHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ConsentDetailsHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentDetailsHeaderComponent, selector: "bb-consent-details-header", inputs: { tpp: "tpp", status: "status", expiryDate: "expiryDate" }, outputs: { revokeConsent: "revokeConsent" }, ngImport: i0, template: "<ng-container\n  bbConsentDetailsHeaderCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    tpp: tpp,\n    status: status,\n    expiryDate: expiryDate\n  }\">\n</ng-container>\n\n<ng-template\n  bbConsentDetailsHeaderCustomizable\n  let-hostRef\n  let-tpp=\"context.tpp\"\n  let-status=\"context.status\"\n  let-expiryDate=\"context.expiryDate\">\n  <div class=\"bb-consent-details-header bb-stack\">\n    <div class=\"bb-stack__item\">\n      <bb-third-party-provider-ui\n        [name]=\"tpp?.name\"\n        [url]=\"tpp?.website\"\n        [image]=\"tpp?.imageUrl\"\n        [verified]=\"tpp?.isTrusted\"\n        [condensed]=\"true\">\n      </bb-third-party-provider-ui>\n    </div>\n\n    <!-- Large Viewports -->\n    <div data-role=\"status-badge-large\" class=\"bb-stack__item\">\n      <bb-badge-ui\n        data-role=\"status-badge-active\"\n        i18n-text=\"Active|Consent status active@@consent-details.header.badge.active\"\n        *ngIf=\"status === hostRef.Status.ACTIVE\"\n        color=\"success\"\n        text=\"Active\">\n      </bb-badge-ui>\n      <bb-badge-ui\n        data-role=\"status-badge-expired\"\n        i18n-text=\"Expired|Consent status expired@@consent-details.header.badge.expired\"\n        *ngIf=\"status === hostRef.Status.EXPIRED\"\n        color=\"secondary\"\n        text=\"Expired\">\n      </bb-badge-ui>\n      <bb-badge-ui\n        data-role=\"status-badge-revoked\"\n        i18n-text=\"Revoked|Consent status revoked@@consent-details.header.badge.revoked\"\n        *ngIf=\"status === hostRef.Status.REVOKED\"\n        color=\"danger\"\n        text=\"Revoked\">\n      </bb-badge-ui>\n    </div>\n\n    <div class=\"bb-consent-details-header__status-wrapper bb-stack__item bb-stack__item--push-right\">\n      <div class=\"bb-consent-details-header__status bb-text-align-right\">\n        <div\n          i18n=\"Expired on|Consent is expired@@consent-details.header.heading.expiredOn\"\n          class=\"bb-text-bold\"\n          *ngIf=\"status === hostRef.Status.EXPIRED\">\n          Expired on\n        </div>\n        <div\n          data-role=\"token-expiry-label-active\"\n          i18n=\"Expiry Date|Expiry Date of Consent@@consent-details.header.heading.expiryDate\"\n          class=\"bb-text-bold\"\n          *ngIf=\"status !== hostRef.Status.EXPIRED\">\n          Expiry date\n        </div>\n        <div data-role=\"expiry-date\">\n          {{ expiryDate | bbDate: 'bbShort' }}\n        </div>\n      </div>\n      <button\n        bbButton\n        *ngIf=\"status === hostRef.Status.ACTIVE\"\n        (click)=\"hostRef.onRevokeConsent()\"\n        color=\"danger\"\n        data-role=\"revoke-consent-button\"\n        type=\"submit\">\n        <span i18n=\"Revoke Consent|Revoke consent button@@consent-details.header.button.revoke-consent\">\n          Revoke Consent\n        </span>\n      </button>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.ӨThirdPartyProviderComponent; }), selector: "bb-third-party-provider-ui", inputs: ["name", "image", "url", "verified", "condensed", "expiryDate", "expired", "showExpire"] }, { type: i0.forwardRef(function () { return i2.BadgeComponent; }), selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }], directives: [{ type: i0.forwardRef(function () { return ConsentDetailsHeaderCustomizableDirective; }), selector: "[bbConsentDetailsHeaderCustomizable]" }, { type: i0.forwardRef(function () { return i3.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i4.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "bbDate": i0.forwardRef(function () { return i5.BbDatePipe; }) } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsHeaderComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-consent-details-header',
                    templateUrl: './consent-details-header.component.html',
                }]
        }], propDecorators: { tpp: [{
                type: Input
            }], status: [{
                type: Input
            }], expiryDate: [{
                type: Input
            }], revokeConsent: [{
                type: Output
            }] } });
export class ConsentDetailsHeaderCustomizableDirective extends BbTemplate {
}
ConsentDetailsHeaderCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsHeaderCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ConsentDetailsHeaderCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: ConsentDetailsHeaderCustomizableDirective, selector: "[bbConsentDetailsHeaderCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsHeaderCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbConsentDetailsHeaderCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC1kZXRhaWxzLWhlYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbnNlbnQtZGV0YWlscy13aWRnZXQtYW5nL3NyYy9jb25zZW50LWRldGFpbHMtd2lkZ2V0L2NvbnNlbnQtZGV0YWlscy1oZWFkZXIvY29uc2VudC1kZXRhaWxzLWhlYWRlci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbnNlbnQtZGV0YWlscy13aWRnZXQtYW5nL3NyYy9jb25zZW50LWRldGFpbHMtd2lkZ2V0L2NvbnNlbnQtZGV0YWlscy1oZWFkZXIvY29uc2VudC1kZXRhaWxzLWhlYWRlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFHM0QsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7Ozs7O0FBTzVDLE1BQU0sT0FBTyw2QkFBNkI7SUFKMUM7UUFLRTs7V0FFRztRQUNNLFlBQU8sR0FBa0MsSUFBSSxDQUFDO1FBS3ZEOztXQUVHO1FBQ00sV0FBTSxHQUFHLEVBQUUsQ0FBQztRQUNyQjs7V0FFRztRQUNNLGVBQVUsR0FBRyxFQUFFLENBQUM7UUFDekI7O1dBRUc7UUFDTyxrQkFBYSxHQUF1QixJQUFJLFlBQVksRUFBUSxDQUFDO1FBQ3ZFOztXQUVHO1FBQ00sV0FBTSxHQUFHLE1BQU0sQ0FBQztLQVExQjtJQVBDOzs7T0FHRztJQUNILGVBQWU7UUFDYixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzVCLENBQUM7OzJIQS9CVSw2QkFBNkI7K0dBQTdCLDZCQUE2QixrTENYMUMseTNGQXFGQSxtY0RyQ2EseUNBQXlDOzRGQXJDekMsNkJBQTZCO2tCQUp6QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLFdBQVcsRUFBRSx5Q0FBeUM7aUJBQ3ZEOzhCQVNVLEdBQUc7c0JBQVgsS0FBSztnQkFJRyxNQUFNO3NCQUFkLEtBQUs7Z0JBSUcsVUFBVTtzQkFBbEIsS0FBSztnQkFJSSxhQUFhO3NCQUF0QixNQUFNOztBQWlCVCxNQUFNLE9BQU8seUNBQTBDLFNBQVEsVUFHOUQ7O3VJQUhZLHlDQUF5QzsySEFBekMseUNBQXlDOzRGQUF6Qyx5Q0FBeUM7a0JBSHJELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNDQUFzQztpQkFDakQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYlRlbXBsYXRlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHsgVHBwIH0gZnJvbSAnQGJhY2tiYXNlL2RhdGEtYW5nL2NvbnNlbnQnO1xuXG5pbXBvcnQgeyBTdGF0dXMgfSBmcm9tICcuLi9tb2RlbC9jb25zdGFudHMnO1xuaW1wb3J0IHsgQ29uc2VudERldGFpbHNIZWFkZXJDdXN0b21pemFibGVDb250ZXh0IH0gZnJvbSAnLi4vbW9kZWwvdHlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1jb25zZW50LWRldGFpbHMtaGVhZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbnNlbnQtZGV0YWlscy1oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBDb25zZW50RGV0YWlsc0hlYWRlckNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBDb21wb25lbnQgY29udGV4dFxuICAgKi9cbiAgcmVhZG9ubHkgaG9zdFJlZjogQ29uc2VudERldGFpbHNIZWFkZXJDb21wb25lbnQgPSB0aGlzO1xuICAvKipcbiAgICogVGhpcmQgcGFydHkgcHJvdmlkZXJcbiAgICovXG4gIEBJbnB1dCgpIHRwcDogVHBwIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogU3RhdHVzIG9mIHRoZSBDb25zZW50XG4gICAqL1xuICBASW5wdXQoKSBzdGF0dXMgPSAnJztcbiAgLyoqXG4gICAqIEV4cGlyeSBkYXRlIG9mIHRoZSBDb25zZW50XG4gICAqL1xuICBASW5wdXQoKSBleHBpcnlEYXRlID0gJyc7XG4gIC8qKlxuICAgKiBFbWl0dGVyIHRoYXQgZmlyZXMgd2hlbiB5b3UgcmV2b2tlIGNvbnNlbnRcbiAgICovXG4gIEBPdXRwdXQoKSByZXZva2VDb25zZW50OiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG4gIC8qKlxuICAgKiBDb25zZW50IHN0YXR1cyBlbnVtZXJhdGlvblxuICAgKi9cbiAgcmVhZG9ubHkgU3RhdHVzID0gU3RhdHVzO1xuICAvKipcbiAgICogUmV2b2tlIGNvbnNlbnQgYnV0dG9uIGNsaWNrIGV2ZW50IGhhbmRsZXIuXG4gICAqIEVtaXQgcmV2b2tlIGNvbnNlbnQgZXZlbnRcbiAgICovXG4gIG9uUmV2b2tlQ29uc2VudCgpOiB2b2lkIHtcbiAgICB0aGlzLnJldm9rZUNvbnNlbnQuZW1pdCgpO1xuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYkNvbnNlbnREZXRhaWxzSGVhZGVyQ3VzdG9taXphYmxlXScsXG59KVxuZXhwb3J0IGNsYXNzIENvbnNlbnREZXRhaWxzSGVhZGVyQ3VzdG9taXphYmxlRGlyZWN0aXZlIGV4dGVuZHMgQmJUZW1wbGF0ZTxcbiAgQ29uc2VudERldGFpbHNIZWFkZXJDb21wb25lbnQsXG4gIENvbnNlbnREZXRhaWxzSGVhZGVyQ3VzdG9taXphYmxlQ29udGV4dFxuPiB7fVxuIiwiPG5nLWNvbnRhaW5lclxuICBiYkNvbnNlbnREZXRhaWxzSGVhZGVyQ3VzdG9taXphYmxlXG4gIFtiYkhvc3RSZWZdPVwiaG9zdFJlZlwiXG4gIFtiYlRlbXBsYXRlQ29udGV4dF09XCJ7XG4gICAgdHBwOiB0cHAsXG4gICAgc3RhdHVzOiBzdGF0dXMsXG4gICAgZXhwaXJ5RGF0ZTogZXhwaXJ5RGF0ZVxuICB9XCI+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlXG4gIGJiQ29uc2VudERldGFpbHNIZWFkZXJDdXN0b21pemFibGVcbiAgbGV0LWhvc3RSZWZcbiAgbGV0LXRwcD1cImNvbnRleHQudHBwXCJcbiAgbGV0LXN0YXR1cz1cImNvbnRleHQuc3RhdHVzXCJcbiAgbGV0LWV4cGlyeURhdGU9XCJjb250ZXh0LmV4cGlyeURhdGVcIj5cbiAgPGRpdiBjbGFzcz1cImJiLWNvbnNlbnQtZGV0YWlscy1oZWFkZXIgYmItc3RhY2tcIj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItc3RhY2tfX2l0ZW1cIj5cbiAgICAgIDxiYi10aGlyZC1wYXJ0eS1wcm92aWRlci11aVxuICAgICAgICBbbmFtZV09XCJ0cHA/Lm5hbWVcIlxuICAgICAgICBbdXJsXT1cInRwcD8ud2Vic2l0ZVwiXG4gICAgICAgIFtpbWFnZV09XCJ0cHA/LmltYWdlVXJsXCJcbiAgICAgICAgW3ZlcmlmaWVkXT1cInRwcD8uaXNUcnVzdGVkXCJcbiAgICAgICAgW2NvbmRlbnNlZF09XCJ0cnVlXCI+XG4gICAgICA8L2JiLXRoaXJkLXBhcnR5LXByb3ZpZGVyLXVpPlxuICAgIDwvZGl2PlxuXG4gICAgPCEtLSBMYXJnZSBWaWV3cG9ydHMgLS0+XG4gICAgPGRpdiBkYXRhLXJvbGU9XCJzdGF0dXMtYmFkZ2UtbGFyZ2VcIiBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCI+XG4gICAgICA8YmItYmFkZ2UtdWlcbiAgICAgICAgZGF0YS1yb2xlPVwic3RhdHVzLWJhZGdlLWFjdGl2ZVwiXG4gICAgICAgIGkxOG4tdGV4dD1cIkFjdGl2ZXxDb25zZW50IHN0YXR1cyBhY3RpdmVAQGNvbnNlbnQtZGV0YWlscy5oZWFkZXIuYmFkZ2UuYWN0aXZlXCJcbiAgICAgICAgKm5nSWY9XCJzdGF0dXMgPT09IGhvc3RSZWYuU3RhdHVzLkFDVElWRVwiXG4gICAgICAgIGNvbG9yPVwic3VjY2Vzc1wiXG4gICAgICAgIHRleHQ9XCJBY3RpdmVcIj5cbiAgICAgIDwvYmItYmFkZ2UtdWk+XG4gICAgICA8YmItYmFkZ2UtdWlcbiAgICAgICAgZGF0YS1yb2xlPVwic3RhdHVzLWJhZGdlLWV4cGlyZWRcIlxuICAgICAgICBpMThuLXRleHQ9XCJFeHBpcmVkfENvbnNlbnQgc3RhdHVzIGV4cGlyZWRAQGNvbnNlbnQtZGV0YWlscy5oZWFkZXIuYmFkZ2UuZXhwaXJlZFwiXG4gICAgICAgICpuZ0lmPVwic3RhdHVzID09PSBob3N0UmVmLlN0YXR1cy5FWFBJUkVEXCJcbiAgICAgICAgY29sb3I9XCJzZWNvbmRhcnlcIlxuICAgICAgICB0ZXh0PVwiRXhwaXJlZFwiPlxuICAgICAgPC9iYi1iYWRnZS11aT5cbiAgICAgIDxiYi1iYWRnZS11aVxuICAgICAgICBkYXRhLXJvbGU9XCJzdGF0dXMtYmFkZ2UtcmV2b2tlZFwiXG4gICAgICAgIGkxOG4tdGV4dD1cIlJldm9rZWR8Q29uc2VudCBzdGF0dXMgcmV2b2tlZEBAY29uc2VudC1kZXRhaWxzLmhlYWRlci5iYWRnZS5yZXZva2VkXCJcbiAgICAgICAgKm5nSWY9XCJzdGF0dXMgPT09IGhvc3RSZWYuU3RhdHVzLlJFVk9LRURcIlxuICAgICAgICBjb2xvcj1cImRhbmdlclwiXG4gICAgICAgIHRleHQ9XCJSZXZva2VkXCI+XG4gICAgICA8L2JiLWJhZGdlLXVpPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cImJiLWNvbnNlbnQtZGV0YWlscy1oZWFkZXJfX3N0YXR1cy13cmFwcGVyIGJiLXN0YWNrX19pdGVtIGJiLXN0YWNrX19pdGVtLS1wdXNoLXJpZ2h0XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiYmItY29uc2VudC1kZXRhaWxzLWhlYWRlcl9fc3RhdHVzIGJiLXRleHQtYWxpZ24tcmlnaHRcIj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGkxOG49XCJFeHBpcmVkIG9ufENvbnNlbnQgaXMgZXhwaXJlZEBAY29uc2VudC1kZXRhaWxzLmhlYWRlci5oZWFkaW5nLmV4cGlyZWRPblwiXG4gICAgICAgICAgY2xhc3M9XCJiYi10ZXh0LWJvbGRcIlxuICAgICAgICAgICpuZ0lmPVwic3RhdHVzID09PSBob3N0UmVmLlN0YXR1cy5FWFBJUkVEXCI+XG4gICAgICAgICAgRXhwaXJlZCBvblxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGRhdGEtcm9sZT1cInRva2VuLWV4cGlyeS1sYWJlbC1hY3RpdmVcIlxuICAgICAgICAgIGkxOG49XCJFeHBpcnkgRGF0ZXxFeHBpcnkgRGF0ZSBvZiBDb25zZW50QEBjb25zZW50LWRldGFpbHMuaGVhZGVyLmhlYWRpbmcuZXhwaXJ5RGF0ZVwiXG4gICAgICAgICAgY2xhc3M9XCJiYi10ZXh0LWJvbGRcIlxuICAgICAgICAgICpuZ0lmPVwic3RhdHVzICE9PSBob3N0UmVmLlN0YXR1cy5FWFBJUkVEXCI+XG4gICAgICAgICAgRXhwaXJ5IGRhdGVcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgZGF0YS1yb2xlPVwiZXhwaXJ5LWRhdGVcIj5cbiAgICAgICAgICB7eyBleHBpcnlEYXRlIHwgYmJEYXRlOiAnYmJTaG9ydCcgfX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxidXR0b25cbiAgICAgICAgYmJCdXR0b25cbiAgICAgICAgKm5nSWY9XCJzdGF0dXMgPT09IGhvc3RSZWYuU3RhdHVzLkFDVElWRVwiXG4gICAgICAgIChjbGljayk9XCJob3N0UmVmLm9uUmV2b2tlQ29uc2VudCgpXCJcbiAgICAgICAgY29sb3I9XCJkYW5nZXJcIlxuICAgICAgICBkYXRhLXJvbGU9XCJyZXZva2UtY29uc2VudC1idXR0b25cIlxuICAgICAgICB0eXBlPVwic3VibWl0XCI+XG4gICAgICAgIDxzcGFuIGkxOG49XCJSZXZva2UgQ29uc2VudHxSZXZva2UgY29uc2VudCBidXR0b25AQGNvbnNlbnQtZGV0YWlscy5oZWFkZXIuYnV0dG9uLnJldm9rZS1jb25zZW50XCI+XG4gICAgICAgICAgUmV2b2tlIENvbnNlbnRcbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==