import { Component, Directive, Input } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Permission } from '../model/constants';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ConsentDetailsPermissionsListComponent {
    constructor() {
        /**
         * Component context
         */
        this.hostRef = this;
        /**
         * List of permissions
         */
        this.permissions = [];
        /**
         * Permission mapper
         */
        this.Permission = Permission;
    }
    /**
     * Check if permission contains provided permission
     * @param permission
     */
    hasPermission(permission) {
        return this.permissions.includes(permission);
    }
}
ConsentDetailsPermissionsListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsPermissionsListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ConsentDetailsPermissionsListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentDetailsPermissionsListComponent, selector: "bb-consent-details-permissions-list", inputs: { permissions: "permissions" }, ngImport: i0, template: "<ng-container bbConsentDetailsPermissionsListCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"permissions\">\n</ng-container>\n\n<ng-template bbConsentDetailsPermissionsListCustomizable let-hostRef let-permissions=\"context\">\n  <div\n    i18n=\"Permissions granted|Permissions granted heading@@consent-details.permissions.heading.permissions-granted\"\n    data-role=\"permissions-granted-label\"\n    class=\"bb-text-bold bb-block bb-block--sm\">\n    Permissions granted\n  </div>\n  <div class=\"bb-consent-details-permissions card\">\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadAccountsDetail)\">\n      <div\n        class=\"bb-text-bold\"\n        data-role=\"account-information-label\"\n        i18n=\"\n          Account Information|Account Information Permission\n          title@@consent-details.label.permission.ReadAccountsDetail.title\">\n        Account information\n      </div>\n      <div\n        class=\"bb-consent-details-permissions__details\"\n        i18n=\"\n          Account Information details|Account Information Permission\n          subtitle@@consent-details.label.permission.ReadAccountsDetail.subtitle\">\n        Name, number\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadBalances)\">\n      <div\n        class=\"bb-text-bold\"\n        data-role=\"account-balance-label\"\n        i18n=\"Account Balance|Account Balance Permission title@@consent-details.label.permission.ReadBalances.title\">\n        Account balance\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsDetail)\">\n      <div\n        class=\"bb-text-bold\"\n        data-role=\"transactions-label\"\n        i18n=\"\n          Transactions|Transaction Details Permission\n          title@@consent-details.label.permission.ReadTransactionsDetail.title\">\n        Transactions\n      </div>\n      <div\n        class=\"bb-consent-details-permissions__details\"\n        i18n=\"\n          Transactions details |Transaction Details Permission\n          subtitle@@consent-details.label.permission.ReadTransactionsDetail.subtitle\">\n        Category, amount, date, time, beneficiary details\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadBeneficiariesDetail)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"Beneficiaries|Beneficiaries title@@consent-details.label.permission.ReadBeneficiariesDetail.title\">\n        Beneficiaries details\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadDirectDebits)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"Direct Debits|Direct Debits Permission title@@consent-details.label.permission.ReadDirectDebits.title\">\n        Direct Debits\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadProducts)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"Products|Products Permission title@@consent-details.label.permission.ReadProducts.title\">\n        Products\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadStandingOrdersDetail)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"\n          Standing Orders|Standing Orders Permission\n          title@@consent-details.label.permission.ReadStandingOrdersDetail.title\">\n        Standing Orders\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsCredits)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"\n          Transactions Credits|Transactions Credits Permission\n          title@@consent-details.label.permission.ReadTransactionsCredits.title\">\n        Transactions Credits\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsDebits)\">\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"\n          Transactions Debits|Transactions Debits Permission\n          title@@consent-details.label.permission.ReadTransactionsDebits.title\">\n        Transactions Debits\n      </div>\n    </div>\n  </div>\n</ng-template>\n", directives: [{ type: i0.forwardRef(function () { return ConsentDetailsPermissionsListCustomizableDirective; }), selector: "[bbConsentDetailsPermissionsListCustomizable]" }, { type: i0.forwardRef(function () { return i1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsPermissionsListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-consent-details-permissions-list',
                    templateUrl: './consent-details-permissions-list.component.html',
                }]
        }], propDecorators: { permissions: [{
                type: Input
            }] } });
export class ConsentDetailsPermissionsListCustomizableDirective extends BbTemplate {
}
ConsentDetailsPermissionsListCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsPermissionsListCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ConsentDetailsPermissionsListCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: ConsentDetailsPermissionsListCustomizableDirective, selector: "[bbConsentDetailsPermissionsListCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentDetailsPermissionsListCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbConsentDetailsPermissionsListCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC1kZXRhaWxzLXBlcm1pc3Npb25zLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jb25zZW50LWRldGFpbHMtd2lkZ2V0LWFuZy9zcmMvY29uc2VudC1kZXRhaWxzLXdpZGdldC9jb25zZW50LWRldGFpbHMtcGVybWlzc2lvbnMtbGlzdC9jb25zZW50LWRldGFpbHMtcGVybWlzc2lvbnMtbGlzdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbnNlbnQtZGV0YWlscy13aWRnZXQtYW5nL3NyYy9jb25zZW50LWRldGFpbHMtd2lkZ2V0L2NvbnNlbnQtZGV0YWlscy1wZXJtaXNzaW9ucy1saXN0L2NvbnNlbnQtZGV0YWlscy1wZXJtaXNzaW9ucy1saXN0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFM0QsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7QUFNaEQsTUFBTSxPQUFPLHNDQUFzQztJQUpuRDtRQUtFOztXQUVHO1FBQ00sWUFBTyxHQUEyQyxJQUFJLENBQUM7UUFDaEU7O1dBRUc7UUFDTSxnQkFBVyxHQUFhLEVBQUUsQ0FBQztRQUNwQzs7V0FFRztRQUNNLGVBQVUsR0FBRyxVQUFVLENBQUM7S0FRbEM7SUFQQzs7O09BR0c7SUFDSCxhQUFhLENBQUMsVUFBa0I7UUFDOUIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUMvQyxDQUFDOztvSUFuQlUsc0NBQXNDO3dIQUF0QyxzQ0FBc0MsbUhDVG5ELG16SUErR0EsMEREN0VhLGtEQUFrRDs0RkF6QmxELHNDQUFzQztrQkFKbEQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUscUNBQXFDO29CQUMvQyxXQUFXLEVBQUUsbURBQW1EO2lCQUNqRTs4QkFTVSxXQUFXO3NCQUFuQixLQUFLOztBQWlCUixNQUFNLE9BQU8sa0RBQW1ELFNBQVEsVUFHdkU7O2dKQUhZLGtEQUFrRDtvSUFBbEQsa0RBQWtEOzRGQUFsRCxrREFBa0Q7a0JBSDlELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLCtDQUErQztpQkFDMUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJiVGVtcGxhdGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG5cbmltcG9ydCB7IFBlcm1pc3Npb24gfSBmcm9tICcuLi9tb2RlbC9jb25zdGFudHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1jb25zZW50LWRldGFpbHMtcGVybWlzc2lvbnMtbGlzdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25zZW50LWRldGFpbHMtcGVybWlzc2lvbnMtbGlzdC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIENvbnNlbnREZXRhaWxzUGVybWlzc2lvbnNMaXN0Q29tcG9uZW50IHtcbiAgLyoqXG4gICAqIENvbXBvbmVudCBjb250ZXh0XG4gICAqL1xuICByZWFkb25seSBob3N0UmVmOiBDb25zZW50RGV0YWlsc1Blcm1pc3Npb25zTGlzdENvbXBvbmVudCA9IHRoaXM7XG4gIC8qKlxuICAgKiBMaXN0IG9mIHBlcm1pc3Npb25zXG4gICAqL1xuICBASW5wdXQoKSBwZXJtaXNzaW9uczogc3RyaW5nW10gPSBbXTtcbiAgLyoqXG4gICAqIFBlcm1pc3Npb24gbWFwcGVyXG4gICAqL1xuICByZWFkb25seSBQZXJtaXNzaW9uID0gUGVybWlzc2lvbjtcbiAgLyoqXG4gICAqIENoZWNrIGlmIHBlcm1pc3Npb24gY29udGFpbnMgcHJvdmlkZWQgcGVybWlzc2lvblxuICAgKiBAcGFyYW0gcGVybWlzc2lvblxuICAgKi9cbiAgaGFzUGVybWlzc2lvbihwZXJtaXNzaW9uOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wZXJtaXNzaW9ucy5pbmNsdWRlcyhwZXJtaXNzaW9uKTtcbiAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJDb25zZW50RGV0YWlsc1Blcm1pc3Npb25zTGlzdEN1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBDb25zZW50RGV0YWlsc1Blcm1pc3Npb25zTGlzdEN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIENvbnNlbnREZXRhaWxzUGVybWlzc2lvbnNMaXN0Q29tcG9uZW50LFxuICBzdHJpbmdbXVxuPiB7fVxuIiwiPG5nLWNvbnRhaW5lciBiYkNvbnNlbnREZXRhaWxzUGVybWlzc2lvbnNMaXN0Q3VzdG9taXphYmxlIFtiYkhvc3RSZWZdPVwiaG9zdFJlZlwiIFtiYlRlbXBsYXRlQ29udGV4dF09XCJwZXJtaXNzaW9uc1wiPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSBiYkNvbnNlbnREZXRhaWxzUGVybWlzc2lvbnNMaXN0Q3VzdG9taXphYmxlIGxldC1ob3N0UmVmIGxldC1wZXJtaXNzaW9ucz1cImNvbnRleHRcIj5cbiAgPGRpdlxuICAgIGkxOG49XCJQZXJtaXNzaW9ucyBncmFudGVkfFBlcm1pc3Npb25zIGdyYW50ZWQgaGVhZGluZ0BAY29uc2VudC1kZXRhaWxzLnBlcm1pc3Npb25zLmhlYWRpbmcucGVybWlzc2lvbnMtZ3JhbnRlZFwiXG4gICAgZGF0YS1yb2xlPVwicGVybWlzc2lvbnMtZ3JhbnRlZC1sYWJlbFwiXG4gICAgY2xhc3M9XCJiYi10ZXh0LWJvbGQgYmItYmxvY2sgYmItYmxvY2stLXNtXCI+XG4gICAgUGVybWlzc2lvbnMgZ3JhbnRlZFxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImJiLWNvbnNlbnQtZGV0YWlscy1wZXJtaXNzaW9ucyBjYXJkXCI+XG4gICAgPGRpdiBjbGFzcz1cImNhcmQtc2VjdGlvblwiICpuZ0lmPVwiaG9zdFJlZi5oYXNQZXJtaXNzaW9uKGhvc3RSZWYuUGVybWlzc2lvbi5SZWFkQWNjb3VudHNEZXRhaWwpXCI+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiYmItdGV4dC1ib2xkXCJcbiAgICAgICAgZGF0YS1yb2xlPVwiYWNjb3VudC1pbmZvcm1hdGlvbi1sYWJlbFwiXG4gICAgICAgIGkxOG49XCJcbiAgICAgICAgICBBY2NvdW50IEluZm9ybWF0aW9ufEFjY291bnQgSW5mb3JtYXRpb24gUGVybWlzc2lvblxuICAgICAgICAgIHRpdGxlQEBjb25zZW50LWRldGFpbHMubGFiZWwucGVybWlzc2lvbi5SZWFkQWNjb3VudHNEZXRhaWwudGl0bGVcIj5cbiAgICAgICAgQWNjb3VudCBpbmZvcm1hdGlvblxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiYmItY29uc2VudC1kZXRhaWxzLXBlcm1pc3Npb25zX19kZXRhaWxzXCJcbiAgICAgICAgaTE4bj1cIlxuICAgICAgICAgIEFjY291bnQgSW5mb3JtYXRpb24gZGV0YWlsc3xBY2NvdW50IEluZm9ybWF0aW9uIFBlcm1pc3Npb25cbiAgICAgICAgICBzdWJ0aXRsZUBAY29uc2VudC1kZXRhaWxzLmxhYmVsLnBlcm1pc3Npb24uUmVhZEFjY291bnRzRGV0YWlsLnN1YnRpdGxlXCI+XG4gICAgICAgIE5hbWUsIG51bWJlclxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiY2FyZC1zZWN0aW9uXCIgKm5nSWY9XCJob3N0UmVmLmhhc1Blcm1pc3Npb24oaG9zdFJlZi5QZXJtaXNzaW9uLlJlYWRCYWxhbmNlcylcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJiYi10ZXh0LWJvbGRcIlxuICAgICAgICBkYXRhLXJvbGU9XCJhY2NvdW50LWJhbGFuY2UtbGFiZWxcIlxuICAgICAgICBpMThuPVwiQWNjb3VudCBCYWxhbmNlfEFjY291bnQgQmFsYW5jZSBQZXJtaXNzaW9uIHRpdGxlQEBjb25zZW50LWRldGFpbHMubGFiZWwucGVybWlzc2lvbi5SZWFkQmFsYW5jZXMudGl0bGVcIj5cbiAgICAgICAgQWNjb3VudCBiYWxhbmNlXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLXNlY3Rpb25cIiAqbmdJZj1cImhvc3RSZWYuaGFzUGVybWlzc2lvbihob3N0UmVmLlBlcm1pc3Npb24uUmVhZFRyYW5zYWN0aW9uc0RldGFpbClcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJiYi10ZXh0LWJvbGRcIlxuICAgICAgICBkYXRhLXJvbGU9XCJ0cmFuc2FjdGlvbnMtbGFiZWxcIlxuICAgICAgICBpMThuPVwiXG4gICAgICAgICAgVHJhbnNhY3Rpb25zfFRyYW5zYWN0aW9uIERldGFpbHMgUGVybWlzc2lvblxuICAgICAgICAgIHRpdGxlQEBjb25zZW50LWRldGFpbHMubGFiZWwucGVybWlzc2lvbi5SZWFkVHJhbnNhY3Rpb25zRGV0YWlsLnRpdGxlXCI+XG4gICAgICAgIFRyYW5zYWN0aW9uc1xuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiYmItY29uc2VudC1kZXRhaWxzLXBlcm1pc3Npb25zX19kZXRhaWxzXCJcbiAgICAgICAgaTE4bj1cIlxuICAgICAgICAgIFRyYW5zYWN0aW9ucyBkZXRhaWxzIHxUcmFuc2FjdGlvbiBEZXRhaWxzIFBlcm1pc3Npb25cbiAgICAgICAgICBzdWJ0aXRsZUBAY29uc2VudC1kZXRhaWxzLmxhYmVsLnBlcm1pc3Npb24uUmVhZFRyYW5zYWN0aW9uc0RldGFpbC5zdWJ0aXRsZVwiPlxuICAgICAgICBDYXRlZ29yeSwgYW1vdW50LCBkYXRlLCB0aW1lLCBiZW5lZmljaWFyeSBkZXRhaWxzXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLXNlY3Rpb25cIiAqbmdJZj1cImhvc3RSZWYuaGFzUGVybWlzc2lvbihob3N0UmVmLlBlcm1pc3Npb24uUmVhZEJlbmVmaWNpYXJpZXNEZXRhaWwpXCI+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiYmItdGV4dC1ib2xkXCJcbiAgICAgICAgaTE4bj1cIkJlbmVmaWNpYXJpZXN8QmVuZWZpY2lhcmllcyB0aXRsZUBAY29uc2VudC1kZXRhaWxzLmxhYmVsLnBlcm1pc3Npb24uUmVhZEJlbmVmaWNpYXJpZXNEZXRhaWwudGl0bGVcIj5cbiAgICAgICAgQmVuZWZpY2lhcmllcyBkZXRhaWxzXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLXNlY3Rpb25cIiAqbmdJZj1cImhvc3RSZWYuaGFzUGVybWlzc2lvbihob3N0UmVmLlBlcm1pc3Npb24uUmVhZERpcmVjdERlYml0cylcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJiYi10ZXh0LWJvbGRcIlxuICAgICAgICBpMThuPVwiRGlyZWN0IERlYml0c3xEaXJlY3QgRGViaXRzIFBlcm1pc3Npb24gdGl0bGVAQGNvbnNlbnQtZGV0YWlscy5sYWJlbC5wZXJtaXNzaW9uLlJlYWREaXJlY3REZWJpdHMudGl0bGVcIj5cbiAgICAgICAgRGlyZWN0IERlYml0c1xuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiY2FyZC1zZWN0aW9uXCIgKm5nSWY9XCJob3N0UmVmLmhhc1Blcm1pc3Npb24oaG9zdFJlZi5QZXJtaXNzaW9uLlJlYWRQcm9kdWN0cylcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJiYi10ZXh0LWJvbGRcIlxuICAgICAgICBpMThuPVwiUHJvZHVjdHN8UHJvZHVjdHMgUGVybWlzc2lvbiB0aXRsZUBAY29uc2VudC1kZXRhaWxzLmxhYmVsLnBlcm1pc3Npb24uUmVhZFByb2R1Y3RzLnRpdGxlXCI+XG4gICAgICAgIFByb2R1Y3RzXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLXNlY3Rpb25cIiAqbmdJZj1cImhvc3RSZWYuaGFzUGVybWlzc2lvbihob3N0UmVmLlBlcm1pc3Npb24uUmVhZFN0YW5kaW5nT3JkZXJzRGV0YWlsKVwiPlxuICAgICAgPGRpdlxuICAgICAgICBjbGFzcz1cImJiLXRleHQtYm9sZFwiXG4gICAgICAgIGkxOG49XCJcbiAgICAgICAgICBTdGFuZGluZyBPcmRlcnN8U3RhbmRpbmcgT3JkZXJzIFBlcm1pc3Npb25cbiAgICAgICAgICB0aXRsZUBAY29uc2VudC1kZXRhaWxzLmxhYmVsLnBlcm1pc3Npb24uUmVhZFN0YW5kaW5nT3JkZXJzRGV0YWlsLnRpdGxlXCI+XG4gICAgICAgIFN0YW5kaW5nIE9yZGVyc1xuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiY2FyZC1zZWN0aW9uXCIgKm5nSWY9XCJob3N0UmVmLmhhc1Blcm1pc3Npb24oaG9zdFJlZi5QZXJtaXNzaW9uLlJlYWRUcmFuc2FjdGlvbnNDcmVkaXRzKVwiPlxuICAgICAgPGRpdlxuICAgICAgICBjbGFzcz1cImJiLXRleHQtYm9sZFwiXG4gICAgICAgIGkxOG49XCJcbiAgICAgICAgICBUcmFuc2FjdGlvbnMgQ3JlZGl0c3xUcmFuc2FjdGlvbnMgQ3JlZGl0cyBQZXJtaXNzaW9uXG4gICAgICAgICAgdGl0bGVAQGNvbnNlbnQtZGV0YWlscy5sYWJlbC5wZXJtaXNzaW9uLlJlYWRUcmFuc2FjdGlvbnNDcmVkaXRzLnRpdGxlXCI+XG4gICAgICAgIFRyYW5zYWN0aW9ucyBDcmVkaXRzXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLXNlY3Rpb25cIiAqbmdJZj1cImhvc3RSZWYuaGFzUGVybWlzc2lvbihob3N0UmVmLlBlcm1pc3Npb24uUmVhZFRyYW5zYWN0aW9uc0RlYml0cylcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJiYi10ZXh0LWJvbGRcIlxuICAgICAgICBpMThuPVwiXG4gICAgICAgICAgVHJhbnNhY3Rpb25zIERlYml0c3xUcmFuc2FjdGlvbnMgRGViaXRzIFBlcm1pc3Npb25cbiAgICAgICAgICB0aXRsZUBAY29uc2VudC1kZXRhaWxzLmxhYmVsLnBlcm1pc3Npb24uUmVhZFRyYW5zYWN0aW9uc0RlYml0cy50aXRsZVwiPlxuICAgICAgICBUcmFuc2FjdGlvbnMgRGViaXRzXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuIl19