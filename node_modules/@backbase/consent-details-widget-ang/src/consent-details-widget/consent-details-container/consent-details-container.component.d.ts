import { TemplateRef, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import { ConsentDetailsService } from '../consent-details.service';
import { ConsentDetails, ConsentDetailsContainerCustomizableContext } from '../model/types';
import { Status } from '../model/constants';
import { ConsentDetailsError } from '../model/consent-details-error';
import * as i0 from "@angular/core";
export declare class ConsentDetailsContainerComponent implements OnInit {
    private readonly detailsService;
    private readonly route;
    /**
     * Component context
     */
    readonly hostRef: ConsentDetailsContainerComponent;
    /**
     * Notification error template reference
     */
    notificationErrorTemplate: TemplateRef<any> | string;
    /**
     * Notification success template reference
     */
    notificationSuccessTemplate: TemplateRef<any> | string;
    /**
     * Stream of loading spinner visibility flag
     */
    readonly loading: Observable<boolean>;
    /**
     * Stream of consent details request errors
     */
    readonly error: Observable<ConsentDetailsError | undefined>;
    /**
     * Stream of consent ID
     */
    readonly consentId: Observable<string>;
    /**
     * Stream of consent details
     */
    readonly consentDetails: Observable<ConsentDetails | undefined>;
    /**
     * Consent reject modal visibility flag
     */
    isModalOpen: boolean;
    /**
     * Consent status enumeration
     */
    readonly Status: typeof Status;
    ngOnInit(): void;
    /**
     * Open consent reject modal
     */
    openRejectConsentModal(): void;
    /**
     * Close consent reject modal
     */
    dismissRejectConsentModal(): void;
    /**
     * Revoke consent
     */
    revokeConsent(): void;
    private getRouteParam;
    constructor(detailsService: ConsentDetailsService, route: ActivatedRoute);
    static ɵfac: i0.ɵɵFactoryDeclaration<ConsentDetailsContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ConsentDetailsContainerComponent, "bb-consent-details-container", never, {}, {}, never, never>;
}
export declare class ConsentDetailsContainerCustomizableDirective extends BbTemplate<ConsentDetailsContainerComponent, ConsentDetailsContainerCustomizableContext> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ConsentDetailsContainerCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ConsentDetailsContainerCustomizableDirective, "[bbConsentDetailsContainerCustomizable]", never, {}, {}, never>;
}
