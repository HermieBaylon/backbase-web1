import { TemplateRef } from '@angular/core';
import { ConsentsHttpService } from '@backbase/data-ang/consent';
import { BehaviorSubject, Observable } from 'rxjs';
import { NotificationService } from '@backbase/ui-ang/notification';
import { ConsentDetails } from './model/types';
import { ConsentDetailsError } from './model/consent-details-error';
import * as i0 from "@angular/core";
export declare class ConsentDetailsService {
    private readonly consentDataService;
    private readonly notification;
    private readonly consentId;
    private readonly revokingComplete;
    readonly loading: BehaviorSubject<boolean>;
    readonly error: BehaviorSubject<ConsentDetailsError | undefined>;
    readonly consentDetails: Observable<ConsentDetails | undefined>;
    constructor(consentDataService: ConsentsHttpService, notification: NotificationService);
    getConsentFrom(consentId: Observable<string>): void;
    requestRevoke(errorTemplateRef: TemplateRef<any> | string, successTemplateRef: TemplateRef<any> | string): Observable<any | undefined>;
    private getConsentDetailsById;
    private revokeConsentById;
    private showNotification;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConsentDetailsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ConsentDetailsService>;
}
