(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@backbase/foundation-ang/core'), require('@angular/router'), require('@backbase/billpay-journeys-common'), require('rxjs'), require('rxjs/operators'), require('@backbase/ui-ang/notification'), require('@backbase/ui-ang/header'), require('@ng-bootstrap/ng-bootstrap'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/amount'), require('@backbase/ui-ang/dropdown-menu'), require('@backbase/ui-ang/keyboard-click-directive'), require('@backbase/ui-ang/button'), require('@backbase/ui-ang/date-pipe'), require('@backbase/ui-ang/loading-indicator'), require('@backbase/ui-ang/empty-state'), require('@backbase/data-ang/billpay'), require('@backbase/ui-ang/phone-number-format-pipe'), require('@backbase/ui-ang/collapsible'), require('@backbase/ui-ang/input-radio-group'), require('@backbase/ui-ang/input-validation-message'), require('@backbase/ui-ang/modal'), require('@angular/forms'), require('@backbase/ui-ang/alert'), require('@backbase/ui-ang/input-text'), require('@backbase/ui-ang/input-password'), require('@angular/platform-browser'), require('@backbase/ui-ang/fieldset'), require('@backbase/ui-ang/search-box')) :
    typeof define === 'function' && define.amd ? define('@backbase/manage-payees-journey-ang', ['exports', '@angular/core', '@angular/common', '@backbase/foundation-ang/core', '@angular/router', '@backbase/billpay-journeys-common', 'rxjs', 'rxjs/operators', '@backbase/ui-ang/notification', '@backbase/ui-ang/header', '@ng-bootstrap/ng-bootstrap', '@backbase/ui-ang/icon', '@backbase/ui-ang/amount', '@backbase/ui-ang/dropdown-menu', '@backbase/ui-ang/keyboard-click-directive', '@backbase/ui-ang/button', '@backbase/ui-ang/date-pipe', '@backbase/ui-ang/loading-indicator', '@backbase/ui-ang/empty-state', '@backbase/data-ang/billpay', '@backbase/ui-ang/phone-number-format-pipe', '@backbase/ui-ang/collapsible', '@backbase/ui-ang/input-radio-group', '@backbase/ui-ang/input-validation-message', '@backbase/ui-ang/modal', '@angular/forms', '@backbase/ui-ang/alert', '@backbase/ui-ang/input-text', '@backbase/ui-ang/input-password', '@angular/platform-browser', '@backbase/ui-ang/fieldset', '@backbase/ui-ang/search-box'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["manage-payees-journey-ang"] = {}), global.ng.core, global.ng.common, global.i1$7, global.ng.router, global.i4, global.rxjs, global.rxjs.operators, global.i5$2, global.i2$1, global.i2, global.i4$1, global.i5, global.i6, global.i7, global.i11, global.i10, global.i1$1, global.i10$1, global.i1$2, global.i1$3, global.i2$2, global.i2$3, global.i3, global.i1$4, global.ng.forms, global.i3$1, global.i4$2, global.i5$3, global.ng.platformBrowser, global.i2$4, global.i2$5));
})(this, (function (exports, i0, i5$1, i1$7, i1, i4, rxjs, operators, i5$2, i2$1, i2, i4$1, i5, i6, i7, i11, i10, i1$1, i10$1, i1$2, i1$3, i2$2, i2$3, i3, i1$4, i1$5, i3$1, i4$2, i5$3, i1$6, i2$4, i2$5) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i5__namespace$1 = /*#__PURE__*/_interopNamespace(i5$1);
    var i1__namespace$7 = /*#__PURE__*/_interopNamespace(i1$7);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace$2 = /*#__PURE__*/_interopNamespace(i5$2);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i11__namespace = /*#__PURE__*/_interopNamespace(i11);
    var i10__namespace = /*#__PURE__*/_interopNamespace(i10);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i10__namespace$1 = /*#__PURE__*/_interopNamespace(i10$1);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2$3);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1$4);
    var i1__namespace$5 = /*#__PURE__*/_interopNamespace(i1$5);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i4__namespace$2 = /*#__PURE__*/_interopNamespace(i4$2);
    var i5__namespace$3 = /*#__PURE__*/_interopNamespace(i5$3);
    var i1__namespace$6 = /*#__PURE__*/_interopNamespace(i1$6);
    var i2__namespace$4 = /*#__PURE__*/_interopNamespace(i2$4);
    var i2__namespace$5 = /*#__PURE__*/_interopNamespace(i2$5);

    var ManagePayeesJourneyConfigurationToken = new i0.InjectionToken('ManagePayeesJourneyConfigurationToken injection token');
    var configDefaults = {
        notificationDismissTime: 5000,
        multipleBillsMode: false,
    };
    var ManagePayeesJourneyConfigService = /** @class */ (function () {
        function ManagePayeesJourneyConfigService(config) {
            config = config || {};
            this._config = Object.assign(Object.assign({}, configDefaults), config);
        }
        Object.defineProperty(ManagePayeesJourneyConfigService.prototype, "defaults", {
            get: function () {
                return configDefaults;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ManagePayeesJourneyConfigService.prototype, "notificationDismissTime", {
            get: function () {
                return this._config.notificationDismissTime;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ManagePayeesJourneyConfigService.prototype, "multipleBillsMode", {
            get: function () {
                return this._config.multipleBillsMode;
            },
            enumerable: false,
            configurable: true
        });
        return ManagePayeesJourneyConfigService;
    }());
    ManagePayeesJourneyConfigService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyConfigService, deps: [{ token: ManagePayeesJourneyConfigurationToken, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ManagePayeesJourneyConfigService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyConfigService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyConfigService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [ManagePayeesJourneyConfigurationToken]
                        }] }];
        } });

    var CommunicationService = /** @class */ (function () {
        function CommunicationService() {
        }
        return CommunicationService;
    }());

    var ManagePayeesNavigationService = /** @class */ (function () {
        function ManagePayeesNavigationService(router, route, config, communicationService) {
            this.router = router;
            this.route = route;
            this.config = config;
            this.communicationService = communicationService;
            this.defaultRelative = { relativeTo: this.route };
        }
        ManagePayeesNavigationService.prototype.navigateToPayeeList = function (extras) {
            var _a;
            if (this.config.multipleBillsMode) {
                (_a = this.communicationService) === null || _a === void 0 ? void 0 : _a.navigateToMultiplePaymentsForm();
            }
            else {
                this.router.navigate(['./'], extras || this.defaultRelative);
            }
        };
        ManagePayeesNavigationService.prototype.navigateToSearch = function (extras) {
            this.router.navigate(['payees'], extras || this.defaultRelative);
        };
        ManagePayeesNavigationService.prototype.navigateToManualPayeeForm = function (extras) {
            this.router.navigate(['payees/manual'], extras || this.defaultRelative);
        };
        ManagePayeesNavigationService.prototype.navigateToManualPayeeReview = function (extras) {
            this.router.navigate(['payees/manual/review'], extras || this.defaultRelative);
        };
        ManagePayeesNavigationService.prototype.navigateToEditManualPayeeForm = function (id, extras) {
            this.router.navigate(['payees/manual', 'edit', id], extras || this.defaultRelative);
        };
        ManagePayeesNavigationService.prototype.navigateToEditManualReview = function (id, extras) {
            this.router.navigate(['payees/manual/edit', id, 'review'], extras || this.defaultRelative);
        };
        ManagePayeesNavigationService.prototype.navigateToElectronicPayeeForm = function (id, extras) {
            this.router.navigate(['payees/electronic', id], Object.assign(Object.assign({}, this.defaultRelative), extras));
        };
        ManagePayeesNavigationService.prototype.navigateToElectronicPayeeReview = function (id, extras) {
            this.router.navigate(['payees/electronic', id, 'review'], Object.assign(Object.assign({}, this.defaultRelative), extras));
        };
        ManagePayeesNavigationService.prototype.navigateToEditElectronicPayeeForm = function (id, extras) {
            this.router.navigate(['payees/electronic', 'edit', id], extras || this.defaultRelative);
        };
        ManagePayeesNavigationService.prototype.navigateToEditElectronicPayeeReview = function (id, extras) {
            this.router.navigate(['payees/electronic', 'edit', id, 'review'], extras || this.defaultRelative);
        };
        ManagePayeesNavigationService.prototype.navigateToPayeeSummary = function (payeeID, extras) {
            this.router.navigate(['payee-summary', { payeeID: payeeID }], extras || this.defaultRelative);
        };
        ManagePayeesNavigationService.prototype.navigateToPayveris = function (payeeID, extras) {
            this.router.navigate(['ebills', { payeeID: payeeID }], extras || this.defaultRelative);
        };
        // External Navigations
        ManagePayeesNavigationService.prototype.navigateToRecurringPayment = function (id) {
            var _a;
            (_a = this.communicationService) === null || _a === void 0 ? void 0 : _a.navigateToRecurringPayment(id);
        };
        ManagePayeesNavigationService.prototype.navigateToOneOffPayment = function (id) {
            var _a;
            (_a = this.communicationService) === null || _a === void 0 ? void 0 : _a.navigateToOneOffPayment(id);
        };
        ManagePayeesNavigationService.prototype.navigateToPendingPayments = function () {
            var _a;
            (_a = this.communicationService) === null || _a === void 0 ? void 0 : _a.navigateToPaymentsList();
        };
        return ManagePayeesNavigationService;
    }());
    ManagePayeesNavigationService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesNavigationService, deps: [{ token: i1__namespace.Router }, { token: i1__namespace.ActivatedRoute }, { token: ManagePayeesJourneyConfigService }, { token: CommunicationService, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ManagePayeesNavigationService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesNavigationService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesNavigationService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace.Router }, { type: i1__namespace.ActivatedRoute }, { type: ManagePayeesJourneyConfigService }, { type: CommunicationService, decorators: [{
                            type: i0.Optional
                        }] }];
        } });

    var ManagePayeesJourneyComponent = /** @class */ (function () {
        function ManagePayeesJourneyComponent() {
        }
        return ManagePayeesJourneyComponent;
    }());
    ManagePayeesJourneyComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManagePayeesJourneyComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManagePayeesJourneyComponent, selector: "bb-manage-payees-journey", providers: [ManagePayeesNavigationService], ngImport: i0__namespace, template: "<router-outlet></router-outlet>", isInline: true, directives: [{ type: i1__namespace.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-manage-payees-journey',
                        template: "<router-outlet></router-outlet>",
                        providers: [ManagePayeesNavigationService],
                    }]
            }] });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var BillpayPayeeSummaryItemComponent = /** @class */ (function (_super) {
        __extends(BillpayPayeeSummaryItemComponent, _super);
        function BillpayPayeeSummaryItemComponent(payeeDataService, ngbDropdownConfig, navigationService) {
            var _this = _super.call(this, payeeDataService, ngbDropdownConfig) || this;
            _this.payeeDataService = payeeDataService;
            _this.ngbDropdownConfig = ngbDropdownConfig;
            _this.navigationService = navigationService;
            return _this;
        }
        BillpayPayeeSummaryItemComponent.prototype.handlePayPayee = function (type) {
            if (!this.payeeSummary)
                return;
            if (type === i4.RECURRING_PAYMENT) {
                this.navigationService.navigateToRecurringPayment(this.payeeSummary.id);
            }
            else {
                this.navigationService.navigateToOneOffPayment(this.payeeSummary.id);
            }
        };
        BillpayPayeeSummaryItemComponent.prototype.handleEditPayee = function () {
            var _a, _b;
            if (this.payeeSummary && !((_a = this.payeeSummary) === null || _a === void 0 ? void 0 : _a.electronic)) {
                this.navigationService.navigateToEditManualPayeeForm(this.payeeSummary.id);
            }
            else if ((_b = this.payeeSummary) === null || _b === void 0 ? void 0 : _b.electronic) {
                this.navigationService.navigateToEditElectronicPayeeForm(this.payeeSummary.id);
            }
        };
        BillpayPayeeSummaryItemComponent.prototype.handleViewSummary = function () {
            if (this.payeeSummary) {
                this.navigationService.navigateToPayeeSummary(this.payeeSummary.id);
            }
        };
        BillpayPayeeSummaryItemComponent.prototype.handleGetEbills = function () {
            if (this.payeeSummary) {
                this.navigationService.navigateToPayveris(this.payeeSummary.id);
            }
        };
        return BillpayPayeeSummaryItemComponent;
    }(i4.BillpayPayeeSummaryItemBaseComponent));
    BillpayPayeeSummaryItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeSummaryItemComponent, deps: [{ token: i4__namespace.BillpayPayeeDataService }, { token: i2__namespace.NgbDropdownConfig }, { token: ManagePayeesNavigationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayeeSummaryItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayeeSummaryItemComponent, selector: "bb-billpay-payee-summary-item", providers: [ManagePayeesNavigationService], usesInheritance: true, ngImport: i0__namespace, template: "<div class=\"bb-stack bb-stack--wrap\">\n  <div class=\"bb-stack__item bb-stack__item--fill\">\n    <a\n      attr.aria-describedBy=\"{{\n        [\n          ebillRetrieveErrorId,\n          noEbillsDueId,\n          ebillsAvailableId,\n          recurringPaymentScheduledIdId,\n          ebillPaymentScheduledId,\n          ebillDueOnId,\n          ebillSupportErrorId,\n          ebillUserActionErrorId,\n          ebillUnknownErrorId,\n          payeeAmountId\n        ].join(' ')\n      }}\"\n      (bbKeyboardClick)=\"handleViewSummary()\"\n      class=\"bb-text-bold\"\n      tabindex=\"0\"\n      role=\"button\"\n      style=\"cursor: pointer\"\n      [attr.aria-label]=\"'view payee summary for ' + payeeName\"\n      data-role=\"payee-name\"\n      >{{ payeeName }}</a\n    >\n\n    <div *ngIf=\"isLatestEbillPaid\" class=\"bb-stack bb-stack--align-top\">\n      <bb-icon-ui\n        class=\"bb-stack__item bb-stack__item--spacing-none\"\n        data-role=\"ebill-payment-icon\"\n        name=\"savings-accounts\"\n        color=\"secondary\"\n      ></bb-icon-ui>\n      <span\n        id=\"{{ ebillPaymentScheduledId }}\"\n        class=\"bb-stack__item bb-text-support\"\n        data-role=\"ebill-payment-label\"\n        i18n=\"\n          eBill payment scheduled note|Text for the information that an eBill payment is\n          scheduled@@bb-billpay-payee-summary-item.note.eBill-payment-scheduled\"\n        >eBill payment scheduled</span\n      >\n    </div>\n\n    <div *ngIf=\"areEbillsDue\" class=\"bb-stack\">\n      <bb-icon-ui\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n        data-role=\"receipt-icon\"\n        size=\"sm\"\n        name=\"receipt\"\n        color=\"secondary\"\n      ></bb-icon-ui>\n      <span\n        id=\"{{ ebillDueOnId }}\"\n        class=\"bb-stack__item bb-subtitle bb-text-support\"\n        data-role=\"due-date-label\"\n        *ngIf=\"payeeSummary?.ebill?.latestBill?.paymentDate as ebillPaymentDate\"\n        i18n=\"Ebill due note|Text for the information about the due eBill@@bb-billpay-payee-summary-item.note.ebill-due\"\n        >eBill due on {{ ebillPaymentDate | bbDate: 'MMM d' }}</span\n      >\n    </div>\n\n    <div *ngIf=\"areEbillsInErrorState\" class=\"bb-stack bb-stack--wrap bb-stack--align-top\">\n      <ng-container *ngIf=\"isEbillsErrorUpdateCredentials\">\n        <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui\n              class=\"bb-stack__item bb-stack__item--spacing-sm\"\n              data-role=\"ebills-error-icon\"\n              size=\"sm\"\n              name=\"error-outline\"\n              color=\"danger\"\n            ></bb-icon-ui>\n            <div\n              id=\"{{ ebillRetrieveErrorId }}\"\n              class=\"bb-stack__item bb-subtitle bb-text-danger\"\n              data-role=\"ebills-error-cannot-be-retrieved-message\"\n              i18n=\"\n                Ebills cannot be retrieved error|Error text to display when the eBills cannot be retrieved due to\n                invalid login credentials@@bb-billpay-payee-summary-item.ebill-error.ebills-cannot-be-retrieved\"\n            >\n              eBills cannot be retrieved.\n            </div>\n          </div>\n        </div>\n        <a\n          class=\"bb-stack__item\"\n          (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n          tabindex=\"0\"\n          role=\"button\"\n          class=\"bb-stack__item bb-subtitle\"\n          style=\"cursor: pointer\"\n          i18n=\"\n            Ebills update login credentials link|Button text to display for updating login credentials for the\n            payee@@bb-billpay-payee-summary-item.ebill-link.update-login-credentials\"\n          attr.aria-label=\"Update login credentials for {{ payeeName }}\"\n          i18n-attr.aria-label=\"\n            Ebills update login credentials link aria label|Aria label for updating login credentials for the\n            payee@@bb-billpay-payee-summary-item.ebill-link.aria-label.update-login-credentials\"\n          data-role=\"ebills-update-login-credentials-button\"\n          >Update login credentials\n        </a>\n      </ng-container>\n\n      <ng-container *ngIf=\"isEbillsErrorNotSupported\">\n        <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui\n              class=\"bb-stack__item bb-stack__item--spacing-sm\"\n              data-role=\"ebills-error-icon\"\n              size=\"sm\"\n              name=\"error-outline\"\n              color=\"danger\"\n            ></bb-icon-ui>\n            <div\n              id=\"{{ ebillSupportErrorId }}\"\n              class=\"bb-stack__item bb-subtitle bb-text-danger\"\n              data-role=\"ebills-error-no-longer-supported-message\"\n              i18n=\"\n                Biller no longer supports ebills error|Error text to display when the payee no longer supports\n                eBills@@bb-billpay-payee-summary-item.ebill-error.ebills-no-longer-available\"\n            >\n              This biller no longer supports eBills.\n            </div>\n          </div>\n        </div>\n        <a\n          (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n          tabindex=\"0\"\n          role=\"button\"\n          class=\"bb-stack__item bb-subtitle\"\n          style=\"cursor: pointer\"\n          attr.aria-label=\"Disable eBills for {{ payeeName }}\"\n          i18n-attr.aria-label=\"\n            Disable eBills link aria label|Aria label for Disable\n            eBills@@bb-billpay-payee-summary-item.ebill-link.ebills-no-longer-available\"\n          i18n=\"\n            Disable eBills for this payee link|Button text to display to disable eBills for the\n            payee@@bb-billpay-payee-summary-item.ebill-link.aria-label.ebills-no-longer-available\"\n          data-role=\"ebills-disabled-button\"\n          >Disable eBills for this payee\n        </a>\n      </ng-container>\n\n      <ng-container *ngIf=\"isEbillsErrorUserAction\">\n        <div class=\"bb-stack__item\">\n          <div class=\"bb-stack\">\n            <bb-icon-ui\n              class=\"bb-stack__item bb-stack__item--spacing-sm\"\n              data-role=\"ebills-error-icon\"\n              name=\"error-outline\"\n              size=\"sm\"\n              color=\"danger\"\n            ></bb-icon-ui>\n            <div\n              id=\"{{ ebillUserActionErrorId }}\"\n              class=\"bb-stack__item bb-subtitle bb-text-danger\"\n              data-role=\"ebills-error-login-to-biller-message\"\n              i18n=\"\n                Please log in to biller to resolve error|Error text to display when the user must log into the biller's\n                site to resolve an issue@@bb-billpay-payee-summary-item.ebill-error.log-in-to-bille-site\"\n            >\n              Please log in to the biller's site to resolve an issue and continue receiving eBills for this payee.\n            </div>\n          </div>\n        </div>\n        <a\n          (bbKeyboardClick)=\"handleResolveEbillsErrors()\"\n          tabindex=\"0\"\n          role=\"button\"\n          class=\"bb-stack__item bb-subtitle\"\n          style=\"cursor: pointer\"\n          i18n=\"\n            Refresh status for payee link|Button text to display for refreshing the status of eBills for the\n            payee@@bb-billpay-payee-summary-item.ebill-link.refresh-status\"\n          attr.aria-label=\"Refresh status for {{ payeeName }}\"\n          i18n-attr.aria-label=\"\n            Refresh status for payee link aria label|Aria label for Refresh\n            status@@bb-billpay-payee-summary-item.ebill-link.aria-label.refresh-status\"\n          data-role=\"ebills-refresh-status-button\"\n          >Refresh status\n        </a>\n      </ng-container>\n\n      <ng-container *ngIf=\"isEbillsErrorUnknown\">\n        <div class=\"bb-stack\">\n          <bb-icon-ui\n            class=\"bb-stack__item bb-stack__item--spacing-sm\"\n            data-role=\"ebills-error-icon\"\n            name=\"error-outline\"\n            size=\"sm\"\n            color=\"danger\"\n          ></bb-icon-ui>\n          <div\n            attr.id=\"{{ ebillUnknownErrorId }}\"\n            class=\"bb-stack__item bb-subtitle bb-text-danger\"\n            data-role=\"ebills-error-try-again-later-message\"\n            i18n=\"\n              Ebills cannot be retrieved error|Error text to display when eBills cannot currently be retreived for the\n              payee@@bb-billpay-payee-summary-item.ebill-error.ebills-cannot-be-retrieved\"\n          >\n            eBills cannot be retrieved, please try again later or contact support\n          </div>\n        </div>\n      </ng-container>\n    </div>\n\n    <div\n      *ngIf=\"areEbillsEnabledButNotDue\"\n      id=\"{{ noEbillsDueId }}\"\n      class=\"bb-text-support\"\n      data-role=\"no-due-date-label\"\n      i18n=\"\n        No eBill due note|Text for the information that no eBill is due@@bb-billpay-payee-summary-item.note.no-ebill-due\"\n    >\n      No eBills due\n    </div>\n\n    <div *ngIf=\"areEbillsAvailable\" class=\"bb-stack\">\n      <bb-icon-ui\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n        data-role=\"receipt-icon\"\n        size=\"sm\"\n        name=\"receipt\"\n        color=\"secondary\"\n      ></bb-icon-ui>\n      <span\n        id=\"{{ ebillsAvailableId }}\"\n        class=\"bb-text-support bb-subtitle bb-stack__item\"\n        data-role=\"ebills-available-label\"\n        i18n=\"\n          eBills available note|Text for the information that eBills are\n          available@@bb-billpay-payee-summary-item.note.ebills-available\"\n        >eBills available</span\n      >\n    </div>\n\n    <div *ngIf=\"areRecurringPaymentsScheduled\" class=\"bb-stack bb-stack--align-top\">\n      <div class=\"bb-stack__item bb-stack__item--spacing-sm\">\n        <bb-icon-ui data-role=\"recurring-payment-icon\" size=\"sm\" name=\"repeat\" color=\"secondary\"></bb-icon-ui>\n      </div>\n      <div\n        id=\"{{ recurringPaymentScheduledIdId }}\"\n        class=\"bb-stack__item bb-subtitle bb-text-support\"\n        data-role=\"recurring-payment-label\"\n        i18n=\"\n          Recurring payments scheduled note|Text for the information that recurring payments are\n          scheduled@@bb-billpay-payee-summary-item.note.recurring-payments-scheduled\"\n      >\n        Recurring payments scheduled\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-stack__item bb-stack__item--fill\">\n    <div class=\"bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--fill bb-text-align-left bb-text-align-right--md-up\">\n        <bb-amount-ui\n          id=\"{{ payeeAmountId }}\"\n          class=\"bb-text-bold\"\n          *ngIf=\"areEbillsDue\"\n          data-role=\"amount\"\n          [amount]=\"payeeSummary?.ebill?.latestBill?.amount?.amount\"\n          [currency]=\"payeeSummary?.ebill?.latestBill?.amount?.currencyCode\"\n        >\n        </bb-amount-ui>\n      </div>\n      <div class=\"bb-stack__item\">\n        <ng-container *ngTemplateOutlet=\"payeeSummaryItemButton\"> </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #payeeSummaryItemButton>\n  <div class=\"btn-group\" data-role=\"payee-dropdown-menu\">\n    <button\n      bbButton\n      data-role=\"pay-button\"\n      (bbKeyboardClick)=\"handlePayPayee(ONE_OFF_PAYMENT)\"\n      i18n=\"Pay payee button|Button for paying the payee@@bb-billpay-payee-summary-item.button.pay\"\n      [attr.aria-label]=\"'Pay ' + payeeName\"\n      i18n-attr.aria-label=\"\n        Pay payee aria label|Aria label for paying the payee@@bb-billpay-payee-summary-item.aria-label.pay\"\n    >\n      Pay\n    </button>\n\n    <bb-dropdown-menu-ui\n      class=\"btn-group\"\n      btnColor=\"primary\"\n      container=\"body\"\n      icon=\"caret-down\"\n      [attr.aria-label]=\"'More options for ' + payeeName\"\n      i18n-attr.aria-label=\"\n        More options for payee aria label|Aria label for more payee\n        options@@bb-billpay-payee-summary-item.aria-label.more-payee-options\"\n    >\n      <ng-template bbDropdownMenuItem>\n        <ng-container *ngIf=\"payeeSummary?.ebill?.capable\">\n          <a role=\"menuitem\" class=\"dropdown-item bb-dropdown-single-select\" *ngIf=\"ebillLink\" target=\"_blank\">\n            <span\n              i18n=\"\n                View eBill dropdown list button|Button in the dropdown list for viewing the\n                eBill@@bb-billpay-payee-summary-item.button.dropdown.view-eBill\"\n              >View eBill</span\n            >\n          </a>\n\n          <a\n            role=\"menuitem\"\n            target=\"_blank\"\n            data-role=\"stop-ebills-menu-item\"\n            class=\"dropdown-item bb-dropdown-single-select\"\n            *ngIf=\"showStopEbills\"\n            (bbKeyboardClick)=\"handleStopEbills($event)\"\n          >\n            <span\n              i18n=\"\n                Stop eBills dropdown list button|Button in the dropdown list for getting\n                eBills@@bb-billpay-payee-summary-item.button.dropdown.stop-eBills\"\n              >Stop eBills</span\n            >\n          </a>\n\n          <a\n            data-role=\"get-ebills-menu-item\"\n            class=\"dropdown-item bb-dropdown-single-select\"\n            *ngIf=\"areEbillsAvailable\"\n            role=\"menuitem\"\n            target=\"_blank\"\n            (bbKeyboardClick)=\"handleGetEbills()\"\n          >\n            <span\n              i18n=\"\n                Get eBills dropdown list button|Button in the dropdown list for getting\n                eBills@@bb-billpay-payee-summary-item.button.dropdown.get-eBills\"\n              >Get eBills</span\n            >\n          </a>\n        </ng-container>\n\n        <a\n          role=\"menuitem\"\n          data-role=\"view-payee-menu-item\"\n          class=\"dropdown-item bb-dropdown-single-select\"\n          (bbKeyboardClick)=\"handleViewSummary()\"\n        >\n          <span\n            i18n=\"\n              View payee dropdown list button|Button in the dropdown list for viewing the\n              payee@@bb-billpay-payee-summary-item.button.dropdown.view-payee\"\n            >View payee</span\n          >\n        </a>\n        <a\n          role=\"menuitem\"\n          data-role=\"edit-payee-menu-item\"\n          class=\"dropdown-item bb-dropdown-single-select\"\n          (bbKeyboardClick)=\"handleEditPayee()\"\n        >\n          <span\n            i18n=\"\n              Edit payee dropdown list button|Button in the dropdown list for editing the\n              payee@@bb-billpay-payee-summary-item.button.dropdown.edit-payee\"\n            >Edit payee</span\n          >\n        </a>\n        <a\n          role=\"menuitem\"\n          data-role=\"delete-payee-menu-item\"\n          class=\"dropdown-item bb-dropdown-single-select\"\n          (bbKeyboardClick)=\"handleDeletePayee($event)\"\n        >\n          <span\n            i18n=\"\n              Delete payee dropdown list button|Button in the dropdown list for deleting the\n              payee@@bb-billpay-payee-summary-item.button.dropdown.delete-payee\"\n            >Delete payee</span\n          >\n        </a>\n      </ng-template>\n    </bb-dropdown-menu-ui>\n  </div>\n</ng-template>\n", components: [{ type: i4__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i5__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i6__namespace.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }], directives: [{ type: i7__namespace.KeyboardClickDirective, selector: "[bbKeyboardClick]", outputs: ["bbKeyboardClick"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace$1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i6__namespace.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }], pipes: { "bbDate": i10__namespace.BbDatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeSummaryItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-summary-item',
                        templateUrl: './billpay-payee-summary-item.component.html',
                        providers: [ManagePayeesNavigationService],
                    }]
            }], ctorParameters: function () { return [{ type: i4__namespace.BillpayPayeeDataService }, { type: i2__namespace.NgbDropdownConfig }, { type: ManagePayeesNavigationService }]; } });

    var BillpayPayeeSummaryListComponent = /** @class */ (function () {
        function BillpayPayeeSummaryListComponent() {
            /**
             * Array of payee summary details.
             */
            this.payeeSummaries = [];
        }
        BillpayPayeeSummaryListComponent.prototype.ngForTrackByIdFn = function (payee) {
            return payee.id;
        };
        return BillpayPayeeSummaryListComponent;
    }());
    BillpayPayeeSummaryListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeSummaryListComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayeeSummaryListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayeeSummaryListComponent, selector: "bb-billpay-payee-summary-list", inputs: { payeeSummaries: "payeeSummaries" }, ngImport: i0__namespace, template: "<ul class=\"bb-list\" data-role=\"list-group\">\n  <li *ngFor=\"let payeeSummary of payeeSummaries; trackBy: ngForTrackByIdFn\" class=\"bb-list__item\">\n    <bb-billpay-payee-summary-item [payeeSummary]=\"payeeSummary\"></bb-billpay-payee-summary-item>\n  </li>\n</ul>\n", components: [{ type: BillpayPayeeSummaryItemComponent, selector: "bb-billpay-payee-summary-item" }], directives: [{ type: i5__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeSummaryListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-summary-list',
                        templateUrl: './billpay-payee-summary-list.component.html',
                    }]
            }], propDecorators: { payeeSummaries: [{
                    type: i0.Input
                }] } });

    var PayeeListViewComponent = /** @class */ (function () {
        /** @internal */
        function PayeeListViewComponent(routerService, route, config, payeeDataService, notificationService, cdRef, billpayNotificationRoutingService) {
            this.routerService = routerService;
            this.route = route;
            this.config = config;
            this.payeeDataService = payeeDataService;
            this.notificationService = notificationService;
            this.cdRef = cdRef;
            this.billpayNotificationRoutingService = billpayNotificationRoutingService;
            this.notificationMessageTemplate = '';
            this.notificationHeaderTemplate = '';
            this.payeeSummariesByEbillObservable = new rxjs.Observable();
            this.destroy$ = new rxjs.Subject();
            this.isDeleteModalOpened = false;
            this.isDeleteEbillsModalOpen = false;
            this.isNavigateModalOpened = false;
            this.notificationType = '';
            this.navigationExtras = { relativeTo: this.route };
        }
        PayeeListViewComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.payeeSummariesByEbillObservable = this.payeeDataService.getPayees();
            this.setupNavigationSubscriptions();
            this.payeeDataService.selectedDeletePayee
                .pipe(operators.takeUntil(this.destroy$), operators.skip(1))
                .subscribe(function (payee) { return (payee ? (_this.isDeleteModalOpened = true) : (_this.isNavigateModalOpened = true)); });
            this.payeeDataService.selectedDeleteEbills
                .pipe(operators.takeUntil(this.destroy$), operators.skip(1))
                .subscribe(function (payee) { return (payee ? (_this.isDeleteEbillsModalOpen = true) : (_this.isNavigateModalOpened = true)); });
        };
        PayeeListViewComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        PayeeListViewComponent.prototype.deletePayee = function () {
            var _this = this;
            return this.payeeDataService.selectedDeletePayee.pipe(operators.switchMap(function (payee) { return payee ? _this.payeeDataService.deletePayee(payee.id, payee.electronic) : rxjs.of(); }));
        };
        PayeeListViewComponent.prototype.deleteEbills = function () {
            var _this = this;
            return this.payeeDataService.selectedDeleteEbills.pipe(operators.switchMap(function (payee) { return (payee ? _this.payeeDataService.deleteEbills(payee.id) : rxjs.of()); }));
        };
        Object.defineProperty(PayeeListViewComponent.prototype, "dismissTimeout", {
            get: function () {
                if (this.config.notificationDismissTime === undefined) {
                    throw new Error('Dismiss timeout value not found');
                }
                return this.config.notificationDismissTime;
            },
            enumerable: false,
            configurable: true
        });
        PayeeListViewComponent.prototype.selectedDeletePayee = function () {
            return this.payeeDataService.selectedDeletePayee;
        };
        PayeeListViewComponent.prototype.selectedDeleteEbills = function () {
            return this.payeeDataService.selectedDeleteEbills;
        };
        PayeeListViewComponent.prototype.onNavigateToPayments = function (hasNavigated) {
            if (hasNavigated) {
                this.goToPaymentsList();
            }
            this.isNavigateModalOpened = false;
        };
        PayeeListViewComponent.prototype.onDeletePayee = function (resolve) {
            var _this = this;
            this.isDeleteModalOpened = false;
            if (resolve) {
                this.deletePayee()
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this.deletionNotify('delete');
                });
            }
        };
        PayeeListViewComponent.prototype.onDeleteEbills = function (resolve) {
            var _this = this;
            this.isDeleteEbillsModalOpen = false;
            if (resolve) {
                this.deleteEbills()
                    .pipe(operators.take(1))
                    .subscribe(function () {
                    _this.deletionNotify('ebills');
                });
            }
        };
        PayeeListViewComponent.prototype.deletionNotify = function (type) {
            this.payeeDataService.reloadPayees();
            this.cdRef.markForCheck();
            this.notificationType = type;
            this.notificationService.showNotification({
                header: this.notificationHeaderTemplate,
                message: this.notificationMessageTemplate,
                modifier: 'success',
                ttl: this.dismissTimeout,
            });
        };
        PayeeListViewComponent.prototype.setupNavigationSubscriptions = function () {
            var _this = this;
            this.billpayNotificationRoutingService.managePayeesSubject$
                .pipe(operators.takeUntil(this.destroy$))
                .subscribe(function () { return _this.goToAddPayee(); });
            this.billpayNotificationRoutingService.managePaymentSubject$
                .pipe(operators.takeUntil(this.destroy$))
                .subscribe(function (payeeId) { return __awaiter(_this, void 0, void 0, function () { var _a, _b; return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _b = this.gotoOneOffPayment;
                        return [4 /*yield*/, this.payeeDataService.findPayeeSummaryById(payeeId)];
                    case 1: return [2 /*return*/, _b.apply(this, [((_a = (_c.sent())) === null || _a === void 0 ? void 0 : _a.id) || ''])];
                }
            }); }); });
            this.billpayNotificationRoutingService.upcommingPaymentsSubject$
                .pipe(operators.takeUntil(this.destroy$))
                .subscribe(function () { return _this.goToPaymentsList(); });
        };
        PayeeListViewComponent.prototype.areBothListsPresent = function (payeeSummariesByEbill) {
            return !!(payeeSummariesByEbill.ebillsEnabled &&
                payeeSummariesByEbill.ebillsEnabled.length &&
                payeeSummariesByEbill.ebillsNotEnabled &&
                payeeSummariesByEbill.ebillsNotEnabled.length);
        };
        // Get totals of the eBills, grouped by currency
        // Ideally there should only be one currency in use, but it doesn't hurt to check
        PayeeListViewComponent.prototype.getEbillTotals = function (ebillPayeeSummaries) {
            if (ebillPayeeSummaries === void 0) { ebillPayeeSummaries = []; }
            var ebillTotalsByCurrency = ebillPayeeSummaries.reduce(function (currenciesTotalsObj, payeeSummary) {
                if (!(payeeSummary.ebill && payeeSummary.ebill.latestBill && payeeSummary.ebill.latestBill.amount)) {
                    return currenciesTotalsObj;
                }
                var thisCurrencyCode = payeeSummary.ebill.latestBill.amount.currencyCode;
                var thisAmount = parseFloat(payeeSummary.ebill.latestBill.amount.amount);
                if (!currenciesTotalsObj[thisCurrencyCode]) {
                    currenciesTotalsObj[thisCurrencyCode] = 0;
                }
                currenciesTotalsObj[thisCurrencyCode] = currenciesTotalsObj[thisCurrencyCode] + thisAmount;
                return currenciesTotalsObj;
            }, {});
            return Object.keys(ebillTotalsByCurrency).map(function (currencyCode) {
                return {
                    currencyCode: currencyCode,
                    amount: ebillTotalsByCurrency[currencyCode].toString(),
                };
            });
        };
        PayeeListViewComponent.prototype.ngForTrackByCurrencyFn = function (currencies) {
            return currencies.currencyCode;
        };
        Object.defineProperty(PayeeListViewComponent.prototype, "currentLoadingState", {
            get: function () {
                return this.payeeDataService.payeesLoadingState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PayeeListViewComponent.prototype, "areButtonsDisabled", {
            get: function () {
                return this.payeeDataService.areButtonsDisabled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PayeeListViewComponent.prototype, "numberOfPayees", {
            get: function () {
                return this.payeeDataService.numberOfPayees;
            },
            enumerable: false,
            configurable: true
        });
        PayeeListViewComponent.prototype.goToAddPayee = function () {
            this.routerService.navigateToSearch(this.navigationExtras);
        };
        PayeeListViewComponent.prototype.goToPaymentsList = function () {
            var _a;
            (_a = this.routerService) === null || _a === void 0 ? void 0 : _a.navigateToPendingPayments();
        };
        PayeeListViewComponent.prototype.gotoOneOffPayment = function (id) {
            var _a;
            (_a = this.routerService) === null || _a === void 0 ? void 0 : _a.navigateToOneOffPayment(id);
        };
        return PayeeListViewComponent;
    }());
    PayeeListViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PayeeListViewComponent, deps: [{ token: ManagePayeesNavigationService }, { token: i1__namespace.ActivatedRoute }, { token: ManagePayeesJourneyConfigService }, { token: i4__namespace.BillpayPayeeDataService }, { token: i5__namespace$2.NotificationService }, { token: i0__namespace.ChangeDetectorRef }, { token: i4__namespace.BillpayNotificationRoutingService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    PayeeListViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PayeeListViewComponent, selector: "bb-billpay-payee-list-view", viewQueries: [{ propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }, { propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }], ngImport: i0__namespace, template: "<div class=\"bb-stack bb-block bb-block--lg\">\n  <bb-header-ui\n    class=\"bb-stack__item bb-stack__item--fill\"\n    headingType=\"h1\"\n    heading=\"Pay a bill\"\n    i18n-heading=\"@@billpay-payees-journey.payee-list-view\"\n  >\n  </bb-header-ui>\n  <button\n    bbButton\n    (click)=\"goToAddPayee()\"\n    color=\"secondary\"\n    i18n=\"button label|Add payee button@@billpay-payees-journey.payee-list\"\n  >\n    Add a payee\n  </button>\n</div>\n\n<ng-container>\n  <section>\n    <ng-container *ngIf=\"currentLoadingState !== 'error'; else errorState\">\n      <ng-container *ngIf=\"payeeSummariesByEbillObservable | async as ebillGroupedData; else loadingState\">\n        <ng-container *ngIf=\"currentLoadingState !== 'loading'; else loadingState\">\n          <ng-container\n            *ngIf=\"ebillGroupedData.ebillsEnabled.length || ebillGroupedData.ebillsNotEnabled.length; else emptyState\"\n          >\n            <div\n              class=\"bb-block bb-block--lg\"\n              *ngIf=\"ebillGroupedData.ebillsEnabled.length\"\n              data-role=\"payees-with-active-e-bills-list\"\n            >\n              <div class=\"card card-lg\">\n                <div class=\"card-body\">\n                  <div class=\"bb-block bb-block--md\">\n                    <bb-header-ui\n                      headingType=\"h2\"\n                      *ngIf=\"areBothListsPresent(ebillGroupedData)\"\n                      data-role=\"sub-header\"\n                      heading=\"Payees with active eBills\"\n                      i18n-heading=\"\n                        Payees with eBills title|Title for the list of payees with eBills\n                        enabled@@bb-billpay-payee-list-widget-ang.title.payees-with-ebills\"\n                    >\n                    </bb-header-ui>\n                  </div>\n                  <ul class=\"bb-list\">\n                    <li class=\"bb-list__item\">\n                      <bb-billpay-payee-summary-list [payeeSummaries]=\"ebillGroupedData.ebillsEnabled\">\n                      </bb-billpay-payee-summary-list>\n                    </li>\n                    <li class=\"bb-list__item\">\n                      <div\n                        data-role=\"outstanding-e-bill-total\"\n                        role=\"listitem\"\n                        *ngFor=\"\n                          let ebillCurrencyTotal of getEbillTotals(ebillGroupedData.ebillsEnabled);\n                          trackBy: ngForTrackByCurrencyFn\n                        \"\n                        class=\"bb-highlight\"\n                      >\n                        <span\n                          i18n=\"\n                            Outstanding eBills total text|Text for the total of outstanding\n                            eBills@@bb-billpay-payee-list-widget-ang.ebills.total\"\n                        >\n                          Outstanding eBill total:\n                        </span>\n                        <bb-amount-ui\n                          data-role=\"total-amount\"\n                          class=\"bb-highlight\"\n                          [amount]=\"ebillCurrencyTotal.amount\"\n                          [currency]=\"ebillCurrencyTotal.currencyCode\"\n                        >\n                        </bb-amount-ui>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n\n            <div\n              class=\"card card-lg\"\n              data-role=\"all-other-payees-list\"\n              *ngIf=\"ebillGroupedData.ebillsNotEnabled.length\"\n            >\n              <div class=\"card-body\">\n                <div class=\"bb-block bb-block--md\">\n                  <bb-header-ui\n                    headingType=\"h2\"\n                    *ngIf=\"areBothListsPresent(ebillGroupedData)\"\n                    data-role=\"sub-header\"\n                    heading=\"All other payees\"\n                    i18n-heading=\"\n                      Payees without eBills title|Title for the list of payees that do not have eBills\n                      enabled@@bb-billpay-payee-list-widget-ang.title.other-payees\"\n                  >\n                  </bb-header-ui>\n                </div>\n                <div class=\"bb-list\">\n                  <bb-billpay-payee-summary-list [payeeSummaries]=\"ebillGroupedData.ebillsNotEnabled\">\n                  </bb-billpay-payee-summary-list>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </section>\n</ng-container>\n\n<ng-template #loadingState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <bb-empty-state-ui\n        data-role=\"error-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"error-outline\"\n        subtitle=\"Try to reload the page or contact support\"\n        i18n-subtitle=\"\n          Try to reload the page or contact the support.|Payee List loading\n          subtitle@@bb-billpay-payee-list-widget-ang.loading.subtitle\"\n        title=\"Payee list is not loading\"\n        i18n-title=\"Payee list is not loading|Payee List loading title@@bb-billpay-payee-list-widget-ang.loading.title\"\n      >\n      </bb-empty-state-ui>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #emptyState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        data-role=\"empty-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"assignment-ind\"\n        subtitle=\"Add a payee to make a bill payment\"\n        i18n-subtitle=\"\n          Add a payee to make a bill payment|Payee List no payees\n          subtitle@@bb-billpay-payee-list-widget-ang.bb-empty-state-ui.subtitle\"\n        title=\"No payees\"\n        i18n-title=\"\n          No payees state text|Payee List no payees title@@bb-billpay-payee-list-widget-ang.bb-empty-state-ui.title\"\n      >\n      </bb-empty-state-ui>\n      <div class=\"bb-state-container__footer\">\n        <button\n          bbButton\n          data-role=\"empty-state-add-payee-btn\"\n          (click)=\"addPayee()\"\n          [disabled]=\"areButtonsDisabled\"\n          i18n=\"\n            Add a payee|Payee List add payee button@@bb-billpay-payee-list-widget-ang.bb-empty-state-ui.button.add-payee\"\n        >\n          Add a payee\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<bb-billpay-payee-delete-modal\n  *ngIf=\"isDeleteModalOpened\"\n  (resolve)=\"onDeletePayee($event)\"\n></bb-billpay-payee-delete-modal>\n\n<bb-billpay-ebills-delete-modal\n  *ngIf=\"isDeleteEbillsModalOpen\"\n  (resolve)=\"onDeleteEbills($event)\"\n></bb-billpay-ebills-delete-modal>\n\n<bb-billpay-payee-navigate-modal\n  *ngIf=\"isNavigateModalOpened\"\n  (resolve)=\"onNavigateToPayments($event)\"\n></bb-billpay-payee-navigate-modal>\n\n<ng-template #notificationHeader>\n  <div [ngSwitch]=\"notificationType\">\n    <span\n      *ngSwitchCase=\"'ebills'\"\n      class=\"bb-text-bold\"\n      i18n=\"\n        eBills stopped notification header|eBills stopped confirmation success notification\n        header@@billpay-payee-list.confirm.notification.header\"\n      >eBills stopped</span\n    >\n    <span\n      *ngSwitchCase=\"'delete'\"\n      class=\"bb-text-bold\"\n      i18n=\"\n        delete payee notification header|Payee delete confirmation success notification\n        header@@billpay-payee-list.confirm.notification.header\"\n      >Payee deleted</span\n    >\n  </div>\n</ng-template>\n\n<ng-template #notificationMessage>\n  <div [ngSwitch]=\"notificationType\">\n    <ng-container *ngSwitchCase=\"'delete'\">\n      <span\n        *ngIf=\"selectedDeletePayee() | async as payee\"\n        i18n=\"\n          delete payee notification message|Payee delete confirmation success notification\n          message@@billpay-payee-list.delete-payee-confirm.notification.message\"\n        >The payee {{ payee.nickName ? payee.nickName + ' (' + payee.name + ')' : payee.name }} has been deleted\n        successfully</span\n      >\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'ebills'\">\n      <span\n        *ngIf=\"selectedDeleteEbills() | async as payee\"\n        i18n=\"\n          stop ebill notification message|Payee stop ebill confirmation success notification\n          message@@billpay-payee-list.stop-ebill-confirm.notification.message\"\n        >eBills for {{ payee.nickName ? payee.nickName + ' (' + payee.name + ')' : payee.name }} has been stopped\n        successfully</span\n      >\n    </ng-container>\n  </div>\n</ng-template>\n", components: [{ type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: BillpayPayeeSummaryListComponent, selector: "bb-billpay-payee-summary-list", inputs: ["payeeSummaries"] }, { type: i5__namespace.AmountComponent, selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i10__namespace$1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i4__namespace.ӨBillpayPayeeDeleteModalComponent, selector: "bb-billpay-payee-delete-modal", outputs: ["resolve"] }, { type: i4__namespace.ӨBillpayEbillsDeleteModalComponent, selector: "bb-billpay-ebills-delete-modal", outputs: ["resolve"] }, { type: i4__namespace.ӨBillpayPayeeNavigateModalComponent, selector: "bb-billpay-payee-navigate-modal", outputs: ["resolve"] }], directives: [{ type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PayeeListViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-list-view',
                        templateUrl: './billpay-payee-list-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ManagePayeesNavigationService }, { type: i1__namespace.ActivatedRoute }, { type: ManagePayeesJourneyConfigService }, { type: i4__namespace.BillpayPayeeDataService }, { type: i5__namespace$2.NotificationService }, { type: i0__namespace.ChangeDetectorRef }, { type: i4__namespace.BillpayNotificationRoutingService }]; }, propDecorators: { notificationMessageTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationMessage']
                }], notificationHeaderTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationHeader']
                }] } });

    var defaultDeleteParams = {
        cancelPendingPayments: false,
    };
    var BillpayPayeeSummaryWidgetService = /** @class */ (function () {
        /** @internal */
        function BillpayPayeeSummaryWidgetService(payeesSummaryData, payeesData) {
            this.payeesSummaryData = payeesSummaryData;
            this.payeesData = payeesData;
            this.currentPayeeSummaryLoadingState = new rxjs.BehaviorSubject('');
        }
        BillpayPayeeSummaryWidgetService.prototype.getPayees = function () {
            var _this = this;
            this.currentPayeeSummaryLoadingState.next('loading');
            return this.payeesSummaryData.getBillPayPayeesSummary().pipe(operators.map(this.getPayeeSummaries), operators.tap(function (data) { return sortPayees(data); }), operators.tap(function () { return _this.currentPayeeSummaryLoadingState.next(''); }), operators.catchError(function () {
                _this.currentPayeeSummaryLoadingState.next('error');
                return rxjs.EMPTY;
            }));
        };
        BillpayPayeeSummaryWidgetService.prototype.deletePayee = function (id, electronic) {
            return electronic
                ? this.payeesData.deleteElectronicPayeeById(Object.assign(Object.assign({}, defaultDeleteParams), { id: id }))
                : this.payeesData.deletePayeeById(Object.assign(Object.assign({}, defaultDeleteParams), { id: id }));
        };
        BillpayPayeeSummaryWidgetService.prototype.getFullSummary = function (id) {
            return this.payeesData.getPayeeById({ id: id }).pipe(operators.map(function (a) { return a.payee; }));
        };
        BillpayPayeeSummaryWidgetService.prototype.getPayeeSummaries = function (response) {
            // eslint-disable-next-line no-null/no-null
            if (response.payeeSummaries === null) {
                throw new Error('Response body not set');
            }
            return response.payeeSummaries ? response.payeeSummaries : [];
        };
        Object.defineProperty(BillpayPayeeSummaryWidgetService.prototype, "payeesSummaryLoadingState", {
            get: function () {
                return this.currentPayeeSummaryLoadingState;
            },
            enumerable: false,
            configurable: true
        });
        return BillpayPayeeSummaryWidgetService;
    }());
    BillpayPayeeSummaryWidgetService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeSummaryWidgetService, deps: [{ token: i1__namespace$2.BillPayPayeesSummaryService }, { token: i1__namespace$2.BillPayPayeesService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    BillpayPayeeSummaryWidgetService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeSummaryWidgetService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeSummaryWidgetService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$2.BillPayPayeesSummaryService }, { type: i1__namespace$2.BillPayPayeesService }]; } });
    function getPayeeDisplayName(payee) {
        return (payee.nickName || payee.name).toLowerCase();
    }
    function isEbillEnabled(payee) {
        return payee.ebill ? payee.ebill.enabled : false;
    }
    function sortPayees(data) {
        if (data) {
            data.sort(function (payee1, payee2) {
                if (isEbillEnabled(payee1) && !isEbillEnabled(payee2))
                    return -1;
                if (!isEbillEnabled(payee1) && isEbillEnabled(payee2))
                    return 1;
                return getPayeeDisplayName(payee1) > getPayeeDisplayName(payee2) ? 1 : -1;
            });
        }
    }

    var BillpayPayeeStepperComponent = /** @class */ (function () {
        function BillpayPayeeStepperComponent() {
            this.nextPayee = new i0.EventEmitter();
            this.previousPayee = new i0.EventEmitter();
        }
        BillpayPayeeStepperComponent.prototype.handleGetPreviousPayee = function () {
            this.previousPayee.emit();
        };
        BillpayPayeeStepperComponent.prototype.handleGetNextPayee = function () {
            this.nextPayee.emit();
        };
        return BillpayPayeeStepperComponent;
    }());
    BillpayPayeeStepperComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeStepperComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayeeStepperComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayeeStepperComponent, selector: "bb-billpay-payee-stepper", inputs: { index: "index", size: "size" }, outputs: { nextPayee: "nextPayee", previousPayee: "previousPayee" }, ngImport: i0__namespace, template: "<div class=\"bb-stack\" *ngIf=\"index || index === 0\">\n  <span\n    class=\"bb-stack__item bb-stack__item--fill bb-text-support bb-subtitle\"\n    data-role=\"payee-index\"\n    i18n=\"\n      Number of payees|Text for the payee number and of total\n      payees@@bb-billpay-view-payee-full-summary.note.payee-of-payees\"\n    >Payee {{ index + 1 }} of {{ size }}</span\n  >\n  <button\n    bbButton\n    data-role=\"previous-payee-button\"\n    class=\"bb-stack__item\"\n    color=\"link\"\n    circle=\"true\"\n    aria-label=\"show previous payee\"\n    i18n-aria-label=\"\n      Show previous payee button|Aria label for show previous\n      payee@@bb-billpay-view-payee-full-summary.payee-information.show-previous-payee-button\"\n    [disabled]=\"index <= 0\"\n    (click)=\"handleGetPreviousPayee()\"\n  >\n    <bb-icon-ui name=\"angle-left\"></bb-icon-ui>\n  </button>\n  <button\n    bbButton\n    data-role=\"next-payee-button\"\n    class=\"bb-stack__item\"\n    color=\"link\"\n    circle=\"true\"\n    aria-label=\"show next payee\"\n    i18n-aria-label=\"\n      Show next payee button|Aria label for show next\n      payee@@bb-billpay-view-payee-full-summary.payee-information.show-next-payee-button\"\n    [disabled]=\"index + 1 >= size\"\n    (click)=\"handleGetNextPayee()\"\n  >\n    <bb-icon-ui name=\"angle-right\"></bb-icon-ui>\n  </button>\n</div>\n", components: [{ type: i4__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeStepperComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-stepper',
                        templateUrl: './billpay-payee-stepper.component.html',
                    }]
            }], propDecorators: { index: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], nextPayee: [{
                    type: i0.Output
                }], previousPayee: [{
                    type: i0.Output
                }] } });

    var BillpayPayeeInformationComponent = /** @class */ (function () {
        /** @internal */
        function BillpayPayeeInformationComponent(phoneNumberFormatter) {
            this.phoneNumberFormatter = phoneNumberFormatter;
            this.editPayee = new i0.EventEmitter();
            this.deletePayee = new i0.EventEmitter();
        }
        BillpayPayeeInformationComponent.prototype.handleEditPayee = function () {
            this.editPayee.emit();
        };
        BillpayPayeeInformationComponent.prototype.handleDeletePayee = function () {
            this.deletePayee.emit();
        };
        Object.defineProperty(BillpayPayeeInformationComponent.prototype, "payeePhoneNumber", {
            get: function () {
                return (this.fullPayee &&
                    this.fullPayee.phoneNumber &&
                    this.phoneNumberFormatter.transform(this.fullPayee.phoneNumber, 'US', true));
            },
            enumerable: false,
            configurable: true
        });
        return BillpayPayeeInformationComponent;
    }());
    BillpayPayeeInformationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeInformationComponent, deps: [{ token: i1__namespace$3.PhoneNumberPipe }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayeeInformationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayeeInformationComponent, selector: "bb-billpay-payee-information", inputs: { payeeSummary: "payeeSummary", fullPayee: "fullPayee" }, outputs: { editPayee: "editPayee", deletePayee: "deletePayee" }, providers: [i1$3.PhoneNumberPipe], ngImport: i0__namespace, template: "<bb-collapsible-ui data-role=\"full-summary-toggle\" [isOpen]=\"true\">\n  <ng-template bbCollapsibleHeader let-toggle=\"toggle\" let-isOpen=\"isOpen\">\n    <div class=\"bb-stack bb-block bb-block--md\">\n      <bb-header-ui\n        headingType=\"h3\"\n        class=\"bb-stack__item bb-stack__item--fill\"\n        *ngIf=\"payeeSummary.nickName || payeeSummary.name\"\n        data-role=\"full-summary-toggle-heading\"\n        heading=\"Payee Information\"\n        i18n-heading=\"\n          Payee Information|Title of the payee information\n          section@@bb-billpay-view-payee-full-summary.payee-information.title\"\n      >\n      </bb-header-ui>\n      <button\n        id=\"payee-information-toggle-view\"\n        bbButton\n        class=\"bb-stack__item\"\n        (click)=\"toggle()\"\n        type=\"button\"\n        color=\"outline\"\n        role=\"switch\"\n        title=\"toggle-view\"\n        [attr.aria-checked]=\"isOpen\"\n        attr.aria-label=\"toggle to {{ isOpen ? 'hide' : 'show' }} payee information\"\n        i18n-attr.aria-label=\"\n          Payee information toggle label|Aria label for payee information\n          toggle@@bb-billpay-view-payee-full-summary.payee-information.toggle-view\"\n      >\n        <bb-icon-ui [name]=\"isOpen ? 'toggle-up' : 'toggle-down'\"></bb-icon-ui>\n      </button>\n    </div>\n  </ng-template>\n  <ng-template bbCollapsibleBody>\n    <dl>\n      <ng-container *ngIf=\"payeeSummary.name\">\n        <dt\n          i18n=\"\n            Payee name label|Label for payee name in payee\n            information@@bb-billpay-view-payee-full-summary.payee-information.payee-name-label\"\n          data-role=\"payee-name-label\"\n        >\n          Payee name\n        </dt>\n        <dd data-role=\"payee-name\">\n          {{ payeeSummary.name }}\n        </dd>\n      </ng-container>\n      <dt\n        i18n=\"\n          Payee type label|Label for payee type in payee\n          information@@bb-billpay-view-payee-full-summary.payee-information.payee-type-label\"\n        data-role=\"payee-type-label\"\n      >\n        Payee type\n      </dt>\n      <dd data-role=\"payee-type\">\n        <span\n          *ngIf=\"payeeSummary.electronic; else manualPayeeLabel\"\n          i18n=\"\n            Electronic payee|Label for electronic\n            payee@@bb-billpay-view-payee-full-summary.payee-information.electronic-payee-label\"\n          >Electronic</span\n        >\n        <ng-template #manualPayeeLabel>\n          <span\n            i18n=\"\n              Manual payee|Label for manual\n              payee@@bb-billpay-view-payee-full-summary.payee-information.manual-payee-label\"\n            >Check</span\n          >\n        </ng-template>\n      </dd>\n      <ng-container *ngIf=\"payeeSummary.accountNumber\">\n        <dt\n          i18n=\"\n            Payee account number label|Label for payee account number in payee\n            information@@bb-billpay-view-payee-full-summary.payee-information.payee-account-number-label\"\n          data-role=\"payee-account-number-label\"\n        >\n          Payee account number\n        </dt>\n        <dd data-role=\"payee-account-number\">\n          {{ payeeSummary.accountNumber }}\n        </dd>\n      </ng-container>\n      <ng-container *ngIf=\"payeeSummary.nickName\">\n        <dt\n          i18n=\"\n            Payee nickname label|Label for payee nickname in payee\n            information@@bb-billpay-view-payee-full-summary.payee-information.payee-nickname-label\"\n          data-role=\"payee-nickname-label\"\n        >\n          Payee nickname\n        </dt>\n        <dd data-role=\"payee-nickname\">\n          {{ payeeSummary.nickName }}\n        </dd>\n      </ng-container>\n      <ng-container *ngIf=\"fullPayee && fullPayee.address as address\">\n        <dt\n          i18n=\"\n            Payee address label|Label for payee address in payee\n            information@@bb-billpay-view-payee-full-summary.payee-information.payee-address-label\"\n          data-role=\"payee-address-label\"\n        >\n          Payee address\n        </dt>\n        <dd data-role=\"payee-address\">\n          <div>{{ address.address1 }}</div>\n          <div *ngIf=\"address.address2\">{{ address.address2 }}</div>\n          <div>\n            <span class=\"bb-text-nowrap\">{{ address.city }} </span>\n            <span class=\"bb-text-nowrap\">{{ address.state }} </span>\n            <span class=\"bb-text-nowrap\">{{ address.postalCode }}</span>\n          </div>\n        </dd>\n      </ng-container>\n      <ng-container *ngIf=\"payeePhoneNumber as phoneNumber\">\n        <dt\n          i18n=\"\n            Payee phone number label|Label for payee phone number in payee\n            information@@bb-billpay-view-payee-full-summary.payee-information.payee-phone-number-label\"\n          data-role=\"payee-phone-number-label\"\n        >\n          Phone number\n        </dt>\n        <dd data-role=\"payee-phone-number\">\n          {{ phoneNumber }}\n        </dd>\n      </ng-container>\n    </dl>\n    <div class=\"bb-button-bar bb-button-bar--reverse bb-block bb-block--xl\">\n      <button\n        bbButton\n        (click)=\"handleEditPayee()\"\n        data-role=\"edit-payee-button\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n        i18n=\"Edit payee button|Text for the edit payee button@@bb-billpay-view-payee-full-summary.button.edit-payee\"\n      >\n        Edit payee\n      </button>\n      <button\n        bbButton\n        (click)=\"handleDeletePayee()\"\n        class=\"bb-button-bar__button\"\n        data-role=\"delete-payee-button\"\n        color=\"danger\"\n        i18n=\"\n          Delete payee button|Text for the delete payee button@@bb-billpay-view-payee-full-summary.button.delete-payee\"\n      >\n        Delete payee\n      </button>\n    </div>\n  </ng-template>\n</bb-collapsible-ui>\n", components: [{ type: i2__namespace$2.CollapsibleComponent, selector: "bb-collapsible-ui", inputs: ["recreateBodyContent", "hasChevron", "isOpen"], outputs: ["isOpenChange"] }, { type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i2__namespace$2.CollapsibleHeaderDirective, selector: "ng-template[bbCollapsibleHeader]" }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i2__namespace$2.CollapsibleBodyDirective, selector: "ng-template[bbCollapsibleBody]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayeeInformationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-information',
                        templateUrl: './billpay-payee-information.component.html',
                        providers: [i1$3.PhoneNumberPipe],
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$3.PhoneNumberPipe }]; }, propDecorators: { payeeSummary: [{
                    type: i0.Input
                }], fullPayee: [{
                    type: i0.Input
                }], editPayee: [{
                    type: i0.Output
                }], deletePayee: [{
                    type: i0.Output
                }] } });

    var PayeeSummaryViewComponent = /** @class */ (function () {
        /** @internal */
        function PayeeSummaryViewComponent(routerService, route, config, payeeSummaryService, notificationService, cdRef) {
            this.routerService = routerService;
            this.route = route;
            this.config = config;
            this.payeeSummaryService = payeeSummaryService;
            this.notificationService = notificationService;
            this.cdRef = cdRef;
            this.selectedDeletePayeeSource = new rxjs.BehaviorSubject(undefined);
            this.destroy$ = new rxjs.Subject();
            this.payees$ = new rxjs.Observable();
            this.isDeleteModalOpened = false;
            this.isNavigateModalOpened = false;
            this.payeeIndex = 0;
            this.notificationMessageTemplate = '';
            this.notificationHeaderTemplate = '';
            this.navigationExtras = { relativeTo: this.route.parent };
        }
        PayeeSummaryViewComponent.prototype.gotoPayeeList = function () {
            this.routerService.navigateToPayeeList(this.navigationExtras);
        };
        PayeeSummaryViewComponent.prototype.gotoAddPayee = function () {
            this.routerService.navigateToSearch(this.navigationExtras);
        };
        PayeeSummaryViewComponent.prototype.gotoOneOffPayment = function (id) {
            this.routerService.navigateToOneOffPayment(id);
        };
        PayeeSummaryViewComponent.prototype.gotoEditManual = function (id) {
            this.routerService.navigateToEditManualPayeeForm(id, this.navigationExtras);
        };
        PayeeSummaryViewComponent.prototype.gotoEditElectronic = function (id) {
            this.routerService.navigateToEditElectronicPayeeForm(id, this.navigationExtras);
        };
        PayeeSummaryViewComponent.prototype.gotoPaymentsList = function () {
            this.routerService.navigateToPendingPayments();
        };
        PayeeSummaryViewComponent.prototype.ngOnInit = function () {
            var _this = this;
            var id = this.route.snapshot.params['payeeID'] || undefined;
            this.payees$ = this.payeeSummaryService.getPayees().pipe(operators.tap(function (data) { return _this.setPayee(data, id); }), operators.tap(function (data) { return (_this.payeeSummaries = data); }));
        };
        PayeeSummaryViewComponent.prototype.setPayee = function (payeeSummaries, id) {
            var _this = this;
            if (!payeeSummaries || payeeSummaries.length === 0) {
                return;
            }
            else if (id === undefined) {
                this.payeeSummary = payeeSummaries[0];
            }
            else {
                var payeeIndex = payeeSummaries.findIndex(function (payee) { return payee.id === id; });
                if (payeeIndex > 0) {
                    this.payeeIndex = payeeIndex;
                    this.payeeSummary = payeeSummaries[payeeIndex];
                }
                else {
                    this.payeeSummary = payeeSummaries[0];
                }
            }
            if (!this.payeeSummary.electronic) {
                this.payeeSummaryService
                    .getFullSummary(this.payeeSummary.id)
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function (payee) {
                    _this.fullManualPayeeSummary = payee;
                    _this.cdRef.detectChanges();
                });
            }
        };
        PayeeSummaryViewComponent.prototype.handleEditPayee = function () {
            if (this.payeeSummary && this.payeeSummary.electronic) {
                this.gotoEditElectronic(this.payeeSummary.id);
            }
            else if (this.payeeSummary && !this.payeeSummary.electronic) {
                this.gotoEditManual(this.payeeSummary.id);
            }
        };
        PayeeSummaryViewComponent.prototype.onNavigateToPayments = function (resolve) {
            if (resolve) {
                this.gotoPaymentsList();
            }
            this.closeNavigateModal();
        };
        PayeeSummaryViewComponent.prototype.selectedDeletePayee = function () {
            return this.selectedDeletePayeeSource.asObservable();
        };
        PayeeSummaryViewComponent.prototype.handleDeletePayee = function () {
            this.payeeSummary && !this.payeeSummary.nextPayment ? this.openDeleteModal() : this.openNavigateModal();
            this.selectedDeletePayeeSource.next(this.payeeSummary);
        };
        PayeeSummaryViewComponent.prototype.openNavigateModal = function () {
            this.isNavigateModalOpened = true;
        };
        PayeeSummaryViewComponent.prototype.closeNavigateModal = function () {
            this.isNavigateModalOpened = false;
        };
        PayeeSummaryViewComponent.prototype.openDeleteModal = function () {
            this.isDeleteModalOpened = true;
        };
        PayeeSummaryViewComponent.prototype.closeDeleteModal = function () {
            this.isDeleteModalOpened = false;
        };
        PayeeSummaryViewComponent.prototype.onDeletePayee = function (resolve) {
            var _this = this;
            this.closeDeleteModal();
            if (resolve && this.payeeSummary) {
                this.payeeSummaryService
                    .deletePayee(this.payeeSummary.id, this.payeeSummary.electronic)
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function () {
                    _this.deletionNotify();
                });
                this.gotoPayeeList();
            }
        };
        PayeeSummaryViewComponent.prototype.deletionNotify = function () {
            this.notificationService.showNotification({
                header: this.notificationHeaderTemplate,
                message: this.notificationMessageTemplate,
                modifier: 'success',
                ttl: this.dismissTimeoutValue,
            });
        };
        Object.defineProperty(PayeeSummaryViewComponent.prototype, "dismissTimeoutValue", {
            get: function () {
                if (this.config.notificationDismissTime === undefined) {
                    throw new Error('Dismiss timeout value not found');
                }
                return this.config.notificationDismissTime;
            },
            enumerable: false,
            configurable: true
        });
        PayeeSummaryViewComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        PayeeSummaryViewComponent.prototype.updatePayee = function () {
            var _this = this;
            if (this.payeeSummaries) {
                this.payeeSummary = this.payeeSummaries[this.payeeIndex];
                if (this.payeeSummary && !this.payeeSummary.electronic) {
                    this.payeeSummaryService
                        .getFullSummary(this.payeeSummary.id)
                        .pipe(operators.takeUntil(this.destroy$))
                        .subscribe(function (payee) {
                        _this.fullManualPayeeSummary = payee;
                        _this.cdRef.detectChanges();
                    });
                }
                else {
                    this.fullManualPayeeSummary = undefined;
                    this.cdRef.detectChanges();
                }
            }
        };
        PayeeSummaryViewComponent.prototype.nextPayee = function () {
            ++this.payeeIndex;
            this.updatePayee();
        };
        PayeeSummaryViewComponent.prototype.previousPayee = function () {
            --this.payeeIndex;
            this.updatePayee();
        };
        Object.defineProperty(PayeeSummaryViewComponent.prototype, "currentLoadingState", {
            get: function () {
                return this.payeeSummaryService.payeesSummaryLoadingState;
            },
            enumerable: false,
            configurable: true
        });
        return PayeeSummaryViewComponent;
    }());
    PayeeSummaryViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PayeeSummaryViewComponent, deps: [{ token: ManagePayeesNavigationService }, { token: i1__namespace.ActivatedRoute }, { token: ManagePayeesJourneyConfigService }, { token: BillpayPayeeSummaryWidgetService }, { token: i5__namespace$2.NotificationService }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    PayeeSummaryViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PayeeSummaryViewComponent, selector: "bb-billpay-payee-details-view", viewQueries: [{ propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }, { propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }], ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--lg\">\n  <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"gotoPayeeList()\">\n    <bb-icon-ui name=\"arrow-back\" size=\"md\"></bb-icon-ui>\n    <span i18n=\"button label|Back button@@billpay-payees-journey.payee-summary.back\">Back to Payee List</span>\n  </button>\n  <bb-header-ui headingType=\"h1\" [heading]=\"'Payee summary'\" i18n-heading=\"@@billpay-payees-journey.add-payee\">\n  </bb-header-ui>\n</div>\n\n<ng-template #notificationMessage>\n  <div>\n    <div>\n      <span\n        i18n=\"\n          delete payee notification message|Payee delete confirmation success notification\n          message@@billpay-payee-summary.delete-payee-confirm.notification.message\"\n        >The payee\n        {{ payeeSummary.nickName ? payeeSummary.nickName + ' (' + payeeSummary.name + ')' : payeeSummary.name }} has\n        been deleted successfully</span\n      >\n    </div>\n  </div>\n</ng-template>\n\n <ng-container *ngIf=\"payees$ | async as allPayees\">\n  <ng-container *ngIf=\"payeeSummary; else emptyState\">\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <div class=\"bb-block bb-block--md\">\n          <bb-billpay-payee-stepper\n            [index]=\"payeeIndex\"\n            [size]=\"allPayees.length\"\n            (nextPayee)=\"nextPayee()\"\n            (previousPayee)=\"previousPayee()\"\n          >\n          </bb-billpay-payee-stepper>\n        </div>\n        <div class=\"bb-block bb-block--lg\">\n          <bb-header-ui\n            headingType=\"h2\"\n            *ngIf=\"payeeSummary.nickName || payeeSummary.name\"\n            data-role=\"full-summary-payee-name-primary\"\n            heading=\"{{ payeeSummary.nickName || payeeSummary.name }}\"\n          >\n          </bb-header-ui>\n          <div\n            class=\"bb-highlight\"\n            *ngIf=\"payeeSummary.nickName && payeeSummary.name\"\n            data-role=\"full-summary-payee-name-secondary\"\n          >\n            {{ payeeSummary.name }}\n          </div>\n        </div>\n\n        <bb-billpay-payee-information\n          [payeeSummary]=\"payeeSummary\"\n          [fullPayee]=\"fullManualPayeeSummary\"\n          (editPayee)=\"handleEditPayee()\"\n          (deletePayee)=\"handleDeletePayee()\"\n        >\n        </bb-billpay-payee-information>\n\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            bbButton\n            (click)=\"gotoOneOffPayment(payeeSummary)\"\n            data-role=\"make-payment-from-summary-payee-button\"\n            color=\"primary\"\n            class=\"bb-button-bar__button\"\n            i18n=\"\n              Make a payment button|Text for the make a payment vie full summary\n              button@@bb-billpay-view-payee-full-summary.button.make-payment\"\n          >\n            Make a payment\n          </button>\n        </div>\n\n        <bb-billpay-payee-delete-modal\n          *ngIf=\"isDeleteModalOpened\"\n          (resolve)=\"onDeletePayee($event)\"\n        ></bb-billpay-payee-delete-modal>\n\n        <bb-billpay-payee-navigate-modal\n          *ngIf=\"isNavigateModalOpened\"\n          (resolve)=\"onNavigateToPayments($event)\"\n        ></bb-billpay-payee-navigate-modal>\n      </div>\n    </div>\n  </ng-container>\n</ng-container> \n\n<ng-container *ngIf=\"currentLoadingState | async as currentLoadingState\">\n  <ng-container *ngIf=\"currentLoadingState === 'loading'\">\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"currentLoadingState === 'error'\">\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"error-outline\"\n          subtitle=\"Try to reload the page or contact support\"\n          i18n-subtitle=\"\n            Try to reload the page or contact support|Payee Summary error loading\n            subtitle@@bb-billpay-payee-summary-widget-ang.loading.subtitle\"\n          title=\"Could not fetch payee details\"\n          i18n-title=\"\n            Could not fetch payee details|Payee Summary error loading\n            title@@bb-billpay-payee-summary-widget-ang.loading.title\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        data-role=\"empty-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"assignment-ind\"\n        subtitle=\"Add a payee to make a bill payment\"\n        i18n-subtitle=\"\n          Add a payee to make a bill payment|Payee Summary no payees\n          subtitle@@bb-billpay-payee-summary-widget-ang.bb-empty-state-ui.subtitle\"\n        title=\"No payees\"\n        i18n-title=\"\n          No payees state text|Payee Summary no payees\n          title@@bb-billpay-payee-summary-widget-ang.bb-empty-state-ui.title\"\n      >\n      </bb-empty-state-ui>\n      <div class=\"bb-state-container__footer\">\n        <button\n          bbButton\n          data-role=\"empty-state-add-payee-btn\"\n          (click)=\"gotoAddPayee()\"\n          i18n=\"\n            Add a payee|Payee Summary add payee\n            button@@bb-billpay-payee-summary-widget-ang.bb-empty-state-ui.button.add-payee\"\n        >\n          Add a payee\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <div>\n    <span\n      i18n=\"\n        delete payee notification header|Payee delete confirmation success notification\n        header@@billpay-payee-summary.confirm.notification.header\"\n      >Payee deleted</span\n    >\n  </div>\n</ng-template>\n", components: [{ type: i4__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: BillpayPayeeStepperComponent, selector: "bb-billpay-payee-stepper", inputs: ["index", "size"], outputs: ["nextPayee", "previousPayee"] }, { type: BillpayPayeeInformationComponent, selector: "bb-billpay-payee-information", inputs: ["payeeSummary", "fullPayee"], outputs: ["editPayee", "deletePayee"] }, { type: i4__namespace.ӨBillpayPayeeDeleteModalComponent, selector: "bb-billpay-payee-delete-modal", outputs: ["resolve"] }, { type: i4__namespace.ӨBillpayPayeeNavigateModalComponent, selector: "bb-billpay-payee-navigate-modal", outputs: ["resolve"] }, { type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i10__namespace$1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: PayeeSummaryViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-details-view',
                        templateUrl: './billpay-payee-summary-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ManagePayeesNavigationService }, { type: i1__namespace.ActivatedRoute }, { type: ManagePayeesJourneyConfigService }, { type: BillpayPayeeSummaryWidgetService }, { type: i5__namespace$2.NotificationService }, { type: i0__namespace.ChangeDetectorRef }]; }, propDecorators: { notificationMessageTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationMessage']
                }], notificationHeaderTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationHeader']
                }] } });

    exports.PayverisEnrolmentState = void 0;
    (function (PayverisEnrolmentState) {
        PayverisEnrolmentState[PayverisEnrolmentState["Initialize"] = 0] = "Initialize";
        PayverisEnrolmentState[PayverisEnrolmentState["Login"] = 1] = "Login";
        PayverisEnrolmentState[PayverisEnrolmentState["SelectBiller"] = 2] = "SelectBiller";
        PayverisEnrolmentState[PayverisEnrolmentState["OtpSelect"] = 3] = "OtpSelect";
        PayverisEnrolmentState[PayverisEnrolmentState["OtpEntry"] = 4] = "OtpEntry";
        PayverisEnrolmentState[PayverisEnrolmentState["Callback"] = 5] = "Callback";
        PayverisEnrolmentState[PayverisEnrolmentState["Captcha"] = 6] = "Captcha";
        PayverisEnrolmentState[PayverisEnrolmentState["Mfa"] = 7] = "Mfa";
        PayverisEnrolmentState[PayverisEnrolmentState["SelectAccounts"] = 8] = "SelectAccounts";
        PayverisEnrolmentState[PayverisEnrolmentState["Success"] = 9] = "Success";
        PayverisEnrolmentState[PayverisEnrolmentState["ErrorState"] = 10] = "ErrorState";
        PayverisEnrolmentState[PayverisEnrolmentState["Undefined"] = 11] = "Undefined";
    })(exports.PayverisEnrolmentState || (exports.PayverisEnrolmentState = {}));
    exports.PayverisEnrolmentComponentState = void 0;
    (function (PayverisEnrolmentComponentState) {
        PayverisEnrolmentComponentState[PayverisEnrolmentComponentState["Undefined"] = 0] = "Undefined";
        PayverisEnrolmentComponentState[PayverisEnrolmentComponentState["Ready"] = 1] = "Ready";
        PayverisEnrolmentComponentState[PayverisEnrolmentComponentState["Checking"] = 2] = "Checking";
        PayverisEnrolmentComponentState[PayverisEnrolmentComponentState["Callback"] = 3] = "Callback";
    })(exports.PayverisEnrolmentComponentState || (exports.PayverisEnrolmentComponentState = {}));

    var BillpayManagePayeeStateService = /** @class */ (function () {
        function BillpayManagePayeeStateService() {
            this.manualPayeeStateSource$ = new rxjs.BehaviorSubject(undefined);
            this.manualPayeeFormState = this.manualPayeeStateSource$.asObservable();
            this.electronicPayeeStateSource = new rxjs.BehaviorSubject(undefined);
            this.electronicPayeeFormState = this.electronicPayeeStateSource.asObservable();
            this.isFormProcessing = false;
        }
        BillpayManagePayeeStateService.prototype.setManualPayee = function (state) {
            this.manualPayeeStateSource$.next(state);
        };
        BillpayManagePayeeStateService.prototype.toManualFormState = function (data) {
            return Object.assign(Object.assign({ name: data.name, address: data.address, phoneNumber: data.phoneNumber || '' }, (data.accountNumber && { accountNumber: data.accountNumber })), (data.nickName && { nickName: data.nickName }));
        };
        BillpayManagePayeeStateService.prototype.resetManualPayee = function () {
            this.setManualPayee();
        };
        BillpayManagePayeeStateService.prototype.setElectronicPayee = function (state) {
            this.electronicPayeeStateSource.next(state);
        };
        BillpayManagePayeeStateService.prototype.resetElectronicPayee = function () {
            this.setElectronicPayee();
        };
        BillpayManagePayeeStateService.prototype.electronicGetResponseToForm = function (payeeResponse) {
            var _a = payeeResponse.payee, name = _a.name, nickName = _a.nickName, accountNumber = _a.accountNumber;
            return {
                name: name,
                nickName: nickName,
                accountNumber: accountNumber,
            };
        };
        return BillpayManagePayeeStateService;
    }());
    BillpayManagePayeeStateService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeStateService, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    BillpayManagePayeeStateService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeStateService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeStateService, decorators: [{
                type: i0.Injectable
            }] });

    var BaseElectronicPayeeReviewPageModelDirective$1 = /** @class */ (function () {
        /** @internal */
        function BaseElectronicPayeeReviewPageModelDirective(route, stateService, discardModalService) {
            this.route = route;
            this.stateService = stateService;
            this.discardModalService = discardModalService;
            this.destroy$ = new rxjs.Subject();
            this.payee$ = this.stateService.electronicPayeeFormState.pipe(operators.take(1), operators.shareReplay(1));
            this.id$ = this.route.paramMap.pipe(operators.take(1), operators.map(function (params) { return params.get('id') || ''; }));
        }
        BaseElectronicPayeeReviewPageModelDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.payee$
                .pipe(operators.filter(function (payee) { return !payee; }), operators.switchMap(function () { return _this.id$; }))
                .subscribe(function (id) {
                _this.navigateBack(id);
            });
            this.payeeSubmit$.pipe(operators.takeUntil(this.destroy$), operators.filter(Boolean)).subscribe(function (payee) { return _this.onSubmitPayee(payee); });
        };
        BaseElectronicPayeeReviewPageModelDirective.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        BaseElectronicPayeeReviewPageModelDirective.prototype.onWindowUnload = function ($event) {
            if (!this.isDiscardModalOpen) {
                $event.returnValue = true;
            }
        };
        Object.defineProperty(BaseElectronicPayeeReviewPageModelDirective.prototype, "isDiscardModalOpen", {
            get: function () {
                return this.discardModalService.isDiscardModalOpen;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseElectronicPayeeReviewPageModelDirective.prototype, "dismissTimeout", {
            get: function () {
                if (this.dismissTimeoutValue === undefined) {
                    throw new Error('Dismiss timeout value not found');
                }
                return this.dismissTimeoutValue;
            },
            enumerable: false,
            configurable: true
        });
        BaseElectronicPayeeReviewPageModelDirective.prototype.openModal = function () {
            var _this = this;
            return this.payeeSubmit$.pipe(operators.switchMap(function (payee) { return (payee ? rxjs.of(true) : _this.discardModalService.openModal()); }), operators.tap(function (isResolved) { return isResolved && _this.stateService.resetElectronicPayee(); }));
        };
        BaseElectronicPayeeReviewPageModelDirective.prototype.onModalResolve = function (resolvedWith) {
            this.discardModalService.onModalResolve(resolvedWith);
        };
        return BaseElectronicPayeeReviewPageModelDirective;
    }());
    BaseElectronicPayeeReviewPageModelDirective$1.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BaseElectronicPayeeReviewPageModelDirective$1, deps: [{ token: i1__namespace.ActivatedRoute }, { token: BillpayManagePayeeStateService }, { token: i4__namespace.BillpayDiscardChangesModalService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    BaseElectronicPayeeReviewPageModelDirective$1.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: BaseElectronicPayeeReviewPageModelDirective$1, inputs: { dismissTimeoutValue: "dismissTimeoutValue" }, host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BaseElectronicPayeeReviewPageModelDirective$1, decorators: [{
                type: i0.Directive
            }], ctorParameters: function () { return [{ type: i1__namespace.ActivatedRoute }, { type: BillpayManagePayeeStateService }, { type: i4__namespace.BillpayDiscardChangesModalService }]; }, propDecorators: { dismissTimeoutValue: [{
                    type: i0.Input
                }], onWindowUnload: [{
                    type: i0.HostListener,
                    args: ['window:beforeunload', ['$event']]
                }] } });

    var BaseElectronicPayeePageDirective = /** @class */ (function () {
        /** @internal */
        function BaseElectronicPayeePageDirective(route, stateService, discardModalService) {
            this.route = route;
            this.stateService = stateService;
            this.discardModalService = discardModalService;
            this.isFormTouched = false;
            this.destroy$ = new rxjs.Subject();
            this.isFindPayeeModal = false;
            this.id$ = this.route.paramMap.pipe(operators.take(1), operators.map(function (params) { return params.get('id') || ''; }));
            this.payeeState$ = this.stateService.electronicPayeeFormState.pipe(operators.take(1), operators.shareReplay(1));
        }
        BaseElectronicPayeePageDirective.prototype.onWindowUnload = function ($event) {
            var _this = this;
            this.payeeState$.subscribe(function (state) {
                if ((state || _this.isFormTouched) && !_this.isDiscardModalOpen) {
                    $event.returnValue = true;
                }
            });
        };
        Object.defineProperty(BaseElectronicPayeePageDirective.prototype, "isDiscardModalOpen", {
            get: function () {
                return this.discardModalService.isDiscardModalOpen;
            },
            enumerable: false,
            configurable: true
        });
        BaseElectronicPayeePageDirective.prototype.onFormValueChanged = function () {
            this.isFormTouched = true;
        };
        BaseElectronicPayeePageDirective.prototype.openModal = function () {
            var _this = this;
            var openModal = function () { return _this.discardModalService
                .openModal()
                .pipe(operators.tap(function (isResolved) { return isResolved && _this.stateService.resetElectronicPayee(); })); };
            return this.payeeState$.pipe(operators.switchMap(function (payeeState) { return (payeeState || _this.isFormTouched ? openModal() : rxjs.of(true)); }), operators.takeUntil(this.destroy$));
        };
        BaseElectronicPayeePageDirective.prototype.onModalResolve = function (resolvedWith) {
            this.isFindPayeeModal = false;
            this.discardModalService.onModalResolve(resolvedWith);
        };
        BaseElectronicPayeePageDirective.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        return BaseElectronicPayeePageDirective;
    }());
    BaseElectronicPayeePageDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BaseElectronicPayeePageDirective, deps: [{ token: i1__namespace.ActivatedRoute }, { token: BillpayManagePayeeStateService }, { token: i4__namespace.BillpayDiscardChangesModalService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    BaseElectronicPayeePageDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: BaseElectronicPayeePageDirective, host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BaseElectronicPayeePageDirective, decorators: [{
                type: i0.Directive
            }], ctorParameters: function () { return [{ type: i1__namespace.ActivatedRoute }, { type: BillpayManagePayeeStateService }, { type: i4__namespace.BillpayDiscardChangesModalService }]; }, propDecorators: { onWindowUnload: [{
                    type: i0.HostListener,
                    args: ['window:beforeunload', ['$event']]
                }] } });

    var BillpayPayverisEbillsEnrolmentWidgetService = /** @class */ (function () {
        /** @internal */
        function BillpayPayverisEbillsEnrolmentWidgetService(payverisData, payeesData) {
            var _this = this;
            this.payverisData = payverisData;
            this.payeesData = payeesData;
            this.widgetStateSource = new rxjs.Subject();
            this._currentState = exports.PayverisEnrolmentState.Initialize;
            this._componentState = exports.PayverisEnrolmentComponentState.Undefined;
            this._userInputFailed = false;
            this._responses = {};
            this._expectingLoginResponse = true;
            this._expectingOtpEntryResponse = false;
            this._MIN_CALLBACK_TIME = 1;
            this.widgetStateChange = this.widgetStateSource.asObservable();
            this.credentialsResponse = function (value) {
                _this._responses.credentialsResponse = value;
            };
            this._payload = {
                payeeID: this._payeeId,
                credentials: [],
            };
        }
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.submitPayverisRequest = function (payload) {
            var _this = this;
            this._componentState = exports.PayverisEnrolmentComponentState.Checking;
            this._userInputFailed = false;
            return this.payverisData
                .postBillPayPayverisEbillsEnrolment({ billPayPayverisEbillsEnrolmentPostRequestBody: payload }, 'response')
                .pipe(operators.catchError(function (err) {
                _this.handleError(err);
                return new rxjs.Observable();
            }));
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.getPayeeNameFromID = function (id) {
            return this.payeesData.getElectronicPayeeById({ id: id }).pipe(operators.pluck('payee', 'name'));
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.onInitializeEnrolment = function () {
            var _this = this;
            if (this._payeeId) {
                this._payload = {
                    payeeID: this._payeeId,
                    credentials: [],
                };
            }
            else {
                this.handleError(undefined);
                return false;
            }
            this.submitPayverisRequest(this._payload).subscribe(function (response) {
                _this.handleStatusResponse(response);
            });
            return true;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleStatusResponse = function (response) {
            if (this.isBillersResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.SelectBiller, response, 'billersResponse');
            }
            if (this.isSelectAccountResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.SelectAccounts, response, 'accountsResponse');
            }
            if (this.isOtpSelectResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.OtpSelect, response, 'otpTransportResponse');
            }
            if (this.isCaptchaResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.Captcha, response, 'captchaResponse');
            }
            if (this.isCredentialsResponse(response)) {
                return this.handleCredentialsOnStatusResponse(response);
            }
            if (this.isCallbackResponse(response)) {
                return this.handleCallbackResponse(response);
            }
            if (this.isSuccessResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.Success);
            }
            this.handleError(undefined);
            return false;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleCredentialsOnStatusResponse = function (response) {
            if (this._expectingLoginResponse) {
                this._expectingLoginResponse = false;
                return this.setState(exports.PayverisEnrolmentState.Login, response, 'credentialsResponse');
            }
            if (this._expectingOtpEntryResponse) {
                this._expectingOtpEntryResponse = false;
                return this.setState(exports.PayverisEnrolmentState.OtpEntry, response, 'otpPasscodeResponse');
            }
            return this.setState(exports.PayverisEnrolmentState.Mfa, response, 'mfaResponse');
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.onSubmitBillerSelection = function (billerSelectedIndex) {
            var _this = this;
            var billerSelected = this.billers ? this.billers[billerSelectedIndex] : {};
            this._payload = {
                payeeID: this._payeeId,
                biller: billerSelected,
                credentials: [],
            };
            this.submitPayverisRequest(this._payload).subscribe(function (response) {
                _this.handleBillerResponse(response);
            });
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleBillerResponse = function (response) {
            if (this.isCredentialsResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.Login, response, 'credentialsResponse');
            }
            if (this.isCallbackResponse(response)) {
                return this.handleCallbackResponse(response);
            }
            this.handleError(undefined);
            return false;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.onSubmitPayeeLogin = function (login) {
            var _this = this;
            var _a;
            if (login && this.loginCredentialsArray && this.loginCredentialsArray.length >= 2) {
                var credentials = (_a = this.loginCredentialsArray) === null || _a === void 0 ? void 0 : _a.map(function (credentials, i) {
                    return Object.assign(Object.assign({}, credentials), { value: login[i] });
                });
                this._payload = {
                    payeeID: this._payeeId,
                    credentials: credentials,
                };
            }
            else {
                this.handleError(undefined);
            }
            this.submitPayverisRequest(this._payload).subscribe(function (response) {
                _this.handleCredentialResponse(response);
            });
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleCredentialResponse = function (response) {
            if (this.isOtpSelectResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.OtpSelect, response, 'otpTransportResponse');
            }
            if (this.isCaptchaResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.Captcha, response, 'captchaResponse');
            }
            if (this.isCredentialsResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.Mfa, response, 'mfaResponse');
            }
            if (this.isSelectAccountResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.SelectAccounts, response, 'accountsResponse');
            }
            if (this.isCallbackResponse(response)) {
                return this.handleCallbackResponse(response);
            }
            this.handleError(undefined);
            return false;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.onSubmitPayverisEbillMfa = function () {
            var _this = this;
            this._payload = {
                payeeID: this._payeeId,
                credentials: this.mfaArray || [],
            };
            this.submitPayverisRequest(this._payload).subscribe(function (response) {
                _this.handleMfaResponse(response);
            });
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleMfaResponse = function (response) {
            if (this.isCredentialsResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.Mfa, response, 'mfaResponse');
            }
            if (this.isSelectAccountResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.SelectAccounts, response, 'accountsResponse');
            }
            if (this.isCallbackResponse(response)) {
                return this.handleCallbackResponse(response);
            }
            this.handleError(undefined);
            return false;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.onSubmitPayverisEbillOtpTransportSelection = function (transportSelectedIndex) {
            var _this = this;
            this._expectingOtpEntryResponse = true;
            var transportSelected = this.otpTransports ? this.otpTransports[transportSelectedIndex] : {};
            this._otpTransportMethodSelected = transportSelected.value;
            var label = this.getLabelFromResponse(this._responses['otpTransportResponse']);
            var selection = {
                label: label,
                value: transportSelected.id,
            };
            this._payload = {
                payeeID: this._payeeId,
                credentials: [selection],
            };
            this.submitPayverisRequest(this._payload).subscribe(function (response) {
                _this.handleOtpTransportResponse(response);
            });
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleOtpTransportResponse = function (response) {
            if (this.isCredentialsResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.OtpEntry, response, 'otpPasscodeResponse');
            }
            if (this.isCallbackResponse(response)) {
                return this.handleCallbackResponse(response);
            }
            this.handleError(undefined);
            return false;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.onSubmitPayverisEbillPayeeOtpPasscode = function (passcode) {
            this.submitVerificationStep(this._responses['otpPasscodeResponse'], passcode.passcode);
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.onSubmitPayverisEbillPayeeCaptcha = function (captcha) {
            this.submitVerificationStep(this._responses['captchaResponse'], captcha.captcha);
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.submitVerificationStep = function (previousResponse, credentialValue) {
            var _this = this;
            this._payload = this.prepareCredentialPayload(previousResponse, credentialValue);
            this.submitPayverisRequest(this._payload).subscribe(function (response) {
                _this.handleVerificationResponse(response);
            });
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.prepareCredentialPayload = function (response, credentialValue) {
            var label = this.getLabelFromResponse(response);
            var selection = {
                label: label,
                value: credentialValue,
            };
            return {
                payeeID: this.payeeId,
                credentials: [selection],
            };
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleVerificationResponse = function (response) {
            if (this.isSelectAccountResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.SelectAccounts, response, 'accountsResponse');
            }
            if (this.isCallbackResponse(response)) {
                return this.handleCallbackResponse(response);
            }
            this.handleError(undefined);
            return false;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.cancelEnrolment = function () {
            return this.payverisData.deleteBillPayPayverisEbillsEnrolment(this._payload);
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.onSubmitPayverisEbillAccountSelection = function (accountSelectedIndex) {
            var _this = this;
            var accountSelected = this.accounts ? this.accounts[accountSelectedIndex] : undefined;
            this._payload = {
                payeeID: this._payeeId,
                account: accountSelected,
                credentials: [],
            };
            this.submitPayverisRequest(this._payload).subscribe(function (response) {
                _this.handleAccountsResponse(response);
            });
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleAccountsResponse = function (response) {
            if (this.isCallbackResponse(response)) {
                return this.handleCallbackResponse(response);
            }
            if (this.isSuccessResponse(response)) {
                return this.setState(exports.PayverisEnrolmentState.Success, response, 'successResponse');
            }
            this.handleError(undefined);
            return false;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleCallbackResponse = function (response) {
            var _this = this;
            var callbackTime = i4.BillpayUtilityService.checkForProperty('body.callBackTime', response) || 0;
            var callbackTimeInMs = Math.max(new Date(callbackTime).getTime() - new Date().getTime(), this._MIN_CALLBACK_TIME);
            this.timer = setTimeout(function () {
                _this.onInitializeEnrolment();
            }, callbackTimeInMs);
            this._componentState = exports.PayverisEnrolmentComponentState.Callback;
            this.widgetStateSource.next();
            return true;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.cancelCallback = function () {
            if (this.timer) {
                clearTimeout(this.timer);
            }
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.setState = function (state, response, responseToSet) {
            this._currentState = state;
            this._componentState = exports.PayverisEnrolmentComponentState.Ready;
            if (responseToSet) {
                this._responses[responseToSet] = i4.BillpayUtilityService.checkForProperty('body', response);
            }
            this.widgetStateSource.next();
            return true;
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.handleError = function (error) {
            this._errorState = i4.BillpayUtilityService.checkForProperty(['error', 'errors', 0, 'key'], error);
            if (this._errorState === 'billpay.api.invalidCredentials') {
                this._userInputFailed = true;
                this._componentState = exports.PayverisEnrolmentComponentState.Ready;
                this.widgetStateSource.next();
            }
            else {
                this.setState(exports.PayverisEnrolmentState.ErrorState);
            }
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.isCredentialsResponse = function (response) {
            return !!(response.status === 200 && i4.BillpayUtilityService.checkForProperty('body.authentication.credentials.length', response) > 0);
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.isBillersResponse = function (response) {
            return !!(response.status === 200 && i4.BillpayUtilityService.checkForProperty('body.billers.length', response) > 0);
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.isCallbackResponse = function (response) {
            var accounts = i4.BillpayUtilityService.checkForProperty('body.accounts', response);
            return !!(response.status === 200 &&
                (!accounts || accounts.length === 0) &&
                i4.BillpayUtilityService.checkForProperty('body.callBackRequired', response) &&
                i4.BillpayUtilityService.checkForProperty('body.callBackTime', response));
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.isSelectAccountResponse = function (response) {
            return !!(response.status === 200 && i4.BillpayUtilityService.checkForProperty('body.accounts.length', response) >= 1);
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.isOtpSelectResponse = function (response) {
            return !!(response.status === 200 &&
                i4.BillpayUtilityService.checkForProperty('body.authentication.securityChallenge.oneTimePasscode', response));
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.isCaptchaResponse = function (response) {
            return !!(response.status === 200 &&
                i4.BillpayUtilityService.checkForProperty('body.authentication.securityChallenge.captcha', response) &&
                i4.BillpayUtilityService.checkForProperty('body.authentication.credentials', response));
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.isSuccessResponse = function (response) {
            return !!(response.status === 200 && i4.BillpayUtilityService.checkForProperty('body.payeeID', response));
        };
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.getLabelFromResponse = function (response) {
            return i4.BillpayUtilityService.checkForProperty(['authentication', 'credentials', 0, 'label'], response);
        };
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "payeeId", {
            get: function () {
                return this._payeeId;
            },
            set: function (value) {
                this._payeeId = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "currentState", {
            get: function () {
                return this._currentState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "errorState", {
            get: function () {
                return this._errorState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "componentState", {
            get: function () {
                return this._componentState;
            },
            set: function (value) {
                this._componentState = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "userInputFailed", {
            get: function () {
                return this._userInputFailed;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "loginCredentialsArray", {
            get: function () {
                return i4.BillpayUtilityService.checkForProperty('credentialsResponse.authentication.credentials', this._responses) || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "mfaArray", {
            get: function () {
                return i4.BillpayUtilityService.checkForProperty('mfaResponse.authentication.credentials', this._responses) || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "billers", {
            get: function () {
                return i4.BillpayUtilityService.checkForProperty('billersResponse.billers', this._responses) || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "accounts", {
            get: function () {
                return i4.BillpayUtilityService.checkForProperty('accountsResponse.accounts', this._responses) || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "otpTransportMethodSelected", {
            get: function () {
                return this._otpTransportMethodSelected;
            },
            enumerable: false,
            configurable: true
        });
        BillpayPayverisEbillsEnrolmentWidgetService.prototype.checkForPropertyWrapper = function (propertyBranch) {
            return i4.BillpayUtilityService.checkForProperty(propertyBranch, this._responses);
        };
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "otpTransports", {
            get: function () {
                return this.checkForPropertyWrapper('otpTransportResponse.authentication.securityChallenge.oneTimePasscode.deliveryMethods');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "captchaImageSrc", {
            get: function () {
                return this.checkForPropertyWrapper('captchaResponse.authentication.securityChallenge.captcha.image');
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BillpayPayverisEbillsEnrolmentWidgetService.prototype, "captchaImageType", {
            get: function () {
                return this.checkForPropertyWrapper('captchaResponse.authentication.securityChallenge.captcha.mimeType');
            },
            enumerable: false,
            configurable: true
        });
        return BillpayPayverisEbillsEnrolmentWidgetService;
    }());
    BillpayPayverisEbillsEnrolmentWidgetService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentWidgetService, deps: [{ token: i1__namespace$2.BillPayPayverisService }, { token: i1__namespace$2.BillPayPayeesService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    BillpayPayverisEbillsEnrolmentWidgetService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentWidgetService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentWidgetService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$2.BillPayPayverisService }, { type: i1__namespace$2.BillPayPayeesService }]; } });

    var BillpayPayverisEbillsEnrolmentCancelModalComponent = /** @class */ (function () {
        function BillpayPayverisEbillsEnrolmentCancelModalComponent() {
            this.resolve = new i0.EventEmitter();
        }
        BillpayPayverisEbillsEnrolmentCancelModalComponent.prototype.cancelModal = function () {
            this.resolve.emit(false);
        };
        BillpayPayverisEbillsEnrolmentCancelModalComponent.prototype.confirmModal = function () {
            this.resolve.emit(true);
        };
        return BillpayPayverisEbillsEnrolmentCancelModalComponent;
    }());
    BillpayPayverisEbillsEnrolmentCancelModalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentCancelModalComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentCancelModalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: { resolve: "resolve" }, ngImport: i0__namespace, template: "<bb-modal-ui\n  [isOpen]=\"true\"\n  (cancel)=\"cancelModal()\"\n  (confirm)=\"confirmModal()\"\n  data-role=\"cancel-payveris-enrolment-modal\"\n>\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        headingType=\"h2\"\n        heading=\"Cancel eBill enrolment?\"\n        i18n-heading=\"\n          Cancel eBill enrolment modal header|Header on cancel eBill enrolment modal in payveris ebill enrolment form\n          @@bb-billpay-payveris-ebills-enrolment.modal-header.cancel-enrolment\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span\n        i18n=\"\n          Cancel eBill enrolment modal body|Body on cancel eBill enrolment modal in payveris ebill enrolment form\n          @@bb-billpay-payveris-ebills-enrolment.modal-body.cancel-enrolment\"\n        >Are you sure you want to cancel eBill enrolment? You will lose any details entered.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          (click)=\"confirmModal()\"\n          color=\"danger\"\n          data-role=\"payveris-payee-cancel-enrollment-confirm\"\n          i18n=\"\n            Submit button text|Submit button on cancel eBill enrolment modal in payveris ebill enrolment\n            form@@bb-billpay-payveris-ebills-enrolment.button.composeMessageModal.submitButton\"\n        >\n          Cancel eBill enrolment\n        </button>\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          (click)=\"cancelModal()\"\n          color=\"secondary\"\n          data-role=\"payveris-payee-continue-enrollment-confirm\"\n          i18n=\"\n            Cancel button text|Cancel button on cancel eBill enrolment modal in payveris ebill enrolment\n            form@@bb-billpay-payveris-ebills-enrolment.button..composeMessageModal.cancelButton\"\n        >\n          Continue eBill enrolment\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$4.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$4.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$4.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$4.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$4.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1__namespace$4.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$4.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentCancelModalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-cancel-modal',
                        templateUrl: './billpay-payveris-ebills-enrolment-cancel-modal.component.html',
                    }]
            }], propDecorators: { resolve: [{
                    type: i0.Output
                }] } });

    var BillpayPayverisEbillsEnrolmentSelectBillerComponent = /** @class */ (function () {
        function BillpayPayverisEbillsEnrolmentSelectBillerComponent() {
            /**
             * Array of applicable payee eBillers to pay.
             */
            this.billers = [];
            /**
             * The current state of the component. Controls loaded elements.
             */
            this.componentState = exports.PayverisEnrolmentComponentState.Undefined;
            this.billerSelect = new i0.EventEmitter();
            this.returnToPayeeList = new i0.EventEmitter();
            this.submitted = false;
            this.selectingBiller = false;
            this.cancelModalOpen = false;
            this.ComponentStates = exports.PayverisEnrolmentComponentState;
        }
        BillpayPayverisEbillsEnrolmentSelectBillerComponent.prototype.ngOnInit = function () {
            if (this.billers && this.billers.length === 1) {
                this.billerSelectedIndex = 0;
            }
        };
        BillpayPayverisEbillsEnrolmentSelectBillerComponent.prototype.onSelectBillerSubmit = function () {
            this.submitted = true;
            if (this.billerSelectedIndex !== undefined) {
                this.selectingBiller = true;
                this.billerSelect.emit(this.billerSelectedIndex);
            }
        };
        BillpayPayverisEbillsEnrolmentSelectBillerComponent.prototype.noSelectionMade = function () {
            return this.billerSelectedIndex === undefined;
        };
        BillpayPayverisEbillsEnrolmentSelectBillerComponent.prototype.onModalResolve = function (operationCancelled) {
            this.cancelModalOpen = false;
            if (operationCancelled) {
                this.handleReturnToPayeeList();
            }
        };
        BillpayPayverisEbillsEnrolmentSelectBillerComponent.prototype.handleReturnToPayeeList = function () {
            this.returnToPayeeList.emit();
        };
        return BillpayPayverisEbillsEnrolmentSelectBillerComponent;
    }());
    BillpayPayverisEbillsEnrolmentSelectBillerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentSelectBillerComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentSelectBillerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentSelectBillerComponent, selector: "bb-billpay-payveris-ebills-enrolment-select-biller", inputs: { payeeName: "payeeName", billers: "billers", componentState: "componentState" }, outputs: { billerSelect: "billerSelect", returnToPayeeList: "returnToPayeeList" }, ngImport: i0__namespace, template: "<ng-container [ngSwitch]=\"componentState\">\n  <ng-container *ngSwitchCase=\"ComponentStates.Checking\">\n    <bb-loading-indicator-ui\n      text=\"Checking biller selection...\"\n      i18n-text=\"\n        Checking biller selection|Ebill Payveris Enrolment Widget checking biller selection\n        text@@bb-billpay-payveris-ebills-enrolment-select-biller.checking-biller.text\"\n      loaderSize=\"lg\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Callback\">\n    <bb-loading-indicator-ui\n      text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n      i18n-text=\"\n        eBill enrolment is taking a little longer than usual, please be patient......|Ebill Payveris Enrolment Widget\n        taking longer than usual text@@bb-billpay-ebills-payveris-enrolment-widget-ang.select-biller-call-back.text\"\n      loaderSize=\"lg\"\n      data-role=\"payveris-callback-info\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Ready\">\n    <div\n      id=\"bb-select-biller\"\n      i18n=\"\n        Biller select prompt|Biller select prompt for payveris ebill enrolment biller select form\n        @@bb-billpay-payveris-ebills-enrolment-select-biller.note.biller-select-prompt\"\n    >\n      Select the biller you would like to get eBills for.\n    </div>\n\n    <form name=\"selectBillerForm\" #f=\"ngForm\" (ngSubmit)=\"onSelectBillerSubmit()\">\n      <!-- lg is chosen as the last element of `bb-input-radio-ui` has 8px bottom margin totalling 32px -->\n      <div class=\"bb-block bb-block--lg\">\n        <bb-input-radio-group-ui\n          name=\"billerID\"\n          id=\"billerID\"\n          aria-labelledby=\"bb-select-biller\"\n          [preselect]=\"false\"\n          [required]=\"true\"\n          [(ngModel)]=\"billerSelectedIndex\"\n          #billerID=\"ngModel\"\n          ngDefaultControl\n        >\n          <bb-input-radio-ui *ngFor=\"let biller of billers; let i = index\" value=\"{{ i }}\" label=\"{{ biller.value }}\">\n          </bb-input-radio-ui>\n        </bb-input-radio-group-ui>\n\n        <bb-input-validation-message-ui\n          [showErrors]=\"submitted && noSelectionMade()\"\n          i18n=\"\n            Select biller warning|Warning on payveris ebill enrolment select biller form\n            @@bb-billpay-payveris-ebills-enrolment-select-biller.warning.select-biller-warning\"\n          data-role=\"payveris-payee-select-biller-multiple-no-selection-warning\"\n        >\n          You must select a biller.\n        </bb-input-validation-message-ui>\n      </div>\n\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          i18n=\"\n            Continue from biller selection|Continue from biller selection button on payveris ebill enrolment biller\n            select form @@bb-billpay-payveris-ebills-enrolment-select-biller.button.continue-from-billers\"\n          data-role=\"payveris-payee-select-biller-continue\"\n        >\n          Continue\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          (click)=\"cancelModalOpen = true\"\n          i18n=\"\n            Cancel enrolment multiple billers|Cancel enrolment button on payveris ebill enrolment multiple biller select\n            form @@bb-billpay-payveris-ebills-enrolment-select-biller.button.cancel-enrolment-multiple-billers\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payveris-ebills-enrolment-cancel-modal *ngIf=\"cancelModalOpen\" (resolve)=\"onModalResolve($event)\">\n</bb-billpay-payveris-ebills-enrolment-cancel-modal>\n", components: [{ type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i2__namespace$3.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i2__namespace$3.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1__namespace$5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i5__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentSelectBillerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-select-biller',
                        templateUrl: './billpay-payveris-ebills-enrolment-select-biller.component.html',
                    }]
            }], propDecorators: { payeeName: [{
                    type: i0.Input
                }], billers: [{
                    type: i0.Input
                }], componentState: [{
                    type: i0.Input
                }], billerSelect: [{
                    type: i0.Output
                }], returnToPayeeList: [{
                    type: i0.Output
                }] } });

    var BillpayPayverisEbillsEnrolmentLoginComponent = /** @class */ (function () {
        /** @internal */
        function BillpayPayverisEbillsEnrolmentLoginComponent(formBuilder) {
            this.formBuilder = formBuilder;
            /**
             * The current state of the component. Controls loaded elements.
             */
            this.componentState = exports.PayverisEnrolmentComponentState.Undefined;
            /**
             * Displays elements for a failed submission. Defaults to false.
             */
            this.credentialsFailed = false;
            this.returnToPayeeList = new i0.EventEmitter();
            this.payeeLogin = new i0.EventEmitter();
            this.submitted = false;
            this.cancelModalOpen = false;
            this.ComponentStates = exports.PayverisEnrolmentComponentState;
        }
        BillpayPayverisEbillsEnrolmentLoginComponent.prototype.ngOnInit = function () {
            var _a;
            this.credentialsArray = (_a = this.credentialsArray) === null || _a === void 0 ? void 0 : _a.map(function (credentials) {
                return Object.assign(Object.assign({}, credentials), { additions: Object.assign(Object.assign({}, credentials.additions), { label_text: $localize(templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject(["", ""], ["", ""])), credentials.label) }) });
            });
            this.loginForm = this.formBuilder.group(this.formFields());
        };
        BillpayPayverisEbillsEnrolmentLoginComponent.prototype.formFields = function () {
            var _a;
            var group = {};
            (_a = this.credentialsArray) === null || _a === void 0 ? void 0 : _a.forEach(function (field, i) {
                group[i] = [field.value || '', i1$5.Validators.required];
            });
            return group;
        };
        BillpayPayverisEbillsEnrolmentLoginComponent.prototype.onPayverisLoginSubmit = function () {
            this.submitted = true;
            if (this.loginForm.valid) {
                this.payeeLogin.emit(this.loginForm.value);
            }
        };
        BillpayPayverisEbillsEnrolmentLoginComponent.prototype.onModalResolve = function (operationCancelled) {
            this.cancelModalOpen = false;
            if (operationCancelled) {
                this.handleReturnToPayeeList();
            }
        };
        BillpayPayverisEbillsEnrolmentLoginComponent.prototype.handleReturnToPayeeList = function () {
            this.returnToPayeeList.emit();
        };
        return BillpayPayverisEbillsEnrolmentLoginComponent;
    }());
    BillpayPayverisEbillsEnrolmentLoginComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentLoginComponent, deps: [{ token: i1__namespace$5.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentLoginComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentLoginComponent, selector: "bb-billpay-payveris-ebills-enrolment-login", inputs: { payeeName: "payeeName", credentialsArray: "credentialsArray", componentState: "componentState", credentialsFailed: "credentialsFailed" }, outputs: { returnToPayeeList: "returnToPayeeList", payeeLogin: "payeeLogin" }, ngImport: i0__namespace, template: "<ng-container [ngSwitch]=\"componentState\">\n  <ng-container *ngSwitchCase=\"ComponentStates.Checking\">\n    <bb-loading-indicator-ui\n      text=\"Checking credentials...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget checking credentials\n        text@@bb-billpay-ebills-payveris-enrolment-widget-ang.checking-credentials.text\"\n      loaderSize=\"lg\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Callback\">\n    <bb-loading-indicator-ui\n      text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget taking longer than usual\n        text@@bb-billpay-ebills-payveris-enrolment-widget-ang.login-call-back.text\"\n      loaderSize=\"lg\"\n      data-role=\"payveris-callback-info\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Ready\">\n    <bb-alert-ui\n      *ngIf=\"credentialsFailed\"\n      title=\"The information you provided is incorrect. Please try again.\"\n      data-role=\"payveris-payee-login-credentials-warning\"\n      i18n-title=\"\n        Login credentials failed alert|Text for login credentials failed\n        alert@@bb-billpay-payveris-ebills-enrolment-login.login-credentials-failed-alert\"\n    >\n    </bb-alert-ui>\n\n    <div\n      class=\"bb-block bb-block--lg\"\n      i18n=\"\n        Login prompt|Login prompt for payveris ebill enrolment login form\n        @@bb-billpay-payveris-ebills-enrolment-login.note.login-prompt\"\n    >\n      Please log in with your {{ payeeName }} credentials. We will only use them to retrieve information about bills.\n    </div>\n\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onPayverisLoginSubmit()\">\n      <div class=\"bb-block bb-block--xl\">\n        <div class=\"bb-block bb-block--sm\" *ngFor=\"let field of credentialsArray; index as i\">\n          <bb-input-text-ui\n            class=\"bb-form-field bb-form-field--md\"\n            [label]=\"field.additions.label_text\"\n            [attr.data-role]=\"'payveris-payee-login-' + i\"\n            [required]=\"true\"\n            [maxLength]=\"255\"\n            [formControlName]=\"i\"\n            *ngIf=\"field.label !== 'password'\"\n            [autofocus]=\"i === 0\"\n          >\n          </bb-input-text-ui>\n\n          <bb-input-password-ui\n            class=\"bb-form-field bb-form-field--md\"\n            [label]=\"field.additions.label_text\"\n            [attr.data-role]=\"'payveris-payee-login-' + i\"\n            [required]=\"true\"\n            [maxLength]=\"255\"\n            [showVisibilityControl]=\"true\"\n            [formControlName]=\"i\"\n            *ngIf=\"field.label === 'password'\"\n          >\n          </bb-input-password-ui>\n\n          <bb-input-validation-message-ui [showErrors]=\"submitted && loginForm?.get(i.toString())?.invalid\">\n            <ng-container\n              i18n=\"\n                You must enter warning|Validity warning for login field on payveris ebill enrolment login form\n                @@bb-billpay-payveris-ebills-enrolment-login.warning.login-warning\"\n            >\n              You must enter\n            </ng-container>\n            {{ field.additions.label_text }}\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          data-role=\"payveris-payee-login-continue\"\n          i18n=\"\n            Continue enrolment|Continue enrolment button on payveris ebill enrolment login form\n            @@bb-billpay-payveris-ebills-enrolment-login.button.continue-enrolment\"\n        >\n          Continue\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"light\"\n          (click)=\"cancelModalOpen = true\"\n          data-role=\"payveris-payee-cancel-enrollment-init\"\n          color=\"link\"\n          i18n=\"\n            Cancel enrolment|Cancel enrolment button on payveris ebill enrolment login form\n            @@bb-billpay-payveris-ebills-enrolment-login.button.cancel-enrolment\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payveris-ebills-enrolment-cancel-modal *ngIf=\"cancelModalOpen\" (resolve)=\"onModalResolve($event)\">\n</bb-billpay-payveris-ebills-enrolment-cancel-modal>\n", components: [{ type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i3__namespace$1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i4__namespace$2.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i5__namespace$3.InputPasswordComponent, selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i5__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentLoginComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-login',
                        templateUrl: './billpay-payveris-ebills-enrolment-login.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$5.FormBuilder }]; }, propDecorators: { payeeName: [{
                    type: i0.Input
                }], credentialsArray: [{
                    type: i0.Input
                }], componentState: [{
                    type: i0.Input
                }], credentialsFailed: [{
                    type: i0.Input
                }], returnToPayeeList: [{
                    type: i0.Output
                }], payeeLogin: [{
                    type: i0.Output
                }] } });
    var templateObject_1$4;

    var BillpayPayverisEbillsEnrolmentMfaEntryComponent = /** @class */ (function () {
        function BillpayPayverisEbillsEnrolmentMfaEntryComponent() {
            this.submitted = false;
            this.cancelModalOpen = false;
            this.mfaLabel = undefined;
            this.ComponentStates = exports.PayverisEnrolmentComponentState;
            /**
             * The current state of the component. Controls loaded elements.
             */
            this.componentState = exports.PayverisEnrolmentComponentState.Undefined;
            /**
             * Displays elements for a failed submission. Defaults to false.
             */
            this.mfaFailed = false;
            this.returnToPayeeList = new i0.EventEmitter();
            this.mfaEntry = new i0.EventEmitter();
            this.mfaForm = new i1$5.FormGroup({
                formQuestions: new i1$5.FormArray([]),
            });
        }
        Object.defineProperty(BillpayPayverisEbillsEnrolmentMfaEntryComponent.prototype, "formQuestions", {
            get: function () {
                return this.mfaForm.get('formQuestions');
            },
            enumerable: false,
            configurable: true
        });
        BillpayPayverisEbillsEnrolmentMfaEntryComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.mfaArray) {
                this.mfaArray.forEach(function () {
                    _this.formQuestions.push(new i1$5.FormControl('', i1$5.Validators.required));
                });
            }
            this.mfaLabel = i4.BillpayUtilityService.checkForProperty([0, 'label'], this.mfaArray);
        };
        BillpayPayverisEbillsEnrolmentMfaEntryComponent.prototype.onMfaSubmit = function () {
            this.submitted = true;
            if (this.mfaForm.valid) {
                this.mfaEntry.emit();
                this.submitted = false;
            }
        };
        BillpayPayverisEbillsEnrolmentMfaEntryComponent.prototype.onModalResolve = function (operationCancelled) {
            this.cancelModalOpen = false;
            if (operationCancelled) {
                this.handleReturnToPayeeList();
            }
        };
        BillpayPayverisEbillsEnrolmentMfaEntryComponent.prototype.handleReturnToPayeeList = function () {
            this.returnToPayeeList.emit();
        };
        return BillpayPayverisEbillsEnrolmentMfaEntryComponent;
    }());
    BillpayPayverisEbillsEnrolmentMfaEntryComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentMfaEntryComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentMfaEntryComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentMfaEntryComponent, selector: "bb-billpay-payveris-ebills-enrolment-mfa-entry", inputs: { payeeName: "payeeName", mfaArray: "mfaArray", componentState: "componentState", mfaFailed: "mfaFailed" }, outputs: { returnToPayeeList: "returnToPayeeList", mfaEntry: "mfaEntry" }, ngImport: i0__namespace, template: "<ng-container [ngSwitch]=\"componentState\">\n  <ng-container *ngSwitchCase=\"ComponentStates.Checking\">\n    <bb-loading-indicator-ui\n      text=\"Checking answer ...\"\n      i18n-text=\"\n        Checking answer|Ebill Payveris Enrolment Widget checking mfa\n        text@@bb-billpay-ebills-payveris-enrolment-mfa-entry.checking-mfa.text\"\n      loaderSize=\"lg\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Callback\">\n    <bb-loading-indicator-ui\n      text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget taking longer than usual\n        text@@bb-billpay-ebills-payveris-enrolment-widget-ang.mfa-call-back.text\"\n      loaderSize=\"lg\"\n      data-role=\"payveris-callback-info\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Ready\">\n    <bb-alert-ui\n      *ngIf=\"mfaFailed\"\n      title=\"The answer you provided is incorrect. Please try again.\"\n      data-role=\"payveris-payee-mfa-warning\"\n      i18n-title=\"Mfa failed alert|Text for mfa failed alert@@bb-billpay-payveris-ebills-enrolment-mfa.mfa-failed-alert\"\n    >\n    </bb-alert-ui>\n\n    <div\n      class=\"bb-block bb-block--lg\"\n      i18n=\"\n        mfa prompt|mfa prompt for payveris ebill enrolment mfa\n        form@@bb-billpay-payveris-ebills-enrolment-mfa.note.mfa-prompt\"\n    >\n      Please answer the following security question(s).\n    </div>\n\n    <form [formGroup]=\"mfaForm\" (ngSubmit)=\"onMfaSubmit()\">\n      <div class=\"bb-block bb-block--xl\" formArrayName=\"formQuestions\">\n        <div *ngFor=\"let mfa of mfaArray; let i = index\" class=\"bb-block bb-block--md\">\n          <bb-input-text-ui\n            class=\"bb-form-field bb-form-field--md\"\n            i18n-label=\"\n              mfa label|Label for mfa on payveris ebill mfa form\n              @@bb-billpay-payveris-ebills-enrolment-mfa.label.mfa-label\"\n            label=\"{{ mfaArray[i].label }}\"\n            data-role=\"payveris-payee-mfa-input\"\n            [required]=\"true\"\n            [maxLength]=\"255\"\n            [formControlName]=\"i\"\n            ngDefaultControl\n            autofocus\n          >\n          </bb-input-text-ui>\n\n          <bb-input-validation-message-ui [showErrors]=\"submitted && formQuestions.controls[i].invalid\">\n            <span\n              data-role=\"payveris-payee-mfa-blank-warning\"\n              i18n=\"\n                mfa warning|Validity warning for mfa on payveris ebill enrolment mfa form\n                @@bb-billpay-payveris-ebills-enrolment-mfa.warning.mfa-warning\"\n            >\n              You must submit an answer\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          data-role=\"payveris-payee-mfa-continue\"\n          i18n=\"\n            Continue enrolment|Continue enrolment button on payveris ebill enrolment mfa form\n            @@bb-billpay-payveris-ebills-enrolment-mfa.button.continue-enrolment\"\n        >\n          Continue\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          (click)=\"cancelModalOpen = true\"\n          i18n=\"\n            Cancel enrolment|Cancel enrolment button on payveris ebill enrolment mfa form\n            @@bb-billpay-payveris-ebills-enrolment-mfa.button.cancel-enrolment\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payveris-ebills-enrolment-cancel-modal *ngIf=\"cancelModalOpen\" (resolve)=\"onModalResolve($event)\">\n</bb-billpay-payveris-ebills-enrolment-cancel-modal>\n", components: [{ type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i3__namespace$1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i4__namespace$2.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$5.FormArrayName, selector: "[formArrayName]", inputs: ["formArrayName"] }, { type: i5__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace$5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1__namespace$5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentMfaEntryComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-mfa-entry',
                        templateUrl: './billpay-payveris-ebills-enrolment-mfa-entry.component.html',
                    }]
            }], propDecorators: { payeeName: [{
                    type: i0.Input
                }], mfaArray: [{
                    type: i0.Input
                }], componentState: [{
                    type: i0.Input
                }], mfaFailed: [{
                    type: i0.Input
                }], returnToPayeeList: [{
                    type: i0.Output
                }], mfaEntry: [{
                    type: i0.Output
                }] } });

    var BillpayPayverisEbillsEnrolmentOtpSelectComponent = /** @class */ (function () {
        function BillpayPayverisEbillsEnrolmentOtpSelectComponent() {
            this.submitted = false;
            this.cancelModalOpen = false;
            this.ComponentStates = exports.PayverisEnrolmentComponentState;
            /**
             * Array of OTP transport methods.
             */
            this.transports = [];
            /**
             * The current state of the component. Controls loaded elements.
             */
            this.componentState = exports.PayverisEnrolmentComponentState.Undefined;
            this.transportSelect = new i0.EventEmitter();
            this.returnToPayeeList = new i0.EventEmitter();
        }
        BillpayPayverisEbillsEnrolmentOtpSelectComponent.prototype.ngOnInit = function () {
            if (this.transports && this.transports.length === 1) {
                this.transportSelectedIndex = 0;
            }
        };
        BillpayPayverisEbillsEnrolmentOtpSelectComponent.prototype.onSelectTransportSubmit = function () {
            this.submitted = true;
            if (this.transportSelectedIndex !== undefined) {
                this.transportSelect.emit(this.transportSelectedIndex);
            }
        };
        BillpayPayverisEbillsEnrolmentOtpSelectComponent.prototype.noSelectionMade = function () {
            return this.transportSelectedIndex === undefined;
        };
        BillpayPayverisEbillsEnrolmentOtpSelectComponent.prototype.onModalResolve = function (operationCancelled) {
            this.cancelModalOpen = false;
            if (operationCancelled) {
                this.handleReturnToPayeeList();
            }
        };
        BillpayPayverisEbillsEnrolmentOtpSelectComponent.prototype.handleReturnToPayeeList = function () {
            this.returnToPayeeList.emit();
        };
        return BillpayPayverisEbillsEnrolmentOtpSelectComponent;
    }());
    BillpayPayverisEbillsEnrolmentOtpSelectComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentOtpSelectComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentOtpSelectComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentOtpSelectComponent, selector: "bb-billpay-payveris-ebills-enrolment-otp-select", inputs: { payeeName: "payeeName", transports: "transports", componentState: "componentState" }, outputs: { transportSelect: "transportSelect", returnToPayeeList: "returnToPayeeList" }, ngImport: i0__namespace, template: "<ng-container [ngSwitch]=\"componentState\">\n  <ng-container *ngSwitchCase=\"ComponentStates.Checking\">\n    <bb-loading-indicator-ui\n      text=\"Submitting selection...\"\n      i18n-text=\"\n        Submitting selection|Ebill Payveris Enrolment Widget submitting otp selection\n        text@@bb-billpay-ebills-payveris-enrolment-otp-select.submit-otp-selection.text\"\n      loaderSize=\"lg\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Callback\">\n    <bb-loading-indicator-ui\n      text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n      i18n-text=\"\n        eBill enrolment is taking a little longer than usual, please be patient...|Ebill Payveris Enrolment Widget\n        taking longer than usual text@@bb-billpay-ebills-payveris-enrolment-widget-ang.otp-select-call-back.text\"\n      loaderSize=\"lg\"\n      data-role=\"payveris-callback-info\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Ready\">\n    <ng-container *ngIf=\"transports.length > 1\">\n      <div\n        class=\"bb-block bb-block--sm\"\n        i18n=\"\n          Transport select prompt|Transport select prompt for payveris ebill enrolment transport select form\n          @@bb-billpay-payveris-ebills-enrolment-select-transport.note.transport-select-prompt\"\n      >\n        A one-time passcode (OTP) is required to verify your identity. Please select how you would like to receive it.\n      </div>\n\n      <form name=\"selectTransportForm\" #f=\"ngForm\" (ngSubmit)=\"onSelectTransportSubmit()\">\n        <div class=\"bb-block bb-block--lg\">\n          <bb-input-radio-group-ui\n            name=\"transportID\"\n            id=\"transportID\"\n            aria-labelledby=\"bb-select-transport\"\n            [required]=\"true\"\n            [preselect]=\"false\"\n            [(ngModel)]=\"transportSelectedIndex\"\n            #transportID=\"ngModel\"\n            ngDefaultControl\n          >\n            <bb-input-radio-ui\n              *ngFor=\"let transport of transports; let i = index\"\n              value=\"{{ i }}\"\n              label=\"{{ transport.value }}\"\n              i18n-label=\"\n                Transport type of one-time-passcode radio\n                button@@bb-billpay-payveris-ebills-enrolment-select-transport.radio.label\"\n            >\n            </bb-input-radio-ui>\n          </bb-input-radio-group-ui>\n\n          <bb-input-validation-message-ui [showErrors]=\"submitted && noSelectionMade()\">\n            <span\n              data-role=\"payveris-payee-select-transport-multiple-no-selection-warning\"\n              i18n=\"\n                Select transport warning|Warning on payveris ebill enrolment select transport form\n                @@bb-billpay-payveris-ebills-enrolment-select-transport.warning.select-transport-warning\"\n            >\n              You must select a passcode destination.\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            class=\"bb-button-bar__button\"\n            bbButton\n            type=\"submit\"\n            i18n=\"\n              Continue from multiple transports|Continue button on payveris ebill enrolment multiple transports select\n              form @@bb-billpay-payveris-ebills-enrolment-select-transports.button.continue-multiple-transports\"\n            data-role=\"payveris-payee-select-transports-multiple-continue\"\n          >\n            Continue\n          </button>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"link\"\n            (click)=\"cancelModalOpen = true\"\n            i18n=\"\n              Cancel enrolment multiple transports|Cancel enrolment button on payveris ebill enrolment multiple\n              transports select form\n              @@bb-billpay-payveris-ebills-enrolment-select-transport.button.cancel-enrolment-multiple-transports\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </ng-container>\n\n    <ng-container *ngIf=\"transports.length === 1\">\n      <div\n        class=\"bb-block bb-block--lg\"\n        i18n=\"\n          Check single transport prompt|Check single transport prompt on payveris ebill enrolment single transport\n          select form @@bb-billpay-payveris-ebills-enrolment-select-transport.button.check-single-transport-prompt\"\n        data-role=\"payveris-payee-select-transport-single-prompt\"\n      >\n        A one-time passcode (OTP) is required to verify your identity. Please confirm the delivery method.\n      </div>\n\n      <div\n        class=\"bb-block bb-block--xl\"\n        i18n=\"\n          Check single transport sub-header|Check single transport sub-header on payveris ebill enrolment single\n          transport select form\n          @@bb-billpay-payveris-ebills-enrolment-select-transport.button.check-single-transport-sub-header\"\n      >\n        {{ transports[0].value }}\n      </div>\n\n      <form name=\"selectTransportForm\" #f=\"ngForm\" (ngSubmit)=\"onSelectTransportSubmit()\">\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            bbButton\n            type=\"submit\"\n            class=\"bb-button-bar__button\"\n            i18n=\"\n              Continue from single transport|Continue ebills button on payveris ebill enrolment single transport select\n              form @@bb-billpay-payveris-ebills-enrolment-select-transport.button.continue-single-transport\"\n            data-role=\"payveris-payee-select-transport-single-continue\"\n          >\n            Continue\n          </button>\n\n          <button\n            bbButton\n            color=\"link\"\n            (click)=\"cancelModalOpen = true\"\n            class=\"bb-button-bar__button\"\n            i18n=\"\n              Cancel enrolment single transport|Cancel enrolment button on payveris ebill enrolment single transport\n              select form\n              @@bb-billpay-payveris-ebills-enrolment-select-transport.button.cancel-enrolment-single-transport\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payveris-ebills-enrolment-cancel-modal *ngIf=\"cancelModalOpen\" (resolve)=\"onModalResolve($event)\">\n</bb-billpay-payveris-ebills-enrolment-cancel-modal>\n", components: [{ type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i2__namespace$3.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i2__namespace$3.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1__namespace$5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i5__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentOtpSelectComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-otp-select',
                        templateUrl: './billpay-payveris-ebills-enrolment-otp-select.component.html',
                    }]
            }], propDecorators: { payeeName: [{
                    type: i0.Input
                }], transports: [{
                    type: i0.Input
                }], componentState: [{
                    type: i0.Input
                }], transportSelect: [{
                    type: i0.Output
                }], returnToPayeeList: [{
                    type: i0.Output
                }] } });

    var BillpayPayverisEbillsEnrolmentOtpEntryComponent = /** @class */ (function () {
        function BillpayPayverisEbillsEnrolmentOtpEntryComponent() {
            this.submitted = false;
            this.cancelModalOpen = false;
            this._passcodeFailed = false;
            this.passcodeRecentlyFailed = false;
            this.ComponentStates = exports.PayverisEnrolmentComponentState;
            /**
             * The current state of the component. Controls loaded elements.
             */
            this.componentState = exports.PayverisEnrolmentComponentState.Undefined;
            this.returnToPayeeList = new i0.EventEmitter();
            this.passcodeEntry = new i0.EventEmitter();
            this.passcodeForm = new i1$5.FormGroup({
                passcode: new i1$5.FormControl('', i1$5.Validators.required),
            });
        }
        Object.defineProperty(BillpayPayverisEbillsEnrolmentOtpEntryComponent.prototype, "passcodeFailed", {
            /**
             * Displays elements for a failed submission. Invalidates passcode form.
             */
            get: function () {
                return this._passcodeFailed;
            },
            set: function (hasFailed) {
                var _this = this;
                this._passcodeFailed = hasFailed;
                this.passcodeRecentlyFailed = hasFailed;
                if (hasFailed) {
                    this.passcodeForm.controls['passcode'].markAsDirty();
                    this.passcodeForm.controls['passcode'].markAsTouched();
                    this.passcodeForm.controls['passcode'].setValue('');
                    this.passcodeForm.controls['passcode'].valueChanges.pipe(operators.take(1)).subscribe(function () {
                        _this.passcodeRecentlyFailed = false;
                    });
                }
            },
            enumerable: false,
            configurable: true
        });
        BillpayPayverisEbillsEnrolmentOtpEntryComponent.prototype.onPayverisOtpPasscodeSubmit = function () {
            this.submitted = true;
            if (this.passcodeForm.valid) {
                this.passcodeEntry.emit(this.passcodeForm.value);
            }
        };
        BillpayPayverisEbillsEnrolmentOtpEntryComponent.prototype.onModalResolve = function (operationCancelled) {
            this.cancelModalOpen = false;
            if (operationCancelled) {
                this.handleReturnToPayeeList();
            }
        };
        BillpayPayverisEbillsEnrolmentOtpEntryComponent.prototype.handleReturnToPayeeList = function () {
            this.returnToPayeeList.emit();
        };
        return BillpayPayverisEbillsEnrolmentOtpEntryComponent;
    }());
    BillpayPayverisEbillsEnrolmentOtpEntryComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentOtpEntryComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentOtpEntryComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentOtpEntryComponent, selector: "bb-billpay-payveris-ebills-enrolment-otp-entry", inputs: { payeeName: "payeeName", optTransportMethod: "optTransportMethod", componentState: "componentState", passcodeFailed: "passcodeFailed" }, outputs: { returnToPayeeList: "returnToPayeeList", passcodeEntry: "passcodeEntry" }, ngImport: i0__namespace, template: "<ng-container [ngSwitch]=\"componentState\">\n  <ng-container *ngSwitchCase=\"ComponentStates.Checking\">\n    <bb-loading-indicator-ui\n      text=\"Checking passcode...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget checking otp passcode\n        text@@bb-billpay-ebills-payveris-enrolment-otp-passcode.checking-otp-passcode.text\"\n      loaderSize=\"lg\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Callback\">\n    <bb-loading-indicator-ui\n      text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget taking longer than usual\n        text@@bb-billpay-ebills-payveris-enrolment-widget-ang.otp-entry-call-back.text\"\n      loaderSize=\"lg\"\n      data-role=\"payveris-callback-info\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Ready\">\n    <bb-alert-ui\n      *ngIf=\"passcodeFailed\"\n      title=\"The passcode you provided is incorrect. Please try again.\"\n      i18n-title=\"\n        Text for passcode failed alert@@bb-billpay-payveris-ebills-enrolment-otp-passcode.passcode-failed-alert\"\n      data-role=\"payveris-payee-otp-passcode-warning\"\n    >\n    </bb-alert-ui>\n\n    <div\n      class=\"bb-block bb-block--md\"\n      i18n=\"\n        otp passcode prompt|otp passcode prompt for payveris ebill enrolment otp passcode form\n        @@bb-billpay-payveris-ebills-enrolment-otp-passcode.note.otp-passcode-prompt\"\n    >\n      A one-time passocde (OTP) has been sent to {{ optTransportMethod }}.\n    </div>\n\n    <form [formGroup]=\"passcodeForm\" (ngSubmit)=\"onPayverisOtpPasscodeSubmit()\">\n      <div class=\"bb-block bb-block--xl\">\n        <div class=\"bb-form-field bb-form-field--xs\">\n          <bb-input-text-ui\n            name=\"passcode\"\n            label=\"Passcode\"\n            i18n-label=\"\n              otp passcode label|Label for otp passcode on payveris ebill otp passcode form\n              @@bb-billpay-payveris-ebills-enrolment-otp-passcode.label.otp-passcode-label\"\n            data-role=\"payveris-payee-otp-passcode-input\"\n            [maxLength]=\"255\"\n            formControlName=\"passcode\"\n            [autofocus]=\"true\"\n            ngDefaultControl\n          >\n          </bb-input-text-ui>\n        </div>\n\n        <bb-input-validation-message-ui\n          *ngIf=\"passcodeForm.controls['passcode'].invalid && passcodeRecentlyFailed; else submitPasscode\"\n          [showErrors]=\"true\"\n        >\n          <span\n            i18n=\"\n              Incorrect otp passcode warning|Validity warning for otp passcode on payveris ebill enrolment otp passcode\n              form @@bb-billpay-payveris-ebills-enrolment-otp-passcode.warning.otp-passcode-incorrect\"\n          >\n            Incorrect passcode entered\n          </span>\n        </bb-input-validation-message-ui>\n\n        <ng-template #submitPasscode>\n          <bb-input-validation-message-ui [showErrors]=\"submitted && passcodeForm.controls['passcode'].invalid\">\n            <span\n              data-role=\"payveris-payee-otp-passcode-blank-warning\"\n              i18n=\"\n                Empty otp passcode warning|Empty warning for otp passcode on payveris ebill enrolment otp passcode form\n                @@bb-billpay-payveris-ebills-enrolment-otp-passcode.warning.otp-passcode-empty\"\n            >\n              You must submit a passcode\n            </span>\n          </bb-input-validation-message-ui>\n        </ng-template>\n      </div>\n\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          data-role=\"payveris-payee-otp-passcode-continue\"\n          i18n=\"\n            Continue enrolment|Continue enrolment button on payveris ebill enrolment otp-passcode form\n            @@bb-billpay-payveris-ebills-enrolment-otp-passcode.button.continue-enrolment\"\n        >\n          Continue\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          i18n=\"\n            Cancel enrolment|Cancel enrolment button on payveris ebill enrolment otp passcode form\n            @@bb-billpay-payveris-ebills-enrolment-otp-passcode.button.cancel-enrolment\"\n          (click)=\"cancelModalOpen = true\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payveris-ebills-enrolment-cancel-modal *ngIf=\"cancelModalOpen\" (resolve)=\"onModalResolve($event)\">\n</bb-billpay-payveris-ebills-enrolment-cancel-modal>\n", components: [{ type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i3__namespace$1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i4__namespace$2.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentOtpEntryComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-otp-entry',
                        templateUrl: './billpay-payveris-ebills-enrolment-otp-entry.component.html',
                    }]
            }], propDecorators: { payeeName: [{
                    type: i0.Input
                }], optTransportMethod: [{
                    type: i0.Input
                }], componentState: [{
                    type: i0.Input
                }], passcodeFailed: [{
                    type: i0.Input
                }], returnToPayeeList: [{
                    type: i0.Output
                }], passcodeEntry: [{
                    type: i0.Output
                }] } });

    var BillpayPayverisEbillsEnrolmentCaptchaComponent = /** @class */ (function () {
        /** @internal */
        function BillpayPayverisEbillsEnrolmentCaptchaComponent(sanitizer) {
            this.sanitizer = sanitizer;
            this.imageSrcRaw = '';
            this.submitted = false;
            this.cancelModalOpen = false;
            this._captchaFailed = false;
            this.captchaRecentlyFailed = false;
            this.ComponentStates = exports.PayverisEnrolmentComponentState;
            /**
             * The current state of the component. Controls loaded elements.
             */
            this.componentState = exports.PayverisEnrolmentComponentState.Undefined;
            this.returnToPayeeList = new i0.EventEmitter();
            this.captchaEntry = new i0.EventEmitter();
            this.captchaForm = new i1$5.FormGroup({
                captcha: new i1$5.FormControl('', i1$5.Validators.required),
            });
        }
        Object.defineProperty(BillpayPayverisEbillsEnrolmentCaptchaComponent.prototype, "captchaFailed", {
            /**
             * @return _captchaFailed. Displays elements for a failed submission. Invalidates captcha form.
             */
            get: function () {
                return this._captchaFailed;
            },
            set: function (hasFailed) {
                var _this = this;
                this._captchaFailed = hasFailed;
                this.captchaRecentlyFailed = hasFailed;
                if (hasFailed) {
                    this.captchaForm.controls['captcha'].markAsDirty();
                    this.captchaForm.controls['captcha'].markAsTouched();
                    this.captchaForm.controls['captcha'].setValue('');
                    this.captchaForm.controls['captcha'].valueChanges.pipe(operators.take(1)).subscribe(function () {
                        _this.captchaRecentlyFailed = false;
                    });
                }
            },
            enumerable: false,
            configurable: true
        });
        BillpayPayverisEbillsEnrolmentCaptchaComponent.prototype.ngOnInit = function () {
            var imageType = this.captchaImageType || '';
            var imageSrc = this.captchaImageSrc || '';
            this.imageSrcRaw = "data:" + imageType + ";base64," + imageSrc;
            this.imageSrcData = this.sanitizer.bypassSecurityTrustResourceUrl(this.imageSrcRaw);
        };
        BillpayPayverisEbillsEnrolmentCaptchaComponent.prototype.onCaptchaSubmit = function () {
            this.submitted = true;
            if (this.captchaForm.valid) {
                this.captchaEntry.emit(this.captchaForm.value);
            }
        };
        BillpayPayverisEbillsEnrolmentCaptchaComponent.prototype.onModalResolve = function (operationCancelled) {
            this.cancelModalOpen = false;
            if (operationCancelled) {
                this.handleReturnToPayeeList();
            }
        };
        BillpayPayverisEbillsEnrolmentCaptchaComponent.prototype.handleReturnToPayeeList = function () {
            this.returnToPayeeList.emit();
        };
        return BillpayPayverisEbillsEnrolmentCaptchaComponent;
    }());
    BillpayPayverisEbillsEnrolmentCaptchaComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentCaptchaComponent, deps: [{ token: i1__namespace$6.DomSanitizer }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentCaptchaComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentCaptchaComponent, selector: "bb-billpay-payveris-ebills-enrolment-captcha", inputs: { payeeName: "payeeName", captchaImageType: "captchaImageType", captchaImageSrc: "captchaImageSrc", componentState: "componentState", captchaFailed: "captchaFailed" }, outputs: { returnToPayeeList: "returnToPayeeList", captchaEntry: "captchaEntry" }, ngImport: i0__namespace, template: "<ng-container [ngSwitch]=\"componentState\">\n  <ng-container *ngSwitchCase=\"ComponentStates.Checking\">\n    <bb-loading-indicator-ui\n      text=\"Checking text...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget checking captcha text\n        text@@bb-billpay-ebills-payveris-enrolment-captcha-ang.checking-captcha-text.text\"\n      loaderSize=\"lg\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Callback\">\n    <bb-loading-indicator-ui\n      text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget taking longer than usual\n        text@@bb-billpay-ebills-payveris-enrolment-widget-ang.captcha-call-back.text\"\n      loaderSize=\"lg\"\n      data-role=\"payveris-callback-info\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Ready\">\n    <bb-alert-ui\n      *ngIf=\"captchaFailed\"\n      title=\"The text you provided is incorrect. Please try again.\"\n      i18n-title=\"\n        Captcha failed alert|Text for captcha failed\n        alert@@bb-billpay-payveris-ebills-enrolment-captcha.captcha-failed-alert\"\n      data-role=\"payveris-payee-captcha-warning\"\n    >\n    </bb-alert-ui>\n\n    <div\n      class=\"bb-block bb-block--lg\"\n      i18n=\"\n        captcha prompt|captcha prompt for payveris ebill enrolment captcha form\n        @@bb-billpay-payveris-ebills-enrolment-captcha.note.captcha-prompt\"\n    >\n      Type the characters you see in this image.\n    </div>\n\n    <div class=\"bb-block bb-block--lg\">\n      <img\n        role=\"img\"\n        aria-label=\"Captcha image\"\n        i18n-aria-label=\"Captcha image aria-label@@bb-billpay-payveris-ebills-enrolment-captcha.img.captcha-img\"\n        [src]=\"imageSrcData\"\n        alt=\"Captcha image for payee.\"\n        i18n-alt=\"\n          Catcha image|Catcha image for payveris ebill enrolment captcha form\n          @@bb-billpay-payveris-ebills-enrolment-captcha.image.captcha-image\"\n      />\n    </div>\n\n    <form [formGroup]=\"captchaForm\" (ngSubmit)=\"onCaptchaSubmit()\">\n      <div class=\"bb-block bb-block--xl\">\n        <bb-input-text-ui\n          class=\"bb-form-field bb-form-field--xs\"\n          name=\"captcha\"\n          i18n-label=\"\n            captcha label|Label for captcha on payveris ebill captcha form\n            @@bb-billpay-payveris-ebills-enrolment-captcha.label.captcha-label\"\n          label=\"Type characters\"\n          data-role=\"payveris-payee-captcha-input\"\n          [required]=\"true\"\n          [maxLength]=\"255\"\n          formControlName=\"captcha\"\n          [autofocus]=\"true\"\n          ngDefaultControl\n        >\n        </bb-input-text-ui>\n\n        <bb-input-validation-message-ui\n          *ngIf=\"captchaForm.controls['captcha'].invalid && captchaRecentlyFailed; else submitCaptcha\"\n          [showErrors]=\"true\"\n        >\n          <span\n            i18n=\"\n              Incorrect captcha warning|Validity warning for captcha on payveris ebill enrolment captcha\n              form@@bb-billpay-payveris-ebills-enrolment-captcha.warning.captcha-incorrect\"\n          >\n            Incorrect captcha entered\n          </span>\n        </bb-input-validation-message-ui>\n\n        <ng-template #submitCaptcha>\n          <bb-input-validation-message-ui [showErrors]=\"submitted && captchaForm.controls['captcha'].invalid\">\n            <span\n              data-role=\"payveris-payee-captcha-blank-warning\"\n              i18n=\"\n                Empty captcha warning|Empty warning for captcha on payveris ebill enrolment captcha\n                form@@bb-billpay-payveris-ebills-enrolment-captcha.warning.captcha-empty\"\n            >\n              Please enter the captcha text shown\n            </span>\n          </bb-input-validation-message-ui>\n        </ng-template>\n      </div>\n\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          data-role=\"payveris-payee-captcha-continue\"\n          i18n=\"\n            Continue enrolment|Continue enrolment button on payveris ebill enrolment captcha form\n            @@bb-billpay-payveris-ebills-enrolment-captcha.button.continue-enrolment\"\n        >\n          Continue\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          (click)=\"cancelModalOpen = true\"\n          i18n=\"\n            Cancel enrolment|Cancel enrolment button on payveris ebill enrolment captcha form\n            @@bb-billpay-payveris-ebills-enrolment-captcha.button.cancel-enrolment\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payveris-ebills-enrolment-cancel-modal *ngIf=\"cancelModalOpen\" (resolve)=\"onModalResolve($event)\">\n</bb-billpay-payveris-ebills-enrolment-cancel-modal>\n", components: [{ type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i3__namespace$1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i4__namespace$2.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1__namespace$5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentCaptchaComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-captcha',
                        templateUrl: './billpay-payveris-ebills-enrolment-captcha.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$6.DomSanitizer }]; }, propDecorators: { payeeName: [{
                    type: i0.Input
                }], captchaImageType: [{
                    type: i0.Input
                }], captchaImageSrc: [{
                    type: i0.Input
                }], componentState: [{
                    type: i0.Input
                }], captchaFailed: [{
                    type: i0.Input
                }], returnToPayeeList: [{
                    type: i0.Output
                }], captchaEntry: [{
                    type: i0.Output
                }] } });

    var BillpayPayverisEbillsEnrolmentSelectAccountComponent = /** @class */ (function () {
        function BillpayPayverisEbillsEnrolmentSelectAccountComponent() {
            /**
             * Array of biller accounts.
             */
            this.accounts = [];
            /**
             * The current state of the component. Controls loaded elements.
             */
            this.componentState = exports.PayverisEnrolmentComponentState.Undefined;
            this.accountSelect = new i0.EventEmitter();
            this.returnToPayeeList = new i0.EventEmitter();
            this.submitted = false;
            this.cancelModalOpen = false;
            this.ComponentStates = exports.PayverisEnrolmentComponentState;
        }
        BillpayPayverisEbillsEnrolmentSelectAccountComponent.prototype.ngOnInit = function () {
            if (this.accounts && this.accounts.length === 1) {
                this.accountSelectedIndex = 0;
            }
        };
        BillpayPayverisEbillsEnrolmentSelectAccountComponent.prototype.onSelectAccountSubmit = function () {
            this.submitted = true;
            if (this.accountSelectedIndex !== undefined) {
                this.accountSelect.emit(this.accountSelectedIndex);
            }
        };
        BillpayPayverisEbillsEnrolmentSelectAccountComponent.prototype.noSelectionMade = function () {
            return this.accountSelectedIndex === undefined;
        };
        BillpayPayverisEbillsEnrolmentSelectAccountComponent.prototype.onModalResolve = function (operationCancelled) {
            this.cancelModalOpen = false;
            if (operationCancelled) {
                this.handleReturnToPayeeList();
            }
        };
        BillpayPayverisEbillsEnrolmentSelectAccountComponent.prototype.handleReturnToPayeeList = function () {
            this.returnToPayeeList.emit();
        };
        return BillpayPayverisEbillsEnrolmentSelectAccountComponent;
    }());
    BillpayPayverisEbillsEnrolmentSelectAccountComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentSelectAccountComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentSelectAccountComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentSelectAccountComponent, selector: "bb-billpay-payveris-ebills-enrolment-select-account", inputs: { payeeName: "payeeName", accounts: "accounts", componentState: "componentState" }, outputs: { accountSelect: "accountSelect", returnToPayeeList: "returnToPayeeList" }, ngImport: i0__namespace, template: "<ng-container [ngSwitch]=\"componentState\">\n  <ng-container *ngSwitchCase=\"ComponentStates.Checking\">\n    <bb-loading-indicator-ui\n      text=\"Checking account...\"\n      i18n-text=\"\n        Checking account...|Ebill Payveris Enrolment Widget checking account\n        text@@bb-billpay-ebills-payveris-enrolment-widget-ang.checking-account.text\"\n      loaderSize=\"lg\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Callback\">\n    <bb-loading-indicator-ui\n      text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n      i18n-text=\"\n        eBill enrolment is taking a little longer than usual, please be patient...|Ebill Payveris Enrolment Widget\n        taking longer than usual text@@bb-billpay-ebills-payveris-enrolment-widget-ang.select-account-call-back.text\"\n      loaderSize=\"lg\"\n      data-role=\"payveris-callback-info\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Ready\">\n    <ng-container *ngIf=\"accounts.length > 1\">\n      <div\n        i18n=\"\n          Account select prompt|Account select prompt for payveris ebill enrolment account select form\n          @@bb-billpay-payveris-ebills-enrolment-select-account.note.account-select-prompt\"\n      >\n        There are multiple accounts associated with this login ID. Please choose the correct one.\n      </div>\n\n      <form name=\"selectAccountForm\" #f=\"ngForm\" (ngSubmit)=\"onSelectAccountSubmit()\">\n        <div class=\"bb-block bb-block--lg\">\n          <bb-input-radio-group-ui\n            name=\"accountID\"\n            id=\"accountID\"\n            aria-labelledby=\"bb-select-account\"\n            [preselect]=\"false\"\n            [required]=\"true\"\n            [(ngModel)]=\"accountSelectedIndex\"\n            #accountID=\"ngModel\"\n          >\n            <bb-input-radio-ui\n              *ngFor=\"let account of accounts; let i = index\"\n              value=\"{{ i }}\"\n              label=\"{{ account.value }}\"\n            >\n            </bb-input-radio-ui>\n          </bb-input-radio-group-ui>\n\n          <bb-input-validation-message-ui [showErrors]=\"submitted && noSelectionMade()\">\n            <span\n              i18n=\"\n                Select account warning|Warning on payveris ebill enrolment select account form\n                @@bb-billpay-payveris-ebills-enrolment-select-account.warning.select-account-warning\"\n              data-role=\"payveris-payee-select-account-multiple-no-selection-warning\"\n            >\n              You must select an account.\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"submit\"\n            i18n=\"\n              Enable ebills multiple accounts|Enable ebills button on payveris ebill enrolment multiple account select\n              form @@bb-billpay-payveris-ebills-enrolment-select-account.button.enable-ebills-multiple-accounts\"\n            data-role=\"payveris-payee-select-account-multiple-enable-ebills\"\n          >\n            Enable eBills\n          </button>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"link\"\n            (click)=\"cancelModalOpen = true\"\n            i18n=\"\n              Cancel enrolment multiple accounts|Cancel enrolment button on payveris ebill enrolment multiple account\n              select form\n              @@bb-billpay-payveris-ebills-enrolment-select-account.button.cancel-enrolment-multiple-accounts\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </ng-container>\n\n    <ng-container *ngIf=\"accounts.length === 1\">\n      <div\n        class=\"bb-block bb-block--lg\"\n        i18n=\"\n          Check single account prompt|Check single account prompt on payveris ebill enrolment single account select form\n          @@bb-billpay-payveris-ebills-enrolment-select-account.button.check-single-account-prompt\"\n        data-role=\"payveris-payee-select-account-single-prompt\"\n      >\n        Please check your account details to ensure you receive the correct bills for this payee.\n      </div>\n\n      <div\n        class=\"bb-block bb-block--xl\"\n        i18n=\"\n          Check single account sub-header|Check single account sub-header on payveris ebill enrolment single account\n          select form @@bb-billpay-payveris-ebills-enrolment-select-account.button.check-single-account-sub-header\"\n      >\n        {{ accounts[0].value }}\n      </div>\n\n      <form name=\"selectAccountForm\" #f=\"ngForm\" (ngSubmit)=\"onSelectAccountSubmit()\">\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            type=\"submit\"\n            i18n=\"\n              Enable ebills single account|Enable ebills button on payveris ebill enrolment single account select form\n              @@bb-billpay-payveris-ebills-enrolment-select-account.button.enable-ebills-single-account\"\n            data-role=\"payveris-payee-select-account-single-enable-ebills\"\n          >\n            Enable eBills\n          </button>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"link\"\n            (click)=\"cancelModalOpen = true\"\n            i18n=\"\n              Cancel enrolment single account|Cancel enrolment button on payveris ebill enrolment single account select\n              form @@bb-billpay-payveris-ebills-enrolment-select-account.button.cancel-enrolment-single-account\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payveris-ebills-enrolment-cancel-modal *ngIf=\"cancelModalOpen\" (resolve)=\"onModalResolve($event)\">\n</bb-billpay-payveris-ebills-enrolment-cancel-modal>\n", components: [{ type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i2__namespace$3.InputRadioGroupComponent, selector: "bb-input-radio-group-ui", inputs: ["horizontal", "preselect", "name", "verticalAlign"] }, { type: i2__namespace$3.InputRadioComponent, selector: "bb-input-radio-ui", inputs: ["labelTemplate", "labelTemplateContext", "value", "label", "aria-label", "aria-labelledby", "aria-describedby", "role", "aria-activedescendant", "aria-expanded", "aria-invalid", "aria-owns", "disabled"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i5__namespace$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentSelectAccountComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-select-account',
                        templateUrl: './billpay-payveris-ebills-enrolment-select-account.component.html',
                    }]
            }], propDecorators: { payeeName: [{
                    type: i0.Input
                }], accounts: [{
                    type: i0.Input
                }], componentState: [{
                    type: i0.Input
                }], accountSelect: [{
                    type: i0.Output
                }], returnToPayeeList: [{
                    type: i0.Output
                }] } });

    var BillpayPayverisEbillsEnrolmentErrorComponent = /** @class */ (function () {
        function BillpayPayverisEbillsEnrolmentErrorComponent() {
            this.returnToPayeeList = new i0.EventEmitter();
        }
        BillpayPayverisEbillsEnrolmentErrorComponent.prototype.handleReturnToPayeeList = function () {
            this.returnToPayeeList.emit();
        };
        return BillpayPayverisEbillsEnrolmentErrorComponent;
    }());
    BillpayPayverisEbillsEnrolmentErrorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentErrorComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentErrorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentErrorComponent, selector: "bb-billpay-payveris-ebills-enrolment-error", inputs: { errorState: "errorState" }, outputs: { returnToPayeeList: "returnToPayeeList" }, ngImport: i0__namespace, template: "<div [ngSwitch]=\"errorState\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'billpay.api.invalidCredentials'\"\n    title=\"The information you entered is incorrect. Please try again.\"\n    i18n-title=\"\n      The information you provided is incorrect. Please try again.|eBills Payveris Enrolment invalid credentials\n      error@@bb-billpay-ebills-payveris-enrolment-error.title.invalid-credentials-error\"\n    iconSize=\"lg\"\n    iconModifier=\"error-outline\"\n    iconColor=\"danger\"\n  ></bb-empty-state-ui>\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'billpay.api.ebillsAlreadyEnabled'\"\n    title=\"eBills are already enabled for the payee.\"\n    i18n-title=\"\n      eBills are already enabled for the payee.|eBills Payveris Enrolment eBills already enabled\n      error@@bb-billpay-ebills-payveris-enrolment-error.title.ebills-already-enabled-error\"\n    iconSize=\"lg\"\n    iconModifier=\"error-outline\"\n    iconColor=\"danger\"\n  ></bb-empty-state-ui>\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'billpay.api.ebillsNotEnabled'\"\n    title=\"eBills are not enabled for the payee.\"\n    i18n-title=\"\n      eBills are not enabled for the payee.|eBills Payveris Enrolment eBills not enabled\n      error@@bb-billpay-ebills-payveris-enrolment-error.title.ebills-not-enabled-error\"\n    iconSize=\"lg\"\n    iconModifier=\"error-outline\"\n    iconColor=\"danger\"\n  ></bb-empty-state-ui>\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'billpay.api.payeeNotEbillCapable'\"\n    title=\"The payee does not support eBills.\"\n    i18n-title=\"\n      The payee is not capable of eBills.|eBills Payveris Enrolment payee not eBill capable\n      error@@bb-billpay-ebills-payveris-enrolment-error.title.payee-not-ebill-capable-error\"\n    iconSize=\"lg\"\n    iconModifier=\"error-outline\"\n    iconColor=\"danger\"\n  ></bb-empty-state-ui>\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'billpay.api.noValidEbillAccounts'\"\n    title=\"There are no accounts that support eBills for this payee.\"\n    i18n-title=\"\n      There are no valid eBill accounts found for the payee.|eBills Payveris Enrolment no valid eBill accounts\n      error@@bb-billpay-ebills-payveris-enrolment-error.title.payee-no-valid-ebill-accounts-error\"\n    iconSize=\"lg\"\n    iconModifier=\"error-outline\"\n    iconColor=\"danger\"\n  ></bb-empty-state-ui>\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"An error occurred. Please try again later.\"\n    i18n-title=\"\n      An error occurred. Please try again later.|eBills Payveris Enrolment general\n      error@@bb-billpay-ebills-payveris-enrolment-error.title.general-error\"\n    iconSize=\"lg\"\n    iconModifier=\"error-outline\"\n    iconColor=\"danger\"\n  ></bb-empty-state-ui>\n</div>\n", components: [{ type: i10__namespace$1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5__namespace$1.NgSwitchDefault, selector: "[ngSwitchDefault]" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentErrorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-error',
                        templateUrl: './billpay-payveris-ebills-enrolment-error.component.html',
                    }]
            }], propDecorators: { errorState: [{
                    type: i0.Input
                }], returnToPayeeList: [{
                    type: i0.Output
                }] } });

    var BillpayPayverisEbillsEnrolmentNotificationSuccessComponent = /** @class */ (function () {
        /** @internal */
        function BillpayPayverisEbillsEnrolmentNotificationSuccessComponent(notificationService) {
            this.notificationService = notificationService;
            /**
             * Time until the notification disappears in milliseconds.
             */
            this.ttl = 5000;
            /**
             * The modal message.
             */
            this.message = '';
        }
        BillpayPayverisEbillsEnrolmentNotificationSuccessComponent.prototype.ngOnInit = function () {
            this.notificationService.showNotification({
                header: this.header,
                message: this.message,
                dismissible: true,
                modifier: 'success',
                ttl: this.ttl,
            });
        };
        return BillpayPayverisEbillsEnrolmentNotificationSuccessComponent;
    }());
    BillpayPayverisEbillsEnrolmentNotificationSuccessComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentNotificationSuccessComponent, deps: [{ token: i5__namespace$2.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayPayverisEbillsEnrolmentNotificationSuccessComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentNotificationSuccessComponent, selector: "bb-billpay-payveris-ebills-enrolment-notification-success", inputs: { ttl: "ttl", header: "header", message: "message" }, ngImport: i0__namespace, template: '', isInline: true });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayPayverisEbillsEnrolmentNotificationSuccessComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payveris-ebills-enrolment-notification-success',
                        template: '',
                    }]
            }], ctorParameters: function () { return [{ type: i5__namespace$2.NotificationService }]; }, propDecorators: { ttl: [{
                    type: i0.Input
                }], header: [{
                    type: i0.Input
                }], message: [{
                    type: i0.Input
                }] } });

    var EbillsEnrolmentViewComponent = /** @class */ (function () {
        /** @internal */
        function EbillsEnrolmentViewComponent(payverisEbillsEnrolmentWidgetService, route, ref, routerService) {
            this.payverisEbillsEnrolmentWidgetService = payverisEbillsEnrolmentWidgetService;
            this.route = route;
            this.ref = ref;
            this.routerService = routerService;
            this.EnrolmentStates = exports.PayverisEnrolmentState;
            this.ComponentStates = exports.PayverisEnrolmentComponentState;
            this.destroy$ = new rxjs.Subject();
            this.payverisEnrolmentSuccessHeaderMessage = '';
            this.payverisEnrolmentSuccessMessage = '';
        }
        EbillsEnrolmentViewComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.payverisEbillsEnrolmentWidgetService.widgetStateChange.pipe(operators.takeUntil(this.destroy$)).subscribe(function () {
                _this.ref.detectChanges();
                if (_this.currentState === exports.PayverisEnrolmentState.Success) {
                    _this.goToPayeeList();
                }
            });
            this.payverisEbillsEnrolmentWidgetService.payeeId = this.route.snapshot.params['payeeID'] || undefined;
            if (this.payeeId) {
                this.payeeName = this.payverisEbillsEnrolmentWidgetService.getPayeeNameFromID(this.payeeId);
            }
            this.payverisEbillsEnrolmentWidgetService.onInitializeEnrolment();
        };
        EbillsEnrolmentViewComponent.prototype.submitPayeeLogin = function (login) {
            this.payverisEbillsEnrolmentWidgetService.onSubmitPayeeLogin(login);
        };
        EbillsEnrolmentViewComponent.prototype.submitBiller = function (billerSelectedIndex) {
            this.payverisEbillsEnrolmentWidgetService.onSubmitBillerSelection(billerSelectedIndex);
        };
        EbillsEnrolmentViewComponent.prototype.submitMfa = function () {
            this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillMfa();
        };
        EbillsEnrolmentViewComponent.prototype.submitOtpTransport = function (transportSelectedIndex) {
            this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillOtpTransportSelection(transportSelectedIndex);
        };
        EbillsEnrolmentViewComponent.prototype.submitOtpPasscode = function (passcode) {
            this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillPayeeOtpPasscode(passcode);
        };
        EbillsEnrolmentViewComponent.prototype.submitCaptcha = function (captcha) {
            this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillPayeeCaptcha(captcha);
        };
        EbillsEnrolmentViewComponent.prototype.submitPayverisEbillAccountSelection = function (accountSelectedIndex) {
            this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillAccountSelection(accountSelectedIndex);
        };
        EbillsEnrolmentViewComponent.prototype.goToPayeeList = function () {
            this.payverisEbillsEnrolmentWidgetService.cancelEnrolment().subscribe();
            this.routerService.navigateToPayeeList({ relativeTo: this.route.parent });
        };
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "payeeId", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.payeeId;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "currentState", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.currentState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "errorState", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.errorState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "loginCredentialsArray", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.loginCredentialsArray;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "mfaArray", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.mfaArray;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "componentState", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.componentState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "userInputFailed", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.userInputFailed;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "otpTransportMethodSelected", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.otpTransportMethodSelected;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "otpTransports", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.otpTransports;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "captchaImageType", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.captchaImageType;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "captchaImageSrc", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.captchaImageSrc;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "accounts", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.accounts;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EbillsEnrolmentViewComponent.prototype, "billers", {
            get: function () {
                return this.payverisEbillsEnrolmentWidgetService.billers;
            },
            enumerable: false,
            configurable: true
        });
        EbillsEnrolmentViewComponent.prototype.ngOnDestroy = function () {
            this.payverisEbillsEnrolmentWidgetService.cancelCallback();
            this.destroy$.next();
            this.destroy$.complete();
        };
        return EbillsEnrolmentViewComponent;
    }());
    EbillsEnrolmentViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EbillsEnrolmentViewComponent, deps: [{ token: BillpayPayverisEbillsEnrolmentWidgetService }, { token: i1__namespace.ActivatedRoute }, { token: i0__namespace.ChangeDetectorRef }, { token: ManagePayeesNavigationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    EbillsEnrolmentViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EbillsEnrolmentViewComponent, selector: "bb-billpay-ebills-enrolment-view", inputs: { dismissTimeoutValue: "dismissTimeoutValue" }, viewQueries: [{ propertyName: "payverisEnrolmentSuccessHeaderMessage", first: true, predicate: ["payverisEnrolmentSuccessHeaderMessage"], descendants: true }, { propertyName: "payverisEnrolmentSuccessMessage", first: true, predicate: ["payverisEnrolmentSuccessMessage"], descendants: true }], ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <button\n    bbButton\n    class=\"bb-block bb-block--md pl-0\"\n    (click)=\"goToPayeeList()\"\n    data-role=\"payveris-payee-login-return-to-payee-list-link\"\n    color=\"link\"\n  >\n    <bb-icon-ui name=\"arrow-back\" size=\"md\"></bb-icon-ui>\n    <span\n      i18n=\"\n        Back to payee list button|Button on login page for returning to payee list\n        @@bb-billpay-payveris-ebills-enrolment-login.button.back-to-payee-list\"\n      >Back to payee list</span\n    >\n  </button>\n  <bb-header-ui\n    headingType=\"h1\"\n    heading=\"Get eBills for '{{ payeeName | async }}'\"\n    i18n-heading=\"\n      Get ebills for payee|Header on payveris ebill enrolment login form\n      @@bb-billpay-payveris-ebills-enrolment-login.main-header.get-ebills-for-payee\"\n    data-role=\"payveris-payee-login-header\"\n  >\n  </bb-header-ui>\n</div>\n\n<div class=\"card card-lg\">\n  <div class=\"card-body\">\n    <ng-container [ngSwitch]=\"currentState\">\n      <ng-container *ngSwitchCase=\"EnrolmentStates.Initialize\">\n        <ng-container [ngSwitch]=\"componentState\">\n          <bb-loading-indicator-ui\n            *ngSwitchCase=\"ComponentStates.Checking\"\n            loaderSize=\"lg\"\n            text=\"Initializing...\"\n            i18n-text=\"\n              Initializing...|Ebill Payveris Enrolment Widget initializing\n              text@@bb-billpay-ebills-payveris-enrolment-widget-ang.initializing.text\"\n          >\n          </bb-loading-indicator-ui>\n\n          <bb-loading-indicator-ui\n            *ngSwitchCase=\"ComponentStates.Callback\"\n            text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n            i18n-text=\"\n              eBill enrolment is taking a little longer than usual, please be patient...|Ebill Payveris Enrolment Widget\n              taking longer than usual text@@bb-billpay-ebills-payveris-enrolment-widget-ang.initializing-callback.text\"\n            loaderSize=\"lg\"\n            data-role=\"payveris-callback-info\"\n          ></bb-loading-indicator-ui>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"payeeName | async as name\">\n        <bb-billpay-payveris-ebills-enrolment-select-biller\n          *ngSwitchCase=\"EnrolmentStates.SelectBiller\"\n          [payeeName]=\"name\"\n          [componentState]=\"componentState\"\n          [billers]=\"billers\"\n          (billerSelect)=\"submitBiller($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-select-biller>\n\n        <bb-billpay-payveris-ebills-enrolment-login\n          *ngSwitchCase=\"EnrolmentStates.Login\"\n          [payeeName]=\"name\"\n          [componentState]=\"componentState\"\n          [credentialsFailed]=\"userInputFailed\"\n          [credentialsArray]=\"loginCredentialsArray\"\n          (payeeLogin)=\"submitPayeeLogin($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-login>\n\n        <bb-billpay-payveris-ebills-enrolment-mfa-entry\n          *ngSwitchCase=\"EnrolmentStates.Mfa\"\n          [payeeName]=\"name\"\n          [mfaArray]=\"mfaArray\"\n          [componentState]=\"componentState\"\n          [mfaFailed]=\"userInputFailed\"\n          (mfaEntry)=\"submitMfa()\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-mfa-entry>\n\n        <bb-billpay-payveris-ebills-enrolment-otp-select\n          *ngSwitchCase=\"EnrolmentStates.OtpSelect\"\n          [payeeName]=\"name\"\n          [componentState]=\"componentState\"\n          [transports]=\"otpTransports\"\n          (transportSelect)=\"submitOtpTransport($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-otp-select>\n\n        <bb-billpay-payveris-ebills-enrolment-otp-entry\n          *ngSwitchCase=\"EnrolmentStates.OtpEntry\"\n          [payeeName]=\"name\"\n          [optTransportMethod]=\"otpTransportMethodSelected\"\n          [componentState]=\"componentState\"\n          [passcodeFailed]=\"userInputFailed\"\n          (passcodeEntry)=\"submitOtpPasscode($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-otp-entry>\n\n        <bb-billpay-payveris-ebills-enrolment-captcha\n          *ngSwitchCase=\"EnrolmentStates.Captcha\"\n          [payeeName]=\"name\"\n          [captchaImageType]=\"captchaImageType\"\n          [captchaImageSrc]=\"captchaImageSrc\"\n          [componentState]=\"componentState\"\n          [captchaFailed]=\"userInputFailed\"\n          (captchaEntry)=\"submitCaptcha($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-captcha>\n\n        <bb-billpay-payveris-ebills-enrolment-select-account\n          *ngSwitchCase=\"EnrolmentStates.SelectAccounts\"\n          [payeeName]=\"name\"\n          [componentState]=\"componentState\"\n          [accounts]=\"accounts\"\n          (accountSelect)=\"submitPayverisEbillAccountSelection($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-select-account>\n\n        <bb-billpay-payveris-ebills-enrolment-error\n          *ngSwitchCase=\"EnrolmentStates.ErrorState\"\n          [errorState]=\"errorState\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-error>\n\n        <bb-billpay-payveris-ebills-enrolment-notification-success\n          *ngSwitchCase=\"EnrolmentStates.Success\"\n          [ttl]=\"dismissTimeoutValue\"\n          [header]=\"payverisEnrolmentSuccessHeaderMessage\"\n          [message]=\"payverisEnrolmentSuccessMessage2\"\n        ></bb-billpay-payveris-ebills-enrolment-notification-success>\n\n        <ng-template #payverisEnrolmentSuccessMessage2>\n          <span\n            i18n=\"\n              eBills enabled|eBills enabled successfully notification\n              message@@bb-billpay-payveris-ebills-enrolment.notification.successBody\"\n            >eBills for the payee &apos;{{ name }}&apos; have been enabled successfully</span\n          >\n        </ng-template>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n<ng-template #payverisEnrolmentSuccessHeaderMessage>\n  <span\n    i18n=\"\n      eBills enabled|eBills enabled successfully notification\n      header@@bb-billpay-payveris-ebills-enrolment.notification.successHeader\"\n    >eBills enabled</span\n  >\n</ng-template>\n", components: [{ type: i4__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: BillpayPayverisEbillsEnrolmentSelectBillerComponent, selector: "bb-billpay-payveris-ebills-enrolment-select-biller", inputs: ["payeeName", "billers", "componentState"], outputs: ["billerSelect", "returnToPayeeList"] }, { type: BillpayPayverisEbillsEnrolmentLoginComponent, selector: "bb-billpay-payveris-ebills-enrolment-login", inputs: ["payeeName", "credentialsArray", "componentState", "credentialsFailed"], outputs: ["returnToPayeeList", "payeeLogin"] }, { type: BillpayPayverisEbillsEnrolmentMfaEntryComponent, selector: "bb-billpay-payveris-ebills-enrolment-mfa-entry", inputs: ["payeeName", "mfaArray", "componentState", "mfaFailed"], outputs: ["returnToPayeeList", "mfaEntry"] }, { type: BillpayPayverisEbillsEnrolmentOtpSelectComponent, selector: "bb-billpay-payveris-ebills-enrolment-otp-select", inputs: ["payeeName", "transports", "componentState"], outputs: ["transportSelect", "returnToPayeeList"] }, { type: BillpayPayverisEbillsEnrolmentOtpEntryComponent, selector: "bb-billpay-payveris-ebills-enrolment-otp-entry", inputs: ["payeeName", "optTransportMethod", "componentState", "passcodeFailed"], outputs: ["returnToPayeeList", "passcodeEntry"] }, { type: BillpayPayverisEbillsEnrolmentCaptchaComponent, selector: "bb-billpay-payveris-ebills-enrolment-captcha", inputs: ["payeeName", "captchaImageType", "captchaImageSrc", "componentState", "captchaFailed"], outputs: ["returnToPayeeList", "captchaEntry"] }, { type: BillpayPayverisEbillsEnrolmentSelectAccountComponent, selector: "bb-billpay-payveris-ebills-enrolment-select-account", inputs: ["payeeName", "accounts", "componentState"], outputs: ["accountSelect", "returnToPayeeList"] }, { type: BillpayPayverisEbillsEnrolmentErrorComponent, selector: "bb-billpay-payveris-ebills-enrolment-error", inputs: ["errorState"], outputs: ["returnToPayeeList"] }, { type: BillpayPayverisEbillsEnrolmentNotificationSuccessComponent, selector: "bb-billpay-payveris-ebills-enrolment-notification-success", inputs: ["ttl", "header", "message"] }], directives: [{ type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i5__namespace$1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5__namespace$1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EbillsEnrolmentViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-ebills-enrolment-view',
                        templateUrl: './billpay-ebills-enrolment-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: BillpayPayverisEbillsEnrolmentWidgetService }, { type: i1__namespace.ActivatedRoute }, { type: i0__namespace.ChangeDetectorRef }, { type: ManagePayeesNavigationService }]; }, propDecorators: { dismissTimeoutValue: [{
                    type: i0.Input
                }], payverisEnrolmentSuccessHeaderMessage: [{
                    type: i0.ViewChild,
                    args: ['payverisEnrolmentSuccessHeaderMessage']
                }], payverisEnrolmentSuccessMessage: [{
                    type: i0.ViewChild,
                    args: ['payverisEnrolmentSuccessMessage']
                }] } });

    var ManagePayeeViewComponent = /** @class */ (function () {
        function ManagePayeeViewComponent(routerService, route) {
            this.routerService = routerService;
            this.route = route;
            this.editMode = false;
        }
        ManagePayeeViewComponent.prototype.ngOnInit = function () {
            var _a;
            this.editMode = !!((_a = this.route.firstChild) === null || _a === void 0 ? void 0 : _a.snapshot.url.some(function (a) { return a.path === 'edit'; }));
        };
        ManagePayeeViewComponent.prototype.gotoPayeeList = function () {
            this.routerService.navigateToPayeeList({ relativeTo: this.route.parent });
        };
        return ManagePayeeViewComponent;
    }());
    ManagePayeeViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeeViewComponent, deps: [{ token: ManagePayeesNavigationService }, { token: i1__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ManagePayeeViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ManagePayeeViewComponent, selector: "bb-billpay-payee-list-view", ngImport: i0__namespace, template: "\n    <div class=\"bb-block bb-block--lg\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"gotoPayeeList()\">\n        <bb-icon-ui name=\"arrow-back\" size=\"md\"></bb-icon-ui>\n        <span i18n=\"button label|Back button@@billpay-payees-journey.payee-summary.back\">Back to Payee List</span>\n      </button>\n      <bb-header-ui\n        headingType=\"h1\"\n        [heading]=\"editMode ? 'Edit Payee' : 'Add Payee'\"\n        i18n-heading=\"@@billpay-payees-journey.add-payee\"\n      >\n      </bb-header-ui>\n    </div>\n    <router-outlet></router-outlet>\n  ", isInline: true, components: [{ type: i4__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i1__namespace.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeeViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-payee-list-view',
                        template: "\n    <div class=\"bb-block bb-block--lg\">\n      <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"gotoPayeeList()\">\n        <bb-icon-ui name=\"arrow-back\" size=\"md\"></bb-icon-ui>\n        <span i18n=\"button label|Back button@@billpay-payees-journey.payee-summary.back\">Back to Payee List</span>\n      </button>\n      <bb-header-ui\n        headingType=\"h1\"\n        [heading]=\"editMode ? 'Edit Payee' : 'Add Payee'\"\n        i18n-heading=\"@@billpay-payees-journey.add-payee\"\n      >\n      </bb-header-ui>\n    </div>\n    <router-outlet></router-outlet>\n  ",
                    }]
            }], ctorParameters: function () { return [{ type: ManagePayeesNavigationService }, { type: i1__namespace.ActivatedRoute }]; } });

    var BillPayEnrolmentViewComponent = /** @class */ (function () {
        function BillPayEnrolmentViewComponent() {
        }
        return BillPayEnrolmentViewComponent;
    }());
    BillPayEnrolmentViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillPayEnrolmentViewComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillPayEnrolmentViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillPayEnrolmentViewComponent, selector: "bb-billpay-enrolment-view", ngImport: i0__namespace, template: "\n    <div>\n      <div class=\"bb-block bb-block--lg\">\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Enrol in bill pay\"\n          i18n-heading=\"@@billpay-manage-payee-journey.enrolment-heading\"\n        ></bb-header-ui>\n      </div>\n      <bb-billpay-enrolment></bb-billpay-enrolment>\n    </div>\n  ", isInline: true, components: [{ type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4__namespace.BillpayEnrolmentComponent, selector: "bb-billpay-enrolment", inputs: ["notificationDismissTime"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillPayEnrolmentViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-enrolment-view',
                        template: "\n    <div>\n      <div class=\"bb-block bb-block--lg\">\n        <bb-header-ui\n          headingType=\"h1\"\n          heading=\"Enrol in bill pay\"\n          i18n-heading=\"@@billpay-manage-payee-journey.enrolment-heading\"\n        ></bb-header-ui>\n      </div>\n      <bb-billpay-enrolment></bb-billpay-enrolment>\n    </div>\n  ",
                    }]
            }] });

    var BillpayManagePayeeDataService = /** @class */ (function () {
        /** @internal */
        function BillpayManagePayeeDataService(dataService, searchService) {
            this.dataService = dataService;
            this.searchService = searchService;
        }
        BillpayManagePayeeDataService.prototype.addManualPayee = function (payee) {
            return this.dataService.postBillPayPayees({ billPayPayeesPostRequestBody: this.toPayeeRequest(payee) });
        };
        BillpayManagePayeeDataService.prototype.updateManualPayee = function (id, payee) {
            return this.dataService.putPayeeById({ payeeByIdPutRequestBody: this.toManualPutRequest(payee), id: id });
        };
        BillpayManagePayeeDataService.prototype.getManualPayee = function (id) {
            return this.dataService.getPayeeById({ id: id }).pipe(operators.map(function (response) { return response.payee; }));
        };
        BillpayManagePayeeDataService.prototype.searchPayeesByName = function (name) {
            return this.searchService.getBillPaySearch({ name: name });
        };
        BillpayManagePayeeDataService.prototype.addElectronicPayee = function (payee) {
            return this.dataService.postBillPayElectronicPayees({
                billPayElectronicPayeesPostRequestBody: this.toElectronicPostRequest(payee),
            });
        };
        BillpayManagePayeeDataService.prototype.getElectronicPayee = function (id) {
            return this.dataService.getElectronicPayeeById({ id: id });
        };
        BillpayManagePayeeDataService.prototype.updateElectronicPayee = function (id, payee) {
            return this.dataService.putElectronicPayeeById({
                electronicPayeeByIdPutRequestBody: this.toElectronicPutRequest(payee),
                id: id,
            });
        };
        BillpayManagePayeeDataService.prototype.toPayeeRequest = function (payee) {
            var name = payee.name, _a = payee.address, address1 = _a.address1, address2 = _a.address2, city = _a.city, state = _a.state, postalCode = _a.postalCode, phoneNumber = payee.phoneNumber, accountNumber = payee.accountNumber, nickName = payee.nickName;
            return {
                payee: Object.assign(Object.assign(Object.assign({ name: name, address: Object.assign(Object.assign({ address1: address1 }, (address2 && { address2: address2 })), { city: city, state: state, postalCode: postalCode }) }, (phoneNumber && { phoneNumber: phoneNumber.replace(/^\+1/, '').replace(/\D/g, '') })), (accountNumber && { accountNumber: accountNumber })), (nickName && { nickName: nickName })),
            };
        };
        BillpayManagePayeeDataService.prototype.toManualPutRequest = function (payee) {
            return {
                payee: Object.assign(Object.assign({}, this.toPayeeRequest(payee).payee), { modifyPendingPayments: true }),
            };
        };
        BillpayManagePayeeDataService.prototype.toElectronicPutRequest = function (payee) {
            var nickName = payee.nickName, payeeWithoutNickname = __rest(payee, ["nickName"]);
            return {
                payee: Object.assign(Object.assign(Object.assign({}, payeeWithoutNickname), (nickName && { nickName: nickName })), { modifyPendingPayments: true }),
            };
        };
        BillpayManagePayeeDataService.prototype.toElectronicPostRequest = function (payee) {
            var nickName = payee.nickName, restProperties = __rest(payee, ["nickName"]);
            return {
                payee: Object.assign(Object.assign({}, (nickName && { nickName: nickName })), restProperties),
            };
        };
        return BillpayManagePayeeDataService;
    }());
    BillpayManagePayeeDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeDataService, deps: [{ token: i1__namespace$2.BillPayPayeesService }, { token: i1__namespace$2.BillPaySearchService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    BillpayManagePayeeDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$2.BillPayPayeesService }, { type: i1__namespace$2.BillPaySearchService }]; } });

    var BillpayManualPayeeReviewComponent = /** @class */ (function () {
        function BillpayManualPayeeReviewComponent() {
        }
        return BillpayManualPayeeReviewComponent;
    }());
    BillpayManualPayeeReviewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManualPayeeReviewComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayManualPayeeReviewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayManualPayeeReviewComponent, selector: "bb-billpay-manual-payee-review", inputs: { payeeFormState: "payeeFormState" }, ngImport: i0__namespace, template: "<div *ngIf=\"payeeFormState as payee\" class=\"bb-block bb-block--xl\">\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h2\"\n      heading=\"Payee details\"\n      i18n-heading=\"\n        Manual payee review heading|Label for group of data related to the payee\n        details@@billpay-manual-payee-review.details-heading\"\n      data-role=\"payee-review-heading\"\n    ></bb-header-ui>\n  </div>\n  <div class=\"bb-block bb-block--md\">\n    <div\n      i18n=\"label|Label for payee name@@billpay-manual-payee-review.name\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-name-label\"\n    >\n      Payee name\n    </div>\n    <div data-role=\"payee-name\">{{ payee.name }}</div>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div\n      i18n=\"label|Label for payee address@@billpay-manual-payee-review.address\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-address-label\"\n    >\n      Address\n    </div>\n    <div data-role=\"payee-address-address1\">{{ payee.address.address1 }}</div>\n    <div data-role=\"payee-address-address2\">{{ payee.address.address2 }}</div>\n    <div>\n      <span data-role=\"payee-address-city\">{{ payee.address.city }} </span>\n      <span data-role=\"payee-address-state\">{{ payee.address.state }} </span>\n      <span data-role=\"payee-address-postal-code\">{{ payee.address.postalCode }}</span>\n    </div>\n  </div>\n\n  <div *ngIf=\"payee.phoneNumber\" class=\"bb-block bb-block--md\">\n    <div\n      i18n=\"label|Label for payee phone number@@billpay-manual-payee-review.phone-number\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-phone-number-label\"\n    >\n      Phone number\n    </div>\n    <div data-role=\"payee-phone-number\">{{ payee.phoneNumber }}</div>\n  </div>\n\n  <div *ngIf=\"payee.accountNumber\" class=\"bb-block bb-block--md\">\n    <div\n      i18n=\"label|Label for payee account number@@billpay-manual-payee-review.account-number\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-account-number-label\"\n    >\n      Account number\n    </div>\n    <div data-role=\"payee-account-number\">{{ payee.accountNumber }}</div>\n  </div>\n\n  <div *ngIf=\"payee.nickName\">\n    <div\n      i18n=\"label|Label for payee nickname@@billpay-manual-payee-review.nickname\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-nickname-label\"\n    >\n      Payee nickname\n    </div>\n    <div data-role=\"payee-nickname\">{{ payee.nickName }}</div>\n  </div>\n</div>\n", components: [{ type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManualPayeeReviewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-manual-payee-review',
                        templateUrl: './billpay-manual-payee-review.component.html',
                    }]
            }], propDecorators: { payeeFormState: [{
                    type: i0.Input
                }] } });

    var BillpayCancelNewPayeeModalComponent = /** @class */ (function () {
        function BillpayCancelNewPayeeModalComponent() {
            this.resolve = new i0.EventEmitter();
            /**
             * Modal navigation routes to payee search. Defaults to false.
             */
            this.findPayee = false;
        }
        BillpayCancelNewPayeeModalComponent.prototype.cancelModal = function () {
            this.resolve.emit(false);
        };
        BillpayCancelNewPayeeModalComponent.prototype.confirmModal = function () {
            this.resolve.emit(true);
        };
        return BillpayCancelNewPayeeModalComponent;
    }());
    BillpayCancelNewPayeeModalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayCancelNewPayeeModalComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayCancelNewPayeeModalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: { findPayee: "findPayee" }, outputs: { resolve: "resolve" }, ngImport: i0__namespace, template: "<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"cancel-new-payee-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        *ngIf=\"!findPayee\"\n        data-role=\"cancel-new-payee-modal-header\"\n        headingType=\"h2\"\n        heading=\"Cancel new payee?\"\n        i18n-heading=\"Cancel new payee modal header@@billpay.manage-payee.cancel-new-payee-modal.header\"\n      >\n      </bb-header-ui>\n      <bb-header-ui\n        *ngIf=\"findPayee\"\n        data-role=\"cancel-new-payee-modal-header\"\n        headingType=\"h2\"\n        heading=\"Find different payee?\"\n        i18n-heading=\"Find different payee modal header@@billpay.manage-payee.cancel-new-payee-modal.findheader\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span\n        i18n=\"Cancel new payee modal body@@billpay.manage-payee.cancel-new-payee-modal.body\"\n        data-role=\"cancel-new-payee-modal-body\"\n        >The new payee will be canceled and any details entered will be lost.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"confirmModal()\"\n          data-role=\"cancel-new-payee-modal-confirm-button\"\n        >\n          <span\n            *ngIf=\"!findPayee\"\n            i18n=\"\n              confirm modal button|Cancel payee confirmation\n              button@@billpay.manage-payee.cancel-new-payee-modal.confirm-button\"\n          >\n            Cancel new payee\n          </span>\n          <span\n            *ngIf=\"findPayee\"\n            i18n=\"\n              confirm modal button|Cancel payee confirmation\n              button@@billpay.manage-payee.cancel-new-payee-modal.confirm-button2\"\n          >\n            Find a different payee\n          </span>\n        </button>\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          i18n=\"\n            cancel modal button|Continue with current payee\n            button@@billpay.manage-payee.cancel-new-payee-modal.cancel-button\"\n          (click)=\"cancelModal()\"\n          data-role=\"cancel-new-payee-modal-cancel-button\"\n        >\n          Continue with this payee\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$4.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$4.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$4.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$4.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$4.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$4.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$4.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayCancelNewPayeeModalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-cancel-new-payee-modal',
                        templateUrl: './billpay-cancel-new-payee-modal.component.html',
                    }]
            }], propDecorators: { resolve: [{
                    type: i0.Output
                }], findPayee: [{
                    type: i0.Input
                }] } });

    var CreateManualPayeeReviewViewComponent = /** @class */ (function () {
        /** @internal */
        function CreateManualPayeeReviewViewComponent(config, router, stateService, dataService, notificationService, discardModalService, billpayNotificationRoutingService) {
            this.config = config;
            this.router = router;
            this.stateService = stateService;
            this.dataService = dataService;
            this.notificationService = notificationService;
            this.discardModalService = discardModalService;
            this.billpayNotificationRoutingService = billpayNotificationRoutingService;
            this.notificationHeaderTemplate = '';
            this.notificationMessageTemplate = '';
            this.payeeSubmit$ = new rxjs.BehaviorSubject(undefined);
            this.destroy$ = new rxjs.Subject();
        }
        Object.defineProperty(CreateManualPayeeReviewViewComponent.prototype, "isDiscardModalOpen", {
            get: function () {
                return this.discardModalService.isDiscardModalOpen;
            },
            enumerable: false,
            configurable: true
        });
        CreateManualPayeeReviewViewComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.stateService.manualPayeeFormState.pipe(operators.take(1)).subscribe(function (payee) {
                _this.payee = payee;
                if (!_this.payee) {
                    _this.router.navigateToManualPayeeForm();
                }
            });
            this.payeeSubmit$
                .pipe(operators.takeUntil(this.destroy$), operators.filter(Boolean))
                .subscribe(function (payee) { return _this.onSubmitPayee(payee); });
        };
        CreateManualPayeeReviewViewComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        CreateManualPayeeReviewViewComponent.prototype.onWindowUnload = function ($event) {
            if (!this.isDiscardModalOpen) {
                $event.returnValue = true;
            }
        };
        CreateManualPayeeReviewViewComponent.prototype.submitPayee = function (payee) {
            this.payeeSubmit$.next(payee);
        };
        CreateManualPayeeReviewViewComponent.prototype.navigateBack = function () {
            this.router.navigateToManualPayeeForm();
        };
        CreateManualPayeeReviewViewComponent.prototype.cancel = function () {
            this.router.navigateToPayeeList();
        };
        CreateManualPayeeReviewViewComponent.prototype.navigateToPayee = function () {
            this.billpayNotificationRoutingService.navigateToPayees();
        };
        CreateManualPayeeReviewViewComponent.prototype.openModal = function () {
            var _this = this;
            return this.payeeSubmit$.pipe(operators.switchMap(function (payee) { return (payee ? rxjs.of(true) : _this.discardModalService.openModal()); }), operators.tap(function (isResolved) { return isResolved && _this.stateService.resetManualPayee(); }));
        };
        CreateManualPayeeReviewViewComponent.prototype.onModalResolve = function (resolvedWith) {
            this.discardModalService.onModalResolve(resolvedWith);
        };
        CreateManualPayeeReviewViewComponent.prototype.onSubmitPayee = function (payee) {
            var _this = this;
            this.dataService.addManualPayee(payee).subscribe(function () {
                _this.router.navigateToPayeeList();
                _this.notificationService.showNotification({
                    header: _this.notificationHeaderTemplate,
                    message: _this.notificationMessageTemplate,
                    modifier: 'success',
                    ttl: _this.dismissTimeout,
                });
            }, function () { return _this.notificationService.showNotification({
                header: $localize(templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject([":@@billpay.create-manuel-payee.error-notification.header:Something went wrong"], [":@@billpay.create-manuel-payee.error-notification.header:Something went wrong"]))),
                message: $localize(templateObject_2$3 || (templateObject_2$3 = __makeTemplateObject([":@@billpay.create-manuel-payee.error-notification.header:We were unable to proceed. Please try again."], [":@@billpay.create-manuel-payee.error-notification.header:We were unable to proceed. Please try again."]))),
                modifier: 'error',
                ttl: _this.dismissTimeout,
            }); });
        };
        Object.defineProperty(CreateManualPayeeReviewViewComponent.prototype, "dismissTimeout", {
            get: function () {
                if (this.config.notificationDismissTime === undefined) {
                    throw new Error('Dismiss timeout value not found');
                }
                return this.config.notificationDismissTime;
            },
            enumerable: false,
            configurable: true
        });
        return CreateManualPayeeReviewViewComponent;
    }());
    CreateManualPayeeReviewViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CreateManualPayeeReviewViewComponent, deps: [{ token: ManagePayeesJourneyConfigService }, { token: ManagePayeesNavigationService }, { token: BillpayManagePayeeStateService }, { token: BillpayManagePayeeDataService }, { token: i5__namespace$2.NotificationService }, { token: i4__namespace.BillpayDiscardChangesModalService }, { token: i4__namespace.BillpayNotificationRoutingService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    CreateManualPayeeReviewViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CreateManualPayeeReviewViewComponent, selector: "ng-component", host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, providers: [i4.BillpayDiscardChangesModalService], viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], ngImport: i0__namespace, template: "<div class=\"card card-lg\" *ngIf=\"payee\">\n  <section class=\"card-body\">\n    <bb-billpay-manual-payee-review [payeeFormState]=\"payee\"> </bb-billpay-manual-payee-review>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        data-role=\"add-payee-button\"\n        i18n=\"Label for button|Manual payee continue button@@billpay-create-manual-payee-review.add-payee\"\n        (click)=\"submitPayee(payee)\"\n        class=\"bb-button-bar__button\"\n      >\n        Add payee\n      </button>\n      <button\n        bbButton\n        data-role=\"back-button\"\n        i18n=\"Label for button|Find a different payee button@@billpay-create-manual-payee-review.edit-payee\"\n        (click)=\"navigateBack()\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n      >\n        Edit\n      </button>\n      <button\n        bbButton\n        data-role=\"cancel-button\"\n        color=\"link\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        (click)=\"cancel()\"\n        i18n=\"Label for button|Cancel button@@billpay-create-manual-payee-review.cancel-payee\"\n      >\n        Cancel\n      </button>\n    </div>\n  </section>\n</div>\n\n<bb-billpay-cancel-new-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-new-payee-modal>\n\n<ng-template #notificationMessage>\n  <span\n    data-role=\"notification-message\"\n    i18n=\"\n      Payee notification message|Payee has created successfully\n      notification@@billpay-create-manual-payee-review.notification.message\"\n    >The payee \u2018{{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }}\u2018 has been created\n    successfully\n  </span>\n\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"notification-add-payee-button\"\n      color=\"primary\"\n      class=\"bb-button-bar__button\"\n      i18n=\"notification button|Add another payee@@billpay-create-manual-payee-review.notification.add-button\"\n      (click)=\"navigateToPayee()\"\n    >\n      Add another payee\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      Payee notification header|Payee created success notification\n      header@@billpay-create-manual-payee-review.notification.header\"\n    >Payee created</span\n  >\n</ng-template>\n", components: [{ type: BillpayManualPayeeReviewComponent, selector: "bb-billpay-manual-payee-review", inputs: ["payeeFormState"] }, { type: BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: ["findPayee"], outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CreateManualPayeeReviewViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-create-manual-payee-review-view.component.html',
                        providers: [i4.BillpayDiscardChangesModalService],
                    }]
            }], ctorParameters: function () { return [{ type: ManagePayeesJourneyConfigService }, { type: ManagePayeesNavigationService }, { type: BillpayManagePayeeStateService }, { type: BillpayManagePayeeDataService }, { type: i5__namespace$2.NotificationService }, { type: i4__namespace.BillpayDiscardChangesModalService }, { type: i4__namespace.BillpayNotificationRoutingService }]; }, propDecorators: { notificationHeaderTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationHeader']
                }], notificationMessageTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationMessage']
                }], onWindowUnload: [{
                    type: i0.HostListener,
                    args: ['window:beforeunload', ['$event']]
                }] } });
    var templateObject_1$3, templateObject_2$3;

    var BillpayCancelEditPayeeModalComponent = /** @class */ (function () {
        function BillpayCancelEditPayeeModalComponent() {
            this.resolve = new i0.EventEmitter();
        }
        BillpayCancelEditPayeeModalComponent.prototype.cancelModal = function () {
            this.resolve.emit(false);
        };
        BillpayCancelEditPayeeModalComponent.prototype.confirmModal = function () {
            this.resolve.emit(true);
        };
        return BillpayCancelEditPayeeModalComponent;
    }());
    BillpayCancelEditPayeeModalComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayCancelEditPayeeModalComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayCancelEditPayeeModalComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayCancelEditPayeeModalComponent, selector: "bb-billpay-cancel-edit-payee-modal", outputs: { resolve: "resolve" }, ngImport: i0__namespace, template: "<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"cancel-edit-payee-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        data-role=\"cancel-edit-payee-modal-header\"\n        headingType=\"h2\"\n        heading=\"Lose changes?\"\n        i18n-heading=\"Lose changes modal header@@billpay.cancel-edit-payee.modal.header\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span\n        i18n=\"Lose changes modal body@@billpay.cancel-edit-payee.modal.body\"\n        data-role=\"cancel-edit-payee-modal-body\"\n        >Are you sure you want to cancel editing this payee? You will lose any changes made.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          i18n=\"\n            confirm modal button|Cancel edit payee confirmation button@@billpay.cancel-edit-payee.modal.confirm-button\"\n          (click)=\"confirmModal()\"\n          data-role=\"cancel-edit-payee-modal-confirm-button\"\n        >\n          Lose changes\n        </button>\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          i18n=\"\n            cancel modal button|Continue edit with current payee button@@billpay.cancel-edit-payee.modal.cancel-button\"\n          (click)=\"cancelModal()\"\n          data-role=\"cancel-edit-payee-modal-cancel-button\"\n        >\n          Continue editing\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1__namespace$4.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1__namespace$4.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1__namespace$4.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1__namespace$4.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1__namespace$4.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i1__namespace$4.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1__namespace$4.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayCancelEditPayeeModalComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-cancel-edit-payee-modal',
                        templateUrl: './billpay-cancel-edit-payee-modal.component.html',
                    }]
            }], propDecorators: { resolve: [{
                    type: i0.Output
                }] } });

    var EditManualPayeeReviewViewComponent = /** @class */ (function () {
        /** @internal */
        function EditManualPayeeReviewViewComponent(config, router, stateService, dataService, notificationService, route, discardModalService) {
            this.config = config;
            this.router = router;
            this.stateService = stateService;
            this.dataService = dataService;
            this.notificationService = notificationService;
            this.route = route;
            this.discardModalService = discardModalService;
            this.notificationHeaderTemplate = '';
            this.notificationMessageTemplate = '';
            this.payeeSubmit$ = new rxjs.BehaviorSubject(undefined);
            this.destroy$ = new rxjs.Subject();
            this.id$ = this.route.paramMap.pipe(operators.take(1), operators.map(function (params) { return params.get('id') || ''; }));
        }
        EditManualPayeeReviewViewComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.stateService.manualPayeeFormState.pipe(operators.take(1)).subscribe(function (payee) {
                _this.payee = payee;
                if (!_this.payee) {
                    _this.navigateToForm();
                }
            });
            this.payeeSubmit$
                .pipe(operators.takeUntil(this.destroy$), operators.filter(Boolean))
                .subscribe(function (payee) { return _this.onSubmitPayee(payee); });
        };
        Object.defineProperty(EditManualPayeeReviewViewComponent.prototype, "isDiscardModalOpen", {
            get: function () {
                return this.discardModalService.isDiscardModalOpen;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EditManualPayeeReviewViewComponent.prototype, "dismissTimeout", {
            get: function () {
                if (this.config.notificationDismissTime === undefined) {
                    throw new Error('Dismiss timeout value not found');
                }
                return this.config.notificationDismissTime;
            },
            enumerable: false,
            configurable: true
        });
        EditManualPayeeReviewViewComponent.prototype.onWindowUnload = function ($event) {
            if (!this.isDiscardModalOpen) {
                $event.returnValue = true;
            }
        };
        EditManualPayeeReviewViewComponent.prototype.openModal = function () {
            var _this = this;
            return this.payeeSubmit$.pipe(operators.switchMap(function (payee) { return (payee ? rxjs.of(true) : _this.discardModalService.openModal()); }), operators.tap(function (isResolved) { return isResolved && _this.stateService.resetManualPayee(); }));
        };
        EditManualPayeeReviewViewComponent.prototype.onModalResolve = function (resolvedWith) {
            this.discardModalService.onModalResolve(resolvedWith);
            if (resolvedWith) {
                this.router.navigateToPayeeList();
            }
        };
        EditManualPayeeReviewViewComponent.prototype.submitPayee = function (payee) {
            this.payeeSubmit$.next(payee);
        };
        EditManualPayeeReviewViewComponent.prototype.navigateBack = function () {
            this.navigateToForm();
        };
        EditManualPayeeReviewViewComponent.prototype.cancel = function () {
            this.router.navigateToPayeeList();
        };
        EditManualPayeeReviewViewComponent.prototype.navigateToForm = function () {
            var _this = this;
            this.id$.subscribe(function (id) { return _this.router.navigateToEditManualPayeeForm(id); });
        };
        EditManualPayeeReviewViewComponent.prototype.onSubmitPayee = function (payee) {
            var _this = this;
            this.id$.pipe(operators.switchMap(function (id) { return _this.dataService.updateManualPayee(id, payee); })).subscribe(function () {
                _this.router.navigateToPayeeList();
                _this.notificationService.showNotification({
                    header: _this.notificationHeaderTemplate,
                    message: _this.notificationMessageTemplate,
                    modifier: 'success',
                    ttl: _this.dismissTimeout,
                });
            }, function () {
                _this.notificationService.showNotification({
                    header: $localize(templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject([":@@billpay.edit-manuel-payee.error-notification.header:Something went wrong"], [":@@billpay.edit-manuel-payee.error-notification.header:Something went wrong"]))),
                    message: $localize(templateObject_2$2 || (templateObject_2$2 = __makeTemplateObject([":@@billpay.edit-manuel-payee.error-notification.message:We were unable to proceed. Please try again."], [":@@billpay.edit-manuel-payee.error-notification.message:We were unable to proceed. Please try again."]))),
                    modifier: 'error',
                    ttl: _this.dismissTimeout,
                });
            });
        };
        return EditManualPayeeReviewViewComponent;
    }());
    EditManualPayeeReviewViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditManualPayeeReviewViewComponent, deps: [{ token: ManagePayeesJourneyConfigService }, { token: ManagePayeesNavigationService }, { token: BillpayManagePayeeStateService }, { token: BillpayManagePayeeDataService }, { token: i5__namespace$2.NotificationService }, { token: i1__namespace.ActivatedRoute }, { token: i4__namespace.BillpayDiscardChangesModalService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    EditManualPayeeReviewViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EditManualPayeeReviewViewComponent, selector: "ng-component", host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, providers: [i4.BillpayDiscardChangesModalService], viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], ngImport: i0__namespace, template: "<div class=\"card card-lg\" *ngIf=\"payee\">\n  <section class=\"card-body\">\n    <bb-billpay-manual-payee-review [payeeFormState]=\"payee\"> </bb-billpay-manual-payee-review>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        data-role=\"save-payee-button\"\n        i18n=\"Label for button|Manual payee continue button@@billpay-edit-manual-payee-review.save-payee\"\n        (click)=\"submitPayee(payee)\"\n        class=\"bb-button-bar__button\"\n      >\n        Confirm payee details\n      </button>\n      <button\n        bbButton\n        data-role=\"back-button\"\n        i18n=\"Label for button|Find a different payee button@@billpay-edit-manual-payee-review.edit-payee\"\n        (click)=\"navigateBack()\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n      >\n        Edit payee details\n      </button>\n      <button\n        bbButton\n        data-role=\"cancel-button\"\n        color=\"link\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        (click)=\"cancel()\"\n        i18n=\"Cancel edit|Label for a button that cancels form changes@@billpay-edit-manual-payee-review.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </section>\n</div>\n<bb-billpay-cancel-edit-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-edit-payee-modal>\n\n<ng-template #notificationMessage>\n  <ng-container>\n    <span\n      data-role=\"notification-message\"\n      i18n=\"Payee notification message|Payee edited notification@@billpay-edit-manual-payee-review.notification.message\"\n      >The payee \u2018{{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }}\u2018 has been changed\n      successfully</span\n    >\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      Payee notification header|Payee edited notification header@@billpay-edit-manual-payee-review.notification.header\"\n    >Payee edited</span\n  >\n</ng-template>\n", components: [{ type: BillpayManualPayeeReviewComponent, selector: "bb-billpay-manual-payee-review", inputs: ["payeeFormState"] }, { type: BillpayCancelEditPayeeModalComponent, selector: "bb-billpay-cancel-edit-payee-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditManualPayeeReviewViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-edit-manual-payee-review-view.component.html',
                        providers: [i4.BillpayDiscardChangesModalService],
                    }]
            }], ctorParameters: function () { return [{ type: ManagePayeesJourneyConfigService }, { type: ManagePayeesNavigationService }, { type: BillpayManagePayeeStateService }, { type: BillpayManagePayeeDataService }, { type: i5__namespace$2.NotificationService }, { type: i1__namespace.ActivatedRoute }, { type: i4__namespace.BillpayDiscardChangesModalService }]; }, propDecorators: { notificationHeaderTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationHeader']
                }], notificationMessageTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationMessage']
                }], onWindowUnload: [{
                    type: i0.HostListener,
                    args: ['window:beforeunload', ['$event']]
                }] } });
    var templateObject_1$2, templateObject_2$2;

    var BaseElectronicPayeeReviewPageModelDirective = /** @class */ (function () {
        /** @internal */
        function BaseElectronicPayeeReviewPageModelDirective(route, stateService, discardModalService, config) {
            this.route = route;
            this.stateService = stateService;
            this.discardModalService = discardModalService;
            this.config = config;
            this.destroy$ = new rxjs.Subject();
            this.payee$ = this.stateService.electronicPayeeFormState.pipe(operators.take(1), operators.shareReplay(1));
            this.id$ = this.route.paramMap.pipe(operators.take(1), operators.map(function (params) { return params.get('id') || ''; }));
        }
        BaseElectronicPayeeReviewPageModelDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.payee$
                .pipe(operators.filter(function (payee) { return !payee; }), operators.switchMap(function () { return _this.id$; }))
                .subscribe(function (id) {
                _this.navigateBack(id);
            });
            this.payeeSubmit$.pipe(operators.takeUntil(this.destroy$), operators.filter(Boolean)).subscribe(function (payee) { return _this.onSubmitPayee(payee); });
        };
        BaseElectronicPayeeReviewPageModelDirective.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        BaseElectronicPayeeReviewPageModelDirective.prototype.onWindowUnload = function ($event) {
            if (!this.isDiscardModalOpen) {
                $event.returnValue = true;
            }
        };
        Object.defineProperty(BaseElectronicPayeeReviewPageModelDirective.prototype, "isDiscardModalOpen", {
            get: function () {
                return this.discardModalService.isDiscardModalOpen;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BaseElectronicPayeeReviewPageModelDirective.prototype, "dismissTimeout", {
            get: function () {
                if (this.config.notificationDismissTime === undefined) {
                    throw new Error('Dismiss timeout value not found');
                }
                return this.config.notificationDismissTime;
            },
            enumerable: false,
            configurable: true
        });
        BaseElectronicPayeeReviewPageModelDirective.prototype.openModal = function () {
            var _this = this;
            return this.payeeSubmit$.pipe(operators.switchMap(function (payee) { return (payee ? rxjs.of(true) : _this.discardModalService.openModal()); }), operators.tap(function (isResolved) { return isResolved && _this.stateService.resetElectronicPayee(); }));
        };
        BaseElectronicPayeeReviewPageModelDirective.prototype.onModalResolve = function (resolvedWith) {
            this.discardModalService.onModalResolve(resolvedWith);
        };
        return BaseElectronicPayeeReviewPageModelDirective;
    }());
    BaseElectronicPayeeReviewPageModelDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BaseElectronicPayeeReviewPageModelDirective, deps: [{ token: i1__namespace.ActivatedRoute }, { token: BillpayManagePayeeStateService }, { token: i4__namespace.BillpayDiscardChangesModalService }, { token: ManagePayeesJourneyConfigService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    BaseElectronicPayeeReviewPageModelDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: BaseElectronicPayeeReviewPageModelDirective, host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BaseElectronicPayeeReviewPageModelDirective, decorators: [{
                type: i0.Directive
            }], ctorParameters: function () { return [{ type: i1__namespace.ActivatedRoute }, { type: BillpayManagePayeeStateService }, { type: i4__namespace.BillpayDiscardChangesModalService }, { type: ManagePayeesJourneyConfigService }]; }, propDecorators: { onWindowUnload: [{
                    type: i0.HostListener,
                    args: ['window:beforeunload', ['$event']]
                }] } });

    var BillpayElectronicPayeeReviewComponent = /** @class */ (function () {
        function BillpayElectronicPayeeReviewComponent() {
        }
        return BillpayElectronicPayeeReviewComponent;
    }());
    BillpayElectronicPayeeReviewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayElectronicPayeeReviewComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayElectronicPayeeReviewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayElectronicPayeeReviewComponent, selector: "bb-billpay-electronic-payee-review", inputs: { payee: "payee" }, ngImport: i0__namespace, template: "<div *ngIf=\"payee\" class=\"bb-block bb-block--xl\">\n  <div class=\"bb-block bb-block--md\">\n    <bb-header-ui\n      headingType=\"h2\"\n      heading=\"Payee details\"\n      i18n-heading=\"\n        Electronic payee review heading|Label for group of data related to the payee\n        details@@billpay-electronic-payee-review.details-heading\"\n      data-role=\"payee-review-heading\"\n    ></bb-header-ui>\n  </div>\n  <div class=\"bb-block bb-block--md\">\n    <div\n      i18n=\"label|Label for payee name@@billpay-electronic-payee-review.name\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-name-label\"\n    >\n      Payee name\n    </div>\n    <div data-role=\"payee-name\">{{ payee.name }}</div>\n  </div>\n\n  <div class=\"bb-block bb-block--md\">\n    <div\n      i18n=\"label|Label for payee account number@@billpay-electronic-payee-review.account-number\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-account-number-label\"\n    >\n      Account number\n    </div>\n    <div data-role=\"payee-account-number\">{{ payee.accountNumber }}</div>\n  </div>\n\n  <div *ngIf=\"payee.merchantZipCode\" class=\"bb-block bb-block--md\">\n    <div\n      i18n=\"label|Label for payee address@@billpay-electronic-payee-review.address\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-zip-code-label\"\n    >\n      Payee ZIP code\n    </div>\n    <div data-role=\"payee-zip-code\">{{ payee.merchantZipCode }}</div>\n  </div>\n\n  <div *ngIf=\"payee.nickName\">\n    <div\n      i18n=\"label|Label for payee nickname@@billpay-electronic-payee-review.nickname\"\n      class=\"bb-text-semi-bold\"\n      data-role=\"payee-nickname-label\"\n    >\n      Payee nickname\n    </div>\n    <div data-role=\"payee-nickname\">{{ payee.nickName }}</div>\n  </div>\n</div>\n", components: [{ type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayElectronicPayeeReviewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-electronic-payee-review',
                        templateUrl: './billpay-electronic-payee-review.component.html',
                    }]
            }], propDecorators: { payee: [{
                    type: i0.Input
                }] } });

    var CreateElectronicPayeeReviewViewComponent = /** @class */ (function (_super) {
        __extends(CreateElectronicPayeeReviewViewComponent, _super);
        /** @internal */
        function CreateElectronicPayeeReviewViewComponent(config, route, stateService, discardModalService, router, dataService, notificationService, billpayNotificationRoutingService) {
            var _this = _super.call(this, route, stateService, discardModalService, config) || this;
            _this.config = config;
            _this.route = route;
            _this.router = router;
            _this.dataService = dataService;
            _this.notificationService = notificationService;
            _this.billpayNotificationRoutingService = billpayNotificationRoutingService;
            _this.notificationHeaderTemplate = '';
            _this.notificationMessageTemplate = '';
            _this.payeeSubmit$ = new rxjs.BehaviorSubject(undefined);
            return _this;
        }
        CreateElectronicPayeeReviewViewComponent.prototype.submitPayee = function (id, payee) {
            this.payeeSubmit$.next(Object.assign({ merchantID: id }, payee));
        };
        CreateElectronicPayeeReviewViewComponent.prototype.navigateBack = function (id) {
            this.router.navigateToElectronicPayeeForm(id, { queryParamsHandling: 'preserve' });
        };
        CreateElectronicPayeeReviewViewComponent.prototype.navigateToPayee = function () {
            this.billpayNotificationRoutingService.navigateToPayees();
        };
        CreateElectronicPayeeReviewViewComponent.prototype.navigateToNewPayment = function () {
            this.billpayNotificationRoutingService.navigateToNewPayment(this.successfulPayeeId);
        };
        CreateElectronicPayeeReviewViewComponent.prototype.onSubmitPayee = function (payee) {
            var _this = this;
            this.dataService.addElectronicPayee(payee).subscribe(function (billPayPutPostResponse) {
                _this.successfulPayeeId = billPayPutPostResponse.id;
                _this.router.navigateToPayeeList();
                _this.notificationService.showNotification({
                    header: _this.notificationHeaderTemplate,
                    message: _this.notificationMessageTemplate,
                    modifier: 'success',
                    ttl: _this.dismissTimeout,
                });
            }, function (_a) {
                var error = _a.error;
                var _b = _this.mapErrorNotificationContent(error === null || error === void 0 ? void 0 : error.errors), header = _b.header, message = _b.message;
                _this.notificationService.showNotification({
                    header: header,
                    message: message,
                    modifier: 'error',
                    ttl: _this.dismissTimeout,
                });
            });
        };
        CreateElectronicPayeeReviewViewComponent.prototype.mapErrorNotificationContent = function (errors) {
            if (errors === void 0) { errors = []; }
            if (errors.find(function (error) { return error.key === 'billpay.api.payeeAlreadyExists'; })) {
                return {
                    header: $localize(templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject([":@@billpay.add-e-payee.alreadyExist-error-notification.header:Failed to add a new payee"], [":@@billpay.add-e-payee.alreadyExist-error-notification.header:Failed to add a new payee"]))),
                    message: $localize(templateObject_2$1 || (templateObject_2$1 = __makeTemplateObject([":@@billpay.add-e-payee.alreadyExist-error-notification.header:The payee could not be added because it already exists."], [":@@billpay.add-e-payee.alreadyExist-error-notification.header:The payee could not be added because it already exists."]))),
                };
            }
            else {
                return {
                    header: $localize(templateObject_3 || (templateObject_3 = __makeTemplateObject([":@@billpay.add-e-payee.default-error-notification.header:Something went wrong"], [":@@billpay.add-e-payee.default-error-notification.header:Something went wrong"]))),
                    message: $localize(templateObject_4 || (templateObject_4 = __makeTemplateObject([":@@billpay.add-e-payee.default-error-notification.header:We were unable to proceed. Please try again."], [":@@billpay.add-e-payee.default-error-notification.header:We were unable to proceed. Please try again."]))),
                };
            }
        };
        CreateElectronicPayeeReviewViewComponent.prototype.cancel = function () {
            this.router.navigateToPayeeList();
        };
        return CreateElectronicPayeeReviewViewComponent;
    }(BaseElectronicPayeeReviewPageModelDirective));
    CreateElectronicPayeeReviewViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CreateElectronicPayeeReviewViewComponent, deps: [{ token: ManagePayeesJourneyConfigService }, { token: i1__namespace.ActivatedRoute }, { token: BillpayManagePayeeStateService }, { token: i4__namespace.BillpayDiscardChangesModalService }, { token: ManagePayeesNavigationService }, { token: BillpayManagePayeeDataService }, { token: i5__namespace$2.NotificationService }, { token: i4__namespace.BillpayNotificationRoutingService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    CreateElectronicPayeeReviewViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CreateElectronicPayeeReviewViewComponent, selector: "ng-component", providers: [i4.BillpayDiscardChangesModalService], viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"{ payee: payee$ | async, id: id$ | async } as context\">\n  <div class=\"card card-lg\">\n    <section class=\"card-body\">\n      <bb-billpay-electronic-payee-review [payee]=\"context.payee\"> </bb-billpay-electronic-payee-review>\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          data-role=\"add-payee-button\"\n          i18n=\"Label for button|Electronic payee continue button@@billpay-create-electronic-payee-review.add-payee\"\n          (click)=\"submitPayee(context.id, context.payee)\"\n          class=\"bb-button-bar__button\"\n        >\n          Add payee\n        </button>\n        <button\n          bbButton\n          data-role=\"back-button\"\n          i18n=\"Label for button|Edit button@@billpay-create-electronic-payee-review.edit-payee\"\n          (click)=\"navigateBack(context.id)\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n        >\n          Edit\n        </button>\n        <button\n          bbButton\n          data-role=\"cancel-button\"\n          color=\"link\"\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          (click)=\"cancel()\"\n          i18n=\"Label for button|Cancel button@@billpay-create-electronic-payee-review.cancel-payee\"\n        >\n          Cancel\n        </button>\n      </div>\n    </section>\n  </div>\n\n  <bb-billpay-cancel-new-payee-modal\n    *ngIf=\"isDiscardModalOpen\"\n    (resolve)=\"onModalResolve($event)\"\n  ></bb-billpay-cancel-new-payee-modal>\n</ng-container>\n\n<ng-template *ngIf=\"payee$ | async as payee\" #notificationMessage>\n  <span\n    data-role=\"notification-message\"\n    i18n=\"\n      Payee notification message|Payee has created successfully\n      notification@@billpay-create-electronic-payee-review.notification.message\"\n    >The payee \u2018{{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }}\u2018 has been created\n    successfully\n  </span>\n\n  <div class=\"bb-button-bar\">\n    <button\n      bbButton\n      data-role=\"notification-payee-button\"\n      class=\"bb-button-bar__button\"\n      i18n=\"notification button|Pay button@@billpay-create-electronic-payee-review.notification.pay-button\"\n      (click)=\"navigateToNewPayment()\"\n    >\n      Pay\n    </button>\n    <button\n      bbButton\n      data-role=\"notification-add-payee-button\"\n      color=\"secondary\"\n      class=\"bb-button-bar__button\"\n      i18n=\"notification button|Add another payee@@billpay-create-electronic-payee-review.notification.add-button\"\n      (click)=\"navigateToPayee()\"\n    >\n      Add another payee\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    class=\"text-dark\"\n    i18n=\"\n      Payee notification header|Payee created success notification\n      header@@billpay-create-electronic-payee-review.notification.header\"\n    >Payee created</span\n  >\n</ng-template>\n", components: [{ type: BillpayElectronicPayeeReviewComponent, selector: "bb-billpay-electronic-payee-review", inputs: ["payee"] }, { type: BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: ["findPayee"], outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: CreateElectronicPayeeReviewViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-create-electronic-payee-review-view.component.html',
                        providers: [i4.BillpayDiscardChangesModalService],
                    }]
            }], ctorParameters: function () { return [{ type: ManagePayeesJourneyConfigService }, { type: i1__namespace.ActivatedRoute }, { type: BillpayManagePayeeStateService }, { type: i4__namespace.BillpayDiscardChangesModalService }, { type: ManagePayeesNavigationService }, { type: BillpayManagePayeeDataService }, { type: i5__namespace$2.NotificationService }, { type: i4__namespace.BillpayNotificationRoutingService }]; }, propDecorators: { notificationHeaderTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationHeader']
                }], notificationMessageTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationMessage']
                }] } });
    var templateObject_1$1, templateObject_2$1, templateObject_3, templateObject_4;

    var EditElectronicPayeeReviewViewComponent = /** @class */ (function (_super) {
        __extends(EditElectronicPayeeReviewViewComponent, _super);
        /** @internal */
        function EditElectronicPayeeReviewViewComponent(config, route, stateService, discardModalService, router, dataService, notificationService) {
            var _this = _super.call(this, route, stateService, discardModalService, config) || this;
            _this.config = config;
            _this.router = router;
            _this.dataService = dataService;
            _this.notificationService = notificationService;
            _this.notificationHeaderTemplate = '';
            _this.notificationMessageTemplate = '';
            _this.payeeSubmit$ = new rxjs.BehaviorSubject(undefined);
            return _this;
        }
        EditElectronicPayeeReviewViewComponent.prototype.submitPayee = function (payee) {
            this.payeeSubmit$.next(payee);
        };
        EditElectronicPayeeReviewViewComponent.prototype.navigateBack = function (id) {
            this.router.navigateToEditElectronicPayeeForm(id);
        };
        EditElectronicPayeeReviewViewComponent.prototype.onSubmitPayee = function (payee) {
            var _this = this;
            this.id$.pipe(operators.switchMap(function (id) { return _this.dataService.updateElectronicPayee(id, payee); })).subscribe(function () {
                _this.router.navigateToPayeeList();
                _this.notificationService.showNotification({
                    header: _this.notificationHeaderTemplate,
                    message: _this.notificationMessageTemplate,
                    modifier: 'success',
                    ttl: _this.dismissTimeout,
                });
            }, function () {
                _this.notificationService.showNotification({
                    header: $localize(templateObject_1 || (templateObject_1 = __makeTemplateObject([":@@billpay.edit-e-payee.error-notification.header:Something went wrong"], [":@@billpay.edit-e-payee.error-notification.header:Something went wrong"]))),
                    message: $localize(templateObject_2 || (templateObject_2 = __makeTemplateObject([":@@billpay.edit-e-payee.error-notification.message:We were unable to proceed. Please try again."], [":@@billpay.edit-e-payee.error-notification.message:We were unable to proceed. Please try again."]))),
                    modifier: 'error',
                    ttl: _this.dismissTimeout,
                });
            });
        };
        EditElectronicPayeeReviewViewComponent.prototype.cancel = function () {
            this.router.navigateToPayeeList();
        };
        return EditElectronicPayeeReviewViewComponent;
    }(BaseElectronicPayeeReviewPageModelDirective));
    EditElectronicPayeeReviewViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditElectronicPayeeReviewViewComponent, deps: [{ token: ManagePayeesJourneyConfigService }, { token: i1__namespace.ActivatedRoute }, { token: BillpayManagePayeeStateService }, { token: i4__namespace.BillpayDiscardChangesModalService }, { token: ManagePayeesNavigationService }, { token: BillpayManagePayeeDataService }, { token: i5__namespace$2.NotificationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    EditElectronicPayeeReviewViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EditElectronicPayeeReviewViewComponent, selector: "ng-component", providers: [i4.BillpayDiscardChangesModalService], viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], usesInheritance: true, ngImport: i0__namespace, template: "<div class=\"card card-lg\" *ngIf=\"payee$ | async as payee\">\n  <section class=\"card-body\">\n    <bb-billpay-electronic-payee-review [payee]=\"payee\"> </bb-billpay-electronic-payee-review>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        data-role=\"add-payee-button\"\n        i18n=\"Label for button|Electronic payee confirm edit button@@billpay-edit-electronic-payee-review.confirm-payee\"\n        (click)=\"submitPayee(payee)\"\n        class=\"bb-button-bar__button\"\n      >\n        Confirm payee details\n      </button>\n      <button\n        *ngIf=\"id$ | async as id\"\n        bbButton\n        data-role=\"back-button\"\n        i18n=\"Label for button|Edit payee details button@@billpay-edit-electronic-payee-review.edit-payee\"\n        (click)=\"navigateBack(id)\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n      >\n        Edit payee details\n      </button>\n      <button\n        bbButton\n        data-role=\"cancel-button\"\n        color=\"link\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        (click)=\"cancel()\"\n        i18n=\"Cancel edit|Label for a button that cancels form changes@@billpay-edit-electronic-payee-review.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </section>\n  \n  <ng-template #notificationMessage>\n    <span\n      data-role=\"notification-message\"\n      i18n=\"\n        Payee notification message|Payee has been changed successfully\n        notification@@billpay-edit-electronic-payee-review.notification.message\"\n      >The payee \u2018{{ payee.nickName ? payee.nickName + ' (' + payee.name + ')' : payee.name }}\u2018 has been changed\n      successfully\n    </span>\n  </ng-template>\n</div>\n\n<bb-billpay-cancel-edit-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-edit-payee-modal>\n\n\n<ng-template #notificationHeader>\n  <span\n    class=\"text-dark\"\n    i18n=\"\n      Payee notification header|Payee edited success notification\n      header@@billpay-edit-electronic-payee-review.notification.header\"\n    >Payee edited</span\n  >\n</ng-template>\n", components: [{ type: BillpayElectronicPayeeReviewComponent, selector: "bb-billpay-electronic-payee-review", inputs: ["payee"] }, { type: BillpayCancelEditPayeeModalComponent, selector: "bb-billpay-cancel-edit-payee-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: EditElectronicPayeeReviewViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-edit-electronic-payee-review-view.component.html',
                        providers: [i4.BillpayDiscardChangesModalService],
                    }]
            }], ctorParameters: function () { return [{ type: ManagePayeesJourneyConfigService }, { type: i1__namespace.ActivatedRoute }, { type: BillpayManagePayeeStateService }, { type: i4__namespace.BillpayDiscardChangesModalService }, { type: ManagePayeesNavigationService }, { type: BillpayManagePayeeDataService }, { type: i5__namespace$2.NotificationService }]; }, propDecorators: { notificationHeaderTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationHeader']
                }], notificationMessageTemplate: [{
                    type: i0.ViewChild,
                    args: ['notificationMessage']
                }] } });
    var templateObject_1, templateObject_2;

    var BillpayElectronicPayeeFormComponent = /** @class */ (function () {
        /** @internal */
        function BillpayElectronicPayeeFormComponent(formBuilder) {
            this.formBuilder = formBuilder;
            /**
             * Displays the zip code input field. Defaults to false.
             */
            this.zipCodeRequired = false;
            /**
             * Displays back button which returns to payee search. Defaults to true.
             */
            this.backButtonShown = true;
            this.formSubmitted = new i0.EventEmitter();
            this.formCanceled = new i0.EventEmitter();
            this.backToSearch = new i0.EventEmitter();
            this.valueChanged = new i0.EventEmitter();
            this.payeeForm = new i1$5.FormGroup({});
            this.destroy$ = new rxjs.Subject();
            this.isSubmissionAttempted = false;
            this.nickNameDescId = i4.BillpayUtilityService.generateId();
            this.accNumberDescId = i4.BillpayUtilityService.generateId();
        }
        BillpayElectronicPayeeFormComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.payeeForm = this.createForm();
            this.setValidators();
            this.payeeForm.valueChanges.pipe(operators.takeUntil(this.destroy$), operators.take(1)).subscribe(function () {
                _this.valueChanged.emit();
            });
        };
        BillpayElectronicPayeeFormComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        BillpayElectronicPayeeFormComponent.prototype.onSubmit = function (payeeForm) {
            if (!this.isSubmissionAttempted) {
                this.isSubmissionAttempted = true;
            }
            if (payeeForm.invalid) {
                payeeForm.markAllAsTouched();
                return;
            }
            this.formSubmitted.emit(this.payeeForm.value);
        };
        BillpayElectronicPayeeFormComponent.prototype.cancelForm = function () {
            this.formCanceled.emit();
        };
        BillpayElectronicPayeeFormComponent.prototype.toSearch = function () {
            this.backToSearch.emit();
        };
        BillpayElectronicPayeeFormComponent.prototype.hasError = function (controlName, errorName) {
            var control = this.payeeForm.get(controlName);
            return !!control && control.touched && control.hasError(errorName);
        };
        BillpayElectronicPayeeFormComponent.prototype.createForm = function () {
            return this.formBuilder.group(Object.assign({}, this.payee));
        };
        BillpayElectronicPayeeFormComponent.prototype.setValidators = function () {
            var _this = this;
            [
                ['merchantZipCode', [i1$5.Validators.required, i1$5.Validators.pattern(/^\d{5}(\d{4})?$/)]],
                ['accountNumber', [i1$5.Validators.required, i1$5.Validators.minLength(2), i1$5.Validators.maxLength(100)]],
                ['nickName', [i1$5.Validators.minLength(2), i1$5.Validators.maxLength(100)]],
            ].forEach(function (_a) {
                var _b = __read(_a, 2), controlName = _b[0], validators = _b[1];
                var control = _this.payeeForm.get(controlName);
                if (control) {
                    control.setValidators(validators);
                    control.updateValueAndValidity();
                }
            });
        };
        return BillpayElectronicPayeeFormComponent;
    }());
    BillpayElectronicPayeeFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayElectronicPayeeFormComponent, deps: [{ token: i1__namespace$5.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayElectronicPayeeFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayElectronicPayeeFormComponent, selector: "bb-billpay-electronic-payee-form", inputs: { payee: "payee", zipCodeRequired: "zipCodeRequired", backButtonShown: "backButtonShown" }, outputs: { formSubmitted: "formSubmitted", formCanceled: "formCanceled", backToSearch: "backToSearch", valueChanged: "valueChanged" }, ngImport: i0__namespace, template: "<div class=\"card card-lg\">\n  <section class=\"card-body\">\n    <form data-role=\"electronic-payee-form\" (ngSubmit)=\"onSubmit(payeeForm)\" [formGroup]=\"payeeForm\">\n      <bb-fieldset-ui>\n        <div class=\"bb-block bb-block--md\">\n          <bb-header-ui\n            headingType=\"h2\"\n            [heading]=\"'Account details for ' + payee?.name\"\n            i18n-heading=\"Fieldset heading|Account name heading@@billpay-electronic-payee-form.payee-details-heading\"\n            data-role=\"payee-name-heading\"\n          ></bb-header-ui>\n        </div>\n        <div [class.bb-block--lg]=\"zipCodeRequired\" data-role=\"account-number-label\">\n          <div class=\"bb-form-field bb-form-field--md\">\n            <bb-input-text-ui\n              formControlName=\"accountNumber\"\n              data-role=\"account-number-input\"\n              label=\"Account number\"\n              i18n-label=\"label|Label for account number field@@billpay-electronic-payee-form.account-number-label\"\n              [aria-describedby]=\"accNumberDescId\"\n              autofocus\n            >\n            </bb-input-text-ui>\n          </div>\n          <div\n            id=\"{{ accNumberDescId }}\"\n            class=\"bb-subtitle bb-text-support\"\n            i18n=\"label|Label for account number info message@@billpay-electronic-payee-form.account-number-info\"\n            data-role=\"account-number-help-text\"\n          >\n            Enter account number as it appears on your bill\n          </div>\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('accountNumber', 'required')\"\n            i18n=\"\n              error text|Account number required error text@@billpay-electronic-payee-form.error.account-number-required\"\n            data-role=\"account-number-error-required\"\n          >\n            Please enter an account number\n          </bb-input-validation-message-ui>\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('accountNumber', 'minlength')\"\n            i18n=\"\n              error text|Account number minlength error\n              text@@billpay-electronic-payee-form.error.account-number-minlength\"\n            data-role=\"account-number-error-minlength\"\n          >\n            Account number must be at least 2 characters\n          </bb-input-validation-message-ui>\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('accountNumber', 'maxlength')\"\n            i18n=\"\n              error text|Account number max length error\n              text@@billpay-electronic-payee-form.error.account-number-maxlength\"\n            data-role=\"account-number-error-maxlength\"\n          >\n            Account number may not be over a hundred characters\n          </bb-input-validation-message-ui>\n        </div>\n        <div *ngIf=\"zipCodeRequired\" data-role=\"zip-code-label\">\n          <div class=\"bb-form-field bb-form-field--xs\">\n            <bb-input-text-ui\n              formControlName=\"merchantZipCode\"\n              data-role=\"zip-code-input\"\n              label=\"Payee ZIP code\"\n              i18n-label=\"label|Label for ZIP code field@@billpay-electronic-payee-form.zip-label\"\n            >\n            </bb-input-text-ui>\n          </div>\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('merchantZipCode', 'required')\"\n            i18n=\"error text|Zip code is required error text@@billpay-electronic-payee-form.error.zip-code-required\"\n            data-role=\"zip-code-error-required\"\n          >\n            Please enter a Zip Code\n          </bb-input-validation-message-ui>\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('merchantZipCode', 'pattern')\"\n            i18n=\"error text|Zip code format error text@@billpay-electronic-payee-form.error.zip-code-format\"\n            data-role=\"zip-code-error-pattern\"\n          >\n            ZIP code should be 5 or 9 digits long\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-fieldset-ui>\n\n      <bb-fieldset-ui>\n        <div class=\"bb-block bb-block--md\">\n          <bb-header-ui\n            headingType=\"h2\"\n            heading=\"Payee nickname\"\n            i18n-heading=\"Payee nickname@@billpay-electronic-payee-form.payee-nickname-heading\"\n            data-role=\"payee-nickname-heading\"\n          ></bb-header-ui>\n        </div>\n        <div>\n          <div class=\"bb-form-field bb-form-field--md\">\n            <label data-role=\"nickname-input-label\" class=\"bb-label\" [attr.id]=\"'bb-nickname-label' + nickNameDescId\">\n              <span i18n=\"label|Label for payee nickname field@@billpay-electronic-payee-form.payee-nickname-label\"\n                >Create payee nickname</span\n              >\n              <span\n                class=\"bb-text-default bb-text-support\"\n                i18n=\"label optional|Label for optional text@@billpay-electronic-payee-form.payee-nickname-label-helper\"\n              >\n                (Optional)</span\n              >\n            </label>\n            <bb-input-text-ui\n              formControlName=\"nickName\"\n              data-role=\"nickname-input\"\n              [aria-describedby]=\"nickNameDescId\"\n              [aria-labelledby]=\"'bb-nickname-label' + nickNameDescId\"\n            ></bb-input-text-ui>\n          </div>\n          <div\n            id=\"{{ nickNameDescId }}\"\n            class=\"bb-subtitle bb-text-support\"\n            i18n=\"label|Label for payee nickname info message@@billpay-electronic-payee-form.payee-nickname-info\"\n            data-role=\"nickname-help-text\"\n          >\n            Choose how you want this payee to appear in bill pay. This information is only available to you.\n          </div>\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('nickName', 'minlength')\"\n            i18n=\"error text|Nickname min length error text@@billpay-electronic-payee-form.error.nickname-minlength\"\n            data-role=\"nickname-error-minlength\"\n          >\n            Nickname must be at least 2 characters\n          </bb-input-validation-message-ui>\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('nickName', 'maxlength')\"\n            i18n=\"error text|Nickname max length error text@@billpay-electronic-payee-form.error.nickname-maxlength\"\n            data-role=\"nickname-error-maxlength\"\n          >\n            Nickname may not be over a hundred characters\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-fieldset-ui>\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          type=\"submit\"\n          data-role=\"continue-button\"\n          i18n=\"Label for button|Electronic payee continue button@@billpay-electronic-payee-form.continue\"\n          class=\"bb-button-bar__button\"\n        >\n          Continue\n        </button>\n        <button\n          bbButton\n          *ngIf=\"backButtonShown\"\n          data-role=\"back-button\"\n          i18n=\"Label for button|Find a different payee button@@billpay-electronic-payee-form.find-different-payee\"\n          (click)=\"toSearch()\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n        >\n          Find a different payee\n        </button>\n        <button\n          bbButton\n          data-role=\"cancel-button\"\n          color=\"link\"\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          (click)=\"cancelForm()\"\n        >\n          <span i18n=\"Cancel edit|Label for a button that cancels form changes@@billpay-electronic-payee-form.cancel\"\n            >Cancel</span\n          >\n        </button>\n      </div>\n    </form>\n  </section>\n</div>\n", components: [{ type: i2__namespace$4.FieldsetComponent, selector: "bb-fieldset-ui", inputs: ["heading", "disabled"] }, { type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i4__namespace$2.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }], directives: [{ type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayElectronicPayeeFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-electronic-payee-form',
                        templateUrl: './billpay-electronic-payee-form.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$5.FormBuilder }]; }, propDecorators: { payee: [{
                    type: i0.Input
                }], zipCodeRequired: [{
                    type: i0.Input
                }], backButtonShown: [{
                    type: i0.Input
                }], formSubmitted: [{
                    type: i0.Output
                }], formCanceled: [{
                    type: i0.Output
                }], backToSearch: [{
                    type: i0.Output
                }], valueChanged: [{
                    type: i0.Output
                }] } });

    var BillpayElectronicPayeeSearchComponent = /** @class */ (function () {
        /** @internal */
        function BillpayElectronicPayeeSearchComponent(dataService) {
            this.dataService = dataService;
            /**
             * Fires a payee's id when electronic payee is selected in the search box.
             */
            this.payeeSelected = new i0.EventEmitter();
            this.errorSearching = new i0.EventEmitter();
            this.typeaheadOptions = {
                ngbTypeahead: this.search.bind(this),
                selectItem: this.onItemSelected.bind(this),
                resultFormatter: function (payee) { return payee.name; },
                inputFormatter: function (payee) { return payee.name; },
            };
        }
        BillpayElectronicPayeeSearchComponent.prototype.search = function (text$) {
            var _this = this;
            var payees$ = function (text) { return _this.dataService.searchPayeesByName(text).pipe(operators.map(function (_a) {
                var payees = _a.payees;
                return payees || [];
            }), operators.catchError(function () {
                _this.errorSearching.emit();
                return rxjs.of([]);
            })); };
            return text$.pipe(operators.debounceTime(300), operators.distinctUntilChanged(), operators.filter(function (text) { return text.length >= 2; }), operators.switchMap(payees$), operators.catchError(function () { return rxjs.of([]); }));
        };
        BillpayElectronicPayeeSearchComponent.prototype.onItemSelected = function (event) {
            this.payeeSelected.emit(event.item);
        };
        return BillpayElectronicPayeeSearchComponent;
    }());
    BillpayElectronicPayeeSearchComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayElectronicPayeeSearchComponent, deps: [{ token: BillpayManagePayeeDataService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayElectronicPayeeSearchComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayElectronicPayeeSearchComponent, selector: "bb-billpay-electronic-payee-search", inputs: { descTextId: "descTextId" }, outputs: { payeeSelected: "payeeSelected", errorSearching: "errorSearching" }, ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl\">\n  <bb-search-box-ui\n    [role]=\"'combobox'\"\n    showClear=\"true\"\n    [aria-describedby]=\"descTextId\"\n    label=\"Payee name\"\n    i18n-label=\"\n      Payee name|Label for electronic search input @@billpay-manage-payee.electronic-payee-search.form.search-label\"\n    clearLabel=\"Clear search\"\n    i18n-clearLabel=\"\n      The aria label used when the clear button is in focus@@billpay-manage-payee.electronic-payee-search.clear-label\"\n    [typeaheadOptions]=\"typeaheadOptions\"\n    [autocomplete]=\"'off'\"\n    autofocus\n  ></bb-search-box-ui>\n</div>\n", components: [{ type: i2__namespace$5.SearchBoxComponent, selector: "bb-search-box-ui", inputs: ["placeholder", "maxLength", "squareBorder", "typeaheadOptions", "showSearch", "showClear", "searchLabel", "clearLabel", "autocomplete"], outputs: ["submit", "clear", "valueChange"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayElectronicPayeeSearchComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-electronic-payee-search',
                        templateUrl: './billpay-electronic-payee-search.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: BillpayManagePayeeDataService }]; }, propDecorators: { payeeSelected: [{
                    type: i0.Output
                }], errorSearching: [{
                    type: i0.Output
                }], descTextId: [{
                    type: i0.Input
                }] } });

    var DEFAULT_FORM_VALUE = {
        name: '',
        address: { address1: '', address2: '', city: '', state: '', postalCode: '' },
        phoneNumber: '',
        accountNumber: '',
        nickName: '',
    };
    var DEFAULT_COUNTRY_CODE = 'US';
    var BillpayManualPayeeFormComponent = /** @class */ (function () {
        /** @internal */
        function BillpayManualPayeeFormComponent(formBuilder, phoneNumberFormatter) {
            this.formBuilder = formBuilder;
            this.phoneNumberFormatter = phoneNumberFormatter;
            /**
             * Hides elements that are not relevant when editing a payee. Defaults to false.
             */
            this.editForm = false;
            this.formSubmitted = new i0.EventEmitter();
            this.formCanceled = new i0.EventEmitter();
            this.backToSearch = new i0.EventEmitter();
            this.valueChanged = new i0.EventEmitter();
            this.payeeForm = new i1$5.FormGroup({});
            this.componentDestroyed$ = new rxjs.Subject();
            this.isSubmissionAttempted = false;
            this.requiredErrorId = i4.BillpayUtilityService.generateId();
            this.minLengthErrorId = i4.BillpayUtilityService.generateId();
            this.maxlengthErrorId = i4.BillpayUtilityService.generateId();
            this.helpTextId = i4.BillpayUtilityService.generateId();
            this.formatErrorId = i4.BillpayUtilityService.generateId();
            this.labelId = i4.BillpayUtilityService.generateId();
        }
        BillpayManualPayeeFormComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.payeeForm = this.createForm();
            this.setValidators();
            this.payeeForm.valueChanges.pipe(operators.takeUntil(this.componentDestroyed$), operators.take(1)).subscribe(function () {
                _this.valueChanged.emit();
            });
            var phoneNumberControl = this.payeeForm.get('phoneNumber');
            if (phoneNumberControl) {
                this.setupPhoneNumberFormatter(phoneNumberControl);
            }
        };
        BillpayManualPayeeFormComponent.prototype.ngOnDestroy = function () {
            this.componentDestroyed$.next();
            this.componentDestroyed$.complete();
        };
        BillpayManualPayeeFormComponent.prototype.onSubmit = function (payeeForm) {
            if (!this.isSubmissionAttempted) {
                this.isSubmissionAttempted = true;
            }
            if (payeeForm.invalid) {
                payeeForm.markAllAsTouched();
                return;
            }
            this.formSubmitted.emit(payeeForm.value);
        };
        BillpayManualPayeeFormComponent.prototype.cancelForm = function () {
            this.formCanceled.emit();
        };
        BillpayManualPayeeFormComponent.prototype.toSearch = function () {
            this.backToSearch.emit();
        };
        BillpayManualPayeeFormComponent.prototype.hasError = function (controlName, errorName) {
            var control = this.payeeForm.get(controlName);
            return !!control && control.touched && control.hasError(errorName);
        };
        BillpayManualPayeeFormComponent.prototype.createForm = function () {
            var _a = Object.assign(Object.assign(Object.assign({}, DEFAULT_FORM_VALUE), this.payeeFormState), { address: Object.assign(Object.assign({}, DEFAULT_FORM_VALUE.address), (this.payeeFormState && Object.assign({}, this.payeeFormState.address))) }), phoneNumber = _a.phoneNumber, address = _a.address, restFormState = __rest(_a, ["phoneNumber", "address"]);
            return this.formBuilder.group(Object.assign(Object.assign({}, restFormState), { phoneNumber: this.formatPhoneNumber(phoneNumber), address: this.formBuilder.group(address) }));
        };
        BillpayManualPayeeFormComponent.prototype.setValidators = function () {
            var _this = this;
            [
                ['name', [i1$5.Validators.required, i1$5.Validators.minLength(2), i1$5.Validators.maxLength(100)]],
                ['address.address1', [i1$5.Validators.required, i1$5.Validators.maxLength(40)]],
                ['address.address2', [i1$5.Validators.maxLength(40)]],
                ['address.city', [i1$5.Validators.required, i1$5.Validators.maxLength(32)]],
                ['address.state', [i1$5.Validators.required]],
                ['address.postalCode', [i1$5.Validators.required, i1$5.Validators.pattern(/^\d{5}(\d{4})?$/)]],
                ['phoneNumber', [i1$5.Validators.pattern(/^\+1 \d{3} \d{3} \d{4}$/)]],
                ['accountNumber', [i1$5.Validators.minLength(2), i1$5.Validators.maxLength(100)]],
                ['nickName', [i1$5.Validators.minLength(2), i1$5.Validators.maxLength(100)]],
            ].forEach(function (_b) {
                var _c = __read(_b, 2), controlName = _c[0], validators = _c[1];
                var control = _this.payeeForm.get(controlName);
                if (control) {
                    control.setValidators(validators);
                    control.updateValueAndValidity();
                }
            });
        };
        BillpayManualPayeeFormComponent.prototype.formatPhoneNumber = function (phoneNumber) {
            return this.phoneNumberFormatter.transform(phoneNumber, DEFAULT_COUNTRY_CODE, true);
        };
        BillpayManualPayeeFormComponent.prototype.setupPhoneNumberFormatter = function (control) {
            var _this = this;
            control.valueChanges.pipe(operators.distinctUntilChanged()).subscribe(function () {
                control.setValue(_this.formatPhoneNumber(control.value), {
                    emitEvent: false,
                });
            });
        };
        return BillpayManualPayeeFormComponent;
    }());
    BillpayManualPayeeFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManualPayeeFormComponent, deps: [{ token: i1__namespace$5.FormBuilder }, { token: i1__namespace$3.PhoneNumberPipe }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayManualPayeeFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayManualPayeeFormComponent, selector: "bb-billpay-manual-payee-form", inputs: { payeeFormState: "payeeFormState", editForm: "editForm" }, outputs: { formSubmitted: "formSubmitted", formCanceled: "formCanceled", backToSearch: "backToSearch", valueChanged: "valueChanged" }, providers: [i1$3.PhoneNumberPipe], ngImport: i0__namespace, template: "<div class=\"card card-lg\">\n  <section class=\"card-body\">\n    <form #form data-role=\"manual-payee-form\" (ngSubmit)=\"onSubmit(payeeForm)\" [formGroup]=\"payeeForm\">\n      <bb-alert-ui\n        *ngIf=\"!editForm\"\n        modifier=\"warning\"\n        [title]=\"\n          'Please note that payees entered manually will have a longer payment processing time and no eBill functionality'\n        \"\n        i18n-title=\"alert title|For create payee form alert@@billpay-manual-payee-form.alert\"\n      >\n      </bb-alert-ui>\n      <div class=\"bb-block bb-block--xl\">\n        <div class=\"bb-form-field bb-form-field--md\">\n          <bb-input-text-ui\n            formControlName=\"name\"\n            data-role=\"name-input\"\n            label=\"Company, organisation or individual's name\"\n            i18n-label=\"label|Label for company, organisation, individual's name field@@billpay-manual-payee-form.name\"\n            [aria-describedby]=\"\n              ['name-' + requiredErrorId, 'name-' + minLengthErrorId, 'name-' + maxlengthErrorId].join(' ')\n            \"\n            autofocus\n          >\n          </bb-input-text-ui>\n        </div>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"hasError('name', 'required')\"\n          i18n=\"error text|Name is required error text@@billpay-manual-payee-form.error.name-required\"\n          data-role=\"name-error-required\"\n          [messageId]=\"'name-' + requiredErrorId\"\n        >\n          Please enter a name\n        </bb-input-validation-message-ui>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"hasError('name', 'minlength')\"\n          i18n=\"error text|Name minlength error text@@billpay-manual-payee-form.error.name-minlength\"\n          data-role=\"name-error-minlength\"\n          [messageId]=\"'name-' + minLengthErrorId\"\n        >\n          Name must be at least 2 characters\n        </bb-input-validation-message-ui>\n        <bb-input-validation-message-ui\n          role=\"alert\"\n          [showErrors]=\"hasError('name', 'maxlength')\"\n          i18n=\"error text|Name max length error text@@billpay-manual-payee-form.error.name-maxlength\"\n          data-role=\"name-error-maxlength\"\n          [messageId]=\"'name-' + maxlengthErrorId\"\n        >\n          Name may not be over a hundred characters\n        </bb-input-validation-message-ui>\n      </div>\n      <bb-fieldset-ui\n        heading=\"Payee contact details\"\n        i18n-heading=\"Payee contact details heading@@billpay-manual-payee-form.payee-details-heading\"\n      >\n        <bb-billpay-address-form formGroupName=\"address\"></bb-billpay-address-form>\n\n        <div class=\"bb-block bb-block--md\">\n          <div class=\"bb-form-field bb-form-field--sm\">\n            <label for=\"billpay-phone-number-input\" data-role=\"phone-number-label\">\n              <ng-container i18n=\"label|Label for phone number field@@billpay-manual-payee-form.phone-label\"\n                >Phone number&nbsp;</ng-container\n              ><span\n                class=\"bb-text-default bb-text-support\"\n                i18n=\"label optional|Label for optional field@@billpay-manual-payee-form.optional-label\"\n                >(Optional)</span\n              ></label\n            >\n            <input\n              class=\"form-control\"\n              id=\"billpay-phone-number-input\"\n              formControlName=\"phoneNumber\"\n              data-role=\"phone-number-input\"\n              [attr.aria-describedby]=\"\n                ['billpay-phone-number-help-' + helpTextId, 'billpay-phone-number-help-' + formatErrorId].join(' ')\n              \"\n              type=\"tel\"\n              aria-label=\"Phone number\"\n              i18n-aria-label=\"\n                aria label|Aria label for phone number field@@billpay-manual-payee-form.phone-number-aria-label\"\n            />\n          </div>\n          <span\n            id=\"{{ 'billpay-phone-number-help-' + helpTextId }}\"\n            class=\"bb-subtitle bb-text-support\"\n            i18n=\"label|Label for phone number format info message@@billpay-manual-payee-form.phone-format\"\n            data-role=\"phone-number-help-text\"\n          >\n            Format +1 XXX XXX XXXX\n          </span>\n          <bb-input-validation-message-ui\n            [messageId]=\"'billpay-phone-number-help-' + formatErrorId\"\n            role=\"alert\"\n            [showErrors]=\"hasError('phoneNumber', 'pattern')\"\n            i18n=\"error text|Phone number format error text@@billpay-manual-payee-form.error.phone-number-format\"\n            data-role=\"phone-number-error-pattern\"\n          >\n            Phone number format should be +1 xxx xxx xxxx\n          </bb-input-validation-message-ui>\n        </div>\n\n        <div>\n          <div class=\"bb-form-field bb-form-field--md\">\n            <label\n              class=\"bb-label\"\n              data-role=\"account-number-input-label\"\n              [attr.id]=\"'bb-account-number-label' + labelId\"\n            >\n              <span i18n=\"label|Label for account number field@@billpay-manual-payee-form.account-number-label\"\n                >Account number</span\n              >\n              <span\n                class=\"bb-text-default bb-text-support\"\n                i18n=\"label optional|Label for optional text@@billpay-manual-payee-form.account-number-label-helper\"\n              >\n                (Optional)</span\n              >\n            </label>\n            <bb-input-text-ui\n              formControlName=\"accountNumber\"\n              data-role=\"account-number-input\"\n              [aria-labelledby]=\"'bb-account-number-label' + labelId\"\n              [aria-describedby]=\"\n                [\n                  'account-number-help-' + helpTextId,\n                  'account-number-help-' + minLengthErrorId,\n                  'account-number-help-' + maxlengthErrorId\n                ].join(' ')\n              \"\n            >\n            </bb-input-text-ui>\n          </div>\n          <span\n            [id]=\"'account-number-help-' + helpTextId\"\n            class=\"bb-subtitle bb-text-support\"\n            i18n=\"label|Label for account number info message@@billpay-manual-payee-form.account-number-info\"\n            data-role=\"account-number-help-text\"\n            >If you have an account number for this payee, enter it as it appears on your bill\n          </span>\n          <bb-input-validation-message-ui\n            [messageId]=\"'account-number-help-' + minLengthErrorId\"\n            role=\"alert\"\n            [showErrors]=\"hasError('accountNumber', 'minlength')\"\n            i18n=\"\n              error text|Account number minlength error text@@billpay-manual-payee-form.error.account-number-minlength\"\n            data-role=\"account-number-error-minlength\"\n          >\n            Account number must be at least 2 characters\n          </bb-input-validation-message-ui>\n          <bb-input-validation-message-ui\n            [messageId]=\"'account-number-help-' + maxlengthErrorId\"\n            role=\"alert\"\n            [showErrors]=\"hasError('accountNumber', 'maxlength')\"\n            i18n=\"\n              error text|Account number max length error text@@billpay-manual-payee-form.error.account-number-maxlength\"\n            data-role=\"account-number-error-maxlength\"\n          >\n            Account number may not be over a hundred characters\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-fieldset-ui>\n\n      <bb-fieldset-ui\n        heading=\"Payee nickname\"\n        i18n-heading=\"Payee nickname@@billpay-manual-payee-form.payee-nickname-heading\"\n      >\n        <div class=\"bb-block bb-block--md\">\n          <div class=\"bb-form-field bb-form-field--md\">\n            <label class=\"bb-label\" data-role=\"nickname-input-label\" [attr.id]=\"'bb-nickname-label' + labelId\">\n              <span i18n=\"label|Label for payee nickname field@@billpay-manual-payee-form.payee-nickname-label\"\n                >Create payee nickname\n              </span>\n              <span\n                class=\"bb-text-default bb-text-support\"\n                i18n=\"label optional|Label for optional text@@billpay-manual-payee-form.payee-nickname-label-helper\"\n              >\n                (Optional)</span\n              >\n            </label>\n            <bb-input-text-ui\n              formControlName=\"nickName\"\n              data-role=\"nickname-input\"\n              [aria-labelledby]=\"'bb-nickname-label' + labelId\"\n              [aria-describedby]=\"\n                ['nickName-' + helpTextId, 'nickName-' + minLengthErrorId, 'nickName-' + maxlengthErrorId].join(' ')\n              \"\n            >\n            </bb-input-text-ui>\n          </div>\n          <span\n            [id]=\"'nickName-' + helpTextId\"\n            class=\"bb-subtitle bb-text-support\"\n            i18n=\"label|Label for payee nickname info message@@billpay-manual-payee-form.payee-nickname-info\"\n            data-role=\"nickname-help-text\"\n            >Choose how you want this payee to appear in bill pay. This information is only available to you.</span\n          >\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('nickName', 'minlength')\"\n            i18n=\"error text|Nickname min length error text@@billpay-manual-payee-form.error.nickname-minlength\"\n            data-role=\"nickname-error-minlength\"\n            [messageId]=\"'nickName-' + minLengthErrorId\"\n          >\n            Nickname must be at least 2 characters\n          </bb-input-validation-message-ui>\n          <bb-input-validation-message-ui\n            role=\"alert\"\n            [showErrors]=\"hasError('nickName', 'maxlength')\"\n            i18n=\"error text|Nickname max length error text@@billpay-manual-payee-form.error.nickname-maxlength\"\n            data-role=\"nickname-error-maxlength\"\n            [messageId]=\"'nickName-' + maxlengthErrorId\"\n          >\n            Nickname may not be over a hundred characters\n          </bb-input-validation-message-ui>\n        </div>\n      </bb-fieldset-ui>\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          type=\"submit\"\n          data-role=\"continue-button\"\n          i18n=\"Label for button|Manual payee continue button@@billpay-manual-payee-form.continue\"\n          class=\"bb-button-bar__button\"\n        >\n          Continue\n        </button>\n        <button\n          *ngIf=\"!editForm\"\n          bbButton\n          data-role=\"back-button\"\n          i18n=\"Label for button|Find a different payee button@@billpay-manual-payee-form.find-different-payee\"\n          (click)=\"toSearch()\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n        >\n          Find a different payee\n        </button>\n        <button\n          bbButton\n          data-role=\"cancel-button\"\n          i18n=\"Label for button|Cancel button@@billpay-manual-payee-form.cancel\"\n          (click)=\"cancelForm()\"\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          color=\"link\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </section>\n</div>\n", components: [{ type: i3__namespace$1.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i4__namespace$2.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i3__namespace.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i2__namespace$4.FieldsetComponent, selector: "bb-fieldset-ui", inputs: ["heading", "disabled"] }, { type: i4__namespace.ӨBillpayAddressFormComponent, selector: "bb-billpay-address-form" }], directives: [{ type: i1__namespace$5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1__namespace$5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1__namespace$5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace$5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1__namespace$5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1__namespace$5.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i1__namespace$5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManualPayeeFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-billpay-manual-payee-form',
                        templateUrl: './billpay-manual-payee-form.component.html',
                        providers: [i1$3.PhoneNumberPipe],
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$5.FormBuilder }, { type: i1__namespace$3.PhoneNumberPipe }]; }, propDecorators: { payeeFormState: [{
                    type: i0.Input
                }], editForm: [{
                    type: i0.Input
                }], formSubmitted: [{
                    type: i0.Output
                }], formCanceled: [{
                    type: i0.Output
                }], backToSearch: [{
                    type: i0.Output
                }], valueChanged: [{
                    type: i0.Output
                }] } });

    var components = [
        BillpayCancelNewPayeeModalComponent,
        BillpayElectronicPayeeReviewComponent,
        BillpayManualPayeeReviewComponent,
        BillpayPayverisEbillsEnrolmentSelectBillerComponent,
        BillpayPayverisEbillsEnrolmentCancelModalComponent,
        BillpayPayverisEbillsEnrolmentMfaEntryComponent,
        BillpayPayverisEbillsEnrolmentLoginComponent,
        BillpayPayverisEbillsEnrolmentOtpSelectComponent,
        BillpayPayverisEbillsEnrolmentOtpEntryComponent,
        BillpayPayverisEbillsEnrolmentCaptchaComponent,
        BillpayPayverisEbillsEnrolmentSelectAccountComponent,
        BillpayPayverisEbillsEnrolmentErrorComponent,
        BillpayPayeeSummaryListComponent,
        BillpayPayeeSummaryItemComponent,
        BillpayPayeeStepperComponent,
        BillpayPayeeInformationComponent,
        BillpayPayverisEbillsEnrolmentNotificationSuccessComponent,
        BillpayCancelEditPayeeModalComponent,
        BillpayElectronicPayeeFormComponent,
        BillpayElectronicPayeeSearchComponent,
        BillpayManualPayeeFormComponent,
    ];
    var uiAngModules = [
        i4$1.IconModule,
        i2$2.CollapsibleModule,
        i1$3.PhoneNumberModule,
        i3$1.AlertModule,
        i5$3.InputPasswordModule,
        i2$3.InputRadioGroupModule,
        i10.BbDatePipeModule,
        i6.DropdownMenuModule,
        i2$4.FieldsetModule,
        i2$5.SearchBoxModule,
    ];
    var ManagePayeesJourneyUiModule = /** @class */ (function () {
        function ManagePayeesJourneyUiModule() {
        }
        return ManagePayeesJourneyUiModule;
    }());
    ManagePayeesJourneyUiModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyUiModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ManagePayeesJourneyUiModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyUiModule, declarations: [BillpayCancelNewPayeeModalComponent,
            BillpayElectronicPayeeReviewComponent,
            BillpayManualPayeeReviewComponent,
            BillpayPayverisEbillsEnrolmentSelectBillerComponent,
            BillpayPayverisEbillsEnrolmentCancelModalComponent,
            BillpayPayverisEbillsEnrolmentMfaEntryComponent,
            BillpayPayverisEbillsEnrolmentLoginComponent,
            BillpayPayverisEbillsEnrolmentOtpSelectComponent,
            BillpayPayverisEbillsEnrolmentOtpEntryComponent,
            BillpayPayverisEbillsEnrolmentCaptchaComponent,
            BillpayPayverisEbillsEnrolmentSelectAccountComponent,
            BillpayPayverisEbillsEnrolmentErrorComponent,
            BillpayPayeeSummaryListComponent,
            BillpayPayeeSummaryItemComponent,
            BillpayPayeeStepperComponent,
            BillpayPayeeInformationComponent,
            BillpayPayverisEbillsEnrolmentNotificationSuccessComponent,
            BillpayCancelEditPayeeModalComponent,
            BillpayElectronicPayeeFormComponent,
            BillpayElectronicPayeeSearchComponent,
            BillpayManualPayeeFormComponent], imports: [i5$1.CommonModule, i1$5.ReactiveFormsModule, i1$5.FormsModule, i2.NgbModule, i4.BillpayJourneysCommonModule, i4$1.IconModule,
            i2$2.CollapsibleModule,
            i1$3.PhoneNumberModule,
            i3$1.AlertModule,
            i5$3.InputPasswordModule,
            i2$3.InputRadioGroupModule,
            i10.BbDatePipeModule,
            i6.DropdownMenuModule,
            i2$4.FieldsetModule,
            i2$5.SearchBoxModule], exports: [BillpayCancelNewPayeeModalComponent,
            BillpayElectronicPayeeReviewComponent,
            BillpayManualPayeeReviewComponent,
            BillpayPayverisEbillsEnrolmentSelectBillerComponent,
            BillpayPayverisEbillsEnrolmentCancelModalComponent,
            BillpayPayverisEbillsEnrolmentMfaEntryComponent,
            BillpayPayverisEbillsEnrolmentLoginComponent,
            BillpayPayverisEbillsEnrolmentOtpSelectComponent,
            BillpayPayverisEbillsEnrolmentOtpEntryComponent,
            BillpayPayverisEbillsEnrolmentCaptchaComponent,
            BillpayPayverisEbillsEnrolmentSelectAccountComponent,
            BillpayPayverisEbillsEnrolmentErrorComponent,
            BillpayPayeeSummaryListComponent,
            BillpayPayeeSummaryItemComponent,
            BillpayPayeeStepperComponent,
            BillpayPayeeInformationComponent,
            BillpayPayverisEbillsEnrolmentNotificationSuccessComponent,
            BillpayCancelEditPayeeModalComponent,
            BillpayElectronicPayeeFormComponent,
            BillpayElectronicPayeeSearchComponent,
            BillpayManualPayeeFormComponent, i4$1.IconModule,
            i2$2.CollapsibleModule,
            i1$3.PhoneNumberModule,
            i3$1.AlertModule,
            i5$3.InputPasswordModule,
            i2$3.InputRadioGroupModule,
            i10.BbDatePipeModule,
            i6.DropdownMenuModule,
            i2$4.FieldsetModule,
            i2$5.SearchBoxModule] });
    ManagePayeesJourneyUiModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyUiModule, imports: [__spreadArray([i5$1.CommonModule, i1$5.ReactiveFormsModule, i1$5.FormsModule, i2.NgbModule, i4.BillpayJourneysCommonModule], __read(uiAngModules)), i4$1.IconModule,
            i2$2.CollapsibleModule,
            i1$3.PhoneNumberModule,
            i3$1.AlertModule,
            i5$3.InputPasswordModule,
            i2$3.InputRadioGroupModule,
            i10.BbDatePipeModule,
            i6.DropdownMenuModule,
            i2$4.FieldsetModule,
            i2$5.SearchBoxModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyUiModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: __spreadArray([], __read(components)),
                        imports: __spreadArray([i5$1.CommonModule, i1$5.ReactiveFormsModule, i1$5.FormsModule, i2.NgbModule, i4.BillpayJourneysCommonModule], __read(uiAngModules)),
                        exports: __spreadArray(__spreadArray([], __read(components)), __read(uiAngModules)),
                    }]
            }] });

    var BillpayManagePayeeDeactivateGuardService = /** @class */ (function (_super) {
        __extends(BillpayManagePayeeDeactivateGuardService, _super);
        /** @internal */
        function BillpayManagePayeeDeactivateGuardService(router, location) {
            var _this = _super.call(this, router, location) || this;
            _this.allowedPreviousRoutes = [
                /^.*\/manual(\/review)?$/,
                /^.*\/manual\/edit\/.+(\/review.+)?$/,
                /^.*\/electronic\/.+(\/review.+)?$/,
                /^.*\/electronic\/edit\/.+(\/review.+)?$/,
            ];
            _this.allowedNextRoutes = [
                /^.*\/manual(\/review)?$/,
                /^.*\/manual\/edit\/.+(\/review.+)?$/,
                /^.*\/electronic\/.+(\/review.+)?$/,
                /^.*\/electronic\/edit\/.+(\/review.+)?$/,
            ];
            return _this;
        }
        return BillpayManagePayeeDeactivateGuardService;
    }(i4.BillpayBaseDeactivateGuardService));
    BillpayManagePayeeDeactivateGuardService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeDeactivateGuardService, deps: [{ token: i1__namespace.Router }, { token: i5__namespace$1.Location }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    BillpayManagePayeeDeactivateGuardService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeDeactivateGuardService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayManagePayeeDeactivateGuardService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.Router }, { type: i5__namespace$1.Location }]; } });

    var BillpaySearchPayeeViewComponent = /** @class */ (function () {
        /** @internal */
        function BillpaySearchPayeeViewComponent(router) {
            this.router = router;
            this._searchAvailable = true;
            this.descTextId = i4.BillpayUtilityService.generateId();
        }
        BillpaySearchPayeeViewComponent.prototype.createManualPayee = function () {
            this.router.navigateToManualPayeeForm();
        };
        BillpaySearchPayeeViewComponent.prototype.onPayeeSelected = function (payee) {
            var merchantID = payee.merchantID, zipRequired = payee.zipRequired, name = payee.name;
            this.router.navigateToElectronicPayeeForm(merchantID, { queryParams: { zipRequired: zipRequired, name: name } });
        };
        BillpaySearchPayeeViewComponent.prototype.onSearchError = function () {
            this._searchAvailable = false;
        };
        BillpaySearchPayeeViewComponent.prototype.onCanceled = function () {
            this.router.navigateToPayeeList();
        };
        Object.defineProperty(BillpaySearchPayeeViewComponent.prototype, "searchAvailable", {
            get: function () {
                return this._searchAvailable;
            },
            enumerable: false,
            configurable: true
        });
        return BillpaySearchPayeeViewComponent;
    }());
    BillpaySearchPayeeViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpaySearchPayeeViewComponent, deps: [{ token: ManagePayeesNavigationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpaySearchPayeeViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpaySearchPayeeViewComponent, selector: "ng-component", ngImport: i0__namespace, template: "<ng-container *ngIf=\"searchAvailable; else errorState\">\n  <div class=\"card card-lg\">\n    <div class=\"card-body\">\n      <section class=\"bb-block bb-block--md\">\n        <bb-header-ui\n          headingType=\"h2\"\n          i18n-heading=\"Find a payee heading|Form heading@@billpay-manage-payee.search.form.heading\"\n          heading=\"Find a payee\"\n        >\n        </bb-header-ui>\n        <bb-billpay-electronic-payee-search\n          (payeeSelected)=\"onPayeeSelected($event)\"\n          (errorSearching)=\"onSearchError()\"\n          [descTextId]=\"descTextId\"\n          data-role=\"search-box\"\n        ></bb-billpay-electronic-payee-search>\n        <p\n          id=\"{{ descTextId }}\"\n          class=\"bb-block bb-block--md\"\n          i18n=\"Payee search description|Description under search box@@billpay-manage-payee.search.form.description\"\n        >\n          If the payee can\u2019t be found, you can choose to enter their details manually\n        </p>\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            data-role=\"enter-details-button\"\n            (click)=\"createManualPayee()\"\n            color=\"secondary\"\n            i18n=\"button label|Create manual payee button@@billpay-manage-payee.search.form.button\"\n          >\n            Enter details manually\n          </button>\n        </div>\n      </section>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #errorState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        data-role=\"error-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"error-outline\"\n        subtitle=\"Please try again later or enter details manually. Please note that payees entered manually will have a longer payment processing time and no eBill functionality.\"\n        i18n-subtitle=\"Payee search unavailable subtitle@@bb-billpay-payee-list-widget-ang.search-unavailable.subtitle\"\n        title=\"Payee search is currently unavailable\"\n        i18n-title=\"Payee search unavailable title@@bb-billpay-payee-list-widget-ang.search-unavailable.title\"\n      >\n      </bb-empty-state-ui>\n      <div class=\"bb-state-container__footer\">\n        <div class=\"bb-button-bar bb-button-bar--reverse bb-button-bar--center bb-block bb-block--xl\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            data-role=\"enter-details-button\"\n            (click)=\"createManualPayee()\"\n            color=\"secondary\"\n            i18n=\"button label|Create manual payee button@@billpay-manage-payee.search.form.button\"\n          >\n            Enter details manually\n          </button>\n        </div>\n        <div class=\"bb-button-bar bb-button-bar--reverse bb-button-bar--center\">\n          <button\n            bbButton\n            class=\"bb-button-bar__button bb-button-bar__button--across\"\n            data-role=\"cancel-button\"\n            (click)=\"onCanceled()\"\n            color=\"link\"\n            i18n=\"button label|Cancel payee search button@@billpay-manage-payee.cancel.form.button\"\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n", components: [{ type: i2__namespace$1.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: BillpayElectronicPayeeSearchComponent, selector: "bb-billpay-electronic-payee-search", inputs: ["descTextId"], outputs: ["payeeSelected", "errorSearching"] }, { type: i10__namespace$1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpaySearchPayeeViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-search-payee-view.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: ManagePayeesNavigationService }]; } });

    var BillpayCreateManualPayeeViewComponent = /** @class */ (function () {
        /** @internal */
        function BillpayCreateManualPayeeViewComponent(stateService, router, discardModalService) {
            this.stateService = stateService;
            this.router = router;
            this.discardModalService = discardModalService;
            this.payeeFormState = this.stateService.manualPayeeFormState;
            this.isFormTouched = false;
            this.isFindPayeeModal = false;
        }
        Object.defineProperty(BillpayCreateManualPayeeViewComponent.prototype, "isDiscardModalOpen", {
            get: function () {
                return this.discardModalService.isDiscardModalOpen;
            },
            enumerable: false,
            configurable: true
        });
        BillpayCreateManualPayeeViewComponent.prototype.onWindowUnload = function ($event) {
            if ((this.isFormTouched || this.stateService.isFormProcessing) && !this.isDiscardModalOpen) {
                $event.returnValue = true;
            }
        };
        BillpayCreateManualPayeeViewComponent.prototype.onFormSubmitted = function (payee) {
            this.stateService.isFormProcessing = true;
            this.stateService.setManualPayee(payee);
            this.router.navigateToManualPayeeReview();
        };
        BillpayCreateManualPayeeViewComponent.prototype.onBackToSearch = function () {
            this.isFindPayeeModal = true;
            this.router.navigateToSearch();
        };
        BillpayCreateManualPayeeViewComponent.prototype.onFormCanceled = function () {
            this.router.navigateToPayeeList();
        };
        BillpayCreateManualPayeeViewComponent.prototype.onFormValueChanged = function () {
            this.isFormTouched = true;
        };
        BillpayCreateManualPayeeViewComponent.prototype.openModal = function () {
            return this.isFormTouched || this.stateService.isFormProcessing ? this.discardModalService.openModal() : rxjs.of(true);
        };
        BillpayCreateManualPayeeViewComponent.prototype.onModalResolve = function (resolvedWith) {
            if (resolvedWith)
                this.stateService.resetManualPayee();
            this.isFindPayeeModal = false;
            this.discardModalService.onModalResolve(resolvedWith);
        };
        return BillpayCreateManualPayeeViewComponent;
    }());
    BillpayCreateManualPayeeViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayCreateManualPayeeViewComponent, deps: [{ token: BillpayManagePayeeStateService }, { token: ManagePayeesNavigationService }, { token: i4__namespace.BillpayDiscardChangesModalService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayCreateManualPayeeViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayCreateManualPayeeViewComponent, selector: "ng-component", host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, providers: [i4.BillpayDiscardChangesModalService], ngImport: i0__namespace, template: "<bb-billpay-manual-payee-form\n  [payeeFormState]=\"payeeFormState | async\"\n  (formSubmitted)=\"onFormSubmitted($event)\"\n  (formCanceled)=\"onFormCanceled()\"\n  (backToSearch)=\"onBackToSearch()\"\n  (valueChanged)=\"onFormValueChanged()\"\n>\n</bb-billpay-manual-payee-form>\n<bb-billpay-cancel-new-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  [findPayee]=\"isFindPayeeModal\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-new-payee-modal>\n", components: [{ type: BillpayManualPayeeFormComponent, selector: "bb-billpay-manual-payee-form", inputs: ["payeeFormState", "editForm"], outputs: ["formSubmitted", "formCanceled", "backToSearch", "valueChanged"] }, { type: BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: ["findPayee"], outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayCreateManualPayeeViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-create-manual-payee-view.component.html',
                        providers: [i4.BillpayDiscardChangesModalService],
                    }]
            }], ctorParameters: function () { return [{ type: BillpayManagePayeeStateService }, { type: ManagePayeesNavigationService }, { type: i4__namespace.BillpayDiscardChangesModalService }]; }, propDecorators: { onWindowUnload: [{
                    type: i0.HostListener,
                    args: ['window:beforeunload', ['$event']]
                }] } });

    var BillpayEditManualPayeeViewComponent = /** @class */ (function () {
        /** @internal */
        function BillpayEditManualPayeeViewComponent(route, stateService, dataService, router, discardModalService) {
            this.route = route;
            this.stateService = stateService;
            this.dataService = dataService;
            this.router = router;
            this.discardModalService = discardModalService;
            this.hasLoadingError = false;
            this.isFormTouched = false;
            this.payeeId = '';
        }
        BillpayEditManualPayeeViewComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.payeeFormState = rxjs.combineLatest([
                this.route.paramMap.pipe(operators.map(function (params) { return params.get('id') || ''; })),
                this.stateService.manualPayeeFormState,
            ]).pipe(operators.tap(function (_a) {
                var _b = __read(_a, 1), id = _b[0];
                return (_this.payeeId = id);
            }), operators.switchMap(function (_a) {
                var _b = __read(_a, 2), id = _b[0], state = _b[1];
                return (state && rxjs.of(state)) ||
                    _this.dataService.getManualPayee(id).pipe(operators.map(function (payee) { return payee && _this.stateService.toManualFormState(payee); }), operators.catchError(function () {
                        _this.hasLoadingError = true;
                        return rxjs.of({});
                    }));
            }));
        };
        Object.defineProperty(BillpayEditManualPayeeViewComponent.prototype, "isDiscardModalOpen", {
            get: function () {
                return this.discardModalService.isDiscardModalOpen;
            },
            enumerable: false,
            configurable: true
        });
        BillpayEditManualPayeeViewComponent.prototype.onWindowUnload = function ($event) {
            if ((this.isFormTouched || this.stateService.isFormProcessing) && !this.isDiscardModalOpen) {
                $event.returnValue = true;
            }
        };
        BillpayEditManualPayeeViewComponent.prototype.onFormSubmitted = function (payee) {
            this.stateService.isFormProcessing = true;
            this.stateService.setManualPayee(payee);
            this.router.navigateToEditManualReview(this.payeeId);
        };
        BillpayEditManualPayeeViewComponent.prototype.onFormValueChanged = function () {
            this.isFormTouched = true;
        };
        BillpayEditManualPayeeViewComponent.prototype.onFormCanceled = function () {
            this.router.navigateToPayeeList();
        };
        BillpayEditManualPayeeViewComponent.prototype.openModal = function () {
            return this.isFormTouched || this.stateService.isFormProcessing ? this.discardModalService.openModal() : rxjs.of(true);
        };
        BillpayEditManualPayeeViewComponent.prototype.onModalResolve = function (resolvedWith) {
            this.discardModalService.onModalResolve(resolvedWith);
            if (resolvedWith) {
                this.router.navigateToPayeeList();
            }
        };
        return BillpayEditManualPayeeViewComponent;
    }());
    BillpayEditManualPayeeViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayEditManualPayeeViewComponent, deps: [{ token: i1__namespace.ActivatedRoute }, { token: BillpayManagePayeeStateService }, { token: BillpayManagePayeeDataService }, { token: ManagePayeesNavigationService }, { token: i4__namespace.BillpayDiscardChangesModalService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayEditManualPayeeViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayEditManualPayeeViewComponent, selector: "ng-component", host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, providers: [i4.BillpayDiscardChangesModalService], ngImport: i0__namespace, template: "<ng-container *ngIf=\"payeeFormState | async as payeeState; else loadingState\">\n  <ng-container *ngIf=\"!hasLoadingError; else errorState\">\n    <bb-billpay-manual-payee-form\n      [editForm]=\"true\"\n      [payeeFormState]=\"payeeState\"\n      (formSubmitted)=\"onFormSubmitted($event)\"\n      (formCanceled)=\"onFormCanceled()\"\n      (valueChanged)=\"onFormValueChanged()\"\n    >\n    </bb-billpay-manual-payee-form>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-cancel-edit-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-edit-payee-modal>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <bb-empty-state-ui\n    data-role=\"error-state\"\n    iconSize=\"xxl\"\n    iconModifier=\"error\"\n    subtitle=\"Try to reload the page or contact support\"\n    i18n-subtitle=\"\n      Try to reload the page or contact support|Edit manual payee\n      subtitle@@bb-billpay-manage-payee-widget-ang.loading.subtitle\"\n    title=\"Payee is not loading\"\n    i18n-title=\"Payee is not loading|Edit manual payee loading title@@bb-billpay-manage-payee-widget-ang.loading.title\"\n  >\n  </bb-empty-state-ui>\n</ng-template> \n", components: [{ type: BillpayManualPayeeFormComponent, selector: "bb-billpay-manual-payee-form", inputs: ["payeeFormState", "editForm"], outputs: ["formSubmitted", "formCanceled", "backToSearch", "valueChanged"] }, { type: BillpayCancelEditPayeeModalComponent, selector: "bb-billpay-cancel-edit-payee-modal", outputs: ["resolve"] }, { type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i10__namespace$1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayEditManualPayeeViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-edit-manual-payee-view.component.html',
                        providers: [i4.BillpayDiscardChangesModalService],
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.ActivatedRoute }, { type: BillpayManagePayeeStateService }, { type: BillpayManagePayeeDataService }, { type: ManagePayeesNavigationService }, { type: i4__namespace.BillpayDiscardChangesModalService }]; }, propDecorators: { onWindowUnload: [{
                    type: i0.HostListener,
                    args: ['window:beforeunload', ['$event']]
                }] } });

    var BillpayCreateElectronicPayeeViewComponent = /** @class */ (function (_super) {
        __extends(BillpayCreateElectronicPayeeViewComponent, _super);
        /** @internal */
        function BillpayCreateElectronicPayeeViewComponent(route, stateService, discardModalService, router) {
            var _this = _super.call(this, route, stateService, discardModalService) || this;
            _this.router = router;
            _this.zipRequired$ = _this.route.queryParamMap.pipe(operators.take(1), operators.map(function (params) { return params.get('zipRequired'); }), operators.map(function (zipRequired) { return (zipRequired ? JSON.parse(zipRequired) : false); }));
            _this.name$ = _this.route.queryParamMap.pipe(operators.take(1), operators.map(function (params) { return params.get('name') || ''; }));
            _this.payee$ = _this.initializePayee();
            return _this;
        }
        BillpayCreateElectronicPayeeViewComponent.prototype.onFormSubmitted = function (payee) {
            var _this = this;
            this.stateService.setElectronicPayee(payee);
            this.id$.subscribe(function (id) { return _this.router.navigateToElectronicPayeeReview(id, { queryParamsHandling: 'preserve' }); });
        };
        BillpayCreateElectronicPayeeViewComponent.prototype.onBackToSearch = function () {
            this.isFindPayeeModal = true;
            this.router.navigateToSearch();
        };
        BillpayCreateElectronicPayeeViewComponent.prototype.onFormCanceled = function () {
            this.router.navigateToPayeeList();
        };
        BillpayCreateElectronicPayeeViewComponent.prototype.initializePayee = function () {
            var payee$ = rxjs.combineLatest([this.zipRequired$, this.name$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), zipRequired = _b[0], name = _b[1];
                return (Object.assign({ name: name, accountNumber: '', nickName: '' }, (zipRequired && { merchantZipCode: '' })));
            }));
            return this.payeeState$.pipe(operators.switchMap(function (state) { return (state ? rxjs.of(state) : payee$); }));
        };
        return BillpayCreateElectronicPayeeViewComponent;
    }(BaseElectronicPayeePageDirective));
    BillpayCreateElectronicPayeeViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayCreateElectronicPayeeViewComponent, deps: [{ token: i1__namespace.ActivatedRoute }, { token: BillpayManagePayeeStateService }, { token: i4__namespace.BillpayDiscardChangesModalService }, { token: ManagePayeesNavigationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayCreateElectronicPayeeViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayCreateElectronicPayeeViewComponent, selector: "ng-component", providers: [i4.BillpayDiscardChangesModalService], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"payee$ | async as payee\">\n  <bb-billpay-electronic-payee-form\n    [payee]=\"payee\"\n    [zipCodeRequired]=\"zipRequired$ | async\"\n    (formSubmitted)=\"onFormSubmitted($event)\"\n    (formCanceled)=\"onFormCanceled()\"\n    (backToSearch)=\"onBackToSearch()\"\n    (valueChanged)=\"onFormValueChanged()\"\n  >\n  </bb-billpay-electronic-payee-form>\n\n  <bb-billpay-cancel-new-payee-modal\n    *ngIf=\"isDiscardModalOpen\"\n    [findPayee]=\"isFindPayeeModal\"\n    (resolve)=\"onModalResolve($event)\"\n  ></bb-billpay-cancel-new-payee-modal>\n</ng-container>\n", components: [{ type: BillpayElectronicPayeeFormComponent, selector: "bb-billpay-electronic-payee-form", inputs: ["payee", "zipCodeRequired", "backButtonShown"], outputs: ["formSubmitted", "formCanceled", "backToSearch", "valueChanged"] }, { type: BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: ["findPayee"], outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayCreateElectronicPayeeViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-create-electronic-payee-view.component.html',
                        providers: [i4.BillpayDiscardChangesModalService],
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.ActivatedRoute }, { type: BillpayManagePayeeStateService }, { type: i4__namespace.BillpayDiscardChangesModalService }, { type: ManagePayeesNavigationService }]; } });

    var BillpayEditElectronicPayeeViewComponent = /** @class */ (function (_super) {
        __extends(BillpayEditElectronicPayeeViewComponent, _super);
        /** @internal */
        function BillpayEditElectronicPayeeViewComponent(route, stateService, discardModalService, router, dataService, cd) {
            var _this = _super.call(this, route, stateService, discardModalService) || this;
            _this.router = router;
            _this.dataService = dataService;
            _this.cd = cd;
            _this.hasLoadingError = false;
            _this.payee$ = _this.initializePayee();
            return _this;
        }
        BillpayEditElectronicPayeeViewComponent.prototype.onFormSubmitted = function (payee) {
            var _this = this;
            this.stateService.setElectronicPayee(payee);
            this.id$.subscribe(function (id) { return _this.router.navigateToEditElectronicPayeeReview(id); });
        };
        BillpayEditElectronicPayeeViewComponent.prototype.initializePayee = function () {
            var _this = this;
            var payee$ = this.id$.pipe(operators.switchMap(function (id) { return _this.dataService.getElectronicPayee(id); }), operators.map(function (payee) { return _this.stateService.electronicGetResponseToForm(payee); }), operators.catchError(function () {
                _this.hasLoadingError = true;
                _this.cd.detectChanges();
                return rxjs.of(undefined);
            }));
            return this.payeeState$.pipe(operators.switchMap(function (state) { return (state ? rxjs.of(state) : payee$); }));
        };
        BillpayEditElectronicPayeeViewComponent.prototype.onFormCanceled = function () {
            this.router.navigateToPayeeList();
        };
        return BillpayEditElectronicPayeeViewComponent;
    }(BaseElectronicPayeePageDirective));
    BillpayEditElectronicPayeeViewComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayEditElectronicPayeeViewComponent, deps: [{ token: i1__namespace.ActivatedRoute }, { token: BillpayManagePayeeStateService }, { token: i4__namespace.BillpayDiscardChangesModalService }, { token: ManagePayeesNavigationService }, { token: BillpayManagePayeeDataService }, { token: i0__namespace.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Component });
    BillpayEditElectronicPayeeViewComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayEditElectronicPayeeViewComponent, selector: "ng-component", providers: [i4.BillpayDiscardChangesModalService], usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"!hasLoadingError; else errorState\">\n  <ng-container *ngIf=\"payee$ | async as payee; else loadingState\">\n    <bb-billpay-electronic-payee-form\n      [payee]=\"payee\"\n      [zipCodeRequired]=\"false\"\n      [backButtonShown]=\"false\"\n      (formSubmitted)=\"onFormSubmitted($event)\"\n      (formCanceled)=\"onFormCanceled()\"\n      (valueChanged)=\"onFormValueChanged()\"\n    >\n    </bb-billpay-electronic-payee-form>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <bb-empty-state-ui\n    data-role=\"error-state\"\n    iconSize=\"xxl\"\n    iconModifier=\"error\"\n    title=\"Payee is not loading\"\n    i18n-title=\"Payee is not loading title@@billpay-manage-payee.edit-electronic.error-state.title\"\n    subtitle=\"Try to reload the page or contact support\"\n    i18n-subtitle=\"Payments list is not loading subtitle@@billpay-manage-payee.edit-electronic.error-state.subtitle\"\n  >\n  </bb-empty-state-ui>\n</ng-template>\n\n<bb-billpay-cancel-edit-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-edit-payee-modal>\n", components: [{ type: BillpayElectronicPayeeFormComponent, selector: "bb-billpay-electronic-payee-form", inputs: ["payee", "zipCodeRequired", "backButtonShown"], outputs: ["formSubmitted", "formCanceled", "backToSearch", "valueChanged"] }, { type: i1__namespace$1.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i10__namespace$1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: BillpayCancelEditPayeeModalComponent, selector: "bb-billpay-cancel-edit-payee-modal", outputs: ["resolve"] }], directives: [{ type: i5__namespace$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace$1.AsyncPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: BillpayEditElectronicPayeeViewComponent, decorators: [{
                type: i0.Component,
                args: [{
                        templateUrl: './billpay-edit-electronic-payee-view.component.html',
                        providers: [i4.BillpayDiscardChangesModalService],
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.ActivatedRoute }, { type: BillpayManagePayeeStateService }, { type: i4__namespace.BillpayDiscardChangesModalService }, { type: ManagePayeesNavigationService }, { type: BillpayManagePayeeDataService }, { type: i0__namespace.ChangeDetectorRef }]; } });

    var defaultRoute = {
        path: '',
        component: ManagePayeesJourneyComponent,
        children: [
            { path: 'enrolment', component: BillPayEnrolmentViewComponent },
            {
                path: '',
                canActivate: [i4.BillpayEnrolmentGuard],
                children: [
                    { path: '', component: PayeeListViewComponent, pathMatch: 'full' },
                    {
                        path: 'payees',
                        component: ManagePayeeViewComponent,
                        children: [
                            {
                                path: '',
                                component: BillpaySearchPayeeViewComponent,
                                pathMatch: 'full',
                            },
                            {
                                path: 'manual',
                                component: BillpayCreateManualPayeeViewComponent,
                                canDeactivate: [BillpayManagePayeeDeactivateGuardService],
                            },
                            {
                                path: 'manual/review',
                                component: CreateManualPayeeReviewViewComponent,
                                canDeactivate: [BillpayManagePayeeDeactivateGuardService],
                            },
                            {
                                path: 'manual/edit/:id',
                                component: BillpayEditManualPayeeViewComponent,
                                canDeactivate: [BillpayManagePayeeDeactivateGuardService],
                            },
                            {
                                path: 'manual/edit/:id/review',
                                component: EditManualPayeeReviewViewComponent,
                                canDeactivate: [BillpayManagePayeeDeactivateGuardService],
                            },
                            {
                                path: 'electronic/:id',
                                component: BillpayCreateElectronicPayeeViewComponent,
                                canDeactivate: [BillpayManagePayeeDeactivateGuardService],
                            },
                            {
                                path: 'electronic/:id/review',
                                component: CreateElectronicPayeeReviewViewComponent,
                                canDeactivate: [BillpayManagePayeeDeactivateGuardService],
                            },
                            {
                                path: 'electronic/edit/:id',
                                component: BillpayEditElectronicPayeeViewComponent,
                                canDeactivate: [BillpayManagePayeeDeactivateGuardService],
                            },
                            {
                                path: 'electronic/edit/:id/review',
                                component: EditElectronicPayeeReviewViewComponent,
                                canDeactivate: [BillpayManagePayeeDeactivateGuardService],
                            },
                        ],
                    },
                    { path: 'payee-summary', component: PayeeSummaryViewComponent },
                    { path: 'ebills', component: EbillsEnrolmentViewComponent },
                ],
            },
        ],
    };
    var ManagePayeesJourneyModule = /** @class */ (function () {
        function ManagePayeesJourneyModule() {
        }
        ManagePayeesJourneyModule.forRoot = function (data) {
            if (data === void 0) { data = { route: defaultRoute }; }
            return {
                ngModule: ManagePayeesJourneyModule,
                providers: [i1.provideRoutes([data.route])],
            };
        };
        return ManagePayeesJourneyModule;
    }());
    ManagePayeesJourneyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ManagePayeesJourneyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyModule, declarations: [ManagePayeesJourneyComponent,
            PayeeListViewComponent,
            PayeeSummaryViewComponent,
            EbillsEnrolmentViewComponent,
            ManagePayeeViewComponent,
            BillPayEnrolmentViewComponent,
            CreateManualPayeeReviewViewComponent,
            EditManualPayeeReviewViewComponent,
            CreateElectronicPayeeReviewViewComponent,
            EditElectronicPayeeReviewViewComponent,
            BillpaySearchPayeeViewComponent,
            BillpayCreateManualPayeeViewComponent,
            BillpayEditManualPayeeViewComponent,
            BillpayCreateElectronicPayeeViewComponent,
            BillpayEditElectronicPayeeViewComponent], imports: [i5$1.CommonModule,
            i1.RouterModule,
            i4.BillpayJourneysCommonModule,
            ManagePayeesJourneyUiModule, i1__namespace$7.BackbaseCoreModule] });
    ManagePayeesJourneyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyModule, providers: [
            ManagePayeesJourneyConfigService,
            i4.BillpayPayeeDataService,
            BillpayPayverisEbillsEnrolmentWidgetService,
            BillpayPayeeSummaryWidgetService,
            BillpayManagePayeeDeactivateGuardService,
            BillpayManagePayeeDataService,
            BillpayManagePayeeStateService,
        ], imports: [[
                i5$1.CommonModule,
                i1.RouterModule,
                i4.BillpayJourneysCommonModule,
                ManagePayeesJourneyUiModule,
                i1$7.BackbaseCoreModule.withConfig({
                    classMap: { ManagePayeesJourneyComponent: ManagePayeesJourneyComponent },
                }),
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: ManagePayeesJourneyModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [
                            ManagePayeesJourneyComponent,
                            PayeeListViewComponent,
                            PayeeSummaryViewComponent,
                            EbillsEnrolmentViewComponent,
                            ManagePayeeViewComponent,
                            BillPayEnrolmentViewComponent,
                            CreateManualPayeeReviewViewComponent,
                            EditManualPayeeReviewViewComponent,
                            CreateElectronicPayeeReviewViewComponent,
                            EditElectronicPayeeReviewViewComponent,
                            BillpaySearchPayeeViewComponent,
                            BillpayCreateManualPayeeViewComponent,
                            BillpayEditManualPayeeViewComponent,
                            BillpayCreateElectronicPayeeViewComponent,
                            BillpayEditElectronicPayeeViewComponent,
                        ],
                        imports: [
                            i5$1.CommonModule,
                            i1.RouterModule,
                            i4.BillpayJourneysCommonModule,
                            ManagePayeesJourneyUiModule,
                            i1$7.BackbaseCoreModule.withConfig({
                                classMap: { ManagePayeesJourneyComponent: ManagePayeesJourneyComponent },
                            }),
                        ],
                        providers: [
                            ManagePayeesJourneyConfigService,
                            i4.BillpayPayeeDataService,
                            BillpayPayverisEbillsEnrolmentWidgetService,
                            BillpayPayeeSummaryWidgetService,
                            BillpayManagePayeeDeactivateGuardService,
                            BillpayManagePayeeDataService,
                            BillpayManagePayeeStateService,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BaseElectronicPayeePageDirective = BaseElectronicPayeePageDirective;
    exports.BaseElectronicPayeeReviewPageModel = BaseElectronicPayeeReviewPageModelDirective;
    exports.BaseElectronicPayeeReviewPageModelDirective = BaseElectronicPayeeReviewPageModelDirective$1;
    exports.BillPayEnrolmentViewComponent = BillPayEnrolmentViewComponent;
    exports.BillpayCreateElectronicPayeeViewComponent = BillpayCreateElectronicPayeeViewComponent;
    exports.BillpayCreateManualPayeeViewComponent = BillpayCreateManualPayeeViewComponent;
    exports.BillpayEditElectronicPayeeViewComponent = BillpayEditElectronicPayeeViewComponent;
    exports.BillpayEditManualPayeeViewComponent = BillpayEditManualPayeeViewComponent;
    exports.BillpayManagePayeeDataService = BillpayManagePayeeDataService;
    exports.BillpayManagePayeeDeactivateGuardService = BillpayManagePayeeDeactivateGuardService;
    exports.BillpayManagePayeeStateService = BillpayManagePayeeStateService;
    exports.BillpayPayeeSummaryWidgetService = BillpayPayeeSummaryWidgetService;
    exports.BillpayPayverisEbillsEnrolmentWidgetService = BillpayPayverisEbillsEnrolmentWidgetService;
    exports.BillpaySearchPayeeViewComponent = BillpaySearchPayeeViewComponent;
    exports.CreateElectronicPayeeReviewViewComponent = CreateElectronicPayeeReviewViewComponent;
    exports.CreateManualPayeeReviewViewComponent = CreateManualPayeeReviewViewComponent;
    exports.EbillsEnrolmentViewComponent = EbillsEnrolmentViewComponent;
    exports.EditElectronicPayeeReviewViewComponent = EditElectronicPayeeReviewViewComponent;
    exports.EditManualPayeeReviewViewComponent = EditManualPayeeReviewViewComponent;
    exports.ManagePayeeViewComponent = ManagePayeeViewComponent;
    exports.ManagePayeesCommunicationService = CommunicationService;
    exports.ManagePayeesJourneyComponent = ManagePayeesJourneyComponent;
    exports.ManagePayeesJourneyConfigService = ManagePayeesJourneyConfigService;
    exports.ManagePayeesJourneyConfigurationToken = ManagePayeesJourneyConfigurationToken;
    exports.ManagePayeesJourneyModule = ManagePayeesJourneyModule;
    exports.ManagePayeesNavigationService = ManagePayeesNavigationService;
    exports.PayeeListViewComponent = PayeeListViewComponent;
    exports.PayeeSummaryViewComponent = PayeeSummaryViewComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-manage-payees-journey-ang.umd.js.map
