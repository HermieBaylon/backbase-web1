import { EventEmitter } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { PayverisOtpPasscode, PayverisEnrolmentComponentState } from '../../../model';
import * as i0 from "@angular/core";
export declare class BillpayPayverisEbillsEnrolmentOtpEntryComponent {
    submitted: boolean;
    cancelModalOpen: boolean;
    private _passcodeFailed;
    passcodeRecentlyFailed: boolean;
    readonly ComponentStates: typeof PayverisEnrolmentComponentState;
    /**
     * Name of the payee.
     */
    payeeName: string | undefined;
    /**
     * The selected OTP transport method.
     */
    optTransportMethod: string | undefined;
    /**
     * The current state of the component. Controls loaded elements.
     */
    componentState: PayverisEnrolmentComponentState;
    set passcodeFailed(hasFailed: boolean);
    returnToPayeeList: EventEmitter<any>;
    passcodeEntry: EventEmitter<PayverisOtpPasscode>;
    passcodeForm: FormGroup;
    /**
     * Displays elements for a failed submission. Invalidates passcode form.
     */
    get passcodeFailed(): boolean;
    onPayverisOtpPasscodeSubmit(): void;
    onModalResolve(operationCancelled: boolean): void;
    handleReturnToPayeeList(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillpayPayverisEbillsEnrolmentOtpEntryComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BillpayPayverisEbillsEnrolmentOtpEntryComponent, "bb-billpay-payveris-ebills-enrolment-otp-entry", never, { "payeeName": "payeeName"; "optTransportMethod": "optTransportMethod"; "componentState": "componentState"; "passcodeFailed": "passcodeFailed"; }, { "returnToPayeeList": "returnToPayeeList"; "passcodeEntry": "passcodeEntry"; }, never, never>;
}
