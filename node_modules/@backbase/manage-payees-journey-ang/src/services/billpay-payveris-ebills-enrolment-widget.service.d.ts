import { HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BillPayPayverisService, BillPayPayeesService, EbillAccount, EbillBiller, EbillCredential, OtpDeliveryMethod, BillPayPayverisEbillsEnrolmentPostRequestBody, BillPayPayverisEbillsEnrolmentPostResponseBody } from '@backbase/data-ang/billpay';
import { PayverisEnrolmentState } from '../model/payveris-enrolment-state.enum';
import { PayverisEnrolmentComponentState, PayverisOtpPasscode, PayverisLogin, PayverisCaptcha } from '../model';
import * as i0 from "@angular/core";
export declare class BillpayPayverisEbillsEnrolmentWidgetService {
    private readonly payverisData;
    private readonly payeesData;
    private readonly widgetStateSource;
    private _payeeId;
    private _currentState;
    private _errorState;
    private _componentState;
    private _userInputFailed;
    private readonly _responses;
    private _expectingLoginResponse;
    private _otpTransportMethodSelected;
    private _expectingOtpEntryResponse;
    private _payload;
    private readonly _MIN_CALLBACK_TIME;
    private timer;
    readonly widgetStateChange: Observable<void>;
    /** @internal */
    constructor(payverisData: BillPayPayverisService, payeesData: BillPayPayeesService);
    submitPayverisRequest(payload: BillPayPayverisEbillsEnrolmentPostRequestBody): Observable<HttpResponse<BillPayPayverisEbillsEnrolmentPostResponseBody>>;
    getPayeeNameFromID(id: string | undefined): Observable<string>;
    onInitializeEnrolment(): boolean;
    private handleStatusResponse;
    private handleCredentialsOnStatusResponse;
    onSubmitBillerSelection(billerSelectedIndex: number): void;
    private handleBillerResponse;
    onSubmitPayeeLogin(login: PayverisLogin | undefined): void;
    private handleCredentialResponse;
    onSubmitPayverisEbillMfa(): void;
    private handleMfaResponse;
    onSubmitPayverisEbillOtpTransportSelection(transportSelectedIndex: number): void;
    private handleOtpTransportResponse;
    onSubmitPayverisEbillPayeeOtpPasscode(passcode: PayverisOtpPasscode): void;
    onSubmitPayverisEbillPayeeCaptcha(captcha: PayverisCaptcha): void;
    private submitVerificationStep;
    private prepareCredentialPayload;
    private handleVerificationResponse;
    cancelEnrolment(): Observable<HttpResponse<any>>;
    onSubmitPayverisEbillAccountSelection(accountSelectedIndex: number): void;
    private handleAccountsResponse;
    private handleCallbackResponse;
    cancelCallback(): void;
    private setState;
    private handleError;
    private isCredentialsResponse;
    private isBillersResponse;
    private isCallbackResponse;
    private isSelectAccountResponse;
    private isOtpSelectResponse;
    private isCaptchaResponse;
    private isSuccessResponse;
    private getLabelFromResponse;
    set payeeId(value: string | undefined);
    credentialsResponse: (value: BillPayPayverisEbillsEnrolmentPostResponseBody | undefined) => void;
    get payeeId(): string | undefined;
    get currentState(): PayverisEnrolmentState;
    get errorState(): string | undefined;
    get componentState(): PayverisEnrolmentComponentState;
    set componentState(value: PayverisEnrolmentComponentState);
    get userInputFailed(): boolean;
    get loginCredentialsArray(): EbillCredential[] | undefined;
    get mfaArray(): EbillCredential[] | undefined;
    get billers(): EbillBiller[];
    get accounts(): EbillAccount[];
    get otpTransportMethodSelected(): string | undefined;
    private checkForPropertyWrapper;
    get otpTransports(): OtpDeliveryMethod[] | undefined;
    get captchaImageSrc(): string | undefined;
    get captchaImageType(): string | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<BillpayPayverisEbillsEnrolmentWidgetService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<BillpayPayverisEbillsEnrolmentWidgetService>;
}
