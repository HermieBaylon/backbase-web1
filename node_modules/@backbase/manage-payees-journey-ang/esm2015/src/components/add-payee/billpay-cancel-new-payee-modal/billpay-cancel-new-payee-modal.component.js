import { Component, EventEmitter, Output, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/modal";
import * as i2 from "@backbase/ui-ang/header";
import * as i3 from "@angular/common";
import * as i4 from "@backbase/ui-ang/button";
export class BillpayCancelNewPayeeModalComponent {
    constructor() {
        this.resolve = new EventEmitter();
        /**
         * Modal navigation routes to payee search. Defaults to false.
         */
        this.findPayee = false;
    }
    cancelModal() {
        this.resolve.emit(false);
    }
    confirmModal() {
        this.resolve.emit(true);
    }
}
BillpayCancelNewPayeeModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayCancelNewPayeeModalComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BillpayCancelNewPayeeModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: { findPayee: "findPayee" }, outputs: { resolve: "resolve" }, ngImport: i0, template: "<bb-modal-ui [isOpen]=\"true\" (cancel)=\"cancelModal()\" data-role=\"cancel-new-payee-modal\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <bb-header-ui\n        *ngIf=\"!findPayee\"\n        data-role=\"cancel-new-payee-modal-header\"\n        headingType=\"h2\"\n        heading=\"Cancel new payee?\"\n        i18n-heading=\"Cancel new payee modal header@@billpay.manage-payee.cancel-new-payee-modal.header\"\n      >\n      </bb-header-ui>\n      <bb-header-ui\n        *ngIf=\"findPayee\"\n        data-role=\"cancel-new-payee-modal-header\"\n        headingType=\"h2\"\n        heading=\"Find different payee?\"\n        i18n-heading=\"Find different payee modal header@@billpay.manage-payee.cancel-new-payee-modal.findheader\"\n      >\n      </bb-header-ui>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span\n        i18n=\"Cancel new payee modal body@@billpay.manage-payee.cancel-new-payee-modal.body\"\n        data-role=\"cancel-new-payee-modal-body\"\n        >The new payee will be canceled and any details entered will be lost.</span\n      >\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"confirmModal()\"\n          data-role=\"cancel-new-payee-modal-confirm-button\"\n        >\n          <span\n            *ngIf=\"!findPayee\"\n            i18n=\"\n              confirm modal button|Cancel payee confirmation\n              button@@billpay.manage-payee.cancel-new-payee-modal.confirm-button\"\n          >\n            Cancel new payee\n          </span>\n          <span\n            *ngIf=\"findPayee\"\n            i18n=\"\n              confirm modal button|Cancel payee confirmation\n              button@@billpay.manage-payee.cancel-new-payee-modal.confirm-button2\"\n          >\n            Find a different payee\n          </span>\n        </button>\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          i18n=\"\n            cancel modal button|Continue with current payee\n            button@@billpay.manage-payee.cancel-new-payee-modal.cancel-button\"\n          (click)=\"cancelModal()\"\n          data-role=\"cancel-new-payee-modal-cancel-button\"\n        >\n          Continue with this payee\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n", components: [{ type: i1.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i1.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i2.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i1.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i1.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i1.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i1.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }, { type: i4.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayCancelNewPayeeModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-cancel-new-payee-modal',
                    templateUrl: './billpay-cancel-new-payee-modal.component.html',
                }]
        }], propDecorators: { resolve: [{
                type: Output
            }], findPayee: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1jYW5jZWwtbmV3LXBheWVlLW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBheWVlcy1qb3VybmV5L3NyYy9jb21wb25lbnRzL2FkZC1wYXllZS9iaWxscGF5LWNhbmNlbC1uZXctcGF5ZWUtbW9kYWwvYmlsbHBheS1jYW5jZWwtbmV3LXBheWVlLW1vZGFsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBheWVlcy1qb3VybmV5L3NyYy9jb21wb25lbnRzL2FkZC1wYXllZS9iaWxscGF5LWNhbmNlbC1uZXctcGF5ZWUtbW9kYWwvYmlsbHBheS1jYW5jZWwtbmV3LXBheWVlLW1vZGFsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQU12RSxNQUFNLE9BQU8sbUNBQW1DO0lBSmhEO1FBS1ksWUFBTyxHQUFHLElBQUksWUFBWSxFQUFXLENBQUM7UUFDaEQ7O1dBRUc7UUFDTSxjQUFTLEdBQUcsS0FBSyxDQUFDO0tBUzVCO0lBUEMsV0FBVztRQUNULElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxZQUFZO1FBQ1YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUIsQ0FBQzs7aUlBYlUsbUNBQW1DO3FIQUFuQyxtQ0FBbUMsOElDTmhELGdqRkF5RUE7NEZEbkVhLG1DQUFtQztrQkFKL0MsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUNBQW1DO29CQUM3QyxXQUFXLEVBQUUsaURBQWlEO2lCQUMvRDs4QkFFVyxPQUFPO3NCQUFoQixNQUFNO2dCQUlFLFNBQVM7c0JBQWpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1iaWxscGF5LWNhbmNlbC1uZXctcGF5ZWUtbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vYmlsbHBheS1jYW5jZWwtbmV3LXBheWVlLW1vZGFsLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQmlsbHBheUNhbmNlbE5ld1BheWVlTW9kYWxDb21wb25lbnQge1xuICBAT3V0cHV0KCkgcmVzb2x2ZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgLyoqXG4gICAqIE1vZGFsIG5hdmlnYXRpb24gcm91dGVzIHRvIHBheWVlIHNlYXJjaC4gRGVmYXVsdHMgdG8gZmFsc2UuXG4gICAqL1xuICBASW5wdXQoKSBmaW5kUGF5ZWUgPSBmYWxzZTtcblxuICBjYW5jZWxNb2RhbCgpIHtcbiAgICB0aGlzLnJlc29sdmUuZW1pdChmYWxzZSk7XG4gIH1cblxuICBjb25maXJtTW9kYWwoKSB7XG4gICAgdGhpcy5yZXNvbHZlLmVtaXQodHJ1ZSk7XG4gIH1cbn1cbiIsIjxiYi1tb2RhbC11aSBbaXNPcGVuXT1cInRydWVcIiAoY2FuY2VsKT1cImNhbmNlbE1vZGFsKClcIiBkYXRhLXJvbGU9XCJjYW5jZWwtbmV3LXBheWVlLW1vZGFsXCI+XG4gIDxiYi1tb2RhbC1oZWFkZXItdWk+XG4gICAgPG5nLXRlbXBsYXRlIGJiQ3VzdG9tTW9kYWxIZWFkZXI+XG4gICAgICA8YmItaGVhZGVyLXVpXG4gICAgICAgICpuZ0lmPVwiIWZpbmRQYXllZVwiXG4gICAgICAgIGRhdGEtcm9sZT1cImNhbmNlbC1uZXctcGF5ZWUtbW9kYWwtaGVhZGVyXCJcbiAgICAgICAgaGVhZGluZ1R5cGU9XCJoMlwiXG4gICAgICAgIGhlYWRpbmc9XCJDYW5jZWwgbmV3IHBheWVlP1wiXG4gICAgICAgIGkxOG4taGVhZGluZz1cIkNhbmNlbCBuZXcgcGF5ZWUgbW9kYWwgaGVhZGVyQEBiaWxscGF5Lm1hbmFnZS1wYXllZS5jYW5jZWwtbmV3LXBheWVlLW1vZGFsLmhlYWRlclwiXG4gICAgICA+XG4gICAgICA8L2JiLWhlYWRlci11aT5cbiAgICAgIDxiYi1oZWFkZXItdWlcbiAgICAgICAgKm5nSWY9XCJmaW5kUGF5ZWVcIlxuICAgICAgICBkYXRhLXJvbGU9XCJjYW5jZWwtbmV3LXBheWVlLW1vZGFsLWhlYWRlclwiXG4gICAgICAgIGhlYWRpbmdUeXBlPVwiaDJcIlxuICAgICAgICBoZWFkaW5nPVwiRmluZCBkaWZmZXJlbnQgcGF5ZWU/XCJcbiAgICAgICAgaTE4bi1oZWFkaW5nPVwiRmluZCBkaWZmZXJlbnQgcGF5ZWUgbW9kYWwgaGVhZGVyQEBiaWxscGF5Lm1hbmFnZS1wYXllZS5jYW5jZWwtbmV3LXBheWVlLW1vZGFsLmZpbmRoZWFkZXJcIlxuICAgICAgPlxuICAgICAgPC9iYi1oZWFkZXItdWk+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgPC9iYi1tb2RhbC1oZWFkZXItdWk+XG4gIDxiYi1tb2RhbC1ib2R5LXVpPlxuICAgIDxuZy10ZW1wbGF0ZSBiYkN1c3RvbU1vZGFsQm9keT5cbiAgICAgIDxzcGFuXG4gICAgICAgIGkxOG49XCJDYW5jZWwgbmV3IHBheWVlIG1vZGFsIGJvZHlAQGJpbGxwYXkubWFuYWdlLXBheWVlLmNhbmNlbC1uZXctcGF5ZWUtbW9kYWwuYm9keVwiXG4gICAgICAgIGRhdGEtcm9sZT1cImNhbmNlbC1uZXctcGF5ZWUtbW9kYWwtYm9keVwiXG4gICAgICAgID5UaGUgbmV3IHBheWVlIHdpbGwgYmUgY2FuY2VsZWQgYW5kIGFueSBkZXRhaWxzIGVudGVyZWQgd2lsbCBiZSBsb3N0Ljwvc3BhblxuICAgICAgPlxuICAgIDwvbmctdGVtcGxhdGU+XG4gIDwvYmItbW9kYWwtYm9keS11aT5cbiAgPGJiLW1vZGFsLWZvb3Rlci11aT5cbiAgICA8bmctdGVtcGxhdGUgYmJDdXN0b21Nb2RhbEZvb3Rlcj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1idXR0b24tYmFyXCI+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBiYkJ1dHRvblxuICAgICAgICAgIGNvbG9yPVwiZGFuZ2VyXCJcbiAgICAgICAgICBjbGFzcz1cImJiLWJ1dHRvbi1iYXJfX2J1dHRvblwiXG4gICAgICAgICAgKGNsaWNrKT1cImNvbmZpcm1Nb2RhbCgpXCJcbiAgICAgICAgICBkYXRhLXJvbGU9XCJjYW5jZWwtbmV3LXBheWVlLW1vZGFsLWNvbmZpcm0tYnV0dG9uXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAqbmdJZj1cIiFmaW5kUGF5ZWVcIlxuICAgICAgICAgICAgaTE4bj1cIlxuICAgICAgICAgICAgICBjb25maXJtIG1vZGFsIGJ1dHRvbnxDYW5jZWwgcGF5ZWUgY29uZmlybWF0aW9uXG4gICAgICAgICAgICAgIGJ1dHRvbkBAYmlsbHBheS5tYW5hZ2UtcGF5ZWUuY2FuY2VsLW5ldy1wYXllZS1tb2RhbC5jb25maXJtLWJ1dHRvblwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgQ2FuY2VsIG5ldyBwYXllZVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgKm5nSWY9XCJmaW5kUGF5ZWVcIlxuICAgICAgICAgICAgaTE4bj1cIlxuICAgICAgICAgICAgICBjb25maXJtIG1vZGFsIGJ1dHRvbnxDYW5jZWwgcGF5ZWUgY29uZmlybWF0aW9uXG4gICAgICAgICAgICAgIGJ1dHRvbkBAYmlsbHBheS5tYW5hZ2UtcGF5ZWUuY2FuY2VsLW5ldy1wYXllZS1tb2RhbC5jb25maXJtLWJ1dHRvbjJcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIEZpbmQgYSBkaWZmZXJlbnQgcGF5ZWVcbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgYmJCdXR0b25cbiAgICAgICAgICBjb2xvcj1cImxpbmtcIlxuICAgICAgICAgIGNsYXNzPVwiYmItYnV0dG9uLWJhcl9fYnV0dG9uXCJcbiAgICAgICAgICBpMThuPVwiXG4gICAgICAgICAgICBjYW5jZWwgbW9kYWwgYnV0dG9ufENvbnRpbnVlIHdpdGggY3VycmVudCBwYXllZVxuICAgICAgICAgICAgYnV0dG9uQEBiaWxscGF5Lm1hbmFnZS1wYXllZS5jYW5jZWwtbmV3LXBheWVlLW1vZGFsLmNhbmNlbC1idXR0b25cIlxuICAgICAgICAgIChjbGljayk9XCJjYW5jZWxNb2RhbCgpXCJcbiAgICAgICAgICBkYXRhLXJvbGU9XCJjYW5jZWwtbmV3LXBheWVlLW1vZGFsLWNhbmNlbC1idXR0b25cIlxuICAgICAgICA+XG4gICAgICAgICAgQ29udGludWUgd2l0aCB0aGlzIHBheWVlXG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgPC9iYi1tb2RhbC1mb290ZXItdWk+XG48L2JiLW1vZGFsLXVpPlxuIl19