import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Validators } from '@angular/forms';
import { PayverisEnrolmentComponentState } from '../../../model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@backbase/ui-ang/loading-indicator";
import * as i3 from "@backbase/ui-ang/alert";
import * as i4 from "@backbase/ui-ang/input-text";
import * as i5 from "@backbase/ui-ang/input-password";
import * as i6 from "@backbase/ui-ang/input-validation-message";
import * as i7 from "../billpay-payveris-ebills-enrolment-cancel-modal/billpay-payveris-ebills-enrolment-cancel-modal.component";
import * as i8 from "@angular/common";
import * as i9 from "@backbase/ui-ang/button";
export class BillpayPayverisEbillsEnrolmentLoginComponent {
    /** @internal */
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        /**
         * The current state of the component. Controls loaded elements.
         */
        this.componentState = PayverisEnrolmentComponentState.Undefined;
        /**
         * Displays elements for a failed submission. Defaults to false.
         */
        this.credentialsFailed = false;
        this.returnToPayeeList = new EventEmitter();
        this.payeeLogin = new EventEmitter();
        this.submitted = false;
        this.cancelModalOpen = false;
        this.ComponentStates = PayverisEnrolmentComponentState;
    }
    ngOnInit() {
        var _a;
        this.credentialsArray = (_a = this.credentialsArray) === null || _a === void 0 ? void 0 : _a.map(credentials => {
            return Object.assign(Object.assign({}, credentials), { additions: Object.assign(Object.assign({}, credentials.additions), { label_text: $localize `${credentials.label}` }) });
        });
        this.loginForm = this.formBuilder.group(this.formFields());
    }
    formFields() {
        var _a;
        const group = {};
        (_a = this.credentialsArray) === null || _a === void 0 ? void 0 : _a.forEach((field, i) => {
            group[i] = [field.value || '', Validators.required];
        });
        return group;
    }
    onPayverisLoginSubmit() {
        this.submitted = true;
        if (this.loginForm.valid) {
            this.payeeLogin.emit(this.loginForm.value);
        }
    }
    onModalResolve(operationCancelled) {
        this.cancelModalOpen = false;
        if (operationCancelled) {
            this.handleReturnToPayeeList();
        }
    }
    handleReturnToPayeeList() {
        this.returnToPayeeList.emit();
    }
}
BillpayPayverisEbillsEnrolmentLoginComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPayverisEbillsEnrolmentLoginComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
BillpayPayverisEbillsEnrolmentLoginComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayPayverisEbillsEnrolmentLoginComponent, selector: "bb-billpay-payveris-ebills-enrolment-login", inputs: { payeeName: "payeeName", credentialsArray: "credentialsArray", componentState: "componentState", credentialsFailed: "credentialsFailed" }, outputs: { returnToPayeeList: "returnToPayeeList", payeeLogin: "payeeLogin" }, ngImport: i0, template: "<ng-container [ngSwitch]=\"componentState\">\n  <ng-container *ngSwitchCase=\"ComponentStates.Checking\">\n    <bb-loading-indicator-ui\n      text=\"Checking credentials...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget checking credentials\n        text@@bb-billpay-ebills-payveris-enrolment-widget-ang.checking-credentials.text\"\n      loaderSize=\"lg\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Callback\">\n    <bb-loading-indicator-ui\n      text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n      i18n-text=\"\n        Ebill Payveris Enrolment Widget taking longer than usual\n        text@@bb-billpay-ebills-payveris-enrolment-widget-ang.login-call-back.text\"\n      loaderSize=\"lg\"\n      data-role=\"payveris-callback-info\"\n    ></bb-loading-indicator-ui>\n  </ng-container>\n\n  <ng-container *ngSwitchCase=\"ComponentStates.Ready\">\n    <bb-alert-ui\n      *ngIf=\"credentialsFailed\"\n      title=\"The information you provided is incorrect. Please try again.\"\n      data-role=\"payveris-payee-login-credentials-warning\"\n      i18n-title=\"\n        Login credentials failed alert|Text for login credentials failed\n        alert@@bb-billpay-payveris-ebills-enrolment-login.login-credentials-failed-alert\"\n    >\n    </bb-alert-ui>\n\n    <div\n      class=\"bb-block bb-block--lg\"\n      i18n=\"\n        Login prompt|Login prompt for payveris ebill enrolment login form\n        @@bb-billpay-payveris-ebills-enrolment-login.note.login-prompt\"\n    >\n      Please log in with your {{ payeeName }} credentials. We will only use them to retrieve information about bills.\n    </div>\n\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onPayverisLoginSubmit()\">\n      <div class=\"bb-block bb-block--xl\">\n        <div class=\"bb-block bb-block--sm\" *ngFor=\"let field of credentialsArray; index as i\">\n          <bb-input-text-ui\n            class=\"bb-form-field bb-form-field--md\"\n            [label]=\"field.additions.label_text\"\n            [attr.data-role]=\"'payveris-payee-login-' + i\"\n            [required]=\"true\"\n            [maxLength]=\"255\"\n            [formControlName]=\"i\"\n            *ngIf=\"field.label !== 'password'\"\n            [autofocus]=\"i === 0\"\n          >\n          </bb-input-text-ui>\n\n          <bb-input-password-ui\n            class=\"bb-form-field bb-form-field--md\"\n            [label]=\"field.additions.label_text\"\n            [attr.data-role]=\"'payveris-payee-login-' + i\"\n            [required]=\"true\"\n            [maxLength]=\"255\"\n            [showVisibilityControl]=\"true\"\n            [formControlName]=\"i\"\n            *ngIf=\"field.label === 'password'\"\n          >\n          </bb-input-password-ui>\n\n          <bb-input-validation-message-ui [showErrors]=\"submitted && loginForm?.get(i.toString())?.invalid\">\n            <ng-container\n              i18n=\"\n                You must enter warning|Validity warning for login field on payveris ebill enrolment login form\n                @@bb-billpay-payveris-ebills-enrolment-login.warning.login-warning\"\n            >\n              You must enter\n            </ng-container>\n            {{ field.additions.label_text }}\n          </bb-input-validation-message-ui>\n        </div>\n      </div>\n\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          data-role=\"payveris-payee-login-continue\"\n          i18n=\"\n            Continue enrolment|Continue enrolment button on payveris ebill enrolment login form\n            @@bb-billpay-payveris-ebills-enrolment-login.button.continue-enrolment\"\n        >\n          Continue\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"light\"\n          (click)=\"cancelModalOpen = true\"\n          data-role=\"payveris-payee-cancel-enrollment-init\"\n          color=\"link\"\n          i18n=\"\n            Cancel enrolment|Cancel enrolment button on payveris ebill enrolment login form\n            @@bb-billpay-payveris-ebills-enrolment-login.button.cancel-enrolment\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </ng-container>\n</ng-container>\n\n<bb-billpay-payveris-ebills-enrolment-cancel-modal *ngIf=\"cancelModalOpen\" (resolve)=\"onModalResolve($event)\">\n</bb-billpay-payveris-ebills-enrolment-cancel-modal>\n", components: [{ type: i2.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i3.AlertComponent, selector: "bb-alert-ui", inputs: ["modifier", "dismissible", "title", "message"], outputs: ["close"] }, { type: i4.InputTextComponent, selector: "bb-input-text-ui", inputs: ["placeholder", "maxLength", "minLength", "autocomplete", "readonly", "mask", "maskValidator", "showCharCounter"], outputs: ["valueChange"] }, { type: i5.InputPasswordComponent, selector: "bb-input-password-ui", inputs: ["placeholder", "maxLength", "minLength", "readonly", "autocomplete", "showVisibilityControl", "showPassword", "visibilityControlLabel", "ariaLabel"], outputs: ["toggleVisibility"] }, { type: i6.InputValidationMessageComponent, selector: "bb-input-validation-message-ui", inputs: ["showErrors", "messageId"] }, { type: i7.BillpayPayverisEbillsEnrolmentCancelModalComponent, selector: "bb-billpay-payveris-ebills-enrolment-cancel-modal", outputs: ["resolve"] }], directives: [{ type: i8.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i8.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i8.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i9.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayPayverisEbillsEnrolmentLoginComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-payveris-ebills-enrolment-login',
                    templateUrl: './billpay-payveris-ebills-enrolment-login.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; }, propDecorators: { payeeName: [{
                type: Input
            }], credentialsArray: [{
                type: Input
            }], componentState: [{
                type: Input
            }], credentialsFailed: [{
                type: Input
            }], returnToPayeeList: [{
                type: Output
            }], payeeLogin: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1wYXl2ZXJpcy1lYmlsbHMtZW5yb2xtZW50LWxvZ2luLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBheWVlcy1qb3VybmV5L3NyYy9jb21wb25lbnRzL3BheXZlcmlzLWViaWxscy1lbnJvbGxtZW50L2JpbGxwYXktcGF5dmVyaXMtZWJpbGxzLWVucm9sbWVudC1sb2dpbi9iaWxscGF5LXBheXZlcmlzLWViaWxscy1lbnJvbG1lbnQtbG9naW4uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9tYW5hZ2UtcGF5ZWVzLWpvdXJuZXkvc3JjL2NvbXBvbmVudHMvcGF5dmVyaXMtZWJpbGxzLWVucm9sbG1lbnQvYmlsbHBheS1wYXl2ZXJpcy1lYmlsbHMtZW5yb2xtZW50LWxvZ2luL2JpbGxwYXktcGF5dmVyaXMtZWJpbGxzLWVucm9sbWVudC1sb2dpbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBMEIsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFcEUsT0FBTyxFQUFpQiwrQkFBK0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7Ozs7OztBQU9oRixNQUFNLE9BQU8sNENBQTRDO0lBMEJ2RCxnQkFBZ0I7SUFDaEIsWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFoQjVDOztXQUVHO1FBQ00sbUJBQWMsR0FBRywrQkFBK0IsQ0FBQyxTQUFTLENBQUM7UUFDcEU7O1dBRUc7UUFDTSxzQkFBaUIsR0FBRyxLQUFLLENBQUM7UUFDekIsc0JBQWlCLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN2QyxlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQWlCLENBQUM7UUFFekQsY0FBUyxHQUFHLEtBQUssQ0FBQztRQUNsQixvQkFBZSxHQUFHLEtBQUssQ0FBQztRQUNmLG9CQUFlLEdBQUcsK0JBQStCLENBQUM7SUFHWixDQUFDO0lBRWhELFFBQVE7O1FBQ04sSUFBSSxDQUFDLGdCQUFnQixHQUFHLE1BQUEsSUFBSSxDQUFDLGdCQUFnQiwwQ0FBRSxHQUFHLENBQUMsV0FBVyxDQUFDLEVBQUU7WUFDL0QsdUNBQ0ssV0FBVyxLQUNkLFNBQVMsa0NBQ0osV0FBVyxDQUFDLFNBQVMsS0FDeEIsVUFBVSxFQUFFLFNBQVMsQ0FBQSxHQUFHLFdBQVcsQ0FBQyxLQUFLLEVBQUUsT0FFN0M7UUFDSixDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUVELFVBQVU7O1FBQ1IsTUFBTSxLQUFLLEdBQVEsRUFBRSxDQUFDO1FBQ3RCLE1BQUEsSUFBSSxDQUFDLGdCQUFnQiwwQ0FBRSxPQUFPLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDMUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RELENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQscUJBQXFCO1FBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUU7WUFDeEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUM1QztJQUNILENBQUM7SUFFRCxjQUFjLENBQUMsa0JBQTJCO1FBQ3hDLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO1FBQzdCLElBQUksa0JBQWtCLEVBQUU7WUFDdEIsSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUM7U0FDaEM7SUFDSCxDQUFDO0lBRUQsdUJBQXVCO1FBQ3JCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzswSUFsRVUsNENBQTRDOzhIQUE1Qyw0Q0FBNEMscVRDVnpELDYrSUFtSEE7NEZEekdhLDRDQUE0QztrQkFKeEQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsNENBQTRDO29CQUN0RCxXQUFXLEVBQUUsMERBQTBEO2lCQUN4RTtrR0FPVSxTQUFTO3NCQUFqQixLQUFLO2dCQUlHLGdCQUFnQjtzQkFBeEIsS0FBSztnQkFJRyxjQUFjO3NCQUF0QixLQUFLO2dCQUlHLGlCQUFpQjtzQkFBekIsS0FBSztnQkFDSSxpQkFBaUI7c0JBQTFCLE1BQU07Z0JBQ0csVUFBVTtzQkFBbkIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBFYmlsbENyZWRlbnRpYWwgfSBmcm9tICdAYmFja2Jhc2UvZGF0YS1hbmcvYmlsbHBheSc7XG5pbXBvcnQgeyBQYXl2ZXJpc0xvZ2luLCBQYXl2ZXJpc0Vucm9sbWVudENvbXBvbmVudFN0YXRlIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwnO1xuZGVjbGFyZSBjb25zdCAkbG9jYWxpemU6IGFueTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYmItYmlsbHBheS1wYXl2ZXJpcy1lYmlsbHMtZW5yb2xtZW50LWxvZ2luJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2JpbGxwYXktcGF5dmVyaXMtZWJpbGxzLWVucm9sbWVudC1sb2dpbi5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIEJpbGxwYXlQYXl2ZXJpc0ViaWxsc0Vucm9sbWVudExvZ2luQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgbG9naW5Gb3JtITogRm9ybUdyb3VwO1xuXG4gIC8qKlxuICAgKiBOYW1lIG9mIHRoZSBwYXllZS5cbiAgICovXG4gIEBJbnB1dCgpIHBheWVlTmFtZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogQXJyYXkgb2YgbG9naW4gY3JlZGVudGlhbCBvYmplY3RzIHRvIGJlIHVzZWQgZm9yIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBlbGVtZW50cy5cbiAgICovXG4gIEBJbnB1dCgpIGNyZWRlbnRpYWxzQXJyYXk6IEViaWxsQ3JlZGVudGlhbFtdIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogVGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGNvbXBvbmVudC4gQ29udHJvbHMgbG9hZGVkIGVsZW1lbnRzLlxuICAgKi9cbiAgQElucHV0KCkgY29tcG9uZW50U3RhdGUgPSBQYXl2ZXJpc0Vucm9sbWVudENvbXBvbmVudFN0YXRlLlVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIERpc3BsYXlzIGVsZW1lbnRzIGZvciBhIGZhaWxlZCBzdWJtaXNzaW9uLiBEZWZhdWx0cyB0byBmYWxzZS5cbiAgICovXG4gIEBJbnB1dCgpIGNyZWRlbnRpYWxzRmFpbGVkID0gZmFsc2U7XG4gIEBPdXRwdXQoKSByZXR1cm5Ub1BheWVlTGlzdCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHBheWVlTG9naW4gPSBuZXcgRXZlbnRFbWl0dGVyPFBheXZlcmlzTG9naW4+KCk7XG5cbiAgc3VibWl0dGVkID0gZmFsc2U7XG4gIGNhbmNlbE1vZGFsT3BlbiA9IGZhbHNlO1xuICByZWFkb25seSBDb21wb25lbnRTdGF0ZXMgPSBQYXl2ZXJpc0Vucm9sbWVudENvbXBvbmVudFN0YXRlO1xuXG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5jcmVkZW50aWFsc0FycmF5ID0gdGhpcy5jcmVkZW50aWFsc0FycmF5Py5tYXAoY3JlZGVudGlhbHMgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uY3JlZGVudGlhbHMsXG4gICAgICAgIGFkZGl0aW9uczoge1xuICAgICAgICAgIC4uLmNyZWRlbnRpYWxzLmFkZGl0aW9ucyxcbiAgICAgICAgICBsYWJlbF90ZXh0OiAkbG9jYWxpemVgJHtjcmVkZW50aWFscy5sYWJlbH1gLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9KTtcbiAgICB0aGlzLmxvZ2luRm9ybSA9IHRoaXMuZm9ybUJ1aWxkZXIuZ3JvdXAodGhpcy5mb3JtRmllbGRzKCkpO1xuICB9XG5cbiAgZm9ybUZpZWxkcygpIHtcbiAgICBjb25zdCBncm91cDogYW55ID0ge307XG4gICAgdGhpcy5jcmVkZW50aWFsc0FycmF5Py5mb3JFYWNoKChmaWVsZCwgaSkgPT4ge1xuICAgICAgZ3JvdXBbaV0gPSBbZmllbGQudmFsdWUgfHwgJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdO1xuICAgIH0pO1xuICAgIHJldHVybiBncm91cDtcbiAgfVxuXG4gIG9uUGF5dmVyaXNMb2dpblN1Ym1pdCgpIHtcbiAgICB0aGlzLnN1Ym1pdHRlZCA9IHRydWU7XG4gICAgaWYgKHRoaXMubG9naW5Gb3JtLnZhbGlkKSB7XG4gICAgICB0aGlzLnBheWVlTG9naW4uZW1pdCh0aGlzLmxvZ2luRm9ybS52YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgb25Nb2RhbFJlc29sdmUob3BlcmF0aW9uQ2FuY2VsbGVkOiBib29sZWFuKSB7XG4gICAgdGhpcy5jYW5jZWxNb2RhbE9wZW4gPSBmYWxzZTtcbiAgICBpZiAob3BlcmF0aW9uQ2FuY2VsbGVkKSB7XG4gICAgICB0aGlzLmhhbmRsZVJldHVyblRvUGF5ZWVMaXN0KCk7XG4gICAgfVxuICB9XG5cbiAgaGFuZGxlUmV0dXJuVG9QYXllZUxpc3QoKSB7XG4gICAgdGhpcy5yZXR1cm5Ub1BheWVlTGlzdC5lbWl0KCk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgW25nU3dpdGNoXT1cImNvbXBvbmVudFN0YXRlXCI+XG4gIDxuZy1jb250YWluZXIgKm5nU3dpdGNoQ2FzZT1cIkNvbXBvbmVudFN0YXRlcy5DaGVja2luZ1wiPlxuICAgIDxiYi1sb2FkaW5nLWluZGljYXRvci11aVxuICAgICAgdGV4dD1cIkNoZWNraW5nIGNyZWRlbnRpYWxzLi4uXCJcbiAgICAgIGkxOG4tdGV4dD1cIlxuICAgICAgICBFYmlsbCBQYXl2ZXJpcyBFbnJvbG1lbnQgV2lkZ2V0IGNoZWNraW5nIGNyZWRlbnRpYWxzXG4gICAgICAgIHRleHRAQGJiLWJpbGxwYXktZWJpbGxzLXBheXZlcmlzLWVucm9sbWVudC13aWRnZXQtYW5nLmNoZWNraW5nLWNyZWRlbnRpYWxzLnRleHRcIlxuICAgICAgbG9hZGVyU2l6ZT1cImxnXCJcbiAgICA+PC9iYi1sb2FkaW5nLWluZGljYXRvci11aT5cbiAgPC9uZy1jb250YWluZXI+XG5cbiAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiQ29tcG9uZW50U3RhdGVzLkNhbGxiYWNrXCI+XG4gICAgPGJiLWxvYWRpbmctaW5kaWNhdG9yLXVpXG4gICAgICB0ZXh0PVwiZUJpbGwgZW5yb2xtZW50IGlzIHRha2luZyBhIGxpdHRsZSBsb25nZXIgdGhhbiB1c3VhbCwgcGxlYXNlIGJlIHBhdGllbnQuLi5cIlxuICAgICAgaTE4bi10ZXh0PVwiXG4gICAgICAgIEViaWxsIFBheXZlcmlzIEVucm9sbWVudCBXaWRnZXQgdGFraW5nIGxvbmdlciB0aGFuIHVzdWFsXG4gICAgICAgIHRleHRAQGJiLWJpbGxwYXktZWJpbGxzLXBheXZlcmlzLWVucm9sbWVudC13aWRnZXQtYW5nLmxvZ2luLWNhbGwtYmFjay50ZXh0XCJcbiAgICAgIGxvYWRlclNpemU9XCJsZ1wiXG4gICAgICBkYXRhLXJvbGU9XCJwYXl2ZXJpcy1jYWxsYmFjay1pbmZvXCJcbiAgICA+PC9iYi1sb2FkaW5nLWluZGljYXRvci11aT5cbiAgPC9uZy1jb250YWluZXI+XG5cbiAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiQ29tcG9uZW50U3RhdGVzLlJlYWR5XCI+XG4gICAgPGJiLWFsZXJ0LXVpXG4gICAgICAqbmdJZj1cImNyZWRlbnRpYWxzRmFpbGVkXCJcbiAgICAgIHRpdGxlPVwiVGhlIGluZm9ybWF0aW9uIHlvdSBwcm92aWRlZCBpcyBpbmNvcnJlY3QuIFBsZWFzZSB0cnkgYWdhaW4uXCJcbiAgICAgIGRhdGEtcm9sZT1cInBheXZlcmlzLXBheWVlLWxvZ2luLWNyZWRlbnRpYWxzLXdhcm5pbmdcIlxuICAgICAgaTE4bi10aXRsZT1cIlxuICAgICAgICBMb2dpbiBjcmVkZW50aWFscyBmYWlsZWQgYWxlcnR8VGV4dCBmb3IgbG9naW4gY3JlZGVudGlhbHMgZmFpbGVkXG4gICAgICAgIGFsZXJ0QEBiYi1iaWxscGF5LXBheXZlcmlzLWViaWxscy1lbnJvbG1lbnQtbG9naW4ubG9naW4tY3JlZGVudGlhbHMtZmFpbGVkLWFsZXJ0XCJcbiAgICA+XG4gICAgPC9iYi1hbGVydC11aT5cblxuICAgIDxkaXZcbiAgICAgIGNsYXNzPVwiYmItYmxvY2sgYmItYmxvY2stLWxnXCJcbiAgICAgIGkxOG49XCJcbiAgICAgICAgTG9naW4gcHJvbXB0fExvZ2luIHByb21wdCBmb3IgcGF5dmVyaXMgZWJpbGwgZW5yb2xtZW50IGxvZ2luIGZvcm1cbiAgICAgICAgQEBiYi1iaWxscGF5LXBheXZlcmlzLWViaWxscy1lbnJvbG1lbnQtbG9naW4ubm90ZS5sb2dpbi1wcm9tcHRcIlxuICAgID5cbiAgICAgIFBsZWFzZSBsb2cgaW4gd2l0aCB5b3VyIHt7IHBheWVlTmFtZSB9fSBjcmVkZW50aWFscy4gV2Ugd2lsbCBvbmx5IHVzZSB0aGVtIHRvIHJldHJpZXZlIGluZm9ybWF0aW9uIGFib3V0IGJpbGxzLlxuICAgIDwvZGl2PlxuXG4gICAgPGZvcm0gW2Zvcm1Hcm91cF09XCJsb2dpbkZvcm1cIiAobmdTdWJtaXQpPVwib25QYXl2ZXJpc0xvZ2luU3VibWl0KClcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0teGxcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1zbVwiICpuZ0Zvcj1cImxldCBmaWVsZCBvZiBjcmVkZW50aWFsc0FycmF5OyBpbmRleCBhcyBpXCI+XG4gICAgICAgICAgPGJiLWlucHV0LXRleHQtdWlcbiAgICAgICAgICAgIGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1tZFwiXG4gICAgICAgICAgICBbbGFiZWxdPVwiZmllbGQuYWRkaXRpb25zLmxhYmVsX3RleHRcIlxuICAgICAgICAgICAgW2F0dHIuZGF0YS1yb2xlXT1cIidwYXl2ZXJpcy1wYXllZS1sb2dpbi0nICsgaVwiXG4gICAgICAgICAgICBbcmVxdWlyZWRdPVwidHJ1ZVwiXG4gICAgICAgICAgICBbbWF4TGVuZ3RoXT1cIjI1NVwiXG4gICAgICAgICAgICBbZm9ybUNvbnRyb2xOYW1lXT1cImlcIlxuICAgICAgICAgICAgKm5nSWY9XCJmaWVsZC5sYWJlbCAhPT0gJ3Bhc3N3b3JkJ1wiXG4gICAgICAgICAgICBbYXV0b2ZvY3VzXT1cImkgPT09IDBcIlxuICAgICAgICAgID5cbiAgICAgICAgICA8L2JiLWlucHV0LXRleHQtdWk+XG5cbiAgICAgICAgICA8YmItaW5wdXQtcGFzc3dvcmQtdWlcbiAgICAgICAgICAgIGNsYXNzPVwiYmItZm9ybS1maWVsZCBiYi1mb3JtLWZpZWxkLS1tZFwiXG4gICAgICAgICAgICBbbGFiZWxdPVwiZmllbGQuYWRkaXRpb25zLmxhYmVsX3RleHRcIlxuICAgICAgICAgICAgW2F0dHIuZGF0YS1yb2xlXT1cIidwYXl2ZXJpcy1wYXllZS1sb2dpbi0nICsgaVwiXG4gICAgICAgICAgICBbcmVxdWlyZWRdPVwidHJ1ZVwiXG4gICAgICAgICAgICBbbWF4TGVuZ3RoXT1cIjI1NVwiXG4gICAgICAgICAgICBbc2hvd1Zpc2liaWxpdHlDb250cm9sXT1cInRydWVcIlxuICAgICAgICAgICAgW2Zvcm1Db250cm9sTmFtZV09XCJpXCJcbiAgICAgICAgICAgICpuZ0lmPVwiZmllbGQubGFiZWwgPT09ICdwYXNzd29yZCdcIlxuICAgICAgICAgID5cbiAgICAgICAgICA8L2JiLWlucHV0LXBhc3N3b3JkLXVpPlxuXG4gICAgICAgICAgPGJiLWlucHV0LXZhbGlkYXRpb24tbWVzc2FnZS11aSBbc2hvd0Vycm9yc109XCJzdWJtaXR0ZWQgJiYgbG9naW5Gb3JtPy5nZXQoaS50b1N0cmluZygpKT8uaW52YWxpZFwiPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICAgICBpMThuPVwiXG4gICAgICAgICAgICAgICAgWW91IG11c3QgZW50ZXIgd2FybmluZ3xWYWxpZGl0eSB3YXJuaW5nIGZvciBsb2dpbiBmaWVsZCBvbiBwYXl2ZXJpcyBlYmlsbCBlbnJvbG1lbnQgbG9naW4gZm9ybVxuICAgICAgICAgICAgICAgIEBAYmItYmlsbHBheS1wYXl2ZXJpcy1lYmlsbHMtZW5yb2xtZW50LWxvZ2luLndhcm5pbmcubG9naW4td2FybmluZ1wiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIFlvdSBtdXN0IGVudGVyXG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICAgIHt7IGZpZWxkLmFkZGl0aW9ucy5sYWJlbF90ZXh0IH19XG4gICAgICAgICAgPC9iYi1pbnB1dC12YWxpZGF0aW9uLW1lc3NhZ2UtdWk+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1idXR0b24tYmFyIGJiLWJ1dHRvbi1iYXItLXJldmVyc2VcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGJiQnV0dG9uXG4gICAgICAgICAgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b25cIlxuICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxuICAgICAgICAgIGRhdGEtcm9sZT1cInBheXZlcmlzLXBheWVlLWxvZ2luLWNvbnRpbnVlXCJcbiAgICAgICAgICBpMThuPVwiXG4gICAgICAgICAgICBDb250aW51ZSBlbnJvbG1lbnR8Q29udGludWUgZW5yb2xtZW50IGJ1dHRvbiBvbiBwYXl2ZXJpcyBlYmlsbCBlbnJvbG1lbnQgbG9naW4gZm9ybVxuICAgICAgICAgICAgQEBiYi1iaWxscGF5LXBheXZlcmlzLWViaWxscy1lbnJvbG1lbnQtbG9naW4uYnV0dG9uLmNvbnRpbnVlLWVucm9sbWVudFwiXG4gICAgICAgID5cbiAgICAgICAgICBDb250aW51ZVxuICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgYmJCdXR0b25cbiAgICAgICAgICBjbGFzcz1cImJiLWJ1dHRvbi1iYXJfX2J1dHRvblwiXG4gICAgICAgICAgY29sb3I9XCJsaWdodFwiXG4gICAgICAgICAgKGNsaWNrKT1cImNhbmNlbE1vZGFsT3BlbiA9IHRydWVcIlxuICAgICAgICAgIGRhdGEtcm9sZT1cInBheXZlcmlzLXBheWVlLWNhbmNlbC1lbnJvbGxtZW50LWluaXRcIlxuICAgICAgICAgIGNvbG9yPVwibGlua1wiXG4gICAgICAgICAgaTE4bj1cIlxuICAgICAgICAgICAgQ2FuY2VsIGVucm9sbWVudHxDYW5jZWwgZW5yb2xtZW50IGJ1dHRvbiBvbiBwYXl2ZXJpcyBlYmlsbCBlbnJvbG1lbnQgbG9naW4gZm9ybVxuICAgICAgICAgICAgQEBiYi1iaWxscGF5LXBheXZlcmlzLWViaWxscy1lbnJvbG1lbnQtbG9naW4uYnV0dG9uLmNhbmNlbC1lbnJvbG1lbnRcIlxuICAgICAgICA+XG4gICAgICAgICAgQ2FuY2VsXG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9mb3JtPlxuICA8L25nLWNvbnRhaW5lcj5cbjwvbmctY29udGFpbmVyPlxuXG48YmItYmlsbHBheS1wYXl2ZXJpcy1lYmlsbHMtZW5yb2xtZW50LWNhbmNlbC1tb2RhbCAqbmdJZj1cImNhbmNlbE1vZGFsT3BlblwiIChyZXNvbHZlKT1cIm9uTW9kYWxSZXNvbHZlKCRldmVudClcIj5cbjwvYmItYmlsbHBheS1wYXl2ZXJpcy1lYmlsbHMtZW5yb2xtZW50LWNhbmNlbC1tb2RhbD5cbiJdfQ==