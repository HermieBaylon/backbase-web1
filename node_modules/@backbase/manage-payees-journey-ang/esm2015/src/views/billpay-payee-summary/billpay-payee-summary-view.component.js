import { Component, ViewChild } from '@angular/core';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { takeUntil, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../services/manage-payees-navigation.service";
import * as i2 from "@angular/router";
import * as i3 from "../../services/manage-payees-journey-config.service";
import * as i4 from "../../services/billpay-payee-summary-widget.service";
import * as i5 from "@backbase/ui-ang/notification";
import * as i6 from "@backbase/ui-ang/icon";
import * as i7 from "@backbase/ui-ang/header";
import * as i8 from "../../components/payee-summary/billpay-payee-stepper/billpay-payee-stepper.component";
import * as i9 from "../../components/payee-summary/billpay-payee-information/billpay-payee-information.component";
import * as i10 from "@backbase/billpay-journeys-common";
import * as i11 from "@backbase/ui-ang/loading-indicator";
import * as i12 from "@backbase/ui-ang/empty-state";
import * as i13 from "@backbase/ui-ang/button";
import * as i14 from "@angular/common";
export class PayeeSummaryViewComponent {
    /** @internal */
    constructor(routerService, route, config, payeeSummaryService, notificationService, cdRef) {
        this.routerService = routerService;
        this.route = route;
        this.config = config;
        this.payeeSummaryService = payeeSummaryService;
        this.notificationService = notificationService;
        this.cdRef = cdRef;
        this.selectedDeletePayeeSource = new BehaviorSubject(undefined);
        this.destroy$ = new Subject();
        this.payees$ = new Observable();
        this.isDeleteModalOpened = false;
        this.isNavigateModalOpened = false;
        this.payeeIndex = 0;
        this.notificationMessageTemplate = '';
        this.notificationHeaderTemplate = '';
        this.navigationExtras = { relativeTo: this.route.parent };
    }
    gotoPayeeList() {
        this.routerService.navigateToPayeeList(this.navigationExtras);
    }
    gotoAddPayee() {
        this.routerService.navigateToSearch(this.navigationExtras);
    }
    gotoOneOffPayment(id) {
        this.routerService.navigateToOneOffPayment(id);
    }
    gotoEditManual(id) {
        this.routerService.navigateToEditManualPayeeForm(id, this.navigationExtras);
    }
    gotoEditElectronic(id) {
        this.routerService.navigateToEditElectronicPayeeForm(id, this.navigationExtras);
    }
    gotoPaymentsList() {
        this.routerService.navigateToPendingPayments();
    }
    ngOnInit() {
        const id = this.route.snapshot.params['payeeID'] || undefined;
        this.payees$ = this.payeeSummaryService.getPayees().pipe(tap(data => this.setPayee(data, id)), tap(data => (this.payeeSummaries = data)));
    }
    setPayee(payeeSummaries, id) {
        if (!payeeSummaries || payeeSummaries.length === 0) {
            return;
        }
        else if (id === undefined) {
            this.payeeSummary = payeeSummaries[0];
        }
        else {
            const payeeIndex = payeeSummaries.findIndex(payee => payee.id === id);
            if (payeeIndex > 0) {
                this.payeeIndex = payeeIndex;
                this.payeeSummary = payeeSummaries[payeeIndex];
            }
            else {
                this.payeeSummary = payeeSummaries[0];
            }
        }
        if (!this.payeeSummary.electronic) {
            this.payeeSummaryService
                .getFullSummary(this.payeeSummary.id)
                .pipe(takeUntil(this.destroy$))
                .subscribe(payee => {
                this.fullManualPayeeSummary = payee;
                this.cdRef.detectChanges();
            });
        }
    }
    handleEditPayee() {
        if (this.payeeSummary && this.payeeSummary.electronic) {
            this.gotoEditElectronic(this.payeeSummary.id);
        }
        else if (this.payeeSummary && !this.payeeSummary.electronic) {
            this.gotoEditManual(this.payeeSummary.id);
        }
    }
    onNavigateToPayments(resolve) {
        if (resolve) {
            this.gotoPaymentsList();
        }
        this.closeNavigateModal();
    }
    selectedDeletePayee() {
        return this.selectedDeletePayeeSource.asObservable();
    }
    handleDeletePayee() {
        this.payeeSummary && !this.payeeSummary.nextPayment ? this.openDeleteModal() : this.openNavigateModal();
        this.selectedDeletePayeeSource.next(this.payeeSummary);
    }
    openNavigateModal() {
        this.isNavigateModalOpened = true;
    }
    closeNavigateModal() {
        this.isNavigateModalOpened = false;
    }
    openDeleteModal() {
        this.isDeleteModalOpened = true;
    }
    closeDeleteModal() {
        this.isDeleteModalOpened = false;
    }
    onDeletePayee(resolve) {
        this.closeDeleteModal();
        if (resolve && this.payeeSummary) {
            this.payeeSummaryService
                .deletePayee(this.payeeSummary.id, this.payeeSummary.electronic)
                .pipe(takeUntil(this.destroy$))
                .subscribe(() => {
                this.deletionNotify();
            });
            this.gotoPayeeList();
        }
    }
    deletionNotify() {
        this.notificationService.showNotification({
            header: this.notificationHeaderTemplate,
            message: this.notificationMessageTemplate,
            modifier: 'success',
            ttl: this.dismissTimeoutValue,
        });
    }
    get dismissTimeoutValue() {
        if (this.config.notificationDismissTime === undefined) {
            throw new Error('Dismiss timeout value not found');
        }
        return this.config.notificationDismissTime;
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    updatePayee() {
        if (this.payeeSummaries) {
            this.payeeSummary = this.payeeSummaries[this.payeeIndex];
            if (this.payeeSummary && !this.payeeSummary.electronic) {
                this.payeeSummaryService
                    .getFullSummary(this.payeeSummary.id)
                    .pipe(takeUntil(this.destroy$))
                    .subscribe(payee => {
                    this.fullManualPayeeSummary = payee;
                    this.cdRef.detectChanges();
                });
            }
            else {
                this.fullManualPayeeSummary = undefined;
                this.cdRef.detectChanges();
            }
        }
    }
    nextPayee() {
        ++this.payeeIndex;
        this.updatePayee();
    }
    previousPayee() {
        --this.payeeIndex;
        this.updatePayee();
    }
    get currentLoadingState() {
        return this.payeeSummaryService.payeesSummaryLoadingState;
    }
}
PayeeSummaryViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PayeeSummaryViewComponent, deps: [{ token: i1.ManagePayeesNavigationService }, { token: i2.ActivatedRoute }, { token: i3.ManagePayeesJourneyConfigService }, { token: i4.BillpayPayeeSummaryWidgetService }, { token: i5.NotificationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
PayeeSummaryViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: PayeeSummaryViewComponent, selector: "bb-billpay-payee-details-view", viewQueries: [{ propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }, { propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }], ngImport: i0, template: "<div class=\"bb-block bb-block--lg\">\n  <button bbButton color=\"link\" class=\"bb-block bb-block--md pl-0\" (click)=\"gotoPayeeList()\">\n    <bb-icon-ui name=\"arrow-back\" size=\"md\"></bb-icon-ui>\n    <span i18n=\"button label|Back button@@billpay-payees-journey.payee-summary.back\">Back to Payee List</span>\n  </button>\n  <bb-header-ui headingType=\"h1\" [heading]=\"'Payee summary'\" i18n-heading=\"@@billpay-payees-journey.add-payee\">\n  </bb-header-ui>\n</div>\n\n<ng-template #notificationMessage>\n  <div>\n    <div>\n      <span\n        i18n=\"\n          delete payee notification message|Payee delete confirmation success notification\n          message@@billpay-payee-summary.delete-payee-confirm.notification.message\"\n        >The payee\n        {{ payeeSummary.nickName ? payeeSummary.nickName + ' (' + payeeSummary.name + ')' : payeeSummary.name }} has\n        been deleted successfully</span\n      >\n    </div>\n  </div>\n</ng-template>\n\n <ng-container *ngIf=\"payees$ | async as allPayees\">\n  <ng-container *ngIf=\"payeeSummary; else emptyState\">\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <div class=\"bb-block bb-block--md\">\n          <bb-billpay-payee-stepper\n            [index]=\"payeeIndex\"\n            [size]=\"allPayees.length\"\n            (nextPayee)=\"nextPayee()\"\n            (previousPayee)=\"previousPayee()\"\n          >\n          </bb-billpay-payee-stepper>\n        </div>\n        <div class=\"bb-block bb-block--lg\">\n          <bb-header-ui\n            headingType=\"h2\"\n            *ngIf=\"payeeSummary.nickName || payeeSummary.name\"\n            data-role=\"full-summary-payee-name-primary\"\n            heading=\"{{ payeeSummary.nickName || payeeSummary.name }}\"\n          >\n          </bb-header-ui>\n          <div\n            class=\"bb-highlight\"\n            *ngIf=\"payeeSummary.nickName && payeeSummary.name\"\n            data-role=\"full-summary-payee-name-secondary\"\n          >\n            {{ payeeSummary.name }}\n          </div>\n        </div>\n\n        <bb-billpay-payee-information\n          [payeeSummary]=\"payeeSummary\"\n          [fullPayee]=\"fullManualPayeeSummary\"\n          (editPayee)=\"handleEditPayee()\"\n          (deletePayee)=\"handleDeletePayee()\"\n        >\n        </bb-billpay-payee-information>\n\n        <div class=\"bb-button-bar bb-button-bar--reverse\">\n          <button\n            bbButton\n            (click)=\"gotoOneOffPayment(payeeSummary)\"\n            data-role=\"make-payment-from-summary-payee-button\"\n            color=\"primary\"\n            class=\"bb-button-bar__button\"\n            i18n=\"\n              Make a payment button|Text for the make a payment vie full summary\n              button@@bb-billpay-view-payee-full-summary.button.make-payment\"\n          >\n            Make a payment\n          </button>\n        </div>\n\n        <bb-billpay-payee-delete-modal\n          *ngIf=\"isDeleteModalOpened\"\n          (resolve)=\"onDeletePayee($event)\"\n        ></bb-billpay-payee-delete-modal>\n\n        <bb-billpay-payee-navigate-modal\n          *ngIf=\"isNavigateModalOpened\"\n          (resolve)=\"onNavigateToPayments($event)\"\n        ></bb-billpay-payee-navigate-modal>\n      </div>\n    </div>\n  </ng-container>\n</ng-container> \n\n<ng-container *ngIf=\"currentLoadingState | async as currentLoadingState\">\n  <ng-container *ngIf=\"currentLoadingState === 'loading'\">\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"currentLoadingState === 'error'\">\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <bb-empty-state-ui\n          data-role=\"error-state\"\n          iconSize=\"xxl\"\n          iconModifier=\"error-outline\"\n          subtitle=\"Try to reload the page or contact support\"\n          i18n-subtitle=\"\n            Try to reload the page or contact support|Payee Summary error loading\n            subtitle@@bb-billpay-payee-summary-widget-ang.loading.subtitle\"\n          title=\"Could not fetch payee details\"\n          i18n-title=\"\n            Could not fetch payee details|Payee Summary error loading\n            title@@bb-billpay-payee-summary-widget-ang.loading.title\"\n        >\n        </bb-empty-state-ui>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyState>\n  <div class=\"card card-lg\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        data-role=\"empty-state\"\n        iconSize=\"xxl\"\n        iconModifier=\"assignment-ind\"\n        subtitle=\"Add a payee to make a bill payment\"\n        i18n-subtitle=\"\n          Add a payee to make a bill payment|Payee Summary no payees\n          subtitle@@bb-billpay-payee-summary-widget-ang.bb-empty-state-ui.subtitle\"\n        title=\"No payees\"\n        i18n-title=\"\n          No payees state text|Payee Summary no payees\n          title@@bb-billpay-payee-summary-widget-ang.bb-empty-state-ui.title\"\n      >\n      </bb-empty-state-ui>\n      <div class=\"bb-state-container__footer\">\n        <button\n          bbButton\n          data-role=\"empty-state-add-payee-btn\"\n          (click)=\"gotoAddPayee()\"\n          i18n=\"\n            Add a payee|Payee Summary add payee\n            button@@bb-billpay-payee-summary-widget-ang.bb-empty-state-ui.button.add-payee\"\n        >\n          Add a payee\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <div>\n    <span\n      i18n=\"\n        delete payee notification header|Payee delete confirmation success notification\n        header@@billpay-payee-summary.confirm.notification.header\"\n      >Payee deleted</span\n    >\n  </div>\n</ng-template>\n", components: [{ type: i6.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i7.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i8.BillpayPayeeStepperComponent, selector: "bb-billpay-payee-stepper", inputs: ["index", "size"], outputs: ["nextPayee", "previousPayee"] }, { type: i9.BillpayPayeeInformationComponent, selector: "bb-billpay-payee-information", inputs: ["payeeSummary", "fullPayee"], outputs: ["editPayee", "deletePayee"] }, { type: i10.ӨBillpayPayeeDeleteModalComponent, selector: "bb-billpay-payee-delete-modal", outputs: ["resolve"] }, { type: i10.ӨBillpayPayeeNavigateModalComponent, selector: "bb-billpay-payee-navigate-modal", outputs: ["resolve"] }, { type: i11.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i12.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i13.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i14.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i14.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PayeeSummaryViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-payee-details-view',
                    templateUrl: './billpay-payee-summary-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.ManagePayeesNavigationService }, { type: i2.ActivatedRoute }, { type: i3.ManagePayeesJourneyConfigService }, { type: i4.BillpayPayeeSummaryWidgetService }, { type: i5.NotificationService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { notificationMessageTemplate: [{
                type: ViewChild,
                args: ['notificationMessage']
            }], notificationHeaderTemplate: [{
                type: ViewChild,
                args: ['notificationHeader']
            }] } });
//# sourceMappingURL=data:application/json;base64,