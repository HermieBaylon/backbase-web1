import { Component } from '@angular/core';
import { combineLatest, of } from 'rxjs';
import { map, switchMap, take } from 'rxjs/operators';
import { BaseElectronicPayeePageDirective } from '../../model/base-electronic-payee-page.model';
import { BillpayDiscardChangesModalService } from '@backbase/billpay-journeys-common';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../services/billpay-manage-payee-state.service";
import * as i3 from "@backbase/billpay-journeys-common";
import * as i4 from "../../services/manage-payees-navigation.service";
import * as i5 from "../../components/add-payee/billpay-electronic-payee-form/billpay-electronic-payee-form.component";
import * as i6 from "../../components/add-payee/billpay-cancel-new-payee-modal/billpay-cancel-new-payee-modal.component";
import * as i7 from "@angular/common";
export class BillpayCreateElectronicPayeeViewComponent extends BaseElectronicPayeePageDirective {
    /** @internal */
    constructor(route, stateService, discardModalService, router) {
        super(route, stateService, discardModalService);
        this.router = router;
        this.zipRequired$ = this.route.queryParamMap.pipe(take(1), map(params => params.get('zipRequired')), map(zipRequired => (zipRequired ? JSON.parse(zipRequired) : false)));
        this.name$ = this.route.queryParamMap.pipe(take(1), map(params => params.get('name') || ''));
        this.payee$ = this.initializePayee();
    }
    onFormSubmitted(payee) {
        this.stateService.setElectronicPayee(payee);
        this.id$.subscribe(id => this.router.navigateToElectronicPayeeReview(id, { queryParamsHandling: 'preserve' }));
    }
    onBackToSearch() {
        this.isFindPayeeModal = true;
        this.router.navigateToSearch();
    }
    onFormCanceled() {
        this.router.navigateToPayeeList();
    }
    initializePayee() {
        const payee$ = combineLatest([this.zipRequired$, this.name$]).pipe(map(([zipRequired, name]) => (Object.assign({ name, accountNumber: '', nickName: '' }, (zipRequired && { merchantZipCode: '' })))));
        return this.payeeState$.pipe(switchMap(state => (state ? of(state) : payee$)));
    }
}
BillpayCreateElectronicPayeeViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayCreateElectronicPayeeViewComponent, deps: [{ token: i1.ActivatedRoute }, { token: i2.BillpayManagePayeeStateService }, { token: i3.BillpayDiscardChangesModalService }, { token: i4.ManagePayeesNavigationService }], target: i0.ɵɵFactoryTarget.Component });
BillpayCreateElectronicPayeeViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayCreateElectronicPayeeViewComponent, selector: "ng-component", providers: [BillpayDiscardChangesModalService], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"payee$ | async as payee\">\n  <bb-billpay-electronic-payee-form\n    [payee]=\"payee\"\n    [zipCodeRequired]=\"zipRequired$ | async\"\n    (formSubmitted)=\"onFormSubmitted($event)\"\n    (formCanceled)=\"onFormCanceled()\"\n    (backToSearch)=\"onBackToSearch()\"\n    (valueChanged)=\"onFormValueChanged()\"\n  >\n  </bb-billpay-electronic-payee-form>\n\n  <bb-billpay-cancel-new-payee-modal\n    *ngIf=\"isDiscardModalOpen\"\n    [findPayee]=\"isFindPayeeModal\"\n    (resolve)=\"onModalResolve($event)\"\n  ></bb-billpay-cancel-new-payee-modal>\n</ng-container>\n", components: [{ type: i5.BillpayElectronicPayeeFormComponent, selector: "bb-billpay-electronic-payee-form", inputs: ["payee", "zipCodeRequired", "backButtonShown"], outputs: ["formSubmitted", "formCanceled", "backToSearch", "valueChanged"] }, { type: i6.BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: ["findPayee"], outputs: ["resolve"] }], directives: [{ type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i7.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayCreateElectronicPayeeViewComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './billpay-create-electronic-payee-view.component.html',
                    providers: [BillpayDiscardChangesModalService],
                }]
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.BillpayManagePayeeStateService }, { type: i3.BillpayDiscardChangesModalService }, { type: i4.ManagePayeesNavigationService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBheWVlcy1qb3VybmV5L3NyYy92aWV3cy9iaWxscGF5LWNyZWF0ZS1lbGVjdHJvbmljLXBheWVlL2JpbGxwYXktY3JlYXRlLWVsZWN0cm9uaWMtcGF5ZWUtdmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wYXllZXMtam91cm5leS9zcmMvdmlld3MvYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS9iaWxscGF5LWNyZWF0ZS1lbGVjdHJvbmljLXBheWVlLXZpZXcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsYUFBYSxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNyRCxPQUFPLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUt0RCxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNoRyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7Ozs7Ozs7O0FBTXRGLE1BQU0sT0FBTyx5Q0FBMEMsU0FBUSxnQ0FBZ0M7SUFLN0YsZ0JBQWdCO0lBQ2hCLFlBQ0UsS0FBcUIsRUFDckIsWUFBNEMsRUFDNUMsbUJBQXNELEVBQ3JDLE1BQXFDO1FBRXRELEtBQUssQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixDQUFDLENBQUM7UUFGL0IsV0FBTSxHQUFOLE1BQU0sQ0FBK0I7UUFJdEQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQy9DLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQ3hDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUNwRSxDQUFDO1FBQ0YsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQ3hDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUN4QyxDQUFDO1FBQ0YsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVELGVBQWUsQ0FBQyxLQUEwQjtRQUN4QyxJQUFJLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQywrQkFBK0IsQ0FBQyxFQUFFLEVBQUUsRUFBRSxtQkFBbUIsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDakgsQ0FBQztJQUVELGNBQWM7UUFDWixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQzdCLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBRU8sZUFBZTtRQUNyQixNQUFNLE1BQU0sR0FBRyxhQUFhLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDaEUsR0FBRyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLGlCQUMzQixJQUFJLEVBQ0osYUFBYSxFQUFFLEVBQUUsRUFDakIsUUFBUSxFQUFFLEVBQUUsSUFDVCxDQUFDLFdBQVcsSUFBSSxFQUFFLGVBQWUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUMzQyxDQUFDLENBQ0osQ0FBQztRQUVGLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7O3VJQW5EVSx5Q0FBeUM7MkhBQXpDLHlDQUF5Qyx1Q0FGekMsQ0FBQyxpQ0FBaUMsQ0FBQyxpRENiaEQsZ2xCQWlCQTs0RkRGYSx5Q0FBeUM7a0JBSnJELFNBQVM7bUJBQUM7b0JBQ1QsV0FBVyxFQUFFLHVEQUF1RDtvQkFDcEUsU0FBUyxFQUFFLENBQUMsaUNBQWlDLENBQUM7aUJBQy9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBjb21iaW5lTGF0ZXN0LCBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwLCBzd2l0Y2hNYXAsIHRha2UgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7IEJpbGxwYXlNYW5hZ2VQYXllZVN0YXRlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2JpbGxwYXktbWFuYWdlLXBheWVlLXN0YXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgTWFuYWdlUGF5ZWVzTmF2aWdhdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tYW5hZ2UtcGF5ZWVzLW5hdmlnYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBFbGVjdHJvbmljUGF5ZWVGb3JtIH0gZnJvbSAnLi4vLi4vbW9kZWwnO1xuaW1wb3J0IHsgQmFzZUVsZWN0cm9uaWNQYXllZVBhZ2VEaXJlY3RpdmUgfSBmcm9tICcuLi8uLi9tb2RlbC9iYXNlLWVsZWN0cm9uaWMtcGF5ZWUtcGFnZS5tb2RlbCc7XG5pbXBvcnQgeyBCaWxscGF5RGlzY2FyZENoYW5nZXNNb2RhbFNlcnZpY2UgfSBmcm9tICdAYmFja2Jhc2UvYmlsbHBheS1qb3VybmV5cy1jb21tb24nO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGVVcmw6ICcuL2JpbGxwYXktY3JlYXRlLWVsZWN0cm9uaWMtcGF5ZWUtdmlldy5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW0JpbGxwYXlEaXNjYXJkQ2hhbmdlc01vZGFsU2VydmljZV0sXG59KVxuZXhwb3J0IGNsYXNzIEJpbGxwYXlDcmVhdGVFbGVjdHJvbmljUGF5ZWVWaWV3Q29tcG9uZW50IGV4dGVuZHMgQmFzZUVsZWN0cm9uaWNQYXllZVBhZ2VEaXJlY3RpdmUge1xuICByZWFkb25seSBwYXllZSQ6IE9ic2VydmFibGU8RWxlY3Ryb25pY1BheWVlRm9ybT47XG4gIHJlYWRvbmx5IHppcFJlcXVpcmVkJDogT2JzZXJ2YWJsZTxib29sZWFuPjtcbiAgcHJpdmF0ZSByZWFkb25seSBuYW1lJDogT2JzZXJ2YWJsZTxzdHJpbmc+O1xuXG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgIHN0YXRlU2VydmljZTogQmlsbHBheU1hbmFnZVBheWVlU3RhdGVTZXJ2aWNlLFxuICAgIGRpc2NhcmRNb2RhbFNlcnZpY2U6IEJpbGxwYXlEaXNjYXJkQ2hhbmdlc01vZGFsU2VydmljZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJvdXRlcjogTWFuYWdlUGF5ZWVzTmF2aWdhdGlvblNlcnZpY2UsXG4gICkge1xuICAgIHN1cGVyKHJvdXRlLCBzdGF0ZVNlcnZpY2UsIGRpc2NhcmRNb2RhbFNlcnZpY2UpO1xuXG4gICAgdGhpcy56aXBSZXF1aXJlZCQgPSB0aGlzLnJvdXRlLnF1ZXJ5UGFyYW1NYXAucGlwZShcbiAgICAgIHRha2UoMSksXG4gICAgICBtYXAocGFyYW1zID0+IHBhcmFtcy5nZXQoJ3ppcFJlcXVpcmVkJykpLFxuICAgICAgbWFwKHppcFJlcXVpcmVkID0+ICh6aXBSZXF1aXJlZCA/IEpTT04ucGFyc2UoemlwUmVxdWlyZWQpIDogZmFsc2UpKSxcbiAgICApO1xuICAgIHRoaXMubmFtZSQgPSB0aGlzLnJvdXRlLnF1ZXJ5UGFyYW1NYXAucGlwZShcbiAgICAgIHRha2UoMSksXG4gICAgICBtYXAocGFyYW1zID0+IHBhcmFtcy5nZXQoJ25hbWUnKSB8fCAnJyksXG4gICAgKTtcbiAgICB0aGlzLnBheWVlJCA9IHRoaXMuaW5pdGlhbGl6ZVBheWVlKCk7XG4gIH1cblxuICBvbkZvcm1TdWJtaXR0ZWQocGF5ZWU6IEVsZWN0cm9uaWNQYXllZUZvcm0pIHtcbiAgICB0aGlzLnN0YXRlU2VydmljZS5zZXRFbGVjdHJvbmljUGF5ZWUocGF5ZWUpO1xuICAgIHRoaXMuaWQkLnN1YnNjcmliZShpZCA9PiB0aGlzLnJvdXRlci5uYXZpZ2F0ZVRvRWxlY3Ryb25pY1BheWVlUmV2aWV3KGlkLCB7IHF1ZXJ5UGFyYW1zSGFuZGxpbmc6ICdwcmVzZXJ2ZScgfSkpO1xuICB9XG5cbiAgb25CYWNrVG9TZWFyY2goKSB7XG4gICAgdGhpcy5pc0ZpbmRQYXllZU1vZGFsID0gdHJ1ZTtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZVRvU2VhcmNoKCk7XG4gIH1cblxuICBvbkZvcm1DYW5jZWxlZCgpIHtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZVRvUGF5ZWVMaXN0KCk7XG4gIH1cblxuICBwcml2YXRlIGluaXRpYWxpemVQYXllZSgpOiBPYnNlcnZhYmxlPEVsZWN0cm9uaWNQYXllZUZvcm0+IHtcbiAgICBjb25zdCBwYXllZSQgPSBjb21iaW5lTGF0ZXN0KFt0aGlzLnppcFJlcXVpcmVkJCwgdGhpcy5uYW1lJF0pLnBpcGUoXG4gICAgICBtYXAoKFt6aXBSZXF1aXJlZCwgbmFtZV0pID0+ICh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGFjY291bnROdW1iZXI6ICcnLFxuICAgICAgICBuaWNrTmFtZTogJycsXG4gICAgICAgIC4uLih6aXBSZXF1aXJlZCAmJiB7IG1lcmNoYW50WmlwQ29kZTogJycgfSksXG4gICAgICB9KSksXG4gICAgKTtcblxuICAgIHJldHVybiB0aGlzLnBheWVlU3RhdGUkLnBpcGUoc3dpdGNoTWFwKHN0YXRlID0+IChzdGF0ZSA/IG9mKHN0YXRlKSA6IHBheWVlJCkpKTtcbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cInBheWVlJCB8IGFzeW5jIGFzIHBheWVlXCI+XG4gIDxiYi1iaWxscGF5LWVsZWN0cm9uaWMtcGF5ZWUtZm9ybVxuICAgIFtwYXllZV09XCJwYXllZVwiXG4gICAgW3ppcENvZGVSZXF1aXJlZF09XCJ6aXBSZXF1aXJlZCQgfCBhc3luY1wiXG4gICAgKGZvcm1TdWJtaXR0ZWQpPVwib25Gb3JtU3VibWl0dGVkKCRldmVudClcIlxuICAgIChmb3JtQ2FuY2VsZWQpPVwib25Gb3JtQ2FuY2VsZWQoKVwiXG4gICAgKGJhY2tUb1NlYXJjaCk9XCJvbkJhY2tUb1NlYXJjaCgpXCJcbiAgICAodmFsdWVDaGFuZ2VkKT1cIm9uRm9ybVZhbHVlQ2hhbmdlZCgpXCJcbiAgPlxuICA8L2JiLWJpbGxwYXktZWxlY3Ryb25pYy1wYXllZS1mb3JtPlxuXG4gIDxiYi1iaWxscGF5LWNhbmNlbC1uZXctcGF5ZWUtbW9kYWxcbiAgICAqbmdJZj1cImlzRGlzY2FyZE1vZGFsT3BlblwiXG4gICAgW2ZpbmRQYXllZV09XCJpc0ZpbmRQYXllZU1vZGFsXCJcbiAgICAocmVzb2x2ZSk9XCJvbk1vZGFsUmVzb2x2ZSgkZXZlbnQpXCJcbiAgPjwvYmItYmlsbHBheS1jYW5jZWwtbmV3LXBheWVlLW1vZGFsPlxuPC9uZy1jb250YWluZXI+XG4iXX0=