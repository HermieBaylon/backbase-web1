import { Component, ViewChild, HostListener } from '@angular/core';
import { BehaviorSubject, Subject, of } from 'rxjs';
import { filter, switchMap, take, takeUntil, map, tap } from 'rxjs/operators';
import { BillpayDiscardChangesModalService, } from '@backbase/billpay-journeys-common';
import * as i0 from "@angular/core";
import * as i1 from "../../services/manage-payees-journey-config.service";
import * as i2 from "../../services/manage-payees-navigation.service";
import * as i3 from "../../services/billpay-manage-payee-state.service";
import * as i4 from "../../services/billpay-manage-payee-data.service";
import * as i5 from "@backbase/ui-ang/notification";
import * as i6 from "@angular/router";
import * as i7 from "@backbase/billpay-journeys-common";
import * as i8 from "../../components/add-payee/billpay-manual-payee-review/billpay-manual-payee-review.component";
import * as i9 from "../../components/add-payee/billpay-cancel-edit-payee-modal/billpay-cancel-edit-payee-modal.component";
import * as i10 from "@angular/common";
import * as i11 from "@backbase/ui-ang/button";
export class EditManualPayeeReviewViewComponent {
    /** @internal */
    constructor(config, router, stateService, dataService, notificationService, route, discardModalService) {
        this.config = config;
        this.router = router;
        this.stateService = stateService;
        this.dataService = dataService;
        this.notificationService = notificationService;
        this.route = route;
        this.discardModalService = discardModalService;
        this.notificationHeaderTemplate = '';
        this.notificationMessageTemplate = '';
        this.payeeSubmit$ = new BehaviorSubject(undefined);
        this.destroy$ = new Subject();
        this.id$ = this.route.paramMap.pipe(take(1), map(params => params.get('id') || ''));
    }
    ngOnInit() {
        this.stateService.manualPayeeFormState.pipe(take(1)).subscribe(payee => {
            this.payee = payee;
            if (!this.payee) {
                this.navigateToForm();
            }
        });
        this.payeeSubmit$
            .pipe(takeUntil(this.destroy$), filter(Boolean))
            .subscribe(payee => this.onSubmitPayee(payee));
    }
    get isDiscardModalOpen() {
        return this.discardModalService.isDiscardModalOpen;
    }
    get dismissTimeout() {
        if (this.config.notificationDismissTime === undefined) {
            throw new Error('Dismiss timeout value not found');
        }
        return this.config.notificationDismissTime;
    }
    onWindowUnload($event) {
        if (!this.isDiscardModalOpen) {
            $event.returnValue = true;
        }
    }
    openModal() {
        return this.payeeSubmit$.pipe(switchMap(payee => (payee ? of(true) : this.discardModalService.openModal())), tap(isResolved => isResolved && this.stateService.resetManualPayee()));
    }
    onModalResolve(resolvedWith) {
        this.discardModalService.onModalResolve(resolvedWith);
        if (resolvedWith) {
            this.router.navigateToPayeeList();
        }
    }
    submitPayee(payee) {
        this.payeeSubmit$.next(payee);
    }
    navigateBack() {
        this.navigateToForm();
    }
    cancel() {
        this.router.navigateToPayeeList();
    }
    navigateToForm() {
        this.id$.subscribe(id => this.router.navigateToEditManualPayeeForm(id));
    }
    onSubmitPayee(payee) {
        this.id$.pipe(switchMap(id => this.dataService.updateManualPayee(id, payee))).subscribe(() => {
            this.router.navigateToPayeeList();
            this.notificationService.showNotification({
                header: this.notificationHeaderTemplate,
                message: this.notificationMessageTemplate,
                modifier: 'success',
                ttl: this.dismissTimeout,
            });
        }, () => {
            this.notificationService.showNotification({
                header: $localize `:@@billpay.edit-manuel-payee.error-notification.header:Something went wrong`,
                message: $localize `:@@billpay.edit-manuel-payee.error-notification.message:We were unable to proceed. Please try again.`,
                modifier: 'error',
                ttl: this.dismissTimeout,
            });
        });
    }
}
EditManualPayeeReviewViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EditManualPayeeReviewViewComponent, deps: [{ token: i1.ManagePayeesJourneyConfigService }, { token: i2.ManagePayeesNavigationService }, { token: i3.BillpayManagePayeeStateService }, { token: i4.BillpayManagePayeeDataService }, { token: i5.NotificationService }, { token: i6.ActivatedRoute }, { token: i7.BillpayDiscardChangesModalService }], target: i0.ɵɵFactoryTarget.Component });
EditManualPayeeReviewViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EditManualPayeeReviewViewComponent, selector: "ng-component", host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, providers: [BillpayDiscardChangesModalService], viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], ngImport: i0, template: "<div class=\"card card-lg\" *ngIf=\"payee\">\n  <section class=\"card-body\">\n    <bb-billpay-manual-payee-review [payeeFormState]=\"payee\"> </bb-billpay-manual-payee-review>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        data-role=\"save-payee-button\"\n        i18n=\"Label for button|Manual payee continue button@@billpay-edit-manual-payee-review.save-payee\"\n        (click)=\"submitPayee(payee)\"\n        class=\"bb-button-bar__button\"\n      >\n        Confirm payee details\n      </button>\n      <button\n        bbButton\n        data-role=\"back-button\"\n        i18n=\"Label for button|Find a different payee button@@billpay-edit-manual-payee-review.edit-payee\"\n        (click)=\"navigateBack()\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n      >\n        Edit payee details\n      </button>\n      <button\n        bbButton\n        data-role=\"cancel-button\"\n        color=\"link\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        (click)=\"cancel()\"\n        i18n=\"Cancel edit|Label for a button that cancels form changes@@billpay-edit-manual-payee-review.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </section>\n</div>\n<bb-billpay-cancel-edit-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-edit-payee-modal>\n\n<ng-template #notificationMessage>\n  <ng-container>\n    <span\n      data-role=\"notification-message\"\n      i18n=\"Payee notification message|Payee edited notification@@billpay-edit-manual-payee-review.notification.message\"\n      >The payee \u2018{{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }}\u2018 has been changed\n      successfully</span\n    >\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      Payee notification header|Payee edited notification header@@billpay-edit-manual-payee-review.notification.header\"\n    >Payee edited</span\n  >\n</ng-template>\n", components: [{ type: i8.BillpayManualPayeeReviewComponent, selector: "bb-billpay-manual-payee-review", inputs: ["payeeFormState"] }, { type: i9.BillpayCancelEditPayeeModalComponent, selector: "bb-billpay-cancel-edit-payee-modal", outputs: ["resolve"] }], directives: [{ type: i10.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EditManualPayeeReviewViewComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './billpay-edit-manual-payee-review-view.component.html',
                    providers: [BillpayDiscardChangesModalService],
                }]
        }], ctorParameters: function () { return [{ type: i1.ManagePayeesJourneyConfigService }, { type: i2.ManagePayeesNavigationService }, { type: i3.BillpayManagePayeeStateService }, { type: i4.BillpayManagePayeeDataService }, { type: i5.NotificationService }, { type: i6.ActivatedRoute }, { type: i7.BillpayDiscardChangesModalService }]; }, propDecorators: { notificationHeaderTemplate: [{
                type: ViewChild,
                args: ['notificationHeader']
            }], notificationMessageTemplate: [{
                type: ViewChild,
                args: ['notificationMessage']
            }], onWindowUnload: [{
                type: HostListener,
                args: ['window:beforeunload', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,