import { Component, Input, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { PayverisEnrolmentState } from '../../model/payveris-enrolment-state.enum';
import { PayverisEnrolmentComponentState } from '../../model';
import * as i0 from "@angular/core";
import * as i1 from "../../services/billpay-payveris-ebills-enrolment-widget.service";
import * as i2 from "@angular/router";
import * as i3 from "../../services/manage-payees-navigation.service";
import * as i4 from "@backbase/ui-ang/icon";
import * as i5 from "@backbase/ui-ang/header";
import * as i6 from "@backbase/ui-ang/loading-indicator";
import * as i7 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-select-biller/billpay-payveris-ebills-enrolment-select-biller.component";
import * as i8 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-login/billpay-payveris-ebills-enrolment-login.component";
import * as i9 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-mfa-entry/billpay-payveris-ebills-enrolment-mfa-entry.component";
import * as i10 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-otp-select/billpay-payveris-ebills-enrolment-otp-select.component";
import * as i11 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-otp-entry/billpay-payveris-ebills-enrolment-otp-entry.component";
import * as i12 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-captcha/billpay-payveris-ebills-enrolment-captcha.component";
import * as i13 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-select-account/billpay-payveris-ebills-enrolment-select-account.component";
import * as i14 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-error/billpay-payveris-ebills-enrolment-error.component";
import * as i15 from "../../components/payveris-ebills-enrollment/billpay-payveris-ebills-enrolment-notification-success/billpay-payveris-ebills-enrolment-notification-success.component";
import * as i16 from "@backbase/ui-ang/button";
import * as i17 from "@angular/common";
export class EbillsEnrolmentViewComponent {
    /** @internal */
    constructor(payverisEbillsEnrolmentWidgetService, route, ref, routerService) {
        this.payverisEbillsEnrolmentWidgetService = payverisEbillsEnrolmentWidgetService;
        this.route = route;
        this.ref = ref;
        this.routerService = routerService;
        this.EnrolmentStates = PayverisEnrolmentState;
        this.ComponentStates = PayverisEnrolmentComponentState;
        this.destroy$ = new Subject();
        this.payverisEnrolmentSuccessHeaderMessage = '';
        this.payverisEnrolmentSuccessMessage = '';
    }
    ngOnInit() {
        this.payverisEbillsEnrolmentWidgetService.widgetStateChange.pipe(takeUntil(this.destroy$)).subscribe(() => {
            this.ref.detectChanges();
            if (this.currentState === PayverisEnrolmentState.Success) {
                this.goToPayeeList();
            }
        });
        this.payverisEbillsEnrolmentWidgetService.payeeId = this.route.snapshot.params['payeeID'] || undefined;
        if (this.payeeId) {
            this.payeeName = this.payverisEbillsEnrolmentWidgetService.getPayeeNameFromID(this.payeeId);
        }
        this.payverisEbillsEnrolmentWidgetService.onInitializeEnrolment();
    }
    submitPayeeLogin(login) {
        this.payverisEbillsEnrolmentWidgetService.onSubmitPayeeLogin(login);
    }
    submitBiller(billerSelectedIndex) {
        this.payverisEbillsEnrolmentWidgetService.onSubmitBillerSelection(billerSelectedIndex);
    }
    submitMfa() {
        this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillMfa();
    }
    submitOtpTransport(transportSelectedIndex) {
        this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillOtpTransportSelection(transportSelectedIndex);
    }
    submitOtpPasscode(passcode) {
        this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillPayeeOtpPasscode(passcode);
    }
    submitCaptcha(captcha) {
        this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillPayeeCaptcha(captcha);
    }
    submitPayverisEbillAccountSelection(accountSelectedIndex) {
        this.payverisEbillsEnrolmentWidgetService.onSubmitPayverisEbillAccountSelection(accountSelectedIndex);
    }
    goToPayeeList() {
        this.payverisEbillsEnrolmentWidgetService.cancelEnrolment().subscribe();
        this.routerService.navigateToPayeeList({ relativeTo: this.route.parent });
    }
    get payeeId() {
        return this.payverisEbillsEnrolmentWidgetService.payeeId;
    }
    get currentState() {
        return this.payverisEbillsEnrolmentWidgetService.currentState;
    }
    get errorState() {
        return this.payverisEbillsEnrolmentWidgetService.errorState;
    }
    get loginCredentialsArray() {
        return this.payverisEbillsEnrolmentWidgetService.loginCredentialsArray;
    }
    get mfaArray() {
        return this.payverisEbillsEnrolmentWidgetService.mfaArray;
    }
    get componentState() {
        return this.payverisEbillsEnrolmentWidgetService.componentState;
    }
    get userInputFailed() {
        return this.payverisEbillsEnrolmentWidgetService.userInputFailed;
    }
    get otpTransportMethodSelected() {
        return this.payverisEbillsEnrolmentWidgetService.otpTransportMethodSelected;
    }
    get otpTransports() {
        return this.payverisEbillsEnrolmentWidgetService.otpTransports;
    }
    get captchaImageType() {
        return this.payverisEbillsEnrolmentWidgetService.captchaImageType;
    }
    get captchaImageSrc() {
        return this.payverisEbillsEnrolmentWidgetService.captchaImageSrc;
    }
    get accounts() {
        return this.payverisEbillsEnrolmentWidgetService.accounts;
    }
    get billers() {
        return this.payverisEbillsEnrolmentWidgetService.billers;
    }
    ngOnDestroy() {
        this.payverisEbillsEnrolmentWidgetService.cancelCallback();
        this.destroy$.next();
        this.destroy$.complete();
    }
}
EbillsEnrolmentViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EbillsEnrolmentViewComponent, deps: [{ token: i1.BillpayPayverisEbillsEnrolmentWidgetService }, { token: i2.ActivatedRoute }, { token: i0.ChangeDetectorRef }, { token: i3.ManagePayeesNavigationService }], target: i0.ɵɵFactoryTarget.Component });
EbillsEnrolmentViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EbillsEnrolmentViewComponent, selector: "bb-billpay-ebills-enrolment-view", inputs: { dismissTimeoutValue: "dismissTimeoutValue" }, viewQueries: [{ propertyName: "payverisEnrolmentSuccessHeaderMessage", first: true, predicate: ["payverisEnrolmentSuccessHeaderMessage"], descendants: true }, { propertyName: "payverisEnrolmentSuccessMessage", first: true, predicate: ["payverisEnrolmentSuccessMessage"], descendants: true }], ngImport: i0, template: "<div class=\"bb-block bb-block--xl\">\n  <button\n    bbButton\n    class=\"bb-block bb-block--md pl-0\"\n    (click)=\"goToPayeeList()\"\n    data-role=\"payveris-payee-login-return-to-payee-list-link\"\n    color=\"link\"\n  >\n    <bb-icon-ui name=\"arrow-back\" size=\"md\"></bb-icon-ui>\n    <span\n      i18n=\"\n        Back to payee list button|Button on login page for returning to payee list\n        @@bb-billpay-payveris-ebills-enrolment-login.button.back-to-payee-list\"\n      >Back to payee list</span\n    >\n  </button>\n  <bb-header-ui\n    headingType=\"h1\"\n    heading=\"Get eBills for '{{ payeeName | async }}'\"\n    i18n-heading=\"\n      Get ebills for payee|Header on payveris ebill enrolment login form\n      @@bb-billpay-payveris-ebills-enrolment-login.main-header.get-ebills-for-payee\"\n    data-role=\"payveris-payee-login-header\"\n  >\n  </bb-header-ui>\n</div>\n\n<div class=\"card card-lg\">\n  <div class=\"card-body\">\n    <ng-container [ngSwitch]=\"currentState\">\n      <ng-container *ngSwitchCase=\"EnrolmentStates.Initialize\">\n        <ng-container [ngSwitch]=\"componentState\">\n          <bb-loading-indicator-ui\n            *ngSwitchCase=\"ComponentStates.Checking\"\n            loaderSize=\"lg\"\n            text=\"Initializing...\"\n            i18n-text=\"\n              Initializing...|Ebill Payveris Enrolment Widget initializing\n              text@@bb-billpay-ebills-payveris-enrolment-widget-ang.initializing.text\"\n          >\n          </bb-loading-indicator-ui>\n\n          <bb-loading-indicator-ui\n            *ngSwitchCase=\"ComponentStates.Callback\"\n            text=\"eBill enrolment is taking a little longer than usual, please be patient...\"\n            i18n-text=\"\n              eBill enrolment is taking a little longer than usual, please be patient...|Ebill Payveris Enrolment Widget\n              taking longer than usual text@@bb-billpay-ebills-payveris-enrolment-widget-ang.initializing-callback.text\"\n            loaderSize=\"lg\"\n            data-role=\"payveris-callback-info\"\n          ></bb-loading-indicator-ui>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"payeeName | async as name\">\n        <bb-billpay-payveris-ebills-enrolment-select-biller\n          *ngSwitchCase=\"EnrolmentStates.SelectBiller\"\n          [payeeName]=\"name\"\n          [componentState]=\"componentState\"\n          [billers]=\"billers\"\n          (billerSelect)=\"submitBiller($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-select-biller>\n\n        <bb-billpay-payveris-ebills-enrolment-login\n          *ngSwitchCase=\"EnrolmentStates.Login\"\n          [payeeName]=\"name\"\n          [componentState]=\"componentState\"\n          [credentialsFailed]=\"userInputFailed\"\n          [credentialsArray]=\"loginCredentialsArray\"\n          (payeeLogin)=\"submitPayeeLogin($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-login>\n\n        <bb-billpay-payveris-ebills-enrolment-mfa-entry\n          *ngSwitchCase=\"EnrolmentStates.Mfa\"\n          [payeeName]=\"name\"\n          [mfaArray]=\"mfaArray\"\n          [componentState]=\"componentState\"\n          [mfaFailed]=\"userInputFailed\"\n          (mfaEntry)=\"submitMfa()\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-mfa-entry>\n\n        <bb-billpay-payveris-ebills-enrolment-otp-select\n          *ngSwitchCase=\"EnrolmentStates.OtpSelect\"\n          [payeeName]=\"name\"\n          [componentState]=\"componentState\"\n          [transports]=\"otpTransports\"\n          (transportSelect)=\"submitOtpTransport($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-otp-select>\n\n        <bb-billpay-payveris-ebills-enrolment-otp-entry\n          *ngSwitchCase=\"EnrolmentStates.OtpEntry\"\n          [payeeName]=\"name\"\n          [optTransportMethod]=\"otpTransportMethodSelected\"\n          [componentState]=\"componentState\"\n          [passcodeFailed]=\"userInputFailed\"\n          (passcodeEntry)=\"submitOtpPasscode($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-otp-entry>\n\n        <bb-billpay-payveris-ebills-enrolment-captcha\n          *ngSwitchCase=\"EnrolmentStates.Captcha\"\n          [payeeName]=\"name\"\n          [captchaImageType]=\"captchaImageType\"\n          [captchaImageSrc]=\"captchaImageSrc\"\n          [componentState]=\"componentState\"\n          [captchaFailed]=\"userInputFailed\"\n          (captchaEntry)=\"submitCaptcha($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-captcha>\n\n        <bb-billpay-payveris-ebills-enrolment-select-account\n          *ngSwitchCase=\"EnrolmentStates.SelectAccounts\"\n          [payeeName]=\"name\"\n          [componentState]=\"componentState\"\n          [accounts]=\"accounts\"\n          (accountSelect)=\"submitPayverisEbillAccountSelection($event)\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-select-account>\n\n        <bb-billpay-payveris-ebills-enrolment-error\n          *ngSwitchCase=\"EnrolmentStates.ErrorState\"\n          [errorState]=\"errorState\"\n          (returnToPayeeList)=\"goToPayeeList()\"\n        ></bb-billpay-payveris-ebills-enrolment-error>\n\n        <bb-billpay-payveris-ebills-enrolment-notification-success\n          *ngSwitchCase=\"EnrolmentStates.Success\"\n          [ttl]=\"dismissTimeoutValue\"\n          [header]=\"payverisEnrolmentSuccessHeaderMessage\"\n          [message]=\"payverisEnrolmentSuccessMessage2\"\n        ></bb-billpay-payveris-ebills-enrolment-notification-success>\n\n        <ng-template #payverisEnrolmentSuccessMessage2>\n          <span\n            i18n=\"\n              eBills enabled|eBills enabled successfully notification\n              message@@bb-billpay-payveris-ebills-enrolment.notification.successBody\"\n            >eBills for the payee &apos;{{ name }}&apos; have been enabled successfully</span\n          >\n        </ng-template>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n<ng-template #payverisEnrolmentSuccessHeaderMessage>\n  <span\n    i18n=\"\n      eBills enabled|eBills enabled successfully notification\n      header@@bb-billpay-payveris-ebills-enrolment.notification.successHeader\"\n    >eBills enabled</span\n  >\n</ng-template>\n", components: [{ type: i4.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i5.HeaderComponent, selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i6.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i7.BillpayPayverisEbillsEnrolmentSelectBillerComponent, selector: "bb-billpay-payveris-ebills-enrolment-select-biller", inputs: ["payeeName", "billers", "componentState"], outputs: ["billerSelect", "returnToPayeeList"] }, { type: i8.BillpayPayverisEbillsEnrolmentLoginComponent, selector: "bb-billpay-payveris-ebills-enrolment-login", inputs: ["payeeName", "credentialsArray", "componentState", "credentialsFailed"], outputs: ["returnToPayeeList", "payeeLogin"] }, { type: i9.BillpayPayverisEbillsEnrolmentMfaEntryComponent, selector: "bb-billpay-payveris-ebills-enrolment-mfa-entry", inputs: ["payeeName", "mfaArray", "componentState", "mfaFailed"], outputs: ["returnToPayeeList", "mfaEntry"] }, { type: i10.BillpayPayverisEbillsEnrolmentOtpSelectComponent, selector: "bb-billpay-payveris-ebills-enrolment-otp-select", inputs: ["payeeName", "transports", "componentState"], outputs: ["transportSelect", "returnToPayeeList"] }, { type: i11.BillpayPayverisEbillsEnrolmentOtpEntryComponent, selector: "bb-billpay-payveris-ebills-enrolment-otp-entry", inputs: ["payeeName", "optTransportMethod", "componentState", "passcodeFailed"], outputs: ["returnToPayeeList", "passcodeEntry"] }, { type: i12.BillpayPayverisEbillsEnrolmentCaptchaComponent, selector: "bb-billpay-payveris-ebills-enrolment-captcha", inputs: ["payeeName", "captchaImageType", "captchaImageSrc", "componentState", "captchaFailed"], outputs: ["returnToPayeeList", "captchaEntry"] }, { type: i13.BillpayPayverisEbillsEnrolmentSelectAccountComponent, selector: "bb-billpay-payveris-ebills-enrolment-select-account", inputs: ["payeeName", "accounts", "componentState"], outputs: ["accountSelect", "returnToPayeeList"] }, { type: i14.BillpayPayverisEbillsEnrolmentErrorComponent, selector: "bb-billpay-payveris-ebills-enrolment-error", inputs: ["errorState"], outputs: ["returnToPayeeList"] }, { type: i15.BillpayPayverisEbillsEnrolmentNotificationSuccessComponent, selector: "bb-billpay-payveris-ebills-enrolment-notification-success", inputs: ["ttl", "header", "message"] }], directives: [{ type: i16.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i17.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i17.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i17.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i17.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EbillsEnrolmentViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-billpay-ebills-enrolment-view',
                    templateUrl: './billpay-ebills-enrolment-view.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.BillpayPayverisEbillsEnrolmentWidgetService }, { type: i2.ActivatedRoute }, { type: i0.ChangeDetectorRef }, { type: i3.ManagePayeesNavigationService }]; }, propDecorators: { dismissTimeoutValue: [{
                type: Input
            }], payverisEnrolmentSuccessHeaderMessage: [{
                type: ViewChild,
                args: ['payverisEnrolmentSuccessHeaderMessage']
            }], payverisEnrolmentSuccessMessage: [{
                type: ViewChild,
                args: ['payverisEnrolmentSuccessMessage']
            }] } });
//# sourceMappingURL=data:application/json;base64,