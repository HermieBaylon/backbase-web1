import { Component, HostListener } from '@angular/core';
import { of } from 'rxjs';
import { BillpayDiscardChangesModalService, } from '@backbase/billpay-journeys-common';
import * as i0 from "@angular/core";
import * as i1 from "../../services/billpay-manage-payee-state.service";
import * as i2 from "../../services/manage-payees-navigation.service";
import * as i3 from "@backbase/billpay-journeys-common";
import * as i4 from "../../components/add-payee/billpay-manual-payee-form/billpay-manual-payee-form.component";
import * as i5 from "../../components/add-payee/billpay-cancel-new-payee-modal/billpay-cancel-new-payee-modal.component";
import * as i6 from "@angular/common";
export class BillpayCreateManualPayeeViewComponent {
    /** @internal */
    constructor(stateService, router, discardModalService) {
        this.stateService = stateService;
        this.router = router;
        this.discardModalService = discardModalService;
        this.payeeFormState = this.stateService.manualPayeeFormState;
        this.isFormTouched = false;
        this.isFindPayeeModal = false;
    }
    get isDiscardModalOpen() {
        return this.discardModalService.isDiscardModalOpen;
    }
    onWindowUnload($event) {
        if ((this.isFormTouched || this.stateService.isFormProcessing) && !this.isDiscardModalOpen) {
            $event.returnValue = true;
        }
    }
    onFormSubmitted(payee) {
        this.stateService.isFormProcessing = true;
        this.stateService.setManualPayee(payee);
        this.router.navigateToManualPayeeReview();
    }
    onBackToSearch() {
        this.isFindPayeeModal = true;
        this.router.navigateToSearch();
    }
    onFormCanceled() {
        this.router.navigateToPayeeList();
    }
    onFormValueChanged() {
        this.isFormTouched = true;
    }
    openModal() {
        return this.isFormTouched || this.stateService.isFormProcessing ? this.discardModalService.openModal() : of(true);
    }
    onModalResolve(resolvedWith) {
        if (resolvedWith)
            this.stateService.resetManualPayee();
        this.isFindPayeeModal = false;
        this.discardModalService.onModalResolve(resolvedWith);
    }
}
BillpayCreateManualPayeeViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayCreateManualPayeeViewComponent, deps: [{ token: i1.BillpayManagePayeeStateService }, { token: i2.ManagePayeesNavigationService }, { token: i3.BillpayDiscardChangesModalService }], target: i0.ɵɵFactoryTarget.Component });
BillpayCreateManualPayeeViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayCreateManualPayeeViewComponent, selector: "ng-component", host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, providers: [BillpayDiscardChangesModalService], ngImport: i0, template: "<bb-billpay-manual-payee-form\n  [payeeFormState]=\"payeeFormState | async\"\n  (formSubmitted)=\"onFormSubmitted($event)\"\n  (formCanceled)=\"onFormCanceled()\"\n  (backToSearch)=\"onBackToSearch()\"\n  (valueChanged)=\"onFormValueChanged()\"\n>\n</bb-billpay-manual-payee-form>\n<bb-billpay-cancel-new-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  [findPayee]=\"isFindPayeeModal\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-new-payee-modal>\n", components: [{ type: i4.BillpayManualPayeeFormComponent, selector: "bb-billpay-manual-payee-form", inputs: ["payeeFormState", "editForm"], outputs: ["formSubmitted", "formCanceled", "backToSearch", "valueChanged"] }, { type: i5.BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: ["findPayee"], outputs: ["resolve"] }], directives: [{ type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i6.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayCreateManualPayeeViewComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './billpay-create-manual-payee-view.component.html',
                    providers: [BillpayDiscardChangesModalService],
                }]
        }], ctorParameters: function () { return [{ type: i1.BillpayManagePayeeStateService }, { type: i2.ManagePayeesNavigationService }, { type: i3.BillpayDiscardChangesModalService }]; }, propDecorators: { onWindowUnload: [{
                type: HostListener,
                args: ['window:beforeunload', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1jcmVhdGUtbWFudWFsLXBheWVlLXZpZXcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9tYW5hZ2UtcGF5ZWVzLWpvdXJuZXkvc3JjL3ZpZXdzL2JpbGxwYXktY3JlYXRlLW1hbnVhbC1wYXllZS9iaWxscGF5LWNyZWF0ZS1tYW51YWwtcGF5ZWUtdmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wYXllZXMtam91cm5leS9zcmMvdmlld3MvYmlsbHBheS1jcmVhdGUtbWFudWFsLXBheWVlL2JpbGxwYXktY3JlYXRlLW1hbnVhbC1wYXllZS12aWV3LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3hELE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFHdEMsT0FBTyxFQUVMLGlDQUFpQyxHQUNsQyxNQUFNLG1DQUFtQyxDQUFDOzs7Ozs7OztBQU0zQyxNQUFNLE9BQU8scUNBQXFDO0lBS2hELGdCQUFnQjtJQUNoQixZQUNtQixZQUE0QyxFQUM1QyxNQUFxQyxFQUNyQyxtQkFBc0Q7UUFGdEQsaUJBQVksR0FBWixZQUFZLENBQWdDO1FBQzVDLFdBQU0sR0FBTixNQUFNLENBQStCO1FBQ3JDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBbUM7UUFSaEUsbUJBQWMsR0FBaUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQztRQUN2RyxrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUM5QixxQkFBZ0IsR0FBRyxLQUFLLENBQUM7SUFPdEIsQ0FBQztJQUVKLElBQUksa0JBQWtCO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLGtCQUFrQixDQUFDO0lBQ3JELENBQUM7SUFHRCxjQUFjLENBQUMsTUFBeUI7UUFDdEMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQzFGLE1BQU0sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQUVELGVBQWUsQ0FBQyxLQUEyQjtRQUN6QyxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztRQUMxQyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN4QyxJQUFJLENBQUMsTUFBTSxDQUFDLDJCQUEyQixFQUFFLENBQUM7SUFDNUMsQ0FBQztJQUVELGNBQWM7UUFDWixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQzdCLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBRUQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO0lBQzVCLENBQUM7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BILENBQUM7SUFFRCxjQUFjLENBQUMsWUFBcUI7UUFDbEMsSUFBSSxZQUFZO1lBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFDOUIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN4RCxDQUFDOzttSUFsRFUscUNBQXFDO3VIQUFyQyxxQ0FBcUMsaUhBRnJDLENBQUMsaUNBQWlDLENBQUMsMEJDYmhELG1kQWFBOzRGREVhLHFDQUFxQztrQkFKakQsU0FBUzttQkFBQztvQkFDVCxXQUFXLEVBQUUsbURBQW1EO29CQUNoRSxTQUFTLEVBQUUsQ0FBQyxpQ0FBaUMsQ0FBQztpQkFDL0M7aU5Ba0JDLGNBQWM7c0JBRGIsWUFBWTt1QkFBQyxxQkFBcUIsRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdExpc3RlbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE1hbnVhbFBheWVlRm9ybVN0YXRlIH0gZnJvbSAnLi4vLi4vbW9kZWwnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IE1hbmFnZVBheWVlc05hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbWFuYWdlLXBheWVlcy1uYXZpZ2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmlsbHBheU1hbmFnZVBheWVlU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvYmlsbHBheS1tYW5hZ2UtcGF5ZWUtc3RhdGUuc2VydmljZSc7XG5pbXBvcnQge1xuICBCaWxscGF5RGlzY2FyZENoYW5nZXNGb3JtQ29tcG9uZW50LFxuICBCaWxscGF5RGlzY2FyZENoYW5nZXNNb2RhbFNlcnZpY2UsXG59IGZyb20gJ0BiYWNrYmFzZS9iaWxscGF5LWpvdXJuZXlzLWNvbW1vbic7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZVVybDogJy4vYmlsbHBheS1jcmVhdGUtbWFudWFsLXBheWVlLXZpZXcuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtCaWxscGF5RGlzY2FyZENoYW5nZXNNb2RhbFNlcnZpY2VdLFxufSlcbmV4cG9ydCBjbGFzcyBCaWxscGF5Q3JlYXRlTWFudWFsUGF5ZWVWaWV3Q29tcG9uZW50IGltcGxlbWVudHMgQmlsbHBheURpc2NhcmRDaGFuZ2VzRm9ybUNvbXBvbmVudCB7XG4gIHJlYWRvbmx5IHBheWVlRm9ybVN0YXRlOiBPYnNlcnZhYmxlPE1hbnVhbFBheWVlRm9ybVN0YXRlIHwgdW5kZWZpbmVkPiA9IHRoaXMuc3RhdGVTZXJ2aWNlLm1hbnVhbFBheWVlRm9ybVN0YXRlO1xuICBwcml2YXRlIGlzRm9ybVRvdWNoZWQgPSBmYWxzZTtcbiAgaXNGaW5kUGF5ZWVNb2RhbCA9IGZhbHNlO1xuXG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByZWFkb25seSBzdGF0ZVNlcnZpY2U6IEJpbGxwYXlNYW5hZ2VQYXllZVN0YXRlU2VydmljZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJvdXRlcjogTWFuYWdlUGF5ZWVzTmF2aWdhdGlvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZWFkb25seSBkaXNjYXJkTW9kYWxTZXJ2aWNlOiBCaWxscGF5RGlzY2FyZENoYW5nZXNNb2RhbFNlcnZpY2UsXG4gICkge31cblxuICBnZXQgaXNEaXNjYXJkTW9kYWxPcGVuKCkge1xuICAgIHJldHVybiB0aGlzLmRpc2NhcmRNb2RhbFNlcnZpY2UuaXNEaXNjYXJkTW9kYWxPcGVuO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignd2luZG93OmJlZm9yZXVubG9hZCcsIFsnJGV2ZW50J10pXG4gIG9uV2luZG93VW5sb2FkKCRldmVudDogQmVmb3JlVW5sb2FkRXZlbnQpIHtcbiAgICBpZiAoKHRoaXMuaXNGb3JtVG91Y2hlZCB8fCB0aGlzLnN0YXRlU2VydmljZS5pc0Zvcm1Qcm9jZXNzaW5nKSAmJiAhdGhpcy5pc0Rpc2NhcmRNb2RhbE9wZW4pIHtcbiAgICAgICRldmVudC5yZXR1cm5WYWx1ZSA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgb25Gb3JtU3VibWl0dGVkKHBheWVlOiBNYW51YWxQYXllZUZvcm1TdGF0ZSkge1xuICAgIHRoaXMuc3RhdGVTZXJ2aWNlLmlzRm9ybVByb2Nlc3NpbmcgPSB0cnVlO1xuICAgIHRoaXMuc3RhdGVTZXJ2aWNlLnNldE1hbnVhbFBheWVlKHBheWVlKTtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZVRvTWFudWFsUGF5ZWVSZXZpZXcoKTtcbiAgfVxuXG4gIG9uQmFja1RvU2VhcmNoKCkge1xuICAgIHRoaXMuaXNGaW5kUGF5ZWVNb2RhbCA9IHRydWU7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVUb1NlYXJjaCgpO1xuICB9XG5cbiAgb25Gb3JtQ2FuY2VsZWQoKSB7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVUb1BheWVlTGlzdCgpO1xuICB9XG5cbiAgb25Gb3JtVmFsdWVDaGFuZ2VkKCkge1xuICAgIHRoaXMuaXNGb3JtVG91Y2hlZCA9IHRydWU7XG4gIH1cblxuICBvcGVuTW9kYWwoKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIHRoaXMuaXNGb3JtVG91Y2hlZCB8fCB0aGlzLnN0YXRlU2VydmljZS5pc0Zvcm1Qcm9jZXNzaW5nID8gdGhpcy5kaXNjYXJkTW9kYWxTZXJ2aWNlLm9wZW5Nb2RhbCgpIDogb2YodHJ1ZSk7XG4gIH1cblxuICBvbk1vZGFsUmVzb2x2ZShyZXNvbHZlZFdpdGg6IGJvb2xlYW4pIHtcbiAgICBpZiAocmVzb2x2ZWRXaXRoKSB0aGlzLnN0YXRlU2VydmljZS5yZXNldE1hbnVhbFBheWVlKCk7XG4gICAgdGhpcy5pc0ZpbmRQYXllZU1vZGFsID0gZmFsc2U7XG4gICAgdGhpcy5kaXNjYXJkTW9kYWxTZXJ2aWNlLm9uTW9kYWxSZXNvbHZlKHJlc29sdmVkV2l0aCk7XG4gIH1cbn1cbiIsIjxiYi1iaWxscGF5LW1hbnVhbC1wYXllZS1mb3JtXG4gIFtwYXllZUZvcm1TdGF0ZV09XCJwYXllZUZvcm1TdGF0ZSB8IGFzeW5jXCJcbiAgKGZvcm1TdWJtaXR0ZWQpPVwib25Gb3JtU3VibWl0dGVkKCRldmVudClcIlxuICAoZm9ybUNhbmNlbGVkKT1cIm9uRm9ybUNhbmNlbGVkKClcIlxuICAoYmFja1RvU2VhcmNoKT1cIm9uQmFja1RvU2VhcmNoKClcIlxuICAodmFsdWVDaGFuZ2VkKT1cIm9uRm9ybVZhbHVlQ2hhbmdlZCgpXCJcbj5cbjwvYmItYmlsbHBheS1tYW51YWwtcGF5ZWUtZm9ybT5cbjxiYi1iaWxscGF5LWNhbmNlbC1uZXctcGF5ZWUtbW9kYWxcbiAgKm5nSWY9XCJpc0Rpc2NhcmRNb2RhbE9wZW5cIlxuICBbZmluZFBheWVlXT1cImlzRmluZFBheWVlTW9kYWxcIlxuICAocmVzb2x2ZSk9XCJvbk1vZGFsUmVzb2x2ZSgkZXZlbnQpXCJcbj48L2JiLWJpbGxwYXktY2FuY2VsLW5ldy1wYXllZS1tb2RhbD5cbiJdfQ==