import { Component, ViewChild } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { switchMap } from 'rxjs/operators';
import { BillpayDiscardChangesModalService } from '@backbase/billpay-journeys-common';
import { BaseElectronicPayeeReviewPageModelDirective } from '../../directives/base-electronic-payee-review-page.model';
import * as i0 from "@angular/core";
import * as i1 from "../../services/manage-payees-journey-config.service";
import * as i2 from "@angular/router";
import * as i3 from "../../services/billpay-manage-payee-state.service";
import * as i4 from "@backbase/billpay-journeys-common";
import * as i5 from "../../services/manage-payees-navigation.service";
import * as i6 from "../../services/billpay-manage-payee-data.service";
import * as i7 from "@backbase/ui-ang/notification";
import * as i8 from "../../components/add-payee/billpay-electronic-payee-review/billpay-electronic-payee-review.component";
import * as i9 from "../../components/add-payee/billpay-cancel-edit-payee-modal/billpay-cancel-edit-payee-modal.component";
import * as i10 from "@angular/common";
import * as i11 from "@backbase/ui-ang/button";
export class EditElectronicPayeeReviewViewComponent extends BaseElectronicPayeeReviewPageModelDirective {
    /** @internal */
    constructor(config, route, stateService, discardModalService, router, dataService, notificationService) {
        super(route, stateService, discardModalService, config);
        this.config = config;
        this.router = router;
        this.dataService = dataService;
        this.notificationService = notificationService;
        this.notificationHeaderTemplate = '';
        this.notificationMessageTemplate = '';
        this.payeeSubmit$ = new BehaviorSubject(undefined);
    }
    submitPayee(payee) {
        this.payeeSubmit$.next(payee);
    }
    navigateBack(id) {
        this.router.navigateToEditElectronicPayeeForm(id);
    }
    onSubmitPayee(payee) {
        this.id$.pipe(switchMap(id => this.dataService.updateElectronicPayee(id, payee))).subscribe(() => {
            this.router.navigateToPayeeList();
            this.notificationService.showNotification({
                header: this.notificationHeaderTemplate,
                message: this.notificationMessageTemplate,
                modifier: 'success',
                ttl: this.dismissTimeout,
            });
        }, () => {
            this.notificationService.showNotification({
                header: $localize `:@@billpay.edit-e-payee.error-notification.header:Something went wrong`,
                message: $localize `:@@billpay.edit-e-payee.error-notification.message:We were unable to proceed. Please try again.`,
                modifier: 'error',
                ttl: this.dismissTimeout,
            });
        });
    }
    cancel() {
        this.router.navigateToPayeeList();
    }
}
EditElectronicPayeeReviewViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EditElectronicPayeeReviewViewComponent, deps: [{ token: i1.ManagePayeesJourneyConfigService }, { token: i2.ActivatedRoute }, { token: i3.BillpayManagePayeeStateService }, { token: i4.BillpayDiscardChangesModalService }, { token: i5.ManagePayeesNavigationService }, { token: i6.BillpayManagePayeeDataService }, { token: i7.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
EditElectronicPayeeReviewViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: EditElectronicPayeeReviewViewComponent, selector: "ng-component", providers: [BillpayDiscardChangesModalService], viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"card card-lg\" *ngIf=\"payee$ | async as payee\">\n  <section class=\"card-body\">\n    <bb-billpay-electronic-payee-review [payee]=\"payee\"> </bb-billpay-electronic-payee-review>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        data-role=\"add-payee-button\"\n        i18n=\"Label for button|Electronic payee confirm edit button@@billpay-edit-electronic-payee-review.confirm-payee\"\n        (click)=\"submitPayee(payee)\"\n        class=\"bb-button-bar__button\"\n      >\n        Confirm payee details\n      </button>\n      <button\n        *ngIf=\"id$ | async as id\"\n        bbButton\n        data-role=\"back-button\"\n        i18n=\"Label for button|Edit payee details button@@billpay-edit-electronic-payee-review.edit-payee\"\n        (click)=\"navigateBack(id)\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n      >\n        Edit payee details\n      </button>\n      <button\n        bbButton\n        data-role=\"cancel-button\"\n        color=\"link\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        (click)=\"cancel()\"\n        i18n=\"Cancel edit|Label for a button that cancels form changes@@billpay-edit-electronic-payee-review.cancel\"\n      >\n        Cancel\n      </button>\n    </div>\n  </section>\n  \n  <ng-template #notificationMessage>\n    <span\n      data-role=\"notification-message\"\n      i18n=\"\n        Payee notification message|Payee has been changed successfully\n        notification@@billpay-edit-electronic-payee-review.notification.message\"\n      >The payee \u2018{{ payee.nickName ? payee.nickName + ' (' + payee.name + ')' : payee.name }}\u2018 has been changed\n      successfully\n    </span>\n  </ng-template>\n</div>\n\n<bb-billpay-cancel-edit-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-edit-payee-modal>\n\n\n<ng-template #notificationHeader>\n  <span\n    class=\"text-dark\"\n    i18n=\"\n      Payee notification header|Payee edited success notification\n      header@@billpay-edit-electronic-payee-review.notification.header\"\n    >Payee edited</span\n  >\n</ng-template>\n", components: [{ type: i8.BillpayElectronicPayeeReviewComponent, selector: "bb-billpay-electronic-payee-review", inputs: ["payee"] }, { type: i9.BillpayCancelEditPayeeModalComponent, selector: "bb-billpay-cancel-edit-payee-modal", outputs: ["resolve"] }], directives: [{ type: i10.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i10.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: EditElectronicPayeeReviewViewComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './billpay-edit-electronic-payee-review-view.component.html',
                    providers: [BillpayDiscardChangesModalService],
                }]
        }], ctorParameters: function () { return [{ type: i1.ManagePayeesJourneyConfigService }, { type: i2.ActivatedRoute }, { type: i3.BillpayManagePayeeStateService }, { type: i4.BillpayDiscardChangesModalService }, { type: i5.ManagePayeesNavigationService }, { type: i6.BillpayManagePayeeDataService }, { type: i7.NotificationService }]; }, propDecorators: { notificationHeaderTemplate: [{
                type: ViewChild,
                args: ['notificationHeader']
            }], notificationMessageTemplate: [{
                type: ViewChild,
                args: ['notificationMessage']
            }] } });
//# sourceMappingURL=data:application/json;base64,