import { Component, HostListener, ViewChild } from '@angular/core';
import { filter, switchMap, take, takeUntil, tap } from 'rxjs/operators';
import { BehaviorSubject, of, Subject } from 'rxjs';
import { BillpayDiscardChangesModalService, } from '@backbase/billpay-journeys-common';
import * as i0 from "@angular/core";
import * as i1 from "../../services/manage-payees-journey-config.service";
import * as i2 from "../../services/manage-payees-navigation.service";
import * as i3 from "../../services/billpay-manage-payee-state.service";
import * as i4 from "../../services/billpay-manage-payee-data.service";
import * as i5 from "@backbase/ui-ang/notification";
import * as i6 from "@backbase/billpay-journeys-common";
import * as i7 from "../../components/add-payee/billpay-manual-payee-review/billpay-manual-payee-review.component";
import * as i8 from "../../components/add-payee/billpay-cancel-new-payee-modal/billpay-cancel-new-payee-modal.component";
import * as i9 from "@angular/common";
import * as i10 from "@backbase/ui-ang/button";
export class CreateManualPayeeReviewViewComponent {
    /** @internal */
    constructor(config, router, stateService, dataService, notificationService, discardModalService, billpayNotificationRoutingService) {
        this.config = config;
        this.router = router;
        this.stateService = stateService;
        this.dataService = dataService;
        this.notificationService = notificationService;
        this.discardModalService = discardModalService;
        this.billpayNotificationRoutingService = billpayNotificationRoutingService;
        this.notificationHeaderTemplate = '';
        this.notificationMessageTemplate = '';
        this.payeeSubmit$ = new BehaviorSubject(undefined);
        this.destroy$ = new Subject();
    }
    get isDiscardModalOpen() {
        return this.discardModalService.isDiscardModalOpen;
    }
    ngOnInit() {
        this.stateService.manualPayeeFormState.pipe(take(1)).subscribe(payee => {
            this.payee = payee;
            if (!this.payee) {
                this.router.navigateToManualPayeeForm();
            }
        });
        this.payeeSubmit$
            .pipe(takeUntil(this.destroy$), filter(Boolean))
            .subscribe(payee => this.onSubmitPayee(payee));
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    onWindowUnload($event) {
        if (!this.isDiscardModalOpen) {
            $event.returnValue = true;
        }
    }
    submitPayee(payee) {
        this.payeeSubmit$.next(payee);
    }
    navigateBack() {
        this.router.navigateToManualPayeeForm();
    }
    cancel() {
        this.router.navigateToPayeeList();
    }
    navigateToPayee() {
        this.billpayNotificationRoutingService.navigateToPayees();
    }
    openModal() {
        return this.payeeSubmit$.pipe(switchMap(payee => (payee ? of(true) : this.discardModalService.openModal())), tap(isResolved => isResolved && this.stateService.resetManualPayee()));
    }
    onModalResolve(resolvedWith) {
        this.discardModalService.onModalResolve(resolvedWith);
    }
    onSubmitPayee(payee) {
        this.dataService.addManualPayee(payee).subscribe(() => {
            this.router.navigateToPayeeList();
            this.notificationService.showNotification({
                header: this.notificationHeaderTemplate,
                message: this.notificationMessageTemplate,
                modifier: 'success',
                ttl: this.dismissTimeout,
            });
        }, () => this.notificationService.showNotification({
            header: $localize `:@@billpay.create-manuel-payee.error-notification.header:Something went wrong`,
            message: $localize `:@@billpay.create-manuel-payee.error-notification.header:We were unable to proceed. Please try again.`,
            modifier: 'error',
            ttl: this.dismissTimeout,
        }));
    }
    get dismissTimeout() {
        if (this.config.notificationDismissTime === undefined) {
            throw new Error('Dismiss timeout value not found');
        }
        return this.config.notificationDismissTime;
    }
}
CreateManualPayeeReviewViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CreateManualPayeeReviewViewComponent, deps: [{ token: i1.ManagePayeesJourneyConfigService }, { token: i2.ManagePayeesNavigationService }, { token: i3.BillpayManagePayeeStateService }, { token: i4.BillpayManagePayeeDataService }, { token: i5.NotificationService }, { token: i6.BillpayDiscardChangesModalService }, { token: i6.BillpayNotificationRoutingService }], target: i0.ɵɵFactoryTarget.Component });
CreateManualPayeeReviewViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CreateManualPayeeReviewViewComponent, selector: "ng-component", host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, providers: [BillpayDiscardChangesModalService], viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], ngImport: i0, template: "<div class=\"card card-lg\" *ngIf=\"payee\">\n  <section class=\"card-body\">\n    <bb-billpay-manual-payee-review [payeeFormState]=\"payee\"> </bb-billpay-manual-payee-review>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <button\n        bbButton\n        data-role=\"add-payee-button\"\n        i18n=\"Label for button|Manual payee continue button@@billpay-create-manual-payee-review.add-payee\"\n        (click)=\"submitPayee(payee)\"\n        class=\"bb-button-bar__button\"\n      >\n        Add payee\n      </button>\n      <button\n        bbButton\n        data-role=\"back-button\"\n        i18n=\"Label for button|Find a different payee button@@billpay-create-manual-payee-review.edit-payee\"\n        (click)=\"navigateBack()\"\n        class=\"bb-button-bar__button\"\n        color=\"secondary\"\n      >\n        Edit\n      </button>\n      <button\n        bbButton\n        data-role=\"cancel-button\"\n        color=\"link\"\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        (click)=\"cancel()\"\n        i18n=\"Label for button|Cancel button@@billpay-create-manual-payee-review.cancel-payee\"\n      >\n        Cancel\n      </button>\n    </div>\n  </section>\n</div>\n\n<bb-billpay-cancel-new-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-new-payee-modal>\n\n<ng-template #notificationMessage>\n  <span\n    data-role=\"notification-message\"\n    i18n=\"\n      Payee notification message|Payee has created successfully\n      notification@@billpay-create-manual-payee-review.notification.message\"\n    >The payee \u2018{{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }}\u2018 has been created\n    successfully\n  </span>\n\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      data-role=\"notification-add-payee-button\"\n      color=\"primary\"\n      class=\"bb-button-bar__button\"\n      i18n=\"notification button|Add another payee@@billpay-create-manual-payee-review.notification.add-button\"\n      (click)=\"navigateToPayee()\"\n    >\n      Add another payee\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    i18n=\"\n      Payee notification header|Payee created success notification\n      header@@billpay-create-manual-payee-review.notification.header\"\n    >Payee created</span\n  >\n</ng-template>\n", components: [{ type: i7.BillpayManualPayeeReviewComponent, selector: "bb-billpay-manual-payee-review", inputs: ["payeeFormState"] }, { type: i8.BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: ["findPayee"], outputs: ["resolve"] }], directives: [{ type: i9.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i10.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CreateManualPayeeReviewViewComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './billpay-create-manual-payee-review-view.component.html',
                    providers: [BillpayDiscardChangesModalService],
                }]
        }], ctorParameters: function () { return [{ type: i1.ManagePayeesJourneyConfigService }, { type: i2.ManagePayeesNavigationService }, { type: i3.BillpayManagePayeeStateService }, { type: i4.BillpayManagePayeeDataService }, { type: i5.NotificationService }, { type: i6.BillpayDiscardChangesModalService }, { type: i6.BillpayNotificationRoutingService }]; }, propDecorators: { notificationHeaderTemplate: [{
                type: ViewChild,
                args: ['notificationHeader']
            }], notificationMessageTemplate: [{
                type: ViewChild,
                args: ['notificationMessage']
            }], onWindowUnload: [{
                type: HostListener,
                args: ['window:beforeunload', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1jcmVhdGUtbWFudWFsLXBheWVlLXJldmlldy12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbWFuYWdlLXBheWVlcy1qb3VybmV5L3NyYy92aWV3cy9iaWxscGF5LWNyZWF0ZS1tYW51YWwtcGF5ZWUtcmV2aWV3L2JpbGxwYXktY3JlYXRlLW1hbnVhbC1wYXllZS1yZXZpZXctdmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wYXllZXMtam91cm5leS9zcmMvdmlld3MvYmlsbHBheS1jcmVhdGUtbWFudWFsLXBheWVlLXJldmlldy9iaWxscGF5LWNyZWF0ZS1tYW51YWwtcGF5ZWUtcmV2aWV3LXZpZXcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQWtDLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRyxPQUFPLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxlQUFlLEVBQWMsRUFBRSxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNoRSxPQUFPLEVBQ0wsaUNBQWlDLEdBR2xDLE1BQU0sbUNBQW1DLENBQUM7Ozs7Ozs7Ozs7OztBQVkzQyxNQUFNLE9BQU8sb0NBQW9DO0lBTy9DLGdCQUFnQjtJQUNoQixZQUNXLE1BQXdDLEVBQ2hDLE1BQXFDLEVBQ3JDLFlBQTRDLEVBQzVDLFdBQTBDLEVBQzFDLG1CQUF3QyxFQUN4QyxtQkFBc0QsRUFDdEQsaUNBQW9FO1FBTjVFLFdBQU0sR0FBTixNQUFNLENBQWtDO1FBQ2hDLFdBQU0sR0FBTixNQUFNLENBQStCO1FBQ3JDLGlCQUFZLEdBQVosWUFBWSxDQUFnQztRQUM1QyxnQkFBVyxHQUFYLFdBQVcsQ0FBK0I7UUFDMUMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQUN4Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQW1DO1FBQ3RELHNDQUFpQyxHQUFqQyxpQ0FBaUMsQ0FBbUM7UUFkdEQsK0JBQTBCLEdBQThCLEVBQUUsQ0FBQztRQUMxRCxnQ0FBMkIsR0FBOEIsRUFBRSxDQUFDO1FBRTdFLGlCQUFZLEdBQUcsSUFBSSxlQUFlLENBQW1DLFNBQVMsQ0FBQyxDQUFDO1FBQ2hGLGFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBUSxDQUFDO0lBVzdDLENBQUM7SUFFSixJQUFJLGtCQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxrQkFBa0IsQ0FBQztJQUNyRCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxZQUFZLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyRSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNuQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDZixJQUFJLENBQUMsTUFBTSxDQUFDLHlCQUF5QixFQUFFLENBQUM7YUFDekM7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxZQUFZO2FBQ2QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2FBQy9DLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBNkIsQ0FBQyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUdELGNBQWMsQ0FBQyxNQUF5QjtRQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQzVCLE1BQU0sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztJQUVELFdBQVcsQ0FBQyxLQUEyQjtRQUNyQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsWUFBWTtRQUNWLElBQUksQ0FBQyxNQUFNLENBQUMseUJBQXlCLEVBQUUsQ0FBQztJQUMxQyxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBRUQsZUFBZTtRQUNiLElBQUksQ0FBQyxpQ0FBaUMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQzVELENBQUM7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FDM0IsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFDN0UsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUN0RSxDQUFDO0lBQ0osQ0FBQztJQUVELGNBQWMsQ0FBQyxZQUFxQjtRQUNsQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFTyxhQUFhLENBQUMsS0FBMkI7UUFDL0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxDQUM5QyxHQUFHLEVBQUU7WUFDSCxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFtQixFQUFFLENBQUM7WUFDbEMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGdCQUFnQixDQUFDO2dCQUN4QyxNQUFNLEVBQUUsSUFBSSxDQUFDLDBCQUEwQjtnQkFDdkMsT0FBTyxFQUFFLElBQUksQ0FBQywyQkFBMkI7Z0JBQ3pDLFFBQVEsRUFBRSxTQUFTO2dCQUNuQixHQUFHLEVBQUUsSUFBSSxDQUFDLGNBQWM7YUFDekIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxFQUNELEdBQUcsRUFBRSxDQUNILElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FBQztZQUN4QyxNQUFNLEVBQUUsU0FBUyxDQUFBLCtFQUErRTtZQUNoRyxPQUFPLEVBQUUsU0FBUyxDQUFBLHVHQUF1RztZQUN6SCxRQUFRLEVBQUUsT0FBTztZQUNqQixHQUFHLEVBQUUsSUFBSSxDQUFDLGNBQWM7U0FDekIsQ0FBQyxDQUNMLENBQUM7SUFDSixDQUFDO0lBRUQsSUFBWSxjQUFjO1FBQ3hCLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsS0FBSyxTQUFTLEVBQUU7WUFDckQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO1NBQ3BEO1FBQ0QsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDO0lBQzdDLENBQUM7O2tJQW5HVSxvQ0FBb0M7c0hBQXBDLG9DQUFvQyxpSEFGcEMsQ0FBQyxpQ0FBaUMsQ0FBQyxpUkNsQmhELDg1RUEwRUE7NEZEdERhLG9DQUFvQztrQkFKaEQsU0FBUzttQkFBQztvQkFDVCxXQUFXLEVBQUUsMERBQTBEO29CQUN2RSxTQUFTLEVBQUUsQ0FBQyxpQ0FBaUMsQ0FBQztpQkFDL0M7OFhBRWtDLDBCQUEwQjtzQkFBMUQsU0FBUzt1QkFBQyxvQkFBb0I7Z0JBQ0csMkJBQTJCO3NCQUE1RCxTQUFTO3VCQUFDLHFCQUFxQjtnQkFzQ2hDLGNBQWM7c0JBRGIsWUFBWTt1QkFBQyxxQkFBcUIsRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hbmFnZVBheWVlc0pvdXJuZXlDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbWFuYWdlLXBheWVlcy1qb3VybmV5LWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IENvbXBvbmVudCwgSG9zdExpc3RlbmVyLCBPbkRlc3Ryb3ksIE9uSW5pdCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZmlsdGVyLCBzd2l0Y2hNYXAsIHRha2UsIHRha2VVbnRpbCwgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlLCBvZiwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgQmlsbHBheURpc2NhcmRDaGFuZ2VzTW9kYWxTZXJ2aWNlLFxuICBCaWxscGF5RGlzY2FyZENoYW5nZXNGb3JtQ29tcG9uZW50LFxuICBCaWxscGF5Tm90aWZpY2F0aW9uUm91dGluZ1NlcnZpY2UsXG59IGZyb20gJ0BiYWNrYmFzZS9iaWxscGF5LWpvdXJuZXlzLWNvbW1vbic7XG5pbXBvcnQgeyBNYW51YWxQYXllZUZvcm1TdGF0ZSB9IGZyb20gJy4uLy4uL21vZGVsJztcbmltcG9ydCB7IE1hbmFnZVBheWVlc05hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbWFuYWdlLXBheWVlcy1uYXZpZ2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmlsbHBheU1hbmFnZVBheWVlU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvYmlsbHBheS1tYW5hZ2UtcGF5ZWUtc3RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBCaWxscGF5TWFuYWdlUGF5ZWVEYXRhU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2JpbGxwYXktbWFuYWdlLXBheWVlLWRhdGEuc2VydmljZSc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZy9ub3RpZmljYXRpb24nO1xuXG5kZWNsYXJlIGNvbnN0ICRsb2NhbGl6ZTogYW55O1xuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiAnLi9iaWxscGF5LWNyZWF0ZS1tYW51YWwtcGF5ZWUtcmV2aWV3LXZpZXcuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtCaWxscGF5RGlzY2FyZENoYW5nZXNNb2RhbFNlcnZpY2VdLFxufSlcbmV4cG9ydCBjbGFzcyBDcmVhdGVNYW51YWxQYXllZVJldmlld1ZpZXdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgQmlsbHBheURpc2NhcmRDaGFuZ2VzRm9ybUNvbXBvbmVudCB7XG4gIEBWaWV3Q2hpbGQoJ25vdGlmaWNhdGlvbkhlYWRlcicpIG5vdGlmaWNhdGlvbkhlYWRlclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+IHwgc3RyaW5nID0gJyc7XG4gIEBWaWV3Q2hpbGQoJ25vdGlmaWNhdGlvbk1lc3NhZ2UnKSBub3RpZmljYXRpb25NZXNzYWdlVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4gfCBzdHJpbmcgPSAnJztcbiAgcGF5ZWU/OiBNYW51YWxQYXllZUZvcm1TdGF0ZTtcbiAgcHJpdmF0ZSByZWFkb25seSBwYXllZVN1Ym1pdCQgPSBuZXcgQmVoYXZpb3JTdWJqZWN0PE1hbnVhbFBheWVlRm9ybVN0YXRlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuICBwcml2YXRlIHJlYWRvbmx5IGRlc3Ryb3kkID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcblxuICAvKiogQGludGVybmFsICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHJlYWRvbmx5IGNvbmZpZzogTWFuYWdlUGF5ZWVzSm91cm5leUNvbmZpZ1NlcnZpY2UsXG4gICAgcHJpdmF0ZSByZWFkb25seSByb3V0ZXI6IE1hbmFnZVBheWVlc05hdmlnYXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgc3RhdGVTZXJ2aWNlOiBCaWxscGF5TWFuYWdlUGF5ZWVTdGF0ZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZWFkb25seSBkYXRhU2VydmljZTogQmlsbHBheU1hbmFnZVBheWVlRGF0YVNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZWFkb25seSBub3RpZmljYXRpb25TZXJ2aWNlOiBOb3RpZmljYXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgZGlzY2FyZE1vZGFsU2VydmljZTogQmlsbHBheURpc2NhcmRDaGFuZ2VzTW9kYWxTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgYmlsbHBheU5vdGlmaWNhdGlvblJvdXRpbmdTZXJ2aWNlOiBCaWxscGF5Tm90aWZpY2F0aW9uUm91dGluZ1NlcnZpY2UsXG4gICkge31cblxuICBnZXQgaXNEaXNjYXJkTW9kYWxPcGVuKCkge1xuICAgIHJldHVybiB0aGlzLmRpc2NhcmRNb2RhbFNlcnZpY2UuaXNEaXNjYXJkTW9kYWxPcGVuO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zdGF0ZVNlcnZpY2UubWFudWFsUGF5ZWVGb3JtU3RhdGUucGlwZSh0YWtlKDEpKS5zdWJzY3JpYmUocGF5ZWUgPT4ge1xuICAgICAgdGhpcy5wYXllZSA9IHBheWVlO1xuICAgICAgaWYgKCF0aGlzLnBheWVlKSB7XG4gICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlVG9NYW51YWxQYXllZUZvcm0oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnBheWVlU3VibWl0JFxuICAgICAgLnBpcGUodGFrZVVudGlsKHRoaXMuZGVzdHJveSQpLCBmaWx0ZXIoQm9vbGVhbikpXG4gICAgICAuc3Vic2NyaWJlKHBheWVlID0+IHRoaXMub25TdWJtaXRQYXllZShwYXllZSBhcyBNYW51YWxQYXllZUZvcm1TdGF0ZSkpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5kZXN0cm95JC5uZXh0KCk7XG4gICAgdGhpcy5kZXN0cm95JC5jb21wbGV0ZSgpO1xuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignd2luZG93OmJlZm9yZXVubG9hZCcsIFsnJGV2ZW50J10pXG4gIG9uV2luZG93VW5sb2FkKCRldmVudDogQmVmb3JlVW5sb2FkRXZlbnQpIHtcbiAgICBpZiAoIXRoaXMuaXNEaXNjYXJkTW9kYWxPcGVuKSB7XG4gICAgICAkZXZlbnQucmV0dXJuVmFsdWUgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHN1Ym1pdFBheWVlKHBheWVlOiBNYW51YWxQYXllZUZvcm1TdGF0ZSkge1xuICAgIHRoaXMucGF5ZWVTdWJtaXQkLm5leHQocGF5ZWUpO1xuICB9XG5cbiAgbmF2aWdhdGVCYWNrKCkge1xuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlVG9NYW51YWxQYXllZUZvcm0oKTtcbiAgfVxuXG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZVRvUGF5ZWVMaXN0KCk7XG4gIH1cblxuICBuYXZpZ2F0ZVRvUGF5ZWUoKSB7XG4gICAgdGhpcy5iaWxscGF5Tm90aWZpY2F0aW9uUm91dGluZ1NlcnZpY2UubmF2aWdhdGVUb1BheWVlcygpO1xuICB9XG5cbiAgb3Blbk1vZGFsKCk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIHJldHVybiB0aGlzLnBheWVlU3VibWl0JC5waXBlKFxuICAgICAgc3dpdGNoTWFwKHBheWVlID0+IChwYXllZSA/IG9mKHRydWUpIDogdGhpcy5kaXNjYXJkTW9kYWxTZXJ2aWNlLm9wZW5Nb2RhbCgpKSksXG4gICAgICB0YXAoaXNSZXNvbHZlZCA9PiBpc1Jlc29sdmVkICYmIHRoaXMuc3RhdGVTZXJ2aWNlLnJlc2V0TWFudWFsUGF5ZWUoKSksXG4gICAgKTtcbiAgfVxuXG4gIG9uTW9kYWxSZXNvbHZlKHJlc29sdmVkV2l0aDogYm9vbGVhbikge1xuICAgIHRoaXMuZGlzY2FyZE1vZGFsU2VydmljZS5vbk1vZGFsUmVzb2x2ZShyZXNvbHZlZFdpdGgpO1xuICB9XG5cbiAgcHJpdmF0ZSBvblN1Ym1pdFBheWVlKHBheWVlOiBNYW51YWxQYXllZUZvcm1TdGF0ZSkge1xuICAgIHRoaXMuZGF0YVNlcnZpY2UuYWRkTWFudWFsUGF5ZWUocGF5ZWUpLnN1YnNjcmliZShcbiAgICAgICgpID0+IHtcbiAgICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVUb1BheWVlTGlzdCgpO1xuICAgICAgICB0aGlzLm5vdGlmaWNhdGlvblNlcnZpY2Uuc2hvd05vdGlmaWNhdGlvbih7XG4gICAgICAgICAgaGVhZGVyOiB0aGlzLm5vdGlmaWNhdGlvbkhlYWRlclRlbXBsYXRlLFxuICAgICAgICAgIG1lc3NhZ2U6IHRoaXMubm90aWZpY2F0aW9uTWVzc2FnZVRlbXBsYXRlLFxuICAgICAgICAgIG1vZGlmaWVyOiAnc3VjY2VzcycsXG4gICAgICAgICAgdHRsOiB0aGlzLmRpc21pc3NUaW1lb3V0LFxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICAoKSA9PlxuICAgICAgICB0aGlzLm5vdGlmaWNhdGlvblNlcnZpY2Uuc2hvd05vdGlmaWNhdGlvbih7XG4gICAgICAgICAgaGVhZGVyOiAkbG9jYWxpemVgOkBAYmlsbHBheS5jcmVhdGUtbWFudWVsLXBheWVlLmVycm9yLW5vdGlmaWNhdGlvbi5oZWFkZXI6U29tZXRoaW5nIHdlbnQgd3JvbmdgLFxuICAgICAgICAgIG1lc3NhZ2U6ICRsb2NhbGl6ZWA6QEBiaWxscGF5LmNyZWF0ZS1tYW51ZWwtcGF5ZWUuZXJyb3Itbm90aWZpY2F0aW9uLmhlYWRlcjpXZSB3ZXJlIHVuYWJsZSB0byBwcm9jZWVkLiBQbGVhc2UgdHJ5IGFnYWluLmAsXG4gICAgICAgICAgbW9kaWZpZXI6ICdlcnJvcicsXG4gICAgICAgICAgdHRsOiB0aGlzLmRpc21pc3NUaW1lb3V0LFxuICAgICAgICB9KSxcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXQgZGlzbWlzc1RpbWVvdXQoKTogbnVtYmVyIHtcbiAgICBpZiAodGhpcy5jb25maWcubm90aWZpY2F0aW9uRGlzbWlzc1RpbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdEaXNtaXNzIHRpbWVvdXQgdmFsdWUgbm90IGZvdW5kJyk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmNvbmZpZy5ub3RpZmljYXRpb25EaXNtaXNzVGltZTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImNhcmQgY2FyZC1sZ1wiICpuZ0lmPVwicGF5ZWVcIj5cbiAgPHNlY3Rpb24gY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICA8YmItYmlsbHBheS1tYW51YWwtcGF5ZWUtcmV2aWV3IFtwYXllZUZvcm1TdGF0ZV09XCJwYXllZVwiPiA8L2JiLWJpbGxwYXktbWFudWFsLXBheWVlLXJldmlldz5cbiAgICA8ZGl2IGNsYXNzPVwiYmItYnV0dG9uLWJhciBiYi1idXR0b24tYmFyLS1yZXZlcnNlXCI+XG4gICAgICA8YnV0dG9uXG4gICAgICAgIGJiQnV0dG9uXG4gICAgICAgIGRhdGEtcm9sZT1cImFkZC1wYXllZS1idXR0b25cIlxuICAgICAgICBpMThuPVwiTGFiZWwgZm9yIGJ1dHRvbnxNYW51YWwgcGF5ZWUgY29udGludWUgYnV0dG9uQEBiaWxscGF5LWNyZWF0ZS1tYW51YWwtcGF5ZWUtcmV2aWV3LmFkZC1wYXllZVwiXG4gICAgICAgIChjbGljayk9XCJzdWJtaXRQYXllZShwYXllZSlcIlxuICAgICAgICBjbGFzcz1cImJiLWJ1dHRvbi1iYXJfX2J1dHRvblwiXG4gICAgICA+XG4gICAgICAgIEFkZCBwYXllZVxuICAgICAgPC9idXR0b24+XG4gICAgICA8YnV0dG9uXG4gICAgICAgIGJiQnV0dG9uXG4gICAgICAgIGRhdGEtcm9sZT1cImJhY2stYnV0dG9uXCJcbiAgICAgICAgaTE4bj1cIkxhYmVsIGZvciBidXR0b258RmluZCBhIGRpZmZlcmVudCBwYXllZSBidXR0b25AQGJpbGxwYXktY3JlYXRlLW1hbnVhbC1wYXllZS1yZXZpZXcuZWRpdC1wYXllZVwiXG4gICAgICAgIChjbGljayk9XCJuYXZpZ2F0ZUJhY2soKVwiXG4gICAgICAgIGNsYXNzPVwiYmItYnV0dG9uLWJhcl9fYnV0dG9uXCJcbiAgICAgICAgY29sb3I9XCJzZWNvbmRhcnlcIlxuICAgICAgPlxuICAgICAgICBFZGl0XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxidXR0b25cbiAgICAgICAgYmJCdXR0b25cbiAgICAgICAgZGF0YS1yb2xlPVwiY2FuY2VsLWJ1dHRvblwiXG4gICAgICAgIGNvbG9yPVwibGlua1wiXG4gICAgICAgIGNsYXNzPVwiYmItYnV0dG9uLWJhcl9fYnV0dG9uIGJiLWJ1dHRvbi1iYXJfX2J1dHRvbi0tYWNyb3NzXCJcbiAgICAgICAgKGNsaWNrKT1cImNhbmNlbCgpXCJcbiAgICAgICAgaTE4bj1cIkxhYmVsIGZvciBidXR0b258Q2FuY2VsIGJ1dHRvbkBAYmlsbHBheS1jcmVhdGUtbWFudWFsLXBheWVlLXJldmlldy5jYW5jZWwtcGF5ZWVcIlxuICAgICAgPlxuICAgICAgICBDYW5jZWxcbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICA8L3NlY3Rpb24+XG48L2Rpdj5cblxuPGJiLWJpbGxwYXktY2FuY2VsLW5ldy1wYXllZS1tb2RhbFxuICAqbmdJZj1cImlzRGlzY2FyZE1vZGFsT3BlblwiXG4gIChyZXNvbHZlKT1cIm9uTW9kYWxSZXNvbHZlKCRldmVudClcIlxuPjwvYmItYmlsbHBheS1jYW5jZWwtbmV3LXBheWVlLW1vZGFsPlxuXG48bmctdGVtcGxhdGUgI25vdGlmaWNhdGlvbk1lc3NhZ2U+XG4gIDxzcGFuXG4gICAgZGF0YS1yb2xlPVwibm90aWZpY2F0aW9uLW1lc3NhZ2VcIlxuICAgIGkxOG49XCJcbiAgICAgIFBheWVlIG5vdGlmaWNhdGlvbiBtZXNzYWdlfFBheWVlIGhhcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseVxuICAgICAgbm90aWZpY2F0aW9uQEBiaWxscGF5LWNyZWF0ZS1tYW51YWwtcGF5ZWUtcmV2aWV3Lm5vdGlmaWNhdGlvbi5tZXNzYWdlXCJcbiAgICA+VGhlIHBheWVlIOKAmHt7IChwYXllZS5uaWNrTmFtZSAmJiBwYXllZS5uaWNrTmFtZSArICcgKCcgKyBwYXllZS5uYW1lICsgJyknKSB8fCBwYXllZS5uYW1lIH194oCYIGhhcyBiZWVuIGNyZWF0ZWRcbiAgICBzdWNjZXNzZnVsbHlcbiAgPC9zcGFuPlxuXG4gIDxkaXYgY2xhc3M9XCJiYi1idXR0b24tYmFyIGJiLWJ1dHRvbi1iYXItLXJldmVyc2VcIj5cbiAgICA8YnV0dG9uXG4gICAgICBiYkJ1dHRvblxuICAgICAgZGF0YS1yb2xlPVwibm90aWZpY2F0aW9uLWFkZC1wYXllZS1idXR0b25cIlxuICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgIGNsYXNzPVwiYmItYnV0dG9uLWJhcl9fYnV0dG9uXCJcbiAgICAgIGkxOG49XCJub3RpZmljYXRpb24gYnV0dG9ufEFkZCBhbm90aGVyIHBheWVlQEBiaWxscGF5LWNyZWF0ZS1tYW51YWwtcGF5ZWUtcmV2aWV3Lm5vdGlmaWNhdGlvbi5hZGQtYnV0dG9uXCJcbiAgICAgIChjbGljayk9XCJuYXZpZ2F0ZVRvUGF5ZWUoKVwiXG4gICAgPlxuICAgICAgQWRkIGFub3RoZXIgcGF5ZWVcbiAgICA8L2J1dHRvbj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI25vdGlmaWNhdGlvbkhlYWRlcj5cbiAgPHNwYW5cbiAgICBpMThuPVwiXG4gICAgICBQYXllZSBub3RpZmljYXRpb24gaGVhZGVyfFBheWVlIGNyZWF0ZWQgc3VjY2VzcyBub3RpZmljYXRpb25cbiAgICAgIGhlYWRlckBAYmlsbHBheS1jcmVhdGUtbWFudWFsLXBheWVlLXJldmlldy5ub3RpZmljYXRpb24uaGVhZGVyXCJcbiAgICA+UGF5ZWUgY3JlYXRlZDwvc3BhblxuICA+XG48L25nLXRlbXBsYXRlPlxuIl19