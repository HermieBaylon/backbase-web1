import { Component, ViewChild } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { BillpayDiscardChangesModalService, } from '@backbase/billpay-journeys-common';
import { BaseElectronicPayeeReviewPageModelDirective } from '../../directives/base-electronic-payee-review-page.model';
import * as i0 from "@angular/core";
import * as i1 from "../../services/manage-payees-journey-config.service";
import * as i2 from "@angular/router";
import * as i3 from "../../services/billpay-manage-payee-state.service";
import * as i4 from "@backbase/billpay-journeys-common";
import * as i5 from "../../services/manage-payees-navigation.service";
import * as i6 from "../../services/billpay-manage-payee-data.service";
import * as i7 from "@backbase/ui-ang/notification";
import * as i8 from "../../components/add-payee/billpay-electronic-payee-review/billpay-electronic-payee-review.component";
import * as i9 from "../../components/add-payee/billpay-cancel-new-payee-modal/billpay-cancel-new-payee-modal.component";
import * as i10 from "@angular/common";
import * as i11 from "@backbase/ui-ang/button";
export class CreateElectronicPayeeReviewViewComponent extends BaseElectronicPayeeReviewPageModelDirective {
    /** @internal */
    constructor(config, route, stateService, discardModalService, router, dataService, notificationService, billpayNotificationRoutingService) {
        super(route, stateService, discardModalService, config);
        this.config = config;
        this.route = route;
        this.router = router;
        this.dataService = dataService;
        this.notificationService = notificationService;
        this.billpayNotificationRoutingService = billpayNotificationRoutingService;
        this.notificationHeaderTemplate = '';
        this.notificationMessageTemplate = '';
        this.payeeSubmit$ = new BehaviorSubject(undefined);
    }
    submitPayee(id, payee) {
        this.payeeSubmit$.next(Object.assign({ merchantID: id }, payee));
    }
    navigateBack(id) {
        this.router.navigateToElectronicPayeeForm(id, { queryParamsHandling: 'preserve' });
    }
    navigateToPayee() {
        this.billpayNotificationRoutingService.navigateToPayees();
    }
    navigateToNewPayment() {
        this.billpayNotificationRoutingService.navigateToNewPayment(this.successfulPayeeId);
    }
    onSubmitPayee(payee) {
        this.dataService.addElectronicPayee(payee).subscribe(billPayPutPostResponse => {
            this.successfulPayeeId = billPayPutPostResponse.id;
            this.router.navigateToPayeeList();
            this.notificationService.showNotification({
                header: this.notificationHeaderTemplate,
                message: this.notificationMessageTemplate,
                modifier: 'success',
                ttl: this.dismissTimeout,
            });
        }, ({ error }) => {
            const { header, message } = this.mapErrorNotificationContent(error === null || error === void 0 ? void 0 : error.errors);
            this.notificationService.showNotification({
                header,
                message,
                modifier: 'error',
                ttl: this.dismissTimeout,
            });
        });
    }
    mapErrorNotificationContent(errors = []) {
        if (errors.find(error => error.key === 'billpay.api.payeeAlreadyExists')) {
            return {
                header: $localize `:@@billpay.add-e-payee.alreadyExist-error-notification.header:Failed to add a new payee`,
                message: $localize `:@@billpay.add-e-payee.alreadyExist-error-notification.header:The payee could not be added because it already exists.`,
            };
        }
        else {
            return {
                header: $localize `:@@billpay.add-e-payee.default-error-notification.header:Something went wrong`,
                message: $localize `:@@billpay.add-e-payee.default-error-notification.header:We were unable to proceed. Please try again.`,
            };
        }
    }
    cancel() {
        this.router.navigateToPayeeList();
    }
}
CreateElectronicPayeeReviewViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CreateElectronicPayeeReviewViewComponent, deps: [{ token: i1.ManagePayeesJourneyConfigService }, { token: i2.ActivatedRoute }, { token: i3.BillpayManagePayeeStateService }, { token: i4.BillpayDiscardChangesModalService }, { token: i5.ManagePayeesNavigationService }, { token: i6.BillpayManagePayeeDataService }, { token: i7.NotificationService }, { token: i4.BillpayNotificationRoutingService }], target: i0.ɵɵFactoryTarget.Component });
CreateElectronicPayeeReviewViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CreateElectronicPayeeReviewViewComponent, selector: "ng-component", providers: [BillpayDiscardChangesModalService], viewQueries: [{ propertyName: "notificationHeaderTemplate", first: true, predicate: ["notificationHeader"], descendants: true }, { propertyName: "notificationMessageTemplate", first: true, predicate: ["notificationMessage"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"{ payee: payee$ | async, id: id$ | async } as context\">\n  <div class=\"card card-lg\">\n    <section class=\"card-body\">\n      <bb-billpay-electronic-payee-review [payee]=\"context.payee\"> </bb-billpay-electronic-payee-review>\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <button\n          bbButton\n          data-role=\"add-payee-button\"\n          i18n=\"Label for button|Electronic payee continue button@@billpay-create-electronic-payee-review.add-payee\"\n          (click)=\"submitPayee(context.id, context.payee)\"\n          class=\"bb-button-bar__button\"\n        >\n          Add payee\n        </button>\n        <button\n          bbButton\n          data-role=\"back-button\"\n          i18n=\"Label for button|Edit button@@billpay-create-electronic-payee-review.edit-payee\"\n          (click)=\"navigateBack(context.id)\"\n          class=\"bb-button-bar__button\"\n          color=\"secondary\"\n        >\n          Edit\n        </button>\n        <button\n          bbButton\n          data-role=\"cancel-button\"\n          color=\"link\"\n          class=\"bb-button-bar__button bb-button-bar__button--across\"\n          (click)=\"cancel()\"\n          i18n=\"Label for button|Cancel button@@billpay-create-electronic-payee-review.cancel-payee\"\n        >\n          Cancel\n        </button>\n      </div>\n    </section>\n  </div>\n\n  <bb-billpay-cancel-new-payee-modal\n    *ngIf=\"isDiscardModalOpen\"\n    (resolve)=\"onModalResolve($event)\"\n  ></bb-billpay-cancel-new-payee-modal>\n</ng-container>\n\n<ng-template *ngIf=\"payee$ | async as payee\" #notificationMessage>\n  <span\n    data-role=\"notification-message\"\n    i18n=\"\n      Payee notification message|Payee has created successfully\n      notification@@billpay-create-electronic-payee-review.notification.message\"\n    >The payee \u2018{{ (payee.nickName && payee.nickName + ' (' + payee.name + ')') || payee.name }}\u2018 has been created\n    successfully\n  </span>\n\n  <div class=\"bb-button-bar\">\n    <button\n      bbButton\n      data-role=\"notification-payee-button\"\n      class=\"bb-button-bar__button\"\n      i18n=\"notification button|Pay button@@billpay-create-electronic-payee-review.notification.pay-button\"\n      (click)=\"navigateToNewPayment()\"\n    >\n      Pay\n    </button>\n    <button\n      bbButton\n      data-role=\"notification-add-payee-button\"\n      color=\"secondary\"\n      class=\"bb-button-bar__button\"\n      i18n=\"notification button|Add another payee@@billpay-create-electronic-payee-review.notification.add-button\"\n      (click)=\"navigateToPayee()\"\n    >\n      Add another payee\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #notificationHeader>\n  <span\n    class=\"text-dark\"\n    i18n=\"\n      Payee notification header|Payee created success notification\n      header@@billpay-create-electronic-payee-review.notification.header\"\n    >Payee created</span\n  >\n</ng-template>\n", components: [{ type: i8.BillpayElectronicPayeeReviewComponent, selector: "bb-billpay-electronic-payee-review", inputs: ["payee"] }, { type: i9.BillpayCancelNewPayeeModalComponent, selector: "bb-billpay-cancel-new-payee-modal", inputs: ["findPayee"], outputs: ["resolve"] }], directives: [{ type: i10.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i11.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], pipes: { "async": i10.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CreateElectronicPayeeReviewViewComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './billpay-create-electronic-payee-review-view.component.html',
                    providers: [BillpayDiscardChangesModalService],
                }]
        }], ctorParameters: function () { return [{ type: i1.ManagePayeesJourneyConfigService }, { type: i2.ActivatedRoute }, { type: i3.BillpayManagePayeeStateService }, { type: i4.BillpayDiscardChangesModalService }, { type: i5.ManagePayeesNavigationService }, { type: i6.BillpayManagePayeeDataService }, { type: i7.NotificationService }, { type: i4.BillpayNotificationRoutingService }]; }, propDecorators: { notificationHeaderTemplate: [{
                type: ViewChild,
                args: ['notificationHeader']
            }], notificationMessageTemplate: [{
                type: ViewChild,
                args: ['notificationMessage']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS1yZXZpZXctdmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wYXllZXMtam91cm5leS9zcmMvdmlld3MvYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS1yZXZpZXcvYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS1yZXZpZXctdmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wYXllZXMtam91cm5leS9zcmMvdmlld3MvYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS1yZXZpZXcvYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS1yZXZpZXctdmlldy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFlLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVsRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXZDLE9BQU8sRUFDTCxpQ0FBaUMsR0FFbEMsTUFBTSxtQ0FBbUMsQ0FBQztBQUszQyxPQUFPLEVBQUUsMkNBQTJDLEVBQUUsTUFBTSwwREFBMEQsQ0FBQzs7Ozs7Ozs7Ozs7OztBQVF2SCxNQUFNLE9BQU8sd0NBQXlDLFNBQVEsMkNBQTJDO0lBTXZHLGdCQUFnQjtJQUNoQixZQUNXLE1BQXdDLEVBQ3hDLEtBQXFCLEVBQzlCLFlBQTRDLEVBQzVDLG1CQUFzRCxFQUNyQyxNQUFxQyxFQUNyQyxXQUEwQyxFQUMxQyxtQkFBd0MsRUFDeEMsaUNBQW9FO1FBRXJGLEtBQUssQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBVC9DLFdBQU0sR0FBTixNQUFNLENBQWtDO1FBQ3hDLFVBQUssR0FBTCxLQUFL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Q1QsV0FBVyxFQUFFLDhEQUE4RDtvQkFDM0UsU0FBUyxFQUFFLENBQUMsaUNBQWlDLENBQUM7aUJBQy9DOzJaQUVrQywwQkFBMEI7c0JBQTFELFNBQVM7dUJBQUMsb0JBQW9CO2dCQUNHLDJCQUEyQjtzQkFBNUQsU0FBUzt1QkFBQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYW5hZ2VQYXllZXNKb3VybmV5Q29uZmlnU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL21hbmFnZS1wYXllZXMtam91cm5leS1jb25maWcuc2VydmljZSc7XG5pbXBvcnQgeyBDb21wb25lbnQsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgRXJyb3JJdGVtLCBQb3N0RWxlY3Ryb25pY1JlcXVlc3RQYXllZSB9IGZyb20gJ0BiYWNrYmFzZS9kYXRhLWFuZy9iaWxscGF5JztcbmltcG9ydCB7XG4gIEJpbGxwYXlEaXNjYXJkQ2hhbmdlc01vZGFsU2VydmljZSxcbiAgQmlsbHBheU5vdGlmaWNhdGlvblJvdXRpbmdTZXJ2aWNlLFxufSBmcm9tICdAYmFja2Jhc2UvYmlsbHBheS1qb3VybmV5cy1jb21tb24nO1xuaW1wb3J0IHsgQmlsbHBheU1hbmFnZVBheWVlU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvYmlsbHBheS1tYW5hZ2UtcGF5ZWUtc3RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBNYW5hZ2VQYXllZXNOYXZpZ2F0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL21hbmFnZS1wYXllZXMtbmF2aWdhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEJpbGxwYXlNYW5hZ2VQYXllZURhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvYmlsbHBheS1tYW5hZ2UtcGF5ZWUtZGF0YS5zZXJ2aWNlJztcbmltcG9ydCB7IEVsZWN0cm9uaWNQYXllZUZvcm0gfSBmcm9tICcuLi8uLi9tb2RlbCc7XG5pbXBvcnQgeyBCYXNlRWxlY3Ryb25pY1BheWVlUmV2aWV3UGFnZU1vZGVsRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9iYXNlLWVsZWN0cm9uaWMtcGF5ZWUtcmV2aWV3LXBhZ2UubW9kZWwnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJ0BiYWNrYmFzZS91aS1hbmcvbm90aWZpY2F0aW9uJztcbmRlY2xhcmUgY29uc3QgJGxvY2FsaXplOiBhbnk7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZVVybDogJy4vYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS1yZXZpZXctdmlldy5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW0JpbGxwYXlEaXNjYXJkQ2hhbmdlc01vZGFsU2VydmljZV0sXG59KVxuZXhwb3J0IGNsYXNzIENyZWF0ZUVsZWN0cm9uaWNQYXllZVJldmlld1ZpZXdDb21wb25lbnQgZXh0ZW5kcyBCYXNlRWxlY3Ryb25pY1BheWVlUmV2aWV3UGFnZU1vZGVsRGlyZWN0aXZlIHtcbiAgQFZpZXdDaGlsZCgnbm90aWZpY2F0aW9uSGVhZGVyJykgbm90aWZpY2F0aW9uSGVhZGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4gfCBzdHJpbmcgPSAnJztcbiAgQFZpZXdDaGlsZCgnbm90aWZpY2F0aW9uTWVzc2FnZScpIG5vdGlmaWNhdGlvbk1lc3NhZ2VUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PiB8IHN0cmluZyA9ICcnO1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgcGF5ZWVTdWJtaXQkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxQb3N0RWxlY3Ryb25pY1JlcXVlc3RQYXllZSB8IHVuZGVmaW5lZD4odW5kZWZpbmVkKTtcbiAgcHJpdmF0ZSBzdWNjZXNzZnVsUGF5ZWVJZCE6IHN0cmluZztcblxuICAvKiogQGludGVybmFsICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHJlYWRvbmx5IGNvbmZpZzogTWFuYWdlUGF5ZWVzSm91cm5leUNvbmZpZ1NlcnZpY2UsXG4gICAgcmVhZG9ubHkgcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgIHN0YXRlU2VydmljZTogQmlsbHBheU1hbmFnZVBheWVlU3RhdGVTZXJ2aWNlLFxuICAgIGRpc2NhcmRNb2RhbFNlcnZpY2U6IEJpbGxwYXlEaXNjYXJkQ2hhbmdlc01vZGFsU2VydmljZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJvdXRlcjogTWFuYWdlUGF5ZWVzTmF2aWdhdGlvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZWFkb25seSBkYXRhU2VydmljZTogQmlsbHBheU1hbmFnZVBheWVlRGF0YVNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZWFkb25seSBub3RpZmljYXRpb25TZXJ2aWNlOiBOb3RpZmljYXRpb25TZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgYmlsbHBheU5vdGlmaWNhdGlvblJvdXRpbmdTZXJ2aWNlOiBCaWxscGF5Tm90aWZpY2F0aW9uUm91dGluZ1NlcnZpY2UsXG4gICkge1xuICAgIHN1cGVyKHJvdXRlLCBzdGF0ZVNlcnZpY2UsIGRpc2NhcmRNb2RhbFNlcnZpY2UsIGNvbmZpZyk7XG4gIH1cblxuICBzdWJtaXRQYXllZShpZDogc3RyaW5nLCBwYXllZTogRWxlY3Ryb25pY1BheWVlRm9ybSkge1xuICAgIHRoaXMucGF5ZWVTdWJtaXQkLm5leHQoe1xuICAgICAgbWVyY2hhbnRJRDogaWQsXG4gICAgICAuLi5wYXllZSxcbiAgICB9KTtcbiAgfVxuXG4gIG5hdmlnYXRlQmFjayhpZDogc3RyaW5nKSB7XG4gICAgdGhpcy5yb3V0ZXIubmF2aWdhdGVUb0VsZWN0cm9uaWNQYXllZUZvcm0oaWQsIHsgcXVlcnlQYXJhbXNIYW5kbGluZzogJ3ByZXNlcnZlJyB9KTtcbiAgfVxuXG4gIG5hdmlnYXRlVG9QYXllZSgpIHtcbiAgICB0aGlzLmJpbGxwYXlOb3RpZmljYXRpb25Sb3V0aW5nU2VydmljZS5uYXZpZ2F0ZVRvUGF5ZWVzKCk7XG4gIH1cblxuICBuYXZpZ2F0ZVRvTmV3UGF5bWVudCgpIHtcbiAgICB0aGlzLmJpbGxwYXlOb3RpZmljYXRpb25Sb3V0aW5nU2VydmljZS5uYXZpZ2F0ZVRvTmV3UGF5bWVudCh0aGlzLnN1Y2Nlc3NmdWxQYXllZUlkKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBvblN1Ym1pdFBheWVlKHBheWVlOiBQb3N0RWxlY3Ryb25pY1JlcXVlc3RQYXllZSkge1xuICAgIHRoaXMuZGF0YVNlcnZpY2UuYWRkRWxlY3Ryb25pY1BheWVlKHBheWVlKS5zdWJzY3JpYmUoXG4gICAgICBiaWxsUGF5UHV0UG9zdFJlc3BvbnNlID0+IHtcbiAgICAgICAgdGhpcy5zdWNjZXNzZnVsUGF5ZWVJZCA9IGJpbGxQYXlQdXRQb3N0UmVzcG9uc2UuaWQ7XG4gICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlVG9QYXllZUxpc3QoKTtcbiAgICAgICAgdGhpcy5ub3RpZmljYXRpb25TZXJ2aWNlLnNob3dOb3RpZmljYXRpb24oe1xuICAgICAgICAgIGhlYWRlcjogdGhpcy5ub3RpZmljYXRpb25IZWFkZXJUZW1wbGF0ZSxcbiAgICAgICAgICBtZXNzYWdlOiB0aGlzLm5vdGlmaWNhdGlvbk1lc3NhZ2VUZW1wbGF0ZSxcbiAgICAgICAgICBtb2RpZmllcjogJ3N1Y2Nlc3MnLFxuICAgICAgICAgIHR0bDogdGhpcy5kaXNtaXNzVGltZW91dCxcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgKHsgZXJyb3IgfSkgPT4ge1xuICAgICAgICBjb25zdCB7IGhlYWRlciwgbWVzc2FnZSB9ID0gdGhpcy5tYXBFcnJvck5vdGlmaWNhdGlvbkNvbnRlbnQoZXJyb3I/LmVycm9ycyk7XG4gICAgICAgIHRoaXMubm90aWZpY2F0aW9uU2VydmljZS5zaG93Tm90aWZpY2F0aW9uKHtcbiAgICAgICAgICBoZWFkZXIsXG4gICAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgICBtb2RpZmllcjogJ2Vycm9yJyxcbiAgICAgICAgICB0dGw6IHRoaXMuZGlzbWlzc1RpbWVvdXQsXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBtYXBFcnJvck5vdGlmaWNhdGlvbkNvbnRlbnQoZXJyb3JzOiBFcnJvckl0ZW1bXSA9IFtdKTogeyBoZWFkZXI6IHN0cmluZzsgbWVzc2FnZTogc3RyaW5nIH0ge1xuICAgIGlmIChlcnJvcnMuZmluZChlcnJvciA9PiBlcnJvci5rZXkgPT09ICdiaWxscGF5LmFwaS5wYXllZUFscmVhZHlFeGlzdHMnKSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaGVhZGVyOiAkbG9jYWxpemVgOkBAYmlsbHBheS5hZGQtZS1wYXllZS5hbHJlYWR5RXhpc3QtZXJyb3Itbm90aWZpY2F0aW9uLmhlYWRlcjpGYWlsZWQgdG8gYWRkIGEgbmV3IHBheWVlYCxcbiAgICAgICAgbWVzc2FnZTogJGxvY2FsaXplYDpAQGJpbGxwYXkuYWRkLWUtcGF5ZWUuYWxyZWFkeUV4aXN0LWVycm9yLW5vdGlmaWNhdGlvbi5oZWFkZXI6VGhlIHBheWVlIGNvdWxkIG5vdCBiZSBhZGRlZCBiZWNhdXNlIGl0IGFscmVhZHkgZXhpc3RzLmAsXG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBoZWFkZXI6ICRsb2NhbGl6ZWA6QEBiaWxscGF5LmFkZC1lLXBheWVlLmRlZmF1bHQtZXJyb3Itbm90aWZpY2F0aW9uLmhlYWRlcjpTb21ldGhpbmcgd2VudCB3cm9uZ2AsXG4gICAgICAgIG1lc3NhZ2U6ICRsb2NhbGl6ZWA6QEBiaWxscGF5LmFkZC1lLXBheWVlLmRlZmF1bHQtZXJyb3Itbm90aWZpY2F0aW9uLmhlYWRlcjpXZSB3ZXJlIHVuYWJsZSB0byBwcm9jZWVkLiBQbGVhc2UgdHJ5IGFnYWluLmAsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZVRvUGF5ZWVMaXN0KCk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJ7IHBheWVlOiBwYXllZSQgfCBhc3luYywgaWQ6IGlkJCB8IGFzeW5jIH0gYXMgY29udGV4dFwiPlxuICA8ZGl2IGNsYXNzPVwiY2FyZCBjYXJkLWxnXCI+XG4gICAgPHNlY3Rpb24gY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICAgIDxiYi1iaWxscGF5LWVsZWN0cm9uaWMtcGF5ZWUtcmV2aWV3IFtwYXllZV09XCJjb250ZXh0LnBheWVlXCI+IDwvYmItYmlsbHBheS1lbGVjdHJvbmljLXBheWVlLXJldmlldz5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1idXR0b24tYmFyIGJiLWJ1dHRvbi1iYXItLXJldmVyc2VcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGJiQnV0dG9uXG4gICAgICAgICAgZGF0YS1yb2xlPVwiYWRkLXBheWVlLWJ1dHRvblwiXG4gICAgICAgICAgaTE4bj1cIkxhYmVsIGZvciBidXR0b258RWxlY3Ryb25pYyBwYXllZSBjb250aW51ZSBidXR0b25AQGJpbGxwYXktY3JlYXRlLWVsZWN0cm9uaWMtcGF5ZWUtcmV2aWV3LmFkZC1wYXllZVwiXG4gICAgICAgICAgKGNsaWNrKT1cInN1Ym1pdFBheWVlKGNvbnRleHQuaWQsIGNvbnRleHQucGF5ZWUpXCJcbiAgICAgICAgICBjbGFzcz1cImJiLWJ1dHRvbi1iYXJfX2J1dHRvblwiXG4gICAgICAgID5cbiAgICAgICAgICBBZGQgcGF5ZWVcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBiYkJ1dHRvblxuICAgICAgICAgIGRhdGEtcm9sZT1cImJhY2stYnV0dG9uXCJcbiAgICAgICAgICBpMThuPVwiTGFiZWwgZm9yIGJ1dHRvbnxFZGl0IGJ1dHRvbkBAYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS1yZXZpZXcuZWRpdC1wYXllZVwiXG4gICAgICAgICAgKGNsaWNrKT1cIm5hdmlnYXRlQmFjayhjb250ZXh0LmlkKVwiXG4gICAgICAgICAgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b25cIlxuICAgICAgICAgIGNvbG9yPVwic2Vjb25kYXJ5XCJcbiAgICAgICAgPlxuICAgICAgICAgIEVkaXRcbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBiYkJ1dHRvblxuICAgICAgICAgIGRhdGEtcm9sZT1cImNhbmNlbC1idXR0b25cIlxuICAgICAgICAgIGNvbG9yPVwibGlua1wiXG4gICAgICAgICAgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b24gYmItYnV0dG9uLWJhcl9fYnV0dG9uLS1hY3Jvc3NcIlxuICAgICAgICAgIChjbGljayk9XCJjYW5jZWwoKVwiXG4gICAgICAgICAgaTE4bj1cIkxhYmVsIGZvciBidXR0b258Q2FuY2VsIGJ1dHRvbkBAYmlsbHBheS1jcmVhdGUtZWxlY3Ryb25pYy1wYXllZS1yZXZpZXcuY2FuY2VsLXBheWVlXCJcbiAgICAgICAgPlxuICAgICAgICAgIENhbmNlbFxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvc2VjdGlvbj5cbiAgPC9kaXY+XG5cbiAgPGJiLWJpbGxwYXktY2FuY2VsLW5ldy1wYXllZS1tb2RhbFxuICAgICpuZ0lmPVwiaXNEaXNjYXJkTW9kYWxPcGVuXCJcbiAgICAocmVzb2x2ZSk9XCJvbk1vZGFsUmVzb2x2ZSgkZXZlbnQpXCJcbiAgPjwvYmItYmlsbHBheS1jYW5jZWwtbmV3LXBheWVlLW1vZGFsPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSAqbmdJZj1cInBheWVlJCB8IGFzeW5jIGFzIHBheWVlXCIgI25vdGlmaWNhdGlvbk1lc3NhZ2U+XG4gIDxzcGFuXG4gICAgZGF0YS1yb2xlPVwibm90aWZpY2F0aW9uLW1lc3NhZ2VcIlxuICAgIGkxOG49XCJcbiAgICAgIFBheWVlIG5vdGlmaWNhdGlvbiBtZXNzYWdlfFBheWVlIGhhcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseVxuICAgICAgbm90aWZpY2F0aW9uQEBiaWxscGF5LWNyZWF0ZS1lbGVjdHJvbmljLXBheWVlLXJldmlldy5ub3RpZmljYXRpb24ubWVzc2FnZVwiXG4gICAgPlRoZSBwYXllZSDigJh7eyAocGF5ZWUubmlja05hbWUgJiYgcGF5ZWUubmlja05hbWUgKyAnICgnICsgcGF5ZWUubmFtZSArICcpJykgfHwgcGF5ZWUubmFtZSB9feKAmCBoYXMgYmVlbiBjcmVhdGVkXG4gICAgc3VjY2Vzc2Z1bGx5XG4gIDwvc3Bhbj5cblxuICA8ZGl2IGNsYXNzPVwiYmItYnV0dG9uLWJhclwiPlxuICAgIDxidXR0b25cbiAgICAgIGJiQnV0dG9uXG4gICAgICBkYXRhLXJvbGU9XCJub3RpZmljYXRpb24tcGF5ZWUtYnV0dG9uXCJcbiAgICAgIGNsYXNzPVwiYmItYnV0dG9uLWJhcl9fYnV0dG9uXCJcbiAgICAgIGkxOG49XCJub3RpZmljYXRpb24gYnV0dG9ufFBheSBidXR0b25AQGJpbGxwYXktY3JlYXRlLWVsZWN0cm9uaWMtcGF5ZWUtcmV2aWV3Lm5vdGlmaWNhdGlvbi5wYXktYnV0dG9uXCJcbiAgICAgIChjbGljayk9XCJuYXZpZ2F0ZVRvTmV3UGF5bWVudCgpXCJcbiAgICA+XG4gICAgICBQYXlcbiAgICA8L2J1dHRvbj5cbiAgICA8YnV0dG9uXG4gICAgICBiYkJ1dHRvblxuICAgICAgZGF0YS1yb2xlPVwibm90aWZpY2F0aW9uLWFkZC1wYXllZS1idXR0b25cIlxuICAgICAgY29sb3I9XCJzZWNvbmRhcnlcIlxuICAgICAgY2xhc3M9XCJiYi1idXR0b24tYmFyX19idXR0b25cIlxuICAgICAgaTE4bj1cIm5vdGlmaWNhdGlvbiBidXR0b258QWRkIGFub3RoZXIgcGF5ZWVAQGJpbGxwYXktY3JlYXRlLWVsZWN0cm9uaWMtcGF5ZWUtcmV2aWV3Lm5vdGlmaWNhdGlvbi5hZGQtYnV0dG9uXCJcbiAgICAgIChjbGljayk9XCJuYXZpZ2F0ZVRvUGF5ZWUoKVwiXG4gICAgPlxuICAgICAgQWRkIGFub3RoZXIgcGF5ZWVcbiAgICA8L2J1dHRvbj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI25vdGlmaWNhdGlvbkhlYWRlcj5cbiAgPHNwYW5cbiAgICBjbGFzcz1cInRleHQtZGFya1wiXG4gICAgaTE4bj1cIlxuICAgICAgUGF5ZWUgbm90aWZpY2F0aW9uIGhlYWRlcnxQYXllZSBjcmVhdGVkIHN1Y2Nlc3Mgbm90aWZpY2F0aW9uXG4gICAgICBoZWFkZXJAQGJpbGxwYXktY3JlYXRlLWVsZWN0cm9uaWMtcGF5ZWUtcmV2aWV3Lm5vdGlmaWNhdGlvbi5oZWFkZXJcIlxuICAgID5QYXllZSBjcmVhdGVkPC9zcGFuXG4gID5cbjwvbmctdGVtcGxhdGU+XG4iXX0=