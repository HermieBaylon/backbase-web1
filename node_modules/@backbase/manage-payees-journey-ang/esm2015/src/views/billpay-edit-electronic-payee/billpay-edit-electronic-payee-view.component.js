import { Component } from '@angular/core';
import { of } from 'rxjs';
import { catchError, map, switchMap } from 'rxjs/operators';
import { BillpayDiscardChangesModalService } from '@backbase/billpay-journeys-common';
import { BaseElectronicPayeePageDirective } from '../../model/base-electronic-payee-page.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../services/billpay-manage-payee-state.service";
import * as i3 from "@backbase/billpay-journeys-common";
import * as i4 from "../../services/manage-payees-navigation.service";
import * as i5 from "../../services/billpay-manage-payee-data.service";
import * as i6 from "../../components/add-payee/billpay-electronic-payee-form/billpay-electronic-payee-form.component";
import * as i7 from "@backbase/ui-ang/loading-indicator";
import * as i8 from "@backbase/ui-ang/empty-state";
import * as i9 from "../../components/add-payee/billpay-cancel-edit-payee-modal/billpay-cancel-edit-payee-modal.component";
import * as i10 from "@angular/common";
export class BillpayEditElectronicPayeeViewComponent extends BaseElectronicPayeePageDirective {
    /** @internal */
    constructor(route, stateService, discardModalService, router, dataService, cd) {
        super(route, stateService, discardModalService);
        this.router = router;
        this.dataService = dataService;
        this.cd = cd;
        this.hasLoadingError = false;
        this.payee$ = this.initializePayee();
    }
    onFormSubmitted(payee) {
        this.stateService.setElectronicPayee(payee);
        this.id$.subscribe(id => this.router.navigateToEditElectronicPayeeReview(id));
    }
    initializePayee() {
        const payee$ = this.id$.pipe(switchMap(id => this.dataService.getElectronicPayee(id)), map(payee => this.stateService.electronicGetResponseToForm(payee)), catchError(() => {
            this.hasLoadingError = true;
            this.cd.detectChanges();
            return of(undefined);
        }));
        return this.payeeState$.pipe(switchMap(state => (state ? of(state) : payee$)));
    }
    onFormCanceled() {
        this.router.navigateToPayeeList();
    }
}
BillpayEditElectronicPayeeViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayEditElectronicPayeeViewComponent, deps: [{ token: i1.ActivatedRoute }, { token: i2.BillpayManagePayeeStateService }, { token: i3.BillpayDiscardChangesModalService }, { token: i4.ManagePayeesNavigationService }, { token: i5.BillpayManagePayeeDataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
BillpayEditElectronicPayeeViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: BillpayEditElectronicPayeeViewComponent, selector: "ng-component", providers: [BillpayDiscardChangesModalService], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"!hasLoadingError; else errorState\">\n  <ng-container *ngIf=\"payee$ | async as payee; else loadingState\">\n    <bb-billpay-electronic-payee-form\n      [payee]=\"payee\"\n      [zipCodeRequired]=\"false\"\n      [backButtonShown]=\"false\"\n      (formSubmitted)=\"onFormSubmitted($event)\"\n      (formCanceled)=\"onFormCanceled()\"\n      (valueChanged)=\"onFormValueChanged()\"\n    >\n    </bb-billpay-electronic-payee-form>\n  </ng-container>\n</ng-container>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"> </bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <bb-empty-state-ui\n    data-role=\"error-state\"\n    iconSize=\"xxl\"\n    iconModifier=\"error\"\n    title=\"Payee is not loading\"\n    i18n-title=\"Payee is not loading title@@billpay-manage-payee.edit-electronic.error-state.title\"\n    subtitle=\"Try to reload the page or contact support\"\n    i18n-subtitle=\"Payments list is not loading subtitle@@billpay-manage-payee.edit-electronic.error-state.subtitle\"\n  >\n  </bb-empty-state-ui>\n</ng-template>\n\n<bb-billpay-cancel-edit-payee-modal\n  *ngIf=\"isDiscardModalOpen\"\n  (resolve)=\"onModalResolve($event)\"\n></bb-billpay-cancel-edit-payee-modal>\n", components: [{ type: i6.BillpayElectronicPayeeFormComponent, selector: "bb-billpay-electronic-payee-form", inputs: ["payee", "zipCodeRequired", "backButtonShown"], outputs: ["formSubmitted", "formCanceled", "backToSearch", "valueChanged"] }, { type: i7.LoadingIndicatorComponent, selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }, { type: i8.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }, { type: i9.BillpayCancelEditPayeeModalComponent, selector: "bb-billpay-cancel-edit-payee-modal", outputs: ["resolve"] }], directives: [{ type: i10.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i10.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BillpayEditElectronicPayeeViewComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: './billpay-edit-electronic-payee-view.component.html',
                    providers: [BillpayDiscardChangesModalService],
                }]
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.BillpayManagePayeeStateService }, { type: i3.BillpayDiscardChangesModalService }, { type: i4.ManagePayeesNavigationService }, { type: i5.BillpayManagePayeeDataService }, { type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlsbHBheS1lZGl0LWVsZWN0cm9uaWMtcGF5ZWUtdmlldy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wYXllZXMtam91cm5leS9zcmMvdmlld3MvYmlsbHBheS1lZGl0LWVsZWN0cm9uaWMtcGF5ZWUvYmlsbHBheS1lZGl0LWVsZWN0cm9uaWMtcGF5ZWUtdmlldy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wYXllZXMtam91cm5leS9zcmMvdmlld3MvYmlsbHBheS1lZGl0LWVsZWN0cm9uaWMtcGF5ZWUvYmlsbHBheS1lZGl0LWVsZWN0cm9uaWMtcGF5ZWUtdmlldy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXFCLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUc3RCxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBSzVELE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBRXRGLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLDhDQUE4QyxDQUFDOzs7Ozs7Ozs7Ozs7QUFNaEcsTUFBTSxPQUFPLHVDQUF3QyxTQUFRLGdDQUFnQztJQUkzRixnQkFBZ0I7SUFDaEIsWUFDRSxLQUFxQixFQUNyQixZQUE0QyxFQUM1QyxtQkFBc0QsRUFDckMsTUFBcUMsRUFDckMsV0FBMEMsRUFDMUMsRUFBcUI7UUFFdEMsS0FBSyxDQUFDLEtBQUssRUFBRSxZQUFZLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztRQUovQixXQUFNLEdBQU4sTUFBTSxDQUErQjtRQUNyQyxnQkFBVyxHQUFYLFdBQVcsQ0FBK0I7UUFDMUMsT0FBRSxHQUFGLEVBQUUsQ0FBbUI7UUFUeEMsb0JBQWUsR0FBRyxLQUFLLENBQUM7UUFZdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVELGVBQWUsQ0FBQyxLQUFpQztRQUMvQyxJQUFJLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQ0FBbUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7SUFFTyxlQUFlO1FBQ3JCLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUMxQixTQUFTLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQ3hELEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsMkJBQTJCLENBQUMsS0FBSyxDQUFDLENBQUMsRUFDbEUsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1lBQzVCLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUM7WUFDeEIsT0FBTyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQ0gsQ0FBQztRQUVGLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pGLENBQUM7SUFFRCxjQUFjO1FBQ1osSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0lBQ3BDLENBQUM7O3FJQXRDVSx1Q0FBdUM7eUhBQXZDLHVDQUF1Qyx1Q0FGdkMsQ0FBQyxpQ0FBaUMsQ0FBQyxpRENmaEQsNHVDQW1DQTs0RkRsQmEsdUNBQXVDO2tCQUpuRCxTQUFTO21CQUFDO29CQUNULFdBQVcsRUFBRSxxREFBcUQ7b0JBQ2xFLFNBQVMsRUFBRSxDQUFDLGlDQUFpQyxDQUFDO2lCQUMvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFBvc3RFbGVjdHJvbmljUmVxdWVzdFBheWVlIH0gZnJvbSAnQGJhY2tiYXNlL2RhdGEtYW5nL2JpbGxwYXknO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGNhdGNoRXJyb3IsIG1hcCwgc3dpdGNoTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQgeyBCaWxscGF5TWFuYWdlUGF5ZWVTdGF0ZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9iaWxscGF5LW1hbmFnZS1wYXllZS1zdGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IE1hbmFnZVBheWVlc05hdmlnYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbWFuYWdlLXBheWVlcy1uYXZpZ2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmlsbHBheU1hbmFnZVBheWVlRGF0YVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9iaWxscGF5LW1hbmFnZS1wYXllZS1kYXRhLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmlsbHBheURpc2NhcmRDaGFuZ2VzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnQGJhY2tiYXNlL2JpbGxwYXktam91cm5leXMtY29tbW9uJztcbmltcG9ydCB7IEVsZWN0cm9uaWNQYXllZUZvcm0gfSBmcm9tICcuLi8uLi9tb2RlbCc7XG5pbXBvcnQgeyBCYXNlRWxlY3Ryb25pY1BheWVlUGFnZURpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL21vZGVsL2Jhc2UtZWxlY3Ryb25pYy1wYXllZS1wYWdlLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiAnLi9iaWxscGF5LWVkaXQtZWxlY3Ryb25pYy1wYXllZS12aWV3LmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbQmlsbHBheURpc2NhcmRDaGFuZ2VzTW9kYWxTZXJ2aWNlXSxcbn0pXG5leHBvcnQgY2xhc3MgQmlsbHBheUVkaXRFbGVjdHJvbmljUGF5ZWVWaWV3Q29tcG9uZW50IGV4dGVuZHMgQmFzZUVsZWN0cm9uaWNQYXllZVBhZ2VEaXJlY3RpdmUge1xuICByZWFkb25seSBwYXllZSQ6IE9ic2VydmFibGU8RWxlY3Ryb25pY1BheWVlRm9ybSB8IHVuZGVmaW5lZD47XG4gIGhhc0xvYWRpbmdFcnJvciA9IGZhbHNlO1xuXG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxuICAgIHN0YXRlU2VydmljZTogQmlsbHBheU1hbmFnZVBheWVlU3RhdGVTZXJ2aWNlLFxuICAgIGRpc2NhcmRNb2RhbFNlcnZpY2U6IEJpbGxwYXlEaXNjYXJkQ2hhbmdlc01vZGFsU2VydmljZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHJvdXRlcjogTWFuYWdlUGF5ZWVzTmF2aWdhdGlvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZWFkb25seSBkYXRhU2VydmljZTogQmlsbHBheU1hbmFnZVBheWVlRGF0YVNlcnZpY2UsXG4gICAgcHJpdmF0ZSByZWFkb25seSBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICkge1xuICAgIHN1cGVyKHJvdXRlLCBzdGF0ZVNlcnZpY2UsIGRpc2NhcmRNb2RhbFNlcnZpY2UpO1xuICAgIHRoaXMucGF5ZWUkID0gdGhpcy5pbml0aWFsaXplUGF5ZWUoKTtcbiAgfVxuXG4gIG9uRm9ybVN1Ym1pdHRlZChwYXllZTogUG9zdEVsZWN0cm9uaWNSZXF1ZXN0UGF5ZWUpIHtcbiAgICB0aGlzLnN0YXRlU2VydmljZS5zZXRFbGVjdHJvbmljUGF5ZWUocGF5ZWUpO1xuICAgIHRoaXMuaWQkLnN1YnNjcmliZShpZCA9PiB0aGlzLnJvdXRlci5uYXZpZ2F0ZVRvRWRpdEVsZWN0cm9uaWNQYXllZVJldmlldyhpZCkpO1xuICB9XG5cbiAgcHJpdmF0ZSBpbml0aWFsaXplUGF5ZWUoKTogT2JzZXJ2YWJsZTxFbGVjdHJvbmljUGF5ZWVGb3JtIHwgdW5kZWZpbmVkPiB7XG4gICAgY29uc3QgcGF5ZWUkID0gdGhpcy5pZCQucGlwZShcbiAgICAgIHN3aXRjaE1hcChpZCA9PiB0aGlzLmRhdGFTZXJ2aWNlLmdldEVsZWN0cm9uaWNQYXllZShpZCkpLFxuICAgICAgbWFwKHBheWVlID0+IHRoaXMuc3RhdGVTZXJ2aWNlLmVsZWN0cm9uaWNHZXRSZXNwb25zZVRvRm9ybShwYXllZSkpLFxuICAgICAgY2F0Y2hFcnJvcigoKSA9PiB7XG4gICAgICAgIHRoaXMuaGFzTG9hZGluZ0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICAgIHJldHVybiBvZih1bmRlZmluZWQpO1xuICAgICAgfSksXG4gICAgKTtcblxuICAgIHJldHVybiB0aGlzLnBheWVlU3RhdGUkLnBpcGUoc3dpdGNoTWFwKHN0YXRlID0+IChzdGF0ZSA/IG9mKHN0YXRlKSA6IHBheWVlJCkpKTtcbiAgfVxuXG4gIG9uRm9ybUNhbmNlbGVkKCkge1xuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlVG9QYXllZUxpc3QoKTtcbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFoYXNMb2FkaW5nRXJyb3I7IGVsc2UgZXJyb3JTdGF0ZVwiPlxuICA8bmctY29udGFpbmVyICpuZ0lmPVwicGF5ZWUkIHwgYXN5bmMgYXMgcGF5ZWU7IGVsc2UgbG9hZGluZ1N0YXRlXCI+XG4gICAgPGJiLWJpbGxwYXktZWxlY3Ryb25pYy1wYXllZS1mb3JtXG4gICAgICBbcGF5ZWVdPVwicGF5ZWVcIlxuICAgICAgW3ppcENvZGVSZXF1aXJlZF09XCJmYWxzZVwiXG4gICAgICBbYmFja0J1dHRvblNob3duXT1cImZhbHNlXCJcbiAgICAgIChmb3JtU3VibWl0dGVkKT1cIm9uRm9ybVN1Ym1pdHRlZCgkZXZlbnQpXCJcbiAgICAgIChmb3JtQ2FuY2VsZWQpPVwib25Gb3JtQ2FuY2VsZWQoKVwiXG4gICAgICAodmFsdWVDaGFuZ2VkKT1cIm9uRm9ybVZhbHVlQ2hhbmdlZCgpXCJcbiAgICA+XG4gICAgPC9iYi1iaWxscGF5LWVsZWN0cm9uaWMtcGF5ZWUtZm9ybT5cbiAgPC9uZy1jb250YWluZXI+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlICNsb2FkaW5nU3RhdGU+XG4gIDxiYi1sb2FkaW5nLWluZGljYXRvci11aSBsb2FkZXJTaXplPVwibGdcIj4gPC9iYi1sb2FkaW5nLWluZGljYXRvci11aT5cbjwvbmctdGVtcGxhdGU+XG5cbjxuZy10ZW1wbGF0ZSAjZXJyb3JTdGF0ZT5cbiAgPGJiLWVtcHR5LXN0YXRlLXVpXG4gICAgZGF0YS1yb2xlPVwiZXJyb3Itc3RhdGVcIlxuICAgIGljb25TaXplPVwieHhsXCJcbiAgICBpY29uTW9kaWZpZXI9XCJlcnJvclwiXG4gICAgdGl0bGU9XCJQYXllZSBpcyBub3QgbG9hZGluZ1wiXG4gICAgaTE4bi10aXRsZT1cIlBheWVlIGlzIG5vdCBsb2FkaW5nIHRpdGxlQEBiaWxscGF5LW1hbmFnZS1wYXllZS5lZGl0LWVsZWN0cm9uaWMuZXJyb3Itc3RhdGUudGl0bGVcIlxuICAgIHN1YnRpdGxlPVwiVHJ5IHRvIHJlbG9hZCB0aGUgcGFnZSBvciBjb250YWN0IHN1cHBvcnRcIlxuICAgIGkxOG4tc3VidGl0bGU9XCJQYXltZW50cyBsaXN0IGlzIG5vdCBsb2FkaW5nIHN1YnRpdGxlQEBiaWxscGF5LW1hbmFnZS1wYXllZS5lZGl0LWVsZWN0cm9uaWMuZXJyb3Itc3RhdGUuc3VidGl0bGVcIlxuICA+XG4gIDwvYmItZW1wdHktc3RhdGUtdWk+XG48L25nLXRlbXBsYXRlPlxuXG48YmItYmlsbHBheS1jYW5jZWwtZWRpdC1wYXllZS1tb2RhbFxuICAqbmdJZj1cImlzRGlzY2FyZE1vZGFsT3BlblwiXG4gIChyZXNvbHZlKT1cIm9uTW9kYWxSZXNvbHZlKCRldmVudClcIlxuPjwvYmItYmlsbHBheS1jYW5jZWwtZWRpdC1wYXllZS1tb2RhbD5cbiJdfQ==