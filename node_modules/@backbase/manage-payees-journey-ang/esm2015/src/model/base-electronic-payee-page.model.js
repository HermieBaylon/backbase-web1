import { HostListener, Directive } from '@angular/core';
import { of, Subject } from 'rxjs';
import { map, shareReplay, switchMap, take, takeUntil, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../services/billpay-manage-payee-state.service";
import * as i3 from "@backbase/billpay-journeys-common";
export class BaseElectronicPayeePageDirective {
    /** @internal */
    constructor(route, stateService, discardModalService) {
        this.route = route;
        this.stateService = stateService;
        this.discardModalService = discardModalService;
        this.isFormTouched = false;
        this.destroy$ = new Subject();
        this.isFindPayeeModal = false;
        this.id$ = this.route.paramMap.pipe(take(1), map(params => params.get('id') || ''));
        this.payeeState$ = this.stateService.electronicPayeeFormState.pipe(take(1), shareReplay(1));
    }
    onWindowUnload($event) {
        this.payeeState$.subscribe(state => {
            if ((state || this.isFormTouched) && !this.isDiscardModalOpen) {
                $event.returnValue = true;
            }
        });
    }
    get isDiscardModalOpen() {
        return this.discardModalService.isDiscardModalOpen;
    }
    onFormValueChanged() {
        this.isFormTouched = true;
    }
    openModal() {
        const openModal = () => this.discardModalService
            .openModal()
            .pipe(tap(isResolved => isResolved && this.stateService.resetElectronicPayee()));
        return this.payeeState$.pipe(switchMap(payeeState => (payeeState || this.isFormTouched ? openModal() : of(true))), takeUntil(this.destroy$));
    }
    onModalResolve(resolvedWith) {
        this.isFindPayeeModal = false;
        this.discardModalService.onModalResolve(resolvedWith);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
}
BaseElectronicPayeePageDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BaseElectronicPayeePageDirective, deps: [{ token: i1.ActivatedRoute }, { token: i2.BillpayManagePayeeStateService }, { token: i3.BillpayDiscardChangesModalService }], target: i0.ɵɵFactoryTarget.Directive });
BaseElectronicPayeePageDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: BaseElectronicPayeePageDirective, host: { listeners: { "window:beforeunload": "onWindowUnload($event)" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: BaseElectronicPayeePageDirective, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.BillpayManagePayeeStateService }, { type: i3.BillpayDiscardChangesModalService }]; }, propDecorators: { onWindowUnload: [{
                type: HostListener,
                args: ['window:beforeunload', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1lbGVjdHJvbmljLXBheWVlLXBhZ2UubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hbmFnZS1wYXllZXMtam91cm5leS9zcmMvbW9kZWwvYmFzZS1lbGVjdHJvbmljLXBheWVlLXBhZ2UubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBYSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNbkUsT0FBTyxFQUFjLEVBQUUsRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0MsT0FBTyxFQUFFLEdBQUcsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0FBTW5GLE1BQU0sT0FBZ0IsZ0NBQWdDO0lBT3BELGdCQUFnQjtJQUNoQixZQUNxQixLQUFxQixFQUNyQixZQUE0QyxFQUM1QyxtQkFBc0Q7UUFGdEQsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFDckIsaUJBQVksR0FBWixZQUFZLENBQWdDO1FBQzVDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBbUM7UUFWakUsa0JBQWEsR0FBRyxLQUFLLENBQUM7UUFHYixhQUFRLEdBQUcsSUFBSSxPQUFPLEVBQVEsQ0FBQztRQUNsRCxxQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFRdkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQ2pDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDUCxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUN0QyxDQUFDO1FBRUYsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUYsQ0FBQztJQUdELGNBQWMsQ0FBQyxNQUF5QjtRQUN0QyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNqQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRTtnQkFDN0QsTUFBTSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7YUFDM0I7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxJQUFJLGtCQUFrQjtRQUNwQixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxrQkFBa0IsQ0FBQztJQUNyRCxDQUFDO0lBRUQsa0JBQWtCO1FBQ2hCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO0lBQzVCLENBQUM7SUFFRCxTQUFTO1FBQ1AsTUFBTSxTQUFTLEdBQUcsR0FBRyxFQUFFLENBQ3JCLElBQUksQ0FBQyxtQkFBbUI7YUFDckIsU0FBUyxFQUFFO2FBQ1gsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLG9CQUFvQixFQUFFLENBQUMsQ0FBQyxDQUFDO1FBRXJGLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQzFCLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUNwRixTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUN6QixDQUFDO0lBQ0osQ0FBQztJQUVELGNBQWMsQ0FBQyxZQUFxQjtRQUNsQyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO1FBQzlCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDM0IsQ0FBQzs7OEhBMURtQixnQ0FBZ0M7a0hBQWhDLGdDQUFnQzs0RkFBaEMsZ0NBQWdDO2tCQURyRCxTQUFTO2tNQXVCUixjQUFjO3NCQURiLFlBQVk7dUJBQUMscUJBQXFCLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIb3N0TGlzdGVuZXIsIE9uRGVzdHJveSwgRGlyZWN0aXZlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQge1xuICBCaWxscGF5RGlzY2FyZENoYW5nZXNGb3JtQ29tcG9uZW50LFxuICBCaWxscGF5RGlzY2FyZENoYW5nZXNNb2RhbFNlcnZpY2UsXG59IGZyb20gJ0BiYWNrYmFzZS9iaWxscGF5LWpvdXJuZXlzLWNvbW1vbic7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwLCBzaGFyZVJlcGxheSwgc3dpdGNoTWFwLCB0YWtlLCB0YWtlVW50aWwsIHRhcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHsgQmlsbHBheU1hbmFnZVBheWVlU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvYmlsbHBheS1tYW5hZ2UtcGF5ZWUtc3RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBFbGVjdHJvbmljUGF5ZWVGb3JtIH0gZnJvbSAnLi9wYXllZS1mb3JtLm1vZGVsJztcblxuQERpcmVjdGl2ZSgpXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQmFzZUVsZWN0cm9uaWNQYXllZVBhZ2VEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIEJpbGxwYXlEaXNjYXJkQ2hhbmdlc0Zvcm1Db21wb25lbnQge1xuICBwcm90ZWN0ZWQgaXNGb3JtVG91Y2hlZCA9IGZhbHNlO1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgcGF5ZWVTdGF0ZSQ6IE9ic2VydmFibGU8RWxlY3Ryb25pY1BheWVlRm9ybSB8IHVuZGVmaW5lZD47XG4gIHByb3RlY3RlZCByZWFkb25seSBpZCQ6IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgcHJvdGVjdGVkIHJlYWRvbmx5IGRlc3Ryb3kkID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcbiAgaXNGaW5kUGF5ZWVNb2RhbCA9IGZhbHNlO1xuXG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCByZWFkb25seSByb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IHN0YXRlU2VydmljZTogQmlsbHBheU1hbmFnZVBheWVlU3RhdGVTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCByZWFkb25seSBkaXNjYXJkTW9kYWxTZXJ2aWNlOiBCaWxscGF5RGlzY2FyZENoYW5nZXNNb2RhbFNlcnZpY2UsXG4gICkge1xuICAgIHRoaXMuaWQkID0gdGhpcy5yb3V0ZS5wYXJhbU1hcC5waXBlKFxuICAgICAgdGFrZSgxKSxcbiAgICAgIG1hcChwYXJhbXMgPT4gcGFyYW1zLmdldCgnaWQnKSB8fCAnJyksXG4gICAgKTtcblxuICAgIHRoaXMucGF5ZWVTdGF0ZSQgPSB0aGlzLnN0YXRlU2VydmljZS5lbGVjdHJvbmljUGF5ZWVGb3JtU3RhdGUucGlwZSh0YWtlKDEpLCBzaGFyZVJlcGxheSgxKSk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCd3aW5kb3c6YmVmb3JldW5sb2FkJywgWyckZXZlbnQnXSlcbiAgb25XaW5kb3dVbmxvYWQoJGV2ZW50OiBCZWZvcmVVbmxvYWRFdmVudCkge1xuICAgIHRoaXMucGF5ZWVTdGF0ZSQuc3Vic2NyaWJlKHN0YXRlID0+IHtcbiAgICAgIGlmICgoc3RhdGUgfHwgdGhpcy5pc0Zvcm1Ub3VjaGVkKSAmJiAhdGhpcy5pc0Rpc2NhcmRNb2RhbE9wZW4pIHtcbiAgICAgICAgJGV2ZW50LnJldHVyblZhbHVlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGdldCBpc0Rpc2NhcmRNb2RhbE9wZW4oKSB7XG4gICAgcmV0dXJuIHRoaXMuZGlzY2FyZE1vZGFsU2VydmljZS5pc0Rpc2NhcmRNb2RhbE9wZW47XG4gIH1cblxuICBvbkZvcm1WYWx1ZUNoYW5nZWQoKSB7XG4gICAgdGhpcy5pc0Zvcm1Ub3VjaGVkID0gdHJ1ZTtcbiAgfVxuXG4gIG9wZW5Nb2RhbCgpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICBjb25zdCBvcGVuTW9kYWwgPSAoKSA9PlxuICAgICAgdGhpcy5kaXNjYXJkTW9kYWxTZXJ2aWNlXG4gICAgICAgIC5vcGVuTW9kYWwoKVxuICAgICAgICAucGlwZSh0YXAoaXNSZXNvbHZlZCA9PiBpc1Jlc29sdmVkICYmIHRoaXMuc3RhdGVTZXJ2aWNlLnJlc2V0RWxlY3Ryb25pY1BheWVlKCkpKTtcblxuICAgIHJldHVybiB0aGlzLnBheWVlU3RhdGUkLnBpcGUoXG4gICAgICBzd2l0Y2hNYXAocGF5ZWVTdGF0ZSA9PiAocGF5ZWVTdGF0ZSB8fCB0aGlzLmlzRm9ybVRvdWNoZWQgPyBvcGVuTW9kYWwoKSA6IG9mKHRydWUpKSksXG4gICAgICB0YWtlVW50aWwodGhpcy5kZXN0cm95JCksXG4gICAgKTtcbiAgfVxuXG4gIG9uTW9kYWxSZXNvbHZlKHJlc29sdmVkV2l0aDogYm9vbGVhbikge1xuICAgIHRoaXMuaXNGaW5kUGF5ZWVNb2RhbCA9IGZhbHNlO1xuICAgIHRoaXMuZGlzY2FyZE1vZGFsU2VydmljZS5vbk1vZGFsUmVzb2x2ZShyZXNvbHZlZFdpdGgpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5kZXN0cm95JC5uZXh0KCk7XG4gICAgdGhpcy5kZXN0cm95JC5jb21wbGV0ZSgpO1xuICB9XG59XG4iXX0=