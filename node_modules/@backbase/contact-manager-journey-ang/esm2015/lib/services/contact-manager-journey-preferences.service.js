import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { ContactManagerJourneyConfigurationService } from './contact-manager-journey-config.service';
import * as i0 from "@angular/core";
import * as i1 from "./contact-manager-journey-config.service";
/**
 * Service provides the journey configuration
 *
 * @usageNotes
 *
 * ### Ensure the ContactManagerJourneyModule is imported to your component module
 *
 * ```ts
 * @NgModule({
 *   ...
 *   imports: [
 *     ...
 *     ContactManagerJourneyModule,
 *   ],
 * })
 * export class ContactJourneyBundleModule {}
 * ```
 *
 * ### Inject this service into your component
 *
 * ```ts
 * @Component({
 *   ...
 *   providers: [ContactManagerJourneyPreferencesService],
 * })
 *  export class ContactManagerJourneyModule {
 * ```
 */
export class ContactManagerJourneyPreferencesService {
    constructor(config) {
        this.config = config;
        this.newContactSubject$ = new BehaviorSubject(this.config.newContact);
        this.pageSizeSubject$ = new BehaviorSubject(this.config.pageSize);
        this.maxNavPagesSubject$ = new BehaviorSubject(this.config.maxNavPages);
        this.paginationTypeSubject$ = new BehaviorSubject(this.config.paginationType);
        this.createContactEmailSubject$ = new BehaviorSubject(this.config.createContactEmail);
        this.createContactIBANSubject$ = new BehaviorSubject(this.config.createContactIBAN);
        this.createContactAccountSubject$ = new BehaviorSubject(this.config.createContactAccount);
        this.createContactPhoneSubject$ = new BehaviorSubject(this.config.createContactPhone);
        this.notificationDismissTimeSubject$ = new BehaviorSubject(this.config.notificationDismissTime);
        this.newContact$ = this.newContactSubject$.asObservable();
        this.pageSize$ = this.pageSizeSubject$.asObservable();
        this.maxNavPages$ = this.maxNavPagesSubject$.asObservable();
        this.paginationType$ = this.paginationTypeSubject$.asObservable();
        this.createContactEmail$ = this.createContactEmailSubject$.asObservable();
        this.createContactIBAN$ = this.createContactIBANSubject$.asObservable();
        this.createContactAccount$ = this.createContactAccountSubject$.asObservable();
        this.createContactPhone$ = this.createContactPhoneSubject$.asObservable();
        this.notificationDismissTime$ = this.notificationDismissTimeSubject$.asObservable();
    }
    setNewContact(value) {
        this.newContactSubject$.next(value);
    }
    setPageSize(value) {
        this.pageSizeSubject$.next(value);
    }
    setMaxNavPages(value) {
        this.maxNavPagesSubject$.next(value);
    }
    setPaginationType(value) {
        this.paginationTypeSubject$.next(value);
    }
    setNotificationDismissTime(value) {
        this.notificationDismissTimeSubject$.next(value);
    }
    setCreateContactEmail(value) {
        this.createContactEmailSubject$.next(value);
    }
    setCreateContactIBAN(value) {
        this.createContactIBANSubject$.next(value);
    }
    setCreateContactAccount(value) {
        this.createContactAccountSubject$.next(value);
    }
    setCreateContactPhone(value) {
        this.createContactPhoneSubject$.next(value);
    }
}
/** @nocollapse */ ContactManagerJourneyPreferencesService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactManagerJourneyPreferencesService, deps: [{ token: i1.ContactManagerJourneyConfigurationService }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ ContactManagerJourneyPreferencesService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactManagerJourneyPreferencesService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ContactManagerJourneyPreferencesService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ContactManagerJourneyConfigurationService }]; } });
//# sourceMappingURL=contact-manager-journey-preferences.service.js.map