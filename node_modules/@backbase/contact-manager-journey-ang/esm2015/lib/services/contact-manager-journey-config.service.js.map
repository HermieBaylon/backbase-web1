{"version":3,"file":"contact-manager-journey-config.service.js","sourceRoot":"","sources":["../../../../../../libs/contact-manager-journey-ang/src/lib/services/contact-manager-journey-config.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;;AAyC9D,MAAM,CAAC,MAAM,uCAAuC,GAAG,IAAI,cAAc,CACvE,6CAA6C,CAC9C,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAgC;IAC/D,UAAU,EAAE,IAAI;IAChB,QAAQ,EAAE,CAAC;IACX,WAAW,EAAE,CAAC;IACd,cAAc,EAAE,cAAc,CAAC,UAAU;IACzC,uBAAuB,EAAE,IAAI;IAC7B,kBAAkB,EAAE,KAAK;IACzB,iBAAiB,EAAE,IAAI;IACvB,oBAAoB,EAAE,KAAK;IAC3B,kBAAkB,EAAE,KAAK;CAC1B,CAAC;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AAEH,MAAM,OAAO,yCAAyC;IAEpD,YAAyE,MAAmC;QAC1G,MAAM,mBAAmB,GAAyC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;QACvF,IAAI,CAAC,aAAa,mCAAQ,oBAAoB,GAAK,mBAAmB,CAAE,CAAC;IAC3E,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;IACvC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;IACrC,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;IACxC,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;IAC3C,CAAC;IAED,IAAI,uBAAuB;QACzB,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC;IACpD,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC;IAC/C,CAAC;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC;IAC9C,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC;IACjD,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC;IAC/C,CAAC;;0JAzCU,yCAAyC,kBAEpB,uCAAuC;8JAF5D,yCAAyC;4FAAzC,yCAAyC;kBADrD,UAAU;;0BAGI,QAAQ;;0BAAI,MAAM;2BAAC,uCAAuC","sourcesContent":["import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { LoadMoreMethod } from '@backbase/contact-common-ang';\n\nexport interface ContactManagerJourneyConfig {\n  /**\n   * Enable the creation of new contacts\n   */\n  newContact: boolean;\n  /**\n   * Number of contacts per page\n   */\n  pageSize: number;\n  /**\n   * Max. number of navigation pages\n   */\n  maxNavPages: number;\n  /**\n   * Type of pagination\n   */\n  paginationType: LoadMoreMethod;\n  /**\n   * Milliseconds to dismiss any notification message\n   */\n  notificationDismissTime: number;\n  /**\n   * Allow to create Contact with email\n   */\n  createContactEmail: boolean;\n  /**\n   *  Allow to create Contact with IBAN\n   */\n  createContactIBAN: boolean;\n  /**\n   * Allow to create Contact with Account Number\n   */\n  createContactAccount: boolean;\n  /**\n   * Allow to create Contact with Phone Number\n   */\n  createContactPhone: boolean;\n}\n\nexport const ContactManagerJourneyConfigurationToken = new InjectionToken<Partial<ContactManagerJourneyConfig>>(\n  'ContactManagerJourneyConfig injection token',\n);\n\nexport const defaultConfiguration: ContactManagerJourneyConfig = {\n  newContact: true,\n  pageSize: 5,\n  maxNavPages: 3,\n  paginationType: LoadMoreMethod.PAGINATION,\n  notificationDismissTime: 5000,\n  createContactEmail: false,\n  createContactIBAN: true,\n  createContactAccount: false,\n  createContactPhone: false,\n};\n/**\n * Service provides the journey configuration\n *\n * @usageNotes\n *\n * ### Ensure the ContactManagerJourneyModule is imported to your component module\n *\n * ```ts\n * @NgModule({\n *   ...\n *   imports: [\n *     ...\n *     ContactManagerJourneyModule,\n *   ],\n * })\n * export class ContactJourneyBundleModule {}\n * ```\n *\n * ### Inject this service into your component\n *\n * ```ts\n * @Component({\n *   ...\n *   providers: [ContactManagerJourneyPreferencesService],\n * })\n *  export class ContactManagerJourneyModule {\n * `\n */\n@Injectable()\nexport class ContactManagerJourneyConfigurationService {\n  private configuration: ContactManagerJourneyConfig;\n  constructor(@Optional() @Inject(ContactManagerJourneyConfigurationToken) config: ContactManagerJourneyConfig) {\n    const configFromProviders: Partial<ContactManagerJourneyConfig> = config ? config : {};\n    this.configuration = { ...defaultConfiguration, ...configFromProviders };\n  }\n\n  get newContact(): boolean {\n    return this.configuration.newContact;\n  }\n\n  get pageSize(): number {\n    return this.configuration.pageSize;\n  }\n\n  get maxNavPages(): number {\n    return this.configuration.maxNavPages;\n  }\n\n  get paginationType(): LoadMoreMethod {\n    return this.configuration.paginationType;\n  }\n\n  get notificationDismissTime(): number {\n    return this.configuration.notificationDismissTime;\n  }\n\n  get createContactEmail(): boolean {\n    return this.configuration.createContactEmail;\n  }\n\n  get createContactIBAN(): boolean {\n    return this.configuration.createContactIBAN;\n  }\n\n  get createContactAccount(): boolean {\n    return this.configuration.createContactAccount;\n  }\n\n  get createContactPhone(): boolean {\n    return this.configuration.createContactPhone;\n  }\n}\n"]}