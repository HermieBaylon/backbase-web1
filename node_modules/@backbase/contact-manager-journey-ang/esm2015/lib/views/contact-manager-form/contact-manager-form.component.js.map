{"version":3,"file":"contact-manager-form.component.js","sourceRoot":"","sources":["../../../../../../../libs/contact-manager-journey-ang/src/lib/views/contact-manager-form/contact-manager-form.component.ts","../../../../../../../libs/contact-manager-journey-ang/src/lib/views/contact-manager-form/contact-manager-form.component.html"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAE,8BAA8B,EAAE,MAAM,sCAAsC,CAAC;AACtF,OAAO,EAAE,YAAY,EAAE,MAAM,MAAM,CAAC;AACpC,OAAO,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;;;AAEtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwCG;AAMH,MAAM,OAAO,+BAA+B;IAI1C;;;;OAIG;IACH,aAAa;;QACX,MAAM,aAAa,GAAG,MAAA,IAAI,CAAC,8BAA8B,0CAAE,aAAa,EAAE,CAAC;QAC3E,IAAI,YAAY,CAAC,aAAa,CAAC,EAAE;YAC/B,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;SAChD;QAED,OAAO,aAAa,aAAb,aAAa,cAAb,aAAa,GAAI,IAAI,CAAC;IAC/B,CAAC;;gJAhBU,+BAA+B;oIAA/B,+BAA+B,oIAC/B,8BAA8B,gDCpD3C,6DACA;4FDkDa,+BAA+B;kBAL3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,uCAAuC;oBACpD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAGC,8BAA8B;sBAD7B,SAAS;uBAAC,8BAA8B","sourcesContent":["import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { ContactsFormContainerComponent } from '@backbase/contact-manager-widget-ang';\nimport { isObservable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n/**\n * The wrappper component will show contact form\n *\n * @usageNotes\n *\n * ### Display contact form based on type\n *\n * ```route\n * export const routes: Routes = [\n *   {\n *     path: '',\n *     component: ContactManagerJourneyComponent,\n *     children: [\n *       {\n *         path: '',\n *         component: ContactManagerDetailViewComponent,\n *       },\n *       {\n *         path: 'select',\n *         component: ContactManagerTypeListViewComponent,\n *       },\n *       {\n *         path: ':id',\n *         component: ContactManagerDetailViewComponent,\n *       },\n *       {\n *         path: 'edit/:id/:type',\n *         canDeactivate: [CanDeactivateGuard],\n *         component: ContactManagerFormViewComponent,\n *       },\n *     ],\n *   },\n * ];\n * };\n * @NgModule({\n *   imports: [ContactManagerJourneyModule.forRoot({ routes })],\n * })\n * export class ContactManagerJourneyBundleModule {}\n * ```\n * @ngModule ContactManagerJourneyModule\n */\n@Component({\n  selector: 'bb-contact-manager-form-view',\n  templateUrl: './contact-manager-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ContactManagerFormViewComponent {\n  @ViewChild(ContactsFormContainerComponent)\n  contactsFormContainerComponent?: ContactsFormContainerComponent;\n\n  /**\n   * Event handler for navigation change guard\n   *\n   * @returns {Promise<boolean> | boolean} - resolves to true if navigation can change\n   */\n  canDeactivate(): Promise<boolean> | boolean {\n    const canDeactivate = this.contactsFormContainerComponent?.canDeactivate();\n    if (isObservable(canDeactivate)) {\n      return canDeactivate.pipe(take(1)).toPromise();\n    }\n\n    return canDeactivate ?? true;\n  }\n}\n","<bb-contacts-form-container></bb-contacts-form-container>\n"]}