import { ActivatedRoute, Router } from '@angular/router';
import { AccountCreateType } from '@backbase/contact-manager-widget-ang';
import * as i0 from "@angular/core";
export interface NavigationParams {
    page?: number;
    query?: string;
}
export declare enum View {
    List = "LIST",
    Detail = "DETAIL",
    Edit = "EDIT",
    Select = "SELECT"
}
/**
 * Service helps the journey navigation
 *
 * @usageNotes
 *
 * ### Ensure the ContactManagerJourneyModule is imported to your component module
 *
 * ```ts
 * @NgModule({
 *   ...
 *   imports: [
 *     ...
 *     ContactManagerJourneyModule,
 *   ],
 * })
 * export class ContactJourneyBundleModule {}
 * ```
 *
 * ### Inject this service into your component
 *
 * ```ts
 * @Component({
 *   ...
 *   providers: [ContactManagerJourneyNavigationService],
 * })
 *  export class ContactManagerJourneyModule {
 * ```
 */
export declare class ContactManagerJourneyNavigationService {
    private readonly routerService;
    private readonly route;
    private _currentView;
    get currentView(): View;
    set currentView(view: View);
    constructor(routerService: Router, route: ActivatedRoute);
    list(page?: number, query?: string, queryParamsHandling?: 'merge' | 'preserve' | ''): Promise<boolean>;
    select(id: string): Promise<boolean>;
    edit(id: string, type?: string): Promise<boolean>;
    newContact(): Promise<boolean>;
    /**
     *
     * @param {AccountCreateType} type - if the new contact is of IBAN/Phone/Email/Account type
     * @returns {Promise<boolean>} resolves to true when form is ready
     */
    newContactForm(type: AccountCreateType): Promise<boolean>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ContactManagerJourneyNavigationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ContactManagerJourneyNavigationService>;
}
