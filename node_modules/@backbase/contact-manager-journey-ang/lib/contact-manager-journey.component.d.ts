import { ContactManagerJourneyConfigurationService } from './services/contact-manager-journey-config.service';
import * as i0 from "@angular/core";
/**
 * The component combines all the functionality of contacts in journey.
 *
 *
 *  ### Include this journey (standalone model)
 *
 * ```ts
 * export const routes: Routes = [
 *   {
 *     path: '',
 *     component: ContactManagerJourneyComponent,
 *     children: [
 *       {
 *         path: '',
 *         component: ContactManagerDetailViewComponent,
 *       },
 *       {
 *         path: 'select',
 *         component: ContactManagerTypeListViewComponent,
 *       },
 *       {
 *         path: ':id',
 *         component: ContactManagerDetailViewComponent,
 *       },
 *       {
 *         path: 'edit/:id/:type',
 *         canDeactivate: [CanDeactivateGuard],
 *         component: ContactManagerFormViewComponent,
 *       },
 *     ],
 *   },
 * ];
 * };
 * @NgModule({
 *   imports: [ContactManagerJourneyModule.forRoot({ route })],
 * })
 * export class ContactManagerJourneyBundleModule {}
 * ```
 *
 * ### Insert this BundleModule Laziliy.
 *
 * ```ts
 * @NgModule({
 *  BackbaseCoreModule.forRoot({
 *     lazyModules:[ {
 *   module: 'ContactManagerJourneyBundleModule',
 *   components: ['ContactManagerJourneyComponent'],
 *   loadChildren: () => import('./lazy-modules/lazy-bundle.module').then(m => m.ContactManagerJourneyBundleModule),
 * },]
 *  })
 * })
 * ```
 *
 * @ngModule ContactManagerJourneyModule
 */
export declare class ContactManagerJourneyComponent {
    readonly config: ContactManagerJourneyConfigurationService;
    constructor(config: ContactManagerJourneyConfigurationService);
    static ɵfac: i0.ɵɵFactoryDeclaration<ContactManagerJourneyComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ContactManagerJourneyComponent, "bb-contact-manager-journey", never, {}, {}, never, never>;
}
