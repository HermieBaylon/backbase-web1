import { Injectable } from '@angular/core';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/device";
export class UserDeviceInformationService {
    constructor(deviceManagementService) {
        this.deviceManagementService = deviceManagementService;
    }
    getDevices() {
        return this.deviceManagementService.getMyDevices().pipe(map(response => response.devices));
    }
    updateDevice(deviceId, patchDeviceRequest) {
        return this.deviceManagementService.patchMyDeviceByDeviceId({
            deviceId,
            patchDeviceRequest,
        });
    }
    removeDevice(deviceId) {
        return this.deviceManagementService.deleteMyDeviceByDeviceId({ deviceId });
    }
}
UserDeviceInformationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserDeviceInformationService, deps: [{ token: i1.ManageMyDevicesService }], target: i0.ɵɵFactoryTarget.Injectable });
UserDeviceInformationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserDeviceInformationService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: UserDeviceInformationService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ManageMyDevicesService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1kZXZpY2UtaW5mb3JtYXRpb24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvZGV2aWNlLWluZm9ybWF0aW9uLXdpZGdldC9zcmMvc2VydmljZXMvdXNlci1kZXZpY2UtaW5mb3JtYXRpb24uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7O0FBR3JDLE1BQU0sT0FBTyw0QkFBNEI7SUFDdkMsWUFBNkIsdUJBQStDO1FBQS9DLDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBd0I7SUFBRyxDQUFDO0lBRWhGLFVBQVU7UUFDUixPQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDN0YsQ0FBQztJQUVELFlBQVksQ0FBQyxRQUFnQixFQUFFLGtCQUFzQztRQUNuRSxPQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyx1QkFBdUIsQ0FBQztZQUMxRCxRQUFRO1lBQ1Isa0JBQWtCO1NBQ25CLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxZQUFZLENBQUMsUUFBZ0I7UUFDM0IsT0FBTyxJQUFJLENBQUMsdUJBQXVCLENBQUMsd0JBQXdCLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQzdFLENBQUM7OzBIQWhCVSw0QkFBNEI7OEhBQTVCLDRCQUE0Qjs0RkFBNUIsNEJBQTRCO2tCQUR4QyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cFJlc3BvbnNlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGV2aWNlLCBNYW5hZ2VNeURldmljZXNTZXJ2aWNlLCBQYXRjaERldmljZVJlcXVlc3QgfSBmcm9tICdAYmFja2Jhc2UvZGF0YS1hbmcvZGV2aWNlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFVzZXJEZXZpY2VJbmZvcm1hdGlvblNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGRldmljZU1hbmFnZW1lbnRTZXJ2aWNlOiBNYW5hZ2VNeURldmljZXNTZXJ2aWNlKSB7fVxuXG4gIGdldERldmljZXMoKTogT2JzZXJ2YWJsZTxBcnJheTxEZXZpY2U+PiB7XG4gICAgcmV0dXJuIHRoaXMuZGV2aWNlTWFuYWdlbWVudFNlcnZpY2UuZ2V0TXlEZXZpY2VzKCkucGlwZShtYXAocmVzcG9uc2UgPT4gcmVzcG9uc2UuZGV2aWNlcykpO1xuICB9XG5cbiAgdXBkYXRlRGV2aWNlKGRldmljZUlkOiBzdHJpbmcsIHBhdGNoRGV2aWNlUmVxdWVzdDogUGF0Y2hEZXZpY2VSZXF1ZXN0KTogT2JzZXJ2YWJsZTxIdHRwUmVzcG9uc2U8YW55Pj4ge1xuICAgIHJldHVybiB0aGlzLmRldmljZU1hbmFnZW1lbnRTZXJ2aWNlLnBhdGNoTXlEZXZpY2VCeURldmljZUlkKHtcbiAgICAgIGRldmljZUlkLFxuICAgICAgcGF0Y2hEZXZpY2VSZXF1ZXN0LFxuICAgIH0pO1xuICB9XG5cbiAgcmVtb3ZlRGV2aWNlKGRldmljZUlkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPEh0dHBSZXNwb25zZTxhbnk+PiB7XG4gICAgcmV0dXJuIHRoaXMuZGV2aWNlTWFuYWdlbWVudFNlcnZpY2UuZGVsZXRlTXlEZXZpY2VCeURldmljZUlkKHsgZGV2aWNlSWQgfSk7XG4gIH1cbn1cbiJdfQ==