import { Injectable } from '@angular/core';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/data-ang/device";
export class AdminDeviceInformationService {
    constructor(deviceManagementService) {
        this.deviceManagementService = deviceManagementService;
        this.dbsUserId = '';
    }
    getDevices() {
        return this.deviceManagementService
            .getDevicesByDbsUserId({ dbsUserId: this.dbsUserId })
            .pipe(map(response => response.devices));
    }
    updateDevice(deviceId, patchDeviceRequest) {
        return this.deviceManagementService.patchUserDeviceByDbsUserIdAndDeviceId({
            dbsUserId: this.dbsUserId,
            deviceId,
            patchDeviceRequest,
        });
    }
    removeDevice(deviceId) {
        return this.deviceManagementService.deleteUserDeviceByDeviceId({
            dbsUserId: this.dbsUserId,
            deviceId,
        });
    }
    set dbsUserIdInput(userId) {
        this.dbsUserId = userId;
    }
    get dbsUserIdInput() {
        return this.dbsUserId;
    }
}
AdminDeviceInformationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AdminDeviceInformationService, deps: [{ token: i1.ManageOtherUsersDevicesService }], target: i0.ɵɵFactoryTarget.Injectable });
AdminDeviceInformationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AdminDeviceInformationService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AdminDeviceInformationService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ManageOtherUsersDevicesService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRtaW4tZGV2aWNlLWluZm9ybWF0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL2RldmljZS1pbmZvcm1hdGlvbi13aWRnZXQvc3JjL3NlcnZpY2VzL2FkbWluLWRldmljZS1pbmZvcm1hdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7QUFHckMsTUFBTSxPQUFPLDZCQUE2QjtJQUd4QyxZQUE2Qix1QkFBdUQ7UUFBdkQsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUFnQztRQUY1RSxjQUFTLEdBQUcsRUFBRSxDQUFDO0lBRWdFLENBQUM7SUFFeEYsVUFBVTtRQUNSLE9BQU8sSUFBSSxDQUFDLHVCQUF1QjthQUNoQyxxQkFBcUIsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7YUFDcEQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxZQUFZLENBQUMsUUFBZ0IsRUFBRSxrQkFBc0M7UUFDbkUsT0FBTyxJQUFJLENBQUMsdUJBQXVCLENBQUMscUNBQXFDLENBQUM7WUFDeEUsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO1lBQ3pCLFFBQVE7WUFDUixrQkFBa0I7U0FDbkIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFlBQVksQ0FBQyxRQUFnQjtRQUMzQixPQUFPLElBQUksQ0FBQyx1QkFBdUIsQ0FBQywwQkFBMEIsQ0FBQztZQUM3RCxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7WUFDekIsUUFBUTtTQUNULENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxJQUFXLGNBQWMsQ0FBQyxNQUFjO1FBQ3RDLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDO0lBQzFCLENBQUM7SUFFRCxJQUFXLGNBQWM7UUFDdkIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7OzJIQWhDVSw2QkFBNkI7K0hBQTdCLDZCQUE2Qjs0RkFBN0IsNkJBQTZCO2tCQUR6QyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGV2aWNlLCBNYW5hZ2VPdGhlclVzZXJzRGV2aWNlc1NlcnZpY2UsIFBhdGNoRGV2aWNlUmVxdWVzdCB9IGZyb20gJ0BiYWNrYmFzZS9kYXRhLWFuZy9kZXZpY2UnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQWRtaW5EZXZpY2VJbmZvcm1hdGlvblNlcnZpY2Uge1xuICBwcml2YXRlIGRic1VzZXJJZCA9ICcnO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZGV2aWNlTWFuYWdlbWVudFNlcnZpY2U6IE1hbmFnZU90aGVyVXNlcnNEZXZpY2VzU2VydmljZSkge31cblxuICBnZXREZXZpY2VzKCk6IE9ic2VydmFibGU8QXJyYXk8RGV2aWNlPj4ge1xuICAgIHJldHVybiB0aGlzLmRldmljZU1hbmFnZW1lbnRTZXJ2aWNlXG4gICAgICAuZ2V0RGV2aWNlc0J5RGJzVXNlcklkKHsgZGJzVXNlcklkOiB0aGlzLmRic1VzZXJJZCB9KVxuICAgICAgLnBpcGUobWFwKHJlc3BvbnNlID0+IHJlc3BvbnNlLmRldmljZXMpKTtcbiAgfVxuXG4gIHVwZGF0ZURldmljZShkZXZpY2VJZDogc3RyaW5nLCBwYXRjaERldmljZVJlcXVlc3Q6IFBhdGNoRGV2aWNlUmVxdWVzdCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuZGV2aWNlTWFuYWdlbWVudFNlcnZpY2UucGF0Y2hVc2VyRGV2aWNlQnlEYnNVc2VySWRBbmREZXZpY2VJZCh7XG4gICAgICBkYnNVc2VySWQ6IHRoaXMuZGJzVXNlcklkLFxuICAgICAgZGV2aWNlSWQsXG4gICAgICBwYXRjaERldmljZVJlcXVlc3QsXG4gICAgfSk7XG4gIH1cblxuICByZW1vdmVEZXZpY2UoZGV2aWNlSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuZGV2aWNlTWFuYWdlbWVudFNlcnZpY2UuZGVsZXRlVXNlckRldmljZUJ5RGV2aWNlSWQoe1xuICAgICAgZGJzVXNlcklkOiB0aGlzLmRic1VzZXJJZCxcbiAgICAgIGRldmljZUlkLFxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIHNldCBkYnNVc2VySWRJbnB1dCh1c2VySWQ6IHN0cmluZykge1xuICAgIHRoaXMuZGJzVXNlcklkID0gdXNlcklkO1xuICB9XG5cbiAgcHVibGljIGdldCBkYnNVc2VySWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5kYnNVc2VySWQ7XG4gIH1cbn1cbiJdfQ==