import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { BadgeModule, ButtonModule, DropdownMenuModule, EmptyStateModule, ErrorCommonStateModule, HeaderModule, IconModule, InputTextModule, InputValidationMessageModule, LoadButtonModule, LoadingIndicatorModule, ModalModule, NotificationModule, } from '@backbase/ui-ang';
import { DeviceConfirmationModalComponent, DeviceInformationConfirmationModalCustomizableDirective, } from './components/bb-device-confirmation-modal-ui/device-confirmation-modal.component';
import { DeviceInformationComponent, DeviceInformationWidgetCustomizableDirective, } from './components/bb-device-information-ui/device-information.component';
import { DeviceListItemComponent } from './components/bb-device-list-item-ui/device-list-item.component';
import { DeviceRegisteredOnComponent } from './components/bb-device-registered-on-ui/device-registered-on.component';
import { DeviceVendorModelComponent } from './components/bb-device-vendor-model-ui/device-vendor-model.component';
import { DeviceInformationFormCustomizableDirective, ManageDeviceFormComponent, } from './components/bb-manage-device-form-ui/manage-device-form.component';
import { DeviceInformationWidgetComponent } from './device-information-widget.component';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const componentModules = [
    DeviceInformationComponent,
    DeviceInformationWidgetComponent,
    DeviceListItemComponent,
    ManageDeviceFormComponent,
    DeviceVendorModelComponent,
    DeviceConfirmationModalComponent,
    DeviceRegisteredOnComponent,
];
const componentDirectives = [
    DeviceInformationWidgetCustomizableDirective,
    DeviceInformationFormCustomizableDirective,
    DeviceInformationConfirmationModalCustomizableDirective,
];
const uiModules = [
    HeaderModule,
    LoadingIndicatorModule,
    ErrorCommonStateModule,
    IconModule,
    ButtonModule,
    InputValidationMessageModule,
    InputTextModule,
    LoadButtonModule,
    DropdownMenuModule,
    ModalModule,
    NotificationModule,
    ReactiveFormsModule,
    EmptyStateModule,
    BadgeModule,
];
export class DeviceInformationWidgetModule {
}
DeviceInformationWidgetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DeviceInformationWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DeviceInformationWidgetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DeviceInformationWidgetModule, declarations: [DeviceInformationComponent,
        DeviceInformationWidgetComponent,
        DeviceListItemComponent,
        ManageDeviceFormComponent,
        DeviceVendorModelComponent,
        DeviceConfirmationModalComponent,
        DeviceRegisteredOnComponent, DeviceInformationWidgetCustomizableDirective,
        DeviceInformationFormCustomizableDirective,
        DeviceInformationConfirmationModalCustomizableDirective], imports: [CommonModule, i1.BackbaseCoreModule, HeaderModule,
        LoadingIndicatorModule,
        ErrorCommonStateModule,
        IconModule,
        ButtonModule,
        InputValidationMessageModule,
        InputTextModule,
        LoadButtonModule,
        DropdownMenuModule,
        ModalModule,
        NotificationModule,
        ReactiveFormsModule,
        EmptyStateModule,
        BadgeModule], exports: [DeviceInformationComponent,
        DeviceInformationWidgetComponent,
        DeviceListItemComponent,
        ManageDeviceFormComponent,
        DeviceVendorModelComponent,
        DeviceConfirmationModalComponent,
        DeviceRegisteredOnComponent, HeaderModule,
        LoadingIndicatorModule,
        ErrorCommonStateModule,
        IconModule,
        ButtonModule,
        InputValidationMessageModule,
        InputTextModule,
        LoadButtonModule,
        DropdownMenuModule,
        ModalModule,
        NotificationModule,
        ReactiveFormsModule,
        EmptyStateModule,
        BadgeModule, DeviceInformationWidgetCustomizableDirective,
        DeviceInformationFormCustomizableDirective,
        DeviceInformationConfirmationModalCustomizableDirective] });
DeviceInformationWidgetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DeviceInformationWidgetModule, imports: [[
            CommonModule,
            BackbaseCoreModule.withConfig({
                classMap: { DeviceInformationWidgetComponent },
            }),
            ...uiModules,
        ], HeaderModule,
        LoadingIndicatorModule,
        ErrorCommonStateModule,
        IconModule,
        ButtonModule,
        InputValidationMessageModule,
        InputTextModule,
        LoadButtonModule,
        DropdownMenuModule,
        ModalModule,
        NotificationModule,
        ReactiveFormsModule,
        EmptyStateModule,
        BadgeModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DeviceInformationWidgetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { DeviceInformationWidgetComponent },
                        }),
                        ...uiModules,
                    ],
                    declarations: [...componentModules, ...componentDirectives],
                    exports: [...componentModules, ...uiModules, ...componentDirectives],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWluZm9ybWF0aW9uLXdpZGdldC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL2RldmljZS1pbmZvcm1hdGlvbi13aWRnZXQvc3JjL2RldmljZS1pbmZvcm1hdGlvbi13aWRnZXQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ25FLE9BQU8sRUFDTCxXQUFXLEVBQ1gsWUFBWSxFQUNaLGtCQUFrQixFQUNsQixnQkFBZ0IsRUFDaEIsc0JBQXNCLEVBQ3RCLFlBQVksRUFDWixVQUFVLEVBQ1YsZUFBZSxFQUNmLDRCQUE0QixFQUM1QixnQkFBZ0IsRUFDaEIsc0JBQXNCLEVBQ3RCLFdBQVcsRUFDWCxrQkFBa0IsR0FDbkIsTUFBTSxrQkFBa0IsQ0FBQztBQUMxQixPQUFPLEVBQ0wsZ0NBQWdDLEVBQ2hDLHVEQUF1RCxHQUN4RCxNQUFNLGtGQUFrRixDQUFDO0FBQzFGLE9BQU8sRUFDTCwwQkFBMEIsRUFDMUIsNENBQTRDLEdBQzdDLE1BQU0sb0VBQW9FLENBQUM7QUFDNUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZ0VBQWdFLENBQUM7QUFDekcsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sd0VBQXdFLENBQUM7QUFDckgsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sc0VBQXNFLENBQUM7QUFDbEgsT0FBTyxFQUNMLDBDQUEwQyxFQUMxQyx5QkFBeUIsR0FDMUIsTUFBTSxvRUFBb0UsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQzs7O0FBRXpGLE1BQU0sZ0JBQWdCLEdBQUc7SUFDdkIsMEJBQTBCO0lBQzFCLGdDQUFnQztJQUNoQyx1QkFBdUI7SUFDdkIseUJBQXlCO0lBQ3pCLDBCQUEwQjtJQUMxQixnQ0FBZ0M7SUFDaEMsMkJBQTJCO0NBQzVCLENBQUM7QUFDRixNQUFNLG1CQUFtQixHQUFHO0lBQzFCLDRDQUE0QztJQUM1QywwQ0FBMEM7SUFDMUMsdURBQXVEO0NBQ3hELENBQUM7QUFDRixNQUFNLFNBQVMsR0FBRztJQUNoQixZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0QixVQUFVO0lBQ1YsWUFBWTtJQUNaLDRCQUE0QjtJQUM1QixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsV0FBVztDQUNaLENBQUM7QUFhRixNQUFNLE9BQU8sNkJBQTZCOzsySEFBN0IsNkJBQTZCOzRIQUE3Qiw2QkFBNkIsaUJBekN4QywwQkFBMEI7UUFDMUIsZ0NBQWdDO1FBQ2hDLHVCQUF1QjtRQUN2Qix5QkFBeUI7UUFDekIsMEJBQTBCO1FBQzFCLGdDQUFnQztRQUNoQywyQkFBMkIsRUFHM0IsNENBQTRDO1FBQzVDLDBDQUEwQztRQUMxQyx1REFBdUQsYUFxQnJELFlBQVkseUJBbEJkLFlBQVk7UUFDWixzQkFBc0I7UUFDdEIsc0JBQXNCO1FBQ3RCLFVBQVU7UUFDVixZQUFZO1FBQ1osNEJBQTRCO1FBQzVCLGVBQWU7UUFDZixnQkFBZ0I7UUFDaEIsa0JBQWtCO1FBQ2xCLFdBQVc7UUFDWCxrQkFBa0I7UUFDbEIsbUJBQW1CO1FBQ25CLGdCQUFnQjtRQUNoQixXQUFXLGFBM0JYLDBCQUEwQjtRQUMxQixnQ0FBZ0M7UUFDaEMsdUJBQXVCO1FBQ3ZCLHlCQUF5QjtRQUN6QiwwQkFBMEI7UUFDMUIsZ0NBQWdDO1FBQ2hDLDJCQUEyQixFQVEzQixZQUFZO1FBQ1osc0JBQXNCO1FBQ3RCLHNCQUFzQjtRQUN0QixVQUFVO1FBQ1YsWUFBWTtRQUNaLDRCQUE0QjtRQUM1QixlQUFlO1FBQ2YsZ0JBQWdCO1FBQ2hCLGtCQUFrQjtRQUNsQixXQUFXO1FBQ1gsa0JBQWtCO1FBQ2xCLG1CQUFtQjtRQUNuQixnQkFBZ0I7UUFDaEIsV0FBVyxFQWxCWCw0Q0FBNEM7UUFDNUMsMENBQTBDO1FBQzFDLHVEQUF1RDs0SEE4QjVDLDZCQUE2QixZQVYvQjtZQUNQLFlBQVk7WUFDWixrQkFBa0IsQ0FBQyxVQUFVLENBQUM7Z0JBQzVCLFFBQVEsRUFBRSxFQUFFLGdDQUFnQyxFQUFFO2FBQy9DLENBQUM7WUFDRixHQUFHLFNBQVM7U0FDYixFQXZCRCxZQUFZO1FBQ1osc0JBQXNCO1FBQ3RCLHNCQUFzQjtRQUN0QixVQUFVO1FBQ1YsWUFBWTtRQUNaLDRCQUE0QjtRQUM1QixlQUFlO1FBQ2YsZ0JBQWdCO1FBQ2hCLGtCQUFrQjtRQUNsQixXQUFXO1FBQ1gsa0JBQWtCO1FBQ2xCLG1CQUFtQjtRQUNuQixnQkFBZ0I7UUFDaEIsV0FBVzs0RkFjQSw2QkFBNkI7a0JBWHpDLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osa0JBQWtCLENBQUMsVUFBVSxDQUFDOzRCQUM1QixRQUFRLEVBQUUsRUFBRSxnQ0FBZ0MsRUFBRTt5QkFDL0MsQ0FBQzt3QkFDRixHQUFHLFNBQVM7cUJBQ2I7b0JBQ0QsWUFBWSxFQUFFLENBQUMsR0FBRyxnQkFBZ0IsRUFBRSxHQUFHLG1CQUFtQixDQUFDO29CQUMzRCxPQUFPLEVBQUUsQ0FBQyxHQUFHLGdCQUFnQixFQUFFLEdBQUcsU0FBUyxFQUFFLEdBQUcsbUJBQW1CLENBQUM7aUJBQ3JFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQmFja2Jhc2VDb3JlTW9kdWxlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuaW1wb3J0IHtcbiAgQmFkZ2VNb2R1bGUsXG4gIEJ1dHRvbk1vZHVsZSxcbiAgRHJvcGRvd25NZW51TW9kdWxlLFxuICBFbXB0eVN0YXRlTW9kdWxlLFxuICBFcnJvckNvbW1vblN0YXRlTW9kdWxlLFxuICBIZWFkZXJNb2R1bGUsXG4gIEljb25Nb2R1bGUsXG4gIElucHV0VGV4dE1vZHVsZSxcbiAgSW5wdXRWYWxpZGF0aW9uTWVzc2FnZU1vZHVsZSxcbiAgTG9hZEJ1dHRvbk1vZHVsZSxcbiAgTG9hZGluZ0luZGljYXRvck1vZHVsZSxcbiAgTW9kYWxNb2R1bGUsXG4gIE5vdGlmaWNhdGlvbk1vZHVsZSxcbn0gZnJvbSAnQGJhY2tiYXNlL3VpLWFuZyc7XG5pbXBvcnQge1xuICBEZXZpY2VDb25maXJtYXRpb25Nb2RhbENvbXBvbmVudCxcbiAgRGV2aWNlSW5mb3JtYXRpb25Db25maXJtYXRpb25Nb2RhbEN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbn0gZnJvbSAnLi9jb21wb25lbnRzL2JiLWRldmljZS1jb25maXJtYXRpb24tbW9kYWwtdWkvZGV2aWNlLWNvbmZpcm1hdGlvbi1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgRGV2aWNlSW5mb3JtYXRpb25Db21wb25lbnQsXG4gIERldmljZUluZm9ybWF0aW9uV2lkZ2V0Q3VzdG9taXphYmxlRGlyZWN0aXZlLFxufSBmcm9tICcuL2NvbXBvbmVudHMvYmItZGV2aWNlLWluZm9ybWF0aW9uLXVpL2RldmljZS1pbmZvcm1hdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlTGlzdEl0ZW1Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYmItZGV2aWNlLWxpc3QtaXRlbS11aS9kZXZpY2UtbGlzdC1pdGVtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZXZpY2VSZWdpc3RlcmVkT25Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYmItZGV2aWNlLXJlZ2lzdGVyZWQtb24tdWkvZGV2aWNlLXJlZ2lzdGVyZWQtb24uY29tcG9uZW50JztcbmltcG9ydCB7IERldmljZVZlbmRvck1vZGVsQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2JiLWRldmljZS12ZW5kb3ItbW9kZWwtdWkvZGV2aWNlLXZlbmRvci1tb2RlbC5jb21wb25lbnQnO1xuaW1wb3J0IHtcbiAgRGV2aWNlSW5mb3JtYXRpb25Gb3JtQ3VzdG9taXphYmxlRGlyZWN0aXZlLFxuICBNYW5hZ2VEZXZpY2VGb3JtQ29tcG9uZW50LFxufSBmcm9tICcuL2NvbXBvbmVudHMvYmItbWFuYWdlLWRldmljZS1mb3JtLXVpL21hbmFnZS1kZXZpY2UtZm9ybS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGV2aWNlSW5mb3JtYXRpb25XaWRnZXRDb21wb25lbnQgfSBmcm9tICcuL2RldmljZS1pbmZvcm1hdGlvbi13aWRnZXQuY29tcG9uZW50JztcblxuY29uc3QgY29tcG9uZW50TW9kdWxlcyA9IFtcbiAgRGV2aWNlSW5mb3JtYXRpb25Db21wb25lbnQsXG4gIERldmljZUluZm9ybWF0aW9uV2lkZ2V0Q29tcG9uZW50LFxuICBEZXZpY2VMaXN0SXRlbUNvbXBvbmVudCxcbiAgTWFuYWdlRGV2aWNlRm9ybUNvbXBvbmVudCxcbiAgRGV2aWNlVmVuZG9yTW9kZWxDb21wb25lbnQsXG4gIERldmljZUNvbmZpcm1hdGlvbk1vZGFsQ29tcG9uZW50LFxuICBEZXZpY2VSZWdpc3RlcmVkT25Db21wb25lbnQsXG5dO1xuY29uc3QgY29tcG9uZW50RGlyZWN0aXZlcyA9IFtcbiAgRGV2aWNlSW5mb3JtYXRpb25XaWRnZXRDdXN0b21pemFibGVEaXJlY3RpdmUsXG4gIERldmljZUluZm9ybWF0aW9uRm9ybUN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbiAgRGV2aWNlSW5mb3JtYXRpb25Db25maXJtYXRpb25Nb2RhbEN1c3RvbWl6YWJsZURpcmVjdGl2ZSxcbl07XG5jb25zdCB1aU1vZHVsZXMgPSBbXG4gIEhlYWRlck1vZHVsZSxcbiAgTG9hZGluZ0luZGljYXRvck1vZHVsZSxcbiAgRXJyb3JDb21tb25TdGF0ZU1vZHVsZSxcbiAgSWNvbk1vZHVsZSxcbiAgQnV0dG9uTW9kdWxlLFxuICBJbnB1dFZhbGlkYXRpb25NZXNzYWdlTW9kdWxlLFxuICBJbnB1dFRleHRNb2R1bGUsXG4gIExvYWRCdXR0b25Nb2R1bGUsXG4gIERyb3Bkb3duTWVudU1vZHVsZSxcbiAgTW9kYWxNb2R1bGUsXG4gIE5vdGlmaWNhdGlvbk1vZHVsZSxcbiAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgRW1wdHlTdGF0ZU1vZHVsZSxcbiAgQmFkZ2VNb2R1bGUsXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEJhY2tiYXNlQ29yZU1vZHVsZS53aXRoQ29uZmlnKHtcbiAgICAgIGNsYXNzTWFwOiB7IERldmljZUluZm9ybWF0aW9uV2lkZ2V0Q29tcG9uZW50IH0sXG4gICAgfSksXG4gICAgLi4udWlNb2R1bGVzLFxuICBdLFxuICBkZWNsYXJhdGlvbnM6IFsuLi5jb21wb25lbnRNb2R1bGVzLCAuLi5jb21wb25lbnREaXJlY3RpdmVzXSxcbiAgZXhwb3J0czogWy4uLmNvbXBvbmVudE1vZHVsZXMsIC4uLnVpTW9kdWxlcywgLi4uY29tcG9uZW50RGlyZWN0aXZlc10sXG59KVxuZXhwb3J0IGNsYXNzIERldmljZUluZm9ybWF0aW9uV2lkZ2V0TW9kdWxlIHt9XG4iXX0=