import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class DeviceVendorModelComponent {
}
DeviceVendorModelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DeviceVendorModelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
DeviceVendorModelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: DeviceVendorModelComponent, selector: "bb-device-vendor-model-ui", inputs: { device: "device" }, ngImport: i0, template: "<ng-container *ngIf=\"device?.vendor && device?.model; else defaultVendor\">\n  <span \n    class=\"break-word\"\n    i18n=\"Device vendor text@@bb-device-vendor-model-ui.text\"\n    data-role=\"device-vendor-model\">\n    {{ device?.vendor }} '{{ device?.model }}'\n  </span>\n</ng-container>\n\n<ng-template #defaultVendor>\n  <span\n    i18n=\"Device vendor default text@@bb-device-vendor-model-ui.text-default\"\n    data-role=\"device-vendor-model-default\">\n    Unknown\n  </span>\n</ng-template>\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DeviceVendorModelComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-device-vendor-model-ui',
                    templateUrl: './device-vendor-model.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { device: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXZlbmRvci1tb2RlbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2RldmljZS1pbmZvcm1hdGlvbi13aWRnZXQvc3JjL2NvbXBvbmVudHMvYmItZGV2aWNlLXZlbmRvci1tb2RlbC11aS9kZXZpY2UtdmVuZG9yLW1vZGVsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvZGV2aWNlLWluZm9ybWF0aW9uLXdpZGdldC9zcmMvY29tcG9uZW50cy9iYi1kZXZpY2UtdmVuZG9yLW1vZGVsLXVpL2RldmljZS12ZW5kb3ItbW9kZWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQVExRSxNQUFNLE9BQU8sMEJBQTBCOzt3SEFBMUIsMEJBQTBCOzRHQUExQiwwQkFBMEIsK0ZDUnZDLDJmQWdCQTs0RkRSYSwwQkFBMEI7a0JBTHRDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsV0FBVyxFQUFFLHNDQUFzQztvQkFDbkQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzhCQUtVLE1BQU07c0JBQWQsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZXZpY2UgfSBmcm9tICcuLi8uLi9tb2RlbHMvZGV2aWNlLW1hbmFnZW1lbnQtdHlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1kZXZpY2UtdmVuZG9yLW1vZGVsLXVpJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RldmljZS12ZW5kb3ItbW9kZWwuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlVmVuZG9yTW9kZWxDb21wb25lbnQge1xuICAvKipcbiAgICogVGhlIGRldmljZSB0byBkaXNwbGF5IHZlbmRvciBhbmQgbW9kZWwgZGF0YSBmb3IuXG4gICAqL1xuICBASW5wdXQoKSBkZXZpY2U6IERldmljZSB8IHVuZGVmaW5lZDtcbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJkZXZpY2U/LnZlbmRvciAmJiBkZXZpY2U/Lm1vZGVsOyBlbHNlIGRlZmF1bHRWZW5kb3JcIj5cbiAgPHNwYW4gXG4gICAgY2xhc3M9XCJicmVhay13b3JkXCJcbiAgICBpMThuPVwiRGV2aWNlIHZlbmRvciB0ZXh0QEBiYi1kZXZpY2UtdmVuZG9yLW1vZGVsLXVpLnRleHRcIlxuICAgIGRhdGEtcm9sZT1cImRldmljZS12ZW5kb3ItbW9kZWxcIj5cbiAgICB7eyBkZXZpY2U/LnZlbmRvciB9fSAne3sgZGV2aWNlPy5tb2RlbCB9fSdcbiAgPC9zcGFuPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSAjZGVmYXVsdFZlbmRvcj5cbiAgPHNwYW5cbiAgICBpMThuPVwiRGV2aWNlIHZlbmRvciBkZWZhdWx0IHRleHRAQGJiLWRldmljZS12ZW5kb3ItbW9kZWwtdWkudGV4dC1kZWZhdWx0XCJcbiAgICBkYXRhLXJvbGU9XCJkZXZpY2UtdmVuZG9yLW1vZGVsLWRlZmF1bHRcIj5cbiAgICBVbmtub3duXG4gIDwvc3Bhbj5cbjwvbmctdGVtcGxhdGU+XG4iXX0=