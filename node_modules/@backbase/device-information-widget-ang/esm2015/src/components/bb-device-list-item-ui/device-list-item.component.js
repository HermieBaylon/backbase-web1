import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { DeviceStatus } from './../../models/device-management-types';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang";
import * as i2 from "../bb-device-vendor-model-ui/device-vendor-model.component";
import * as i3 from "../bb-device-registered-on-ui/device-registered-on.component";
import * as i4 from "../bb-device-confirmation-modal-ui/device-confirmation-modal.component";
import * as i5 from "@angular/common";
export class DeviceListItemComponent {
    constructor() {
        /**
         * Whether the manage button is disabled.
         * Defaults to false.
         */
        this.isManageDisabled = false;
        this.manage = new EventEmitter();
        this.remove = new EventEmitter();
        this.restore = new EventEmitter();
        this.suspend = new EventEmitter();
        this.isRestoring = false;
        this.isRemoving = false;
        this.isSuspending = false;
        this.icon = '';
    }
    ngOnInit() {
        if (this.device) {
            this.icon = this.device.vendor === 'Apple' ? 'phone-iphone' : 'phone-android';
        }
    }
    isDeviceDisabled() {
        return this.device && this.device.status === DeviceStatus.DISABLED;
    }
    isDeviceRemoved() {
        return this.device && this.device.status === DeviceStatus.REMOVED;
    }
    onManage() {
        this.manage.emit();
    }
    onRestore() {
        if (this.device) {
            this.restore.emit(this.device);
            this.isRestoring = false;
        }
    }
    onRemove() {
        if (this.device) {
            this.remove.emit(this.device);
            this.isRemoving = false;
        }
    }
    onSuspend() {
        if (this.device) {
            this.suspend.emit(this.device);
            this.isSuspending = false;
        }
    }
}
DeviceListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DeviceListItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
DeviceListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: DeviceListItemComponent, selector: "bb-device-list-item-ui", inputs: { device: "device", isManageDisabled: "isManageDisabled" }, outputs: { manage: "manage", remove: "remove", restore: "restore", suspend: "suspend" }, ngImport: i0, template: "<div class=\"bb-stack\" data-role=\"device-item\">\n  <div class=\"bb-stack__item bb-stack__item--fill\" [class.bb-text-disabled]=\"isDeviceDisabled() || isDeviceRemoved()\">\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        size=\"xl\"\n        data-role=\"device-item-icon\"\n        class=\"bb-stack__item\"\n        [name]=\"icon\">\n      </bb-icon-ui>\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <div class=\"break-word\">\n          <ng-container *ngIf=\"device?.friendlyName; else defaultFriendlyName\">\n            <span data-role=\"device-item-friendly-name\">{{ device?.friendlyName }}</span>\n          </ng-container>\n        </div>\n        <small [ngClass]=\"isDeviceDisabled() || isDeviceRemoved() ? 'bb-text-disabled' : 'bb-text-support'\">\n          <bb-device-vendor-model-ui [device]=\"device\"></bb-device-vendor-model-ui>\n        </small>\n        <bb-device-registered-on-ui\n          class=\"bb-subheader bb-subheader--regular\"\n          [ngClass]=\"isDeviceDisabled() || isDeviceRemoved() ? 'bb-text-disabled' : 'bb-text-support'\"\n          [createdDate]=\"device?.created\">\n        </bb-device-registered-on-ui>\n      </div>\n    </div>\n  </div>\n  <div class=\"bb-stack__item\">\n    <div class=\"bb-stack\">\n      <bb-badge-ui\n        *ngIf=\"isDeviceDisabled()\"\n        class=\"bb-stack__item\"\n        color=\"danger\"\n        data-role=\"device-item-badge-disabled\"\n        i18n-text=\"Device disabled badge@@bb-device-list-item-ui.badge.disabled\"\n        text=\"SUSPENDED\">\n      </bb-badge-ui>\n      <bb-badge-ui\n        *ngIf=\"isDeviceRemoved()\"\n        class=\"bb-stack__item\"\n        color=\"secondary\"\n        data-role=\"device-item-badge-removed\"\n        i18n-text=\"Device removed badge@@bb-device-list-item-ui.badge.removed\"\n        text=\"REMOVED\">\n      </bb-badge-ui>\n      <bb-dropdown-menu-ui\n        class=\"bb-stack__item\"\n        [class.invisible]=\"isDeviceRemoved()\"\n        icon=\"ellipsis-h\"\n        btnColor=\"link\"\n        dropDownButtonLabel=\"Manage device {{ device?.friendlyName || 'Unknown' }}\"\n        i18n-dropDownButtonLabel=\"Device list item dropdown menu aria label@@bb-device-list-item-ui.dropdown.aria\"\n        data-role=\"device-item-menu\"\n        [btnCircle]=\"true\"\n        [disabled]=\"isManageDisabled\">\n        <ng-template bbDropdownMenuItem>\n          <ng-container *ngIf=\"!isDeviceDisabled() ; else disabledDeviceMenuItems\">\n            <button\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"device-item-edit\"\n              i18n=\"Device list item edit name text@@bb-device-list-item-ui.edit\"\n              (click)=\"onManage()\">\n              Edit name\n            </button>\n            <button\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"device-item-suspend\"\n              i18n=\"Device list item suspend text@@bb-device-list-item-ui.suspend\"\n              (click)=\"isSuspending = true\">\n              Suspend device\n            </button>\n          </ng-container>\n          <button\n            role=\"menuitem\"\n            class=\"dropdown-item\"\n            data-role=\"device-item-remove\"\n            i18n=\"Device list item remove text@@bb-device-list-item-ui.remove\"\n            (click)=\"isRemoving = true\">\n            Remove device\n          </button>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n</div>\n\n<ng-template #defaultFriendlyName i18n=\"Default friendly name@@bb-device-list-item-ui.default-friendly-name\">\n  <span data-role=\"device-item-friendly-name-default\">Unknown Device</span>\n</ng-template>\n\n<ng-template #disabledDeviceMenuItems>\n  <button\n    role=\"menuitem\"\n    class=\"dropdown-item\"\n    data-role=\"device-item-restore\"\n    i18n=\"Device list item restore text@@bb-device-list-item-ui.restore\"\n    (click)=\"isRestoring = true\">\n    Restore device\n  </button>\n</ng-template>\n\n<bb-device-confirmation-modal-ui\n  i18n-cancelButtonText=\"Suspended Modal cancel button text@@bb-device-list-item-ui.modal.suspended.cancel-text\"\n  cancelButtonText=\"Cancel\"\n  i18n-confirmButtonText=\"Suspended Modal confirm button text@@bb-device-list-item-ui.modal.suspended.confirm-text\"\n  confirmButtonText=\"Suspend device\"\n  i18n-modalHeadingText=\"Suspended Modal heading@@bbb-device-list-item-ui.modal.suspended.heading\"\n  modalHeadingText=\"Confirm device suspension\"\n  i18n-modalBodyText=\"Suspended Modal body@@bb-device-list-item-ui.modal.suspended.body\"\n  modalBodyText=\"Are you sure that you wish to suspend the following device?\"\n  [isOpen]=\"isSuspending\"\n  [device]=\"device\"\n  [iconName]=\"icon\"\n  (cancel)=\"isSuspending = false\"\n  (confirm)=\"onSuspend();\">\n</bb-device-confirmation-modal-ui>\n\n<bb-device-confirmation-modal-ui\n  i18n-cancelButtonText=\"Restored Modal cancel button text@@bb-device-list-item-ui.modal.restored.cancel-text\"\n  cancelButtonText=\"Cancel\"\n  i18n-confirmButtonText=\"Restored Modal confirm button text@@bb-device-list-item-ui.modal.restored.confirm-text\"\n  confirmButtonText=\"Restore device\"\n  i18n-modalHeadingText=\"Restored Modal heading@@bbb-device-list-item-ui.modal.restored.heading\"\n  modalHeadingText=\"Confirm device restoration\"\n  i18n-modalBodyText=\"Restored Modal body@@bb-device-list-item-ui.modal.restored.body\"\n  modalBodyText=\"Are you sure that you wish to restore the following device?\"\n  [isOpen]=\"isRestoring\"\n  [device]=\"device\"\n  [iconName]=\"icon\"\n  (cancel)=\"isRestoring = false\"\n  (confirm)=\"onRestore()\">\n</bb-device-confirmation-modal-ui>\n\n<bb-device-confirmation-modal-ui\n  confirmButtonColor=\"danger\"\n  i18n-cancelButtonText=\"Removed Modal cancel button text@@bb-device-list-item-ui.modal.removed.cancel-text\"\n  cancelButtonText=\"Keep device\"\n  i18n-confirmButtonText=\"Removed Modal confirm button text@@bb-device-list-item-ui.modal.removed.confirm-text\"\n  confirmButtonText=\"Remove device\"\n  i18n-modalHeadingText=\"Removed Modal heading@@bbb-device-list-item-ui.modal.removed.heading\"\n  modalHeadingText=\"Confirm device removal\"\n  i18n-modalBodyText=\"Removed Modal body@@bb-device-list-item-ui.modal.removed.body\"\n  modalBodyText=\"Are you sure that you wish to remove the following device?\"\n  [isOpen]=\"isRemoving\"\n  [device]=\"device\"\n  [iconName]=\"icon\"\n  (cancel)=\"isRemoving = false\"\n  (confirm)=\"onRemove()\">\n</bb-device-confirmation-modal-ui>\n", components: [{ type: i1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i2.DeviceVendorModelComponent, selector: "bb-device-vendor-model-ui", inputs: ["device"] }, { type: i3.DeviceRegisteredOnComponent, selector: "bb-device-registered-on-ui", inputs: ["createdDate"] }, { type: i1.BadgeComponent, selector: "bb-badge-ui", inputs: ["color", "text", "abbr", "circle", "wrap", "ariaLabel"] }, { type: i1.DropdownMenuComponent, selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }, { type: i4.DeviceConfirmationModalComponent, selector: "bb-device-confirmation-modal-ui", inputs: ["device", "confirmButtonText", "confirmButtonColor", "cancelButtonText", "modalHeadingText", "modalBodyText", "iconName", "isOpen"], outputs: ["cancel", "confirm"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i1.DropdownMenuItemDirective, selector: "ng-template[bbDropdownMenuItem]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: DeviceListItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-device-list-item-ui',
                    templateUrl: './device-list-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { device: [{
                type: Input
            }], isManageDisabled: [{
                type: Input
            }], manage: [{
                type: Output
            }], remove: [{
                type: Output
            }], restore: [{
                type: Output
            }], suspend: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,