{"version":3,"file":"backbase-device-information-widget-ang.js","sources":["../../../../libs/device-information-widget/src/components/bb-device-vendor-model-ui/device-vendor-model.component.ts","../../../../libs/device-information-widget/src/components/bb-device-vendor-model-ui/device-vendor-model.component.html","../../../../libs/device-information-widget/src/components/bb-device-registered-on-ui/device-registered-on.component.ts","../../../../libs/device-information-widget/src/components/bb-device-registered-on-ui/device-registered-on.component.html","../../../../libs/device-information-widget/src/components/bb-device-confirmation-modal-ui/device-confirmation-modal.component.ts","../../../../libs/device-information-widget/src/components/bb-device-confirmation-modal-ui/device-confirmation-modal.component.html","../../../../libs/device-information-widget/src/models/device-management-types.ts","../../../../libs/device-information-widget/src/components/bb-device-list-item-ui/device-list-item.component.ts","../../../../libs/device-information-widget/src/components/bb-device-list-item-ui/device-list-item.component.html","../../../../libs/device-information-widget/src/components/bb-manage-device-form-ui/manage-device-form.component.ts","../../../../libs/device-information-widget/src/components/bb-manage-device-form-ui/manage-device-form.component.html","../../../../libs/device-information-widget/src/components/bb-device-information-ui/device-information.component.ts","../../../../libs/device-information-widget/src/components/bb-device-information-ui/device-information.component.html","../../../../libs/device-information-widget/src/services/user-device-information.service.ts","../../../../libs/device-information-widget/src/services/admin-device-information.service.ts","../../../../libs/device-information-widget/src/services/device-information-preference.service.ts","../../../../libs/device-information-widget/src/device-information-widget.component.ts","../../../../libs/device-information-widget/src/device-information-widget.component.html","../../../../libs/device-information-widget/src/device-information-widget.module.ts","../../../../libs/device-information-widget/backbase-device-information-widget-ang.ts"],"sourcesContent":["import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Device } from '../../models/device-management-types';\n\n@Component({\n  selector: 'bb-device-vendor-model-ui',\n  templateUrl: './device-vendor-model.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeviceVendorModelComponent {\n  /**\n   * The device to display vendor and model data for.\n   */\n  @Input() device: Device | undefined;\n}\n","<ng-container *ngIf=\"device?.vendor && device?.model; else defaultVendor\">\n  <span \n    class=\"break-word\"\n    i18n=\"Device vendor text@@bb-device-vendor-model-ui.text\"\n    data-role=\"device-vendor-model\">\n    {{ device?.vendor }} '{{ device?.model }}'\n  </span>\n</ng-container>\n\n<ng-template #defaultVendor>\n  <span\n    i18n=\"Device vendor default text@@bb-device-vendor-model-ui.text-default\"\n    data-role=\"device-vendor-model-default\">\n    Unknown\n  </span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-device-registered-on-ui',\n  templateUrl: './device-registered-on.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeviceRegisteredOnComponent {\n  /**\n   * The date the device was registered\n   */\n  @Input() createdDate: string | undefined;\n}\n","<div\n  *ngIf=\"createdDate\"\n  data-role=\"device-registered-on\"\n  i18n=\"Text describing when the device was registered@@bb-device-registered-on-ui.registration-date.helper\">\n  Registered on: {{ createdDate | date :'medium' }}\n</div>","import { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Component, Input, Output, EventEmitter, Directive, ChangeDetectionStrategy } from '@angular/core';\nimport { Device } from '../../models/device-management-types';\n\n@Component({\n  selector: 'bb-device-confirmation-modal-ui',\n  templateUrl: './device-confirmation-modal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeviceConfirmationModalComponent {\n  /**\n   * The device to display the modal for.\n   */\n  @Input() device: Device | undefined;\n  /**\n   * The text displayed on the confirmation button.\n   * Defaults to an empty string.\n   */\n  @Input() confirmButtonText = '';\n  /**\n   * The color of the confirmation button.\n   * Defaults to primary.\n   */\n  @Input() confirmButtonColor = 'primary';\n  /**\n   * The text displayed on the cancel button.\n   * Defaults to an empty string.\n   */\n  @Input() cancelButtonText = '';\n  /**\n   * The heading text displayed on the modal.\n   * Defaults to an empty string.\n   */\n  @Input() modalHeadingText = '';\n  /**\n   * The body text displayed on the modal.\n   * Defaults to an empty string.\n   */\n  @Input() modalBodyText = '';\n  /**\n   * The icon name to display in the modal body.\n   * Defaults to an empty string.\n   */\n  @Input() iconName = '';\n  /**\n   * Whether the modal is open.\n   * Defaults to false.\n   */\n  @Input() isOpen = false;\n\n  @Output() cancel = new EventEmitter<void>();\n  @Output() confirm = new EventEmitter<void>();\n\n  readonly hostRef = this;\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  onConfirm() {\n    this.confirm.emit();\n  }\n}\n\n@Directive({\n  selector: '[bbDeviceInformationConfirmationModalCustomizable]',\n})\nexport class DeviceInformationConfirmationModalCustomizableDirective extends BbTemplate<\n  DeviceConfirmationModalComponent,\n  undefined\n> {}\n","<ng-container bbDeviceInformationConfirmationModalCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbDeviceInformationConfirmationModalCustomizable let-hostRef>\n  <bb-modal-ui [isOpen]=\"hostRef.isOpen\" (cancel)=\"hostRef.onCancel()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <bb-header-ui\n          headingType=\"h2\"\n          data-role=\"device-modal-header\"\n          [heading]=\"hostRef.modalHeadingText\">\n        </bb-header-ui>\n      </ng-template>\n    </bb-modal-header-ui>\n  \n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        {{ hostRef.modalBodyText }}\n        <hr>\n        <div class=\"bb-stack\">\n          <bb-icon-ui class=\"bb-stack__item\" [name]=\"hostRef.iconName\" size=\"xl\"></bb-icon-ui>\n          <div class=\"bb-stack__item bb-stack__item--fill\">\n            <div class=\"break-word\">\n              <ng-container *ngIf=\"hostRef.device?.friendlyName as friendlyName; else defaultFriendlyName\">\n                {{ friendlyName }}\n              </ng-container>\n            </div>\n            <bb-device-vendor-model-ui\n              class=\"bb-subtitle bb-text-support\"\n              [device]=\"hostRef.device\">\n            </bb-device-vendor-model-ui>\n            <bb-device-registered-on-ui\n              class=\"bb-subheader bb-subheader--regular bb-text-support\"\n              [createdDate]=\"hostRef.device?.created\">\n            </bb-device-registered-on-ui>\n          </div>\n        </div>\n        <hr class=\"bb-block bb-block--no-margin\">\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui>\n      <ng-template bbCustomModalFooter>\n        <button bbButton\n          color=\"secondary\"\n          data-role=\"modal-cancel\"\n          (click)=\"hostRef.onCancel()\">\n          {{ hostRef.cancelButtonText }}\n        </button>\n        <button bbButton\n          data-role=\"modal-confirm\"\n          [color]=\"hostRef.confirmButtonColor\"\n          (click)=\"hostRef.onConfirm()\">\n          {{ hostRef.confirmButtonText }}\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n  \n  <ng-template #defaultFriendlyName\n    i18n=\"Modal default friendly name@@bb-device-confirmation-modal-ui.default-friendly-name\">\n    Unknown Device\n  </ng-template>\n</ng-template>","import { Device } from '@backbase/data-ang/device';\nexport { Device, DeviceStatus } from '@backbase/data-ang/device';\n\nexport enum UpdateAction {\n  Suspend,\n  Restore,\n  Remove,\n  Save,\n}\n\nexport interface ModifiedDevice extends Device {\n  oldFriendlyName?: string;\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Device, DeviceStatus } from './../../models/device-management-types';\n\n@Component({\n  selector: 'bb-device-list-item-ui',\n  templateUrl: './device-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeviceListItemComponent implements OnInit {\n  /**\n   * The device to display information for.\n   */\n  @Input() device: Device | undefined;\n  /**\n   * Whether the manage button is disabled.\n   * Defaults to false.\n   */\n  @Input() isManageDisabled = false;\n\n  @Output() manage = new EventEmitter<void>();\n  @Output() remove = new EventEmitter<Device>();\n  @Output() restore = new EventEmitter<Device>();\n  @Output() suspend = new EventEmitter<Device>();\n\n  isRestoring = false;\n  isRemoving = false;\n  isSuspending = false;\n  icon = '';\n\n  ngOnInit() {\n    if (this.device) {\n      this.icon = this.device.vendor === 'Apple' ? 'phone-iphone' : 'phone-android';\n    }\n  }\n\n  isDeviceDisabled() {\n    return this.device && this.device.status === DeviceStatus.DISABLED;\n  }\n\n  isDeviceRemoved() {\n    return this.device && this.device.status === DeviceStatus.REMOVED;\n  }\n\n  onManage() {\n    this.manage.emit();\n  }\n\n  onRestore() {\n    if (this.device) {\n      this.restore.emit(this.device);\n      this.isRestoring = false;\n    }\n  }\n\n  onRemove() {\n    if (this.device) {\n      this.remove.emit(this.device);\n      this.isRemoving = false;\n    }\n  }\n\n  onSuspend() {\n    if (this.device) {\n      this.suspend.emit(this.device);\n      this.isSuspending = false;\n    }\n  }\n}\n","<div class=\"bb-stack\" data-role=\"device-item\">\n  <div class=\"bb-stack__item bb-stack__item--fill\" [class.bb-text-disabled]=\"isDeviceDisabled() || isDeviceRemoved()\">\n    <div class=\"bb-stack\">\n      <bb-icon-ui\n        size=\"xl\"\n        data-role=\"device-item-icon\"\n        class=\"bb-stack__item\"\n        [name]=\"icon\">\n      </bb-icon-ui>\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <div class=\"break-word\">\n          <ng-container *ngIf=\"device?.friendlyName; else defaultFriendlyName\">\n            <span data-role=\"device-item-friendly-name\">{{ device?.friendlyName }}</span>\n          </ng-container>\n        </div>\n        <small [ngClass]=\"isDeviceDisabled() || isDeviceRemoved() ? 'bb-text-disabled' : 'bb-text-support'\">\n          <bb-device-vendor-model-ui [device]=\"device\"></bb-device-vendor-model-ui>\n        </small>\n        <bb-device-registered-on-ui\n          class=\"bb-subheader bb-subheader--regular\"\n          [ngClass]=\"isDeviceDisabled() || isDeviceRemoved() ? 'bb-text-disabled' : 'bb-text-support'\"\n          [createdDate]=\"device?.created\">\n        </bb-device-registered-on-ui>\n      </div>\n    </div>\n  </div>\n  <div class=\"bb-stack__item\">\n    <div class=\"bb-stack\">\n      <bb-badge-ui\n        *ngIf=\"isDeviceDisabled()\"\n        class=\"bb-stack__item\"\n        color=\"danger\"\n        data-role=\"device-item-badge-disabled\"\n        i18n-text=\"Device disabled badge@@bb-device-list-item-ui.badge.disabled\"\n        text=\"SUSPENDED\">\n      </bb-badge-ui>\n      <bb-badge-ui\n        *ngIf=\"isDeviceRemoved()\"\n        class=\"bb-stack__item\"\n        color=\"secondary\"\n        data-role=\"device-item-badge-removed\"\n        i18n-text=\"Device removed badge@@bb-device-list-item-ui.badge.removed\"\n        text=\"REMOVED\">\n      </bb-badge-ui>\n      <bb-dropdown-menu-ui\n        class=\"bb-stack__item\"\n        [class.invisible]=\"isDeviceRemoved()\"\n        icon=\"ellipsis-h\"\n        btnColor=\"link\"\n        dropDownButtonLabel=\"Manage device {{ device?.friendlyName || 'Unknown' }}\"\n        i18n-dropDownButtonLabel=\"Device list item dropdown menu aria label@@bb-device-list-item-ui.dropdown.aria\"\n        data-role=\"device-item-menu\"\n        [btnCircle]=\"true\"\n        [disabled]=\"isManageDisabled\">\n        <ng-template bbDropdownMenuItem>\n          <ng-container *ngIf=\"!isDeviceDisabled() ; else disabledDeviceMenuItems\">\n            <button\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"device-item-edit\"\n              i18n=\"Device list item edit name text@@bb-device-list-item-ui.edit\"\n              (click)=\"onManage()\">\n              Edit name\n            </button>\n            <button\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"device-item-suspend\"\n              i18n=\"Device list item suspend text@@bb-device-list-item-ui.suspend\"\n              (click)=\"isSuspending = true\">\n              Suspend device\n            </button>\n          </ng-container>\n          <button\n            role=\"menuitem\"\n            class=\"dropdown-item\"\n            data-role=\"device-item-remove\"\n            i18n=\"Device list item remove text@@bb-device-list-item-ui.remove\"\n            (click)=\"isRemoving = true\">\n            Remove device\n          </button>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n  </div>\n</div>\n\n<ng-template #defaultFriendlyName i18n=\"Default friendly name@@bb-device-list-item-ui.default-friendly-name\">\n  <span data-role=\"device-item-friendly-name-default\">Unknown Device</span>\n</ng-template>\n\n<ng-template #disabledDeviceMenuItems>\n  <button\n    role=\"menuitem\"\n    class=\"dropdown-item\"\n    data-role=\"device-item-restore\"\n    i18n=\"Device list item restore text@@bb-device-list-item-ui.restore\"\n    (click)=\"isRestoring = true\">\n    Restore device\n  </button>\n</ng-template>\n\n<bb-device-confirmation-modal-ui\n  i18n-cancelButtonText=\"Suspended Modal cancel button text@@bb-device-list-item-ui.modal.suspended.cancel-text\"\n  cancelButtonText=\"Cancel\"\n  i18n-confirmButtonText=\"Suspended Modal confirm button text@@bb-device-list-item-ui.modal.suspended.confirm-text\"\n  confirmButtonText=\"Suspend device\"\n  i18n-modalHeadingText=\"Suspended Modal heading@@bbb-device-list-item-ui.modal.suspended.heading\"\n  modalHeadingText=\"Confirm device suspension\"\n  i18n-modalBodyText=\"Suspended Modal body@@bb-device-list-item-ui.modal.suspended.body\"\n  modalBodyText=\"Are you sure that you wish to suspend the following device?\"\n  [isOpen]=\"isSuspending\"\n  [device]=\"device\"\n  [iconName]=\"icon\"\n  (cancel)=\"isSuspending = false\"\n  (confirm)=\"onSuspend();\">\n</bb-device-confirmation-modal-ui>\n\n<bb-device-confirmation-modal-ui\n  i18n-cancelButtonText=\"Restored Modal cancel button text@@bb-device-list-item-ui.modal.restored.cancel-text\"\n  cancelButtonText=\"Cancel\"\n  i18n-confirmButtonText=\"Restored Modal confirm button text@@bb-device-list-item-ui.modal.restored.confirm-text\"\n  confirmButtonText=\"Restore device\"\n  i18n-modalHeadingText=\"Restored Modal heading@@bbb-device-list-item-ui.modal.restored.heading\"\n  modalHeadingText=\"Confirm device restoration\"\n  i18n-modalBodyText=\"Restored Modal body@@bb-device-list-item-ui.modal.restored.body\"\n  modalBodyText=\"Are you sure that you wish to restore the following device?\"\n  [isOpen]=\"isRestoring\"\n  [device]=\"device\"\n  [iconName]=\"icon\"\n  (cancel)=\"isRestoring = false\"\n  (confirm)=\"onRestore()\">\n</bb-device-confirmation-modal-ui>\n\n<bb-device-confirmation-modal-ui\n  confirmButtonColor=\"danger\"\n  i18n-cancelButtonText=\"Removed Modal cancel button text@@bb-device-list-item-ui.modal.removed.cancel-text\"\n  cancelButtonText=\"Keep device\"\n  i18n-confirmButtonText=\"Removed Modal confirm button text@@bb-device-list-item-ui.modal.removed.confirm-text\"\n  confirmButtonText=\"Remove device\"\n  i18n-modalHeadingText=\"Removed Modal heading@@bbb-device-list-item-ui.modal.removed.heading\"\n  modalHeadingText=\"Confirm device removal\"\n  i18n-modalBodyText=\"Removed Modal body@@bb-device-list-item-ui.modal.removed.body\"\n  modalBodyText=\"Are you sure that you wish to remove the following device?\"\n  [isOpen]=\"isRemoving\"\n  [device]=\"device\"\n  [iconName]=\"icon\"\n  (cancel)=\"isRemoving = false\"\n  (confirm)=\"onRemove()\">\n</bb-device-confirmation-modal-ui>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectorRef,\n  Directive,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Validators, FormGroup, AbstractControl, FormBuilder } from '@angular/forms';\nimport { Device, ModifiedDevice } from '../../models/device-management-types';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-manage-device-form-ui',\n  templateUrl: './manage-device-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ManageDeviceFormComponent implements OnInit {\n  @Input()\n  set device(value: Device) {\n    this.managedDevice = value;\n  }\n  /**\n   * Whether the device is being saved.\n   * Defaults to false.\n   */\n  @Input() isSaving = false;\n  @Output() save = new EventEmitter<ModifiedDevice>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() suspend = new EventEmitter<string>();\n  @Output() remove = new EventEmitter<string>();\n\n  form: FormGroup | undefined;\n  isSubmitted = false;\n  hostRef = this;\n  private managedDevice: Device | undefined;\n\n  constructor(private readonly formBuilder: FormBuilder, private readonly cd: ChangeDetectorRef) {}\n\n  /**\n   * Sets the device to be managed.\n   */\n  get device(): Device {\n    if (this.managedDevice) {\n      return this.managedDevice;\n    }\n\n    throw new Error('Device not set');\n  }\n\n  get control(): AbstractControl {\n    if (this.form) {\n      return this.form.controls.friendlyName;\n    }\n    throw new Error('Form not set');\n  }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      friendlyName: [this.device.friendlyName || '', Validators.required],\n    });\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  onSave() {\n    this.isSubmitted = true;\n    this.control.markAsTouched();\n    this.cd.markForCheck();\n\n    if (this.form && this.form.valid) {\n      this.save.emit({ ...this.device, friendlyName: this.control.value, oldFriendlyName: this.device.friendlyName });\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbDeviceInformationFormCustomizable]',\n})\nexport class DeviceInformationFormCustomizableDirective extends BbTemplate<ManageDeviceFormComponent, undefined> {}\n","<ng-container bbDeviceInformationFormCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbDeviceInformationFormCustomizable let-hostRef>\n  <div data-role=\"device-form\">\n    <div class=\"bb-block bb-block--lg\">\n      <bb-header-ui\n        headingType=\"h3\"\n        i18n-heading=\"Manage Device form heading@@bb-manage-device-form-ui.heading\"\n        heading=\"Edit Name\">\n      </bb-header-ui>\n    </div>\n    <form [formGroup]=\"hostRef.form\" (submit)=\"hostRef.onSave()\">\n      <div class=\"form-group\">\n        <bb-input-text-ui\n          i18n-label=\"Friendly Name form field label@@bb-manage-device-form-ui.friendly-name-field.label\"\n          label=\"Name of device\"\n          class=\"bb-form-field bb-form-field--md\"\n          formControlName=\"friendlyName\"\n          data-role=\"device-form-friendly-name-input\"\n          [maxLength]=\"50\"\n          [autofocus]=\"true\">\n        </bb-input-text-ui>\n        <bb-input-validation-message-ui [showErrors]=\"hostRef.isSubmitted\">\n          <span *ngIf=\"hostRef.control.errors?.required\"\n            data-role=\"device-form-friendly-name-required\"\n            i18n=\"Manage device form device required text@@bb-manage-device-form-ui.required\">\n            Device name required.\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n      <div class=\"bb-block bb-block--xs\">\n        <span i18n=\"Device vendor and model helper text@@bb-manage-device-form-ui.device.helper\">\n          Device: \n        </span>\n        <bb-device-vendor-model-ui\n          [device]=\"hostRef.device\"\n          class=\"device-information__form-device-type\">\n        </bb-device-vendor-model-ui>\n      </div>\n      <div\n        *ngIf=\"hostRef.device?.created as createdDate\"\n        class=\"bb-block bb-block--lg bb-subtitle bb-text-support\">\n        <div *ngIf=\"!hostRef.createdDateFormat; else deviceRegisteredOn\">\n          <span\n            i18n=\"Device registration date helper text@@bb-manage-device-form-ui.registration-date.helper\">\n            Registered on:\n          </span>\n          {{ createdDate | date :'d MMM yyyy' }}\n        </div>\n        <ng-template #deviceRegisteredOn>\n          <bb-device-registered-on-ui [createdDate]=\"createdDate\"></bb-device-registered-on-ui>\n        </ng-template>\n      </div>\n      <div class=\"bb-button-bar bb-button-bar--reverse\">\n        <bb-load-button-ui\n          color=\"primary\"\n          class=\"bb-button-bar__button\"\n          type=\"submit\"\n          i18n=\"Save changes button text@@bb-manage-device-form-ui.button.save\"\n          data-role=\"device-form-save\"\n          [disabled]=\"hostRef.isSaving\"\n          [isLoading]=\"hostRef.isSaving\">\n          Save changes\n        </bb-load-button-ui>\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"bb-button-bar__button\"\n          i18n=\"Cancel button text@@bb-manage-device-form-ui.button.cancel\"\n          data-role=\"device-form-cancel\"\n          [disabled]=\"hostRef.isSaving\"\n          (click)=\"hostRef.onCancel()\">\n          Cancel\n        </button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, Directive, ChangeDetectionStrategy } from '@angular/core';\nimport { Device, ModifiedDevice } from '../../models/device-management-types';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-device-information-ui',\n  templateUrl: './device-information.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeviceInformationComponent {\n  @Input()\n  set isSaving(value: boolean) {\n    this.isSavingState = value;\n    if (!this.isSavingState) {\n      this.toggleManageDevice();\n    }\n  }\n  /**\n   * The list of devices to display.\n   */\n  @Input() devices: Device[] | undefined;\n  /**\n   * Whether the widget is loading.\n   * Defaults to false.\n   */\n  @Input() isLoading = false;\n  /**\n   * The error state of the widget.\n   */\n  @Input() errorState: Error | undefined;\n  @Output() save = new EventEmitter<ModifiedDevice>();\n  @Output() remove = new EventEmitter<Device>();\n  @Output() suspend = new EventEmitter<Device>();\n  @Output() restore = new EventEmitter<Device>();\n\n  hostRef = this;\n  private isSavingState = false;\n  private managedDeviceIndex: number | undefined;\n\n  /**\n   * Sets whether the device information is being saved.\n   */\n  get isSaving() {\n    return this.isSavingState;\n  }\n\n  toggleManageDevice(index?: number) {\n    this.managedDeviceIndex = index;\n  }\n\n  isManagingDevice(index?: number) {\n    return index === this.managedDeviceIndex;\n  }\n\n  onRestore(device: Device) {\n    this.restore.emit(device);\n  }\n\n  onRemove(device: Device) {\n    this.remove.emit(device);\n  }\n\n  onSuspend(device: Device) {\n    this.suspend.emit(device);\n  }\n\n  onSave(device: ModifiedDevice) {\n    this.save.emit(device);\n  }\n}\n\n@Directive({\n  selector: '[bbDeviceInformationWidgetCustomizable]',\n})\nexport class DeviceInformationWidgetCustomizableDirective extends BbTemplate<DeviceInformationComponent, undefined> {}\n","<ng-container bbDeviceInformationWidgetCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbDeviceInformationWidgetCustomizable let-hostRef>\n  <div class=\"card card-lg\">\n    <bb-header-ui\n      data-role=\"widget-header\"\n      headingType=\"h2\"\n      class=\"card-header\"\n      i18n-heading=\"Device information widget header@@bb-device-information-ui.header\"\n      heading=\"Device information\">\n    </bb-header-ui>\n\n    <div class=\"card-body\" *ngIf=\"hostRef.isLoading || hostRef.errorState\">\n      <bb-loading-indicator-ui *ngIf=\"hostRef.isLoading\"\n        i18n-text=\"Device information widget loading text@@bb-device-information-ui.loading\"\n        text=\"Loading...\">\n      </bb-loading-indicator-ui>\n\n      <bb-common-error-state-ui *ngIf=\"hostRef.errorState\"\n        class=\"bb-state-container\"\n        data-role=\"state-error\"\n        [error]=\"hostRef.errorState\">\n      </bb-common-error-state-ui>\n    </div>\n\n    <ng-container *ngIf=\"!hostRef.isLoading && !hostRef.errorState && hostRef.devices\">\n      <ng-container *ngIf=\"hostRef.devices.length; else emptyState\">\n        <ng-container *ngFor=\"let device of hostRef.devices; index as i\">\n          <ng-container *ngIf=\"!hostRef.isManagingDevice(i); else managingDevice\">\n            <div class=\"card-section\">\n              <bb-device-list-item-ui\n                [device]=\"device\"\n                [isManageDisabled]=\"!hostRef.isManagingDevice()\"\n                (manage)=\"hostRef.toggleManageDevice(i)\"\n                (restore)=\"hostRef.onRestore($event)\"\n                (remove)=\"hostRef.onRemove($event)\"\n                (suspend)=\"hostRef.onSuspend($event)\">\n              </bb-device-list-item-ui>\n            </div>\n          </ng-container>\n          <ng-template #managingDevice>\n            <div class=\"card-section card-section--highlight\">\n              <bb-manage-device-form-ui\n                [device]=\"device\"\n                [isSaving]=\"hostRef.isSaving\"\n                (save)=\"hostRef.onSave($event)\"\n                (cancel)=\"hostRef.toggleManageDevice()\">\n              </bb-manage-device-form-ui>\n            </div>\n          </ng-template>\n        </ng-container>\n      </ng-container>\n\n      <ng-template #emptyState>\n        <bb-empty-state-ui\n          class=\"bb-state-container\"\n          data-role=\"state-empty\"\n          title=\"No devices found\"\n          i18n-title=\"Device information widget empty list text@@bb-device-information-ui.empty\"\n          iconSize=\"xxl\"\n          iconModifier=\"phonelink-off\">\n        </bb-empty-state-ui>\n      </ng-template>\n    </ng-container>\n  </div>\n</ng-template>\n","import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Device, ManageMyDevicesService, PatchDeviceRequest } from '@backbase/data-ang/device';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class UserDeviceInformationService {\n  constructor(private readonly deviceManagementService: ManageMyDevicesService) {}\n\n  getDevices(): Observable<Array<Device>> {\n    return this.deviceManagementService.getMyDevices().pipe(map(response => response.devices));\n  }\n\n  updateDevice(deviceId: string, patchDeviceRequest: PatchDeviceRequest): Observable<HttpResponse<any>> {\n    return this.deviceManagementService.patchMyDeviceByDeviceId({\n      deviceId,\n      patchDeviceRequest,\n    });\n  }\n\n  removeDevice(deviceId: string): Observable<HttpResponse<any>> {\n    return this.deviceManagementService.deleteMyDeviceByDeviceId({ deviceId });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Device, ManageOtherUsersDevicesService, PatchDeviceRequest } from '@backbase/data-ang/device';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AdminDeviceInformationService {\n  private dbsUserId = '';\n\n  constructor(private readonly deviceManagementService: ManageOtherUsersDevicesService) {}\n\n  getDevices(): Observable<Array<Device>> {\n    return this.deviceManagementService\n      .getDevicesByDbsUserId({ dbsUserId: this.dbsUserId })\n      .pipe(map(response => response.devices));\n  }\n\n  updateDevice(deviceId: string, patchDeviceRequest: PatchDeviceRequest): Observable<any> {\n    return this.deviceManagementService.patchUserDeviceByDbsUserIdAndDeviceId({\n      dbsUserId: this.dbsUserId,\n      deviceId,\n      patchDeviceRequest,\n    });\n  }\n\n  removeDevice(deviceId: string): Observable<any> {\n    return this.deviceManagementService.deleteUserDeviceByDeviceId({\n      dbsUserId: this.dbsUserId,\n      deviceId,\n    });\n  }\n\n  public set dbsUserIdInput(userId: string) {\n    this.dbsUserId = userId;\n  }\n\n  public get dbsUserIdInput() {\n    return this.dbsUserId;\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface DefaultProperties {\n  dismissTimeout: number;\n  isAdminWidget: boolean;\n}\n\nconst defaultProperties: DefaultProperties = {\n  dismissTimeout: 3,\n  isAdminWidget: false,\n};\n\n@Injectable()\nexport class DeviceInformationPreferenceService {\n  constructor(@Optional() private readonly model?: ItemModel) {}\n\n  getTimeoutPreference(): Observable<number> {\n    return this.model\n      ? this.model.property<number>('dismissTimeout', defaultProperties.dismissTimeout)\n      : of(defaultProperties.dismissTimeout);\n  }\n\n  getAdminPreference(): Observable<boolean> {\n    return this.model\n      ? this.model\n          .property<string>('isAdminWidget', JSON.stringify(defaultProperties.isAdminWidget))\n          .pipe(map((value: string) => !!value && value !== 'false'))\n      : of(defaultProperties.isAdminWidget);\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, TemplateRef, ViewChild, OnInit, Input } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { switchMap, first, tap, catchError } from 'rxjs/operators';\nimport { UserDeviceInformationService } from './services/user-device-information.service';\nimport { AdminDeviceInformationService } from './services/admin-device-information.service';\nimport { Device, DeviceStatus, UpdateAction, ModifiedDevice } from './models/device-management-types';\nimport { NotificationService } from '@backbase/ui-ang';\nimport { DeviceInformationPreferenceService } from './services/device-information-preference.service';\n\n@Component({\n  selector: 'bb-device-information-widget',\n  templateUrl: './device-information-widget.component.html',\n  providers: [DeviceInformationPreferenceService, UserDeviceInformationService, AdminDeviceInformationService],\n})\nexport class DeviceInformationWidgetComponent implements OnInit {\n  @ViewChild('notificationSuccessHeader') successHeader: TemplateRef<any> | string = '';\n  @ViewChild('notificationSuccessMessage') successMessage: TemplateRef<any> | string = '';\n  @ViewChild('notificationFailureHeader') failureHeader: TemplateRef<any> | string = '';\n  @ViewChild('notificationFailureMessage') failureMessage: TemplateRef<any> | string = '';\n  @ViewChild('notificationPermissionsFailureMessage') failurePermissionsMessage: TemplateRef<any> | string = '';\n\n  /**\n   * Time to live for the success notification message in seconds\n   */\n  /* tslint:disable-next-line:no-input-rename */\n  @Input('dismissTimeout') notificationDismissTime: number | undefined;\n\n  /**\n   * Set the user type of the widget to change it's behaviour\n   */\n  /* tslint:disable-next-line:no-input-rename */\n  @Input('isAdminWidget') isAdmin: boolean | undefined;\n\n  @Input()\n  set dbsUserId(inputUserId: string) {\n    this.adminDataService.dbsUserIdInput = inputUserId;\n  }\n\n  /**\n   * Sets the id for the user to get device information for.\n   */\n  get dbsUserId() {\n    return this.adminDataService.dbsUserIdInput;\n  }\n\n  updateActions = UpdateAction;\n  updateAction: UpdateAction | undefined;\n  private managedDevice: ModifiedDevice | undefined;\n  private readonly refreshDevicesSubject = new BehaviorSubject<void>(undefined);\n  private readonly isLoadingSubject = new BehaviorSubject<boolean>(false);\n  private readonly isSavingSubject = new BehaviorSubject<boolean>(false);\n  private readonly errorSubject = new BehaviorSubject<Error | undefined>(undefined);\n  private dismissTimeout = 3000;\n  private isAdminWidget = false;\n  readonly isLoading = this.isLoadingSubject.asObservable();\n  readonly isSaving = this.isSavingSubject.asObservable();\n  readonly errorState = this.errorSubject.asObservable();\n  readonly devices = this.getDevicesObservable();\n\n  constructor(\n    private readonly userDataService: UserDeviceInformationService,\n    private readonly adminDataService: AdminDeviceInformationService,\n    private readonly notificationService: NotificationService,\n    private readonly preferenceService: DeviceInformationPreferenceService,\n  ) {}\n\n  ngOnInit(): void {\n    if (this.notificationDismissTime) {\n      this.dismissTimeout = this.notificationDismissTime * 1000;\n    } else {\n      this.preferenceService\n        .getTimeoutPreference()\n        .pipe(first())\n        .subscribe(time => (this.dismissTimeout = time * 1000));\n    }\n\n    if (typeof this.isAdmin === 'boolean') {\n      this.isAdminWidget = this.isAdmin;\n    } else {\n      this.preferenceService\n        .getAdminPreference()\n        .pipe(first())\n        .subscribe(adminPreference => (this.isAdminWidget = adminPreference));\n    }\n  }\n\n  getFriendlyName(defaultValue: string, modifiedDevice?: ModifiedDevice) {\n    const device = modifiedDevice || this.managedDevice;\n    return device && device.friendlyName ? `'${device.friendlyName}'` : defaultValue;\n  }\n\n  getOldFriendlyName(defaultValue: string, modifiedDevice?: ModifiedDevice) {\n    const device = modifiedDevice || this.managedDevice;\n    return device && device.oldFriendlyName ? `'${device.oldFriendlyName}'` : defaultValue;\n  }\n\n  onSave(device: ModifiedDevice) {\n    this.isSavingSubject.next(true);\n    this.updateAction = UpdateAction.Save;\n    this.managedDevice = device;\n\n    this.dataService\n      .updateDevice(device.deviceId, {\n        friendlyName: device.friendlyName,\n      })\n      .pipe(\n        tap(() => this.isSavingSubject.next(false)),\n        catchError((err: HttpErrorResponse) => {\n          this.isSavingSubject.next(false);\n          return this.onError(err);\n        }),\n      )\n      .subscribe(this.onSuccess);\n  }\n\n  onRemove(device: Device) {\n    this.updateAction = UpdateAction.Remove;\n    this.managedDevice = device;\n    this.dataService\n      .removeDevice(device.deviceId)\n      .pipe(catchError(this.onError))\n      .subscribe(this.onSuccess);\n  }\n\n  onSuspend(device: Device) {\n    this.updateAction = UpdateAction.Suspend;\n    this.managedDevice = device;\n    this.updateDevice(device, DeviceStatus.DISABLED);\n  }\n\n  onRestore(device: Device) {\n    this.updateAction = UpdateAction.Restore;\n    this.managedDevice = device;\n    this.updateDevice(device, DeviceStatus.ENABLED);\n  }\n\n  private getDevicesObservable() {\n    return this.refreshDevicesSubject.pipe(\n      switchMap(() => {\n        this.errorSubject.next(undefined);\n        this.isLoadingSubject.next(true);\n        return this.dataService.getDevices();\n      }),\n      tap(() => {\n        this.isLoadingSubject.next(false);\n      }),\n      catchError(error => {\n        this.isLoadingSubject.next(false);\n        this.errorSubject.next(error);\n        return new Observable();\n      }),\n    );\n  }\n\n  private updateDevice(device: Device, action: DeviceStatus) {\n    this.dataService\n      .updateDevice(device.deviceId, {\n        status: action,\n      })\n      .pipe(catchError(this.onError))\n      .subscribe(this.onSuccess);\n  }\n\n  private readonly onError = (err: HttpErrorResponse) => {\n    this.notificationService.showNotification({\n      header: this.failureHeader,\n      message: this.getErrorMessage(err),\n      messageContext: {\n        device: this.managedDevice,\n      },\n      modifier: 'error',\n      ttl: this.dismissTimeout,\n    });\n    return new Observable();\n  };\n\n  private readonly onSuccess = () => {\n    this.notificationService.showNotification({\n      header: this.successHeader,\n      headerContext: {\n        actionType: this.updateAction,\n      },\n      message: this.successMessage as TemplateRef<any>,\n      messageContext: {\n        actionType: this.updateAction,\n        device: this.managedDevice,\n      },\n      modifier: 'success',\n      ttl: this.dismissTimeout,\n    });\n    this.refreshDevicesSubject.next(undefined);\n  };\n\n  private getErrorMessage(error: HttpErrorResponse) {\n    return (error.status === 403 ? this.failurePermissionsMessage : this.failureMessage) as TemplateRef<any>;\n  }\n\n  private get dataService(): AdminDeviceInformationService | UserDeviceInformationService {\n    return this.isAdminWidget ? this.adminDataService : this.userDataService;\n  }\n}\n","<bb-device-information-ui\n  [devices]=\"devices | async\"\n  [isLoading]=\"isLoading | async\"\n  [isSaving]=\"isSaving | async\"\n  [errorState]=\"errorState | async\"\n  (save)=\"onSave($event)\"\n  (remove)=\"onRemove($event)\"\n  (suspend)=\"onSuspend($event)\"\n  (restore)=\"onRestore($event)\"\n></bb-device-information-ui>\n\n<ng-template #notificationSuccessHeader let-actionType=\"actionType\">\n  <ng-container [ngSwitch]=\"actionType\">\n    <div *ngSwitchCase=\"updateActions.Restore\"\n      data-role=\"notification-header-restored\"\n      i18n=\"Notification restored header@@bb-device-information-widget.notification.header.restored\">\n      Device restored\n    </div>\n    <div *ngSwitchCase=\"updateActions.Suspend\" \n      data-role=\"notification-header-suspended\"\n      i18n=\"Notification suspended header@@bb-device-information-widget.notification.header.suspended\">\n      Device suspended\n    </div>\n    <div *ngSwitchCase=\"updateActions.Remove\"\n      data-role=\"notification-header-removed\"\n      i18n=\"Notification removed header@@bb-device-information-widget.notification.header.removed\">\n      Device removed\n    </div>\n    <div *ngSwitchCase=\"updateActions.Save\"\n      data-role=\"notification-header-saved\"\n      i18n=\"Notification saved header@@bb-device-information-widget.notification.header.saved\">\n      Device name changed\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationSuccessMessage let-actionType=\"actionType\" let-device=\"device\">\n  <ng-container [ngSwitch]=\"actionType\">\n    <div *ngSwitchCase=\"updateActions.Restore\"\n      i18n=\"Notification restored message@@bb-device-information-widget.notification.message.restored\">\n      {{ getFriendlyName('Device', device) }} restored successfully.\n    </div>\n    <div *ngSwitchCase=\"updateActions.Suspend\"\n      i18n=\"Notification suspended message@@bb-device-information-widget.notification.message.suspended\">\n      {{ getFriendlyName('Device', device) }} suspended successfully.\n    </div>\n    <div *ngSwitchCase=\"updateActions.Remove\"\n      i18n=\"Notification removed message@@bb-device-information-widget.notification.message.removed\">\n      {{ getFriendlyName('Device', device) }} removed successfully.\n    </div>\n    <div *ngSwitchCase=\"updateActions.Save\"\n      i18n=\"Notification saved message@@bb-device-information-widget.notification.message.saved\">\n      {{ getFriendlyName('Device', device) }} name changed successfully.\n    </div>\n  </ng-container>\n</ng-template>\n\n<ng-template #notificationFailureHeader>\n  <div data-role=\"notification-header-failed\" i18n=\"Failure notification header@@bb-device-information-widget.notification.failure.header\">\n    Device update failed\n  </div>\n</ng-template>\n\n<ng-template #notificationFailureMessage let-device=\"device\">\n  <div i18n=\"Failure notification message@@bb-device-information-widget.notification.failure.message\">\n    Failed to update {{ getOldFriendlyName('device', device) }}.\n  </div>\n</ng-template>\n\n<ng-template #notificationPermissionsFailureMessage let-device=\"device\">\n  <div i18n=\"Permission failure notification message@@bb-device-information-widget.notification.permissions.failure.message\">\n    Insufficient permissions to update {{ getOldFriendlyName('device', device) }}.\n  </div>\n</ng-template>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport {\n  BadgeModule,\n  ButtonModule,\n  DropdownMenuModule,\n  EmptyStateModule,\n  ErrorCommonStateModule,\n  HeaderModule,\n  IconModule,\n  InputTextModule,\n  InputValidationMessageModule,\n  LoadButtonModule,\n  LoadingIndicatorModule,\n  ModalModule,\n  NotificationModule,\n} from '@backbase/ui-ang';\nimport {\n  DeviceConfirmationModalComponent,\n  DeviceInformationConfirmationModalCustomizableDirective,\n} from './components/bb-device-confirmation-modal-ui/device-confirmation-modal.component';\nimport {\n  DeviceInformationComponent,\n  DeviceInformationWidgetCustomizableDirective,\n} from './components/bb-device-information-ui/device-information.component';\nimport { DeviceListItemComponent } from './components/bb-device-list-item-ui/device-list-item.component';\nimport { DeviceRegisteredOnComponent } from './components/bb-device-registered-on-ui/device-registered-on.component';\nimport { DeviceVendorModelComponent } from './components/bb-device-vendor-model-ui/device-vendor-model.component';\nimport {\n  DeviceInformationFormCustomizableDirective,\n  ManageDeviceFormComponent,\n} from './components/bb-manage-device-form-ui/manage-device-form.component';\nimport { DeviceInformationWidgetComponent } from './device-information-widget.component';\n\nconst componentModules = [\n  DeviceInformationComponent,\n  DeviceInformationWidgetComponent,\n  DeviceListItemComponent,\n  ManageDeviceFormComponent,\n  DeviceVendorModelComponent,\n  DeviceConfirmationModalComponent,\n  DeviceRegisteredOnComponent,\n];\nconst componentDirectives = [\n  DeviceInformationWidgetCustomizableDirective,\n  DeviceInformationFormCustomizableDirective,\n  DeviceInformationConfirmationModalCustomizableDirective,\n];\nconst uiModules = [\n  HeaderModule,\n  LoadingIndicatorModule,\n  ErrorCommonStateModule,\n  IconModule,\n  ButtonModule,\n  InputValidationMessageModule,\n  InputTextModule,\n  LoadButtonModule,\n  DropdownMenuModule,\n  ModalModule,\n  NotificationModule,\n  ReactiveFormsModule,\n  EmptyStateModule,\n  BadgeModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { DeviceInformationWidgetComponent },\n    }),\n    ...uiModules,\n  ],\n  declarations: [...componentModules, ...componentDirectives],\n  exports: [...componentModules, ...uiModules, ...componentDirectives],\n})\nexport class DeviceInformationWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}