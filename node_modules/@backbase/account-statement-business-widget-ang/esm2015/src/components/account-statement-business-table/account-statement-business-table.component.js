import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output, ViewChild, } from '@angular/core';
import { mimeTypeExtensions, } from '@backbase/account-statement-common-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/account-statement-common-ang";
import * as i2 from "@backbase/ui-ang/notification";
import * as i3 from "../../services/account-statement-business-properties.service";
import * as i4 from "../account-statement-view-online-business-wrapper/account-statement-view-online-business-wrapper.component";
import * as i5 from "@backbase/ui-ang/loading-indicator";
import * as i6 from "@backbase/ui-ang/table";
import * as i7 from "@angular/common";
import * as i8 from "@backbase/ui-ang/date-pipe";
export class AccountStatementBusinessTableComponent {
    constructor(dataService, notificationsService, propertiesService) {
        this.dataService = dataService;
        this.notificationsService = notificationsService;
        this.propertiesService = propertiesService;
        this.loading = false;
        this.showCategory = true;
        this.sort = new EventEmitter();
        this.mimeTypeExtensions = mimeTypeExtensions;
        this.accountStatementsValue = [];
    }
    set accountStatements(accountStatements) {
        this.accountStatementsValue = accountStatements.map(accountStatement => (Object.assign(Object.assign({}, accountStatement), { documents: accountStatement.documents.map(document => (Object.assign(Object.assign({}, document), { url: this.getDocumentLink(document) }))) })));
    }
    get accountStatements() {
        return this.accountStatementsValue;
    }
    onSort(sortEvent) {
        this.sort.emit(sortEvent);
    }
    onDownloadFailure() {
        this.propertiesService.notificationDismissTime$.subscribe(ttl => {
            this.notificationsService.showNotification({
                header: this.downloadFailureNotificationHeader,
                message: '',
                modifier: 'error',
                ttl,
            });
        });
    }
    getDirection(column) {
        return this.sortingParams && this.sortingParams.column === column ? this.sortingParams.direction : '';
    }
    getDocumentLink(document) {
        return document.url || this.dataService.getAccountStatementDownloadUrl(document.uid || '');
    }
}
AccountStatementBusinessTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementBusinessTableComponent, deps: [{ token: i1.AccountStatementDataService }, { token: i2.NotificationService }, { token: i3.AccountStatementBusinessPropertiesService }], target: i0.ɵɵFactoryTarget.Component });
AccountStatementBusinessTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementBusinessTableComponent, selector: "bb-account-statement-business-table", inputs: { accountStatements: "accountStatements", sortingParams: "sortingParams", loading: "loading", showCategory: "showCategory" }, outputs: { sort: "sort" }, viewQueries: [{ propertyName: "downloadFailureNotificationHeader", first: true, predicate: ["downloadFailureNotificationHeader"], descendants: true }], ngImport: i0, template: "<ng-container\n  bbAccountStatementBusinessTableCustomizable\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    accountStatements: accountStatements,\n    mimeTypeExtensions: mimeTypeExtensions,\n    loading: loading\n  }\"\n></ng-container>\n\n<ng-template\n  bbAccountStatementBusinessTableCustomizable\n  let-hostRef\n  let-accountStatements=\"context.accountStatements\"\n  let-mimeTypeExtensions=\"context.mimeTypeExtensions\"\n  let-loading=\"context.loading\"\n>\n  <table\n    bbTableFocus\n    [bbTable]=\"accountStatements\"\n    (sort)=\"hostRef.onSort($event)\"\n    class=\"table\"\n    aria-label=\"Account statements table\"\n    i18n-aria-label=\"Aria label for account statements table@@account-statement-business.table.aria-label\"\n  >\n    <thead>\n      <tr class=\"d-sm-table-row d-none\">\n        <th bbSortable=\"date\" [direction]=\"hostRef.getDirection('date')\" scope=\"col\">\n          <span\n            class=\"th-content\"\n            i18n=\"Book date|table heading@@account-statement-business.table-head.book-date\"\n            data-role=\"book-date-thead\"\n            >Book date</span\n          >\n        </th>\n        <th *ngIf=\"showCategory\" bbSortable=\"category\" [direction]=\"hostRef.getDirection('category')\" scope=\"col\">\n          <span\n            class=\"th-content\"\n            i18n=\"Category|table heading@@account-statement-business.table-head.category\"\n            data-role=\"category-thead\"\n            >Category</span\n          >\n        </th>\n        <th bbSortable=\"accountName\" [direction]=\"hostRef.getDirection('accountName')\" scope=\"col\">\n          <span\n            class=\"th-content\"\n            i18n=\"Account name, number|table heading@@account-statement-business.table-head.account\"\n            data-role=\"account-name-thead\"\n            >Account name, number</span\n          >\n        </th>\n        <th scope=\"col\" class=\"bb-text-align-center\">\n          <span\n            class=\"th-content\"\n            i18n=\"Preview|table heading@@account-statement-business.table-head.preview\"\n            data-role=\"preview-thead\"\n            >Preview</span\n          >\n        </th>\n        <th scope=\"col\" class=\"bb-text-align-center\">\n          <span\n            class=\"th-content\"\n            i18n=\"Download|table heading@@account-statement-business.table-head.download\"\n            data-role=\"download-thead\"\n            >Download</span\n          >\n        </th>\n      </tr>\n    </thead>\n\n    <tbody *ngIf=\"!loading\">\n      <ng-container *ngFor=\"let accountStatement of accountStatements; let rowNumber = index\">\n        <tr class=\"d-sm-table-row d-none\">\n          <td data-role=\"date-td\">{{ accountStatement.date | bbDate: 'shortDate' }}</td>\n\n          <td *ngIf=\"showCategory\" data-role=\"category-td\">{{ accountStatement.category }}</td>\n\n          <td class=\"text-break\" data-role=\"account-name-td\">\n            <div>{{ accountStatement.accountName }}</div>\n            <div class=\"bb-text-support\">{{ accountStatement.accountNumber }}</div>\n          </td>\n\n          <td class=\"bb-text-align-center\">\n            <span\n              *ngIf=\"accountStatement.documents?.length\"\n              id=\"describe-preview-by-{{ rowNumber }}\"\n              class=\"sr-only\"\n              i18n=\"\n                Account and book date|describing what row data this preview action is\n                for@@account-statement-business.preview-button.description\"\n            >\n              Preview for account {{ accountStatement.accountName }} and book date\n              {{ accountStatement.date | bbDate: 'fullDate' }}\n            </span>\n\n            <bb-account-statement-view-online-business-wrapper\n              [documents]=\"accountStatement.documents\"\n              describedByElementId=\"describe-preview-by-{{ rowNumber }}\"\n            ></bb-account-statement-view-online-business-wrapper>\n          </td>\n\n          <td class=\"bb-text-align-center\">\n            <span *ngIf=\"accountStatement.documents?.length\" id=\"describe-download-by-{{ rowNumber }}\" class=\"sr-only\">\n              <ng-container\n                *ngIf=\"accountStatement.documents?.length === 1; else multipleDownloadDocumentsDescription\"\n                i18n=\"\n                  Account and book date|describing what row data this download action is\n                  for@@account-statement-business.download-button.description\"\n              >\n                Download {{ mimeTypeExtensions[accountStatement.documents[0]?.contentType] }} for account\n                {{ accountStatement.accountName }} and book date {{ accountStatement.date | bbDate: 'fullDate' }}\n              </ng-container>\n\n              <ng-template\n                #multipleDownloadDocumentsDescription\n                i18n=\"\n                  Account and book date|describing what data in a row this download action is\n                  for@@account-statement-business.download-dropdown-button.description\"\n              >\n                Show download actions for account {{ accountStatement.accountName }} and book date\n                {{ accountStatement.date | bbDate: 'fullDate' }}\n              </ng-template>\n            </span>\n\n            <bb-account-statement-downloads\n              describedByElementId=\"describe-download-by-{{ rowNumber }}\"\n              [documents]=\"accountStatement.documents\"\n              [mimeTypeExtensions]=\"mimeTypeExtensions\"\n              (downloadFailure)=\"hostRef.onDownloadFailure()\"\n            ></bb-account-statement-downloads>\n          </td>\n        </tr>\n\n        <div class=\"d-sm-none bb-list__item\">\n          <div class=\"bb-block bb-block--md\">\n            <div class=\"bb-stack bb-stack--align-top\">\n              <div class=\"bb-stack__item\">\n                <div\n                  class=\"bb-block bb-block--xs bb-text-semi-bold\"\n                  i18n=\"Book date|table heading@@account-statement-business.list-head.book-date\"\n                >\n                  Book date\n                </div>\n                <div>{{ accountStatement.date | bbDate: 'shortDate' }}</div>\n              </div>\n\n              <bb-account-statement-view-online-business-wrapper\n                class=\"bb-stack__item bb-stack__item--push-right\"\n                [documents]=\"accountStatement.documents\"\n                describedByElementId=\"describe-preview-by-{{ rowNumber }}\"\n              ></bb-account-statement-view-online-business-wrapper>\n\n              <bb-account-statement-downloads\n                describedByElementId=\"describe-download-by-{{ rowNumber }}\"\n                tooltipPlacement=\"top-right\"\n                [documents]=\"accountStatement.documents\"\n                [mimeTypeExtensions]=\"mimeTypeExtensions\"\n                (downloadFailure)=\"hostRef.onDownloadFailure()\"\n              ></bb-account-statement-downloads>\n            </div>\n          </div>\n          <ng-container *ngIf=\"showCategory\">\n            <div\n              class=\"bb-block bb-block--xs bb-text-semi-bold\"\n              i18n=\"Category|table heading@@account-statement-business.list-head.category\"\n            >\n              Category\n            </div>\n            <div class=\"bb-block bb-block--md\">{{ accountStatement.category }}</div>\n          </ng-container>\n\n          <div\n            class=\"bb-block bb-block--xs bb-text-semi-bold\"\n            i18n=\"Account name|table heading@@account-statement-business.list-head.account-name\"\n          >\n            Account name\n          </div>\n          <div class=\"bb-block bb-block--md\">{{ accountStatement.accountName }}</div>\n\n          <div\n            class=\"bb-block bb-block--xs bb-text-semi-bold\"\n            i18n=\"Account number|table heading@@account-statement-business.list-head.account-number\"\n          >\n            Account number\n          </div>\n          <div class=\"text-break\">{{ accountStatement.accountNumber }}</div>\n        </div>\n      </ng-container>\n    </tbody>\n  </table>\n\n  <bb-loading-indicator-ui *ngIf=\"loading\" loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #downloadFailureNotificationHeader>\n  <ng-container bbAccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective [bbHostRef]=\"this\">\n  </ng-container>\n\n  <ng-template bbAccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective>\n    <span i18n=\"Failed to download statement@@account-statement-business-table-row.error-notification.header\"\n      >The statement cannot be downloaded now, please try again later</span\n    >\n  </ng-template>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i4.AccountStatementViewOnlineBusinessWrapperComponent; }), selector: "bb-account-statement-view-online-business-wrapper", inputs: ["documents", "describedByElementId"] }, { type: i0.forwardRef(function () { return i1.ӨAccountStatementDownloadsComponent; }), selector: "bb-account-statement-downloads", inputs: ["documents", "mimeTypeExtensions", "describedByElementId", "tooltipPlacement"], outputs: ["downloadFailure"] }, { type: i0.forwardRef(function () { return i5.LoadingIndicatorComponent; }), selector: "bb-loading-indicator-ui", inputs: ["text", "loaderSize", "showDelay", "hasBackground", "inline"] }], directives: [{ type: i0.forwardRef(function () { return AccountStatementBusinessTableCustomizableDirective; }), selector: "[bbAccountStatementBusinessTableCustomizable]" }, { type: i0.forwardRef(function () { return i6.TableDirective; }), selector: "table[bbTable]", inputs: ["bbTable"], outputs: ["selectRow", "rowClick", "sort"] }, { type: i0.forwardRef(function () { return i6.TableFocusDirective; }), selector: "[bbTableFocus]" }, { type: i0.forwardRef(function () { return i6.TableSortableDirective; }), selector: "th[bbSortable]", inputs: ["bbSortable", "direction"], outputs: ["sort"] }, { type: i0.forwardRef(function () { return i7.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return i7.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i0.forwardRef(function () { return AccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective; }), selector: "[bbAccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective]" }], pipes: { "bbDate": i0.forwardRef(function () { return i8.BbDatePipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementBusinessTableComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-statement-business-table',
                    templateUrl: './account-statement-business-table.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.AccountStatementDataService }, { type: i2.NotificationService }, { type: i3.AccountStatementBusinessPropertiesService }]; }, propDecorators: { accountStatements: [{
                type: Input
            }], sortingParams: [{
                type: Input
            }], loading: [{
                type: Input
            }], showCategory: [{
                type: Input
            }], sort: [{
                type: Output
            }], downloadFailureNotificationHeader: [{
                type: ViewChild,
                args: ['downloadFailureNotificationHeader']
            }] } });
export class AccountStatementBusinessTableCustomizableDirective extends BbTemplate {
}
AccountStatementBusinessTableCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementBusinessTableCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
AccountStatementBusinessTableCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementBusinessTableCustomizableDirective, selector: "[bbAccountStatementBusinessTableCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementBusinessTableCustomizableDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[bbAccountStatementBusinessTableCustomizable]' }]
        }] });
export class AccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective extends BbTemplate {
}
AccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
AccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective, selector: "[bbAccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbAccountStatementBusinessDownloadFailureNotificationHeaderCustomizableDirective]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,