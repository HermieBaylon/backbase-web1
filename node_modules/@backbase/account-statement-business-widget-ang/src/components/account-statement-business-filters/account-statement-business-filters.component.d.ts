import { ElementRef, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { AccountStatementStoreModel, WidgetPreferences } from '@backbase/account-statement-store-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import { AccountStatementBusinessPropertiesService } from '../../services/account-statement-business-properties.service';
import { Categories, DatePeriods } from '@backbase/account-statement-common-ang';
import { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
import * as i0 from "@angular/core";
declare type DatePreferences = Record<keyof Pick<WidgetPreferences, 'minimalDate' | 'maximumDate'>, NgbDateStruct>;
export declare class AccountStatementBusinessFiltersComponent implements OnInit {
    private readonly fb;
    private readonly store;
    private readonly propertiesService;
    filterButton?: ElementRef;
    readonly filterDatePeriods: typeof DatePeriods;
    filterForm: FormGroup;
    readonly areFiltersApplied$: Observable<boolean>;
    readonly datePreferences$: Observable<DatePreferences>;
    readonly datePeriodsToDisplay$: Observable<string[]>;
    readonly categories$: Observable<Categories>;
    readonly showCategory$: Observable<boolean>;
    constructor(fb: FormBuilder, store: AccountStatementStoreModel, propertiesService: AccountStatementBusinessPropertiesService);
    ngOnInit(): void;
    resetForm(): void;
    focusFilterButton(): void;
    onSubmit(): void;
    setCustomFilter(): void;
    private applyFormData;
    private get initializeDatePreferences();
    private get initializeFilterDatePeriods();
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountStatementBusinessFiltersComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AccountStatementBusinessFiltersComponent, "bb-account-statement-business-filters", never, {}, {}, never, never>;
}
export declare class AccountStatementBusinessFiltersCustomizableDirective extends BbTemplate<AccountStatementBusinessFiltersComponent, {
    areFiltersApplied: boolean;
    filterForm: FormGroup;
    datePreferences: DatePreferences;
    datePeriodsToDisplay: string[];
    categories: Categories;
    showCategory: boolean;
}> {
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountStatementBusinessFiltersCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AccountStatementBusinessFiltersCustomizableDirective, "[bbAccountStatementBusinessFiltersCustomizable]", never, {}, {}, never>;
}
export {};
