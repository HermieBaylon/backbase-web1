import { createMocks } from '@backbase/foundation-ang/data-http';
export const ContactsHttpServiceDeleteContactMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/contacts/{contactId}",
        method: "DELETE",
        responses: [
            {
                status: 202,
                body: {
                    "status": "REQUEST_ACCEPTED"
                }
            },
            {
                status: 409,
                body: {
                    "key": "ApprovalAlreadyExistForContact",
                    "message": "Approval request already exist with this contact."
                }
            },
        ]
    }]);
export const ContactsHttpServiceGetContactMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/contacts/{contactId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0855e686-d31e-4216-b3dd-5d66161d536d",
                    "name": "John Doe",
                    "alias": "John",
                    "category": "Employee",
                    "contactPerson": "Jane Doe",
                    "phoneNumber": "055512345678",
                    "emailId": "john@example.com",
                    "addressLine1": "Backbase enterprise",
                    "addressLine2": "",
                    "streetName": "Jacob Bontiusplaats 9",
                    "town": "Amsterdam",
                    "postCode": "1018 LL",
                    "countrySubDivision": "North Holland",
                    "country": "NL",
                    "accounts": [{
                            "name": "Jane Doe",
                            "alias": "Jane",
                            "accountType": "SAVINGS",
                            "IBAN": "FI21 1234 5600 0007 85",
                            "bankName": "Test Bank",
                            "bankAddressLine1": "Test Bank Co",
                            "bankAddressLine2": "",
                            "bankStreetName": "Jodenbreestraat 96",
                            "bankTown": "Amsterdam",
                            "bankPostCode": "1011NS",
                            "bankCountrySubDivision": "North Holland",
                            "bankCountry": "NL",
                            "accountHolderAddressLine1": "Backbase enterprise",
                            "accountHolderAddressLine2": "",
                            "accountHolderStreetName": "Jacob Bontiusplaats 9",
                            "accountHolderTown": "Amsterdam",
                            "accountHolderPostCode": "1018 LL",
                            "accountHolderCountrySubDivision": "North Holland",
                            "accountHolderCountry": "NL"
                        }],
                    "accessContextScope": "USER",
                    "activeStatus": "ACTIVE"
                }
            },
        ]
    }]);
export const ContactsHttpServiceGetContactsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/contacts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "0855e686-d31e-4216-b3dd-5d66161d536d",
                        "name": "John Doe",
                        "alias": "John",
                        "category": "Employee",
                        "contactPerson": "Jane Doe",
                        "phoneNumber": "055512345678",
                        "emailId": "john@example.com",
                        "addressLine1": "Backbase enterprise",
                        "addressLine2": "",
                        "streetName": "Jacob Bontiusplaats 9",
                        "town": "Amsterdam",
                        "postCode": "1018 LL",
                        "countrySubDivision": "North Holland",
                        "country": "NL",
                        "accounts": [{
                                "name": "Jane Doe",
                                "alias": "Jane",
                                "accountType": "SAVINGS",
                                "IBAN": "FI21 1234 5600 0007 85",
                                "bankName": "Test Bank",
                                "bankAddressLine1": "QA Bank",
                                "bankAddressLine2": "",
                                "bankStreetName": "Jodenbreestraat 96",
                                "bankTown": "Amsterdam",
                                "bankPostCode": "1011NS",
                                "bankCountrySubDivision": "North Holland",
                                "bankCountry": "NL",
                                "accountHolderAddressLine1": "",
                                "accountHolderAddressLine2": "",
                                "accountHolderStreetName": "Woestduinstraat 114-3",
                                "accountHolderTown": "Amsterdam",
                                "accountHolderPostCode": "1059 SP",
                                "accountHolderCountrySubDivision": "North Holland",
                                "accountHolderCountry": "NL"
                            }],
                        "accessContextScope": "SA",
                        "activeStatus": "ACTIVE"
                    }, {
                        "id": "0855e686-d31e-4216-b3dd-5d66161d536e",
                        "name": "Jane Doe",
                        "alias": "Jane",
                        "category": "Manager",
                        "contactPerson": "John Doe",
                        "phoneNumber": "055512345678",
                        "emailId": "jane@example.com",
                        "addressLine1": "Backbase enterprise",
                        "addressLine2": "",
                        "streetName": "Jacob Bontiusplaats 9",
                        "town": "Amsterdam",
                        "postCode": "1018 LL",
                        "countrySubDivision": "North Holland",
                        "country": "NL",
                        "accounts": [{
                                "name": "Jane Doe",
                                "alias": "Jane",
                                "accountType": "SAVINGS",
                                "IBAN": "FI21 1234 5600 0007 85",
                                "bankName": "Test Bank",
                                "bankAddressLine1": "Test Bank Co",
                                "bankAddressLine2": "",
                                "bankStreetName": "Jodenbreestraat 96",
                                "bankTown": "Amsterdam",
                                "bankPostCode": "1011NS",
                                "bankCountrySubDivision": "North Holland",
                                "bankCountry": "NL"
                            }],
                        "accessContextScope": "LE",
                        "activeStatus": "PENDING_APPROVAL"
                    }]
            },
        ]
    }]);
export const ContactsHttpServicePostContactsMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/contacts",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d",
                    "status": "ACTIVE"
                }
            },
            {
                status: 202,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d",
                    "status": "ACTIVE"
                }
            },
        ]
    }]);
export const ContactsHttpServicePostContactsFilterMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/contacts/filter",
        method: "POST",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "0855e686-d31e-4216-b3dd-5d66161d536d",
                        "name": "John Doe",
                        "alias": "John",
                        "category": "Employee",
                        "contactPerson": "Jane Doe",
                        "phoneNumber": "055512345678",
                        "emailId": "john@example.com",
                        "addressLine1": "Backbase enterprise",
                        "addressLine2": "",
                        "streetName": "Jacob Bontiusplaats 9",
                        "town": "Amsterdam",
                        "postCode": "1018 LL",
                        "countrySubDivision": "North Holland",
                        "country": "NL",
                        "accounts": [{
                                "name": "Jane Doe",
                                "alias": "Jane",
                                "accountType": "SAVINGS",
                                "IBAN": "FI21 1234 5600 0007 85",
                                "bankName": "Test Bank",
                                "bankAddressLine1": "QA Bank",
                                "bankAddressLine2": "",
                                "bankStreetName": "Jodenbreestraat 96",
                                "bankTown": "Amsterdam",
                                "bankPostCode": "1011NS",
                                "bankCountrySubDivision": "North Holland",
                                "bankCountry": "NL",
                                "accountHolderAddressLine1": "",
                                "accountHolderAddressLine2": "",
                                "accountHolderStreetName": "Woestduinstraat 114-3",
                                "accountHolderTown": "Amsterdam",
                                "accountHolderPostCode": "1059 SP",
                                "accountHolderCountrySubDivision": "North Holland",
                                "accountHolderCountry": "NL"
                            }],
                        "accessContextScope": "SA",
                        "activeStatus": "ACTIVE"
                    }, {
                        "id": "0855e686-d31e-4216-b3dd-5d66161d536e",
                        "name": "Jane Doe",
                        "alias": "Jane",
                        "category": "Manager",
                        "contactPerson": "John Doe",
                        "phoneNumber": "055512345678",
                        "emailId": "jane@example.com",
                        "addressLine1": "Backbase enterprise",
                        "addressLine2": "",
                        "streetName": "Jacob Bontiusplaats 9",
                        "town": "Amsterdam",
                        "postCode": "1018 LL",
                        "countrySubDivision": "North Holland",
                        "country": "NL",
                        "accounts": [{
                                "name": "Jane Doe",
                                "alias": "Jane",
                                "accountType": "SAVINGS",
                                "IBAN": "FI21 1234 5600 0007 85",
                                "bankName": "Test Bank",
                                "bankAddressLine1": "Test Bank Co",
                                "bankAddressLine2": "",
                                "bankStreetName": "Jodenbreestraat 96",
                                "bankTown": "Amsterdam",
                                "bankPostCode": "1011NS",
                                "bankCountrySubDivision": "North Holland",
                                "bankCountry": "NL"
                            }],
                        "accessContextScope": "LE",
                        "activeStatus": "PENDING_APPROVAL"
                    }]
            },
        ]
    }]);
export const ContactsHttpServicePutContactMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/contacts/{contactId}",
        method: "PUT",
        responses: [
            {
                status: 202,
                body: {
                    "status": "REQUEST_ACCEPTED"
                }
            },
            {
                status: 409,
                body: {
                    "key": "ApprovalAlreadyExistForContact",
                    "message": "Approval request already exist with this contact."
                }
            },
        ]
    }]);
export const ContactsHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/contacts/{contactId}",
        method: "DELETE",
        responses: [
            {
                status: 202,
                body: {
                    "status": "REQUEST_ACCEPTED"
                }
            },
            {
                status: 409,
                body: {
                    "key": "ApprovalAlreadyExistForContact",
                    "message": "Approval request already exist with this contact."
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/contacts/{contactId}",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "id": "0855e686-d31e-4216-b3dd-5d66161d536d",
                    "name": "John Doe",
                    "alias": "John",
                    "category": "Employee",
                    "contactPerson": "Jane Doe",
                    "phoneNumber": "055512345678",
                    "emailId": "john@example.com",
                    "addressLine1": "Backbase enterprise",
                    "addressLine2": "",
                    "streetName": "Jacob Bontiusplaats 9",
                    "town": "Amsterdam",
                    "postCode": "1018 LL",
                    "countrySubDivision": "North Holland",
                    "country": "NL",
                    "accounts": [{
                            "name": "Jane Doe",
                            "alias": "Jane",
                            "accountType": "SAVINGS",
                            "IBAN": "FI21 1234 5600 0007 85",
                            "bankName": "Test Bank",
                            "bankAddressLine1": "Test Bank Co",
                            "bankAddressLine2": "",
                            "bankStreetName": "Jodenbreestraat 96",
                            "bankTown": "Amsterdam",
                            "bankPostCode": "1011NS",
                            "bankCountrySubDivision": "North Holland",
                            "bankCountry": "NL",
                            "accountHolderAddressLine1": "Backbase enterprise",
                            "accountHolderAddressLine2": "",
                            "accountHolderStreetName": "Jacob Bontiusplaats 9",
                            "accountHolderTown": "Amsterdam",
                            "accountHolderPostCode": "1018 LL",
                            "accountHolderCountrySubDivision": "North Holland",
                            "accountHolderCountry": "NL"
                        }],
                    "accessContextScope": "USER",
                    "activeStatus": "ACTIVE"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/contacts",
        method: "GET",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "0855e686-d31e-4216-b3dd-5d66161d536d",
                        "name": "John Doe",
                        "alias": "John",
                        "category": "Employee",
                        "contactPerson": "Jane Doe",
                        "phoneNumber": "055512345678",
                        "emailId": "john@example.com",
                        "addressLine1": "Backbase enterprise",
                        "addressLine2": "",
                        "streetName": "Jacob Bontiusplaats 9",
                        "town": "Amsterdam",
                        "postCode": "1018 LL",
                        "countrySubDivision": "North Holland",
                        "country": "NL",
                        "accounts": [{
                                "name": "Jane Doe",
                                "alias": "Jane",
                                "accountType": "SAVINGS",
                                "IBAN": "FI21 1234 5600 0007 85",
                                "bankName": "Test Bank",
                                "bankAddressLine1": "QA Bank",
                                "bankAddressLine2": "",
                                "bankStreetName": "Jodenbreestraat 96",
                                "bankTown": "Amsterdam",
                                "bankPostCode": "1011NS",
                                "bankCountrySubDivision": "North Holland",
                                "bankCountry": "NL",
                                "accountHolderAddressLine1": "",
                                "accountHolderAddressLine2": "",
                                "accountHolderStreetName": "Woestduinstraat 114-3",
                                "accountHolderTown": "Amsterdam",
                                "accountHolderPostCode": "1059 SP",
                                "accountHolderCountrySubDivision": "North Holland",
                                "accountHolderCountry": "NL"
                            }],
                        "accessContextScope": "SA",
                        "activeStatus": "ACTIVE"
                    }, {
                        "id": "0855e686-d31e-4216-b3dd-5d66161d536e",
                        "name": "Jane Doe",
                        "alias": "Jane",
                        "category": "Manager",
                        "contactPerson": "John Doe",
                        "phoneNumber": "055512345678",
                        "emailId": "jane@example.com",
                        "addressLine1": "Backbase enterprise",
                        "addressLine2": "",
                        "streetName": "Jacob Bontiusplaats 9",
                        "town": "Amsterdam",
                        "postCode": "1018 LL",
                        "countrySubDivision": "North Holland",
                        "country": "NL",
                        "accounts": [{
                                "name": "Jane Doe",
                                "alias": "Jane",
                                "accountType": "SAVINGS",
                                "IBAN": "FI21 1234 5600 0007 85",
                                "bankName": "Test Bank",
                                "bankAddressLine1": "Test Bank Co",
                                "bankAddressLine2": "",
                                "bankStreetName": "Jodenbreestraat 96",
                                "bankTown": "Amsterdam",
                                "bankPostCode": "1011NS",
                                "bankCountrySubDivision": "North Holland",
                                "bankCountry": "NL"
                            }],
                        "accessContextScope": "LE",
                        "activeStatus": "PENDING_APPROVAL"
                    }]
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/contacts",
        method: "POST",
        responses: [
            {
                status: 201,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d",
                    "status": "ACTIVE"
                }
            },
            {
                status: 202,
                body: {
                    "id": "0955e686-d31e-4216-b3dd-5d66161d536d",
                    "status": "ACTIVE"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/contacts/filter",
        method: "POST",
        responses: [
            {
                status: 200,
                body: [{
                        "id": "0855e686-d31e-4216-b3dd-5d66161d536d",
                        "name": "John Doe",
                        "alias": "John",
                        "category": "Employee",
                        "contactPerson": "Jane Doe",
                        "phoneNumber": "055512345678",
                        "emailId": "john@example.com",
                        "addressLine1": "Backbase enterprise",
                        "addressLine2": "",
                        "streetName": "Jacob Bontiusplaats 9",
                        "town": "Amsterdam",
                        "postCode": "1018 LL",
                        "countrySubDivision": "North Holland",
                        "country": "NL",
                        "accounts": [{
                                "name": "Jane Doe",
                                "alias": "Jane",
                                "accountType": "SAVINGS",
                                "IBAN": "FI21 1234 5600 0007 85",
                                "bankName": "Test Bank",
                                "bankAddressLine1": "QA Bank",
                                "bankAddressLine2": "",
                                "bankStreetName": "Jodenbreestraat 96",
                                "bankTown": "Amsterdam",
                                "bankPostCode": "1011NS",
                                "bankCountrySubDivision": "North Holland",
                                "bankCountry": "NL",
                                "accountHolderAddressLine1": "",
                                "accountHolderAddressLine2": "",
                                "accountHolderStreetName": "Woestduinstraat 114-3",
                                "accountHolderTown": "Amsterdam",
                                "accountHolderPostCode": "1059 SP",
                                "accountHolderCountrySubDivision": "North Holland",
                                "accountHolderCountry": "NL"
                            }],
                        "accessContextScope": "SA",
                        "activeStatus": "ACTIVE"
                    }, {
                        "id": "0855e686-d31e-4216-b3dd-5d66161d536e",
                        "name": "Jane Doe",
                        "alias": "Jane",
                        "category": "Manager",
                        "contactPerson": "John Doe",
                        "phoneNumber": "055512345678",
                        "emailId": "jane@example.com",
                        "addressLine1": "Backbase enterprise",
                        "addressLine2": "",
                        "streetName": "Jacob Bontiusplaats 9",
                        "town": "Amsterdam",
                        "postCode": "1018 LL",
                        "countrySubDivision": "North Holland",
                        "country": "NL",
                        "accounts": [{
                                "name": "Jane Doe",
                                "alias": "Jane",
                                "accountType": "SAVINGS",
                                "IBAN": "FI21 1234 5600 0007 85",
                                "bankName": "Test Bank",
                                "bankAddressLine1": "Test Bank Co",
                                "bankAddressLine2": "",
                                "bankStreetName": "Jodenbreestraat 96",
                                "bankTown": "Amsterdam",
                                "bankPostCode": "1011NS",
                                "bankCountrySubDivision": "North Holland",
                                "bankCountry": "NL"
                            }],
                        "accessContextScope": "LE",
                        "activeStatus": "PENDING_APPROVAL"
                    }]
            },
        ]
    },
    {
        urlPattern: "/client-api/v2/contacts/{contactId}",
        method: "PUT",
        responses: [
            {
                status: 202,
                body: {
                    "status": "REQUEST_ACCEPTED"
                }
            },
            {
                status: 409,
                body: {
                    "key": "ApprovalAlreadyExistForContact",
                    "message": "Approval request already exist with this contact."
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,