import { createMocks } from '@backbase/foundation-ang/data-http';
export const SupportedCountriesHttpServiceGetSupportedCountriesMocksProvider = createMocks([{
        urlPattern: "/client-api/v2/supported-countries",
        method: "GET",
        responses: [
            {
                status: 200,
                body: ["AR", "AU", "AT", "BE", "BR", "CA", "CN", "CO", "HR", "CZ", "DK", "EC", "EG", "ET", "FR", "DE", "GR", "HN", "HK", "HU", "IN", "ID", "IE", "IT", "JM", "MY", "MX", "MA", "NA", "NL", "NZ", "NO", "PL", "PT", "RU", "SN"]
            },
        ]
    }]);
export const SupportedCountriesHttpServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v2/supported-countries",
        method: "GET",
        responses: [
            {
                status: 200,
                body: ["AR", "AU", "AT", "BE", "BR", "CA", "CN", "CO", "HR", "CZ", "DK", "EC", "EG", "ET", "FR", "DE", "GR", "HN", "HK", "HU", "IN", "ID", "IE", "IT", "JM", "MY", "MX", "MA", "NA", "NL", "NZ", "NO", "PL", "PT", "RU", "SN"]
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VwcG9ydGVkQ291bnRyaWVzLnNlcnZpY2UubW9ja3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9hcGkvc3VwcG9ydGVkQ291bnRyaWVzLnNlcnZpY2UubW9ja3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBTWpFLE1BQU0sQ0FBQyxNQUFNLCtEQUErRCxHQUFhLFdBQVcsQ0FBQyxDQUFDO1FBQzlGLFVBQVUsRUFBRSxvQ0FBb0M7UUFDaEQsTUFBTSxFQUFFLEtBQUs7UUFDYixTQUFTLEVBQUU7WUFDSDtnQkFDSSxNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUUsQ0FBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBRTthQUNuTztTQUNaO0tBQ0osQ0FBQyxDQUFDLENBQUM7QUFFSixNQUFNLENBQUMsTUFBTSwwQ0FBMEMsR0FBYSxXQUFXLENBQzNFO0lBQ0E7UUFDSSxVQUFVLEVBQUUsb0NBQW9DO1FBQ2hELE1BQU0sRUFBRSxLQUFLO1FBQ2IsU0FBUyxFQUFFO1lBRVA7Z0JBQ0ksTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFLENBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUU7YUFDbk87U0FFUjtLQUNKO0NBQ0EsQ0FDQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTW9ja3MgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvZGF0YS1odHRwJztcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuKiBNb2NrcyBwcm92aWRlciBmb3IgL2NsaWVudC1hcGkvdjIvc3VwcG9ydGVkLWNvdW50cmllcyBVUkwgcGF0dGVyblxuKi9cbmV4cG9ydCBjb25zdCBTdXBwb3J0ZWRDb3VudHJpZXNIdHRwU2VydmljZUdldFN1cHBvcnRlZENvdW50cmllc01vY2tzUHJvdmlkZXI6IFByb3ZpZGVyID0gY3JlYXRlTW9ja3MoW3tcbiAgICAgICAgdXJsUGF0dGVybjogXCIvY2xpZW50LWFwaS92Mi9zdXBwb3J0ZWQtY291bnRyaWVzXCIsXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgcmVzcG9uc2VzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgYm9keTogWyBcIkFSXCIsIFwiQVVcIiwgXCJBVFwiLCBcIkJFXCIsIFwiQlJcIiwgXCJDQVwiLCBcIkNOXCIsIFwiQ09cIiwgXCJIUlwiLCBcIkNaXCIsIFwiREtcIiwgXCJFQ1wiLCBcIkVHXCIsIFwiRVRcIiwgXCJGUlwiLCBcIkRFXCIsIFwiR1JcIiwgXCJITlwiLCBcIkhLXCIsIFwiSFVcIiwgXCJJTlwiLCBcIklEXCIsIFwiSUVcIiwgXCJJVFwiLCBcIkpNXCIsIFwiTVlcIiwgXCJNWFwiLCBcIk1BXCIsIFwiTkFcIiwgXCJOTFwiLCBcIk5aXCIsIFwiTk9cIiwgXCJQTFwiLCBcIlBUXCIsIFwiUlVcIiwgXCJTTlwiIF1cbiAgICAgICAgICAgICAgICB9LFxuICAgIF1cbn1dKTtcblxuZXhwb3J0IGNvbnN0IFN1cHBvcnRlZENvdW50cmllc0h0dHBTZXJ2aWNlTW9ja3NQcm92aWRlcjogUHJvdmlkZXIgPSBjcmVhdGVNb2NrcyhcbiAgICBbXG4gICAge1xuICAgICAgICB1cmxQYXR0ZXJuOiBcIi9jbGllbnQtYXBpL3YyL3N1cHBvcnRlZC1jb3VudHJpZXNcIixcbiAgICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgICByZXNwb25zZXM6IFtcblxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgICAgIGJvZHk6IFsgXCJBUlwiLCBcIkFVXCIsIFwiQVRcIiwgXCJCRVwiLCBcIkJSXCIsIFwiQ0FcIiwgXCJDTlwiLCBcIkNPXCIsIFwiSFJcIiwgXCJDWlwiLCBcIkRLXCIsIFwiRUNcIiwgXCJFR1wiLCBcIkVUXCIsIFwiRlJcIiwgXCJERVwiLCBcIkdSXCIsIFwiSE5cIiwgXCJIS1wiLCBcIkhVXCIsIFwiSU5cIiwgXCJJRFwiLCBcIklFXCIsIFwiSVRcIiwgXCJKTVwiLCBcIk1ZXCIsIFwiTVhcIiwgXCJNQVwiLCBcIk5BXCIsIFwiTkxcIiwgXCJOWlwiLCBcIk5PXCIsIFwiUExcIiwgXCJQVFwiLCBcIlJVXCIsIFwiU05cIiBdXG4gICAgICAgICAgICB9LFxuXG4gICAgXVxufSxcbl1cbik7XG5cblxuIl19