import { createMocks } from '@backbase/foundation-ang/data-http';
export const AccessServiceGenerateCustomerAccessTokenMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/rtc/access/customer",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "conversationToken": "eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const AccessServiceGenerateEmployeeAccessTokensMocksProvider = createMocks([{
        urlPattern: "/client-api/v1/rtc/access/employee",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "taskToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBQzFjOGFiYjViMzZjMGYxOGEyY2ZlOWQ0ZmQ1MDA3YmEyIiwiZXhwIjoxNjI4MTkwNDAwLCJ3b3JrZXJfc2lkIjoiV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIndvcmtzcGFjZV9zaWQiOiJXUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5IiwiY2hhbm5lbCI6IldLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJwb2xpY2llcyI6W3sidXJsIjoiaHR0cHM6Ly90YXNrcm91dGVyLnR3aWxpby5jb20vdjEvV29ya3NwYWNlcy9XUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5L0FjdGl2aXRpZXMiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvVGFza3MvKioiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwL1Jlc2VydmF0aW9ucy8qKiIsIm1ldGhvZCI6IkdFVCIsImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9Xb3JrZXJzL1dLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQWNjb3VudFNpZC9DaGFubmVsIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FjY291bnRTaWQvQ2hhbm5lbCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiUE9TVCIsInBvc3RfZmlsdGVyIjp7IkFjdGl2aXR5U2lkIjp7InJlcXVpcmVkIjp0cnVlfX0sImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9UYXNrcy8qKiIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQUMxYzhhYmI1YjM2YzBmMThhMmNmZTlkNGZkNTAwN2JhMi9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIvV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX1dLCJhY2NvdW50X3NpZCI6IkFDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIiLCJ2ZXJzaW9uIjoidjEifQ.3qR5XvqS3saAsnpc6XzKc2O4bPr3MCvlf2nZwmCOOs0",
                    "conversationToken": "eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    }]);
export const AccessServiceMocksProvider = createMocks([
    {
        urlPattern: "/client-api/v1/rtc/access/customer",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "conversationToken": "eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 404,
                body: {
                    "message": "Resource not found.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Unable to find the resource requested resource: {resource}.",
                            "key": "common.api.resource",
                            "context": {
                                "resource": "aResource"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
    {
        urlPattern: "/client-api/v1/rtc/access/employee",
        method: "GET",
        responses: [
            {
                status: 200,
                body: {
                    "taskToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBQzFjOGFiYjViMzZjMGYxOGEyY2ZlOWQ0ZmQ1MDA3YmEyIiwiZXhwIjoxNjI4MTkwNDAwLCJ3b3JrZXJfc2lkIjoiV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIndvcmtzcGFjZV9zaWQiOiJXUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5IiwiY2hhbm5lbCI6IldLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJwb2xpY2llcyI6W3sidXJsIjoiaHR0cHM6Ly90YXNrcm91dGVyLnR3aWxpby5jb20vdjEvV29ya3NwYWNlcy9XUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5L0FjdGl2aXRpZXMiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvVGFza3MvKioiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwL1Jlc2VydmF0aW9ucy8qKiIsIm1ldGhvZCI6IkdFVCIsImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9Xb3JrZXJzL1dLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQWNjb3VudFNpZC9DaGFubmVsIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FjY291bnRTaWQvQ2hhbm5lbCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiUE9TVCIsInBvc3RfZmlsdGVyIjp7IkFjdGl2aXR5U2lkIjp7InJlcXVpcmVkIjp0cnVlfX0sImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9UYXNrcy8qKiIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQUMxYzhhYmI1YjM2YzBmMThhMmNmZTlkNGZkNTAwN2JhMi9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIvV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX1dLCJhY2NvdW50X3NpZCI6IkFDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIiLCJ2ZXJzaW9uIjoidjEifQ.3qR5XvqS3saAsnpc6XzKc2O4bPr3MCvlf2nZwmCOOs0",
                    "conversationToken": "eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g"
                }
            },
            {
                status: 400,
                body: {
                    "message": "Bad Request",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Value Exceeded. Must be between {min} and {max}.",
                            "key": "common.api.shoesize",
                            "context": {
                                "max": "50",
                                "min": "1"
                            }
                        }]
                }
            },
            {
                status: 401,
                body: {
                    "message": "Access to requested resource denied.",
                    "key": "GENERAL_ERROR",
                    "errors": [{
                            "message": "Resource access denied due to invalid credentials.",
                            "key": "common.api.token",
                            "context": {
                                "accessToken": "expired"
                            }
                        }]
                }
            },
            {
                status: 500,
                body: {
                    "message": "Description of error"
                }
            },
        ]
    },
]);
//# sourceMappingURL=data:application/json;base64,