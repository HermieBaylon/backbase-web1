{"version":3,"file":"backbase-rtc-v1-client-ang.umd.js","sources":["../../model/callRequest.ts","../../model/conversationStatus.ts","../../model/conversationStatusUpdate.ts","../../model/messageItem.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/access.service.ts","../../api/access.service.mocks.ts","../../api/conversations.service.ts","../../api/conversations.service.mocks.ts"],"sourcesContent":["/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface CallRequest { \n    /**\n     * The type of call to initiate\n     */\n    [\"type\"]: CallRequest.TypeEnum;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace CallRequest {\n    export type TypeEnum = 'voice' | 'video';\n    export const TypeEnum = {\n        Voice: 'voice' as TypeEnum,\n        Video: 'video' as TypeEnum\n    };\n}\n\n\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface ConversationStatus { \n    /**\n     * The unique id of conversation\n     */\n    [\"conversationId\"]: string;\n    /**\n     * The status of conversation\n     */\n    [\"status\"]: ConversationStatus.StatusEnum;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace ConversationStatus {\n    export type StatusEnum = 'assigned' | 'ended' | 'resolved';\n    export const StatusEnum = {\n        Assigned: 'assigned' as StatusEnum,\n        Ended: 'ended' as StatusEnum,\n        Resolved: 'resolved' as StatusEnum\n    };\n}\n\n\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface ConversationStatusUpdate { \n    /**\n     * The status of conversation\n     */\n    [\"status\"]: ConversationStatusUpdate.StatusEnum;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace ConversationStatusUpdate {\n    export type StatusEnum = 'assigned' | 'resolved' | 'ended';\n    export const StatusEnum = {\n        Assigned: 'assigned' as StatusEnum,\n        Resolved: 'resolved' as StatusEnum,\n        Ended: 'ended' as StatusEnum\n    };\n}\n\n\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { Media } from './media';\n\n\nexport interface MessageItem { \n    /**\n     * The message id.\n     */\n    [\"id\"]: string;\n    /**\n     * Type used to distinguish between standard conversation messages and system messages such as when a conversation has been ended by a participant.\n     */\n    [\"type\"]: MessageItem.TypeEnum;\n    /**\n     * Message body.\n     */\n    [\"body\"]: string;\n    /**\n     * Photos, files or any attachments\n     */\n    [\"media\"]?: Array<Media>;\n    /**\n     * Author/ Participant Id of the message.\n     */\n    [\"authorId\"]: string;\n    /**\n     * Author/ Participant preferred name.\n     */\n    [\"authorPreferredName\"]?: string;\n    /**\n     * The date time the message was created. DateTime in UTC ISO8601\n     */\n    [\"dateCreated\"]: string;\n    /**\n     * The date time the message was last updated. DateTime in UTC ISO8601\n     */\n    [\"dateUpdated\"]?: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace MessageItem {\n    export type TypeEnum = 'CONVERSATION_ACCEPTED' | 'CONVERSATION_ENDED' | 'MESSAGE' | 'VOICE_CALL_INITIATED' | 'VOICE_CALL_ACCEPTED' | 'VOICE_CALL_ENDED' | 'VIDEO_CALL_INITIATED' | 'VIDEO_CALL_ACCEPTED' | 'VIDEO_CALL_ENDED' | 'VOICE_CALL_REJECTED' | 'VOICE_CALL_TIMEOUT' | 'VIDEO_CALL_REJECTED' | 'VIDEO_CALL_TIMEOUT';\n    export const TypeEnum = {\n        CONVERSATIONACCEPTED: 'CONVERSATION_ACCEPTED' as TypeEnum,\n        CONVERSATIONENDED: 'CONVERSATION_ENDED' as TypeEnum,\n        MESSAGE: 'MESSAGE' as TypeEnum,\n        VOICECALLINITIATED: 'VOICE_CALL_INITIATED' as TypeEnum,\n        VOICECALLACCEPTED: 'VOICE_CALL_ACCEPTED' as TypeEnum,\n        VOICECALLENDED: 'VOICE_CALL_ENDED' as TypeEnum,\n        VIDEOCALLINITIATED: 'VIDEO_CALL_INITIATED' as TypeEnum,\n        VIDEOCALLACCEPTED: 'VIDEO_CALL_ACCEPTED' as TypeEnum,\n        VIDEOCALLENDED: 'VIDEO_CALL_ENDED' as TypeEnum,\n        VOICECALLREJECTED: 'VOICE_CALL_REJECTED' as TypeEnum,\n        VOICECALLTIMEOUT: 'VOICE_CALL_TIMEOUT' as TypeEnum,\n        VIDEOCALLREJECTED: 'VIDEO_CALL_REJECTED' as TypeEnum,\n        VIDEOCALLTIMEOUT: 'VIDEO_CALL_TIMEOUT' as TypeEnum\n    };\n}\n\n\n","import { InjectionToken } from '@angular/core';\n\nexport const RTC_V1_BASE_PATH = new InjectionToken<string>('RTC_V1_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface RtcV1ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class RtcV1Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: RtcV1ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link RtcV1Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link RtcV1Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module RtcV1Configuration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { RtcV1Configuration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class RtcV1ApiModule {\n    public static forRoot(configurationFactory: () => RtcV1Configuration): ModuleWithProviders<RtcV1ApiModule> {\n        return {\n            ngModule: RtcV1ApiModule,\n            providers: [ { provide: RtcV1Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: RtcV1ApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: RtcV1Configuration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('RtcV1ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CustomerAccessToken } from '../model/models';\nimport { EmployeeAccessToken } from '../model/models';\nimport { ModelError } from '../model/models';\n\nimport { RTC_V1_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { RtcV1Configuration }                                     from '../configuration';\n\n\nexport interface GenerateCustomerAccessTokenRequestParams {\n    /** Optional parameter to indicate whether access to voice and video calls must be included within the generated access token for the specified conversation. */\n    [\"conversationId\"]?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccessService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new RtcV1Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(RTC_V1_BASE_PATH) basePath: string, @Optional() configuration: RtcV1Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Generate customer access token.\n     * Generate customer access token, a token for accessing provider RTC conversation API.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CustomerAccessToken>;\n    /**\n     * Generate customer access token.\n     * Generate customer access token, a token for accessing provider RTC conversation API.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CustomerAccessToken>>;\n    /**\n     * Generate customer access token.\n     * Generate customer access token, a token for accessing provider RTC conversation API.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CustomerAccessToken>>;\n    /**\n     * Generate customer access token.\n     * Generate customer access token, a token for accessing provider RTC conversation API.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _conversationId = requestParameters[\"conversationId\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_conversationId !== undefined && _conversationId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_conversationId, 'conversationId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CustomerAccessToken>(`${this.configuration.basePath}/client-api/v1/rtc/access/customer`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public generateCustomerAccessTokenUrl(requestParameters: GenerateCustomerAccessTokenRequestParams): string {\n        const _conversationId = requestParameters[\"conversationId\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_conversationId !== undefined && _conversationId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_conversationId, 'conversationId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/rtc/access/customer${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Generate employee access tokens.\n     * Generate employee access tokens, a token for accessing RTC tasks router API and a token for accessing provider RTC conversation API.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateEmployeeAccessTokens(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EmployeeAccessToken>;\n    /**\n     * Generate employee access tokens.\n     * Generate employee access tokens, a token for accessing RTC tasks router API and a token for accessing provider RTC conversation API.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateEmployeeAccessTokens(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EmployeeAccessToken>>;\n    /**\n     * Generate employee access tokens.\n     * Generate employee access tokens, a token for accessing RTC tasks router API and a token for accessing provider RTC conversation API.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateEmployeeAccessTokens(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EmployeeAccessToken>>;\n    /**\n     * Generate employee access tokens.\n     * Generate employee access tokens, a token for accessing RTC tasks router API and a token for accessing provider RTC conversation API.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateEmployeeAccessTokens(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EmployeeAccessToken>(`${this.configuration.basePath}/client-api/v1/rtc/access/employee`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public generateEmployeeAccessTokensUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/rtc/access/employee`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/rtc/access/customer URL pattern\n*/\nexport const AccessServiceGenerateCustomerAccessTokenMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/access/customer\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/access/employee URL pattern\n*/\nexport const AccessServiceGenerateEmployeeAccessTokensMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/access/employee\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"taskToken\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBQzFjOGFiYjViMzZjMGYxOGEyY2ZlOWQ0ZmQ1MDA3YmEyIiwiZXhwIjoxNjI4MTkwNDAwLCJ3b3JrZXJfc2lkIjoiV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIndvcmtzcGFjZV9zaWQiOiJXUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5IiwiY2hhbm5lbCI6IldLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJwb2xpY2llcyI6W3sidXJsIjoiaHR0cHM6Ly90YXNrcm91dGVyLnR3aWxpby5jb20vdjEvV29ya3NwYWNlcy9XUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5L0FjdGl2aXRpZXMiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvVGFza3MvKioiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwL1Jlc2VydmF0aW9ucy8qKiIsIm1ldGhvZCI6IkdFVCIsImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9Xb3JrZXJzL1dLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQWNjb3VudFNpZC9DaGFubmVsIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FjY291bnRTaWQvQ2hhbm5lbCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiUE9TVCIsInBvc3RfZmlsdGVyIjp7IkFjdGl2aXR5U2lkIjp7InJlcXVpcmVkIjp0cnVlfX0sImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9UYXNrcy8qKiIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQUMxYzhhYmI1YjM2YzBmMThhMmNmZTlkNGZkNTAwN2JhMi9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIvV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX1dLCJhY2NvdW50X3NpZCI6IkFDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIiLCJ2ZXJzaW9uIjoidjEifQ.3qR5XvqS3saAsnpc6XzKc2O4bPr3MCvlf2nZwmCOOs0\",\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const AccessServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/rtc/access/customer\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/access/employee\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"taskToken\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBQzFjOGFiYjViMzZjMGYxOGEyY2ZlOWQ0ZmQ1MDA3YmEyIiwiZXhwIjoxNjI4MTkwNDAwLCJ3b3JrZXJfc2lkIjoiV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIndvcmtzcGFjZV9zaWQiOiJXUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5IiwiY2hhbm5lbCI6IldLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJwb2xpY2llcyI6W3sidXJsIjoiaHR0cHM6Ly90YXNrcm91dGVyLnR3aWxpby5jb20vdjEvV29ya3NwYWNlcy9XUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5L0FjdGl2aXRpZXMiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvVGFza3MvKioiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwL1Jlc2VydmF0aW9ucy8qKiIsIm1ldGhvZCI6IkdFVCIsImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9Xb3JrZXJzL1dLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQWNjb3VudFNpZC9DaGFubmVsIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FjY291bnRTaWQvQ2hhbm5lbCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiUE9TVCIsInBvc3RfZmlsdGVyIjp7IkFjdGl2aXR5U2lkIjp7InJlcXVpcmVkIjp0cnVlfX0sImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9UYXNrcy8qKiIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQUMxYzhhYmI1YjM2YzBmMThhMmNmZTlkNGZkNTAwN2JhMi9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIvV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX1dLCJhY2NvdW50X3NpZCI6IkFDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIiLCJ2ZXJzaW9uIjoidjEifQ.3qR5XvqS3saAsnpc6XzKc2O4bPr3MCvlf2nZwmCOOs0\",\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CallRequest } from '../model/models';\nimport { CallResponse } from '../model/models';\nimport { ConversationId } from '../model/models';\nimport { ConversationItem } from '../model/models';\nimport { ConversationStatus } from '../model/models';\nimport { ConversationStatusUpdate } from '../model/models';\nimport { MessageItem } from '../model/models';\nimport { ModelError } from '../model/models';\n\nimport { RTC_V1_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { RtcV1Configuration }                                     from '../configuration';\n\n\nexport interface EndCallRequestParams {\n    /** A single conversation ID. */\n    [\"conversationId\"]: string;\n}\n\nexport interface GetConversationsRequestParams {\n    /** A single internal user ID. */\n    [\"userId\"]: string;\n    /** Optional pagination parameter for the start item indexed at zero. */\n    [\"from\"]?: number;\n    /** Optional pagination parameter for the number of items per page. */\n    [\"size\"]?: number;\n    /** Optional comma separated list of conversation Ids. */\n    [\"conversationIds\"]?: Array<string>;\n}\n\nexport interface GetMessagesRequestParams {\n    /** A single internal user ID. */\n    [\"userId\"]: string;\n    /** A single conversation ID. */\n    [\"conversationId\"]: string;\n    /** Optional pagination parameter for the start item indexed at zero. */\n    [\"from\"]?: number;\n    /** Optional pagination parameter for the number of items per page. */\n    [\"size\"]?: number;\n}\n\nexport interface InitiateCallRequestParams {\n    /** A single conversation ID. */\n    [\"conversationId\"]: string;\n    /** Initiate a voice or video call. */\n    [\"callRequest\"]: CallRequest;\n}\n\nexport interface UpdateConversationStatusRequestParams {\n    /** A single conversation ID. */\n    [\"conversationId\"]: string;\n    /** Update a conversation status. */\n    [\"conversationStatusUpdate\"]: ConversationStatusUpdate;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConversationsService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new RtcV1Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(RTC_V1_BASE_PATH) basePath: string, @Optional() configuration: RtcV1Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Create a conversation.\n     * Initiate a new support request conversation.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createConversation(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConversationId>;\n    /**\n     * Create a conversation.\n     * Initiate a new support request conversation.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createConversation(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConversationId>>;\n    /**\n     * Create a conversation.\n     * Initiate a new support request conversation.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createConversation(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConversationId>>;\n    /**\n     * Create a conversation.\n     * Initiate a new support request conversation.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createConversation(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ConversationId>(`${this.configuration.basePath}/client-api/v1/rtc/conversations`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public createConversationUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/rtc/conversations`;\n    }\n\n    /**\n     * End a voice or video call.\n     * End a voice or video call.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public endCall(requestParameters: EndCallRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * End a voice or video call.\n     * End a voice or video call.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public endCall(requestParameters: EndCallRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * End a voice or video call.\n     * End a voice or video call.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public endCall(requestParameters: EndCallRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * End a voice or video call.\n     * End a voice or video call.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public endCall(requestParameters: EndCallRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling endCall.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/call`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public endCallUrl(requestParameters: EndCallRequestParams): string {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling endCall.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/call`;\n    }\n\n    /**\n     * Retrieve list of conversations for a user.\n     * Retrieve list of conversations for a user in descending order of conversation date creation. This API supports pagination (default page size 10).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversations(requestParameters: GetConversationsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ConversationItem>>;\n    /**\n     * Retrieve list of conversations for a user.\n     * Retrieve list of conversations for a user in descending order of conversation date creation. This API supports pagination (default page size 10).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversations(requestParameters: GetConversationsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ConversationItem>>>;\n    /**\n     * Retrieve list of conversations for a user.\n     * Retrieve list of conversations for a user in descending order of conversation date creation. This API supports pagination (default page size 10).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversations(requestParameters: GetConversationsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ConversationItem>>>;\n    /**\n     * Retrieve list of conversations for a user.\n     * Retrieve list of conversations for a user in descending order of conversation date creation. This API supports pagination (default page size 10).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversations(requestParameters: GetConversationsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getConversations.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _conversationIds = requestParameters[\"conversationIds\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_conversationIds) {\n            _conversationIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'conversationIds');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ConversationItem>>(`${this.configuration.basePath}/client-api/v1/rtc/users/${encodeURIComponent(String(_userId))}/conversations`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getConversationsUrl(requestParameters: GetConversationsRequestParams): string {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getConversations.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _conversationIds = requestParameters[\"conversationIds\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_conversationIds) {\n            _conversationIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'conversationIds');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/rtc/users/${encodeURIComponent(String(_userId))}/conversations${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve list of messages for a user and specified conversation.\n     * Retrieve list of messages for a user and specified conversation in ascending order of message date creation. This API supports pagination (default page size 50).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessages(requestParameters: GetMessagesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<MessageItem>>;\n    /**\n     * Retrieve list of messages for a user and specified conversation.\n     * Retrieve list of messages for a user and specified conversation in ascending order of message date creation. This API supports pagination (default page size 50).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessages(requestParameters: GetMessagesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<MessageItem>>>;\n    /**\n     * Retrieve list of messages for a user and specified conversation.\n     * Retrieve list of messages for a user and specified conversation in ascending order of message date creation. This API supports pagination (default page size 50).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessages(requestParameters: GetMessagesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<MessageItem>>>;\n    /**\n     * Retrieve list of messages for a user and specified conversation.\n     * Retrieve list of messages for a user and specified conversation in ascending order of message date creation. This API supports pagination (default page size 50).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessages(requestParameters: GetMessagesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getMessages.');\n        }\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling getMessages.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<MessageItem>>(`${this.configuration.basePath}/client-api/v1/rtc/users/${encodeURIComponent(String(_userId))}/conversations/${encodeURIComponent(String(_conversationId))}/messages`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMessagesUrl(requestParameters: GetMessagesRequestParams): string {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getMessages.');\n        }\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling getMessages.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/rtc/users/${encodeURIComponent(String(_userId))}/conversations/${encodeURIComponent(String(_conversationId))}/messages${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Initiate a voice or video call.\n     * Initiate a voice or video call between the participants of the specified conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public initiateCall(requestParameters: InitiateCallRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CallResponse>;\n    /**\n     * Initiate a voice or video call.\n     * Initiate a voice or video call between the participants of the specified conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public initiateCall(requestParameters: InitiateCallRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CallResponse>>;\n    /**\n     * Initiate a voice or video call.\n     * Initiate a voice or video call between the participants of the specified conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public initiateCall(requestParameters: InitiateCallRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CallResponse>>;\n    /**\n     * Initiate a voice or video call.\n     * Initiate a voice or video call between the participants of the specified conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public initiateCall(requestParameters: InitiateCallRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling initiateCall.');\n        }\n        const _callRequest = requestParameters[\"callRequest\"];\n        if (_callRequest === null || _callRequest === undefined) {\n            throw new Error('Required parameter callRequest was null or undefined when calling initiateCall.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<CallResponse>(`${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/call`,\n            _callRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public initiateCallUrl(requestParameters: InitiateCallRequestParams): string {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling initiateCall.');\n        }\n        const _callRequest = requestParameters[\"callRequest\"];\n        if (_callRequest === null || _callRequest === undefined) {\n            throw new Error('Required parameter callRequest was null or undefined when calling initiateCall.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/call`;\n    }\n\n    /**\n     * Update a conversation status.\n     * Update a conversation status.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateConversationStatus(requestParameters: UpdateConversationStatusRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConversationStatus>;\n    /**\n     * Update a conversation status.\n     * Update a conversation status.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateConversationStatus(requestParameters: UpdateConversationStatusRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConversationStatus>>;\n    /**\n     * Update a conversation status.\n     * Update a conversation status.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateConversationStatus(requestParameters: UpdateConversationStatusRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConversationStatus>>;\n    /**\n     * Update a conversation status.\n     * Update a conversation status.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateConversationStatus(requestParameters: UpdateConversationStatusRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling updateConversationStatus.');\n        }\n        const _conversationStatusUpdate = requestParameters[\"conversationStatusUpdate\"];\n        if (_conversationStatusUpdate === null || _conversationStatusUpdate === undefined) {\n            throw new Error('Required parameter conversationStatusUpdate was null or undefined when calling updateConversationStatus.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<ConversationStatus>(`${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/status`,\n            _conversationStatusUpdate,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateConversationStatusUrl(requestParameters: UpdateConversationStatusRequestParams): string {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling updateConversationStatus.');\n        }\n        const _conversationStatusUpdate = requestParameters[\"conversationStatusUpdate\"];\n        if (_conversationStatusUpdate === null || _conversationStatusUpdate === undefined) {\n            throw new Error('Required parameter conversationStatusUpdate was null or undefined when calling updateConversationStatus.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/status`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/rtc/conversations URL pattern\n*/\nexport const ConversationsServiceCreateConversationMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/conversations\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"CH0c17647bed78463291d80a72acc7c58c\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/conversations/{conversationId}/call URL pattern\n*/\nexport const ConversationsServiceEndCallMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/call\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/users/{userId}/conversations URL pattern\n*/\nexport const ConversationsServiceGetConversationsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/users/{userId}/conversations\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"CH1\",\n  \"dateCreated\" : \"2021-09-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH2\",\n  \"dateCreated\" : \"2021-09-16T20:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  } ]\n}, {\n  \"id\" : \"CH3\",\n  \"dateCreated\" : \"2019-12-26T22:18:37Z\",\n  \"participants\" : [ ]\n}, {\n  \"id\" : \"CH4\",\n  \"dateCreated\" : \"2019-12-25T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee2\"\n  } ]\n}, {\n  \"id\" : \"CH524234\",\n  \"dateCreated\" : \"2017-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH6\",\n  \"dateCreated\" : \"2016-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\"\n  } ]\n}, {\n  \"id\" : \"CH7\",\n  \"dateCreated\" : \"2015-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\"\n  } ]\n}, {\n  \"id\" : \"CH8\",\n  \"dateCreated\" : \"2014-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee8\"\n  } ]\n}, {\n  \"id\" : \"CH9\",\n  \"dateCreated\" : \"2014-10-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee9\"\n  } ]\n}, {\n  \"id\" : \"CH10\",\n  \"dateCreated\" : \"2014-09-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee10\"\n  } ]\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"CH1\",\n  \"dateCreated\" : \"2020-12-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH2\",\n  \"dateCreated\" : \"2019-12-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  } ]\n}, {\n  \"id\" : \"CH3\",\n  \"dateCreated\" : \"2019-11-26T22:18:37Z\",\n  \"participants\" : [ ]\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/users/{userId}/conversations/{conversationId}/messages URL pattern\n*/\nexport const ConversationsServiceGetMessagesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/users/{userId}/conversations/{conversationId}/messages\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"IM426d0acb198c43df8b42ee6e206fddb9\",\n  \"type\" : \"CONVERSATION_ACCEPTED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:30Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:30Z\"\n}, {\n  \"id\" : \"IMa7443cccfc9946a2810ab019396ce15c\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"asdf\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:32Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:32Z\"\n}, {\n  \"id\" : \"IM81f239c9222b4f548c394489ace20ecc\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"123123\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T23:11:32Z\",\n  \"dateUpdated\" : \"2021-11-16T23:11:32Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c691\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : null,\n  \"media\" : [ {\n    \"id\" : \"MEd726969bac4ea9a8ea0ed1b4881d982f\",\n    \"contentType\" : \"image/png\",\n    \"fileName\" : null,\n    \"size\" : 226933\n  } ],\n  \"authorId\" : \"customer\",\n  \"authorPreferredName\" : null,\n  \"dateCreated\" : \"2021-11-17T00:32:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:32:29Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c780\",\n  \"type\" : \"CONVERSATION_ENDED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-17T00:52:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:52:29Z\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"IM426d0acb198c43df8b42ee6e206fddb9\",\n  \"type\" : \"CONVERSATION_ACCEPTED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:30Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:30Z\"\n}, {\n  \"id\" : \"IMa7443cccfc9946a2810ab019396ce15c\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"asdf\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:32Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:32Z\"\n}, {\n  \"id\" : \"IM81f239c9222b4f548c394489ace20ecc\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"123123\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T23:11:32Z\",\n  \"dateUpdated\" : \"2021-11-16T23:11:32Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c691\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : null,\n  \"media\" : [ {\n    \"id\" : \"MEd726969bac4ea9a8ea0ed1b4881d982f\",\n    \"contentType\" : \"image/png\",\n    \"fileName\" : null,\n    \"size\" : 226933\n  } ],\n  \"authorId\" : \"customer\",\n  \"authorPreferredName\" : null,\n  \"dateCreated\" : \"2021-11-17T00:32:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:32:29Z\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/conversations/{conversationId}/call URL pattern\n*/\nexport const ConversationsServiceInitiateCallMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/call\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\",\n  \"callTimeout\" : 120\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/conversations/{conversationId}/status URL pattern\n*/\nexport const ConversationsServiceUpdateConversationStatusMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/status\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"conversationId\" : \"CH0c17647bed78463291d80a72acc7c58c\",\n  \"status\" : \"assigned\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ConversationsServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/rtc/conversations\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"CH0c17647bed78463291d80a72acc7c58c\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/call\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/users/{userId}/conversations\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"CH1\",\n  \"dateCreated\" : \"2021-09-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH2\",\n  \"dateCreated\" : \"2021-09-16T20:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  } ]\n}, {\n  \"id\" : \"CH3\",\n  \"dateCreated\" : \"2019-12-26T22:18:37Z\",\n  \"participants\" : [ ]\n}, {\n  \"id\" : \"CH4\",\n  \"dateCreated\" : \"2019-12-25T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee2\"\n  } ]\n}, {\n  \"id\" : \"CH524234\",\n  \"dateCreated\" : \"2017-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH6\",\n  \"dateCreated\" : \"2016-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\"\n  } ]\n}, {\n  \"id\" : \"CH7\",\n  \"dateCreated\" : \"2015-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\"\n  } ]\n}, {\n  \"id\" : \"CH8\",\n  \"dateCreated\" : \"2014-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee8\"\n  } ]\n}, {\n  \"id\" : \"CH9\",\n  \"dateCreated\" : \"2014-10-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee9\"\n  } ]\n}, {\n  \"id\" : \"CH10\",\n  \"dateCreated\" : \"2014-09-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee10\"\n  } ]\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"CH1\",\n  \"dateCreated\" : \"2020-12-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH2\",\n  \"dateCreated\" : \"2019-12-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  } ]\n}, {\n  \"id\" : \"CH3\",\n  \"dateCreated\" : \"2019-11-26T22:18:37Z\",\n  \"participants\" : [ ]\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/users/{userId}/conversations/{conversationId}/messages\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"IM426d0acb198c43df8b42ee6e206fddb9\",\n  \"type\" : \"CONVERSATION_ACCEPTED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:30Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:30Z\"\n}, {\n  \"id\" : \"IMa7443cccfc9946a2810ab019396ce15c\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"asdf\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:32Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:32Z\"\n}, {\n  \"id\" : \"IM81f239c9222b4f548c394489ace20ecc\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"123123\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T23:11:32Z\",\n  \"dateUpdated\" : \"2021-11-16T23:11:32Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c691\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : null,\n  \"media\" : [ {\n    \"id\" : \"MEd726969bac4ea9a8ea0ed1b4881d982f\",\n    \"contentType\" : \"image/png\",\n    \"fileName\" : null,\n    \"size\" : 226933\n  } ],\n  \"authorId\" : \"customer\",\n  \"authorPreferredName\" : null,\n  \"dateCreated\" : \"2021-11-17T00:32:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:32:29Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c780\",\n  \"type\" : \"CONVERSATION_ENDED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-17T00:52:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:52:29Z\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"IM426d0acb198c43df8b42ee6e206fddb9\",\n  \"type\" : \"CONVERSATION_ACCEPTED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:30Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:30Z\"\n}, {\n  \"id\" : \"IMa7443cccfc9946a2810ab019396ce15c\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"asdf\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:32Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:32Z\"\n}, {\n  \"id\" : \"IM81f239c9222b4f548c394489ace20ecc\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"123123\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T23:11:32Z\",\n  \"dateUpdated\" : \"2021-11-16T23:11:32Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c691\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : null,\n  \"media\" : [ {\n    \"id\" : \"MEd726969bac4ea9a8ea0ed1b4881d982f\",\n    \"contentType\" : \"image/png\",\n    \"fileName\" : null,\n    \"size\" : 226933\n  } ],\n  \"authorId\" : \"customer\",\n  \"authorPreferredName\" : null,\n  \"dateCreated\" : \"2021-11-17T00:32:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:32:29Z\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/call\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\",\n  \"callTimeout\" : 120\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/status\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"conversationId\" : \"CH0c17647bed78463291d80a72acc7c58c\",\n  \"status\" : \"assigned\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["CallRequest","ConversationStatus","ConversationStatusUpdate","MessageItem","InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}