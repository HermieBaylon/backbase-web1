import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CustomerAccessToken } from '../model/models';
import { EmployeeAccessToken } from '../model/models';
import { RtcV1Configuration } from '../configuration';
import * as i0 from "@angular/core";
export interface GenerateCustomerAccessTokenRequestParams {
    ["conversationId"]?: string;
}
export declare class AccessService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: RtcV1Configuration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: RtcV1Configuration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<CustomerAccessToken>;
    generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<CustomerAccessToken>>;
    generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<CustomerAccessToken>>;
    generateCustomerAccessTokenUrl(requestParameters: GenerateCustomerAccessTokenRequestParams): string;
    generateEmployeeAccessTokens(observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<EmployeeAccessToken>;
    generateEmployeeAccessTokens(observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<EmployeeAccessToken>>;
    generateEmployeeAccessTokens(observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<EmployeeAccessToken>>;
    generateEmployeeAccessTokensUrl(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<AccessService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AccessService>;
}
