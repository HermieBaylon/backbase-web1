{"version":3,"file":"backbase-rtc-v1-client-ang.js","sources":["../../model/callRequest.ts","../../model/conversationStatus.ts","../../model/conversationStatusUpdate.ts","../../model/messageItem.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/access.service.ts","../../api/access.service.mocks.ts","../../api/conversations.service.ts","../../api/conversations.service.mocks.ts"],"sourcesContent":["/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface CallRequest { \n    /**\n     * The type of call to initiate\n     */\n    [\"type\"]: CallRequest.TypeEnum;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace CallRequest {\n    export type TypeEnum = 'voice' | 'video';\n    export const TypeEnum = {\n        Voice: 'voice' as TypeEnum,\n        Video: 'video' as TypeEnum\n    };\n}\n\n\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface ConversationStatus { \n    /**\n     * The unique id of conversation\n     */\n    [\"conversationId\"]: string;\n    /**\n     * The status of conversation\n     */\n    [\"status\"]: ConversationStatus.StatusEnum;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace ConversationStatus {\n    export type StatusEnum = 'assigned' | 'ended' | 'resolved';\n    export const StatusEnum = {\n        Assigned: 'assigned' as StatusEnum,\n        Ended: 'ended' as StatusEnum,\n        Resolved: 'resolved' as StatusEnum\n    };\n}\n\n\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\nexport interface ConversationStatusUpdate { \n    /**\n     * The status of conversation\n     */\n    [\"status\"]: ConversationStatusUpdate.StatusEnum;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace ConversationStatusUpdate {\n    export type StatusEnum = 'assigned' | 'resolved' | 'ended';\n    export const StatusEnum = {\n        Assigned: 'assigned' as StatusEnum,\n        Resolved: 'resolved' as StatusEnum,\n        Ended: 'ended' as StatusEnum\n    };\n}\n\n\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\nimport { Media } from './media';\n\n\nexport interface MessageItem { \n    /**\n     * The message id.\n     */\n    [\"id\"]: string;\n    /**\n     * Type used to distinguish between standard conversation messages and system messages such as when a conversation has been ended by a participant.\n     */\n    [\"type\"]: MessageItem.TypeEnum;\n    /**\n     * Message body.\n     */\n    [\"body\"]: string;\n    /**\n     * Photos, files or any attachments\n     */\n    [\"media\"]?: Array<Media>;\n    /**\n     * Author/ Participant Id of the message.\n     */\n    [\"authorId\"]: string;\n    /**\n     * Author/ Participant preferred name.\n     */\n    [\"authorPreferredName\"]?: string;\n    /**\n     * The date time the message was created. DateTime in UTC ISO8601\n     */\n    [\"dateCreated\"]: string;\n    /**\n     * The date time the message was last updated. DateTime in UTC ISO8601\n     */\n    [\"dateUpdated\"]?: string;\n    /**\n     * Additional properties\n     */\n    [\"additions\"]?: { [key: string]: string; };\n}\nexport namespace MessageItem {\n    export type TypeEnum = 'CONVERSATION_ACCEPTED' | 'CONVERSATION_ENDED' | 'MESSAGE' | 'VOICE_CALL_INITIATED' | 'VOICE_CALL_ACCEPTED' | 'VOICE_CALL_ENDED' | 'VIDEO_CALL_INITIATED' | 'VIDEO_CALL_ACCEPTED' | 'VIDEO_CALL_ENDED' | 'VOICE_CALL_REJECTED' | 'VOICE_CALL_TIMEOUT' | 'VIDEO_CALL_REJECTED' | 'VIDEO_CALL_TIMEOUT';\n    export const TypeEnum = {\n        CONVERSATIONACCEPTED: 'CONVERSATION_ACCEPTED' as TypeEnum,\n        CONVERSATIONENDED: 'CONVERSATION_ENDED' as TypeEnum,\n        MESSAGE: 'MESSAGE' as TypeEnum,\n        VOICECALLINITIATED: 'VOICE_CALL_INITIATED' as TypeEnum,\n        VOICECALLACCEPTED: 'VOICE_CALL_ACCEPTED' as TypeEnum,\n        VOICECALLENDED: 'VOICE_CALL_ENDED' as TypeEnum,\n        VIDEOCALLINITIATED: 'VIDEO_CALL_INITIATED' as TypeEnum,\n        VIDEOCALLACCEPTED: 'VIDEO_CALL_ACCEPTED' as TypeEnum,\n        VIDEOCALLENDED: 'VIDEO_CALL_ENDED' as TypeEnum,\n        VOICECALLREJECTED: 'VOICE_CALL_REJECTED' as TypeEnum,\n        VOICECALLTIMEOUT: 'VOICE_CALL_TIMEOUT' as TypeEnum,\n        VIDEOCALLREJECTED: 'VIDEO_CALL_REJECTED' as TypeEnum,\n        VIDEOCALLTIMEOUT: 'VIDEO_CALL_TIMEOUT' as TypeEnum\n    };\n}\n\n\n","import { InjectionToken } from '@angular/core';\n\nexport const RTC_V1_BASE_PATH = new InjectionToken<string>('RTC_V1_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface RtcV1ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class RtcV1Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: RtcV1ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link RtcV1Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link RtcV1Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module RtcV1Configuration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { RtcV1Configuration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class RtcV1ApiModule {\n    public static forRoot(configurationFactory: () => RtcV1Configuration): ModuleWithProviders<RtcV1ApiModule> {\n        return {\n            ngModule: RtcV1ApiModule,\n            providers: [ { provide: RtcV1Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: RtcV1ApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: RtcV1Configuration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('RtcV1ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CustomerAccessToken } from '../model/models';\nimport { EmployeeAccessToken } from '../model/models';\nimport { ModelError } from '../model/models';\n\nimport { RTC_V1_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { RtcV1Configuration }                                     from '../configuration';\n\n\nexport interface GenerateCustomerAccessTokenRequestParams {\n    /** Optional parameter to indicate whether access to voice and video calls must be included within the generated access token for the specified conversation. */\n    [\"conversationId\"]?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccessService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new RtcV1Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(RTC_V1_BASE_PATH) basePath: string, @Optional() configuration: RtcV1Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Generate customer access token.\n     * Generate customer access token, a token for accessing provider RTC conversation API.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CustomerAccessToken>;\n    /**\n     * Generate customer access token.\n     * Generate customer access token, a token for accessing provider RTC conversation API.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CustomerAccessToken>>;\n    /**\n     * Generate customer access token.\n     * Generate customer access token, a token for accessing provider RTC conversation API.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CustomerAccessToken>>;\n    /**\n     * Generate customer access token.\n     * Generate customer access token, a token for accessing provider RTC conversation API.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateCustomerAccessToken(requestParameters: GenerateCustomerAccessTokenRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _conversationId = requestParameters[\"conversationId\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_conversationId !== undefined && _conversationId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_conversationId, 'conversationId');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CustomerAccessToken>(`${this.configuration.basePath}/client-api/v1/rtc/access/customer`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public generateCustomerAccessTokenUrl(requestParameters: GenerateCustomerAccessTokenRequestParams): string {\n        const _conversationId = requestParameters[\"conversationId\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_conversationId !== undefined && _conversationId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_conversationId, 'conversationId');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/rtc/access/customer${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Generate employee access tokens.\n     * Generate employee access tokens, a token for accessing RTC tasks router API and a token for accessing provider RTC conversation API.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateEmployeeAccessTokens(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EmployeeAccessToken>;\n    /**\n     * Generate employee access tokens.\n     * Generate employee access tokens, a token for accessing RTC tasks router API and a token for accessing provider RTC conversation API.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateEmployeeAccessTokens(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EmployeeAccessToken>>;\n    /**\n     * Generate employee access tokens.\n     * Generate employee access tokens, a token for accessing RTC tasks router API and a token for accessing provider RTC conversation API.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateEmployeeAccessTokens(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EmployeeAccessToken>>;\n    /**\n     * Generate employee access tokens.\n     * Generate employee access tokens, a token for accessing RTC tasks router API and a token for accessing provider RTC conversation API.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public generateEmployeeAccessTokens(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EmployeeAccessToken>(`${this.configuration.basePath}/client-api/v1/rtc/access/employee`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public generateEmployeeAccessTokensUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/rtc/access/employee`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/rtc/access/customer URL pattern\n*/\nexport const AccessServiceGenerateCustomerAccessTokenMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/access/customer\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/access/employee URL pattern\n*/\nexport const AccessServiceGenerateEmployeeAccessTokensMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/access/employee\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"taskToken\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBQzFjOGFiYjViMzZjMGYxOGEyY2ZlOWQ0ZmQ1MDA3YmEyIiwiZXhwIjoxNjI4MTkwNDAwLCJ3b3JrZXJfc2lkIjoiV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIndvcmtzcGFjZV9zaWQiOiJXUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5IiwiY2hhbm5lbCI6IldLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJwb2xpY2llcyI6W3sidXJsIjoiaHR0cHM6Ly90YXNrcm91dGVyLnR3aWxpby5jb20vdjEvV29ya3NwYWNlcy9XUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5L0FjdGl2aXRpZXMiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvVGFza3MvKioiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwL1Jlc2VydmF0aW9ucy8qKiIsIm1ldGhvZCI6IkdFVCIsImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9Xb3JrZXJzL1dLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQWNjb3VudFNpZC9DaGFubmVsIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FjY291bnRTaWQvQ2hhbm5lbCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiUE9TVCIsInBvc3RfZmlsdGVyIjp7IkFjdGl2aXR5U2lkIjp7InJlcXVpcmVkIjp0cnVlfX0sImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9UYXNrcy8qKiIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQUMxYzhhYmI1YjM2YzBmMThhMmNmZTlkNGZkNTAwN2JhMi9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIvV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX1dLCJhY2NvdW50X3NpZCI6IkFDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIiLCJ2ZXJzaW9uIjoidjEifQ.3qR5XvqS3saAsnpc6XzKc2O4bPr3MCvlf2nZwmCOOs0\",\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const AccessServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/rtc/access/customer\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/access/employee\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"taskToken\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJBQzFjOGFiYjViMzZjMGYxOGEyY2ZlOWQ0ZmQ1MDA3YmEyIiwiZXhwIjoxNjI4MTkwNDAwLCJ3b3JrZXJfc2lkIjoiV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIndvcmtzcGFjZV9zaWQiOiJXUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5IiwiY2hhbm5lbCI6IldLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJwb2xpY2llcyI6W3sidXJsIjoiaHR0cHM6Ly90YXNrcm91dGVyLnR3aWxpby5jb20vdjEvV29ya3NwYWNlcy9XUzExM2UwNjQxYTZmZGExMWRlM2MxYjc4ZjA0ZmU5ZWE5L0FjdGl2aXRpZXMiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvVGFza3MvKioiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwL1Jlc2VydmF0aW9ucy8qKiIsIm1ldGhvZCI6IkdFVCIsImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9Xb3JrZXJzL1dLNjQ5OTE2OWQzYzQxM2MyOGZmZmY0MTgyYWRiYjAzOTAiLCJtZXRob2QiOiJHRVQiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQWNjb3VudFNpZC9DaGFubmVsIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FjY291bnRTaWQvQ2hhbm5lbCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL3Rhc2tyb3V0ZXIudHdpbGlvLmNvbS92MS9Xb3Jrc3BhY2VzL1dTMTEzZTA2NDFhNmZkYTExZGUzYzFiNzhmMDRmZTllYTkvV29ya2Vycy9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiUE9TVCIsInBvc3RfZmlsdGVyIjp7IkFjdGl2aXR5U2lkIjp7InJlcXVpcmVkIjp0cnVlfX0sImFsbG93Ijp0cnVlfSx7InVybCI6Imh0dHBzOi8vdGFza3JvdXRlci50d2lsaW8uY29tL3YxL1dvcmtzcGFjZXMvV1MxMTNlMDY0MWE2ZmRhMTFkZTNjMWI3OGYwNGZlOWVhOS9UYXNrcy8qKiIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX0seyJ1cmwiOiJodHRwczovL2V2ZW50LWJyaWRnZS50d2lsaW8uY29tL3YxL3dzY2hhbm5lbHMvQUMxYzhhYmI1YjM2YzBmMThhMmNmZTlkNGZkNTAwN2JhMi9XSzY0OTkxNjlkM2M0MTNjMjhmZmZmNDE4MmFkYmIwMzkwIiwibWV0aG9kIjoiR0VUIiwiYWxsb3ciOnRydWV9LHsidXJsIjoiaHR0cHM6Ly9ldmVudC1icmlkZ2UudHdpbGlvLmNvbS92MS93c2NoYW5uZWxzL0FDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIvV0s2NDk5MTY5ZDNjNDEzYzI4ZmZmZjQxODJhZGJiMDM5MCIsIm1ldGhvZCI6IlBPU1QiLCJhbGxvdyI6dHJ1ZX1dLCJhY2NvdW50X3NpZCI6IkFDMWM4YWJiNWIzNmMwZjE4YTJjZmU5ZDRmZDUwMDdiYTIiLCJ2ZXJzaW9uIjoidjEifQ.3qR5XvqS3saAsnpc6XzKc2O4bPr3MCvlf2nZwmCOOs0\",\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * RTC client\n * Real time communication.\n *\n * The version of the OpenAPI document: 1.21.1-beta\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CallRequest } from '../model/models';\nimport { CallResponse } from '../model/models';\nimport { ConversationId } from '../model/models';\nimport { ConversationItem } from '../model/models';\nimport { ConversationStatus } from '../model/models';\nimport { ConversationStatusUpdate } from '../model/models';\nimport { MessageItem } from '../model/models';\nimport { ModelError } from '../model/models';\n\nimport { RTC_V1_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { RtcV1Configuration }                                     from '../configuration';\n\n\nexport interface EndCallRequestParams {\n    /** A single conversation ID. */\n    [\"conversationId\"]: string;\n}\n\nexport interface GetConversationsRequestParams {\n    /** A single internal user ID. */\n    [\"userId\"]: string;\n    /** Optional pagination parameter for the start item indexed at zero. */\n    [\"from\"]?: number;\n    /** Optional pagination parameter for the number of items per page. */\n    [\"size\"]?: number;\n    /** Optional comma separated list of conversation Ids. */\n    [\"conversationIds\"]?: Array<string>;\n}\n\nexport interface GetMessagesRequestParams {\n    /** A single internal user ID. */\n    [\"userId\"]: string;\n    /** A single conversation ID. */\n    [\"conversationId\"]: string;\n    /** Optional pagination parameter for the start item indexed at zero. */\n    [\"from\"]?: number;\n    /** Optional pagination parameter for the number of items per page. */\n    [\"size\"]?: number;\n}\n\nexport interface InitiateCallRequestParams {\n    /** A single conversation ID. */\n    [\"conversationId\"]: string;\n    /** Initiate a voice or video call. */\n    [\"callRequest\"]: CallRequest;\n}\n\nexport interface UpdateConversationStatusRequestParams {\n    /** A single conversation ID. */\n    [\"conversationId\"]: string;\n    /** Update a conversation status. */\n    [\"conversationStatusUpdate\"]: ConversationStatusUpdate;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConversationsService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new RtcV1Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(RTC_V1_BASE_PATH) basePath: string, @Optional() configuration: RtcV1Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Create a conversation.\n     * Initiate a new support request conversation.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createConversation(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConversationId>;\n    /**\n     * Create a conversation.\n     * Initiate a new support request conversation.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createConversation(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConversationId>>;\n    /**\n     * Create a conversation.\n     * Initiate a new support request conversation.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createConversation(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConversationId>>;\n    /**\n     * Create a conversation.\n     * Initiate a new support request conversation.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createConversation(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ConversationId>(`${this.configuration.basePath}/client-api/v1/rtc/conversations`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public createConversationUrl(): string {\n        return `${this.configuration.basePath}/client-api/v1/rtc/conversations`;\n    }\n\n    /**\n     * End a voice or video call.\n     * End a voice or video call.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public endCall(requestParameters: EndCallRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<any>;\n    /**\n     * End a voice or video call.\n     * End a voice or video call.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public endCall(requestParameters: EndCallRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<any>>;\n    /**\n     * End a voice or video call.\n     * End a voice or video call.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public endCall(requestParameters: EndCallRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<any>>;\n    /**\n     * End a voice or video call.\n     * End a voice or video call.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public endCall(requestParameters: EndCallRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling endCall.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/call`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public endCallUrl(requestParameters: EndCallRequestParams): string {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling endCall.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/call`;\n    }\n\n    /**\n     * Retrieve list of conversations for a user.\n     * Retrieve list of conversations for a user in descending order of conversation date creation. This API supports pagination (default page size 10).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversations(requestParameters: GetConversationsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ConversationItem>>;\n    /**\n     * Retrieve list of conversations for a user.\n     * Retrieve list of conversations for a user in descending order of conversation date creation. This API supports pagination (default page size 10).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversations(requestParameters: GetConversationsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ConversationItem>>>;\n    /**\n     * Retrieve list of conversations for a user.\n     * Retrieve list of conversations for a user in descending order of conversation date creation. This API supports pagination (default page size 10).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversations(requestParameters: GetConversationsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ConversationItem>>>;\n    /**\n     * Retrieve list of conversations for a user.\n     * Retrieve list of conversations for a user in descending order of conversation date creation. This API supports pagination (default page size 10).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getConversations(requestParameters: GetConversationsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getConversations.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _conversationIds = requestParameters[\"conversationIds\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_conversationIds) {\n            _conversationIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'conversationIds');\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ConversationItem>>(`${this.configuration.basePath}/client-api/v1/rtc/users/${encodeURIComponent(String(_userId))}/conversations`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getConversationsUrl(requestParameters: GetConversationsRequestParams): string {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getConversations.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _conversationIds = requestParameters[\"conversationIds\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_conversationIds) {\n            _conversationIds.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'conversationIds');\n            })\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/rtc/users/${encodeURIComponent(String(_userId))}/conversations${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve list of messages for a user and specified conversation.\n     * Retrieve list of messages for a user and specified conversation in ascending order of message date creation. This API supports pagination (default page size 50).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessages(requestParameters: GetMessagesRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<MessageItem>>;\n    /**\n     * Retrieve list of messages for a user and specified conversation.\n     * Retrieve list of messages for a user and specified conversation in ascending order of message date creation. This API supports pagination (default page size 50).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessages(requestParameters: GetMessagesRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<MessageItem>>>;\n    /**\n     * Retrieve list of messages for a user and specified conversation.\n     * Retrieve list of messages for a user and specified conversation in ascending order of message date creation. This API supports pagination (default page size 50).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessages(requestParameters: GetMessagesRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<MessageItem>>>;\n    /**\n     * Retrieve list of messages for a user and specified conversation.\n     * Retrieve list of messages for a user and specified conversation in ascending order of message date creation. This API supports pagination (default page size 50).\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMessages(requestParameters: GetMessagesRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getMessages.');\n        }\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling getMessages.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<MessageItem>>(`${this.configuration.basePath}/client-api/v1/rtc/users/${encodeURIComponent(String(_userId))}/conversations/${encodeURIComponent(String(_conversationId))}/messages`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getMessagesUrl(requestParameters: GetMessagesRequestParams): string {\n        const _userId = requestParameters[\"userId\"];\n        if (_userId === null || _userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling getMessages.');\n        }\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling getMessages.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/rtc/users/${encodeURIComponent(String(_userId))}/conversations/${encodeURIComponent(String(_conversationId))}/messages${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Initiate a voice or video call.\n     * Initiate a voice or video call between the participants of the specified conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public initiateCall(requestParameters: InitiateCallRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<CallResponse>;\n    /**\n     * Initiate a voice or video call.\n     * Initiate a voice or video call between the participants of the specified conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public initiateCall(requestParameters: InitiateCallRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<CallResponse>>;\n    /**\n     * Initiate a voice or video call.\n     * Initiate a voice or video call between the participants of the specified conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public initiateCall(requestParameters: InitiateCallRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<CallResponse>>;\n    /**\n     * Initiate a voice or video call.\n     * Initiate a voice or video call between the participants of the specified conversation.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public initiateCall(requestParameters: InitiateCallRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling initiateCall.');\n        }\n        const _callRequest = requestParameters[\"callRequest\"];\n        if (_callRequest === null || _callRequest === undefined) {\n            throw new Error('Required parameter callRequest was null or undefined when calling initiateCall.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<CallResponse>(`${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/call`,\n            _callRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public initiateCallUrl(requestParameters: InitiateCallRequestParams): string {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling initiateCall.');\n        }\n        const _callRequest = requestParameters[\"callRequest\"];\n        if (_callRequest === null || _callRequest === undefined) {\n            throw new Error('Required parameter callRequest was null or undefined when calling initiateCall.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/call`;\n    }\n\n    /**\n     * Update a conversation status.\n     * Update a conversation status.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateConversationStatus(requestParameters: UpdateConversationStatusRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ConversationStatus>;\n    /**\n     * Update a conversation status.\n     * Update a conversation status.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateConversationStatus(requestParameters: UpdateConversationStatusRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ConversationStatus>>;\n    /**\n     * Update a conversation status.\n     * Update a conversation status.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateConversationStatus(requestParameters: UpdateConversationStatusRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ConversationStatus>>;\n    /**\n     * Update a conversation status.\n     * Update a conversation status.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateConversationStatus(requestParameters: UpdateConversationStatusRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling updateConversationStatus.');\n        }\n        const _conversationStatusUpdate = requestParameters[\"conversationStatusUpdate\"];\n        if (_conversationStatusUpdate === null || _conversationStatusUpdate === undefined) {\n            throw new Error('Required parameter conversationStatusUpdate was null or undefined when calling updateConversationStatus.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<ConversationStatus>(`${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/status`,\n            _conversationStatusUpdate,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public updateConversationStatusUrl(requestParameters: UpdateConversationStatusRequestParams): string {\n        const _conversationId = requestParameters[\"conversationId\"];\n        if (_conversationId === null || _conversationId === undefined) {\n            throw new Error('Required parameter conversationId was null or undefined when calling updateConversationStatus.');\n        }\n        const _conversationStatusUpdate = requestParameters[\"conversationStatusUpdate\"];\n        if (_conversationStatusUpdate === null || _conversationStatusUpdate === undefined) {\n            throw new Error('Required parameter conversationStatusUpdate was null or undefined when calling updateConversationStatus.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/rtc/conversations/${encodeURIComponent(String(_conversationId))}/status`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/rtc/conversations URL pattern\n*/\nexport const ConversationsServiceCreateConversationMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/conversations\",\n        method: \"POST\",\n        responses: [\n                {\n                    status: 201,\n                    body: {\n  \"id\" : \"CH0c17647bed78463291d80a72acc7c58c\"\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/conversations/{conversationId}/call URL pattern\n*/\nexport const ConversationsServiceEndCallMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/call\",\n        method: \"DELETE\",\n        responses: [\n                {\n                status: 204,\n                body: \"\"\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/users/{userId}/conversations URL pattern\n*/\nexport const ConversationsServiceGetConversationsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/users/{userId}/conversations\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"CH1\",\n  \"dateCreated\" : \"2021-09-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH2\",\n  \"dateCreated\" : \"2021-09-16T20:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  } ]\n}, {\n  \"id\" : \"CH3\",\n  \"dateCreated\" : \"2019-12-26T22:18:37Z\",\n  \"participants\" : [ ]\n}, {\n  \"id\" : \"CH4\",\n  \"dateCreated\" : \"2019-12-25T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee2\"\n  } ]\n}, {\n  \"id\" : \"CH524234\",\n  \"dateCreated\" : \"2017-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH6\",\n  \"dateCreated\" : \"2016-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\"\n  } ]\n}, {\n  \"id\" : \"CH7\",\n  \"dateCreated\" : \"2015-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\"\n  } ]\n}, {\n  \"id\" : \"CH8\",\n  \"dateCreated\" : \"2014-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee8\"\n  } ]\n}, {\n  \"id\" : \"CH9\",\n  \"dateCreated\" : \"2014-10-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee9\"\n  } ]\n}, {\n  \"id\" : \"CH10\",\n  \"dateCreated\" : \"2014-09-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee10\"\n  } ]\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"CH1\",\n  \"dateCreated\" : \"2020-12-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH2\",\n  \"dateCreated\" : \"2019-12-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  } ]\n}, {\n  \"id\" : \"CH3\",\n  \"dateCreated\" : \"2019-11-26T22:18:37Z\",\n  \"participants\" : [ ]\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/users/{userId}/conversations/{conversationId}/messages URL pattern\n*/\nexport const ConversationsServiceGetMessagesMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/users/{userId}/conversations/{conversationId}/messages\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: [ ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"IM426d0acb198c43df8b42ee6e206fddb9\",\n  \"type\" : \"CONVERSATION_ACCEPTED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:30Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:30Z\"\n}, {\n  \"id\" : \"IMa7443cccfc9946a2810ab019396ce15c\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"asdf\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:32Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:32Z\"\n}, {\n  \"id\" : \"IM81f239c9222b4f548c394489ace20ecc\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"123123\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T23:11:32Z\",\n  \"dateUpdated\" : \"2021-11-16T23:11:32Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c691\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : null,\n  \"media\" : [ {\n    \"id\" : \"MEd726969bac4ea9a8ea0ed1b4881d982f\",\n    \"contentType\" : \"image/png\",\n    \"fileName\" : null,\n    \"size\" : 226933\n  } ],\n  \"authorId\" : \"customer\",\n  \"authorPreferredName\" : null,\n  \"dateCreated\" : \"2021-11-17T00:32:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:32:29Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c780\",\n  \"type\" : \"CONVERSATION_ENDED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-17T00:52:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:52:29Z\"\n} ]\n                },\n                {\n                    status: 200,\n                    body: [ {\n  \"id\" : \"IM426d0acb198c43df8b42ee6e206fddb9\",\n  \"type\" : \"CONVERSATION_ACCEPTED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:30Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:30Z\"\n}, {\n  \"id\" : \"IMa7443cccfc9946a2810ab019396ce15c\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"asdf\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:32Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:32Z\"\n}, {\n  \"id\" : \"IM81f239c9222b4f548c394489ace20ecc\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"123123\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T23:11:32Z\",\n  \"dateUpdated\" : \"2021-11-16T23:11:32Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c691\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : null,\n  \"media\" : [ {\n    \"id\" : \"MEd726969bac4ea9a8ea0ed1b4881d982f\",\n    \"contentType\" : \"image/png\",\n    \"fileName\" : null,\n    \"size\" : 226933\n  } ],\n  \"authorId\" : \"customer\",\n  \"authorPreferredName\" : null,\n  \"dateCreated\" : \"2021-11-17T00:32:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:32:29Z\"\n} ]\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/conversations/{conversationId}/call URL pattern\n*/\nexport const ConversationsServiceInitiateCallMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/call\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\",\n  \"callTimeout\" : 120\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/rtc/conversations/{conversationId}/status URL pattern\n*/\nexport const ConversationsServiceUpdateConversationStatusMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/status\",\n        method: \"PUT\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"conversationId\" : \"CH0c17647bed78463291d80a72acc7c58c\",\n  \"status\" : \"assigned\"\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 401,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 403,\n                    body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const ConversationsServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/rtc/conversations\",\n        method: \"POST\",\n        responses: [\n\n            {\n                status: 201,\n                body: {\n  \"id\" : \"CH0c17647bed78463291d80a72acc7c58c\"\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/call\",\n        method: \"DELETE\",\n        responses: [\n\n        {\n          status: 204,\n          body: \"\"\n        },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/users/{userId}/conversations\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"CH1\",\n  \"dateCreated\" : \"2021-09-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH2\",\n  \"dateCreated\" : \"2021-09-16T20:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  } ]\n}, {\n  \"id\" : \"CH3\",\n  \"dateCreated\" : \"2019-12-26T22:18:37Z\",\n  \"participants\" : [ ]\n}, {\n  \"id\" : \"CH4\",\n  \"dateCreated\" : \"2019-12-25T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee2\"\n  } ]\n}, {\n  \"id\" : \"CH524234\",\n  \"dateCreated\" : \"2017-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH6\",\n  \"dateCreated\" : \"2016-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\"\n  } ]\n}, {\n  \"id\" : \"CH7\",\n  \"dateCreated\" : \"2015-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\"\n  } ]\n}, {\n  \"id\" : \"CH8\",\n  \"dateCreated\" : \"2014-12-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee8\"\n  } ]\n}, {\n  \"id\" : \"CH9\",\n  \"dateCreated\" : \"2014-10-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee9\"\n  } ]\n}, {\n  \"id\" : \"CH10\",\n  \"dateCreated\" : \"2014-09-26T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee10\"\n  } ]\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"CH1\",\n  \"dateCreated\" : \"2020-12-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  }, {\n    \"id\" : \"supervisor1\",\n    \"preferredName\" : \"David Jones\"\n  } ]\n}, {\n  \"id\" : \"CH2\",\n  \"dateCreated\" : \"2019-12-16T22:18:37Z\",\n  \"participants\" : [ {\n    \"id\" : \"employee1\",\n    \"preferredName\" : \"John Smith\"\n  } ]\n}, {\n  \"id\" : \"CH3\",\n  \"dateCreated\" : \"2019-11-26T22:18:37Z\",\n  \"participants\" : [ ]\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/users/{userId}/conversations/{conversationId}/messages\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: [ ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"IM426d0acb198c43df8b42ee6e206fddb9\",\n  \"type\" : \"CONVERSATION_ACCEPTED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:30Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:30Z\"\n}, {\n  \"id\" : \"IMa7443cccfc9946a2810ab019396ce15c\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"asdf\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:32Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:32Z\"\n}, {\n  \"id\" : \"IM81f239c9222b4f548c394489ace20ecc\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"123123\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T23:11:32Z\",\n  \"dateUpdated\" : \"2021-11-16T23:11:32Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c691\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : null,\n  \"media\" : [ {\n    \"id\" : \"MEd726969bac4ea9a8ea0ed1b4881d982f\",\n    \"contentType\" : \"image/png\",\n    \"fileName\" : null,\n    \"size\" : 226933\n  } ],\n  \"authorId\" : \"customer\",\n  \"authorPreferredName\" : null,\n  \"dateCreated\" : \"2021-11-17T00:32:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:32:29Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c780\",\n  \"type\" : \"CONVERSATION_ENDED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-17T00:52:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:52:29Z\"\n} ]\n            },\n            {\n                status: 200,\n                body: [ {\n  \"id\" : \"IM426d0acb198c43df8b42ee6e206fddb9\",\n  \"type\" : \"CONVERSATION_ACCEPTED\",\n  \"body\" : null,\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:30Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:30Z\"\n}, {\n  \"id\" : \"IMa7443cccfc9946a2810ab019396ce15c\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"asdf\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T20:08:32Z\",\n  \"dateUpdated\" : \"2021-11-16T20:08:32Z\"\n}, {\n  \"id\" : \"IM81f239c9222b4f548c394489ace20ecc\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : \"123123\",\n  \"media\" : [ ],\n  \"authorId\" : \"admin\",\n  \"authorPreferredName\" : \"Kjiro\",\n  \"dateCreated\" : \"2021-11-16T23:11:32Z\",\n  \"dateUpdated\" : \"2021-11-16T23:11:32Z\"\n}, {\n  \"id\" : \"IM079552e6556c4ed6825b84597fa7c691\",\n  \"type\" : \"MESSAGE\",\n  \"body\" : null,\n  \"media\" : [ {\n    \"id\" : \"MEd726969bac4ea9a8ea0ed1b4881d982f\",\n    \"contentType\" : \"image/png\",\n    \"fileName\" : null,\n    \"size\" : 226933\n  } ],\n  \"authorId\" : \"customer\",\n  \"authorPreferredName\" : null,\n  \"dateCreated\" : \"2021-11-17T00:32:29Z\",\n  \"dateUpdated\" : \"2021-11-17T00:32:29Z\"\n} ]\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/call\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"conversationToken\" : \"eyJjdHkiOiJ0d2lsaW8tZnBhO3Y9MSIsInR5cCI6IkpXVCIsImFsZyI6IkhTMjU2In0.eyJpc3MiOiJTSzRmNjhlMDg2ZjY1NzVlYTY1NTAyM2E0MDBkNDNmNzNhIiwiZXhwIjoxNjI2MzcxMTE4LCJncmFudHMiOnsiaWRlbnRpdHkiOiJBTk9OWU1PVVMiLCJjaGF0Ijp7InNlcnZpY2Vfc2lkIjoiSVNhYjlkMzFkNzdmZTg0MjJmOWFlNTJiNGM2NTVjMTNhNyJ9fSwianRpIjoiU0s0ZjY4ZTA4NmY2NTc1ZWE2NTUwMjNhNDAwZDQzZjczYS0xNjI2MzQyMjcyIiwic3ViIjoiQUM0YmM1N2RjYTZmOWY3MTdlNDdkOWRlYzc4NGRjOTJhMCJ9.MFtIBvMfl3oYHOILsPMYklhdUuhsdwviTV_Pxdxi_6g\",\n  \"callTimeout\" : 120\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/rtc/conversations/{conversationId}/status\",\n        method: \"PUT\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"conversationId\" : \"CH0c17647bed78463291d80a72acc7c58c\",\n  \"status\" : \"assigned\"\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 401,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to invalid credentials.\",\n    \"key\" : \"common.api.token\",\n    \"context\" : {\n      \"accessToken\" : \"expired\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 403,\n                body: {\n  \"message\" : \"Access to requested resource denied.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Resource access denied due to an insufficient user quota of {quota}.\",\n    \"key\" : \"common.api.quota\",\n    \"context\" : {\n      \"quota\" : \"someQuota\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"key\" : \"GENERAL_ERROR\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}