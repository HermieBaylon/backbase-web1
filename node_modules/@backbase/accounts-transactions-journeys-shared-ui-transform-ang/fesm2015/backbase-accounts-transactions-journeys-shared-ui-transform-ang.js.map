{"version":3,"file":"backbase-accounts-transactions-journeys-shared-ui-transform-ang.js","sources":["../../../../../../libs/shared/ui/transform/src/lib/to-number-pipe/to-number.pipe.ts","../../../../../../libs/shared/ui/transform/src/lib/to-number-pipe/to-number.module.ts","../../../../../../libs/shared/ui/transform/src/lib/to-array-pipe/to-array.pipe.ts","../../../../../../libs/shared/ui/transform/src/lib/to-array-pipe/to-array.module.ts","../../../../../../libs/shared/ui/transform/src/lib/split-array-pipe/split-array.pipe.ts","../../../../../../libs/shared/ui/transform/src/lib/split-array-pipe/split-array.module.ts","../../../../../../libs/shared/ui/transform/src/lib/get-value-pipe/get-value.pipe.ts","../../../../../../libs/shared/ui/transform/src/lib/get-value-pipe/get-value.module.ts","../../../../../../libs/shared/ui/transform/src/lib/get-decimals-count-pipe/get-decimals-count.pipe.ts","../../../../../../libs/shared/ui/transform/src/lib/get-decimals-count-pipe/get-decimals-count.module.ts","../../../../../../libs/shared/ui/transform/src/lib/shared-ui-transform.module.ts","../../../../../../libs/shared/ui/transform/src/backbase-accounts-transactions-journeys-shared-ui-transform-ang.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Converts value to a number\n * {{ 'value' | bbToNumber }}\n */\n@Pipe({ name: 'bbToNumber' })\nexport class ToNumberPipe implements PipeTransform {\n  transform(value: string | number | undefined): number {\n    return Number(value?.toString().replace(/[^\\d.-]/g, ''));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToNumberPipe } from './to-number.pipe';\n\nconst pipes = [ToNumberPipe];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...pipes],\n  exports: [...pipes],\n})\nexport class ToNumberPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Converts value to array\n * {{ 'value' | bbToArray }}\n */\n@Pipe({ name: 'bbToArray' })\nexport class ToArrayPipe implements PipeTransform {\n  transform<T>(value: T | T[]): T[] {\n    return Array.isArray(value) ? value : [value];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToArrayPipe } from './to-array.pipe';\n\nconst pipes = [ToArrayPipe];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...pipes],\n  exports: [...pipes],\n})\nexport class ToArrayPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Splits array of items into chunks\n * {{ [1, 2, 3, 4] | bbSplitArray:2 }}\n */\n@Pipe({ name: 'bbSplitArray' })\nexport class SplitArrayPipe implements PipeTransform {\n  transform<T>(array: T[], chunkSize: number): T[][] {\n    const chunks = [];\n    for (let i = 0; i < array.length; i += chunkSize) {\n      chunks.push(array.slice(i, i + chunkSize));\n    }\n    return chunks;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SplitArrayPipe } from './split-array.pipe';\n\nconst pipes = [SplitArrayPipe];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...pipes],\n  exports: [...pipes],\n})\nexport class SplitArrayPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { getValue } from '@backbase/accounts-transactions-journeys-shared-util-transform-ang';\n\n/**\n * Gets a value from the object\n * {{ { key: 'value' } | bbGetValue:'key' }}\n */\n@Pipe({ name: 'bbGetValue' })\nexport class GetValuePipe implements PipeTransform {\n  transform<ItemType = any, ValueType = any>(item: ItemType, key: string): ValueType | undefined {\n    return getValue(item, key);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GetValuePipe } from './get-value.pipe';\n\nconst pipes = [GetValuePipe];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...pipes],\n  exports: [...pipes],\n})\nexport class GetValuePipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Gets decimals count\n * {{ 12.4 | bbGetDecimalsCount }}\n */\n@Pipe({ name: 'bbGetDecimalsCount' })\nexport class GetDecimalsCountPipe implements PipeTransform {\n  transform(value: number | string | undefined): number {\n    return value?.toString().split('.')[1]?.length ?? 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GetDecimalsCountPipe } from './get-decimals-count.pipe';\n\nconst pipes = [GetDecimalsCountPipe];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [...pipes],\n  exports: [...pipes],\n})\nexport class GetDecimalsCountModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToNumberPipeModule } from './to-number-pipe/to-number.module';\nimport { ToArrayPipeModule } from './to-array-pipe/to-array.module';\nimport { SplitArrayPipeModule } from './split-array-pipe/split-array.module';\nimport { GetValuePipeModule } from './get-value-pipe/get-value.module';\nimport { GetDecimalsCountModule } from './get-decimals-count-pipe/get-decimals-count.module';\n\nconst pipeModules = [\n  ToNumberPipeModule,\n  ToArrayPipeModule,\n  SplitArrayPipeModule,\n  GetValuePipeModule,\n  GetDecimalsCountModule,\n];\n\n@NgModule({\n  imports: [CommonModule, ...pipeModules],\n  exports: [...pipeModules],\n})\nexport class SharedUiTransformModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["pipes"],"mappings":"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"}