import * as i0 from '@angular/core';
import { Pipe, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { getValue } from '@backbase/accounts-transactions-journeys-shared-util-transform-ang';

/**
 * Converts value to a number
 * {{ 'value' | bbToNumber }}
 */
class ToNumberPipe {
    transform(value) {
        return Number(value === null || value === void 0 ? void 0 : value.toString().replace(/[^\d.-]/g, ''));
    }
}
/** @nocollapse */ ToNumberPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToNumberPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
/** @nocollapse */ ToNumberPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToNumberPipe, name: "bbToNumber" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToNumberPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'bbToNumber' }]
        }] });

const pipes$4 = [ToNumberPipe];
class ToNumberPipeModule {
}
/** @nocollapse */ ToNumberPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToNumberPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ ToNumberPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToNumberPipeModule, declarations: [ToNumberPipe], imports: [CommonModule], exports: [ToNumberPipe] });
/** @nocollapse */ ToNumberPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToNumberPipeModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToNumberPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [...pipes$4],
                    exports: [...pipes$4],
                }]
        }] });

/**
 * Converts value to array
 * {{ 'value' | bbToArray }}
 */
class ToArrayPipe {
    transform(value) {
        return Array.isArray(value) ? value : [value];
    }
}
/** @nocollapse */ ToArrayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToArrayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
/** @nocollapse */ ToArrayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToArrayPipe, name: "bbToArray" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToArrayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'bbToArray' }]
        }] });

const pipes$3 = [ToArrayPipe];
class ToArrayPipeModule {
}
/** @nocollapse */ ToArrayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToArrayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ ToArrayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToArrayPipeModule, declarations: [ToArrayPipe], imports: [CommonModule], exports: [ToArrayPipe] });
/** @nocollapse */ ToArrayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToArrayPipeModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: ToArrayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [...pipes$3],
                    exports: [...pipes$3],
                }]
        }] });

/**
 * Splits array of items into chunks
 * {{ [1, 2, 3, 4] | bbSplitArray:2 }}
 */
class SplitArrayPipe {
    transform(array, chunkSize) {
        const chunks = [];
        for (let i = 0; i < array.length; i += chunkSize) {
            chunks.push(array.slice(i, i + chunkSize));
        }
        return chunks;
    }
}
/** @nocollapse */ SplitArrayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SplitArrayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
/** @nocollapse */ SplitArrayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SplitArrayPipe, name: "bbSplitArray" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SplitArrayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'bbSplitArray' }]
        }] });

const pipes$2 = [SplitArrayPipe];
class SplitArrayPipeModule {
}
/** @nocollapse */ SplitArrayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SplitArrayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ SplitArrayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SplitArrayPipeModule, declarations: [SplitArrayPipe], imports: [CommonModule], exports: [SplitArrayPipe] });
/** @nocollapse */ SplitArrayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SplitArrayPipeModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SplitArrayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [...pipes$2],
                    exports: [...pipes$2],
                }]
        }] });

/**
 * Gets a value from the object
 * {{ { key: 'value' } | bbGetValue:'key' }}
 */
class GetValuePipe {
    transform(item, key) {
        return getValue(item, key);
    }
}
/** @nocollapse */ GetValuePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetValuePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
/** @nocollapse */ GetValuePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetValuePipe, name: "bbGetValue" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetValuePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'bbGetValue' }]
        }] });

const pipes$1 = [GetValuePipe];
class GetValuePipeModule {
}
/** @nocollapse */ GetValuePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetValuePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ GetValuePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetValuePipeModule, declarations: [GetValuePipe], imports: [CommonModule], exports: [GetValuePipe] });
/** @nocollapse */ GetValuePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetValuePipeModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetValuePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [...pipes$1],
                    exports: [...pipes$1],
                }]
        }] });

/**
 * Gets decimals count
 * {{ 12.4 | bbGetDecimalsCount }}
 */
class GetDecimalsCountPipe {
    transform(value) {
        var _a, _b;
        return (_b = (_a = value === null || value === void 0 ? void 0 : value.toString().split('.')[1]) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;
    }
}
/** @nocollapse */ GetDecimalsCountPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetDecimalsCountPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
/** @nocollapse */ GetDecimalsCountPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetDecimalsCountPipe, name: "bbGetDecimalsCount" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetDecimalsCountPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'bbGetDecimalsCount' }]
        }] });

const pipes = [GetDecimalsCountPipe];
class GetDecimalsCountModule {
}
/** @nocollapse */ GetDecimalsCountModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetDecimalsCountModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ GetDecimalsCountModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetDecimalsCountModule, declarations: [GetDecimalsCountPipe], imports: [CommonModule], exports: [GetDecimalsCountPipe] });
/** @nocollapse */ GetDecimalsCountModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetDecimalsCountModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: GetDecimalsCountModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    declarations: [...pipes],
                    exports: [...pipes],
                }]
        }] });

const pipeModules = [
    ToNumberPipeModule,
    ToArrayPipeModule,
    SplitArrayPipeModule,
    GetValuePipeModule,
    GetDecimalsCountModule,
];
class SharedUiTransformModule {
}
/** @nocollapse */ SharedUiTransformModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SharedUiTransformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
/** @nocollapse */ SharedUiTransformModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SharedUiTransformModule, imports: [CommonModule, ToNumberPipeModule,
        ToArrayPipeModule,
        SplitArrayPipeModule,
        GetValuePipeModule,
        GetDecimalsCountModule], exports: [ToNumberPipeModule,
        ToArrayPipeModule,
        SplitArrayPipeModule,
        GetValuePipeModule,
        GetDecimalsCountModule] });
/** @nocollapse */ SharedUiTransformModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SharedUiTransformModule, imports: [[CommonModule, ...pipeModules], ToNumberPipeModule,
        ToArrayPipeModule,
        SplitArrayPipeModule,
        GetValuePipeModule,
        GetDecimalsCountModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SharedUiTransformModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, ...pipeModules],
                    exports: [...pipeModules],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { GetDecimalsCountModule, GetDecimalsCountPipe, GetValuePipe, GetValuePipeModule, SharedUiTransformModule, SplitArrayPipe, SplitArrayPipeModule, ToArrayPipe, ToArrayPipeModule, ToNumberPipe, ToNumberPipeModule };
//# sourceMappingURL=backbase-accounts-transactions-journeys-shared-ui-transform-ang.js.map
