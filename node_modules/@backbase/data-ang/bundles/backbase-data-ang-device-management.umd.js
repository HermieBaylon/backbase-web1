(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@backbase/device-http-ang')) :
	typeof define === 'function' && define.amd ? define('@backbase/data-ang/device-management', ['exports', '@backbase/device-http-ang'], factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["data-ang"] = global.backbase["data-ang"] || {}, global.backbase["data-ang"]["device-management"] = {}), global.deviceHttpAng));
})(this, (function (exports, deviceHttpAng) { 'use strict';

	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var COLLECTION_FORMATS = deviceHttpAng.COLLECTION_FORMATS;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var CONFIG_TOKEN = deviceHttpAng.CONFIG_TOKEN;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var DeviceStatus = deviceHttpAng.DeviceStatus;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageMyDevicesService = deviceHttpAng.ManageMyDevicesService;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider = deviceHttpAng.ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageMyDevicesServiceMocksProvider = deviceHttpAng.ManageMyDevicesServiceMocksProvider;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider = deviceHttpAng.ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageMyDevicesServicePutPushTokenMocksProvider = deviceHttpAng.ManageMyDevicesServicePutPushTokenMocksProvider;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageOtherUsersDevicesService = deviceHttpAng.ManageOtherUsersDevicesService;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider = deviceHttpAng.ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageOtherUsersDevicesServiceMocksProvider = deviceHttpAng.ManageOtherUsersDevicesServiceMocksProvider;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider = deviceHttpAng.ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var Platform = deviceHttpAng.Platform;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var DEVICE_BASE_PATH = deviceHttpAng.DEVICE_BASE_PATH;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var DeviceApiModule = deviceHttpAng.DeviceApiModule;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var DeviceConfiguration = deviceHttpAng.DeviceConfiguration;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageMyDevicesServiceGetMyDevicesMocksProvider = deviceHttpAng.ManageMyDevicesServiceGetMyDevicesMocksProvider;
	/** @deprecated Import from `@backbase/data-ang/device` instead. */
	var ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider = deviceHttpAng.ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider;
	/** @deprecated Use DEVICE_BASE_PATH from `@backbase/data-ang/device` instead */
	var BASE_PATH = deviceHttpAng.DEVICE_BASE_PATH;
	/** @deprecated Use DeviceApiModule from `@backbase/data-ang/device` instead */
	var ApiModule = deviceHttpAng.DeviceApiModule;
	/** @deprecated Use DeviceConfiguration from `@backbase/data-ang/device` instead */
	var Configuration = deviceHttpAng.DeviceConfiguration;
	/** @deprecated Use ManageMyDevicesServiceGetMyDevicesMocksProvider from `@backbase/data-ang/device` instead */
	var ManageMyDevicesServiceClientApiV1UsersMeDevicesMocksProvider = deviceHttpAng.ManageMyDevicesServiceGetMyDevicesMocksProvider;
	/** @deprecated Use ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider from `@backbase/data-ang/device` instead */
	var ManageOtherUsersDevicesServiceClientApiV1UsersDbsUserIdDevicesMocksProvider = deviceHttpAng.ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider;

	/**
	 * Generated bundle index. Do not edit.
	 */

	exports.ApiModule = ApiModule;
	exports.BASE_PATH = BASE_PATH;
	exports.COLLECTION_FORMATS = COLLECTION_FORMATS;
	exports.CONFIG_TOKEN = CONFIG_TOKEN;
	exports.Configuration = Configuration;
	exports.DEVICE_BASE_PATH = DEVICE_BASE_PATH;
	exports.DeviceApiModule = DeviceApiModule;
	exports.DeviceConfiguration = DeviceConfiguration;
	exports.DeviceStatus = DeviceStatus;
	exports.ManageMyDevicesService = ManageMyDevicesService;
	exports.ManageMyDevicesServiceClientApiV1UsersMeDevicesMocksProvider = ManageMyDevicesServiceClientApiV1UsersMeDevicesMocksProvider;
	exports.ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider = ManageMyDevicesServiceDeleteMyDeviceByDeviceIdMocksProvider;
	exports.ManageMyDevicesServiceGetMyDevicesMocksProvider = ManageMyDevicesServiceGetMyDevicesMocksProvider;
	exports.ManageMyDevicesServiceMocksProvider = ManageMyDevicesServiceMocksProvider;
	exports.ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider = ManageMyDevicesServicePatchMyDeviceByDeviceIdMocksProvider;
	exports.ManageMyDevicesServicePutPushTokenMocksProvider = ManageMyDevicesServicePutPushTokenMocksProvider;
	exports.ManageOtherUsersDevicesService = ManageOtherUsersDevicesService;
	exports.ManageOtherUsersDevicesServiceClientApiV1UsersDbsUserIdDevicesMocksProvider = ManageOtherUsersDevicesServiceClientApiV1UsersDbsUserIdDevicesMocksProvider;
	exports.ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider = ManageOtherUsersDevicesServiceDeleteUserDeviceByDeviceIdMocksProvider;
	exports.ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider = ManageOtherUsersDevicesServiceGetDevicesByDbsUserIdMocksProvider;
	exports.ManageOtherUsersDevicesServiceMocksProvider = ManageOtherUsersDevicesServiceMocksProvider;
	exports.ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider = ManageOtherUsersDevicesServicePatchUserDeviceByDbsUserIdAndDeviceIdMocksProvider;
	exports.Platform = Platform;

	Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-data-ang-device-management.umd.js.map
