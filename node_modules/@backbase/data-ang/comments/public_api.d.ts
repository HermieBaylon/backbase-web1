import { PostDto, PostUpdateDto, ThreadDto, ThreadAddDtoAssociations, PostAddDto, ThreadAddDto, ThreadIdDto, CommentsService, CommentsServiceInterface, ApiModule, BadRequestError, Configuration, ConfigurationParameters, ConflictError, ErrorItem, ForbiddenError, InternalServerError, NotFoundError } from '@backbase/comments-http-ang';
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare const DEPRECATED_BASE_PATH: import("@angular/core").InjectionToken<string>;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedPostDto = PostDto;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedPostUpdateDto = PostUpdateDto;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare const DeprecatedThreadDto: typeof ThreadDto;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedThreadAddDtoAssociations = ThreadAddDtoAssociations;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedPostAddDto = PostAddDto;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedThreadAddDto = ThreadAddDto;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedThreadIdDto = ThreadIdDto;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare const DeprecatedCommentsService: typeof CommentsService;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedCommentsServiceInterface = CommentsServiceInterface;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare const DEPRECATED_APIS: (typeof CommentsService)[];
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare const DeprecatedApiModule: typeof ApiModule;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedBadRequestError = BadRequestError;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare const DEPRECATED_COLLECTION_FORMATS: {
    csv: string;
    tsv: string;
    ssv: string;
    pipes: string;
};
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare const DeprecatedConfiguration: typeof Configuration;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedConfigurationParameters = ConfigurationParameters;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedConflictError = ConflictError;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedErrorItem = ErrorItem;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedForbiddenError = ForbiddenError;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedInternalServerError = InternalServerError;
/**
 * @deprecated The entry point `@backbase/data-ang/comments` will be removed in the future.
 *             Use `@backbase/data-ang/comments-v1` or `@backbase/data-ang/comments-v2` instead.
 */
declare type DeprecatedNotFoundError = NotFoundError;
export { DEPRECATED_BASE_PATH as BASE_PATH, DeprecatedPostDto as PostDto, DeprecatedPostUpdateDto as PostUpdateDto, DeprecatedThreadDto as ThreadDto, DeprecatedThreadAddDtoAssociations as ThreadAddDtoAssociations, DeprecatedPostAddDto as PostAddDto, DeprecatedThreadAddDto as ThreadAddDto, DeprecatedThreadIdDto as ThreadIdDto, DeprecatedCommentsService as CommentsService, DeprecatedCommentsServiceInterface as CommentsServiceInterface, DEPRECATED_APIS as APIS, DeprecatedApiModule as ApiModule, DeprecatedBadRequestError as BadRequestError, DEPRECATED_COLLECTION_FORMATS as COLLECTION_FORMATS, DeprecatedConfiguration as Configuration, DeprecatedConfigurationParameters as ConfigurationParameters, DeprecatedConflictError as ConflictError, DeprecatedErrorItem as ErrorItem, DeprecatedForbiddenError as ForbiddenError, DeprecatedInternalServerError as InternalServerError, DeprecatedNotFoundError as NotFoundError, };
