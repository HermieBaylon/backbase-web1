{"version":3,"file":"backbase-portfolio-summary-instrument-view-http-ang.js","sources":["../../model/directionDefaultDesc.ts","../../model/fileTypeEnum.ts","../../model/sortingDirectionDescending.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/instrumentView.service.ts","../../api/instrumentView.service.mocks.ts","../../api/portfolioPositions.service.ts","../../api/portfolioPositions.service.mocks.ts"],"sourcesContent":["/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Direction type with a default value of DESC\n */\nexport type DirectionDefaultDesc = 'ASC' | 'DESC';\n\nexport const DirectionDefaultDesc = {\n    ASC: 'ASC' as DirectionDefaultDesc,\n    DESC: 'DESC' as DirectionDefaultDesc\n};\n\n","/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Available file type\n */\nexport type FileTypeEnum = 'CSV' | 'XLSX';\n\nexport const FileTypeEnum = {\n    CSV: 'CSV' as FileTypeEnum,\n    XLSX: 'XLSX' as FileTypeEnum\n};\n\n","/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Direction type with a default value of DESC\n */\nexport type SortingDirectionDescending = 'ASC' | 'DESC';\n\nexport const SortingDirectionDescending = {\n    ASC: 'ASC' as SortingDirectionDescending,\n    DESC: 'DESC' as SortingDirectionDescending\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH = new InjectionToken<string>('PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface PortfolioSummaryInstrumentViewConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class PortfolioSummaryInstrumentViewConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: PortfolioSummaryInstrumentViewConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link PortfolioSummaryInstrumentViewConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link PortfolioSummaryInstrumentViewConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module PortfolioSummaryInstrumentViewConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { PortfolioSummaryInstrumentViewConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class PortfolioSummaryInstrumentViewApiModule {\n    public static forRoot(configurationFactory: () => PortfolioSummaryInstrumentViewConfiguration): ModuleWithProviders<PortfolioSummaryInstrumentViewApiModule> {\n        return {\n            ngModule: PortfolioSummaryInstrumentViewApiModule,\n            providers: [ { provide: PortfolioSummaryInstrumentViewConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: PortfolioSummaryInstrumentViewApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: PortfolioSummaryInstrumentViewConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('PortfolioSummaryInstrumentViewApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { InstrumentViewChartDataGet } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PortfolioSummaryInstrumentViewGet } from '../model/models';\n\nimport { PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PortfolioSummaryInstrumentViewConfiguration }                                     from '../configuration';\n\n\nexport interface GetInstrumentChartDataByPositionIdRequestParams {\n    /** Unique identifier of the position. */\n    [\"positionID\"]: string;\n    /** A date from which price chart data is requested. */\n    [\"fromDate\"]: string;\n    /** A date until which price chart data is requested. */\n    [\"toDate\"]: string;\n}\n\nexport interface GetInstrumentViewByPositionIdRequestParams {\n    /** Unique identifier of the position. */\n    [\"positionID\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentViewHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PortfolioSummaryInstrumentViewConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH) basePath: string, @Optional() configuration: PortfolioSummaryInstrumentViewConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Instrument Price Performance Chart data.\n     * Instrument Price Performance Chart data.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<InstrumentViewChartDataGet>;\n    /**\n     * Instrument Price Performance Chart data.\n     * Instrument Price Performance Chart data.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<InstrumentViewChartDataGet>>;\n    /**\n     * Instrument Price Performance Chart data.\n     * Instrument Price Performance Chart data.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<InstrumentViewChartDataGet>>;\n    /**\n     * Instrument Price Performance Chart data.\n     * Instrument Price Performance Chart data.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _positionID = requestParameters[\"positionID\"];\n        if (_positionID === null || _positionID === undefined) {\n            throw new Error('Required parameter positionID was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        const _fromDate = requestParameters[\"fromDate\"];\n        if (_fromDate === null || _fromDate === undefined) {\n            throw new Error('Required parameter fromDate was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        const _toDate = requestParameters[\"toDate\"];\n        if (_toDate === null || _toDate === undefined) {\n            throw new Error('Required parameter toDate was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_fromDate !== undefined && _fromDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toDate, 'toDate');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<InstrumentViewChartDataGet>(`${this.configuration.basePath}/client-api/v1/positions/${encodeURIComponent(String(_positionID))}/instruments/charts`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getInstrumentChartDataByPositionIdUrl(requestParameters: GetInstrumentChartDataByPositionIdRequestParams): string {\n        const _positionID = requestParameters[\"positionID\"];\n        if (_positionID === null || _positionID === undefined) {\n            throw new Error('Required parameter positionID was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        const _fromDate = requestParameters[\"fromDate\"];\n        if (_fromDate === null || _fromDate === undefined) {\n            throw new Error('Required parameter fromDate was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        const _toDate = requestParameters[\"toDate\"];\n        if (_toDate === null || _toDate === undefined) {\n            throw new Error('Required parameter toDate was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_fromDate !== undefined && _fromDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toDate, 'toDate');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/positions/${encodeURIComponent(String(_positionID))}/instruments/charts${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve investment instrument details by position id.\n     * Retrieve investment instrument details by position id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PortfolioSummaryInstrumentViewGet>;\n    /**\n     * Retrieve investment instrument details by position id.\n     * Retrieve investment instrument details by position id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PortfolioSummaryInstrumentViewGet>>;\n    /**\n     * Retrieve investment instrument details by position id.\n     * Retrieve investment instrument details by position id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PortfolioSummaryInstrumentViewGet>>;\n    /**\n     * Retrieve investment instrument details by position id.\n     * Retrieve investment instrument details by position id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _positionID = requestParameters[\"positionID\"];\n        if (_positionID === null || _positionID === undefined) {\n            throw new Error('Required parameter positionID was null or undefined when calling getInstrumentViewByPositionId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PortfolioSummaryInstrumentViewGet>(`${this.configuration.basePath}/client-api/v1/positions/${encodeURIComponent(String(_positionID))}/instruments/views`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getInstrumentViewByPositionIdUrl(requestParameters: GetInstrumentViewByPositionIdRequestParams): string {\n        const _positionID = requestParameters[\"positionID\"];\n        if (_positionID === null || _positionID === undefined) {\n            throw new Error('Required parameter positionID was null or undefined when calling getInstrumentViewByPositionId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/positions/${encodeURIComponent(String(_positionID))}/instruments/views`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/positions/{positionID}/instruments/charts URL pattern\n*/\nexport const InstrumentViewHttpServiceGetInstrumentChartDataByPositionIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/positions/{positionID}/instruments/charts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"chartData\" : [ {\n    \"date\" : \"2020-01-01\",\n    \"price\" : 125.01,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-02-01\",\n    \"price\" : 129.04,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-03-01\",\n    \"price\" : 134.18,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-04-01\",\n    \"price\" : 131.4,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-05-01\",\n    \"price\" : 120.88,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-06-01\",\n    \"price\" : 112.82,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-07-01\",\n    \"price\" : 115.54,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-08-01\",\n    \"price\" : 110.34,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-09-01\",\n    \"price\" : 106.84,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-10-01\",\n    \"price\" : 108.22,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-11-01\",\n    \"price\" : 116.5,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-12-01\",\n    \"price\" : 114.97,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-01-01\",\n    \"price\" : 124.4,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-02-01\",\n    \"price\" : 120.71,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-03-01\",\n    \"price\" : 116.6,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-04-01\",\n    \"price\" : 111.2,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-05-01\",\n    \"price\" : 115.32,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-06-01\",\n    \"price\" : 108.77,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-07-01\",\n    \"price\" : 114.95,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-08-01\",\n    \"price\" : 119.03,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-09-01\",\n    \"price\" : 118.69,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-10-01\",\n    \"price\" : 116.32,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-11-01\",\n    \"price\" : 115.97,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-12-01\",\n    \"price\" : 119.49,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-01-01\",\n    \"price\" : 118.64,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-02-01\",\n    \"price\" : 113.85,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-03-01\",\n    \"price\" : 115.17,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-04-01\",\n    \"price\" : 116.03,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-05-01\",\n    \"price\" : 116.59,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-06-01\",\n    \"price\" : 119.05,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-07-01\",\n    \"price\" : 122.72,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-08-01\",\n    \"price\" : 123.08,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-09-01\",\n    \"price\" : 122.94,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-10-01\",\n    \"price\" : 122.25,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-11-01\",\n    \"price\" : 123.75,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-12-01\",\n    \"price\" : 124.3,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/positions/{positionID}/instruments/views URL pattern\n*/\nexport const InstrumentViewHttpServiceGetInstrumentViewByPositionIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/positions/{positionID}/instruments/views\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"f6739265-aed1-47b6-8423-63518ce9caa5\",\n  \"name\" : \"Apple\",\n  \"code\" : \"US0378331005\",\n  \"absolutePerformance\" : 1.46,\n  \"relativePerformance\" : 1.2,\n  \"price\" : 123.24,\n  \"currency\" : \"USD\",\n  \"pricePerformance\" : 7.81,\n  \"pricePerformanceAbs\" : {\n    \"amount\" : 1.48,\n    \"currency\" : \"USD\"\n  },\n  \"assetClassName\" : \"Equity\",\n  \"subAssetClassName\" : \"Tech Sector\",\n  \"ticker\" : \"AAPL\",\n  \"exchange\" : \"NASDAQ\",\n  \"countryCode\" : \"USA\",\n  \"about\" : {\n    \"about\" : \"about\",\n    \"address\" : \"address\",\n    \"phoneNumber\" : \"phoneNumber\",\n    \"link\" : \"link\"\n  },\n  \"keyStatistics\" : {\n    \"country\" : \"United States of America\",\n    \"purchasePrice\" : 118.34,\n    \"exchangeRate\" : 1.21,\n    \"unrealizedPLPct\" : 4.14,\n    \"unrealizedPL\" : 4.9,\n    \"changeInNetAssetValue\" : 7.81,\n    \"fundStatus\" : \"open-ended fund\",\n    \"totalAssets\" : 134.3,\n    \"trailingTwelveMonthsYield\" : 1.4,\n    \"oneYearReturn\" : 68.97,\n    \"effectiveDuration\" : 4.51,\n    \"portfolioAssetsAllocation\" : \"Equity\",\n    \"quantity\" : 187,\n    \"turnover\" : 30,\n    \"creditRating\" : \"AAA\",\n    \"priceToEarningsRatio\" : 37.59,\n    \"estPriceToEarningsRatio\" : 31.06,\n    \"priceToEarningsToGrowthRatio\" : 3.09,\n    \"sharesOutstanding\" : 17.002,\n    \"priceToBookRatio\" : 32.07,\n    \"earningsPerShare\" : 1.39,\n    \"dividendYield\" : 0.66,\n    \"lastDividendReported\" : 0.2,\n    \"nextEarningsAnnouncement\" : \"2021-01-26\",\n    \"coupon\" : 5.63,\n    \"accruedInterestOnBond\" : 5.52,\n    \"maturity\" : \"2028-01-04\",\n    \"yieldToMaturity\" : 0,\n    \"duration\" : 7.63,\n    \"couponFrequency\" : \"annually\",\n    \"additionalKeyStatistics\" : {\n      \"purchasePrice\" : \"118.34\",\n      \"totalAssets\" : \"50\",\n      \"coupon\" : \"false\"\n    }\n  },\n  \"additions\" : {\n    \"someKey\" : \"someValue\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const InstrumentViewHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/positions/{positionID}/instruments/charts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"chartData\" : [ {\n    \"date\" : \"2020-01-01\",\n    \"price\" : 125.01,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-02-01\",\n    \"price\" : 129.04,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-03-01\",\n    \"price\" : 134.18,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-04-01\",\n    \"price\" : 131.4,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-05-01\",\n    \"price\" : 120.88,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-06-01\",\n    \"price\" : 112.82,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-07-01\",\n    \"price\" : 115.54,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-08-01\",\n    \"price\" : 110.34,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-09-01\",\n    \"price\" : 106.84,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-10-01\",\n    \"price\" : 108.22,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-11-01\",\n    \"price\" : 116.5,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-12-01\",\n    \"price\" : 114.97,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-01-01\",\n    \"price\" : 124.4,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-02-01\",\n    \"price\" : 120.71,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-03-01\",\n    \"price\" : 116.6,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-04-01\",\n    \"price\" : 111.2,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-05-01\",\n    \"price\" : 115.32,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-06-01\",\n    \"price\" : 108.77,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-07-01\",\n    \"price\" : 114.95,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-08-01\",\n    \"price\" : 119.03,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-09-01\",\n    \"price\" : 118.69,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-10-01\",\n    \"price\" : 116.32,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-11-01\",\n    \"price\" : 115.97,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-12-01\",\n    \"price\" : 119.49,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-01-01\",\n    \"price\" : 118.64,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-02-01\",\n    \"price\" : 113.85,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-03-01\",\n    \"price\" : 115.17,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-04-01\",\n    \"price\" : 116.03,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-05-01\",\n    \"price\" : 116.59,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-06-01\",\n    \"price\" : 119.05,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-07-01\",\n    \"price\" : 122.72,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-08-01\",\n    \"price\" : 123.08,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-09-01\",\n    \"price\" : 122.94,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-10-01\",\n    \"price\" : 122.25,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-11-01\",\n    \"price\" : 123.75,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-12-01\",\n    \"price\" : 124.3,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/positions/{positionID}/instruments/views\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"f6739265-aed1-47b6-8423-63518ce9caa5\",\n  \"name\" : \"Apple\",\n  \"code\" : \"US0378331005\",\n  \"absolutePerformance\" : 1.46,\n  \"relativePerformance\" : 1.2,\n  \"price\" : 123.24,\n  \"currency\" : \"USD\",\n  \"pricePerformance\" : 7.81,\n  \"pricePerformanceAbs\" : {\n    \"amount\" : 1.48,\n    \"currency\" : \"USD\"\n  },\n  \"assetClassName\" : \"Equity\",\n  \"subAssetClassName\" : \"Tech Sector\",\n  \"ticker\" : \"AAPL\",\n  \"exchange\" : \"NASDAQ\",\n  \"countryCode\" : \"USA\",\n  \"about\" : {\n    \"about\" : \"about\",\n    \"address\" : \"address\",\n    \"phoneNumber\" : \"phoneNumber\",\n    \"link\" : \"link\"\n  },\n  \"keyStatistics\" : {\n    \"country\" : \"United States of America\",\n    \"purchasePrice\" : 118.34,\n    \"exchangeRate\" : 1.21,\n    \"unrealizedPLPct\" : 4.14,\n    \"unrealizedPL\" : 4.9,\n    \"changeInNetAssetValue\" : 7.81,\n    \"fundStatus\" : \"open-ended fund\",\n    \"totalAssets\" : 134.3,\n    \"trailingTwelveMonthsYield\" : 1.4,\n    \"oneYearReturn\" : 68.97,\n    \"effectiveDuration\" : 4.51,\n    \"portfolioAssetsAllocation\" : \"Equity\",\n    \"quantity\" : 187,\n    \"turnover\" : 30,\n    \"creditRating\" : \"AAA\",\n    \"priceToEarningsRatio\" : 37.59,\n    \"estPriceToEarningsRatio\" : 31.06,\n    \"priceToEarningsToGrowthRatio\" : 3.09,\n    \"sharesOutstanding\" : 17.002,\n    \"priceToBookRatio\" : 32.07,\n    \"earningsPerShare\" : 1.39,\n    \"dividendYield\" : 0.66,\n    \"lastDividendReported\" : 0.2,\n    \"nextEarningsAnnouncement\" : \"2021-01-26\",\n    \"coupon\" : 5.63,\n    \"accruedInterestOnBond\" : 5.52,\n    \"maturity\" : \"2028-01-04\",\n    \"yieldToMaturity\" : 0,\n    \"duration\" : 7.63,\n    \"couponFrequency\" : \"annually\",\n    \"additionalKeyStatistics\" : {\n      \"purchasePrice\" : \"118.34\",\n      \"totalAssets\" : \"50\",\n      \"coupon\" : \"false\"\n    }\n  },\n  \"additions\" : {\n    \"someKey\" : \"someValue\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { FileTypeEnum } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PortfolioPositionsList } from '../model/models';\nimport { PortfolioPositionsStream } from '../model/models';\nimport { SortingDirectionDescending } from '../model/models';\n\nimport { PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PortfolioSummaryInstrumentViewConfiguration }                                     from '../configuration';\n\n\nexport interface ExportPortfolioPositionsRequestParams {\n    /** Unique identifier of the portfolio. */\n    [\"portfolioId\"]: string;\n    [\"fileType\"]: FileTypeEnum;\n}\n\nexport interface ListPortfolioPositionsRequestParams {\n    /** Unique identifier of the portfolio. */\n    [\"portfolioId\"]: string;\n    /** From. */\n    [\"from\"]?: number;\n    /** Size. */\n    [\"size\"]?: number;\n    /** Order by field */\n    [\"orderBy\"]?: string;\n    /** Direction */\n    [\"direction\"]?: SortingDirectionDescending;\n    /** Currency in with monetary amount will be display */\n    [\"currencyCode\"]?: string;\n}\n\nexport interface StreamPortfolioPositionsRequestParams {\n    /** Unique identifier of the portfolio. */\n    [\"portfolioId\"]: string;\n    /** Record UUID. */\n    [\"cursor\"]?: string;\n    /** Size. */\n    [\"size\"]?: number;\n    /** search */\n    [\"search\"]?: string;\n    /** Currency in with monetary amount will be display */\n    [\"currencyCode\"]?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortfolioPositionsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PortfolioSummaryInstrumentViewConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH) basePath: string, @Optional() configuration: PortfolioSummaryInstrumentViewConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<Blob>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<Blob>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Blob>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'text/csv' | 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' | 'application/json'}): Observable<any> {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling exportPortfolioPositions.');\n        }\n        const _fileType = requestParameters[\"fileType\"];\n        if (_fileType === null || _fileType === undefined) {\n            throw new Error('Required parameter fileType was null or undefined when calling exportPortfolioPositions.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_fileType !== undefined && _fileType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fileType, 'fileType');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'text/csv',\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions/export`,\n            {\n                params: queryParameters,\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public exportPortfolioPositionsUrl(requestParameters: ExportPortfolioPositionsRequestParams): string {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling exportPortfolioPositions.');\n        }\n        const _fileType = requestParameters[\"fileType\"];\n        if (_fileType === null || _fileType === undefined) {\n            throw new Error('Required parameter fileType was null or undefined when calling exportPortfolioPositions.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_fileType !== undefined && _fileType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fileType, 'fileType');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions/export${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * List portfolio positions\n     * Retrieve paged and sortable list of positions in portfolio.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listPortfolioPositions(requestParameters: ListPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PortfolioPositionsList>;\n    /**\n     * List portfolio positions\n     * Retrieve paged and sortable list of positions in portfolio.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listPortfolioPositions(requestParameters: ListPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PortfolioPositionsList>>;\n    /**\n     * List portfolio positions\n     * Retrieve paged and sortable list of positions in portfolio.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listPortfolioPositions(requestParameters: ListPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PortfolioPositionsList>>;\n    /**\n     * List portfolio positions\n     * Retrieve paged and sortable list of positions in portfolio.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listPortfolioPositions(requestParameters: ListPortfolioPositionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling listPortfolioPositions.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        const _currencyCode = requestParameters[\"currencyCode\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        if (_currencyCode !== undefined && _currencyCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_currencyCode, 'currencyCode');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PortfolioPositionsList>(`${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public listPortfolioPositionsUrl(requestParameters: ListPortfolioPositionsRequestParams): string {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling listPortfolioPositions.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        const _currencyCode = requestParameters[\"currencyCode\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        if (_currencyCode !== undefined && _currencyCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_currencyCode, 'currencyCode');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Stream portfolio positions\n     * Retrieve portfolio positions list.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public streamPortfolioPositions(requestParameters: StreamPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PortfolioPositionsStream>;\n    /**\n     * Stream portfolio positions\n     * Retrieve portfolio positions list.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public streamPortfolioPositions(requestParameters: StreamPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PortfolioPositionsStream>>;\n    /**\n     * Stream portfolio positions\n     * Retrieve portfolio positions list.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public streamPortfolioPositions(requestParameters: StreamPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PortfolioPositionsStream>>;\n    /**\n     * Stream portfolio positions\n     * Retrieve portfolio positions list.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public streamPortfolioPositions(requestParameters: StreamPortfolioPositionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling streamPortfolioPositions.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _search = requestParameters[\"search\"];\n        const _currencyCode = requestParameters[\"currencyCode\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_search !== undefined && _search !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_search, 'search');\n        }\n        if (_currencyCode !== undefined && _currencyCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_currencyCode, 'currencyCode');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PortfolioPositionsStream>(`${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions/stream`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public streamPortfolioPositionsUrl(requestParameters: StreamPortfolioPositionsRequestParams): string {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling streamPortfolioPositions.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _search = requestParameters[\"search\"];\n        const _currencyCode = requestParameters[\"currencyCode\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_search !== undefined && _search !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_search, 'search');\n        }\n        if (_currencyCode !== undefined && _currencyCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_currencyCode, 'currencyCode');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions/stream${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/portfolios/{portfolioId}/positions/export URL pattern\n*/\nexport const PortfolioPositionsHttpServiceExportPortfolioPositionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions/export\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/portfolios/{portfolioId}/positions URL pattern\n*/\nexport const PortfolioPositionsHttpServiceListPortfolioPositionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"positions\" : [ {\n    \"id\" : \"51c9d6e7-c3fa-40e2-a500-4b4e2f11cbd3\",\n    \"instrument\" : {\n      \"id\" : \"6163a37e-6148-46ac-bd46-f62f563dfa7e\",\n      \"name\" : \"Apples and Pears\",\n      \"code\" : \"UAPL\",\n      \"ticker\" : \"UAPL\",\n      \"exchange\" : \"NASDAQ\",\n      \"currency\" : \"UAH\",\n      \"available\" : true,\n      \"assetClass\" : {\n        \"id\" : \"6153577f-ad4c-47a4-bab2-b2e7c7b172cd\",\n        \"name\" : \"Equities\"\n      }\n    },\n    \"quantity\" : 120,\n    \"price\" : {\n      \"currency\" : \"UAH\",\n      \"amount\" : 1030\n    },\n    \"exchangeRate\" : 0.99,\n    \"valuation\" : {\n      \"currency\" : \"USD\",\n      \"amount\" : 1028\n    },\n    \"accruedInterest\" : {\n      \"amount\" : 12,\n      \"currency\" : \"USD\"\n    },\n    \"costPrice\" : {\n      \"amount\" : 1001,\n      \"currency\" : \"UAH\"\n    },\n    \"costExchangeRate\" : 1.01,\n    \"unrealizedPL\" : {\n      \"amount\" : 0.2,\n      \"currency\" : \"USD\"\n    },\n    \"unrealizedPLPct\" : 0.02,\n    \"assetClassPct\" : 0.4,\n    \"portfolioPct\" : 0.33,\n    \"country\" : {\n      \"id\" : \"87a87cfc-81a2-4193-aafb-fa08e699ba70\",\n      \"name\" : \"Ukraine\",\n      \"code\" : \"UA\"\n    },\n    \"additions\" : {\n      \"someKey\" : \"someValue\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/portfolios/{portfolioId}/positions/stream URL pattern\n*/\nexport const PortfolioPositionsHttpServiceStreamPortfolioPositionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions/stream\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"cursor\" : \"554e02e5-67fb-4434-9c97-91fde8ec3ce4\",\n  \"hasMoreItems\" : false,\n  \"positions\" : [ {\n    \"id\" : \"554e02e5-67fb-4434-9c97-91fde8ec3ce4\",\n    \"region\" : {\n      \"id\" : \"96821684-70c0-46a9-8e05-2c1f0526cdd9\",\n      \"name\" : \"Europe\"\n    },\n    \"country\" : {\n      \"id\" : \"51a95a45-63e0-4e43-9619-8ffb679f5d9b\",\n      \"name\" : \"Ukraine\",\n      \"code\" : \"UA\"\n    },\n    \"instrument\" : {\n      \"id\" : \"3e35104b-03e9-42be-b58f-8ee5d23d6ca8\",\n      \"name\" : \"Apples and Plums\",\n      \"ticker\" : \"UAPL\",\n      \"exchange\" : \"NASDAQ\",\n      \"assetClass\" : {\n        \"id\" : \"6153577f-ad4c-47a4-bab2-b2e7c7b172cd\",\n        \"name\" : \"Equities\"\n      }\n    },\n    \"assetClassPct\" : 0.24,\n    \"valuation\" : {\n      \"amount\" : 43630,\n      \"currency\" : \"USD\"\n    },\n    \"additions\" : {\n      \"someKey\" : \"someValue\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const PortfolioPositionsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions/export\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"positions\" : [ {\n    \"id\" : \"51c9d6e7-c3fa-40e2-a500-4b4e2f11cbd3\",\n    \"instrument\" : {\n      \"id\" : \"6163a37e-6148-46ac-bd46-f62f563dfa7e\",\n      \"name\" : \"Apples and Pears\",\n      \"code\" : \"UAPL\",\n      \"ticker\" : \"UAPL\",\n      \"exchange\" : \"NASDAQ\",\n      \"currency\" : \"UAH\",\n      \"available\" : true,\n      \"assetClass\" : {\n        \"id\" : \"6153577f-ad4c-47a4-bab2-b2e7c7b172cd\",\n        \"name\" : \"Equities\"\n      }\n    },\n    \"quantity\" : 120,\n    \"price\" : {\n      \"currency\" : \"UAH\",\n      \"amount\" : 1030\n    },\n    \"exchangeRate\" : 0.99,\n    \"valuation\" : {\n      \"currency\" : \"USD\",\n      \"amount\" : 1028\n    },\n    \"accruedInterest\" : {\n      \"amount\" : 12,\n      \"currency\" : \"USD\"\n    },\n    \"costPrice\" : {\n      \"amount\" : 1001,\n      \"currency\" : \"UAH\"\n    },\n    \"costExchangeRate\" : 1.01,\n    \"unrealizedPL\" : {\n      \"amount\" : 0.2,\n      \"currency\" : \"USD\"\n    },\n    \"unrealizedPLPct\" : 0.02,\n    \"assetClassPct\" : 0.4,\n    \"portfolioPct\" : 0.33,\n    \"country\" : {\n      \"id\" : \"87a87cfc-81a2-4193-aafb-fa08e699ba70\",\n      \"name\" : \"Ukraine\",\n      \"code\" : \"UA\"\n    },\n    \"additions\" : {\n      \"someKey\" : \"someValue\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions/stream\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"cursor\" : \"554e02e5-67fb-4434-9c97-91fde8ec3ce4\",\n  \"hasMoreItems\" : false,\n  \"positions\" : [ {\n    \"id\" : \"554e02e5-67fb-4434-9c97-91fde8ec3ce4\",\n    \"region\" : {\n      \"id\" : \"96821684-70c0-46a9-8e05-2c1f0526cdd9\",\n      \"name\" : \"Europe\"\n    },\n    \"country\" : {\n      \"id\" : \"51a95a45-63e0-4e43-9619-8ffb679f5d9b\",\n      \"name\" : \"Ukraine\",\n      \"code\" : \"UA\"\n    },\n    \"instrument\" : {\n      \"id\" : \"3e35104b-03e9-42be-b58f-8ee5d23d6ca8\",\n      \"name\" : \"Apples and Plums\",\n      \"ticker\" : \"UAPL\",\n      \"exchange\" : \"NASDAQ\",\n      \"assetClass\" : {\n        \"id\" : \"6153577f-ad4c-47a4-bab2-b2e7c7b172cd\",\n        \"name\" : \"Equities\"\n      }\n    },\n    \"assetClassPct\" : 0.24,\n    \"valuation\" : {\n      \"amount\" : 43630,\n      \"currency\" : \"USD\"\n    },\n    \"additions\" : {\n      \"someKey\" : \"someValue\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":[],"mappings":"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"}