import { NgModule, SkipSelf, Optional } from '@angular/core';
import { PortfolioSummaryInstrumentViewConfiguration, CONFIG_TOKEN } from './configuration';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as i2 from "@backbase/foundation-ang/data-http";
import * as i3 from "./configuration";
export class PortfolioSummaryInstrumentViewApiModule {
    constructor(parentModule, http, dataModulesManager, config) {
        if (parentModule) {
            throw new Error('PortfolioSummaryInstrumentViewApiModule is already loaded. Import in your base AppModule only.');
        }
        if (!http) {
            throw new Error('You need to import the HttpClientModule in your AppModule! \n' +
                'See also https://github.com/angular/angular/issues/20575');
        }
        if (dataModulesManager) {
            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {
                apiRoot: '',
                servicePath: config.basePath || '',
                headers: {},
            });
        }
    }
    static forRoot(configurationFactory) {
        return {
            ngModule: PortfolioSummaryInstrumentViewApiModule,
            providers: [{ provide: PortfolioSummaryInstrumentViewConfiguration, useFactory: configurationFactory }]
        };
    }
}
PortfolioSummaryInstrumentViewApiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PortfolioSummaryInstrumentViewApiModule, deps: [{ token: PortfolioSummaryInstrumentViewApiModule, optional: true, skipSelf: true }, { token: i1.HttpClient, optional: true }, { token: i2.DataModulesManager, optional: true }, { token: i3.PortfolioSummaryInstrumentViewConfiguration }], target: i0.ɵɵFactoryTarget.NgModule });
PortfolioSummaryInstrumentViewApiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PortfolioSummaryInstrumentViewApiModule });
PortfolioSummaryInstrumentViewApiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PortfolioSummaryInstrumentViewApiModule, providers: [], imports: [[]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: PortfolioSummaryInstrumentViewApiModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [],
                    declarations: [],
                    exports: [],
                    providers: []
                }]
        }], ctorParameters: function () { return [{ type: PortfolioSummaryInstrumentViewApiModule, decorators: [{
                    type: Optional
                }, {
                    type: SkipSelf
                }] }, { type: i1.HttpClient, decorators: [{
                    type: Optional
                }] }, { type: i2.DataModulesManager, decorators: [{
                    type: Optional
                }] }, { type: i3.PortfolioSummaryInstrumentViewConfiguration }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2FwaS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsMkNBQTJDLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7Ozs7O0FBVzVGLE1BQU0sT0FBTyx1Q0FBdUM7SUFRaEQsWUFBcUMsWUFBcUQsRUFDakUsSUFBZ0IsRUFDaEIsa0JBQTZDLEVBQ3pELE1BQW1EO1FBRzVELElBQUksWUFBWSxFQUFFO1lBQ2QsTUFBTSxJQUFJLEtBQUssQ0FBQyxnR0FBZ0csQ0FBQyxDQUFDO1NBQ3JIO1FBQ0QsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE1BQU0sSUFBSSxLQUFLLENBQUMsK0RBQStEO2dCQUMvRSwwREFBMEQsQ0FBQyxDQUFDO1NBQy9EO1FBRUQsSUFBSSxrQkFBa0IsRUFBRTtZQUNwQixrQkFBa0IsQ0FBQyxlQUFlLENBQUMsWUFBWSxFQUFFO2dCQUM3QyxPQUFPLEVBQUUsRUFBRTtnQkFDWCxXQUFXLEVBQUUsTUFBTSxDQUFDLFFBQVEsSUFBSSxFQUFFO2dCQUNsQyxPQUFPLEVBQUUsRUFBRTthQUNkLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQTVCTSxNQUFNLENBQUMsT0FBTyxDQUFDLG9CQUF1RTtRQUN6RixPQUFPO1lBQ0gsUUFBUSxFQUFFLHVDQUF1QztZQUNqRCxTQUFTLEVBQUUsQ0FBRSxFQUFFLE9BQU8sRUFBRSwyQ0FBMkMsRUFBRSxVQUFVLEVBQUUsb0JBQW9CLEVBQUUsQ0FBRTtTQUM1RyxDQUFDO0lBQ04sQ0FBQzs7cUlBTlEsdUNBQXVDLGtCQVFHLHVDQUF1QztzSUFSakYsdUNBQXVDO3NJQUF2Qyx1Q0FBdUMsYUFGcEMsRUFBRSxZQUhGLEVBQUU7NEZBS0wsdUNBQXVDO2tCQU5uRCxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBTyxFQUFFO29CQUNoQixZQUFZLEVBQUUsRUFBRTtvQkFDaEIsT0FBTyxFQUFPLEVBQUU7b0JBQ2hCLFNBQVMsRUFBSyxFQUFFO2lCQUNqQjswREFTc0QsdUNBQXVDOzBCQUE1RSxRQUFROzswQkFBSSxRQUFROzswQkFDcEIsUUFBUTs7MEJBQ1IsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBTa2lwU2VsZiwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvcnRmb2xpb1N1bW1hcnlJbnN0cnVtZW50Vmlld0NvbmZpZ3VyYXRpb24sIENPTkZJR19UT0tFTiB9IGZyb20gJy4vY29uZmlndXJhdGlvbic7XG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuXG5pbXBvcnQgeyBEYXRhTW9kdWxlc01hbmFnZXIgfSBmcm9tIFwiQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2RhdGEtaHR0cFwiO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiAgICAgIFtdLFxuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBleHBvcnRzOiAgICAgIFtdLFxuICBwcm92aWRlcnM6ICAgIFtdXG59KVxuZXhwb3J0IGNsYXNzIFBvcnRmb2xpb1N1bW1hcnlJbnN0cnVtZW50Vmlld0FwaU1vZHVsZSB7XG4gICAgcHVibGljIHN0YXRpYyBmb3JSb290KGNvbmZpZ3VyYXRpb25GYWN0b3J5OiAoKSA9PiBQb3J0Zm9saW9TdW1tYXJ5SW5zdHJ1bWVudFZpZXdDb25maWd1cmF0aW9uKTogTW9kdWxlV2l0aFByb3ZpZGVyczxQb3J0Zm9saW9TdW1tYXJ5SW5zdHJ1bWVudFZpZXdBcGlNb2R1bGU+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBQb3J0Zm9saW9TdW1tYXJ5SW5zdHJ1bWVudFZpZXdBcGlNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFsgeyBwcm92aWRlOiBQb3J0Zm9saW9TdW1tYXJ5SW5zdHJ1bWVudFZpZXdDb25maWd1cmF0aW9uLCB1c2VGYWN0b3J5OiBjb25maWd1cmF0aW9uRmFjdG9yeSB9IF1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvciggQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlOiBQb3J0Zm9saW9TdW1tYXJ5SW5zdHJ1bWVudFZpZXdBcGlNb2R1bGUsXG4gICAgICAgICAgICAgICAgIEBPcHRpb25hbCgpIGh0dHA6IEh0dHBDbGllbnQsXG4gICAgICAgICAgICAgICAgIEBPcHRpb25hbCgpIGRhdGFNb2R1bGVzTWFuYWdlcjogRGF0YU1vZHVsZXNNYW5hZ2VyIHwgbnVsbCxcbiAgICAgICAgICAgICAgICAgY29uZmlnOiBQb3J0Zm9saW9TdW1tYXJ5SW5zdHJ1bWVudFZpZXdDb25maWd1cmF0aW9uLFxuXG4gICAgICAgICkge1xuICAgICAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BvcnRmb2xpb1N1bW1hcnlJbnN0cnVtZW50Vmlld0FwaU1vZHVsZSBpcyBhbHJlYWR5IGxvYWRlZC4gSW1wb3J0IGluIHlvdXIgYmFzZSBBcHBNb2R1bGUgb25seS4nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWh0dHApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG5lZWQgdG8gaW1wb3J0IHRoZSBIdHRwQ2xpZW50TW9kdWxlIGluIHlvdXIgQXBwTW9kdWxlISBcXG4nICtcbiAgICAgICAgICAgICdTZWUgYWxzbyBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2lzc3Vlcy8yMDU3NScpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRhdGFNb2R1bGVzTWFuYWdlcikge1xuICAgICAgICAgICAgZGF0YU1vZHVsZXNNYW5hZ2VyLnNldE1vZHVsZUNvbmZpZyhDT05GSUdfVE9LRU4sIHtcbiAgICAgICAgICAgICAgICBhcGlSb290OiAnJyxcbiAgICAgICAgICAgICAgICBzZXJ2aWNlUGF0aDogY29uZmlnLmJhc2VQYXRoIHx8ICcnLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHt9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=