import { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';
import { Observable } from 'rxjs';
import { InstrumentViewChartDataGet } from '../model/models';
import { PortfolioSummaryInstrumentViewGet } from '../model/models';
import { PortfolioSummaryInstrumentViewConfiguration } from '../configuration';
import * as i0 from "@angular/core";
export interface GetInstrumentChartDataByPositionIdRequestParams {
    ["positionID"]: string;
    ["fromDate"]: string;
    ["toDate"]: string;
}
export interface GetInstrumentViewByPositionIdRequestParams {
    ["positionID"]: string;
}
export declare class InstrumentViewHttpService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: PortfolioSummaryInstrumentViewConfiguration;
    encoder: HttpParameterCodec;
    constructor(httpClient: HttpClient, basePath: string, configuration: PortfolioSummaryInstrumentViewConfiguration);
    private addToHttpParams;
    private addToHttpParamsRecursive;
    getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<InstrumentViewChartDataGet>;
    getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<InstrumentViewChartDataGet>>;
    getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<InstrumentViewChartDataGet>>;
    getInstrumentChartDataByPositionIdUrl(requestParameters: GetInstrumentChartDataByPositionIdRequestParams): string;
    getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<PortfolioSummaryInstrumentViewGet>;
    getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpResponse<PortfolioSummaryInstrumentViewGet>>;
    getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {
        httpHeaderAccept?: 'application/json';
    }): Observable<HttpEvent<PortfolioSummaryInstrumentViewGet>>;
    getInstrumentViewByPositionIdUrl(requestParameters: GetInstrumentViewByPositionIdRequestParams): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<InstrumentViewHttpService, [null, { optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<InstrumentViewHttpService>;
}
