{"version":3,"file":"backbase-portfolio-summary-instrument-view-http-ang.umd.js","sources":["../../model/directionDefaultDesc.ts","../../model/fileTypeEnum.ts","../../model/sortingDirectionDescending.ts","../../variables.ts","../../configuration.ts","../../api.module.ts","../../encoder.ts","../../api/instrumentView.service.ts","../../api/instrumentView.service.mocks.ts","../../api/portfolioPositions.service.ts","../../api/portfolioPositions.service.mocks.ts"],"sourcesContent":["/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Direction type with a default value of DESC\n */\nexport type DirectionDefaultDesc = 'ASC' | 'DESC';\n\nexport const DirectionDefaultDesc = {\n    ASC: 'ASC' as DirectionDefaultDesc,\n    DESC: 'DESC' as DirectionDefaultDesc\n};\n\n","/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Available file type\n */\nexport type FileTypeEnum = 'CSV' | 'XLSX';\n\nexport const FileTypeEnum = {\n    CSV: 'CSV' as FileTypeEnum,\n    XLSX: 'XLSX' as FileTypeEnum\n};\n\n","/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n\n\n/**\n * Direction type with a default value of DESC\n */\nexport type SortingDirectionDescending = 'ASC' | 'DESC';\n\nexport const SortingDirectionDescending = {\n    ASC: 'ASC' as SortingDirectionDescending,\n    DESC: 'DESC' as SortingDirectionDescending\n};\n\n","import { InjectionToken } from '@angular/core';\n\nexport const PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH = new InjectionToken<string>('PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface PortfolioSummaryInstrumentViewConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class PortfolioSummaryInstrumentViewConfiguration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: PortfolioSummaryInstrumentViewConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link PortfolioSummaryInstrumentViewConfiguration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link PortfolioSummaryInstrumentViewConfiguration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n\nexport const CONFIG_TOKEN = new InjectionToken('api-data-module PortfolioSummaryInstrumentViewConfiguration');\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { PortfolioSummaryInstrumentViewConfiguration, CONFIG_TOKEN } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DataModulesManager } from \"@backbase/foundation-ang/data-http\";\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers:    []\n})\nexport class PortfolioSummaryInstrumentViewApiModule {\n    public static forRoot(configurationFactory: () => PortfolioSummaryInstrumentViewConfiguration): ModuleWithProviders<PortfolioSummaryInstrumentViewApiModule> {\n        return {\n            ngModule: PortfolioSummaryInstrumentViewApiModule,\n            providers: [ { provide: PortfolioSummaryInstrumentViewConfiguration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: PortfolioSummaryInstrumentViewApiModule,\n                 @Optional() http: HttpClient,\n                 @Optional() dataModulesManager: DataModulesManager | null,\n                 config: PortfolioSummaryInstrumentViewConfiguration,\n\n        ) {\n        if (parentModule) {\n            throw new Error('PortfolioSummaryInstrumentViewApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n\n        if (dataModulesManager) {\n            dataModulesManager.setModuleConfig(CONFIG_TOKEN, {\n                apiRoot: '',\n                servicePath: config.basePath || '',\n                headers: {},\n            });\n        }\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { InstrumentViewChartDataGet } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PortfolioSummaryInstrumentViewGet } from '../model/models';\n\nimport { PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PortfolioSummaryInstrumentViewConfiguration }                                     from '../configuration';\n\n\nexport interface GetInstrumentChartDataByPositionIdRequestParams {\n    /** Unique identifier of the position. */\n    [\"positionID\"]: string;\n    /** A date from which price chart data is requested. */\n    [\"fromDate\"]: string;\n    /** A date until which price chart data is requested. */\n    [\"toDate\"]: string;\n}\n\nexport interface GetInstrumentViewByPositionIdRequestParams {\n    /** Unique identifier of the position. */\n    [\"positionID\"]: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentViewHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PortfolioSummaryInstrumentViewConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH) basePath: string, @Optional() configuration: PortfolioSummaryInstrumentViewConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Instrument Price Performance Chart data.\n     * Instrument Price Performance Chart data.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<InstrumentViewChartDataGet>;\n    /**\n     * Instrument Price Performance Chart data.\n     * Instrument Price Performance Chart data.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<InstrumentViewChartDataGet>>;\n    /**\n     * Instrument Price Performance Chart data.\n     * Instrument Price Performance Chart data.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<InstrumentViewChartDataGet>>;\n    /**\n     * Instrument Price Performance Chart data.\n     * Instrument Price Performance Chart data.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentChartDataByPositionId(requestParameters: GetInstrumentChartDataByPositionIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _positionID = requestParameters[\"positionID\"];\n        if (_positionID === null || _positionID === undefined) {\n            throw new Error('Required parameter positionID was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        const _fromDate = requestParameters[\"fromDate\"];\n        if (_fromDate === null || _fromDate === undefined) {\n            throw new Error('Required parameter fromDate was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        const _toDate = requestParameters[\"toDate\"];\n        if (_toDate === null || _toDate === undefined) {\n            throw new Error('Required parameter toDate was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_fromDate !== undefined && _fromDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toDate, 'toDate');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<InstrumentViewChartDataGet>(`${this.configuration.basePath}/client-api/v1/positions/${encodeURIComponent(String(_positionID))}/instruments/charts`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getInstrumentChartDataByPositionIdUrl(requestParameters: GetInstrumentChartDataByPositionIdRequestParams): string {\n        const _positionID = requestParameters[\"positionID\"];\n        if (_positionID === null || _positionID === undefined) {\n            throw new Error('Required parameter positionID was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        const _fromDate = requestParameters[\"fromDate\"];\n        if (_fromDate === null || _fromDate === undefined) {\n            throw new Error('Required parameter fromDate was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        const _toDate = requestParameters[\"toDate\"];\n        if (_toDate === null || _toDate === undefined) {\n            throw new Error('Required parameter toDate was null or undefined when calling getInstrumentChartDataByPositionId.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_fromDate !== undefined && _fromDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fromDate, 'fromDate');\n        }\n        if (_toDate !== undefined && _toDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_toDate, 'toDate');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/positions/${encodeURIComponent(String(_positionID))}/instruments/charts${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Retrieve investment instrument details by position id.\n     * Retrieve investment instrument details by position id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PortfolioSummaryInstrumentViewGet>;\n    /**\n     * Retrieve investment instrument details by position id.\n     * Retrieve investment instrument details by position id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PortfolioSummaryInstrumentViewGet>>;\n    /**\n     * Retrieve investment instrument details by position id.\n     * Retrieve investment instrument details by position id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PortfolioSummaryInstrumentViewGet>>;\n    /**\n     * Retrieve investment instrument details by position id.\n     * Retrieve investment instrument details by position id.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstrumentViewByPositionId(requestParameters: GetInstrumentViewByPositionIdRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _positionID = requestParameters[\"positionID\"];\n        if (_positionID === null || _positionID === undefined) {\n            throw new Error('Required parameter positionID was null or undefined when calling getInstrumentViewByPositionId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PortfolioSummaryInstrumentViewGet>(`${this.configuration.basePath}/client-api/v1/positions/${encodeURIComponent(String(_positionID))}/instruments/views`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public getInstrumentViewByPositionIdUrl(requestParameters: GetInstrumentViewByPositionIdRequestParams): string {\n        const _positionID = requestParameters[\"positionID\"];\n        if (_positionID === null || _positionID === undefined) {\n            throw new Error('Required parameter positionID was null or undefined when calling getInstrumentViewByPositionId.');\n        }\n        return `${this.configuration.basePath}/client-api/v1/positions/${encodeURIComponent(String(_positionID))}/instruments/views`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/positions/{positionID}/instruments/charts URL pattern\n*/\nexport const InstrumentViewHttpServiceGetInstrumentChartDataByPositionIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/positions/{positionID}/instruments/charts\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"chartData\" : [ {\n    \"date\" : \"2020-01-01\",\n    \"price\" : 125.01,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-02-01\",\n    \"price\" : 129.04,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-03-01\",\n    \"price\" : 134.18,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-04-01\",\n    \"price\" : 131.4,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-05-01\",\n    \"price\" : 120.88,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-06-01\",\n    \"price\" : 112.82,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-07-01\",\n    \"price\" : 115.54,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-08-01\",\n    \"price\" : 110.34,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-09-01\",\n    \"price\" : 106.84,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-10-01\",\n    \"price\" : 108.22,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-11-01\",\n    \"price\" : 116.5,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-12-01\",\n    \"price\" : 114.97,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-01-01\",\n    \"price\" : 124.4,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-02-01\",\n    \"price\" : 120.71,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-03-01\",\n    \"price\" : 116.6,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-04-01\",\n    \"price\" : 111.2,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-05-01\",\n    \"price\" : 115.32,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-06-01\",\n    \"price\" : 108.77,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-07-01\",\n    \"price\" : 114.95,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-08-01\",\n    \"price\" : 119.03,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-09-01\",\n    \"price\" : 118.69,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-10-01\",\n    \"price\" : 116.32,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-11-01\",\n    \"price\" : 115.97,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-12-01\",\n    \"price\" : 119.49,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-01-01\",\n    \"price\" : 118.64,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-02-01\",\n    \"price\" : 113.85,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-03-01\",\n    \"price\" : 115.17,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-04-01\",\n    \"price\" : 116.03,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-05-01\",\n    \"price\" : 116.59,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-06-01\",\n    \"price\" : 119.05,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-07-01\",\n    \"price\" : 122.72,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-08-01\",\n    \"price\" : 123.08,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-09-01\",\n    \"price\" : 122.94,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-10-01\",\n    \"price\" : 122.25,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-11-01\",\n    \"price\" : 123.75,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-12-01\",\n    \"price\" : 124.3,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/positions/{positionID}/instruments/views URL pattern\n*/\nexport const InstrumentViewHttpServiceGetInstrumentViewByPositionIdMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/positions/{positionID}/instruments/views\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"id\" : \"f6739265-aed1-47b6-8423-63518ce9caa5\",\n  \"name\" : \"Apple\",\n  \"code\" : \"US0378331005\",\n  \"absolutePerformance\" : 1.46,\n  \"relativePerformance\" : 1.2,\n  \"price\" : 123.24,\n  \"currency\" : \"USD\",\n  \"pricePerformance\" : 7.81,\n  \"pricePerformanceAbs\" : {\n    \"amount\" : 1.48,\n    \"currency\" : \"USD\"\n  },\n  \"assetClassName\" : \"Equity\",\n  \"subAssetClassName\" : \"Tech Sector\",\n  \"ticker\" : \"AAPL\",\n  \"exchange\" : \"NASDAQ\",\n  \"countryCode\" : \"USA\",\n  \"about\" : {\n    \"about\" : \"about\",\n    \"address\" : \"address\",\n    \"phoneNumber\" : \"phoneNumber\",\n    \"link\" : \"link\"\n  },\n  \"keyStatistics\" : {\n    \"country\" : \"United States of America\",\n    \"purchasePrice\" : 118.34,\n    \"exchangeRate\" : 1.21,\n    \"unrealizedPLPct\" : 4.14,\n    \"unrealizedPL\" : 4.9,\n    \"changeInNetAssetValue\" : 7.81,\n    \"fundStatus\" : \"open-ended fund\",\n    \"totalAssets\" : 134.3,\n    \"trailingTwelveMonthsYield\" : 1.4,\n    \"oneYearReturn\" : 68.97,\n    \"effectiveDuration\" : 4.51,\n    \"portfolioAssetsAllocation\" : \"Equity\",\n    \"quantity\" : 187,\n    \"turnover\" : 30,\n    \"creditRating\" : \"AAA\",\n    \"priceToEarningsRatio\" : 37.59,\n    \"estPriceToEarningsRatio\" : 31.06,\n    \"priceToEarningsToGrowthRatio\" : 3.09,\n    \"sharesOutstanding\" : 17.002,\n    \"priceToBookRatio\" : 32.07,\n    \"earningsPerShare\" : 1.39,\n    \"dividendYield\" : 0.66,\n    \"lastDividendReported\" : 0.2,\n    \"nextEarningsAnnouncement\" : \"2021-01-26\",\n    \"coupon\" : 5.63,\n    \"accruedInterestOnBond\" : 5.52,\n    \"maturity\" : \"2028-01-04\",\n    \"yieldToMaturity\" : 0,\n    \"duration\" : 7.63,\n    \"couponFrequency\" : \"annually\",\n    \"additionalKeyStatistics\" : {\n      \"purchasePrice\" : \"118.34\",\n      \"totalAssets\" : \"50\",\n      \"coupon\" : \"false\"\n    }\n  },\n  \"additions\" : {\n    \"someKey\" : \"someValue\"\n  }\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const InstrumentViewHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/positions/{positionID}/instruments/charts\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"chartData\" : [ {\n    \"date\" : \"2020-01-01\",\n    \"price\" : 125.01,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-02-01\",\n    \"price\" : 129.04,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-03-01\",\n    \"price\" : 134.18,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-04-01\",\n    \"price\" : 131.4,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-05-01\",\n    \"price\" : 120.88,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-06-01\",\n    \"price\" : 112.82,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-07-01\",\n    \"price\" : 115.54,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-08-01\",\n    \"price\" : 110.34,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-09-01\",\n    \"price\" : 106.84,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-10-01\",\n    \"price\" : 108.22,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-11-01\",\n    \"price\" : 116.5,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2020-12-01\",\n    \"price\" : 114.97,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-01-01\",\n    \"price\" : 124.4,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-02-01\",\n    \"price\" : 120.71,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-03-01\",\n    \"price\" : 116.6,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-04-01\",\n    \"price\" : 111.2,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-05-01\",\n    \"price\" : 115.32,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-06-01\",\n    \"price\" : 108.77,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-07-01\",\n    \"price\" : 114.95,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-08-01\",\n    \"price\" : 119.03,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-09-01\",\n    \"price\" : 118.69,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-10-01\",\n    \"price\" : 116.32,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-11-01\",\n    \"price\" : 115.97,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2021-12-01\",\n    \"price\" : 119.49,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-01-01\",\n    \"price\" : 118.64,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-02-01\",\n    \"price\" : 113.85,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-03-01\",\n    \"price\" : 115.17,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-04-01\",\n    \"price\" : 116.03,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-05-01\",\n    \"price\" : 116.59,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-06-01\",\n    \"price\" : 119.05,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-07-01\",\n    \"price\" : 122.72,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-08-01\",\n    \"price\" : 123.08,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-09-01\",\n    \"price\" : 122.94,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-10-01\",\n    \"price\" : 122.25,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-11-01\",\n    \"price\" : 123.75,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  }, {\n    \"date\" : \"2022-12-01\",\n    \"price\" : 124.3,\n    \"currency\" : \"USD\",\n    \"type\" : \"closing\"\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/positions/{positionID}/instruments/views\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"id\" : \"f6739265-aed1-47b6-8423-63518ce9caa5\",\n  \"name\" : \"Apple\",\n  \"code\" : \"US0378331005\",\n  \"absolutePerformance\" : 1.46,\n  \"relativePerformance\" : 1.2,\n  \"price\" : 123.24,\n  \"currency\" : \"USD\",\n  \"pricePerformance\" : 7.81,\n  \"pricePerformanceAbs\" : {\n    \"amount\" : 1.48,\n    \"currency\" : \"USD\"\n  },\n  \"assetClassName\" : \"Equity\",\n  \"subAssetClassName\" : \"Tech Sector\",\n  \"ticker\" : \"AAPL\",\n  \"exchange\" : \"NASDAQ\",\n  \"countryCode\" : \"USA\",\n  \"about\" : {\n    \"about\" : \"about\",\n    \"address\" : \"address\",\n    \"phoneNumber\" : \"phoneNumber\",\n    \"link\" : \"link\"\n  },\n  \"keyStatistics\" : {\n    \"country\" : \"United States of America\",\n    \"purchasePrice\" : 118.34,\n    \"exchangeRate\" : 1.21,\n    \"unrealizedPLPct\" : 4.14,\n    \"unrealizedPL\" : 4.9,\n    \"changeInNetAssetValue\" : 7.81,\n    \"fundStatus\" : \"open-ended fund\",\n    \"totalAssets\" : 134.3,\n    \"trailingTwelveMonthsYield\" : 1.4,\n    \"oneYearReturn\" : 68.97,\n    \"effectiveDuration\" : 4.51,\n    \"portfolioAssetsAllocation\" : \"Equity\",\n    \"quantity\" : 187,\n    \"turnover\" : 30,\n    \"creditRating\" : \"AAA\",\n    \"priceToEarningsRatio\" : 37.59,\n    \"estPriceToEarningsRatio\" : 31.06,\n    \"priceToEarningsToGrowthRatio\" : 3.09,\n    \"sharesOutstanding\" : 17.002,\n    \"priceToBookRatio\" : 32.07,\n    \"earningsPerShare\" : 1.39,\n    \"dividendYield\" : 0.66,\n    \"lastDividendReported\" : 0.2,\n    \"nextEarningsAnnouncement\" : \"2021-01-26\",\n    \"coupon\" : 5.63,\n    \"accruedInterestOnBond\" : 5.52,\n    \"maturity\" : \"2028-01-04\",\n    \"yieldToMaturity\" : 0,\n    \"duration\" : 7.63,\n    \"couponFrequency\" : \"annually\",\n    \"additionalKeyStatistics\" : {\n      \"purchasePrice\" : \"118.34\",\n      \"totalAssets\" : \"50\",\n      \"coupon\" : \"false\"\n    }\n  },\n  \"additions\" : {\n    \"someKey\" : \"someValue\"\n  }\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n","/**\n * Portfolio Instrument Client\n * Access investment instruments and portfolio positions\n *\n * The version of the OpenAPI document: 1.0.5\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://github.com/Backbase/backbase-openapi-tools).\n * https://github.com/Backbase/backbase-openapi-tools\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { BadRequestError } from '../model/models';\nimport { FileTypeEnum } from '../model/models';\nimport { InternalServerError } from '../model/models';\nimport { NotFoundError } from '../model/models';\nimport { PortfolioPositionsList } from '../model/models';\nimport { PortfolioPositionsStream } from '../model/models';\nimport { SortingDirectionDescending } from '../model/models';\n\nimport { PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { PortfolioSummaryInstrumentViewConfiguration }                                     from '../configuration';\n\n\nexport interface ExportPortfolioPositionsRequestParams {\n    /** Unique identifier of the portfolio. */\n    [\"portfolioId\"]: string;\n    [\"fileType\"]: FileTypeEnum;\n}\n\nexport interface ListPortfolioPositionsRequestParams {\n    /** Unique identifier of the portfolio. */\n    [\"portfolioId\"]: string;\n    /** From. */\n    [\"from\"]?: number;\n    /** Size. */\n    [\"size\"]?: number;\n    /** Order by field */\n    [\"orderBy\"]?: string;\n    /** Direction */\n    [\"direction\"]?: SortingDirectionDescending;\n    /** Currency in with monetary amount will be display */\n    [\"currencyCode\"]?: string;\n}\n\nexport interface StreamPortfolioPositionsRequestParams {\n    /** Unique identifier of the portfolio. */\n    [\"portfolioId\"]: string;\n    /** Record UUID. */\n    [\"cursor\"]?: string;\n    /** Size. */\n    [\"size\"]?: number;\n    /** search */\n    [\"search\"]?: string;\n    /** Currency in with monetary amount will be display */\n    [\"currencyCode\"]?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortfolioPositionsHttpService {\n\n    protected basePath = '';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new PortfolioSummaryInstrumentViewConfiguration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(PORTFOLIO_SUMMARY_INSTRUMENT_VIEW_BASE_PATH) basePath: string, @Optional() configuration: PortfolioSummaryInstrumentViewConfiguration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<Blob>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'text/csv'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<Blob>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Blob>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Blob>>;\n    /**\n     * Export portfolio positions\n     * Export file with portfolio positions.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public exportPortfolioPositions(requestParameters: ExportPortfolioPositionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'text/csv' | 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' | 'application/json'}): Observable<any> {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling exportPortfolioPositions.');\n        }\n        const _fileType = requestParameters[\"fileType\"];\n        if (_fileType === null || _fileType === undefined) {\n            throw new Error('Required parameter fileType was null or undefined when calling exportPortfolioPositions.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_fileType !== undefined && _fileType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fileType, 'fileType');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'text/csv',\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get(`${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions/export`,\n            {\n                params: queryParameters,\n                responseType: \"blob\",\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public exportPortfolioPositionsUrl(requestParameters: ExportPortfolioPositionsRequestParams): string {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling exportPortfolioPositions.');\n        }\n        const _fileType = requestParameters[\"fileType\"];\n        if (_fileType === null || _fileType === undefined) {\n            throw new Error('Required parameter fileType was null or undefined when calling exportPortfolioPositions.');\n        }\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_fileType !== undefined && _fileType !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_fileType, 'fileType');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions/export${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * List portfolio positions\n     * Retrieve paged and sortable list of positions in portfolio.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listPortfolioPositions(requestParameters: ListPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PortfolioPositionsList>;\n    /**\n     * List portfolio positions\n     * Retrieve paged and sortable list of positions in portfolio.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listPortfolioPositions(requestParameters: ListPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PortfolioPositionsList>>;\n    /**\n     * List portfolio positions\n     * Retrieve paged and sortable list of positions in portfolio.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listPortfolioPositions(requestParameters: ListPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PortfolioPositionsList>>;\n    /**\n     * List portfolio positions\n     * Retrieve paged and sortable list of positions in portfolio.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public listPortfolioPositions(requestParameters: ListPortfolioPositionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling listPortfolioPositions.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        const _currencyCode = requestParameters[\"currencyCode\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        if (_currencyCode !== undefined && _currencyCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_currencyCode, 'currencyCode');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PortfolioPositionsList>(`${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public listPortfolioPositionsUrl(requestParameters: ListPortfolioPositionsRequestParams): string {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling listPortfolioPositions.');\n        }\n        const _from = requestParameters[\"from\"];\n        const _size = requestParameters[\"size\"];\n        const _orderBy = requestParameters[\"orderBy\"];\n        const _direction = requestParameters[\"direction\"];\n        const _currencyCode = requestParameters[\"currencyCode\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_from !== undefined && _from !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_from, 'from');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_orderBy !== undefined && _orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_orderBy, 'orderBy');\n        }\n        if (_direction !== undefined && _direction !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_direction, 'direction');\n        }\n        if (_currencyCode !== undefined && _currencyCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_currencyCode, 'currencyCode');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions${queryString ? `?${queryString}` : ''}`;\n    }\n\n    /**\n     * Stream portfolio positions\n     * Retrieve portfolio positions list.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public streamPortfolioPositions(requestParameters: StreamPortfolioPositionsRequestParams, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<PortfolioPositionsStream>;\n    /**\n     * Stream portfolio positions\n     * Retrieve portfolio positions list.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public streamPortfolioPositions(requestParameters: StreamPortfolioPositionsRequestParams, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<PortfolioPositionsStream>>;\n    /**\n     * Stream portfolio positions\n     * Retrieve portfolio positions list.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public streamPortfolioPositions(requestParameters: StreamPortfolioPositionsRequestParams, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<PortfolioPositionsStream>>;\n    /**\n     * Stream portfolio positions\n     * Retrieve portfolio positions list.\n     * @param requestParameters\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public streamPortfolioPositions(requestParameters: StreamPortfolioPositionsRequestParams, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling streamPortfolioPositions.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _search = requestParameters[\"search\"];\n        const _currencyCode = requestParameters[\"currencyCode\"];\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_search !== undefined && _search !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_search, 'search');\n        }\n        if (_currencyCode !== undefined && _currencyCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_currencyCode, 'currencyCode');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<PortfolioPositionsStream>(`${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions/stream`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    public streamPortfolioPositionsUrl(requestParameters: StreamPortfolioPositionsRequestParams): string {\n        const _portfolioId = requestParameters[\"portfolioId\"];\n        if (_portfolioId === null || _portfolioId === undefined) {\n            throw new Error('Required parameter portfolioId was null or undefined when calling streamPortfolioPositions.');\n        }\n        const _cursor = requestParameters[\"cursor\"];\n        const _size = requestParameters[\"size\"];\n        const _search = requestParameters[\"search\"];\n        const _currencyCode = requestParameters[\"currencyCode\"];\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (_cursor !== undefined && _cursor !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_cursor, 'cursor');\n        }\n        if (_size !== undefined && _size !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_size, 'size');\n        }\n        if (_search !== undefined && _search !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_search, 'search');\n        }\n        if (_currencyCode !== undefined && _currencyCode !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>_currencyCode, 'currencyCode');\n        }\n        const queryString = queryParameters.toString();\n        return `${this.configuration.basePath}/client-api/v1/portfolios/${encodeURIComponent(String(_portfolioId))}/positions/stream${queryString ? `?${queryString}` : ''}`;\n    }\n\n}\n","import { createMocks } from '@backbase/foundation-ang/data-http';\nimport { Provider } from '@angular/core';\n\n/**\n* Mocks provider for /client-api/v1/portfolios/{portfolioId}/positions/export URL pattern\n*/\nexport const PortfolioPositionsHttpServiceExportPortfolioPositionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions/export\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/portfolios/{portfolioId}/positions URL pattern\n*/\nexport const PortfolioPositionsHttpServiceListPortfolioPositionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"positions\" : [ {\n    \"id\" : \"51c9d6e7-c3fa-40e2-a500-4b4e2f11cbd3\",\n    \"instrument\" : {\n      \"id\" : \"6163a37e-6148-46ac-bd46-f62f563dfa7e\",\n      \"name\" : \"Apples and Pears\",\n      \"code\" : \"UAPL\",\n      \"ticker\" : \"UAPL\",\n      \"exchange\" : \"NASDAQ\",\n      \"currency\" : \"UAH\",\n      \"available\" : true,\n      \"assetClass\" : {\n        \"id\" : \"6153577f-ad4c-47a4-bab2-b2e7c7b172cd\",\n        \"name\" : \"Equities\"\n      }\n    },\n    \"quantity\" : 120,\n    \"price\" : {\n      \"currency\" : \"UAH\",\n      \"amount\" : 1030\n    },\n    \"exchangeRate\" : 0.99,\n    \"valuation\" : {\n      \"currency\" : \"USD\",\n      \"amount\" : 1028\n    },\n    \"accruedInterest\" : {\n      \"amount\" : 12,\n      \"currency\" : \"USD\"\n    },\n    \"costPrice\" : {\n      \"amount\" : 1001,\n      \"currency\" : \"UAH\"\n    },\n    \"costExchangeRate\" : 1.01,\n    \"unrealizedPL\" : {\n      \"amount\" : 0.2,\n      \"currency\" : \"USD\"\n    },\n    \"unrealizedPLPct\" : 0.02,\n    \"assetClassPct\" : 0.4,\n    \"portfolioPct\" : 0.33,\n    \"country\" : {\n      \"id\" : \"87a87cfc-81a2-4193-aafb-fa08e699ba70\",\n      \"name\" : \"Ukraine\",\n      \"code\" : \"UA\"\n    },\n    \"additions\" : {\n      \"someKey\" : \"someValue\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n/**\n* Mocks provider for /client-api/v1/portfolios/{portfolioId}/positions/stream URL pattern\n*/\nexport const PortfolioPositionsHttpServiceStreamPortfolioPositionsMocksProvider: Provider = createMocks([{\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions/stream\",\n        method: \"GET\",\n        responses: [\n                {\n                    status: 200,\n                    body: {\n  \"cursor\" : \"554e02e5-67fb-4434-9c97-91fde8ec3ce4\",\n  \"hasMoreItems\" : false,\n  \"positions\" : [ {\n    \"id\" : \"554e02e5-67fb-4434-9c97-91fde8ec3ce4\",\n    \"region\" : {\n      \"id\" : \"96821684-70c0-46a9-8e05-2c1f0526cdd9\",\n      \"name\" : \"Europe\"\n    },\n    \"country\" : {\n      \"id\" : \"51a95a45-63e0-4e43-9619-8ffb679f5d9b\",\n      \"name\" : \"Ukraine\",\n      \"code\" : \"UA\"\n    },\n    \"instrument\" : {\n      \"id\" : \"3e35104b-03e9-42be-b58f-8ee5d23d6ca8\",\n      \"name\" : \"Apples and Plums\",\n      \"ticker\" : \"UAPL\",\n      \"exchange\" : \"NASDAQ\",\n      \"assetClass\" : {\n        \"id\" : \"6153577f-ad4c-47a4-bab2-b2e7c7b172cd\",\n        \"name\" : \"Equities\"\n      }\n    },\n    \"assetClassPct\" : 0.24,\n    \"valuation\" : {\n      \"amount\" : 43630,\n      \"currency\" : \"USD\"\n    },\n    \"additions\" : {\n      \"someKey\" : \"someValue\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 400,\n                    body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 404,\n                    body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n                },\n                {\n                    status: 500,\n                    body: {\n  \"message\" : \"Description of error\"\n}\n                },\n    ]\n}]);\n\nexport const PortfolioPositionsHttpServiceMocksProvider: Provider = createMocks(\n    [\n    {\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions/export\",\n        method: \"GET\",\n        responses: [\n\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"positions\" : [ {\n    \"id\" : \"51c9d6e7-c3fa-40e2-a500-4b4e2f11cbd3\",\n    \"instrument\" : {\n      \"id\" : \"6163a37e-6148-46ac-bd46-f62f563dfa7e\",\n      \"name\" : \"Apples and Pears\",\n      \"code\" : \"UAPL\",\n      \"ticker\" : \"UAPL\",\n      \"exchange\" : \"NASDAQ\",\n      \"currency\" : \"UAH\",\n      \"available\" : true,\n      \"assetClass\" : {\n        \"id\" : \"6153577f-ad4c-47a4-bab2-b2e7c7b172cd\",\n        \"name\" : \"Equities\"\n      }\n    },\n    \"quantity\" : 120,\n    \"price\" : {\n      \"currency\" : \"UAH\",\n      \"amount\" : 1030\n    },\n    \"exchangeRate\" : 0.99,\n    \"valuation\" : {\n      \"currency\" : \"USD\",\n      \"amount\" : 1028\n    },\n    \"accruedInterest\" : {\n      \"amount\" : 12,\n      \"currency\" : \"USD\"\n    },\n    \"costPrice\" : {\n      \"amount\" : 1001,\n      \"currency\" : \"UAH\"\n    },\n    \"costExchangeRate\" : 1.01,\n    \"unrealizedPL\" : {\n      \"amount\" : 0.2,\n      \"currency\" : \"USD\"\n    },\n    \"unrealizedPLPct\" : 0.02,\n    \"assetClassPct\" : 0.4,\n    \"portfolioPct\" : 0.33,\n    \"country\" : {\n      \"id\" : \"87a87cfc-81a2-4193-aafb-fa08e699ba70\",\n      \"name\" : \"Ukraine\",\n      \"code\" : \"UA\"\n    },\n    \"additions\" : {\n      \"someKey\" : \"someValue\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n    {\n        urlPattern: \"/client-api/v1/portfolios/{portfolioId}/positions/stream\",\n        method: \"GET\",\n        responses: [\n\n            {\n                status: 200,\n                body: {\n  \"cursor\" : \"554e02e5-67fb-4434-9c97-91fde8ec3ce4\",\n  \"hasMoreItems\" : false,\n  \"positions\" : [ {\n    \"id\" : \"554e02e5-67fb-4434-9c97-91fde8ec3ce4\",\n    \"region\" : {\n      \"id\" : \"96821684-70c0-46a9-8e05-2c1f0526cdd9\",\n      \"name\" : \"Europe\"\n    },\n    \"country\" : {\n      \"id\" : \"51a95a45-63e0-4e43-9619-8ffb679f5d9b\",\n      \"name\" : \"Ukraine\",\n      \"code\" : \"UA\"\n    },\n    \"instrument\" : {\n      \"id\" : \"3e35104b-03e9-42be-b58f-8ee5d23d6ca8\",\n      \"name\" : \"Apples and Plums\",\n      \"ticker\" : \"UAPL\",\n      \"exchange\" : \"NASDAQ\",\n      \"assetClass\" : {\n        \"id\" : \"6153577f-ad4c-47a4-bab2-b2e7c7b172cd\",\n        \"name\" : \"Equities\"\n      }\n    },\n    \"assetClassPct\" : 0.24,\n    \"valuation\" : {\n      \"amount\" : 43630,\n      \"currency\" : \"USD\"\n    },\n    \"additions\" : {\n      \"someKey\" : \"someValue\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 400,\n                body: {\n  \"message\" : \"Bad Request\",\n  \"errors\" : [ {\n    \"message\" : \"Value Exceeded. Must be between {min} and {max}.\",\n    \"key\" : \"common.api.shoesize\",\n    \"context\" : {\n      \"max\" : \"50\",\n      \"min\" : \"1\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 404,\n                body: {\n  \"message\" : \"Resource not found.\",\n  \"errors\" : [ {\n    \"message\" : \"Unable to find the resource requested resource: {resource}.\",\n    \"key\" : \"common.api.resource\",\n    \"context\" : {\n      \"resource\" : \"aResource\"\n    }\n  } ]\n}\n            },\n\n            {\n                status: 500,\n                body: {\n  \"message\" : \"Description of error\"\n}\n            },\n    ]\n},\n]\n);\n\n\n"],"names":["InjectionToken","NgModule","Optional","SkipSelf","HttpHeaders","HttpParams","Injectable","Inject","createMocks"],"mappings":"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"}