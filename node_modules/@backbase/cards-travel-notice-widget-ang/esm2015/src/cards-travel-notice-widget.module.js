import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CardsCommonModule, DefaultDestionsService, DestinationsServiceConfigToken } from '@backbase/cards-common-ang';
import { BackbaseCoreModule } from '@backbase/foundation-ang/core';
import { AlertModule } from '@backbase/ui-ang/alert';
import { BadgeModule } from '@backbase/ui-ang/badge';
import { ButtonModule } from '@backbase/ui-ang/button';
import { CheckboxGroupModule } from '@backbase/ui-ang/checkbox-group';
import { CollapsibleModule } from '@backbase/ui-ang/collapsible';
import { DropdownMultiSelectModule } from '@backbase/ui-ang/dropdown-multi-select';
import { IconModule } from '@backbase/ui-ang/icon';
import { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';
import { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';
import { InputPhoneModule } from '@backbase/ui-ang/input-phone';
import { InputTextModule } from '@backbase/ui-ang/input-text';
import { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';
import { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';
import { ModalModule } from '@backbase/ui-ang/modal';
import { NotificationModule } from '@backbase/ui-ang/notification';
import { PaymentCardModule } from '@backbase/ui-ang/payment-card';
import { StepperModule } from '@backbase/ui-ang/stepper';
import { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';
import { NgSelectModule } from '@ng-select/ng-select';
import { CardsTravelNoticeContainerComponent, TravelNoticeEmptyStateContainerCustomizableDirective, } from './components/cards-travel-notice-container/cards-travel-notice-container.component';
import { CardsTravelNoticeCheckboxCardsComponent } from './components/cards-travel-notice-create/cards-travel-notice-checkbox-cards.component';
import { CardsTravelNoticeConfirmStepComponent } from './components/cards-travel-notice-create/cards-travel-notice-confirm-step.component';
import { CardsTravelNoticeCountrySelectorComponent } from './components/cards-travel-notice-create/cards-travel-notice-country-selector.component';
import { CardsTravelNoticeCreateComponent, TravelNoticeConfirmStepCustomizableDirective, TravelNoticeCreateCustomizableDirective, TravelNoticeDetailsStepCustomizableDirective, TravelNoticeSelectCardsCustomizableDirective, TravelNoticeStepperCustomizableDirective, } from './components/cards-travel-notice-create/cards-travel-notice-create.component';
import { CardsTravelNoticeListItemComponent } from './components/cards-travel-notice-list/cards-travel-notice-list-item.component';
import { CardsTravelNoticeListComponent, TravelNoticeListCustomizableDirective, TravelNoticeListItemCustomizableDirective, } from './components/cards-travel-notice-list/cards-travel-notice-list.component';
import { CardsTravelNoticeStatusBadgeComponent } from './components/cards-travel-notice-list/cards-travel-notice-status-badge.component';
import { CardsTravelNoticePaymentCardComponent } from './components/cards-travel-notice-payment-card/cards-travel-notice-payment-card.component';
import { CardsTravelNoticeWidgetComponent } from './components/cards-travel-notice-widget/cards-travel-notice-widget.component';
import { TravelNoticeDatesHelperService } from './services/travel-notice-dates-helper.service';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/foundation-ang/core";
const components = [
    CardsTravelNoticeWidgetComponent,
    CardsTravelNoticeContainerComponent,
    CardsTravelNoticeListComponent,
    CardsTravelNoticeListItemComponent,
    CardsTravelNoticeCreateComponent,
    CardsTravelNoticeCheckboxCardsComponent,
    CardsTravelNoticeConfirmStepComponent,
    CardsTravelNoticeCountrySelectorComponent,
    CardsTravelNoticeStatusBadgeComponent,
    CardsTravelNoticePaymentCardComponent,
];
const customizables = [
    TravelNoticeEmptyStateContainerCustomizableDirective,
    TravelNoticeListCustomizableDirective,
    TravelNoticeListItemCustomizableDirective,
    TravelNoticeCreateCustomizableDirective,
    TravelNoticeDetailsStepCustomizableDirective,
    TravelNoticeSelectCardsCustomizableDirective,
    TravelNoticeConfirmStepCustomizableDirective,
    TravelNoticeStepperCustomizableDirective,
];
const modules = [
    ButtonModule,
    BadgeModule,
    IconModule,
    CollapsibleModule,
    LoadingIndicatorModule,
    PaymentCardModule,
    StepperModule,
    InputDatepickerModule,
    CheckboxGroupModule,
    InputCheckboxModule,
    InputValidationMessageModule,
    ModalModule,
    InputTextModule,
    InputPhoneModule,
    DropdownMultiSelectModule,
    AlertModule,
    NotificationModule,
    NgbCollapseModule,
    CardsCommonModule,
];
export class CardsTravelNoticeModule {
}
CardsTravelNoticeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CardsTravelNoticeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeModule, declarations: [CardsTravelNoticeWidgetComponent,
        CardsTravelNoticeContainerComponent,
        CardsTravelNoticeListComponent,
        CardsTravelNoticeListItemComponent,
        CardsTravelNoticeCreateComponent,
        CardsTravelNoticeCheckboxCardsComponent,
        CardsTravelNoticeConfirmStepComponent,
        CardsTravelNoticeCountrySelectorComponent,
        CardsTravelNoticeStatusBadgeComponent,
        CardsTravelNoticePaymentCardComponent, TravelNoticeEmptyStateContainerCustomizableDirective,
        TravelNoticeListCustomizableDirective,
        TravelNoticeListItemCustomizableDirective,
        TravelNoticeCreateCustomizableDirective,
        TravelNoticeDetailsStepCustomizableDirective,
        TravelNoticeSelectCardsCustomizableDirective,
        TravelNoticeConfirmStepCustomizableDirective,
        TravelNoticeStepperCustomizableDirective], imports: [CommonModule, i1.BackbaseCoreModule, ButtonModule,
        BadgeModule,
        IconModule,
        CollapsibleModule,
        LoadingIndicatorModule,
        PaymentCardModule,
        StepperModule,
        InputDatepickerModule,
        CheckboxGroupModule,
        InputCheckboxModule,
        InputValidationMessageModule,
        ModalModule,
        InputTextModule,
        InputPhoneModule,
        DropdownMultiSelectModule,
        AlertModule,
        NotificationModule,
        NgbCollapseModule,
        CardsCommonModule, ReactiveFormsModule,
        FormsModule,
        NgSelectModule], exports: [ButtonModule,
        BadgeModule,
        IconModule,
        CollapsibleModule,
        LoadingIndicatorModule,
        PaymentCardModule,
        StepperModule,
        InputDatepickerModule,
        CheckboxGroupModule,
        InputCheckboxModule,
        InputValidationMessageModule,
        ModalModule,
        InputTextModule,
        InputPhoneModule,
        DropdownMultiSelectModule,
        AlertModule,
        NotificationModule,
        NgbCollapseModule,
        CardsCommonModule, CardsTravelNoticeWidgetComponent,
        CardsTravelNoticeContainerComponent,
        CardsTravelNoticeListComponent,
        CardsTravelNoticeListItemComponent,
        CardsTravelNoticeCreateComponent,
        CardsTravelNoticeCheckboxCardsComponent,
        CardsTravelNoticeConfirmStepComponent,
        CardsTravelNoticeCountrySelectorComponent,
        CardsTravelNoticeStatusBadgeComponent,
        CardsTravelNoticePaymentCardComponent, TravelNoticeEmptyStateContainerCustomizableDirective,
        TravelNoticeListCustomizableDirective,
        TravelNoticeListItemCustomizableDirective,
        TravelNoticeCreateCustomizableDirective,
        TravelNoticeDetailsStepCustomizableDirective,
        TravelNoticeSelectCardsCustomizableDirective,
        TravelNoticeConfirmStepCustomizableDirective,
        TravelNoticeStepperCustomizableDirective] });
CardsTravelNoticeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeModule, providers: [
        { provide: DestinationsServiceConfigToken, useClass: DefaultDestionsService },
        TravelNoticeDatesHelperService,
    ], imports: [[
            CommonModule,
            BackbaseCoreModule.withConfig({
                classMap: { CardsTravelNoticeWidgetComponent },
            }),
            ...modules,
            ReactiveFormsModule,
            FormsModule,
            NgSelectModule,
        ], ButtonModule,
        BadgeModule,
        IconModule,
        CollapsibleModule,
        LoadingIndicatorModule,
        PaymentCardModule,
        StepperModule,
        InputDatepickerModule,
        CheckboxGroupModule,
        InputCheckboxModule,
        InputValidationMessageModule,
        ModalModule,
        InputTextModule,
        InputPhoneModule,
        DropdownMultiSelectModule,
        AlertModule,
        NotificationModule,
        NgbCollapseModule,
        CardsCommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [...components, ...customizables],
                    imports: [
                        CommonModule,
                        BackbaseCoreModule.withConfig({
                            classMap: { CardsTravelNoticeWidgetComponent },
                        }),
                        ...modules,
                        ReactiveFormsModule,
                        FormsModule,
                        NgSelectModule,
                    ],
                    providers: [
                        { provide: DestinationsServiceConfigToken, useClass: DefaultDestionsService },
                        TravelNoticeDatesHelperService,
                    ],
                    exports: [...modules, ...components, ...customizables],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,