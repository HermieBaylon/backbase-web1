import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "../cards-travel-notice-list/cards-travel-notice-list.component";
import * as i2 from "../cards-travel-notice-create/cards-travel-notice-create.component";
import * as i3 from "@backbase/ui-ang/icon";
import * as i4 from "@angular/common";
import * as i5 from "@backbase/ui-ang/button";
export class CardsTravelNoticeContainerComponent {
    constructor() {
        this.hostRef = this;
        /**
         * Empty state image url.
         */
        this.imageUrl = '';
        /**
         * EventEmitter for triggering post event.
         */
        this.createTravelNotice = new EventEmitter();
        /**
         * EventEmitter for triggering delete event.
         */
        this.remove = new EventEmitter();
        this.page = 'list';
    }
    get hasItems() {
        return this.travelNoticeList && this.travelNoticeList.length > 0;
    }
    saveTravelNotice(travelNoticeItem) {
        this.createTravelNotice.emit(travelNoticeItem);
        this.page = 'list';
    }
    setPage(operation) {
        this.page = operation.goToPage;
    }
    onRemove(travelNoticeItem) {
        this.remove.emit(travelNoticeItem);
    }
}
CardsTravelNoticeContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeContainerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardsTravelNoticeContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CardsTravelNoticeContainerComponent, selector: "bb-cards-travel-notice-container", inputs: { imageUrl: "imageUrl", travelNoticeList: "travelNoticeList", destinationList: "destinationList", paymentCards: "paymentCards" }, outputs: { createTravelNotice: "createTravelNotice", remove: "remove" }, ngImport: i0, template: "<ng-container *ngIf=\"page === 'list'\">\n  <ng-container *ngIf=\"hasItems; else emptyState\">\n    <bb-cards-travel-notice-list\n      [travelNoticeList]=\"travelNoticeList\"\n      (create)=\"setPage($event)\"\n      (deleteListItem)=\"onRemove($event)\"\n      [destinationList]=\"destinationList\"\n    >\n    </bb-cards-travel-notice-list>\n  </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"page === 'create'\">\n  <bb-cards-travel-notice-create\n    [paymentCards]=\"paymentCards\"\n    [destinationList]=\"destinationList\"\n    (abortCreation)=\"setPage($event)\"\n    (save)=\"saveTravelNotice($event)\"\n  ></bb-cards-travel-notice-create>\n</ng-container>\n\n<ng-template bbTravelNoticeEmptyStateContainerCustomizable let-hostRef>\n  <div class=\"bb-travel-notice-empty-state card\">\n    <div class=\"card-body bb-text-align-center\">\n      <div class=\"bb-block bb-block--xl\">\n        <img class=\"img-fluid\" *ngIf=\"hostRef.imageUrl !== ''\" [src]=\"hostRef.imageUrl\" alt=\"empty state background\"/>\n      </div>\n      <h2 class=\"bb-block bb-block--md\" i18n=\"travel notice empty state header@@cards.travel.notice.empty.state.header\">\n        Setup your travel notice\n      </h2>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n          <div class=\"bb-block bb-block--lg\">\n            <p \n              class=\"bb-travel-notice-empty-state__message\"\n              i18n=\"travel notice empty state description@@cards.travel.notice.empty.state.description\"\n            >\n              A travel notice alerts us that you\u2019re planning to use your cards abroad and it helps avoid interpreting any\n              unusual activity as potential fraud.\n            </p>\n          </div>\n        </div>\n      </div>\n     \n      <div>\n        <button bbButton color=\"primary\" (click)=\"hostRef.setPage({goToPage: 'create'})\">\n          <bb-icon-ui name=\"add\"></bb-icon-ui> \n          <span i18n=\"Create new travel notice button@@cards.travel.notice.createNew.button\">Create new</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #emptyState>\n  <ng-container bbTravelNoticeEmptyStateContainerCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>", components: [{ type: i0.forwardRef(function () { return i1.CardsTravelNoticeListComponent; }), selector: "bb-cards-travel-notice-list", inputs: ["travelNoticeList", "destinationList"], outputs: ["create", "deleteListItem"] }, { type: i0.forwardRef(function () { return i2.CardsTravelNoticeCreateComponent; }), selector: "bb-cards-travel-notice-create", inputs: ["paymentCards", "destinationList"], outputs: ["abortCreation", "save"] }, { type: i0.forwardRef(function () { return i3.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i0.forwardRef(function () { return i4.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0.forwardRef(function () { return TravelNoticeEmptyStateContainerCustomizableDirective; }), selector: "[bbTravelNoticeEmptyStateContainerCustomizable]" }, { type: i0.forwardRef(function () { return i5.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-cards-travel-notice-container',
                    templateUrl: './cards-travel-notice-container.component.html',
                }]
        }], propDecorators: { imageUrl: [{
                type: Input
            }], travelNoticeList: [{
                type: Input
            }], destinationList: [{
                type: Input
            }], paymentCards: [{
                type: Input
            }], createTravelNotice: [{
                type: Output
            }], remove: [{
                type: Output
            }] } });
export class TravelNoticeEmptyStateContainerCustomizableDirective extends BbTemplate {
}
TravelNoticeEmptyStateContainerCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TravelNoticeEmptyStateContainerCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TravelNoticeEmptyStateContainerCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: TravelNoticeEmptyStateContainerCustomizableDirective, selector: "[bbTravelNoticeEmptyStateContainerCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TravelNoticeEmptyStateContainerCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbTravelNoticeEmptyStateContainerCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZHMtdHJhdmVsLW5vdGljZS1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jYXJkcy10cmF2ZWwtbm90aWNlLXdpZGdldC1hbmcvc3JjL2NvbXBvbmVudHMvY2FyZHMtdHJhdmVsLW5vdGljZS1jb250YWluZXIvY2FyZHMtdHJhdmVsLW5vdGljZS1jb250YWluZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jYXJkcy10cmF2ZWwtbm90aWNlLXdpZGdldC1hbmcvc3JjL2NvbXBvbmVudHMvY2FyZHMtdHJhdmVsLW5vdGljZS1jb250YWluZXIvY2FyZHMtdHJhdmVsLW5vdGljZS1jb250YWluZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbEYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7Ozs7O0FBVTNELE1BQU0sT0FBTyxtQ0FBbUM7SUFKaEQ7UUFLVyxZQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3hCOztXQUVHO1FBQ00sYUFBUSxHQUF1QixFQUFFLENBQUM7UUFhM0M7O1dBRUc7UUFDZ0IsdUJBQWtCLEdBQUcsSUFBSSxZQUFZLEVBQWdCLENBQUM7UUFDekU7O1dBRUc7UUFDZ0IsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFnQixDQUFDO1FBQzdELFNBQUksR0FBUyxNQUFNLENBQUM7S0FrQnJCO0lBaEJDLElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxnQkFBOEI7UUFDN0MsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxPQUFPLENBQUMsU0FBb0I7UUFDMUIsSUFBSSxDQUFDLElBQUksR0FBRyxTQUFTLENBQUMsUUFBUSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxRQUFRLENBQUMsZ0JBQThCO1FBQ3JDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDckMsQ0FBQzs7aUlBM0NVLG1DQUFtQztxSEFBbkMsbUNBQW1DLDJSQ1poRCwrdUVBd0RjLHN5QkRLRCxvREFBb0Q7NEZBakRwRCxtQ0FBbUM7a0JBSi9DLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGtDQUFrQztvQkFDNUMsV0FBVyxFQUFFLGdEQUFnRDtpQkFDOUQ7OEJBTVUsUUFBUTtzQkFBaEIsS0FBSztnQkFJRyxnQkFBZ0I7c0JBQXhCLEtBQUs7Z0JBSUcsZUFBZTtzQkFBdkIsS0FBSztnQkFJRyxZQUFZO3NCQUFwQixLQUFLO2dCQUlhLGtCQUFrQjtzQkFBcEMsTUFBTTtnQkFJWSxNQUFNO3NCQUF4QixNQUFNOztBQXdCVCxNQUFNLE9BQU8sb0RBQXFELFNBQVEsVUFHekU7O2tKQUhZLG9EQUFvRDtzSUFBcEQsb0RBQW9EOzRGQUFwRCxvREFBb0Q7a0JBSGhFLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGlEQUFpRDtpQkFDNUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIERpcmVjdGl2ZSwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEZXN0aW5hdGlvbiwgUGF5bWVudENhcmQsIFRyYXZlbE5vdGljZSwgVHJhdmVsTm90aWNlTGlzdCB9IGZyb20gJ0BiYWNrYmFzZS9jYXJkcy1jb21tb24tYW5nJztcbmltcG9ydCB7IEJiVGVtcGxhdGUgfSBmcm9tICdAYmFja2Jhc2UvZm91bmRhdGlvbi1hbmcvY29yZSc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2NvbnNpc3RlbnQtdHlwZS1kZWZpbml0aW9uc1xudHlwZSBQYWdlID0gJ2NyZWF0ZScgfCAnbGlzdCcgfCAnZWRpdCc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2NvbnNpc3RlbnQtdHlwZS1kZWZpbml0aW9uc1xudHlwZSBPcGVyYXRpb24gPSB7IGdvVG9QYWdlOiBQYWdlIH07XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWNhcmRzLXRyYXZlbC1ub3RpY2UtY29udGFpbmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NhcmRzLXRyYXZlbC1ub3RpY2UtY29udGFpbmVyLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQ2FyZHNUcmF2ZWxOb3RpY2VDb250YWluZXJDb21wb25lbnQge1xuICByZWFkb25seSBob3N0UmVmID0gdGhpcztcbiAgLyoqXG4gICAqIEVtcHR5IHN0YXRlIGltYWdlIHVybC5cbiAgICovXG4gIEBJbnB1dCgpIGltYWdlVXJsOiBzdHJpbmcgfCB1bmRlZmluZWQgPSAnJztcbiAgLyoqXG4gICAqICBMaXN0IG9mIHRyYXZlbCBub3RpY2VzLlxuICAgKi9cbiAgQElucHV0KCkgdHJhdmVsTm90aWNlTGlzdDogVHJhdmVsTm90aWNlTGlzdCB8IHVuZGVmaW5lZDtcbiAgLyoqXG4gICAqIExpc3QgZm9yIGFsbCBwcm92aWRlZCBJU08gY291bnRyaWVzL3JlZ2lvbnMuXG4gICAqL1xuICBASW5wdXQoKSBkZXN0aW5hdGlvbkxpc3Q6IERlc3RpbmF0aW9uW10gfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBQYXltZW50IGNhcmQgdG8gYmUgZGlzcGxheWVkLlxuICAgKi9cbiAgQElucHV0KCkgcGF5bWVudENhcmRzOiBQYXltZW50Q2FyZFtdIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogRXZlbnRFbWl0dGVyIGZvciB0cmlnZ2VyaW5nIHBvc3QgZXZlbnQuXG4gICAqL1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgY3JlYXRlVHJhdmVsTm90aWNlID0gbmV3IEV2ZW50RW1pdHRlcjxUcmF2ZWxOb3RpY2U+KCk7XG4gIC8qKlxuICAgKiBFdmVudEVtaXR0ZXIgZm9yIHRyaWdnZXJpbmcgZGVsZXRlIGV2ZW50LlxuICAgKi9cbiAgQE91dHB1dCgpIHJlYWRvbmx5IHJlbW92ZSA9IG5ldyBFdmVudEVtaXR0ZXI8VHJhdmVsTm90aWNlPigpO1xuICBwYWdlOiBQYWdlID0gJ2xpc3QnO1xuXG4gIGdldCBoYXNJdGVtcygpIHtcbiAgICByZXR1cm4gdGhpcy50cmF2ZWxOb3RpY2VMaXN0ICYmIHRoaXMudHJhdmVsTm90aWNlTGlzdC5sZW5ndGggPiAwO1xuICB9XG5cbiAgc2F2ZVRyYXZlbE5vdGljZSh0cmF2ZWxOb3RpY2VJdGVtOiBUcmF2ZWxOb3RpY2UpIHtcbiAgICB0aGlzLmNyZWF0ZVRyYXZlbE5vdGljZS5lbWl0KHRyYXZlbE5vdGljZUl0ZW0pO1xuICAgIHRoaXMucGFnZSA9ICdsaXN0JztcbiAgfVxuXG4gIHNldFBhZ2Uob3BlcmF0aW9uOiBPcGVyYXRpb24pIHtcbiAgICB0aGlzLnBhZ2UgPSBvcGVyYXRpb24uZ29Ub1BhZ2U7XG4gIH1cblxuICBvblJlbW92ZSh0cmF2ZWxOb3RpY2VJdGVtOiBUcmF2ZWxOb3RpY2UpIHtcbiAgICB0aGlzLnJlbW92ZS5lbWl0KHRyYXZlbE5vdGljZUl0ZW0pO1xuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYlRyYXZlbE5vdGljZUVtcHR5U3RhdGVDb250YWluZXJDdXN0b21pemFibGVdJyxcbn0pXG5leHBvcnQgY2xhc3MgVHJhdmVsTm90aWNlRW1wdHlTdGF0ZUNvbnRhaW5lckN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIENhcmRzVHJhdmVsTm90aWNlQ29udGFpbmVyQ29tcG9uZW50LFxuICB1bmRlZmluZWRcbj4ge31cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJwYWdlID09PSAnbGlzdCdcIj5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImhhc0l0ZW1zOyBlbHNlIGVtcHR5U3RhdGVcIj5cbiAgICA8YmItY2FyZHMtdHJhdmVsLW5vdGljZS1saXN0XG4gICAgICBbdHJhdmVsTm90aWNlTGlzdF09XCJ0cmF2ZWxOb3RpY2VMaXN0XCJcbiAgICAgIChjcmVhdGUpPVwic2V0UGFnZSgkZXZlbnQpXCJcbiAgICAgIChkZWxldGVMaXN0SXRlbSk9XCJvblJlbW92ZSgkZXZlbnQpXCJcbiAgICAgIFtkZXN0aW5hdGlvbkxpc3RdPVwiZGVzdGluYXRpb25MaXN0XCJcbiAgICA+XG4gICAgPC9iYi1jYXJkcy10cmF2ZWwtbm90aWNlLWxpc3Q+XG4gIDwvbmctY29udGFpbmVyPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy1jb250YWluZXIgKm5nSWY9XCJwYWdlID09PSAnY3JlYXRlJ1wiPlxuICA8YmItY2FyZHMtdHJhdmVsLW5vdGljZS1jcmVhdGVcbiAgICBbcGF5bWVudENhcmRzXT1cInBheW1lbnRDYXJkc1wiXG4gICAgW2Rlc3RpbmF0aW9uTGlzdF09XCJkZXN0aW5hdGlvbkxpc3RcIlxuICAgIChhYm9ydENyZWF0aW9uKT1cInNldFBhZ2UoJGV2ZW50KVwiXG4gICAgKHNhdmUpPVwic2F2ZVRyYXZlbE5vdGljZSgkZXZlbnQpXCJcbiAgPjwvYmItY2FyZHMtdHJhdmVsLW5vdGljZS1jcmVhdGU+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlIGJiVHJhdmVsTm90aWNlRW1wdHlTdGF0ZUNvbnRhaW5lckN1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGRpdiBjbGFzcz1cImJiLXRyYXZlbC1ub3RpY2UtZW1wdHktc3RhdGUgY2FyZFwiPlxuICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHkgYmItdGV4dC1hbGlnbi1jZW50ZXJcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0teGxcIj5cbiAgICAgICAgPGltZyBjbGFzcz1cImltZy1mbHVpZFwiICpuZ0lmPVwiaG9zdFJlZi5pbWFnZVVybCAhPT0gJydcIiBbc3JjXT1cImhvc3RSZWYuaW1hZ2VVcmxcIiBhbHQ9XCJlbXB0eSBzdGF0ZSBiYWNrZ3JvdW5kXCIvPlxuICAgICAgPC9kaXY+XG4gICAgICA8aDIgY2xhc3M9XCJiYi1ibG9jayBiYi1ibG9jay0tbWRcIiBpMThuPVwidHJhdmVsIG5vdGljZSBlbXB0eSBzdGF0ZSBoZWFkZXJAQGNhcmRzLnRyYXZlbC5ub3RpY2UuZW1wdHkuc3RhdGUuaGVhZGVyXCI+XG4gICAgICAgIFNldHVwIHlvdXIgdHJhdmVsIG5vdGljZVxuICAgICAgPC9oMj5cbiAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC04IG9mZnNldC1tZC0yXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImJiLWJsb2NrIGJiLWJsb2NrLS1sZ1wiPlxuICAgICAgICAgICAgPHAgXG4gICAgICAgICAgICAgIGNsYXNzPVwiYmItdHJhdmVsLW5vdGljZS1lbXB0eS1zdGF0ZV9fbWVzc2FnZVwiXG4gICAgICAgICAgICAgIGkxOG49XCJ0cmF2ZWwgbm90aWNlIGVtcHR5IHN0YXRlIGRlc2NyaXB0aW9uQEBjYXJkcy50cmF2ZWwubm90aWNlLmVtcHR5LnN0YXRlLmRlc2NyaXB0aW9uXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgQSB0cmF2ZWwgbm90aWNlIGFsZXJ0cyB1cyB0aGF0IHlvdeKAmXJlIHBsYW5uaW5nIHRvIHVzZSB5b3VyIGNhcmRzIGFicm9hZCBhbmQgaXQgaGVscHMgYXZvaWQgaW50ZXJwcmV0aW5nIGFueVxuICAgICAgICAgICAgICB1bnVzdWFsIGFjdGl2aXR5IGFzIHBvdGVudGlhbCBmcmF1ZC5cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgXG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIGJiQnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIChjbGljayk9XCJob3N0UmVmLnNldFBhZ2Uoe2dvVG9QYWdlOiAnY3JlYXRlJ30pXCI+XG4gICAgICAgICAgPGJiLWljb24tdWkgbmFtZT1cImFkZFwiPjwvYmItaWNvbi11aT4gXG4gICAgICAgICAgPHNwYW4gaTE4bj1cIkNyZWF0ZSBuZXcgdHJhdmVsIG5vdGljZSBidXR0b25AQGNhcmRzLnRyYXZlbC5ub3RpY2UuY3JlYXRlTmV3LmJ1dHRvblwiPkNyZWF0ZSBuZXc8L3NwYW4+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPG5nLXRlbXBsYXRlICNlbXB0eVN0YXRlPlxuICA8bmctY29udGFpbmVyIGJiVHJhdmVsTm90aWNlRW1wdHlTdGF0ZUNvbnRhaW5lckN1c3RvbWl6YWJsZSBbYmJIb3N0UmVmXT1cImhvc3RSZWZcIj48L25nLWNvbnRhaW5lcj5cbjwvbmctdGVtcGxhdGU+Il19