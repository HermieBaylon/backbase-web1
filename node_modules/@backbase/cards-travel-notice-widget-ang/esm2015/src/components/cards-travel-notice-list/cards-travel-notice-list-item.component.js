import { Component, EventEmitter, Input, Output } from '@angular/core';
import { getCountryName } from '@backbase/cards-common-ang';
import * as i0 from "@angular/core";
import * as i1 from "../../services/travel-notice-dates-helper.service";
import * as i2 from "./cards-travel-notice-status-badge.component";
import * as i3 from "@backbase/ui-ang/icon";
import * as i4 from "../cards-travel-notice-payment-card/cards-travel-notice-payment-card.component";
import * as i5 from "@backbase/ui-ang/modal";
import * as i6 from "@angular/common";
import * as i7 from "@backbase/ui-ang/button";
import * as i8 from "@ng-bootstrap/ng-bootstrap";
export class CardsTravelNoticeListItemComponent {
    constructor(helper) {
        this.helper = helper;
        this.hostRef = this;
        /**
         * EventEmitter for triggering delete event.
         */
        this.delete = new EventEmitter();
        this.dialogOpen = false;
        this.areCardsOpen = false;
        this.onCancel = () => {
            this.dialogOpen = false;
        };
        this.onConfirm = () => {
            this.delete.emit(this.travelNoticeItem);
            this.dialogOpen = false;
        };
    }
    getCountryName(travelNoticeCountry) {
        return getCountryName(this.destinationList, travelNoticeCountry);
    }
    onDelete() {
        this.dialogOpen = true;
    }
    toggleCardsVisibility() {
        this.areCardsOpen = !this.areCardsOpen;
    }
}
CardsTravelNoticeListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeListItemComponent, deps: [{ token: i1.TravelNoticeDatesHelperService }], target: i0.ɵɵFactoryTarget.Component });
CardsTravelNoticeListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CardsTravelNoticeListItemComponent, selector: "bb-cards-travel-notice-list-item", inputs: { travelNoticeItem: "travelNoticeItem", destinationList: "destinationList" }, outputs: { delete: "delete" }, ngImport: i0, template: "<div \n  class=\"bb-travel-notice-list-item\"\n  [ngClass]=\"{'bb-travel-notice-list-item--expired': hostRef.helper.isPastDate(travelNoticeItem!.arrivalDate)}\"\n>\n   <!-- status -->\n  <bb-cards-travel-notice-status-badge \n    [travelNoticeItem]=\"hostRef.travelNoticeItem\"\n  ></bb-cards-travel-notice-status-badge>\n\n  <div class=\"bb-stack bb-block bb-block--md bb-stack--align-top\">\n    <h3 class=\"bb-stack__item bb-travel-notice-header\">\n      <div>\n        <ng-container *ngFor=\"let item of hostRef.travelNoticeItem?.destinations; first as isFirst; last as isLast\">\n          <ng-container *ngIf=\"!isLast && !isFirst\">, </ng-container>\n          <ng-container *ngIf=\"!isFirst && isLast\">&nbsp;</ng-container>\n          <ng-container\n            i18n=\"And@@cards.travel.notice.list.countries.and\" \n            *ngIf=\"!isFirst && isLast\"\n          >and</ng-container>\n          <ng-container *ngIf=\"!isFirst && isLast\">&nbsp;</ng-container>\n          <ng-container>{{getCountryName(item)}}</ng-container>\n        </ng-container>\n      </div>\n    </h3>\n    \n    <div class=\"bb-stack__item bb-stack__item--push-right\">\n      <button bbButton color=\"unstyled\" (click)=\"onDelete()\">\n        <bb-icon-ui name=\"delete\" aria-label=\"Delete travel notice\" i18n-aria-label=\"Delete travel notice button@@cards.travel.notice.list.button.delete\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"bb-block bb-block--md\">\n        <div>\n          <bb-icon-ui name=\"flight-takeoff\" size=\"sm\"></bb-icon-ui>\n          <span class=\"bb-text-support bb-travel-notice-list__label\"\n            i18n='Travel notice list Departure date header@@cards.travel.notice.list.departure.date.header'\n          > Departure date: </span>\n        </div>\n        <div class=\"bb-travel-notice-list-item__departure-date\">{{ travelNoticeItem?.departureDate | date }}</div>\n      </div>\n     \n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"bb-block bb-block--md\">\n        <div>\n          <bb-icon-ui name=\"flight-land\" size=\"sm\"></bb-icon-ui>\n          <span \n            class=\"bb-text-support bb-travel-notice-list__label\"\n            i18n='Travel notice Return date header@@cards.travel.notice.list.return.date.header'\n          > Return date: </span>\n        </div>\n        <div class=\"bb-travel-notice-list-item__return-date\">{{ travelNoticeItem?.arrivalDate | date }}</div>\n      </div>\n    </div>\n  </div>\n  <div [ngbCollapse]=\"!hostRef.areCardsOpen\" class=\"bb-block bb-block--sm\">\n    <div  class=\"bb-block bb-block--md\" *ngIf=\"hostRef.travelNoticeItem?.contact?.phoneNumber\">\n      <div>\n        <bb-icon-ui name=\"local-phone\" size=\"sm\"></bb-icon-ui>\n        <span class=\"bb-text-support bb-travel-notice-list__label\"\n          i18n='Travel notice list Contact number header@@cards.travel.notice.list.contactNumber.header'\n        > Contact number: </span>\n      </div>\n      <div>\n        <div>{{hostRef.travelNoticeItem?.contact?.phoneNumber}}</div>\n      </div>\n    </div>\n    <div>\n      <div class=\"bb-block bb-block--md\" data-role=\"selectCards header\">\n        <div\n        class=\"bb-text-bold\"\n        i18n='Travel notice list Selected Cards header@@cards.travel.notice.list.selectCards.header'\n        >Selected cards</div>\n      </div>\n      <div class=\"bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-block bb-block--md\" *ngFor=\"let paymentCard of hostRef.travelNoticeItem?.cards\">\n          <bb-cards-travel-notice-payment-card [paymentCard]=\"paymentCard\"></bb-cards-travel-notice-payment-card>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div>\n    <button bbButton data-role=\"see-details-button\" buttonSize=\"sm\" color=\"link-text\" (click)=\"hostRef.toggleCardsVisibility()\">\n      <span \n        class=\"bb-travel-notice-list__label\"\n        i18n='Travel notice list show less button@@cards.travel.notice.list.seeLess.button' \n        *ngIf=\"areCardsOpen\"\n      >\n        Show less\n      </span>\n      <span \n        class=\"bb-travel-notice-list__label\"\n        i18n='Travel notice list show more button@@cards.travel.notice.list.seeMore.button' \n        *ngIf=\"!areCardsOpen\"\n      >\n        Show more\n      </span>\n      <bb-icon-ui [name]=\"areCardsOpen?'toggle-up':'toggle-down'\" size=\"md\"></bb-icon-ui>\n    </button>\n  </div>\n</div>\n<!-- delete confirmation model  -->\n<bb-modal-ui [isOpen]=\"hostRef.dialogOpen\" (cancel)=\"hostRef.onCancel()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h2 i18n=\"Delete Travel Notice@@cards.delete.travel.notice.deleteTravelNotice.modal.header\">Delete travel notice?</h2>\n      <div>\n        <button bbButton color=\"unstyled\" (click)=\"hostRef.onCancel()\">\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span i18n=\"Delete confirmation text@@cards.delete.travel.notice.deleteTravelNotice.modal.body\">\n        This travel notice information will be permanently deleted.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <button bbButton (click)=\"hostRef.onCancel()\" color=\"link\">\n        <span i18n=\"Cancel button text@@messages.createMessage.composeMessageModal.cancel.button\">\n          Keep it\n        </span>\n      </button>\n      <button bbButton (click)=\"hostRef.onConfirm()\" color=\"danger\">\n        <span i18n=\"Delete button text@@messages.createMessage.composeMessageModal.delete.button\">\n          Delete travel notice\n        </span>\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n<!-- end of model -->", components: [{ type: i2.CardsTravelNoticeStatusBadgeComponent, selector: "bb-cards-travel-notice-status-badge", inputs: ["travelNoticeItem"] }, { type: i3.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i4.CardsTravelNoticePaymentCardComponent, selector: "bb-cards-travel-notice-payment-card", inputs: ["paymentCard"] }, { type: i5.ModalComponent, selector: "bb-modal-ui", inputs: ["isOpen", "aria-labelledby", "aria-describedby", "modalOptions"], outputs: ["confirm", "cancel", "isOpenChange"] }, { type: i5.ModalHeaderComponent, selector: "bb-modal-header-ui", inputs: ["title"], outputs: ["close"] }, { type: i5.ModalBodyComponent, selector: "bb-modal-body-ui" }, { type: i5.ModalFooterComponent, selector: "bb-modal-footer-ui", inputs: ["confirmText", "cancelText"], outputs: ["confirm", "cancel"] }], directives: [{ type: i6.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i8.NgbCollapse, selector: "[ngbCollapse]", inputs: ["ngbCollapse", "animation"], outputs: ["ngbCollapseChange", "shown", "hidden"], exportAs: ["ngbCollapse"] }, { type: i5.CustomModalHeaderDirective, selector: "ng-template[bbCustomModalHeader]" }, { type: i5.CustomModalBodyDirective, selector: "ng-template[bbCustomModalBody]" }, { type: i5.CustomModalFooterDirective, selector: "ng-template[bbCustomModalFooter]" }], pipes: { "date": i6.DatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeListItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-cards-travel-notice-list-item',
                    templateUrl: './cards-travel-notice-list-item.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.TravelNoticeDatesHelperService }]; }, propDecorators: { travelNoticeItem: [{
                type: Input
            }], destinationList: [{
                type: Input
            }], delete: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,