import { Component, Input, Output, EventEmitter, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/icon";
import * as i2 from "./cards-travel-notice-list-item.component";
import * as i3 from "@backbase/ui-ang/button";
import * as i4 from "@angular/common";
export class CardsTravelNoticeListComponent {
    constructor() {
        this.hostRef = this;
        /**
         * EventEmitter for triggering post event.
         */
        this.create = new EventEmitter();
        /**
         * EventEmitter for triggering delete event.
         */
        this.deleteListItem = new EventEmitter();
    }
    onShowCreateForm() {
        this.create.emit({ goToPage: 'create' });
    }
    onDeleteListItem(travelNoticeItem) {
        this.deleteListItem.emit(travelNoticeItem);
    }
}
CardsTravelNoticeListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardsTravelNoticeListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: CardsTravelNoticeListComponent, selector: "bb-cards-travel-notice-list", inputs: { travelNoticeList: "travelNoticeList", destinationList: "destinationList" }, outputs: { create: "create", deleteListItem: "deleteListItem" }, ngImport: i0, template: "<ng-container bbTravelNoticeListCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTravelNoticeListCustomizable let-hostRef>\n  <div>\n    <div class=\"bb-text-align-right bb-block bb-block--xl bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <button bbButton data-role=\"add-button\" (click)=\"hostRef.onShowCreateForm()\">\n          <bb-icon-ui name=\"add\"></bb-icon-ui>\n          <span i18n=\"Create new travel notice button@@cards.travel.notice.createNew.button\"> Create New</span>\n        </button>\n      </div>\n    </div>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <ng-container bbTravelNoticeListItemCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbTravelNoticeListItemCustomizable let-hostRef>\n  <div class=\"bb-travel-notice-list bb-list\">\n    <div class=\"bb-list__item\" *ngFor=\"let travelNoticeItem of hostRef.travelNoticeList\">\n      <bb-cards-travel-notice-list-item\n        [travelNoticeItem]=\"travelNoticeItem\"\n        [destinationList]=\"hostRef.destinationList\" \n        (delete)=\"hostRef.onDeleteListItem($event)\"\n      ></bb-cards-travel-notice-list-item>\n    </div>\n  </div>\n</ng-template>", components: [{ type: i0.forwardRef(function () { return i1.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0.forwardRef(function () { return i2.CardsTravelNoticeListItemComponent; }), selector: "bb-cards-travel-notice-list-item", inputs: ["travelNoticeItem", "destinationList"], outputs: ["delete"] }], directives: [{ type: i0.forwardRef(function () { return TravelNoticeListCustomizableDirective; }), selector: "[bbTravelNoticeListCustomizable]" }, { type: i0.forwardRef(function () { return i3.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0.forwardRef(function () { return TravelNoticeListItemCustomizableDirective; }), selector: "[bbTravelNoticeListItemCustomizable]" }, { type: i0.forwardRef(function () { return i4.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: CardsTravelNoticeListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-cards-travel-notice-list',
                    templateUrl: './cards-travel-notice-list.component.html',
                }]
        }], propDecorators: { travelNoticeList: [{
                type: Input
            }], destinationList: [{
                type: Input
            }], create: [{
                type: Output
            }], deleteListItem: [{
                type: Output
            }] } });
export class TravelNoticeListCustomizableDirective extends BbTemplate {
}
TravelNoticeListCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TravelNoticeListCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TravelNoticeListCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: TravelNoticeListCustomizableDirective, selector: "[bbTravelNoticeListCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TravelNoticeListCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbTravelNoticeListCustomizable]',
                }]
        }] });
export class TravelNoticeListItemCustomizableDirective extends BbTemplate {
}
TravelNoticeListItemCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TravelNoticeListItemCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TravelNoticeListItemCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: TravelNoticeListItemCustomizableDirective, selector: "[bbTravelNoticeListItemCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: TravelNoticeListItemCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbTravelNoticeListItemCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZHMtdHJhdmVsLW5vdGljZS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY2FyZHMtdHJhdmVsLW5vdGljZS13aWRnZXQtYW5nL3NyYy9jb21wb25lbnRzL2NhcmRzLXRyYXZlbC1ub3RpY2UtbGlzdC9jYXJkcy10cmF2ZWwtbm90aWNlLWxpc3QuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9jYXJkcy10cmF2ZWwtbm90aWNlLXdpZGdldC1hbmcvc3JjL2NvbXBvbmVudHMvY2FyZHMtdHJhdmVsLW5vdGljZS1saXN0L2NhcmRzLXRyYXZlbC1ub3RpY2UtbGlzdC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVsRixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sK0JBQStCLENBQUM7Ozs7OztBQU0zRCxNQUFNLE9BQU8sOEJBQThCO0lBSjNDO1FBS1csWUFBTyxHQUFHLElBQUksQ0FBQztRQVN4Qjs7V0FFRztRQUNnQixXQUFNLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMvQzs7V0FFRztRQUNnQixtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7S0FTeEQ7SUFQQyxnQkFBZ0I7UUFDZCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxnQkFBOEI7UUFDN0MsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM3QyxDQUFDOzs0SEF6QlUsOEJBQThCO2dIQUE5Qiw4QkFBOEIsME5DUjNDLHF4Q0E4QmMsbWREU0QscUNBQXFDLGdRQUtyQyx5Q0FBeUM7NEZBcEN6Qyw4QkFBOEI7a0JBSjFDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDZCQUE2QjtvQkFDdkMsV0FBVyxFQUFFLDJDQUEyQztpQkFDekQ7OEJBTVUsZ0JBQWdCO3NCQUF4QixLQUFLO2dCQUlHLGVBQWU7c0JBQXZCLEtBQUs7Z0JBSWEsTUFBTTtzQkFBeEIsTUFBTTtnQkFJWSxjQUFjO3NCQUFoQyxNQUFNOztBQWNULE1BQU0sT0FBTyxxQ0FBc0MsU0FBUSxVQUFxRDs7bUlBQW5HLHFDQUFxQzt1SEFBckMscUNBQXFDOzRGQUFyQyxxQ0FBcUM7a0JBSGpELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGtDQUFrQztpQkFDN0M7O0FBTUQsTUFBTSxPQUFPLHlDQUEwQyxTQUFRLFVBQXFEOzt1SUFBdkcseUNBQXlDOzJIQUF6Qyx5Q0FBeUM7NEZBQXpDLHlDQUF5QztrQkFIckQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsc0NBQXNDO2lCQUNqRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRyYXZlbE5vdGljZUxpc3QsIERlc3RpbmF0aW9uLCBUcmF2ZWxOb3RpY2UgfSBmcm9tICdAYmFja2Jhc2UvY2FyZHMtY29tbW9uLWFuZyc7XG5pbXBvcnQgeyBCYlRlbXBsYXRlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1jYXJkcy10cmF2ZWwtbm90aWNlLWxpc3QnLFxuICB0ZW1wbGF0ZVVybDogJy4vY2FyZHMtdHJhdmVsLW5vdGljZS1saXN0LmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQ2FyZHNUcmF2ZWxOb3RpY2VMaXN0Q29tcG9uZW50IHtcbiAgcmVhZG9ubHkgaG9zdFJlZiA9IHRoaXM7XG4gIC8qKlxuICAgKiBsaXN0IG9mIGFsbCB0cmF2ZWwgbm90aWNlcy5cbiAgICovXG4gIEBJbnB1dCgpIHRyYXZlbE5vdGljZUxpc3Q6IFRyYXZlbE5vdGljZUxpc3QgfCB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBMaXN0IGZvciBhbGwgcHJvdmlkZWQgSVNPIGNvdW50cmllcy9yZWdpb25zLlxuICAgKi9cbiAgQElucHV0KCkgZGVzdGluYXRpb25MaXN0OiBEZXN0aW5hdGlvbltdIHwgdW5kZWZpbmVkO1xuICAvKipcbiAgICogRXZlbnRFbWl0dGVyIGZvciB0cmlnZ2VyaW5nIHBvc3QgZXZlbnQuXG4gICAqL1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgY3JlYXRlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAvKipcbiAgICogRXZlbnRFbWl0dGVyIGZvciB0cmlnZ2VyaW5nIGRlbGV0ZSBldmVudC5cbiAgICovXG4gIEBPdXRwdXQoKSByZWFkb25seSBkZWxldGVMaXN0SXRlbSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBvblNob3dDcmVhdGVGb3JtKCkge1xuICAgIHRoaXMuY3JlYXRlLmVtaXQoeyBnb1RvUGFnZTogJ2NyZWF0ZScgfSk7XG4gIH1cblxuICBvbkRlbGV0ZUxpc3RJdGVtKHRyYXZlbE5vdGljZUl0ZW06IFRyYXZlbE5vdGljZSkge1xuICAgIHRoaXMuZGVsZXRlTGlzdEl0ZW0uZW1pdCh0cmF2ZWxOb3RpY2VJdGVtKTtcbiAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJUcmF2ZWxOb3RpY2VMaXN0Q3VzdG9taXphYmxlXScsXG59KVxuZXhwb3J0IGNsYXNzIFRyYXZlbE5vdGljZUxpc3RDdXN0b21pemFibGVEaXJlY3RpdmUgZXh0ZW5kcyBCYlRlbXBsYXRlPENhcmRzVHJhdmVsTm90aWNlTGlzdENvbXBvbmVudCwgdW5kZWZpbmVkPiB7fVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJUcmF2ZWxOb3RpY2VMaXN0SXRlbUN1c3RvbWl6YWJsZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBUcmF2ZWxOb3RpY2VMaXN0SXRlbUN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8Q2FyZHNUcmF2ZWxOb3RpY2VMaXN0Q29tcG9uZW50LCB1bmRlZmluZWQ+IHt9XG4iLCI8bmctY29udGFpbmVyIGJiVHJhdmVsTm90aWNlTGlzdEN1c3RvbWl6YWJsZSBbYmJIb3N0UmVmXT1cImhvc3RSZWZcIj48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlIGJiVHJhdmVsTm90aWNlTGlzdEN1c3RvbWl6YWJsZSBsZXQtaG9zdFJlZj5cbiAgPGRpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItdGV4dC1hbGlnbi1yaWdodCBiYi1ibG9jayBiYi1ibG9jay0teGwgYmItc3RhY2tcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1zdGFja19faXRlbS0tcHVzaC1yaWdodFwiPlxuICAgICAgICA8YnV0dG9uIGJiQnV0dG9uIGRhdGEtcm9sZT1cImFkZC1idXR0b25cIiAoY2xpY2spPVwiaG9zdFJlZi5vblNob3dDcmVhdGVGb3JtKClcIj5cbiAgICAgICAgICA8YmItaWNvbi11aSBuYW1lPVwiYWRkXCI+PC9iYi1pY29uLXVpPlxuICAgICAgICAgIDxzcGFuIGkxOG49XCJDcmVhdGUgbmV3IHRyYXZlbCBub3RpY2UgYnV0dG9uQEBjYXJkcy50cmF2ZWwubm90aWNlLmNyZWF0ZU5ldy5idXR0b25cIj4gQ3JlYXRlIE5ldzwvc3Bhbj5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY2FyZCBjYXJkLWxnXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5XCI+XG4gICAgICAgIDxuZy1jb250YWluZXIgYmJUcmF2ZWxOb3RpY2VMaXN0SXRlbUN1c3RvbWl6YWJsZSBbYmJIb3N0UmVmXT1cImhvc3RSZWZcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+XG5cbjxuZy10ZW1wbGF0ZSBiYlRyYXZlbE5vdGljZUxpc3RJdGVtQ3VzdG9taXphYmxlIGxldC1ob3N0UmVmPlxuICA8ZGl2IGNsYXNzPVwiYmItdHJhdmVsLW5vdGljZS1saXN0IGJiLWxpc3RcIj5cbiAgICA8ZGl2IGNsYXNzPVwiYmItbGlzdF9faXRlbVwiICpuZ0Zvcj1cImxldCB0cmF2ZWxOb3RpY2VJdGVtIG9mIGhvc3RSZWYudHJhdmVsTm90aWNlTGlzdFwiPlxuICAgICAgPGJiLWNhcmRzLXRyYXZlbC1ub3RpY2UtbGlzdC1pdGVtXG4gICAgICAgIFt0cmF2ZWxOb3RpY2VJdGVtXT1cInRyYXZlbE5vdGljZUl0ZW1cIlxuICAgICAgICBbZGVzdGluYXRpb25MaXN0XT1cImhvc3RSZWYuZGVzdGluYXRpb25MaXN0XCIgXG4gICAgICAgIChkZWxldGUpPVwiaG9zdFJlZi5vbkRlbGV0ZUxpc3RJdGVtKCRldmVudClcIlxuICAgICAgPjwvYmItY2FyZHMtdHJhdmVsLW5vdGljZS1saXN0LWl0ZW0+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT4iXX0=