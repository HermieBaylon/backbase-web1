import { OnDestroy, OnInit } from '@angular/core';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import { Destination, TravelNoticeCountry } from '@backbase/cards-common-ang';
import * as i0 from "@angular/core";
declare type DestinationDisplay = {
    name: string;
    value: string;
    parent?: string;
};
export declare class CardsTravelNoticeCountrySelectorComponent implements ControlValueAccessor, OnInit, OnDestroy {
    private destinationsDisplay;
    private fullDestinationList;
    private countryListSubscription;
    destionationListControl: FormControl;
    set destinationList(value: Destination[]);
    get destinationList(): Destination[];
    get destinationListDisplay(): DestinationDisplay[];
    private readonly updateCountryList;
    onChange: (newValue: Object | string | undefined) => void;
    onTouched: () => void;
    writeValue(countries: TravelNoticeCountry[]): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CardsTravelNoticeCountrySelectorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CardsTravelNoticeCountrySelectorComponent, "bb-cards-travel-notice-country-selector", never, { "destinationList": "destinationList"; }, {}, never, never>;
}
export {};
