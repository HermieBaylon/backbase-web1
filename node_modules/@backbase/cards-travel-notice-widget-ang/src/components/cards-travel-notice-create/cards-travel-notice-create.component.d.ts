import { DatePipe } from '@angular/common';
import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';
import { Destination, PaymentCard, TravelNotice } from '@backbase/cards-common-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
export declare class CardsTravelNoticeCreateComponent implements OnInit, OnDestroy {
    private readonly fb;
    private readonly datePipe;
    readonly hostRef: this;
    /**
     * Payment card to be displayed.
     */
    paymentCards: PaymentCard[] | undefined;
    /**
     * List for all provided ISO countries/regions.
     */
    destinationList: Destination[] | undefined;
    /**
     * Cancel form for create travel notice event emitter.
     */
    readonly abortCreation: EventEmitter<any>;
    /**
     * Submit for create travel notice form event emitter.
     */
    readonly save: EventEmitter<TravelNotice>;
    currentStep: number;
    travelNoticeSubscription: Subscription | undefined;
    arrivalDateSubcription: Subscription | undefined;
    departureDateSubscription: Subscription | undefined;
    createTravelNoticeForm: FormGroup | undefined;
    dialogOpen: boolean;
    displayAlert: boolean;
    currentForm: FormGroup | undefined;
    travelNoticeItem: Partial<TravelNotice>;
    next(nextForm: FormGroup): void;
    back(prevForm: FormGroup): void;
    onCancel(): void;
    onSubmitTravelNotice(): void;
    isFieldValid(fieldName: string): boolean;
    closeConfirmationDialog: () => void;
    onAlertDismiss(): void;
    confirmCancel: () => void;
    ngOnInit(): void;
    /**
     *
     * temporary solution once datepicker is ready to validate ranges is release this method will be removed
     */
    addDateValidators(): void;
    ngOnDestroy(): void;
    private readonly updateTravelNoticeValue;
    /**
     *
     * temporary solution once datepicker is ready to validate ranges is release this method will be removed
     */
    private dateValidator;
    private truncateDate;
    private readonly currentDateValidator;
    private hasCardsSelected;
    get detailsGroup(): FormGroup;
    get cardIdsGroup(): FormGroup;
    get destinations(): AbstractControl;
    get arrivalDate(): AbstractControl;
    get departureDate(): AbstractControl;
    get contactNumber(): AbstractControl;
    constructor(fb: FormBuilder, datePipe: DatePipe);
    static ɵfac: i0.ɵɵFactoryDeclaration<CardsTravelNoticeCreateComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CardsTravelNoticeCreateComponent, "bb-cards-travel-notice-create", never, { "paymentCards": "paymentCards"; "destinationList": "destinationList"; }, { "abortCreation": "abortCreation"; "save": "save"; }, never, never>;
}
export declare class TravelNoticeCreateCustomizableDirective extends BbTemplate<CardsTravelNoticeCreateComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TravelNoticeCreateCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TravelNoticeCreateCustomizableDirective, "[bbTravelNoticeCreateCustomizable]", never, {}, {}, never>;
}
export declare class TravelNoticeDetailsStepCustomizableDirective extends BbTemplate<CardsTravelNoticeCreateComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TravelNoticeDetailsStepCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TravelNoticeDetailsStepCustomizableDirective, "[bbTravelNoticeDetailsStepCustomizable]", never, {}, {}, never>;
}
export declare class TravelNoticeSelectCardsCustomizableDirective extends BbTemplate<CardsTravelNoticeCreateComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TravelNoticeSelectCardsCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TravelNoticeSelectCardsCustomizableDirective, "[bbTravelNoticeSelectCardsCustomizable]", never, {}, {}, never>;
}
export declare class TravelNoticeConfirmStepCustomizableDirective extends BbTemplate<CardsTravelNoticeCreateComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TravelNoticeConfirmStepCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TravelNoticeConfirmStepCustomizableDirective, "[bbTravelNoticeConfirmStepCustomizable]", never, {}, {}, never>;
}
export declare class TravelNoticeStepperCustomizableDirective extends BbTemplate<CardsTravelNoticeCreateComponent, undefined> {
    static ɵfac: i0.ɵɵFactoryDeclaration<TravelNoticeStepperCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TravelNoticeStepperCustomizableDirective, "[bbTravelNoticeStepperCustomizable]", never, {}, {}, never>;
}
