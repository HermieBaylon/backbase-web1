{"version":3,"file":"backbase-cards-travel-notice-widget-ang.js","sources":["../../../../libs/cards-travel-notice-widget-ang/src/services/travel-notice-dates-helper.service.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-list/cards-travel-notice-status-badge.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-list/cards-travel-notice-status-badge.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-payment-card/cards-travel-notice-payment-card.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-payment-card/cards-travel-notice-payment-card.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-list/cards-travel-notice-list-item.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-list/cards-travel-notice-list-item.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-list/cards-travel-notice-list.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-list/cards-travel-notice-list.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-create/cards-travel-notice-country-selector.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-create/cards-travel-notice-country-selector.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-create/cards-travel-notice-checkbox-cards.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-create/cards-travel-notice-checkbox-cards.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-create/cards-travel-notice-confirm-step.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-create/cards-travel-notice-confirm-step.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-create/cards-travel-notice-create.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-create/cards-travel-notice-create.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-container/cards-travel-notice-container.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-container/cards-travel-notice-container.component.html","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-widget/cards-travel-notice-widget.component.ts","../../../../libs/cards-travel-notice-widget-ang/src/components/cards-travel-notice-widget/cards-travel-notice-widget.component.html","../../../../libs/cards-travel-notice-widget-ang/src/cards-travel-notice-widget.module.ts","../../../../libs/cards-travel-notice-widget-ang/backbase-cards-travel-notice-widget-ang.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TravelNoticeDatesHelperService {\n  isPastDate(date: string | Date) {\n    const time = new Date(date);\n\n    return this.trucanteDate(time) < this.trucanteDate(new Date());\n  }\n\n  isPastDateOrToday(date: string | Date) {\n    return this.isPastDate(date) || this.areDateEqual(new Date(), new Date(date));\n  }\n\n  isUpcomingDate(date: string | Date) {\n    const time = new Date(date);\n\n    return this.trucanteDate(time) > this.trucanteDate(new Date());\n  }\n\n  isUpcomingDateOrToday(date: string | Date) {\n    return this.isUpcomingDate(date) || this.areDateEqual(new Date(), new Date(date));\n  }\n\n  isDateInBetween(date1: string | Date, date2: string | Date) {\n    return this.isPastDateOrToday(date1) && this.isUpcomingDateOrToday(date2);\n  }\n\n  private areDateEqual(date1: Date, date2: Date) {\n    return this.trucanteDate(date1) === this.trucanteDate(date2);\n  }\n\n  private trucanteDate(date: Date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n\n    return date.getTime();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { TravelNotice } from '@backbase/cards-common-ang';\nimport { TravelNoticeDatesHelperService } from '../../services/travel-notice-dates-helper.service';\n\n@Component({\n  selector: 'bb-cards-travel-notice-status-badge',\n  templateUrl: './cards-travel-notice-status-badge.component.html',\n})\nexport class CardsTravelNoticeStatusBadgeComponent {\n  /**\n   * travel notice item.\n   */\n  @Input() travelNoticeItem: TravelNotice | undefined;\n\n  constructor(public helper: TravelNoticeDatesHelperService) {}\n}\n","<div class=\"bb-stack bb-block bb-block--md\" >\n  <ng-container *ngIf=\"helper.isDateInBetween(travelNoticeItem!.departureDate,travelNoticeItem!.arrivalDate)\">\n    <bb-badge-ui\n      text=\"Active\"\n      i18n-text=\"Active label|Text for the active label@@cards.travelNotice.active\"\n      color=\"success\"\n    ></bb-badge-ui>\n  </ng-container>\n\n  <ng-container *ngIf=\"helper.isUpcomingDate(travelNoticeItem!.departureDate) && helper.isUpcomingDate(travelNoticeItem!.arrivalDate)\">\n    <bb-badge-ui\n      text=\"Scheduled\"\n      i18n-text=\"Scheduled label|Text for the scheduled label@@cards.travelNotice.scheduled\"\n      color=\"info\"\n    ></bb-badge-ui>\n  </ng-container>\n\n  <ng-container *ngIf=\"helper.isPastDate(travelNoticeItem!.departureDate) && helper.isPastDate(travelNoticeItem!.arrivalDate)\">\n    <bb-badge-ui\n      text=\"Expired\"\n      i18n-text=\"Expired label|Text for the expired label@@cards.travelNotice.expired\"\n      color=\"danger\"\n    ></bb-badge-ui>\n  </ng-container>\n</div>","import { Component, Input } from '@angular/core';\nimport {\n  PaymentCard,\n  PaymentCardDisplayState,\n  PaymentCardLockStatus,\n  PaymentCardStatus,\n} from '@backbase/cards-common-ang';\n@Component({\n  selector: 'bb-cards-travel-notice-payment-card',\n  templateUrl: 'cards-travel-notice-payment-card.component.html',\n})\nexport class CardsTravelNoticePaymentCardComponent {\n  @Input() paymentCard: PaymentCard | undefined;\n\n  getDisplayState(): PaymentCardDisplayState | undefined {\n    if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Inactive) {\n      return 'INACTIVE';\n    }\n\n    if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Canceled) {\n      return 'CANCELLED';\n    }\n\n    if (this.paymentCard && this.paymentCard.status === PaymentCardStatus.Expired) {\n      return 'EXPIRED';\n    }\n\n    if (this.paymentCard && this.paymentCard.lockStatus === PaymentCardLockStatus.Locked) {\n      return 'LOCKED';\n    }\n\n    return undefined;\n  }\n}\n","<bb-payment-card-state-wrapper-ui [state]=\"getDisplayState()\">\n  <bb-payment-card-ui [paymentCard]=\"paymentCard\"></bb-payment-card-ui>\n</bb-payment-card-state-wrapper-ui>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Destination, getCountryName, TravelNotice, TravelNoticeCountry } from '@backbase/cards-common-ang';\nimport { TravelNoticeDatesHelperService } from '../../services/travel-notice-dates-helper.service';\n\n@Component({\n  selector: 'bb-cards-travel-notice-list-item',\n  templateUrl: './cards-travel-notice-list-item.component.html',\n})\nexport class CardsTravelNoticeListItemComponent {\n  readonly hostRef = this;\n  /**\n   * Travel notice item.\n   */\n  @Input() travelNoticeItem: TravelNotice | undefined;\n  /**\n   * List for all provided ISO countries/regions.\n   */\n  @Input() destinationList: Destination[] | undefined;\n  /**\n   * EventEmitter for triggering delete event.\n   */\n  @Output() readonly delete = new EventEmitter();\n\n  dialogOpen = false;\n\n  areCardsOpen = false;\n\n  getCountryName(travelNoticeCountry: TravelNoticeCountry) {\n    return getCountryName(this.destinationList, travelNoticeCountry);\n  }\n\n  onDelete() {\n    this.dialogOpen = true;\n  }\n\n  onCancel = () => {\n    this.dialogOpen = false;\n  };\n\n  onConfirm = () => {\n    this.delete.emit(this.travelNoticeItem);\n    this.dialogOpen = false;\n  };\n\n  toggleCardsVisibility() {\n    this.areCardsOpen = !this.areCardsOpen;\n  }\n\n  constructor(public helper: TravelNoticeDatesHelperService) {}\n}\n","<div \n  class=\"bb-travel-notice-list-item\"\n  [ngClass]=\"{'bb-travel-notice-list-item--expired': hostRef.helper.isPastDate(travelNoticeItem!.arrivalDate)}\"\n>\n   <!-- status -->\n  <bb-cards-travel-notice-status-badge \n    [travelNoticeItem]=\"hostRef.travelNoticeItem\"\n  ></bb-cards-travel-notice-status-badge>\n\n  <div class=\"bb-stack bb-block bb-block--md bb-stack--align-top\">\n    <h3 class=\"bb-stack__item bb-travel-notice-header\">\n      <div>\n        <ng-container *ngFor=\"let item of hostRef.travelNoticeItem?.destinations; first as isFirst; last as isLast\">\n          <ng-container *ngIf=\"!isLast && !isFirst\">, </ng-container>\n          <ng-container *ngIf=\"!isFirst && isLast\">&nbsp;</ng-container>\n          <ng-container\n            i18n=\"And@@cards.travel.notice.list.countries.and\" \n            *ngIf=\"!isFirst && isLast\"\n          >and</ng-container>\n          <ng-container *ngIf=\"!isFirst && isLast\">&nbsp;</ng-container>\n          <ng-container>{{getCountryName(item)}}</ng-container>\n        </ng-container>\n      </div>\n    </h3>\n    \n    <div class=\"bb-stack__item bb-stack__item--push-right\">\n      <button bbButton color=\"unstyled\" (click)=\"onDelete()\">\n        <bb-icon-ui name=\"delete\" aria-label=\"Delete travel notice\" i18n-aria-label=\"Delete travel notice button@@cards.travel.notice.list.button.delete\"></bb-icon-ui>\n      </button>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"bb-block bb-block--md\">\n        <div>\n          <bb-icon-ui name=\"flight-takeoff\" size=\"sm\"></bb-icon-ui>\n          <span class=\"bb-text-support bb-travel-notice-list__label\"\n            i18n='Travel notice list Departure date header@@cards.travel.notice.list.departure.date.header'\n          > Departure date: </span>\n        </div>\n        <div class=\"bb-travel-notice-list-item__departure-date\">{{ travelNoticeItem?.departureDate | date }}</div>\n      </div>\n     \n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"bb-block bb-block--md\">\n        <div>\n          <bb-icon-ui name=\"flight-land\" size=\"sm\"></bb-icon-ui>\n          <span \n            class=\"bb-text-support bb-travel-notice-list__label\"\n            i18n='Travel notice Return date header@@cards.travel.notice.list.return.date.header'\n          > Return date: </span>\n        </div>\n        <div class=\"bb-travel-notice-list-item__return-date\">{{ travelNoticeItem?.arrivalDate | date }}</div>\n      </div>\n    </div>\n  </div>\n  <div [ngbCollapse]=\"!hostRef.areCardsOpen\" class=\"bb-block bb-block--sm\">\n    <div  class=\"bb-block bb-block--md\" *ngIf=\"hostRef.travelNoticeItem?.contact?.phoneNumber\">\n      <div>\n        <bb-icon-ui name=\"local-phone\" size=\"sm\"></bb-icon-ui>\n        <span class=\"bb-text-support bb-travel-notice-list__label\"\n          i18n='Travel notice list Contact number header@@cards.travel.notice.list.contactNumber.header'\n        > Contact number: </span>\n      </div>\n      <div>\n        <div>{{hostRef.travelNoticeItem?.contact?.phoneNumber}}</div>\n      </div>\n    </div>\n    <div>\n      <div class=\"bb-block bb-block--md\" data-role=\"selectCards header\">\n        <div\n        class=\"bb-text-bold\"\n        i18n='Travel notice list Selected Cards header@@cards.travel.notice.list.selectCards.header'\n        >Selected cards</div>\n      </div>\n      <div class=\"bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__item bb-block bb-block--md\" *ngFor=\"let paymentCard of hostRef.travelNoticeItem?.cards\">\n          <bb-cards-travel-notice-payment-card [paymentCard]=\"paymentCard\"></bb-cards-travel-notice-payment-card>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div>\n    <button bbButton data-role=\"see-details-button\" buttonSize=\"sm\" color=\"link-text\" (click)=\"hostRef.toggleCardsVisibility()\">\n      <span \n        class=\"bb-travel-notice-list__label\"\n        i18n='Travel notice list show less button@@cards.travel.notice.list.seeLess.button' \n        *ngIf=\"areCardsOpen\"\n      >\n        Show less\n      </span>\n      <span \n        class=\"bb-travel-notice-list__label\"\n        i18n='Travel notice list show more button@@cards.travel.notice.list.seeMore.button' \n        *ngIf=\"!areCardsOpen\"\n      >\n        Show more\n      </span>\n      <bb-icon-ui [name]=\"areCardsOpen?'toggle-up':'toggle-down'\" size=\"md\"></bb-icon-ui>\n    </button>\n  </div>\n</div>\n<!-- delete confirmation model  -->\n<bb-modal-ui [isOpen]=\"hostRef.dialogOpen\" (cancel)=\"hostRef.onCancel()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <h2 i18n=\"Delete Travel Notice@@cards.delete.travel.notice.deleteTravelNotice.modal.header\">Delete travel notice?</h2>\n      <div>\n        <button bbButton color=\"unstyled\" (click)=\"hostRef.onCancel()\">\n          <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span i18n=\"Delete confirmation text@@cards.delete.travel.notice.deleteTravelNotice.modal.body\">\n        This travel notice information will be permanently deleted.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n  <bb-modal-footer-ui #footerRef>\n    <ng-template bbCustomModalFooter>\n      <button bbButton (click)=\"hostRef.onCancel()\" color=\"link\">\n        <span i18n=\"Cancel button text@@messages.createMessage.composeMessageModal.cancel.button\">\n          Keep it\n        </span>\n      </button>\n      <button bbButton (click)=\"hostRef.onConfirm()\" color=\"danger\">\n        <span i18n=\"Delete button text@@messages.createMessage.composeMessageModal.delete.button\">\n          Delete travel notice\n        </span>\n      </button>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n<!-- end of model -->","import { Component, Input, Output, EventEmitter, Directive } from '@angular/core';\nimport { TravelNoticeList, Destination, TravelNotice } from '@backbase/cards-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-cards-travel-notice-list',\n  templateUrl: './cards-travel-notice-list.component.html',\n})\nexport class CardsTravelNoticeListComponent {\n  readonly hostRef = this;\n  /**\n   * list of all travel notices.\n   */\n  @Input() travelNoticeList: TravelNoticeList | undefined;\n  /**\n   * List for all provided ISO countries/regions.\n   */\n  @Input() destinationList: Destination[] | undefined;\n  /**\n   * EventEmitter for triggering post event.\n   */\n  @Output() readonly create = new EventEmitter();\n  /**\n   * EventEmitter for triggering delete event.\n   */\n  @Output() readonly deleteListItem = new EventEmitter();\n\n  onShowCreateForm() {\n    this.create.emit({ goToPage: 'create' });\n  }\n\n  onDeleteListItem(travelNoticeItem: TravelNotice) {\n    this.deleteListItem.emit(travelNoticeItem);\n  }\n}\n\n@Directive({\n  selector: '[bbTravelNoticeListCustomizable]',\n})\nexport class TravelNoticeListCustomizableDirective extends BbTemplate<CardsTravelNoticeListComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTravelNoticeListItemCustomizable]',\n})\nexport class TravelNoticeListItemCustomizableDirective extends BbTemplate<CardsTravelNoticeListComponent, undefined> {}\n","<ng-container bbTravelNoticeListCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTravelNoticeListCustomizable let-hostRef>\n  <div>\n    <div class=\"bb-text-align-right bb-block bb-block--xl bb-stack\">\n      <div class=\"bb-stack__item bb-stack__item--push-right\">\n        <button bbButton data-role=\"add-button\" (click)=\"hostRef.onShowCreateForm()\">\n          <bb-icon-ui name=\"add\"></bb-icon-ui>\n          <span i18n=\"Create new travel notice button@@cards.travel.notice.createNew.button\"> Create New</span>\n        </button>\n      </div>\n    </div>\n    <div class=\"card card-lg\">\n      <div class=\"card-body\">\n        <ng-container bbTravelNoticeListItemCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbTravelNoticeListItemCustomizable let-hostRef>\n  <div class=\"bb-travel-notice-list bb-list\">\n    <div class=\"bb-list__item\" *ngFor=\"let travelNoticeItem of hostRef.travelNoticeList\">\n      <bb-cards-travel-notice-list-item\n        [travelNoticeItem]=\"travelNoticeItem\"\n        [destinationList]=\"hostRef.destinationList\" \n        (delete)=\"hostRef.onDeleteListItem($event)\"\n      ></bb-cards-travel-notice-list-item>\n    </div>\n  </div>\n</ng-template>","import { Component, forwardRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Destination, TravelNoticeCountry } from '@backbase/cards-common-ang';\nimport { Subscription } from 'rxjs';\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype DestinationDisplay = { name: string; value: string; parent?: string };\n\n@Component({\n  selector: 'bb-cards-travel-notice-country-selector',\n  templateUrl: 'cards-travel-notice-country-selector.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      // eslint-disable-next-line @angular-eslint/no-forward-ref\n      useExisting: forwardRef(() => CardsTravelNoticeCountrySelectorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class CardsTravelNoticeCountrySelectorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private destinationsDisplay: DestinationDisplay[] | undefined;\n  private fullDestinationList: Destination[] | undefined;\n  private countryListSubscription: Subscription | undefined;\n  destionationListControl = new FormControl([]);\n  // eslint-disable-next-line\n  @Input()\n  set destinationList(value: Destination[]) {\n    this.destinationsDisplay = [\n      ...value.map((item) => ({\n        name: item.name,\n        value: item.code,\n      })),\n      ...value\n        .filter((item) => item.regions !== undefined)\n        .reduce(\n          (acc, { regions = [], code: countryCode }) => [\n            ...acc,\n            ...regions.map((region) => ({\n              name: `${region.name} (${countryCode})`,\n              value: region.code,\n              parent: countryCode,\n            })),\n          ],\n          [] as DestinationDisplay[],\n        ),\n    ].sort((left, right) => {\n      if (left.name === right.name) {\n        return 0;\n      }\n\n      return left.name > right.name ? 1 : -1;\n    });\n\n    this.fullDestinationList = value;\n  }\n\n  get destinationList() {\n    return this.fullDestinationList || [];\n  }\n\n  get destinationListDisplay(): DestinationDisplay[] {\n    return this.destinationsDisplay || [];\n  }\n\n  private readonly updateCountryList = (destinations: DestinationDisplay[]) => {\n    this.onChange(\n      destinations.map((item) => ({\n        country: item.parent ? item.parent : item.value,\n        region: item.parent && item.value,\n      })),\n    );\n  };\n\n  onChange: (newValue: Object | string | undefined) => void = () => {};\n\n  onTouched: () => void = () => {};\n\n  writeValue(countries: TravelNoticeCountry[]): void {\n    this.destionationListControl.setValue(\n      countries.map(({ country, region }) => (region ? `${country}:${region}` : country)),\n    );\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  ngOnInit() {\n    this.countryListSubscription = this.destionationListControl.valueChanges.subscribe(this.updateCountryList);\n  }\n\n  ngOnDestroy() {\n    if (this.countryListSubscription) {\n      this.countryListSubscription.unsubscribe();\n    }\n  }\n}\n","<ng-select \n  [items]=\"destinationListDisplay\"\n  class=\"bb-country-selector\"\n  [hideSelected]=\"true\"\n  [multiple]=\"true\"\n  bindLabel=\"name\"\n  [formControl]=\"destionationListControl\"\n  aria-label=\"Search or select countries\"\n  i18n-aria-label=\"Search or select countries aria-label@@cards.create.travel.notice.country.dropdown.tagSelector.aria-label\"\n  placeholder=\"Search or select countries\"\n  i18n-placeholder=\"Search or select countries@@cards.create.travel.notice.country.dropdown.tagSelector.placeholder\"\n></ng-select>","import { Component, forwardRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { PaymentCard } from '@backbase/cards-common-ang';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'bb-cards-travel-notice-checkbox-cards',\n  templateUrl: 'cards-travel-notice-checkbox-cards.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      // eslint-disable-next-line @angular-eslint/no-forward-ref\n      useExisting: forwardRef(() => CardsTravelNoticeCheckboxCardsComponent),\n      multi: true,\n    },\n  ],\n})\nexport class CardsTravelNoticeCheckboxCardsComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCards: PaymentCard[] | undefined;\n\n  checkBoxCardsForm: FormGroup | undefined;\n  indeterminate = false;\n  private parentSubscription: Subscription | undefined;\n  private childrenSubscription: Subscription | undefined;\n\n  private createCardsObjectWithDefaultValue(\n    group: Array<any> = [],\n    keyFinder: (item: any) => string,\n    defaultValue: any,\n  ): { [key: string]: any } {\n    return group.reduce(\n      (acc, cur) => ({\n        ...acc,\n        [keyFinder(cur)]: defaultValue,\n      }),\n      {},\n    );\n  }\n\n  onChange: (newValue: Object | string | undefined) => void = () => {};\n\n  onTouched: () => void = () => {};\n\n  isIndeterminate = () => {\n    if (this.checkBoxCardsForm) {\n      const cardsIdsControl = (this.checkBoxCardsForm.controls['cardIds'] as FormGroup).controls;\n      const elements = Object.keys(cardsIdsControl);\n      const actives = elements.reduce((previous, item) => (cardsIdsControl[item].value ? previous + 1 : previous), 0);\n\n      return actives !== 0 && actives < elements.length;\n    }\n\n    return false;\n  };\n\n  private readonly parentChange = (value: any) => {\n    if (this.checkBoxCardsForm) {\n      const cardsIdsControl = this.checkBoxCardsForm.controls['cardIds'] as FormGroup;\n      const newValue = this.createCardsObjectWithDefaultValue(\n        Object.keys(cardsIdsControl.controls),\n        (item: string) => item,\n        value,\n      );\n      cardsIdsControl.setValue(newValue);\n    }\n  };\n\n  private readonly childChange = (cardIds: any) => {\n    this.indeterminate = this.isIndeterminate();\n    const result = Object.keys(cardIds || {}).filter((item: any) => cardIds[item] === true);\n    this.onChange(result.map((item) => this.paymentCards && this.paymentCards.find((card) => card.id === item)));\n  };\n\n  private hasCardsSelected(control: any) {\n    const cards = Object.keys(control.controls).find((item: any) => control.controls[item].value === true);\n\n    // eslint-disable-next-line no-null/no-null\n    return cards ? null : { empty: true };\n  }\n\n  private createForm() {\n    const cardsFormGroup = this.createCardsObjectWithDefaultValue(this.paymentCards, (card: PaymentCard) => card.id, [\n      false,\n    ]);\n\n    this.checkBoxCardsForm = this.fb.group({\n      parent: [false],\n      cardIds: this.fb.group(cardsFormGroup),\n    });\n\n    this.checkBoxCardsForm.controls['cardIds'].setValidators(this.hasCardsSelected);\n  }\n\n  writeValue(cards: PaymentCard[]): void {\n    if (this.checkBoxCardsForm && cards && !!this.paymentCards) {\n      const cardIds = this.checkBoxCardsForm.controls['cardIds'] as FormGroup;\n      cards.forEach((item) => cardIds.controls[item.id].setValue(true));\n      if (cards.length === this.paymentCards.length) {\n        this.checkBoxCardsForm.patchValue({ parent: true });\n      }\n    }\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    if (this.checkBoxCardsForm) {\n      const parentGroup = this.checkBoxCardsForm.controls['parent'];\n      const childrenGroup = this.checkBoxCardsForm.controls['cardIds'];\n      this.parentSubscription = parentGroup.valueChanges.subscribe(this.parentChange);\n      this.childrenSubscription = childrenGroup.valueChanges.subscribe(this.childChange);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.parentSubscription) {\n      this.parentSubscription.unsubscribe();\n    }\n\n    if (this.childrenSubscription) {\n      this.childrenSubscription.unsubscribe();\n    }\n  }\n\n  constructor(private readonly fb: FormBuilder) {}\n}\n","<form [formGroup]=\"checkBoxCardsForm!\">\n  <ul class=\"list-unstyled\">\n    <li>\n      <div class=\"bb-block bb-block--xl\">\n        <bb-input-checkbox-ui \n          formControlName=\"parent\" \n          label=\"Select all cards\"\n          i18n-label=\"Select all cards@@cards.create.travel.notice.checkbox.label\"\n          i18n=\"Select all cards@@cards.create.travel.notice.checkbox.child\"\n          [indeterminate]=\"indeterminate\"\n        >\n          label=\"Select all cards\"\n        </bb-input-checkbox-ui>\n      </div>\n      <!--card -->\n      <div class=\"row bb-create-travel-notice-card-group\" formGroupName=\"cardIds\">\n        <ng-container *ngFor=\"let paymentCard of paymentCards\">\n          <div class=\"col-lg-6\">\n            <div class=\"bb-block bb-block--xl\">\n              <div class=\"bb-stack\">\n                <div class=\"bb-stack__item\">\n                  <bb-input-checkbox-ui [formControlName]=\"paymentCard.id\">\n                    <div class=\"bb-create-travel-notice-card-group__payment-card\">\n                      <bb-cards-travel-notice-payment-card [paymentCard]=\"paymentCard\"></bb-cards-travel-notice-payment-card>\n                    </div>\n                  </bb-input-checkbox-ui>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <!-- end card -->\n    </li>\n  </ul>\n</form>","import { Component, Input } from '@angular/core';\nimport {\n  Destination,\n  getCountryName,\n  PaymentCard,\n  TravelNotice,\n  TravelNoticeCountry,\n} from '@backbase/cards-common-ang';\n\n@Component({\n  selector: 'bb-cards-travel-notice-confirm-step',\n  templateUrl: './cards-travel-notice-confirm-step.component.html',\n})\nexport class CardsTravelNoticeConfirmStepComponent {\n  /**\n   * Travel notice object.\n   */\n  @Input() travelNoticeItem: TravelNotice | undefined;\n  /**\n   * List of all selected cards.\n   */\n  @Input() selectedCards: PaymentCard[] | undefined;\n  /**\n   * List for all provided ISO countries/regions.\n   */\n  @Input() destinationList: Destination[] | undefined;\n\n  getCountryName(travelNoticeCountry: TravelNoticeCountry) {\n    return getCountryName(this.destinationList, travelNoticeCountry);\n  }\n}\n","<div class=\"bb-create-travel-notice-review\">\n  <h3 class=\"bb-block bb-block--lg\"\n    i18n=\"Travel notice create details header@@cards.travel.notice.create.details.confirm.header\">Travel\n    details\n  </h3>\n  <div class=\"bb-block bb-block--lg\">\n    <div>\n      <span class=\"bb-inline-stack\">\n        <bb-icon-ui class=\"bb-inline-stack__item\" name=\"location-on\" size=\"sm\"></bb-icon-ui>\n      <span \n        class=\"bb-text-support bb-inline-stack__item bb-travel-notice-list__label\"\n        i18n=\"Travel notice destinations@@cards.create.travel.notice.confirm.destinations.input\"\n      >Destination(s):</span>\n      </span>\n    </div>\n    <div data-role=\"countries-label\">\n      <span *ngFor=\"let item of  travelNoticeItem?.destinations; first as isFirst; last as isLast\">\n        <span *ngIf=\"!isLast && !isFirst\">, </span>\n        <span *ngIf=\"!isFirst && isLast\">&nbsp;</span>\n        <span i18n=\"And@@cards.travel.notice.list.countries.and\" *ngIf=\"!isFirst && isLast\">and</span>\n        <span *ngIf=\"!isFirst && isLast\">&nbsp;</span>\n        <span>{{getCountryName(item)}}</span>\n      </span>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-3\">\n      <div class=\"bb-block bb-block--lg\">\n        <div>\n          <span class=\"bb-inline-stack\">\n            <bb-icon-ui class=\"bb-inline-stack__item\" name=\"flight-takeoff\" size=\"sm\" [cropped]=\"true\"></bb-icon-ui>\n          <span \n            class=\"bb-text-support bb-inline-stack__item bb-travel-notice-list__label\"\n            i18n='Create travel notice confirm Departure date header@@cards.create.travel.notice.confirm.departure.date.header'\n          >Departure date: </span>\n          </span>\n        </div>\n        <div data-role=\"departure-date-label\">{{ travelNoticeItem?.departureDate | date }}</div>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <div [ngClass]=\"{'bb-block bb-block--lg': travelNoticeItem?.contact?.phoneNumber, 'bb-block bb-block--xl': !(travelNoticeItem?.contact?.phoneNumber)}\">\n        <div>\n          <span class=\"bb-inline-stack\">\n            <bb-icon-ui class=\"bb-inline-stack__item\" name=\"flight-land\" size=\"sm\"></bb-icon-ui>\n          <span \n            class=\"bb-text-support bb-inline-stack__item bb-travel-notice-list__label\"\n            i18n='Create travel notice Return date header@@cards.create.travel.notice.confirm.return.date.header'\n          >Return date:</span>\n          </span>\n        </div>\n        <div data-role=\"arrival-date-label\">{{ travelNoticeItem?.arrivalDate | date }}</div>\n      </div>\n    </div>\n  </div>\n  <div class=\"bb-block bb-block--xl\" *ngIf=\"travelNoticeItem?.contact?.phoneNumber\">\n    <div>\n      <span class=\"bb-inline-stack\">\n        <bb-icon-ui class=\"bb-inline-stack__item\" name=\"local-phone\" size=\"sm\"></bb-icon-ui>\n      <span \n        class=\"bb-text-support bb-inline-stack__item bb-travel-notice-list__label\"\n        i18n='Create travel notice list Contact number header@@cards.create.travel.notice.confirm.contactNumber.header'\n      >Contact number:\n      </span>\n      </span>\n    </div>\n    <div>\n      <div data-role=\"contact-number-label\">{{ travelNoticeItem?.contact?.phoneNumber}}</div>\n    </div>\n  </div>\n  <div>\n    <h3 \n      i18n=\"Create travel notice confirm Selected Cards header@@cards.create.travel.notice.confirm.selectCards.header\"\n      class=\"bb-block bb-block--lg\"\n    >\n      Selected cards\n    </h3>\n    <div class=\"bb-stack bb-stack--wrap\">\n      <div class=\"bb-stack__item\" *ngFor=\"let paymentCard of selectedCards\">\n        <div class=\"bb-block bb-block--md\">\n          <bb-cards-travel-notice-payment-card [paymentCard]=\"paymentCard\"></bb-cards-travel-notice-payment-card>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { DatePipe } from '@angular/common';\nimport { Component, Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Destination, PaymentCard, TravelNotice } from '@backbase/cards-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'bb-cards-travel-notice-create',\n  templateUrl: './cards-travel-notice-create.component.html',\n  providers: [DatePipe],\n})\nexport class CardsTravelNoticeCreateComponent implements OnInit, OnDestroy {\n  readonly hostRef = this;\n\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCards: PaymentCard[] | undefined;\n  /**\n   * List for all provided ISO countries/regions.\n   */\n  @Input() destinationList: Destination[] | undefined;\n  /**\n   * Cancel form for create travel notice event emitter.\n   */\n  @Output() readonly abortCreation = new EventEmitter();\n  /**\n   * Submit for create travel notice form event emitter.\n   */\n  @Output() readonly save = new EventEmitter<TravelNotice>();\n\n  currentStep = 1;\n  travelNoticeSubscription: Subscription | undefined;\n  arrivalDateSubcription: Subscription | undefined;\n  departureDateSubscription: Subscription | undefined;\n  createTravelNoticeForm: FormGroup | undefined;\n\n  dialogOpen = false;\n  displayAlert = false;\n\n  currentForm: FormGroup | undefined;\n  travelNoticeItem: Partial<TravelNotice> = {};\n\n  next(nextForm: FormGroup) {\n    if (this.currentForm) {\n      this.currentForm.markAllAsTouched();\n      this.currentForm.updateValueAndValidity();\n\n      if (this.currentStep === 2) {\n        this.displayAlert = this.currentForm.invalid;\n      }\n\n      if (this.currentForm.valid) {\n        this.currentStep += 1;\n        this.currentForm = nextForm;\n      }\n    }\n  }\n\n  back(prevForm: FormGroup) {\n    this.currentStep -= 1;\n    this.currentForm = prevForm;\n  }\n\n  onCancel(): void {\n    this.dialogOpen = true;\n  }\n\n  onSubmitTravelNotice(): void {\n    this.save.emit(this.travelNoticeItem as TravelNotice);\n  }\n\n  isFieldValid(fieldName: string) {\n    const control = this.detailsGroup.get(fieldName);\n\n    return !!control && (control.valid || control.untouched);\n  }\n\n  closeConfirmationDialog = () => {\n    this.dialogOpen = false;\n  };\n\n  onAlertDismiss() {\n    this.displayAlert = false;\n  }\n\n  confirmCancel = () => {\n    this.closeConfirmationDialog();\n    this.abortCreation.emit({ goToPage: 'list' });\n  };\n\n  ngOnInit() {\n    if (!this.paymentCards) return;\n    this.createTravelNoticeForm = this.fb.group({\n      details: this.fb.group({\n        destinations: [\n          [],\n          (control: AbstractControl) =>\n            // eslint-disable-next-line , no-null/no-null\n            control.value && control.value.length > 0 ? null : { required: 'item required' },\n        ],\n        departureDate: [''],\n        arrivalDate: [''],\n        contactNumber: ['', Validators.pattern('^[0-9()-+ ]*$')],\n      }),\n      cardIds: [this.paymentCards ? this.paymentCards : []],\n    });\n\n    this.createTravelNoticeForm.markAsPristine();\n\n    this.travelNoticeSubscription = this.createTravelNoticeForm.valueChanges.subscribe(this.updateTravelNoticeValue);\n    this.currentForm = this.detailsGroup;\n    this.cardIdsGroup.setValidators(this.hasCardsSelected);\n    this.addDateValidators();\n  }\n  /**\n   *\n   * temporary solution once datepicker is ready to validate ranges is release this method will be removed\n   */\n  addDateValidators() {\n    if (!!this.createTravelNoticeForm && this.departureDate && this.arrivalDate) {\n      this.departureDate.setValidators([Validators.required, this.dateValidator('arrivalDate', 'departureDate')]);\n\n      this.arrivalDate.setValidators([\n        Validators.required,\n        this.currentDateValidator,\n        this.dateValidator('arrivalDate', 'departureDate'),\n      ]);\n\n      this.departureDateSubscription = this.departureDate.valueChanges.subscribe(() => {\n        this.arrivalDate.updateValueAndValidity({ emitEvent: false });\n      });\n\n      this.arrivalDateSubcription = this.arrivalDate.valueChanges.subscribe(() => {\n        this.departureDate.updateValueAndValidity({ emitEvent: false });\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.travelNoticeSubscription) {\n      this.travelNoticeSubscription.unsubscribe();\n    }\n\n    if (this.arrivalDateSubcription) {\n      this.arrivalDateSubcription.unsubscribe();\n    }\n\n    if (this.departureDateSubscription) {\n      this.departureDateSubscription.unsubscribe();\n    }\n  }\n\n  private readonly updateTravelNoticeValue = (createTravelNoticeForm: any) => {\n    const { details, cardIds: cards } = createTravelNoticeForm;\n\n    if (cards) {\n      this.travelNoticeItem = {\n        ...this.travelNoticeItem,\n        cards,\n      };\n    }\n\n    if (details) {\n      this.travelNoticeItem = {\n        ...this.travelNoticeItem,\n        destinations: details.destinations,\n        contact: {\n          phoneNumber: details.contactNumber + '',\n        },\n      };\n    }\n\n    if (this.departureDate.valid) {\n      this.travelNoticeItem = {\n        ...this.travelNoticeItem,\n        departureDate: this.datePipe.transform(details.departureDate, 'yyyy-MM-dd') as string,\n      };\n    }\n\n    if (this.arrivalDate.valid) {\n      this.travelNoticeItem = {\n        ...this.travelNoticeItem,\n        arrivalDate: this.datePipe.transform(details.arrivalDate, 'yyyy-MM-dd') as string,\n      };\n    }\n\n    this.displayAlert = false;\n  };\n\n  /**\n   *\n   * temporary solution once datepicker is ready to validate ranges is release this method will be removed\n   */\n  private dateValidator(fieldName1: string, fieldName2: string) {\n    return () => {\n      const formControl1 = this.detailsGroup.get(fieldName1) as AbstractControl;\n      const formControl2 = this.detailsGroup.get(fieldName2) as AbstractControl;\n      const date1 = new Date(formControl1.value).getTime();\n      const date2 = new Date(formControl2.value).getTime();\n\n      // eslint-disable-next-line , no-null/no-null\n      return date1 < date2 ? { invalidDate: true } : null;\n    };\n  }\n\n  private truncateDate(date: Date = new Date()) {\n    const newDate = new Date(date);\n    newDate.setHours(0, 0, 0, 0);\n\n    return newDate;\n  }\n\n  private readonly currentDateValidator = (control: AbstractControl) => {\n    const returnDate = new Date(control.value);\n    const currentDate = this.truncateDate();\n\n    // eslint-disable-next-line , no-null/no-null\n    return returnDate.getTime() < currentDate.getTime() ? { invalidCurrentDate: true } : null;\n  };\n\n  private hasCardsSelected(control: AbstractControl) {\n    const cards = control.value;\n\n    // eslint-disable-next-line no-null/no-null\n    return cards.length === 0 ? { empty: true } : null;\n  }\n\n  get detailsGroup(): FormGroup {\n    return (this.createTravelNoticeForm as FormGroup).get('details') as FormGroup;\n  }\n  get cardIdsGroup(): FormGroup {\n    return (this.createTravelNoticeForm as FormGroup).get('cardIds') as FormGroup;\n  }\n\n  get destinations(): AbstractControl {\n    return this.detailsGroup.get('destinations') as AbstractControl;\n  }\n  get arrivalDate(): AbstractControl {\n    return this.detailsGroup.get('arrivalDate') as AbstractControl;\n  }\n  get departureDate(): AbstractControl {\n    return this.detailsGroup.get('departureDate') as AbstractControl;\n  }\n  get contactNumber(): AbstractControl {\n    return this.detailsGroup.get('contactNumber') as AbstractControl;\n  }\n\n  constructor(private readonly fb: FormBuilder, private readonly datePipe: DatePipe) {}\n}\n\n@Directive({\n  selector: '[bbTravelNoticeCreateCustomizable]',\n})\nexport class TravelNoticeCreateCustomizableDirective extends BbTemplate<CardsTravelNoticeCreateComponent, undefined> {}\n\n@Directive({\n  selector: '[bbTravelNoticeDetailsStepCustomizable]',\n})\nexport class TravelNoticeDetailsStepCustomizableDirective extends BbTemplate<\n  CardsTravelNoticeCreateComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTravelNoticeSelectCardsCustomizable]',\n})\nexport class TravelNoticeSelectCardsCustomizableDirective extends BbTemplate<\n  CardsTravelNoticeCreateComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTravelNoticeConfirmStepCustomizable]',\n})\nexport class TravelNoticeConfirmStepCustomizableDirective extends BbTemplate<\n  CardsTravelNoticeCreateComponent,\n  undefined\n> {}\n\n@Directive({\n  selector: '[bbTravelNoticeStepperCustomizable]',\n})\nexport class TravelNoticeStepperCustomizableDirective extends BbTemplate<CardsTravelNoticeCreateComponent, undefined> {}\n","<ng-container bbTravelNoticeCreateCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n\n<ng-template bbTravelNoticeCreateCustomizable let-hostRef>\n  <h1 class=\"bb-block bb-block--lg\" i18n=\"Create travel notice header@@cards.create.travel.notice.header\">\n    Create travel notice\n  </h1>\n  <div class=\"card card-lg bb-create-travel-notice\">\n    <div class=\"card-body\">\n      <ng-container bbTravelNoticeStepperCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n      <form [formGroup]=\"hostRef.createTravelNoticeForm\" (ngSubmit)=\"hostRef.onSubmitTravelNotice()\">\n        <ng-container bbTravelNoticeDetailsStepCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n        <ng-container bbTravelNoticeSelectCardsCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n        <ng-container bbTravelNoticeConfirmStepCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n      </form>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbTravelNoticeStepperCustomizable let-hostRef>\n  <div class=\"bb-block bb-block--lg\">\n    <div class=\"row bb-stack--center\">\n      <bb-stepper-ui class= \"col-12 col-md-10 col-lg-8\">\n        <bb-stepper-step-ui \n          label=\"Travel details\"\n          i18n-label=\"Travel details@@cards.create.travel.notice.stepper.header.step1\"\n          [isChecked]=\"hostRef.currentStep > 1\"\n          [isActive]=\"hostRef.currentStep >= 1\"\n          ariaLabel=\"Step 1 out of 3\"\n          i18n-ariaLabel=\"Step 1 out of 3@@cards.create.travel.notice.stepper.aria.label.step1\"\n        >\n        </bb-stepper-step-ui>\n        <bb-stepper-step-ui \n          class=\"bb-stack__item\" \n          label=\"Card selection\"\n          i18n-label=\"Card selection@@cards.create.travel.notice.stepper.header.step2\"\n          [isChecked]=\"hostRef.currentStep > 2\"\n          [isActive]=\"hostRef.currentStep >= 2\" \n          ariaLabel=\"Step 2 out of 3\"\n          i18n-ariaLabel=\"Step 2 out of 3@@cards.create.travel.notice.stepper.aria.label.step2\"\n        >\n        </bb-stepper-step-ui>\n        <bb-stepper-step-ui \n          class=\"bb-stack__item\" \n          label=\"Confirmation\" \n          i18n-label=\"Confirmation@@cards.create.travel.notice.stepper.header.step3\"\n          [isActive]=\"hostRef.currentStep >= 3\" \n          ariaLabel=\"Step 3 out of 3\"\n          i18n-ariaLabel=\"Step 3 out of 3@@cards.create.travel.notice.stepper.aria.label.step3\"\n        >\n        </bb-stepper-step-ui>\n      </bb-stepper-ui>\n    </div>\n  </div>\n  <!-- cancel travel notice modal -->\n  <bb-modal-ui [isOpen]=\"hostRef.dialogOpen\" (cancel)=\"hostRef.closeConfirmationDialog()\">\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <h2 i18n=\"Cancel Travel Notice@@cards.create.travel.notice.cancelTravelNotice.modal.header\">\n          Discard travel notice?\n        </h2>\n        <div>\n          <button bbButton color=\"unstyled\" (click)=\"hostRef.closeConfirmationDialog()\">\n            <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <span i18n=\"Delete confirmation text@@cards.create.travel.notice.cancelTravelNotice.modal.body\">\n          All entered information for this travel notice will be permanently lost.\n        </span>\n      </ng-template>\n    </bb-modal-body-ui>\n    <bb-modal-footer-ui #footerRef>\n      <ng-template bbCustomModalFooter>\n        <button bbButton (click)=\"hostRef.closeConfirmationDialog()\" color=\"link\">\n          <span i18n=\"Submit button text@@messages.createMessage.composeMessageModal.keepCreating.button\">\n            Keep it\n          </span>\n        </button>\n        <button bbButton (click)=\"hostRef.confirmCancel()\" color=\"danger\">\n          <span i18n=\"Discard button text@@messages.createMessage.composeMessageModal.discardButton\">\n            Discard travel notice\n          </span>\n        </button>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n  <!-- end of modal -->\n</ng-template>\n\n<ng-template bbTravelNoticeDetailsStepCustomizable let-hostRef>\n  <form [formGroup]=\"hostRef.detailsGroup\">\n    <div [hidden]=\"hostRef.currentStep !== 1\">\n      <h2 \n        class=\"bb-block bb-block--xl\"\n        i18n=\"Create travel notice details form header@@cards.create.travel.notice.details.form.header\"\n      >\n        Tell us about your travel details\n      </h2>\n      <div class=\"bb-block bb-block--xl\">\n        <!-- Destinations input -->\n        <div class=\"bb-block bb-block--lg\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"bb-create-travel-notice__country-selector\">\n                <label i18n=\"Travel notice destinations input@@cards.create.travel.notice.details.form.destinations.input\">\n                  Destination(s)\n                </label>\n                <bb-cards-travel-notice-country-selector\n                  [destinationList]=\"hostRef.destinationList\"\n                  formControlName=\"destinations\"\n                ></bb-cards-travel-notice-country-selector>\n              </div>\n            </div>\n          </div>\n          <bb-input-validation-message-ui [showErrors]=\"!hostRef.isFieldValid('destinations')\">\n            <span \n              i18n=\"Travel notice no destinations validation@@cards.create.travel.notice.required.destinations.error.msg\"\n              *ngIf=\"hostRef.destinations.hasError('required')\"\n            >\n              Please select one or more destinations\n            </span>\n          </bb-input-validation-message-ui>\n        </div>\n        <!-- end of input -->\n        <div class=\"row\">\n          <!-- Departure date input -->\n          <div class=\"col-md-6 bb-block bb-block--lg\">\n            <bb-input-datepicker-ui \n              placeholder=\"MM/DD/YYYY\"\n              i18n-placeholder=\"Departure date input placeholder@@cards.create.travel.notice.form.departure.input.placeholder\" \n              label=\"Departure date\"\n              i18n-label=\"Departure date@@cards.create.travel.notice.form.departure.label\" \n              name=\"departureDate\"\n              formControlName=\"departureDate\"\n              [overrideDateFormat]=\"'longDate'\"\n            >\n            </bb-input-datepicker-ui>\n            <bb-input-validation-message-ui [showErrors]=\"!hostRef.isFieldValid('departureDate')\">\n\n              <ng-container *ngFor=\"let error of hostRef.departureDate.errors | keyvalue; last as last\">\n                <ng-container *ngIf=\"last\" [ngSwitch]=\"error.key\">\n                  <span\n                    *ngSwitchCase=\"'required'\"\n                    i18n=\"Missing departure date|Missing leaving date|Missing initial Date@@cards.create.travel.notice.required.departureDate.error.msg\"\n                  >\n                    Please choose a departure date\n                  </span>\n                  <span \n                    *ngSwitchCase=\"'invalidDate'\"\n                    i18n=\"Invalid departure date|Arrival date is before departure@@cards.create.travel.notice.invalid.returnDateConflict.error.msg\"\n                  >\n                    The return date cannot be before the departure date\n                  </span>\n                  <span \n                    *ngSwitchCase=\"'invalidDateFormat'\"\n                    i18n=\"Invalid departure date|Invalid date format@@cards.create.travel.notice.invalid.arrivalDate.hasInvalidFormat.error.msg\"\n                  >\n                    Please enter a valid format. For example, 10/08/2020\n                  </span>\n                </ng-container>\n              </ng-container>\n\n            </bb-input-validation-message-ui>\n          </div>\n          <!-- end of input -->\n          <!-- Return date input -->\n          <div class=\"col-md-6 bb-block bb-block--lg\">\n            <bb-input-datepicker-ui \n              placeholder=\"MM/DD/YYYY\"\n              i18n-placeholder=\"Arrival date input placeholder@@cards.create.travel.notice.form.arrival.input.placeholder\" \n              label=\"Return date\"\n              i18n-label=\"Return date@@cards.create.travel.notice.form.arrival.label\" \n              name=\"arrivalDate\"\n              formControlName=\"arrivalDate\"\n              [overrideDateFormat]=\"'longDate'\"\n            >\n            </bb-input-datepicker-ui>\n            <bb-input-validation-message-ui [showErrors]=\"!hostRef.isFieldValid('arrivalDate')\">\n\n              <ng-container *ngFor=\"let error of hostRef.arrivalDate.errors | keyvalue; last as last\">\n                <ng-container *ngIf=\"last\" [ngSwitch]=\"error.key\">\n                  <span \n                    *ngSwitchCase=\"'required'\"\n                    i18n=\"Missing arrival date|Missing coming date|Missing last Date@@cards.create.travel.notice.required.departureDate.error.msg\"\n                  >\n                    Please choose a return date\n                  </span>\n                  <span \n                    *ngSwitchCase=\"'invalidDate'\"\n                    i18n=\"Invalid arrival date|Arrival date is before departure@@cards.create.travel.notice.invalid.returnDateConflict.error.msg\"\n                  >\n                    The return date cannot be before the departure date\n                  </span>\n                  <span \n                    *ngSwitchCase=\"'invalidCurrentDate'\"\n                    i18n=\"Invalid departure date|Arrival date is before current date@@cards.create.travel.notice.invalid.arrivalDate.hasCurrentDate.error.msg\"\n                  >\n                    Please do not choose a past return date\n                  </span>\n                  <span \n                    *ngSwitchCase=\"'invalidDateFormat'\"\n                    i18n=\"Invalid arrival date|Invalid date format@@cards.create.travel.notice.invalid.arrivalDate.hasInvalidFormat.error.msg\"\n                  >\n                    Please enter a valid format. For example, 10/08/2020\n                  </span>\n                </ng-container>\n              </ng-container>\n            </bb-input-validation-message-ui>\n          </div>\n          <!-- end of input -->\n        </div>\n        <!-- Contact number input -->\n        <div class=\"bb-block\">\n          <label>\n            <strong i18n=\"Contact Number@@cards.create.travel.notice.details.form.contactNumber.input\">\n              Contact number\n            </strong>\n          </label>\n          <span class=\"bb-text-support\" i18n=\"Optional@@cards.create.travel.notice.details.form.contactNumber.optional\">\n            (Optional)\n          </span>\n          <div class=\"bb-block\" [ngClass]=\"{'bb-block--sm': hostRef.isFieldValid('contactNumber')}\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"bb-create-travel-notice__contact-number\">\n                  <bb-input-phone-ui \n                    formControlName=\"contactNumber\"\n                    placeholder=\"e.g. +(1) 541 754 3010\"\n                    i18n-placeholder=\"Example placeholder, e.g. +(1) 541 754 3010@@cards.create.travel.notice.details.form.contactNumber.placeholder\"\n                  >\n                  </bb-input-phone-ui>\n                  <bb-input-validation-message-ui [showErrors]=\"!hostRef.isFieldValid('contactNumber')\">\n                    <div class=\"bb-block bb-block--sm\">\n                      <span i18n=\"Invalid contact number@@cards.create.travel.notice.details.form.contactNumber.error.pattern\">\n                        Invalid contact number\n                      </span>\n                    </div>\n                  </bb-input-validation-message-ui>\n                </div>\n              </div>\n            </div>\n          </div>\n          <span\n            class=\"bb-create-travel-notice__disclaimer\"\n            i18n=\"Contact phone number description@@cards.create.travel.notice.details.form.contactNumber.description\"\n          >\n            We will reach you on this number in case of any suspicious activity.\n          </span>\n        </div>\n      </div>\n      <!-- end of input -->\n      <div class=\"bb-button-bar\">\n        <button \n          class=\"bb-button-bar__button\" \n          bbButton\n          i18n=\"Continue Button text@@cards.create.travel.notice.details.form.continue.button\"\n          (click)=\"hostRef.next(hostRef.cardIdsGroup)\"\n        >\n          Continue\n        </button>\n        <button \n          class=\"bb-button-bar__button bb-button-bar__button--across\" \n          bbButton \n          color=\"link\"\n          i18n=\"Cancel button text@@cards.create.travel.notice.details.form.cancel.button\"\n          (click)=\"hostRef.onCancel()\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  </form>\n</ng-template>\n\n<ng-template bbTravelNoticeSelectCardsCustomizable let-hostRef>\n  <div [hidden]=\"hostRef.currentStep !== 2\">\n    <h2 \n      class=\"bb-block bb-block--xl\"\n      i18n=\"Create travel notice select cards header@@cards.create.travel.notice.selectCards.header\"\n    >\n      Select the cards you are travelling with\n    </h2>\n    <bb-alert-ui *ngIf=\"hostRef.displayAlert\"\n      title=\"You need to select at least one card in order to create a travel notice\"\n      i18n-title=\"You need to select at least one card in order to create a travel notice|Pick one@@cards.create.travel.notice.selectCards.alert\"\n      [dismissible]=\"true\"\n      (close)=\"hostRef.onAlertDismiss()\"\n    ></bb-alert-ui>\n    <div class=\"bb-block bb-block--lg\">\n      <bb-cards-travel-notice-checkbox-cards [paymentCards]=\"hostRef.paymentCards\" [formControl]=\"hostRef.cardIdsGroup\"></bb-cards-travel-notice-checkbox-cards>\n    </div>\n    <div class=\"bb-button-bar\">\n      <button\n        class=\"bb-button-bar__button\" \n        bbButton\n        i18n=\"Continue Button text@@cards.create.travel.notice.selectCards.step.continue.button\"\n        (click)=\"hostRef.next()\"\n      >\n        Continue\n      </button>\n      <button  \n        class=\"bb-button-bar__button\" \n        bbButton color=\"secondary\"\n        i18n=\"Back button text@@cards.create.travel.notice.selectCards.step.back.button\"\n        (click)=\"hostRef.back(hostRef.detailsGroup)\"\n      >\n        Back\n      </button>\n      <div \n        class=\"bb-button-bar__button bb-text-support bb-create-travel-notice__cards-count bb-create-travel-notice__cards-count--xs-top\"\n        *ngIf=\"hostRef.cardIdsGroup.value.length !== 0\"\n      >\n        {{hostRef.cardIdsGroup.value.length}} of {{hostRef.paymentCards.length}} selected\n      </div>\n      <div class=\"bb-button-bar__button bb-button-bar__button--across\">\n        <button \n          bbButton\n          color=\"link\"\n          i18n=\"Cancel button text@@cards.create.travel.notice.selectCards.step.cancel.button\"\n          (click)=\"hostRef.onCancel()\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template bbTravelNoticeConfirmStepCustomizable let-hostRef>\n  <div *ngIf=\"hostRef.currentStep === 3\">\n    <h2   \n      class=\"bb-block bb-block--xl\"\n      i18n=\"Create travel notice confirmation step header@@cards.create.travel.notice.confirm.step.header\"\n    >\n      Review your travel notice\n    </h2>\n    <div class=\"bb-block bb-block--xl\">\n      <bb-cards-travel-notice-confirm-step\n        [travelNoticeItem]=\"hostRef.travelNoticeItem\"\n        [selectedCards]=\"hostRef.cardIdsGroup?.value\"\n        [destinationList]=\"hostRef.destinationList\"\n      ></bb-cards-travel-notice-confirm-step>\n    </div>\n    <div class=\"bb-button-bar\">\n      <button  \n        class=\"bb-button-bar__button\" \n        bbButton \n        type=\"submit\"\n        i18n=\"Confirm button text@@cards.create.travel.notice.confirmation.step.confirm.button\"\n      >\n        Confirm\n      </button>\n      <button \n        class=\"bb-button-bar__button\" \n        bbButton \n        color=\"secondary\"\n        i18n=\"Back button text@@cards.create.travel.notice.confirmation.step.back.button\"\n        (click)=\"hostRef.back(hostRef.cardIdsGroup)\"\n      >\n        Back\n      </button>\n      <button\n        class=\"bb-button-bar__button bb-button-bar__button--across\" \n        bbButton \n        color=\"link\"\n        i18n=\"Cancel button text@@cards.create.travel.notice.confirmation.step.cancel.button\"\n        (click)=\"hostRef.onCancel()\"\n      >\n        Cancel\n      </button>\n    </div>\n  </div>\n</ng-template>","import { Component, Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { Destination, PaymentCard, TravelNotice, TravelNoticeList } from '@backbase/cards-common-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype Page = 'create' | 'list' | 'edit';\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype Operation = { goToPage: Page };\n\n@Component({\n  selector: 'bb-cards-travel-notice-container',\n  templateUrl: './cards-travel-notice-container.component.html',\n})\nexport class CardsTravelNoticeContainerComponent {\n  readonly hostRef = this;\n  /**\n   * Empty state image url.\n   */\n  @Input() imageUrl: string | undefined = '';\n  /**\n   *  List of travel notices.\n   */\n  @Input() travelNoticeList: TravelNoticeList | undefined;\n  /**\n   * List for all provided ISO countries/regions.\n   */\n  @Input() destinationList: Destination[] | undefined;\n  /**\n   * Payment card to be displayed.\n   */\n  @Input() paymentCards: PaymentCard[] | undefined;\n  /**\n   * EventEmitter for triggering post event.\n   */\n  @Output() readonly createTravelNotice = new EventEmitter<TravelNotice>();\n  /**\n   * EventEmitter for triggering delete event.\n   */\n  @Output() readonly remove = new EventEmitter<TravelNotice>();\n  page: Page = 'list';\n\n  get hasItems() {\n    return this.travelNoticeList && this.travelNoticeList.length > 0;\n  }\n\n  saveTravelNotice(travelNoticeItem: TravelNotice) {\n    this.createTravelNotice.emit(travelNoticeItem);\n    this.page = 'list';\n  }\n\n  setPage(operation: Operation) {\n    this.page = operation.goToPage;\n  }\n\n  onRemove(travelNoticeItem: TravelNotice) {\n    this.remove.emit(travelNoticeItem);\n  }\n}\n\n@Directive({\n  selector: '[bbTravelNoticeEmptyStateContainerCustomizable]',\n})\nexport class TravelNoticeEmptyStateContainerCustomizableDirective extends BbTemplate<\n  CardsTravelNoticeContainerComponent,\n  undefined\n> {}\n","<ng-container *ngIf=\"page === 'list'\">\n  <ng-container *ngIf=\"hasItems; else emptyState\">\n    <bb-cards-travel-notice-list\n      [travelNoticeList]=\"travelNoticeList\"\n      (create)=\"setPage($event)\"\n      (deleteListItem)=\"onRemove($event)\"\n      [destinationList]=\"destinationList\"\n    >\n    </bb-cards-travel-notice-list>\n  </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"page === 'create'\">\n  <bb-cards-travel-notice-create\n    [paymentCards]=\"paymentCards\"\n    [destinationList]=\"destinationList\"\n    (abortCreation)=\"setPage($event)\"\n    (save)=\"saveTravelNotice($event)\"\n  ></bb-cards-travel-notice-create>\n</ng-container>\n\n<ng-template bbTravelNoticeEmptyStateContainerCustomizable let-hostRef>\n  <div class=\"bb-travel-notice-empty-state card\">\n    <div class=\"card-body bb-text-align-center\">\n      <div class=\"bb-block bb-block--xl\">\n        <img class=\"img-fluid\" *ngIf=\"hostRef.imageUrl !== ''\" [src]=\"hostRef.imageUrl\" alt=\"empty state background\"/>\n      </div>\n      <h2 class=\"bb-block bb-block--md\" i18n=\"travel notice empty state header@@cards.travel.notice.empty.state.header\">\n        Setup your travel notice\n      </h2>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n          <div class=\"bb-block bb-block--lg\">\n            <p \n              class=\"bb-travel-notice-empty-state__message\"\n              i18n=\"travel notice empty state description@@cards.travel.notice.empty.state.description\"\n            >\n              A travel notice alerts us that you’re planning to use your cards abroad and it helps avoid interpreting any\n              unusual activity as potential fraud.\n            </p>\n          </div>\n        </div>\n      </div>\n     \n      <div>\n        <button bbButton color=\"primary\" (click)=\"hostRef.setPage({goToPage: 'create'})\">\n          <bb-icon-ui name=\"add\"></bb-icon-ui> \n          <span i18n=\"Create new travel notice button@@cards.travel.notice.createNew.button\">Create new</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #emptyState>\n  <ng-container bbTravelNoticeEmptyStateContainerCustomizable [bbHostRef]=\"hostRef\"></ng-container>\n</ng-template>","import { ChangeDetectorRef, Component, Inject, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport {\n  CardsBackendDestinations,\n  CardsBackendError,\n  CardsService,\n  Destination,\n  DestinationsServiceConfigToken,\n  FullTravelNoticeModel,\n  PaymentCard,\n  TravelNotice,\n  TravelNoticeList,\n} from '@backbase/cards-common-ang';\nimport { AssetsResolver, AssetsResolverConfig, AssetsService } from '@backbase/foundation-ang/core';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst notificationTtl = 5000;\ntype NotificationMessage = string | TemplateRef<any>;\ntype NotificationModifier = 'success' | 'info' | 'warning' | 'error' | undefined;\n\n@Component({\n  selector: 'bb-cards-travel-notice-widget',\n  templateUrl: 'cards-travel-notice-widget.component.html',\n})\nexport class CardsTravelNoticeWidgetComponent implements OnInit {\n  // eslint-disable-next-line\n  @ViewChild('notificationOnCreate', { read: TemplateRef, static: true })\n  notificationOnCreate: TemplateRef<any> | undefined;\n  // eslint-disable-next-line\n  @ViewChild('notificationOnDelete', { read: TemplateRef, static: true })\n  notificationOnDelete: TemplateRef<any> | undefined;\n\n  travelNoticeList: TravelNoticeList | undefined;\n  paymentCards: PaymentCard[] | undefined;\n  isLoading = true;\n  /**\n   * Error message in case something unexpected occurs.\n   */\n  error: CardsBackendError | undefined;\n\n  destinationList: Observable<Destination[]> | undefined;\n\n  private readonly config: AssetsResolverConfig = {\n    widgetName: 'bb-cards-travel-notice-widget-ang',\n    getURIFromAssetID: (assetId: string) => `${assetId}-img.svg`,\n  };\n\n  private readonly resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver(this.config);\n\n  get imageEmptyStateUrl() {\n    return this.resolveAsset('travel-notice-empty-state');\n  }\n\n  ngOnInit() {\n    this.loadTravelNotice();\n\n    this.destinationList =\n      this.destinationsService &&\n      this.destinationsService.getDestinations().pipe(\n        catchError((error: CardsBackendError) => {\n          this.error = error;\n\n          return of([]);\n        }),\n      );\n  }\n\n  submitTravelNotice(travelNoticeItem: TravelNotice) {\n    this.isLoading = true;\n\n    const submitTravelNoticeSuccess = () => {\n      if (this.travelNoticeList) {\n        this.loadTravelNotice();\n        this.pushNotification(this.notificationOnCreate, 'success');\n      }\n    };\n\n    this.cardsService.postTravelNotice(travelNoticeItem).subscribe(submitTravelNoticeSuccess);\n  }\n\n  onRemoveItem(travelNoticeItem: TravelNotice) {\n    this.isLoading = true;\n\n    const deleteTravelNoticeSuccess = () => {\n      if (this.travelNoticeList) {\n        this.loadTravelNotice();\n        this.pushNotification(this.notificationOnDelete, 'success');\n      }\n    };\n\n    this.cardsService.deleteTravelNotice(travelNoticeItem).subscribe(deleteTravelNoticeSuccess);\n  }\n\n  private loadTravelNotice() {\n    this.cardsService\n      .getTravelNotice()\n      .pipe(\n        catchError((error: CardsBackendError) => {\n          this.error = error;\n\n          return of({});\n        }),\n      )\n      .subscribe((item: FullTravelNoticeModel) => {\n        this.travelNoticeList = item.travelNoticeList;\n        this.paymentCards = item.paymentCards;\n        this.isLoading = false;\n        this.cd.detectChanges();\n      });\n  }\n\n  private pushNotification(header: NotificationMessage = '', modifier: NotificationModifier) {\n    this.notificationService.showNotification({\n      header,\n      message: '',\n      modifier,\n      dismissible: true,\n      ttl: notificationTtl,\n    });\n  }\n\n  constructor(\n    private readonly assetsService: AssetsService,\n    private readonly cardsService: CardsService,\n    private readonly notificationService: NotificationService,\n    @Inject(DestinationsServiceConfigToken) private readonly destinationsService: CardsBackendDestinations | undefined,\n    protected readonly cd: ChangeDetectorRef,\n  ) {}\n}\n","<ng-container *ngIf=\"!error; else errorState\">\n  <ng-container *ngIf=\"!isLoading; else loadingState\">\n    <bb-cards-travel-notice-container\n      [imageUrl]=\"(imageEmptyStateUrl | async) || undefined\"\n      [travelNoticeList]=\"travelNoticeList\"\n      [destinationList]=\"(destinationList | async) || undefined\"\n      [paymentCards]=\"paymentCards\"\n      (createTravelNotice)=\"submitTravelNotice($event)\"\n      (remove)=\"onRemoveItem($event)\"\n    ></bb-cards-travel-notice-container>\n  </ng-container>\n</ng-container>\n<ng-template #loadingState>\n  <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n</ng-template>\n\n<ng-template #errorState>\n  <bb-empty-state-ui\n    title=\"\"\n    [subtitle]=\"error?.message\"\n    iconModifier=\"error\"\n    iconSize=\"xxl\"\n    iconClasses=\"text-muted\"\n  ></bb-empty-state-ui>\n</ng-template>\n\n<ng-template #notificationOnCreate>\n  <span \n    i18n=\"Message for a notification displayed when a travel notice is created@@cards.create.travel.notice.success.notification\"\n  >\n    Travel notice successfully created!\n  </span>\n</ng-template>\n\n<ng-template #notificationOnDelete>\n  <span \n    i18n=\"Message for a notification displayed when a travel notice is deleted@@cards.delete.travel.notice.success.notification\"\n  >\n    Travel notice successfully deleted!  \n  </span>\n</ng-template>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CardsCommonModule, DefaultDestionsService, DestinationsServiceConfigToken } from '@backbase/cards-common-ang';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { BadgeModule } from '@backbase/ui-ang/badge';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CheckboxGroupModule } from '@backbase/ui-ang/checkbox-group';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { DropdownMultiSelectModule } from '@backbase/ui-ang/dropdown-multi-select';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { InputPhoneModule } from '@backbase/ui-ang/input-phone';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { PaymentCardModule } from '@backbase/ui-ang/payment-card';\nimport { StepperModule } from '@backbase/ui-ang/stepper';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  CardsTravelNoticeContainerComponent,\n  TravelNoticeEmptyStateContainerCustomizableDirective,\n} from './components/cards-travel-notice-container/cards-travel-notice-container.component';\nimport { CardsTravelNoticeCheckboxCardsComponent } from './components/cards-travel-notice-create/cards-travel-notice-checkbox-cards.component';\nimport { CardsTravelNoticeConfirmStepComponent } from './components/cards-travel-notice-create/cards-travel-notice-confirm-step.component';\nimport { CardsTravelNoticeCountrySelectorComponent } from './components/cards-travel-notice-create/cards-travel-notice-country-selector.component';\nimport {\n  CardsTravelNoticeCreateComponent,\n  TravelNoticeConfirmStepCustomizableDirective,\n  TravelNoticeCreateCustomizableDirective,\n  TravelNoticeDetailsStepCustomizableDirective,\n  TravelNoticeSelectCardsCustomizableDirective,\n  TravelNoticeStepperCustomizableDirective,\n} from './components/cards-travel-notice-create/cards-travel-notice-create.component';\nimport { CardsTravelNoticeListItemComponent } from './components/cards-travel-notice-list/cards-travel-notice-list-item.component';\nimport {\n  CardsTravelNoticeListComponent,\n  TravelNoticeListCustomizableDirective,\n  TravelNoticeListItemCustomizableDirective,\n} from './components/cards-travel-notice-list/cards-travel-notice-list.component';\nimport { CardsTravelNoticeStatusBadgeComponent } from './components/cards-travel-notice-list/cards-travel-notice-status-badge.component';\nimport { CardsTravelNoticePaymentCardComponent } from './components/cards-travel-notice-payment-card/cards-travel-notice-payment-card.component';\nimport { CardsTravelNoticeWidgetComponent } from './components/cards-travel-notice-widget/cards-travel-notice-widget.component';\nimport { TravelNoticeDatesHelperService } from './services/travel-notice-dates-helper.service';\n\nconst components = [\n  CardsTravelNoticeWidgetComponent,\n  CardsTravelNoticeContainerComponent,\n  CardsTravelNoticeListComponent,\n  CardsTravelNoticeListItemComponent,\n  CardsTravelNoticeCreateComponent,\n  CardsTravelNoticeCheckboxCardsComponent,\n  CardsTravelNoticeConfirmStepComponent,\n  CardsTravelNoticeCountrySelectorComponent,\n  CardsTravelNoticeStatusBadgeComponent,\n  CardsTravelNoticePaymentCardComponent,\n];\n\nconst customizables = [\n  TravelNoticeEmptyStateContainerCustomizableDirective,\n  TravelNoticeListCustomizableDirective,\n  TravelNoticeListItemCustomizableDirective,\n  TravelNoticeCreateCustomizableDirective,\n  TravelNoticeDetailsStepCustomizableDirective,\n  TravelNoticeSelectCardsCustomizableDirective,\n  TravelNoticeConfirmStepCustomizableDirective,\n  TravelNoticeStepperCustomizableDirective,\n];\n\nconst modules = [\n  ButtonModule,\n  BadgeModule,\n  IconModule,\n  CollapsibleModule,\n  LoadingIndicatorModule,\n  PaymentCardModule,\n  StepperModule,\n  InputDatepickerModule,\n  CheckboxGroupModule,\n  InputCheckboxModule,\n  InputValidationMessageModule,\n  ModalModule,\n  InputTextModule,\n  InputPhoneModule,\n  DropdownMultiSelectModule,\n  AlertModule,\n  NotificationModule,\n  NgbCollapseModule,\n  CardsCommonModule,\n];\n\n@NgModule({\n  declarations: [...components, ...customizables],\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { CardsTravelNoticeWidgetComponent },\n    }),\n    ...modules,\n    ReactiveFormsModule,\n    FormsModule,\n    NgSelectModule,\n  ],\n  providers: [\n    { provide: DestinationsServiceConfigToken, useClass: DefaultDestionsService },\n    TravelNoticeDatesHelperService,\n  ],\n  exports: [...modules, ...components, ...customizables],\n})\nexport class CardsTravelNoticeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}