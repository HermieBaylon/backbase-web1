(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@backbase/foundation-ang/core'), require('@backbase/ui-ang/account-selector'), require('@backbase/ui-ang/icon'), require('@backbase/ui-ang/dropdown-menu'), require('@backbase/ui-ang/tooltip-directive'), require('@backbase/ui-ang/button'), require('rxjs'), require('rxjs/operators'), require('@backbase/data-ang/arrangements'), require('@backbase/data-ang/account-statements'), require('@angular/common/http'), require('@backbase/ui-ang/pagination'), require('@backbase/ui-ang/load-button'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('@backbase/account-statement-common-ang', ['exports', '@angular/common', '@angular/core', '@backbase/foundation-ang/core', '@backbase/ui-ang/account-selector', '@backbase/ui-ang/icon', '@backbase/ui-ang/dropdown-menu', '@backbase/ui-ang/tooltip-directive', '@backbase/ui-ang/button', 'rxjs', 'rxjs/operators', '@backbase/data-ang/arrangements', '@backbase/data-ang/account-statements', '@angular/common/http', '@backbase/ui-ang/pagination', '@backbase/ui-ang/load-button', '@angular/router'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.backbase = global.backbase || {}, global.backbase["account-statement-common-ang"] = {}), global.ng.common, global.ng.core, global.core, global.i1, global.i1$1, global.i2, global.i4, global.i5, global.rxjs, global.rxjs.operators, global.i1$2, global.i2$1, global.ng.common.http, global.i1$3, global.i2$2, global.ng.router));
})(this, (function (exports, i3, i0, core, i1, i1$1, i2, i4, i5, rxjs, operators, i1$2, i2$1, i3$1, i1$3, i2$2, router) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$2);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var AccountStatementAccountSelectorComponent = /** @class */ (function () {
        function AccountStatementAccountSelectorComponent() {
            this.accounts = [];
            this.accountSelect = new i0.EventEmitter();
            this.id = "bb-account-statement-account-selector-" + AccountStatementAccountSelectorComponent.idCounter++;
        }
        AccountStatementAccountSelectorComponent.prototype.onSelect = function (account) {
            this.accountSelect.emit(account);
        };
        return AccountStatementAccountSelectorComponent;
    }());
    AccountStatementAccountSelectorComponent.idCounter = 0;
    AccountStatementAccountSelectorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementAccountSelectorComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountStatementAccountSelectorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementAccountSelectorComponent, selector: "bb-account-statement-account-selector", inputs: { accounts: "accounts" }, outputs: { accountSelect: "accountSelect" }, ngImport: i0__namespace, template: "<ng-container\n  bbAccountStatementAccountSelectorCustomizableDirective\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    accounts: accounts\n  }\"\n>\n</ng-container>\n\n<ng-template bbAccountStatementAccountSelectorCustomizableDirective let-hostRef let-accounts=\"context.accounts\">\n  <span\n    [attr.id]=\"hostRef.id + '-label'\"\n    class=\"sr-only\"\n    data-role=\"account-selector-label\"\n    i18n=\"Account selector dropdown aria label@@account-statement.accounts-selector.label\"\n    >Account selector dropdown</span\n  >\n  <bb-account-selector-ui\n    [items]=\"accounts\"\n    [searchable]=\"false\"\n    [markFirst]=\"true\"\n    [selectedItems]=\"accounts[0]\"\n    [aria-labelledby]=\"hostRef.id + '-label'\"\n    (change)=\"hostRef.onSelect($event)\"\n    placeholder=\"Select an account\"\n    i18n-placeholder=\"Select an account|accounts selector placeholder@@account-statement.accounts-selector.placeholder\"\n  >\n  </bb-account-selector-ui>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace.AccountSelectorComponent; }), selector: "bb-account-selector-ui", inputs: ["items", "disabled", "notFoundText", "showError", "productNumberFormat", "selectedItems", "multiple", "closeOnSelect", "searchable", "clearable", "placeholder", "loading", "dropdownPosition", "disableScrollEnd", "highlight", "filterItems", "markFirst", "internalFiltering", "virtualScroll", "required", "typeahead", "minTermLength", "typeToSearchText", "aria-describedby", "aria-labelledby", "aria-invalid", "searchFunc", "showCurrencySymbol", "showBankBranchCode", "groupByFn", "groupValueFn", "size", "compareItemsWith"], outputs: ["search", "clearSearch", "scroll", "scrollToEnd", "remove", "change", "filterChange", "focus", "blur"] }], directives: [{ type: i0__namespace.forwardRef(function () { return AccountStatementAccountSelectorCustomizableDirective; }), selector: "[bbAccountStatementAccountSelectorCustomizableDirective]" }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementAccountSelectorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-statement-account-selector',
                        templateUrl: './account-statement-account-selector.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { accounts: [{
                    type: i0.Input
                }], accountSelect: [{
                    type: i0.Output
                }] } });
    var AccountStatementAccountSelectorCustomizableDirective = /** @class */ (function (_super) {
        __extends(AccountStatementAccountSelectorCustomizableDirective, _super);
        function AccountStatementAccountSelectorCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AccountStatementAccountSelectorCustomizableDirective;
    }(core.BbTemplate));
    AccountStatementAccountSelectorCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementAccountSelectorCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    AccountStatementAccountSelectorCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementAccountSelectorCustomizableDirective, selector: "[bbAccountStatementAccountSelectorCustomizableDirective]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementAccountSelectorCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbAccountStatementAccountSelectorCustomizableDirective]',
                    }]
            }] });

    /* eslint-disable @typescript-eslint/naming-convention */
    // eslint-disable-next-line no-shadow
    exports.LoadingState = void 0;
    (function (LoadingState) {
        LoadingState["IDLE"] = "IDLE";
        LoadingState["LOADING"] = "LOADING";
        LoadingState["LOADING_MORE"] = "LOADING_MORE";
        LoadingState["LOADING_FILTERED"] = "LOADING_FILTERED";
        LoadingState["LOADING_TABLE"] = "LOADING_TABLE";
    })(exports.LoadingState || (exports.LoadingState = {}));
    /* eslint-enable @typescript-eslint/naming-convention */

    /**
     * The first day Unix date: 01-01-1970
     */
    var unixZeroDay = function () { return new Date(0); };
    var today = function () { return new Date(new Date().setHours(0, 0, 0, 0)); };
    var getCurrentYear = function () { return today().getFullYear(); };
    var getCurrentMonth = function () { return today().getMonth(); };
    var currentDate = function () { return today().getDate(); };
    var currentDay = function () { return today().getDay(); };
    var normalizeDay = function (day) { return (day + 6) % 7; };
    var firstDayInLastMonth = function () { return new Date(getCurrentYear(), getCurrentMonth() - 1, 1); };
    var lastDayInLastMonth = function () { return new Date(today().setDate(0)); };
    var firstDayInLastQuarter = function () { return new Date(getCurrentYear(), Math.floor(getCurrentMonth() / 3) * 3 - 3, 1); };
    var lastDayInLastQuarter = function () { return new Date(firstDayInLastQuarter().getFullYear(), firstDayInLastQuarter().getMonth() + 3, 0); };
    var firstDayInThisQuarter = function () { return new Date(getCurrentYear(), Math.floor(getCurrentMonth() / 3) * 3, 1); };
    var lastDayInThisQuarter = function () { return new Date(firstDayInThisQuarter().getFullYear(), firstDayInThisQuarter().getMonth() + 3, 0); };
    var firstDayInThisWeek = function () { return new Date(today().setDate(currentDate() - normalizeDay(currentDay()))); };
    var lastDayInThisWeek = function () { return new Date(firstDayInThisWeek().setDate(firstDayInThisWeek().getDate() + 6)); };
    var firstDayInLastWeek = function () { return new Date(today().setDate(currentDate() - 7 - normalizeDay(currentDay()))); };
    var lastDayInLastWeek = function () { return new Date(firstDayInLastWeek().setDate(firstDayInLastWeek().getDate() + 6)); };
    var firstDayInThisMonth = function () { return new Date(getCurrentYear(), getCurrentMonth(), 1); };
    var lastDayInThisMonth = function () { return new Date(getCurrentYear(), getCurrentMonth() + 1, 0); };
    var firstDayInThisYear = function () { return new Date(getCurrentYear(), 0, 1); };
    var lastDayInThisYear = function () { return new Date(getCurrentYear(), 11, 31); };
    /**
     * Convert Date object into {day, month, year} structure in order to be used with Datepicker component.
     * Note: Months in this structure are counted from 1.
     *
     * @param date  Date object to be converted.
     */
    var convertDateObjToDateStruct = function (date) { return ({
        year: date.getFullYear(),
        month: date.getMonth() + 1,
        day: date.getDate(),
    }); };
    /**
     * Convert the object of type NgbDateStruct into a Date object
     *
     * @param dateObj of type NgbDateStruct
     * @returns Date object
     */
    var convertDateStructToDateObj = function (dateStruct) { return new Date(dateStruct.year, dateStruct.month - 1, dateStruct.day); };
    /**
     * Gives the number of months between two dates
     *
     * @param firstDate
     * @param secondDate
     * @returns number of months between firstDate and secondDate
     * @example getMonthDiff(new Date(2020, 1, 1), new Date(2020, 5, 1)); // 4
     */
    var getMonthDiff = function (firstDate, secondDate) {
        var months = (secondDate.getFullYear() - firstDate.getFullYear()) * 12 - firstDate.getMonth() + secondDate.getMonth();
        return months <= 0 ? 0 : months;
    };

    /**
     * Validate if the given month limit is lies in between two dates
     *
     * @param number Number of months that will be validated
     * @param Date [from=new Date(0)] start range of the month limit
     * @param Date [to=new Date()] end range of the month limit
     * @returns boolean
     * @example isMonthLimitValid(5)
     */
    var isMonthLimitValid = function (month, from, to) {
        if (from === void 0) { from = new Date(0); }
        if (to === void 0) { to = new Date(); }
        return month > 0 && month <= getMonthDiff(from, to);
    };
    /**
     * Validate if the date lies in between two dates
     *
     * @param number Number of months that will be validated
     * @param Date [from=new Date(0)] start range of the month limit
     * @param Date [to=new Date()] end range of the month limit
     * @returns boolean
     * @example isDateLimitValid('1994-10-20')
     */
    var isDateLimitValid = function (input, from, to) {
        if (from === void 0) { from = new Date(0); }
        if (to === void 0) { to = new Date(); }
        var date = new Date(input);
        if (isNaN(date.getTime())) {
            return false;
        }
        return date >= from && date <= to;
    };
    /**
     * Validate if the date format is of type (yyyy-MM-dd, yyyy/MM/dd, yyyy.MM.dd)
     *
     * @param string input string
     * @returns boolean
     * @example isDateFormatValid('1994-10-20')
     */
    var isDateFormatValid = function (input) {
        var formats = [
            /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))/,
            /([12]\d{3}\.(0[1-9]|1[0-2])\.(0[1-9]|[12]\d|3[01]))/,
            /([12]\d{3}\/(0[1-9]|1[0-2])\/(0[1-9]|[12]\d|3[01]))/,
        ];
        return formats.some(function (format) { return format.test(input); });
    };

    /* eslint-disable @typescript-eslint/naming-convention */
    // eslint-disable-next-line no-shadow
    exports.PaginationType = void 0;
    (function (PaginationType) {
        PaginationType["Pagination"] = "PAGINATION";
        PaginationType["LoadMore"] = "LOAD_MORE";
    })(exports.PaginationType || (exports.PaginationType = {}));
    /* eslint-enable @typescript-eslint/naming-convention */

    var getFilenameFromHeaders = function (headers) {
        var contentDispositionHeader = headers.get('Content-Disposition') || '';
        var filenameRegexp = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
        var matches = contentDispositionHeader.match(filenameRegexp);
        var filename = '';
        if (!!matches && matches[1]) {
            filename = matches[1].replace(/['"]/g, '');
        }
        return filename;
    };
    var getTotalCountFromHeaders = function (headers) {
        var header = headers.get('x-total-count');
        return (header && parseInt(header, 10)) || 0;
    };
    var modelItemToBoolean = function (value) {
        if (typeof value === 'boolean') {
            return value;
        }
        return value === 'true';
    };
    var toInteger = function (value) {
        if ((typeof value === 'string' && /^\d+$/.test(value)) || typeof value === 'number') {
            return parseInt(value, 10) || 0;
        }
        return 0;
    };
    /**
     * Split string by delimiter (String or RegExp), /\s+/ by default.
     *
     * @param str String that needs to be split.
     * @param delimiter by which string needs to be split
     * @returns string[]
     * @example stringToWords('1cdb2224-8926-4b4d,1cdb2224-8926-4b92', ',')
     */
    var stringToWords = function (str, delimiter) {
        if (!str) {
            return [];
        }
        return str.trim().split(delimiter || /\s+/);
    };
    var simpleArrayCompare = function (a, b) {
        if (a === void 0) { a = []; }
        if (b === void 0) { b = []; }
        return a.length !== b.length ? false : a.every(function (item, i) { return b[i] === item; });
    };
    var smartLoadingState = function (prev, cur) {
        if (prev.direction !== cur.direction ||
            prev.orderBy !== cur.orderBy ||
            (prev.from !== cur.from && cur.paginationType === exports.PaginationType.Pagination)) {
            return exports.LoadingState.LOADING_TABLE;
        }
        if (cur.from !== 0) {
            return exports.LoadingState.LOADING_MORE;
        }
        if (prev.category !== cur.category || prev.dateFrom !== cur.dateFrom || prev.dateTo !== cur.dateTo) {
            return exports.LoadingState.LOADING_FILTERED;
        }
        return exports.LoadingState.LOADING;
    };
    /**
     * Choose limit date for Date filter field. By default, value should be zero day in Unix time.
     * If both absolute and relative limits are passed, absolute has precedent.
     *
     * @param absoluteDateLimit {string} Absolute date in format (yyyy-mm-dd)
     * @param relativeMonthLimit {number} Number of months in the past from present date.
     * @returns Date
     */
    var getDateFilterLimit = function (absoluteDateLimit, relativeMonthLimit) {
        if (absoluteDateLimit === void 0) { absoluteDateLimit = ''; }
        if (relativeMonthLimit === void 0) { relativeMonthLimit = 0; }
        var limitDate = unixZeroDay();
        if (isDateFormatValid(absoluteDateLimit) && isDateLimitValid(absoluteDateLimit)) {
            limitDate = new Date(absoluteDateLimit);
        }
        else if (absoluteDateLimit === '' && isMonthLimitValid(relativeMonthLimit)) {
            limitDate = new Date();
            limitDate.setMonth(limitDate.getMonth() - relativeMonthLimit);
        }
        return limitDate;
    };
    /**
     * Function to check if url contains querystring or not
     *
     * @param url {string} Url that needs to be checked
     * @returns boolean
     * @example isQueryStringExist('http://test.com?dateFrom=20-10-2020')
     */
    var isQueryStringExist = function (url) {
        var pattern = new RegExp(/\?.+=.*/g);
        return pattern.test(url);
    };

    // @dynamic to suppress error with resolving Document type during compilation
    var AccountStatementDomService = /** @class */ (function () {
        function AccountStatementDomService(document) {
            this.document = document;
        }
        AccountStatementDomService.prototype.simulateLinkClick = function (attributes, renderer) {
            var e_1, _a;
            if (attributes === void 0) { attributes = {}; }
            var link = renderer.createElement('a');
            try {
                for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var _d = __read(_c.value, 2), name = _d[0], value = _d[1];
                    link.setAttribute(name, value);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            renderer.appendChild(this.document.body, link);
            link.click();
            renderer.removeChild(this.document.body, link);
        };
        return AccountStatementDomService;
    }());
    AccountStatementDomService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDomService, deps: [{ token: i3.DOCUMENT }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    AccountStatementDomService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDomService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDomService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: Document, decorators: [{
                            type: i0.Inject,
                            args: [i3.DOCUMENT]
                        }] }];
        } });

    // @dynamic to suppress error with resolving Window type during compilation
    var AccountStatementDownloadDocDirective = /** @class */ (function () {
        function AccountStatementDownloadDocDirective(domService, renderer) {
            this.domService = domService;
            this.renderer = renderer;
            /**
             * document item which is available for downloading
             */
            this.doc = {};
            /**
             * custom filename for document
             */
            this.filename = '';
            // eslint-disable-next-line @angular-eslint/no-output-rename
            this.downloadFailure = new i0.EventEmitter();
        }
        AccountStatementDownloadDocDirective.prototype.onClick = function () {
            this.downloadDoc(this.doc);
        };
        AccountStatementDownloadDocDirective.prototype.downloadDoc = function (doc) {
            if (doc.url) {
                var url = isQueryStringExist(doc.url) ? doc.url + "&inline=false" : doc.url + "?inline=false";
                this.domService.simulateLinkClick({
                    href: url,
                }, this.renderer);
            }
        };
        return AccountStatementDownloadDocDirective;
    }());
    AccountStatementDownloadDocDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDownloadDocDirective, deps: [{ token: AccountStatementDomService }, { token: i0__namespace.Renderer2 }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    AccountStatementDownloadDocDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementDownloadDocDirective, selector: "[bbAccountStatementDownloadDoc]", inputs: { doc: ["bbAccountStatementDownloadDoc", "doc"], filename: ["bbAccountStatementDownloadDocFilename", "filename"] }, outputs: { downloadFailure: "bbAccountStatementDownloadDocFailure" }, host: { listeners: { "click": "onClick()", "keydown.enter": "onClick()", "keydown.space": "onClick()" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDownloadDocDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbAccountStatementDownloadDoc]',
                    }]
            }], ctorParameters: function () { return [{ type: AccountStatementDomService }, { type: i0__namespace.Renderer2 }]; }, propDecorators: { doc: [{
                    type: i0.Input,
                    args: ['bbAccountStatementDownloadDoc']
                }], filename: [{
                    type: i0.Input,
                    args: ['bbAccountStatementDownloadDocFilename']
                }], downloadFailure: [{
                    type: i0.Output,
                    args: ['bbAccountStatementDownloadDocFailure']
                }], onClick: [{
                    type: i0.HostListener,
                    args: ['click']
                }, {
                    type: i0.HostListener,
                    args: ['keydown.enter']
                }, {
                    type: i0.HostListener,
                    args: ['keydown.space']
                }] } });

    var AccountStatementDownloadsComponent = /** @class */ (function () {
        function AccountStatementDownloadsComponent() {
            this.documents = [];
            this.mimeTypeExtensions = {};
            this.downloadFailure = new i0.EventEmitter();
            this.describedByElementId = '';
            /**
             * Position where tooltip will be displayed relative to the button element.
             *
             * @default 'top'
             */
            this.tooltipPlacement = 'top';
        }
        AccountStatementDownloadsComponent.prototype.onDownloadDocFailure = function (error) {
            this.downloadFailure.emit(error);
        };
        return AccountStatementDownloadsComponent;
    }());
    AccountStatementDownloadsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDownloadsComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountStatementDownloadsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementDownloadsComponent, selector: "bb-account-statement-downloads", inputs: { documents: "documents", mimeTypeExtensions: "mimeTypeExtensions", describedByElementId: "describedByElementId", tooltipPlacement: "tooltipPlacement" }, outputs: { downloadFailure: "downloadFailure" }, ngImport: i0__namespace, template: "<ng-container\n  bbAccountStatementDownloadsCustomizableDirective\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    documents: documents,\n    mimeTypeExtensions: mimeTypeExtensions\n  }\"\n>\n</ng-container>\n\n<ng-template\n  bbAccountStatementDownloadsCustomizableDirective\n  let-hostRef\n  let-documents=\"context.documents\"\n  let-mimeTypeExtensions=\"context.mimeTypeExtensions\"\n>\n  <ng-container *ngIf=\"documents.length; else emptyState\">\n    <div\n      *ngIf=\"documents.length === 1; else documentsToDownload\"\n      triggers=\"hover focus\"\n      [bbTooltip]=\"singleDownloadTooltip\"\n      [placement]=\"hostRef.tooltipPlacement\"\n    >\n      <button\n        bbButton\n        color=\"link\"\n        [circle]=\"true\"\n        aria-label=\"Download one available format\"\n        i18n-aria-label=\"Download one available format@@account-statement.download-one-format.aria-label\"\n        [attr.aria-describedby]=\"hostRef.describedByElementId\"\n        [bbAccountStatementDownloadDoc]=\"documents[0]\"\n        (bbAccountStatementDownloadDocFailure)=\"hostRef.onDownloadDocFailure($event)\"\n        data-role=\"download-one\"\n      >\n        <bb-icon-ui name=\"get-app\" size=\"md\"></bb-icon-ui>\n      </button>\n    </div>\n\n    <ng-template #singleDownloadTooltip>\n      <ng-container\n        *ngIf=\"mimeTypeExtensions[documents[0].contentType]; else singleDownloadTooltipNoExtension\"\n        i18n=\"Tooltip for download single file button@@account-statement.single.download.tooltip\"\n      >\n        Download - {{ mimeTypeExtensions[documents[0].contentType] }}\n      </ng-container>\n\n      <ng-template\n        #singleDownloadTooltipNoExtension\n        i18n=\"\n          File|Tooltip for download button of single file that does not have standard file\n          extension@@account-statement.single.download.tooltip.unknown-extension\"\n      >\n        Download - File\n      </ng-template>\n    </ng-template>\n\n    <ng-template #documentsToDownload>\n      <div\n        triggers=\"hover focus\"\n        [placement]=\"hostRef.tooltipPlacement\"\n        bbTooltip=\"Show downloads actions\"\n        i18n-bbTooltip=\"\n          Show downloads actions for tooltip with provided description@@account-statement.download.dropdown-menu.tooltip\"\n      >\n        <bb-dropdown-menu-ui\n          [attr.data-role]=\"'as-dropdown-menu'\"\n          icon=\"get-app\"\n          btnColor=\"link\"\n          [btnCircle]=\"true\"\n          container=\"body\"\n          dropDownButtonLabel=\"Show download actions\"\n          i18n-dropDownButtonLabel=\"\n            Show download actions|Downloads dropdown menu aria label with provided\n            description@@account-statement.downloads.dropdown-menu.aria-label.no-description\"\n          [attr.aria-describedby]=\"hostRef.describedByElementId\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <a\n              *ngFor=\"let document of documents; index as index\"\n              rel=\"noopener\"\n              role=\"menuitem\"\n              class=\"dropdown-item\"\n              data-role=\"download-statement\"\n              href=\"\"\n              (click)=\"$event.preventDefault()\"\n              [bbAccountStatementDownloadDoc]=\"document\"\n              (bbAccountStatementDownloadDocFailure)=\"hostRef.onDownloadDocFailure($event)\"\n            >\n              <span\n                *ngIf=\"mimeTypeExtensions[document.contentType]; else dropdownItemNoExtension\"\n                [attr.aria-labelledby]=\"'dropdown-item-download-file-' + document.uuid\"\n              >\n                {{ mimeTypeExtensions[document.contentType] }}\n              </span>\n\n              <ng-template\n                #dropdownItemNoExtension\n                i18n=\"\n                  Dropdown item to download file with unknown\n                  extension@@account-statement.downloads.downloads-as.no-extension-file\"\n              >\n                File {{ index + 1 }}\n              </ng-template>\n\n              <div id=\"dropdown-item-download-file-{{ document.uuid }}\" class=\"sr-only\">\n                <span\n                  *ngIf=\"mimeTypeExtensions[document.contentType]; else dropdownItemAriaLabelNoExtension\"\n                  i18n=\"Download file with specific extension@@account-statement.downloads.downloads-as.aria-label\"\n                >\n                  Download as {{ mimeTypeExtensions[document.contentType] }}\n                </span>\n\n                <ng-template\n                  #dropdownItemAriaLabelNoExtension\n                  i18n=\"Download file with unknown extension@@account-statement.downloads.downloads-unknown.aria-label\"\n                >\n                  Download unknown extension file {{ index + 1 }}\n                </ng-template>\n              </div>\n            </a>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #emptyState>\n    <div\n      triggers=\"hover focus\"\n      placement=\"bottom\"\n      bbTooltip=\"Download is not supported for this statement, please contact the bank\"\n      i18n-bbTooltip=\"Downloads are empty tooltip@@account-statement.downloads.empty-state.tooltip\"\n    >\n      <bb-icon-ui\n        [attr.data-role]=\"'empty-state'\"\n        name=\"warning\"\n        color=\"warning\"\n        tabindex=\"0\"\n        [attr.aria-describedby]=\"hostRef.describedByElementId\"\n      ></bb-icon-ui>\n    </div>\n  </ng-template>\n</ng-template>\n", components: [{ type: i0__namespace.forwardRef(function () { return i1__namespace$1.IconComponent; }), selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.DropdownMenuComponent; }), selector: "bb-dropdown-menu-ui", inputs: ["label", "disabled", "options", "icon", "iconSize", "iconColor", "btnColor", "btnCircle", "optionLabelKey", "fullWidth", "autoClose", "container", "position", "ariaLabel", "buttonSize", "dropDownButtonLabel", "visibleElementDependingOnViewport", "role"], outputs: ["select"] }], directives: [{ type: i0__namespace.forwardRef(function () { return AccountStatementDownloadsCustomizableDirective; }), selector: "[bbAccountStatementDownloadsCustomizableDirective]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i0__namespace.forwardRef(function () { return i4__namespace.TooltipDirective; }), selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i0__namespace.forwardRef(function () { return i5__namespace.ButtonDirective; }), selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }, { type: i0__namespace.forwardRef(function () { return AccountStatementDownloadDocDirective; }), selector: "[bbAccountStatementDownloadDoc]", inputs: ["bbAccountStatementDownloadDoc", "bbAccountStatementDownloadDocFilename"], outputs: ["bbAccountStatementDownloadDocFailure"] }, { type: i0__namespace.forwardRef(function () { return i2__namespace.DropdownMenuItemDirective; }), selector: "ng-template[bbDropdownMenuItem]" }, { type: i0__namespace.forwardRef(function () { return i3__namespace.NgForOf; }), selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDownloadsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-statement-downloads',
                        templateUrl: './account-statement-downloads.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { documents: [{
                    type: i0.Input
                }], mimeTypeExtensions: [{
                    type: i0.Input
                }], downloadFailure: [{
                    type: i0.Output
                }], describedByElementId: [{
                    type: i0.Input
                }], tooltipPlacement: [{
                    type: i0.Input
                }] } });
    var AccountStatementDownloadsCustomizableDirective = /** @class */ (function (_super) {
        __extends(AccountStatementDownloadsCustomizableDirective, _super);
        function AccountStatementDownloadsCustomizableDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AccountStatementDownloadsCustomizableDirective;
    }(core.BbTemplate));
    AccountStatementDownloadsCustomizableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDownloadsCustomizableDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    AccountStatementDownloadsCustomizableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementDownloadsCustomizableDirective, selector: "[bbAccountStatementDownloadsCustomizableDirective]", usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDownloadsCustomizableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[bbAccountStatementDownloadsCustomizableDirective]',
                    }]
            }] });

    var AccountStatementViewOnlineComponent = /** @class */ (function () {
        function AccountStatementViewOnlineComponent(domService, renderer) {
            this.domService = domService;
            this.renderer = renderer;
            this.href = '/';
            this.describedByElementId = '';
        }
        AccountStatementViewOnlineComponent.prototype.viewOnline = function () {
            this.domService.simulateLinkClick({
                target: '_blank',
                href: this.href,
            }, this.renderer);
        };
        return AccountStatementViewOnlineComponent;
    }());
    AccountStatementViewOnlineComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementViewOnlineComponent, deps: [{ token: AccountStatementDomService }, { token: i0__namespace.Renderer2 }], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountStatementViewOnlineComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementViewOnlineComponent, selector: "bb-account-statement-view-online", inputs: { href: "href", describedByElementId: "describedByElementId" }, ngImport: i0__namespace, template: "<div\n  triggers=\"hover focus\"\n  bbTooltip=\"Preview\"\n  i18n-bbTooltip=\"Preview|Tooltip text for preview button@@account-statement.preview.tooltip-simple\"\n>\n  <button\n    bbButton\n    color=\"link\"\n    [circle]=\"true\"\n    aria-label=\"View online\"\n    i18n-aria-label=\"View online link aria label@@account-statement.view-online.aria-label\"\n    [attr.aria-describedby]=\"describedByElementId\"\n    (click)=\"viewOnline()\"\n    data-role=\"view-online\"\n  >\n    <bb-icon-ui name=\"open-in-new\"></bb-icon-ui>\n  </button>\n</div>\n", components: [{ type: i1__namespace$1.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i4__namespace.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i5__namespace.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementViewOnlineComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-statement-view-online',
                        templateUrl: './account-statement-view-online.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: AccountStatementDomService }, { type: i0__namespace.Renderer2 }]; }, propDecorators: { href: [{
                    type: i0.Input
                }], describedByElementId: [{
                    type: i0.Input
                }] } });

    var EMPTY_RESPONSE_ERROR = new Error('Response body not set');

    /* eslint-disable @typescript-eslint/naming-convention */
    // eslint-disable-next-line no-shadow
    var HttpObserveType;
    (function (HttpObserveType) {
        HttpObserveType["BODY"] = "body";
        HttpObserveType["RESPONSE"] = "response";
        HttpObserveType["EVENT"] = "event";
    })(HttpObserveType || (HttpObserveType = {}));
    /* eslint-enable @typescript-eslint/naming-convention */

    var getArrangementsRequiredParams = {
        businessFunction: 'Product Summary',
        resourceName: 'Product Summary',
        privilege: 'view',
    };
    var isNonNullableHttpResponse = function (response) {
        // eslint-disable-next-line no-null/no-null
        return response.body !== null;
    };
    var AccountStatementDataService = /** @class */ (function () {
        function AccountStatementDataService(productSummaryHttpService, accountStatementsHttpService, http, locale) {
            this.productSummaryHttpService = productSummaryHttpService;
            this.accountStatementsHttpService = accountStatementsHttpService;
            this.http = http;
            this.locale = locale;
        }
        AccountStatementDataService.prototype.getAccounts = function (params) {
            return this.productSummaryHttpService
                .getArrangementsByBusinessFunction(Object.assign(Object.assign(Object.assign({}, getArrangementsRequiredParams), { favoriteFirst: true }), params), HttpObserveType.RESPONSE)
                .pipe(operators.switchMap(function (response) { return (isNonNullableHttpResponse(response) ? rxjs.of(response) : rxjs.throwError(EMPTY_RESPONSE_ERROR)); }));
        };
        AccountStatementDataService.prototype.getAccountStatementsBusiness = function (params) {
            return this.accountStatementsHttpService
                .postAccountStatements(params, HttpObserveType.RESPONSE)
                .pipe(operators.switchMap(function (response) { return isNonNullableHttpResponse(response) && Array.isArray(response.body)
                ? rxjs.of(response)
                : rxjs.throwError(EMPTY_RESPONSE_ERROR); }));
        };
        AccountStatementDataService.prototype.loadAccounts = function () {
            var _this = this;
            return this.productSummaryHttpService
                .getArrangementsByBusinessFunction(getArrangementsRequiredParams, HttpObserveType.RESPONSE)
                .pipe(operators.map(function (response) { return _this.processAccountsRawData(response.body); }));
        };
        AccountStatementDataService.prototype.loadCategories = function () {
            return this.accountStatementsHttpService.getCategories(HttpObserveType.RESPONSE).pipe(operators.map(function (_a) {
                var body = _a.body;
                // eslint-disable-next-line no-null/no-null
                if (body === null) {
                    throw new Error('Response does not contain body');
                }
                return body.categories;
            }));
        };
        AccountStatementDataService.prototype.loadAccountStatements = function (params) {
            var _this = this;
            if (params === void 0) { params = {}; }
            return this.accountStatementsHttpService
                .getAccountStatements(this.formatAccountStatementsParams(params), HttpObserveType.RESPONSE)
                .pipe(operators.map(function (response) { return _this.processAccountStatementsRawData(response); }));
        };
        AccountStatementDataService.prototype.getAccountStatementDownloadUrl = function (uid) {
            return this.accountStatementsHttpService.downloadAccountStatementsUrl({ uid: uid });
        };
        AccountStatementDataService.prototype.downloadFile = function (url) {
            return this.http.get(url, {
                responseType: 'arraybuffer',
                observe: 'response',
            });
        };
        AccountStatementDataService.prototype.processAccountsRawData = function (rawData) {
            return (rawData &&
                rawData.map(function (account) { return ({
                    id: account.id,
                    name: account.bankAlias || account.name,
                    identifier: account.IBAN || account.BBAN || account.productNumber,
                    amount: account.availableBalance,
                    currency: account.currency,
                }); }));
        };
        AccountStatementDataService.prototype.processAccountStatementsRawData = function (rawData) {
            var totalCount = (rawData && parseInt(String(rawData.headers.get('x-total-count')), 10)) || 0;
            return {
                data: rawData && rawData.body,
                totalCount: totalCount,
            };
        };
        AccountStatementDataService.prototype.formatBookDate = function (date) {
            return i3.formatDate(new Date(date), 'yyyy-MM-dd', this.locale);
        };
        AccountStatementDataService.prototype.formatAccountStatementsParams = function (params) {
            var dateFrom = params.dateFrom, dateTo = params.dateTo;
            return Object.assign(Object.assign(Object.assign({}, params), (dateFrom && {
                dateFrom: this.formatBookDate(dateFrom),
            })), (dateTo && {
                dateTo: this.formatBookDate(dateTo),
            }));
        };
        return AccountStatementDataService;
    }());
    AccountStatementDataService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDataService, deps: [{ token: i1__namespace$2.ProductSummaryHttpService }, { token: i2__namespace$1.AccountStatementHttpService }, { token: i3__namespace$1.HttpClient }, { token: i0.LOCALE_ID }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    AccountStatementDataService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDataService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementDataService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () {
            return [{ type: i1__namespace$2.ProductSummaryHttpService }, { type: i2__namespace$1.AccountStatementHttpService }, { type: i3__namespace$1.HttpClient }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i0.LOCALE_ID]
                        }] }];
        } });

    var AccountStatementPaginationComponent = /** @class */ (function () {
        function AccountStatementPaginationComponent() {
            /**
             * Event (Output) that emits when page prop is changed
             */
            this.pageChange = new i0.EventEmitter();
            /**
             * Event (Output) that emits when load-more
             */
            this.loadMore = new i0.EventEmitter();
            this.paginationTypeEnum = exports.PaginationType;
        }
        AccountStatementPaginationComponent.prototype.onPageChange = function (page) {
            this.pageChange.emit(page);
        };
        AccountStatementPaginationComponent.prototype.onLoadMore = function (loadMoreParams) {
            if (!this.loading) {
                this.loadMore.emit(loadMoreParams.from);
            }
        };
        return AccountStatementPaginationComponent;
    }());
    AccountStatementPaginationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementPaginationComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    AccountStatementPaginationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementPaginationComponent, selector: "bb-account-statement-pagination", inputs: { page: "page", from: "from", count: "count", itemsPerPage: "itemsPerPage", paginationType: "paginationType", hasMore: "hasMore", loading: "loading" }, outputs: { pageChange: "pageChange", loadMore: "loadMore" }, ngImport: i0__namespace, template: "<div class=\"bb-block bb-block--xl bb-text-align-center\">\n  <bb-pagination-ui\n    *ngIf=\"paginationType === paginationTypeEnum.Pagination && (hasMore || (!!page && page > 0))\"\n    [page]=\"page || 0\"\n    [totalItems]=\"count || 0\"\n    [itemsPerPage]=\"itemsPerPage || 0\"\n    [boundaryLinks]=\"true\"\n    [directionLinks]=\"true\"\n    [maxNavPages]=\"3\"\n    (pageChange)=\"onPageChange($event)\"\n  >\n  </bb-pagination-ui>\n\n  <bb-load-button-ui\n    color=\"link\"\n    *ngIf=\"paginationType === paginationTypeEnum.LoadMore\"\n    [from]=\"page || 0\"\n    [size]=\"itemsPerPage || 0\"\n    [totalCount]=\"count || 0\"\n    [isLoading]=\"loading || false\"\n    (paramChange)=\"onLoadMore($event)\"\n    data-role=\"load-more-button\"\n  >\n    <span i18n=\"Load more|Load More button text@@accountStatement.list.load-more\">Load more</span>\n  </bb-load-button-ui>\n</div>\n", components: [{ type: i1__namespace$3.PaginatorComponent, selector: "bb-pagination-ui", inputs: ["page", "boundaryLinks", "directionLinks", "totalItems", "itemsPerPage", "maxNavPages"], outputs: ["pageChange"] }, { type: i2__namespace$2.LoadButtonComponent, selector: "bb-load-button-ui", inputs: ["isLoading", "from", "size", "circle", "totalCount"], outputs: ["paramChange"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementPaginationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'bb-account-statement-pagination',
                        templateUrl: './account-statement-pagination.component.html',
                    }]
            }], propDecorators: { page: [{
                    type: i0.Input
                }], from: [{
                    type: i0.Input
                }], count: [{
                    type: i0.Input
                }], itemsPerPage: [{
                    type: i0.Input
                }], paginationType: [{
                    type: i0.Input
                }], hasMore: [{
                    type: i0.Input
                }], loading: [{
                    type: i0.Input
                }], pageChange: [{
                    type: i0.Output
                }], loadMore: [{
                    type: i0.Output
                }] } });

    var components = [
        AccountStatementViewOnlineComponent,
        AccountStatementDownloadsComponent,
        AccountStatementAccountSelectorComponent,
        AccountStatementPaginationComponent,
    ];
    var directives = [
        AccountStatementDownloadDocDirective,
        AccountStatementDownloadsCustomizableDirective,
        AccountStatementAccountSelectorCustomizableDirective,
    ];
    var uiModules = [
        i5.ButtonModule,
        i2.DropdownMenuModule,
        i1$1.IconModule,
        i4.TooltipModule,
        i1.AccountSelectorModule,
        i2$2.LoadButtonModule,
        i1$3.PaginationModule,
    ];
    var AccountStatementCommonModule = /** @class */ (function () {
        function AccountStatementCommonModule() {
        }
        return AccountStatementCommonModule;
    }());
    AccountStatementCommonModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementCommonModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AccountStatementCommonModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementCommonModule, declarations: [AccountStatementViewOnlineComponent,
            AccountStatementDownloadsComponent,
            AccountStatementAccountSelectorComponent,
            AccountStatementPaginationComponent, AccountStatementDownloadDocDirective,
            AccountStatementDownloadsCustomizableDirective,
            AccountStatementAccountSelectorCustomizableDirective], imports: [i3.CommonModule, i5.ButtonModule,
            i2.DropdownMenuModule,
            i1$1.IconModule,
            i4.TooltipModule,
            i1.AccountSelectorModule,
            i2$2.LoadButtonModule,
            i1$3.PaginationModule], exports: [AccountStatementViewOnlineComponent,
            AccountStatementDownloadsComponent,
            AccountStatementAccountSelectorComponent,
            AccountStatementPaginationComponent, AccountStatementDownloadDocDirective,
            AccountStatementDownloadsCustomizableDirective,
            AccountStatementAccountSelectorCustomizableDirective, i5.ButtonModule,
            i2.DropdownMenuModule,
            i1$1.IconModule,
            i4.TooltipModule,
            i1.AccountSelectorModule,
            i2$2.LoadButtonModule,
            i1$3.PaginationModule] });
    AccountStatementCommonModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementCommonModule, providers: [AccountStatementDataService, AccountStatementDomService], imports: [__spreadArray([i3.CommonModule], __read(uiModules)), i5.ButtonModule,
            i2.DropdownMenuModule,
            i1$1.IconModule,
            i4.TooltipModule,
            i1.AccountSelectorModule,
            i2$2.LoadButtonModule,
            i1$3.PaginationModule] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementCommonModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: __spreadArray([i3.CommonModule], __read(uiModules)),
                        declarations: __spreadArray(__spreadArray([], __read(components)), __read(directives)),
                        providers: [AccountStatementDataService, AccountStatementDomService],
                        exports: __spreadArray(__spreadArray(__spreadArray([], __read(components)), __read(directives)), __read(uiModules)),
                    }]
            }] });

    // @dynamic
    // eslint-disable-next-line @angular-eslint/directive-class-suffix
    var AccountStatementBaseWidgetComponent = /** @class */ (function () {
        function AccountStatementBaseWidgetComponent(propertiesService) {
            this.propertiesService = propertiesService;
        }
        Object.defineProperty(AccountStatementBaseWidgetComponent.prototype, "pageSizeValue", {
            /* eslint-disable @angular-eslint/no-input-rename */
            /**
             * Number of statements per page
             */
            set: function (value) {
                this.propertiesService.setPageSize(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBaseWidgetComponent.prototype, "sortingOrderValue", {
            /**
             * Sorting order (date, description, category)
             */
            set: function (value) {
                this.propertiesService.setSortingOrder(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBaseWidgetComponent.prototype, "sortingDirectionValue", {
            /**
             * Sorting direction (ASC, DESC)
             */
            set: function (value) {
                this.propertiesService.setSortingDirection(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBaseWidgetComponent.prototype, "showCategoryValue", {
            /**
             * Flag to show/hide categories
             */
            set: function (value) {
                this.propertiesService.setShowCategory(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBaseWidgetComponent.prototype, "notificationDismissTime", {
            /* eslint-enable @angular-eslint/no-input-rename */
            /**
             * Notification dismiss time in seconds
             */
            set: function (value) {
                this.propertiesService.setNotificationDismissTime(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBaseWidgetComponent.prototype, "relativeDateLimit", {
            /**
             * Relative filter datepicker limit (months)
             */
            set: function (value) {
                this.propertiesService.setRelativeDateLimit(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBaseWidgetComponent.prototype, "absoluteDateLimit", {
            /**
             * Absolute filter datepicker limit (yyyy-mm-dd)
             */
            set: function (value) {
                this.propertiesService.setAbsoluteDateLimit(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBaseWidgetComponent.prototype, "paginationType", {
            /**
             * Pagination type (PAGINATION or LOAD_MORE)
             */
            set: function (value) {
                this.propertiesService.setPaginationType(value);
            },
            enumerable: false,
            configurable: true
        });
        return AccountStatementBaseWidgetComponent;
    }());
    AccountStatementBaseWidgetComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementBaseWidgetComponent, deps: "invalid", target: i0__namespace.ɵɵFactoryTarget.Directive });
    AccountStatementBaseWidgetComponent.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementBaseWidgetComponent, inputs: { pageSizeValue: ["pageSize", "pageSizeValue"], sortingOrderValue: ["sortingOrder", "sortingOrderValue"], sortingDirectionValue: ["sortingDirection", "sortingDirectionValue"], showCategoryValue: ["showCategory", "showCategoryValue"], notificationDismissTime: "notificationDismissTime", relativeDateLimit: "relativeDateLimit", absoluteDateLimit: "absoluteDateLimit", paginationType: "paginationType" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0__namespace, type: AccountStatementBaseWidgetComponent, decorators: [{
                type: i0.Directive
            }], ctorParameters: function () { return [{ type: undefined }]; }, propDecorators: { pageSizeValue: [{
                    type: i0.Input,
                    args: ['pageSize']
                }], sortingOrderValue: [{
                    type: i0.Input,
                    args: ['sortingOrder']
                }], sortingDirectionValue: [{
                    type: i0.Input,
                    args: ['sortingDirection']
                }], showCategoryValue: [{
                    type: i0.Input,
                    args: ['showCategory']
                }], notificationDismissTime: [{
                    type: i0.Input
                }], relativeDateLimit: [{
                    type: i0.Input
                }], absoluteDateLimit: [{
                    type: i0.Input
                }], paginationType: [{
                    type: i0.Input
                }] } });

    var secondsToMilliseconds = function (seconds) { return seconds * 1000; };

    var DEFAULT_NOTIFICATION_DISMISS_TIME = 5;
    var DEFAULT_PAGE_SIZE = 24;
    var widgetPropertyNames = {
        /* eslint-disable @typescript-eslint/naming-convention */
        PAGE_SIZE: 'bb.accountStatement.pageSize',
        SORTING_ORDER: 'bb.accountStatement.sortingOrder',
        SORTING_DIRECTION: 'bb.accountStatement.sortingDirection',
        RELATIVE_DATE_LIMIT: 'bb.accountStatement.relativeDateLimit',
        ABSOLUTE_DATE_LIMIT: 'bb.accountStatement.absoluteDateLimit',
        NOTIFICATION_DISMISS_TIME: 'notificationDismissTime',
        SHOW_CATEGORY: 'bb.accountStatement.showCategory',
        /* eslint-enable @typescript-eslint/naming-convention */
    };
    exports.AccountStatementBasePropertiesService = /** @class */ (function () {
        function AccountStatementBasePropertiesService(itemModel) {
            this.itemModel = itemModel;
            /* eslint-disable @typescript-eslint/member-ordering */
            this.pageSize$$ = new rxjs.BehaviorSubject(undefined);
            this.sortingOrder$$ = new rxjs.BehaviorSubject(undefined);
            this.sortingDirection$$ = new rxjs.BehaviorSubject(undefined);
            this.relativeDateLimit$$ = new rxjs.BehaviorSubject(undefined);
            this.absoluteDateLimit$$ = new rxjs.BehaviorSubject(undefined);
            this.paginationType$$ = new rxjs.BehaviorSubject(undefined);
            this.notificationDismissTime$$ = new rxjs.BehaviorSubject(undefined);
            this.showCategory$$ = new rxjs.BehaviorSubject(undefined);
            this.pageSize$ = this.getWidgetProperty$(this.pageSize$$, this.pageSizeIM$);
            this.sortingOrder$ = this.getWidgetProperty$(this.sortingOrder$$, this.sortingOrderIM$);
            this.sortingDirection$ = this.getWidgetProperty$(this.sortingDirection$$, this.sortingDirectionIM$);
            this.relativeDateLimit$ = this.getWidgetProperty$(this.relativeDateLimit$$, this.relativeDateLimitIM$);
            this.absoluteDateLimit$ = this.getWidgetProperty$(this.absoluteDateLimit$$, this.absoluteDateLimitIM$);
            this.paginationType$ = this.getWidgetProperty$(this.paginationType$$, this.getPaginationTypeIM$());
            this.notificationDismissTime$ = this.getWidgetProperty$(this.notificationDismissTime$$, this.notificationDismissTimePropertyIM$).pipe(operators.map(secondsToMilliseconds));
            this.showCategory$ = this.getWidgetProperty$(this.showCategory$$, this.showCategoryIM$);
        }
        /* eslint-enable @typescript-eslint/member-ordering */
        AccountStatementBasePropertiesService.prototype.setPaginationType = function (value) {
            this.paginationType$$.next(value);
        };
        AccountStatementBasePropertiesService.prototype.setPageSize = function (value) {
            this.pageSize$$.next(value);
        };
        AccountStatementBasePropertiesService.prototype.setSortingOrder = function (value) {
            this.sortingOrder$$.next(value);
        };
        AccountStatementBasePropertiesService.prototype.setSortingDirection = function (value) {
            this.sortingDirection$$.next(value);
        };
        AccountStatementBasePropertiesService.prototype.setNotificationDismissTime = function (value) {
            this.notificationDismissTime$$.next(value);
        };
        AccountStatementBasePropertiesService.prototype.setRelativeDateLimit = function (value) {
            this.relativeDateLimit$$.next(value);
        };
        AccountStatementBasePropertiesService.prototype.setAbsoluteDateLimit = function (value) {
            this.absoluteDateLimit$$.next(value);
        };
        AccountStatementBasePropertiesService.prototype.setShowCategory = function (value) {
            this.showCategory$$.next(value);
        };
        AccountStatementBasePropertiesService.prototype.getWidgetProperty$ = function (property$, propertyIM$) {
            return rxjs.combineLatest([property$, propertyIM$]).pipe(operators.map(function (_b) {
                var _c = __read(_b, 2), value = _c[0], valueIM = _c[1];
                return (value === undefined ? valueIM : value);
            }));
        };
        Object.defineProperty(AccountStatementBasePropertiesService.prototype, "pageSizeIM$", {
            get: function () {
                var _a;
                var defaultValue = DEFAULT_PAGE_SIZE;
                return (((_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property(widgetPropertyNames.PAGE_SIZE, defaultValue).pipe(operators.map(toInteger))) || rxjs.of(defaultValue));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBasePropertiesService.prototype, "sortingOrderIM$", {
            get: function () {
                var _a;
                var defaultValue = 'date';
                return ((_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property(widgetPropertyNames.SORTING_ORDER, defaultValue)) || rxjs.of(defaultValue);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBasePropertiesService.prototype, "sortingDirectionIM$", {
            get: function () {
                var _a;
                var defaultValue = i2$1.AccountStatementsPostRequest.DirectionEnum.DESC;
                return ((_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property(widgetPropertyNames.SORTING_DIRECTION, defaultValue)) || rxjs.of(defaultValue);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBasePropertiesService.prototype, "relativeDateLimitIM$", {
            get: function () {
                var _a;
                var defaultValue = 0;
                return (((_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property(widgetPropertyNames.RELATIVE_DATE_LIMIT, defaultValue).pipe(operators.map(toInteger))) ||
                    rxjs.of(defaultValue));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBasePropertiesService.prototype, "absoluteDateLimitIM$", {
            get: function () {
                var _a;
                var defaultValue = '';
                return ((_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property(widgetPropertyNames.ABSOLUTE_DATE_LIMIT, defaultValue)) || rxjs.of(defaultValue);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBasePropertiesService.prototype, "notificationDismissTimePropertyIM$", {
            get: function () {
                var _a;
                var defaultValue = DEFAULT_NOTIFICATION_DISMISS_TIME;
                return (((_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property(widgetPropertyNames.NOTIFICATION_DISMISS_TIME, defaultValue).pipe(operators.map(Number), operators.map(function (num) { return (isNaN(num) ? DEFAULT_NOTIFICATION_DISMISS_TIME : num); }))) || rxjs.of(defaultValue));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(AccountStatementBasePropertiesService.prototype, "showCategoryIM$", {
            get: function () {
                var _a;
                var defaultValue = true;
                return (((_a = this.itemModel) === null || _a === void 0 ? void 0 : _a.property(widgetPropertyNames.SHOW_CATEGORY, defaultValue).pipe(operators.map(modelItemToBoolean))) ||
                    rxjs.of(defaultValue));
            },
            enumerable: false,
            configurable: true
        });
        return AccountStatementBasePropertiesService;
    }());
    exports.AccountStatementBasePropertiesService = __decorate([
        __param(0, i0.Optional())
    ], exports.AccountStatementBasePropertiesService);

    var DEFAULT_JOURNEY_CONFIGURATION = {
        absoluteDateLimit: '',
        notificationDismissTime: 5,
        paginationType: exports.PaginationType.LoadMore,
        pageSize: 24,
        relativeDateLimit: 0,
        sortingDirection: 'DESC',
        sortingOrder: 'date',
        showCategory: true,
    };

    /**
     * Abstract class for all the journeys that require common configuration
     *
     * @template T - Type of the configuration object for journey
     * @internal
     */
    var JourneyConfigurationService = /** @class */ (function () {
        /**
         * Create new instance of journey service
         *
         * @param staticConfigOverrides new configuration object provided by concrete class
         */
        function JourneyConfigurationService(staticConfigOverrides) {
            this.staticConfig = Object.assign(Object.assign({}, DEFAULT_JOURNEY_CONFIGURATION), staticConfigOverrides);
        }
        Object.defineProperty(JourneyConfigurationService.prototype, "absoluteDateLimit", {
            /** Absolute filter datepicker limit (yyyy-mm-dd)
             *
             * @defaultValue ''
             * @returns An observable of string
             */
            get: function () {
                return rxjs.of(this.staticConfig.absoluteDateLimit);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(JourneyConfigurationService.prototype, "notificationDismissTime", {
            /**
             * Notification dismiss time in seconds (defaults to 5)
             *
             * @defaultValue 5
             * @returns An observable of number
             */
            get: function () {
                return rxjs.of(this.staticConfig.notificationDismissTime);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(JourneyConfigurationService.prototype, "paginationType", {
            /**
             * PaginationType will decide whether the user will see load more or page number style pagination
             *
             * @defaultValue `PaginationType.LOAD_MORE`
             * @returns An observable of PaginationType enum
             */
            get: function () {
                return rxjs.of(this.staticConfig.paginationType);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(JourneyConfigurationService.prototype, "pageSize", {
            /**
             * Number of items to be fetched in single request
             *
             * @defaultValue 10
             * @returns An observable of number
             */
            get: function () {
                return rxjs.of(this.staticConfig.pageSize);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(JourneyConfigurationService.prototype, "relativeDateLimit", {
            /**
             * Relative filter datepicker limit (months)
             *
             * @defaultValue 0
             * @returns An observable of number
             */
            get: function () {
                return rxjs.of(this.staticConfig.relativeDateLimit);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(JourneyConfigurationService.prototype, "sortingDirection", {
            /**
             * Sorting direction (ASC, DESC)
             *
             * @defaultValue DESC
             * @returns a string
             */
            get: function () {
                return rxjs.of(this.staticConfig.sortingDirection);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(JourneyConfigurationService.prototype, "sortingOrder", {
            /**
             * Sorting order (date, description, category)
             *
             * @defaultValue date
             * @returns a string
             */
            get: function () {
                return rxjs.of(this.staticConfig.sortingOrder);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(JourneyConfigurationService.prototype, "showCategory", {
            /**
             * Show category
             *
             * @defaultValue true
             * @returns An observable of boolean
             */
            get: function () {
                return rxjs.of(this.staticConfig.showCategory);
            },
            enumerable: false,
            configurable: true
        });
        return JourneyConfigurationService;
    }());

    var mimeTypeExtensions = {
        'application/pdf': 'PDF',
        'text/csv': 'CSV',
        'text/plain': 'TXT',
        'application/rtf': 'RTF',
        'application/msword': 'DOC',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'DOC',
        'application/vnd.ms-excel': 'XLS',
        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'XLS',
        'application/xml': 'XML',
        'image/png': 'PNG',
        'image/jpeg': 'JPG',
        'image/gif': 'GIF',
        'image/tiff': 'TIFF',
        'binary/octet-stream': 'File',
    };

    var ACCOUNTS_REQUEST_ALL_SIZE = 9999;

    /* eslint-disable @typescript-eslint/naming-convention */
    // eslint-disable-next-line no-shadow
    exports.DatePeriods = void 0;
    (function (DatePeriods) {
        DatePeriods["Today"] = "Today";
        DatePeriods["Yesterday"] = "Yesterday";
        DatePeriods["ThisWeek"] = "This week";
        DatePeriods["LastWeek"] = "Last week";
        DatePeriods["ThisMonth"] = "This month";
        DatePeriods["LastMonth"] = "Last month";
        DatePeriods["ThisQuarter"] = "This quarter";
        DatePeriods["LastQuarter"] = "Last quarter";
        DatePeriods["ThisYear"] = "This year";
        DatePeriods["AllTime"] = "All time";
    })(exports.DatePeriods || (exports.DatePeriods = {}));
    /* eslint-enable @typescript-eslint/naming-convention */

    var _a;
    var CUSTOM_FILTER_PERIODS_VALUES = (_a = {},
        _a[exports.DatePeriods.AllTime] = function () { return ({
            from: undefined,
            to: undefined,
        }); },
        _a[exports.DatePeriods.Today] = function () { return ({
            from: today(),
            to: today(),
        }); },
        _a[exports.DatePeriods.Yesterday] = function () { return ({
            from: new Date(today().setDate(today().getDate() - 1)),
            to: new Date(today().setDate(today().getDate() - 1)),
        }); },
        _a[exports.DatePeriods.ThisWeek] = function () { return ({
            from: firstDayInThisWeek(),
            to: today(),
        }); },
        _a[exports.DatePeriods.LastWeek] = function () { return ({
            from: firstDayInLastWeek(),
            to: lastDayInLastWeek(),
        }); },
        _a[exports.DatePeriods.ThisMonth] = function () { return ({
            from: firstDayInThisMonth(),
            to: today(),
        }); },
        _a[exports.DatePeriods.LastMonth] = function () { return ({
            from: firstDayInLastMonth(),
            to: lastDayInLastMonth(),
        }); },
        _a[exports.DatePeriods.ThisQuarter] = function () { return ({
            from: firstDayInThisQuarter(),
            to: today(),
        }); },
        _a[exports.DatePeriods.LastQuarter] = function () { return ({
            from: firstDayInLastQuarter(),
            to: lastDayInLastQuarter(),
        }); },
        _a[exports.DatePeriods.ThisYear] = function () { return ({
            from: firstDayInThisYear(),
            to: today(),
        }); },
        _a);

    var accountStatementsResponseMock = [
        {
            accountId: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',
            accountName: 'The Walt Disney Company',
            accountNumber: 'UA85 3996 2200 0000 0260 0123 3566 1',
            date: '2016-02-15',
            category: 'Credit Card',
            description: 'Credit Card statement - February 2016',
            documents: [
                {
                    url: 'http://server.com/documentsdepo/uid_1',
                    contentType: 'application/pdf',
                },
            ],
        },
        {
            accountId: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',
            accountName: 'The Walt Disney Company',
            accountNumber: 'UA85 3996 2200 0000 0260 0123 3566 1',
            date: '2016-03-15',
            category: 'Credit Card',
            description: 'Credit Card statement - March 2016',
            documents: [
                {
                    uid: 'uid_2',
                    contentType: 'application/pdf',
                },
            ],
        },
        {
            accountId: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',
            accountName: 'The Walt Disney Company',
            accountNumber: 'UA85 3996 2200 0000 0260 0123 3566 1',
            date: '2016-04-15',
            category: 'Credit Card',
            description: 'Credit Card statement - April 2016',
            documents: [
                {
                    uid: 'uid_3',
                    contentType: 'application/pdf',
                },
            ],
        },
        {
            accountId: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',
            accountName: 'The Walt Disney Company',
            accountNumber: 'UA85 3996 2200 0000 0260 0123 3566 1',
            date: '2016-05-15',
            category: 'Credit Card',
            description: 'Credit Card statement - May 2016',
            documents: [
                {
                    url: 'http://server.com/documentsdepo/uid_4',
                    contentType: 'application/pdf',
                },
            ],
        },
        {
            accountId: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4699',
            accountName: 'The Walt Disney Company',
            accountNumber: 'UA85 3996 2200 0000 0260 0123 3566 1',
            date: '2016-06-15',
            category: 'Credit Card',
            description: 'Credit Card statement - June 2016',
            documents: [
                {
                    uid: 'uid_5',
                    contentType: 'application/pdf',
                },
            ],
        },
    ];

    var accountsResponseMock = [
        {
            id: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4691',
            externalArrangementId: 'bcf10f4d-4b2f-4413-9bab-31ff693608b5',
            externalLegalEntityId: 'c7a382786d514262b75ab9531b749a2b',
            externalProductId: 'fade7867-533e-465e-90cb-e41675c54400',
            name: 'Mr and Mrs J. Smith',
            bankAlias: 'Our joined account',
            sourceId: 'LJBASI2XXXX',
            bookedBalance: 1000,
            availableBalance: 1500,
            creditLimit: 442.12,
            // eslint-disable-next-line @typescript-eslint/naming-convention
            IBAN: 'CY3887370130MJFTJ3B8Y9W7IGRO',
            // eslint-disable-next-line @typescript-eslint/naming-convention
            BBAN: '8873701303897',
            currency: 'AED',
            externalTransferAllowed: true,
            urgentTransferAllowed: true,
            accruedInterest: 0.54,
            // eslint-disable-next-line id-blacklist
            number: 'PANS',
            principalAmount: 620.54,
            currentInvestmentValue: 0.16,
            legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],
            productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',
            productNumber: 'ffdd939c-ac4a-4441-ae47-70a7259899e7',
            productKindName: 'Current Account',
            productTypeName: 'Current Account',
            // eslint-disable-next-line @typescript-eslint/naming-convention
            BIC: 'AABAFI22',
            bankBranchCode: 'bankBranchCode',
            visible: false,
            accountOpeningDate: '2016-01-28T16:41:41.090Z',
            accountInterestRate: 100.2,
            valueDateBalance: 100.1,
            creditLimitUsage: 100.3,
            creditLimitInterestRate: 100.4,
            creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',
            startDate: '2016-02-28T16:41:41.090Z',
            termUnit: 'Y',
            termNumber: 50,
            interestPaymentFrequencyUnit: 'M',
            interestPaymentFrequencyNumber: 15,
            maturityDate: '2017-02-28T16:41:41.090Z',
            maturityAmount: 99.5,
            autoRenewalIndicator: true,
            interestSettlementAccount: 'interestSettlementAccount1',
            outstandingPrincipalAmount: 100.2,
            monthlyInstalmentAmount: 100.1,
            amountInArrear: 100.3,
            minimumRequiredBalance: 80.4,
            creditCardAccountNumber: '123456',
            validThru: '2019-02-28T16:41:41.090Z',
            applicableInterestRate: 101.2,
            remainingCredit: 50,
            outstandingPayment: 105.5,
            minimumPayment: 51.1,
            minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',
            totalInvestmentValue: 110.2,
            debitCards: [
                {
                    // eslint-disable-next-line id-blacklist
                    number: '4578',
                    expiryDate: '2020-08-22',
                    cardId: 'id1',
                    cardholderName: 'John Doe',
                    cardType: 'Visa Electron',
                    cardStatus: 'Active',
                },
                {
                    // eslint-disable-next-line id-blacklist
                    number: '3241',
                    expiryDate: '2019-01-14',
                    cardId: 'id2',
                    cardholderName: 'John Doe',
                    cardType: 'Visa',
                    cardStatus: 'Active',
                },
            ],
            accountHolderAddressLine1: 'accountHolderAddressLine11',
            accountHolderAddressLine2: 'accountHolderAddressLine12',
            accountHolderStreetName: 'accountHolderStreetName1',
            town: 'Paris',
            postCode: '2000',
            countrySubDivision: 'countrySubDivision1',
            accountHolderNames: 'Danthe Mohr',
            accountHolderCountry: 'FR',
            creditAccount: true,
            debitAccount: true,
            lastUpdateDate: '2016-01-28T16:41:41.090Z',
            favorite: true,
            userPreferences: {
                alias: 'Our joined account',
                visible: true,
                favorite: false,
            },
            product: {
                externalId: 'externalProductidId',
                externalTypeId: 'externalProductTypeId',
                typeName: 'Current Account',
                productKind: {
                    id: 1,
                    externalKindId: 'kind1',
                    kindName: 'Current Account',
                    kindUri: 'current-account',
                },
            },
            state: {
                externalStateId: 'externalStateId1',
                state: 'Active',
            },
        },
        {
            id: '1cdb2224-8926-4b4d-a99f-1c9dfbbb4692',
            externalArrangementId: 'bcf10f4d-4b2f-4413-9bab-31ff693608b5',
            externalLegalEntityId: 'c7a382786d514262b75ab9531b749a2b',
            externalProductId: 'fade7867-533e-465e-90cb-e41675c54400',
            name: 'Howlin Wolf',
            bankAlias: 'Royalties account',
            sourceId: 'LJBASI2XXXX',
            bookedBalance: 15000,
            availableBalance: 21500,
            creditLimit: 3442.12,
            // eslint-disable-next-line @typescript-eslint/naming-convention
            IBAN: 'GB60OHSF29521903589133',
            // eslint-disable-next-line @typescript-eslint/naming-convention
            BBAN: '029521903589133',
            currency: 'AED',
            externalTransferAllowed: true,
            urgentTransferAllowed: true,
            accruedInterest: 0.54,
            // eslint-disable-next-line id-blacklist
            number: 'PANS',
            principalAmount: 620.54,
            currentInvestmentValue: 0.16,
            legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],
            productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',
            productNumber: 'ffdd939c-ac4a-4441-ae47-70a7259899e7',
            productKindName: 'Current Account',
            productTypeName: 'Current Account',
            // eslint-disable-next-line @typescript-eslint/naming-convention
            BIC: 'AABAFI22',
            bankBranchCode: 'bankBranchCode',
            visible: false,
            accountOpeningDate: '2016-01-28T16:41:41.090Z',
            accountInterestRate: 100.2,
            valueDateBalance: 100.1,
            creditLimitUsage: 100.3,
            creditLimitInterestRate: 100.4,
            creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',
            startDate: '2016-02-28T16:41:41.090Z',
            termUnit: 'Y',
            termNumber: 50,
            interestPaymentFrequencyUnit: 'M',
            interestPaymentFrequencyNumber: 15,
            maturityDate: '2017-02-28T16:41:41.090Z',
            maturityAmount: 99.5,
            autoRenewalIndicator: true,
            interestSettlementAccount: 'interestSettlementAccount1',
            outstandingPrincipalAmount: 100.2,
            monthlyInstalmentAmount: 100.1,
            amountInArrear: 100.3,
            minimumRequiredBalance: 80.4,
            creditCardAccountNumber: '123456',
            validThru: '2019-02-28T16:41:41.090Z',
            applicableInterestRate: 101.2,
            remainingCredit: 50,
            outstandingPayment: 105.5,
            minimumPayment: 51.1,
            minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',
            totalInvestmentValue: 110.2,
            debitCards: [
                {
                    // eslint-disable-next-line id-blacklist
                    number: '4578',
                    expiryDate: '2020-08-22',
                    cardId: 'id1',
                    cardholderName: 'John Doe',
                    cardType: 'Visa Electron',
                    cardStatus: 'Active',
                },
                {
                    // eslint-disable-next-line id-blacklist
                    number: '3241',
                    expiryDate: '2019-01-14',
                    cardId: 'id2',
                    cardholderName: 'John Doe',
                    cardType: 'Visa',
                    cardStatus: 'Active',
                },
            ],
            accountHolderAddressLine1: 'accountHolderAddressLine11',
            accountHolderAddressLine2: 'accountHolderAddressLine12',
            accountHolderStreetName: 'accountHolderStreetName1',
            town: 'Skopje',
            postCode: '2000',
            countrySubDivision: 'countrySubDivision1',
            accountHolderNames: 'Toso Malerot',
            accountHolderCountry: 'MK',
            creditAccount: true,
            debitAccount: true,
            lastUpdateDate: '2016-01-28T16:41:41.090Z',
            favorite: true,
            userPreferences: {
                alias: 'Royalties account',
                visible: true,
                favorite: false,
            },
            product: {
                externalId: 'externalProductidId',
                externalTypeId: 'externalProductTypeId',
                typeName: 'Current Account',
                productKind: {
                    id: 1,
                    externalKindId: 'kind1',
                    kindName: 'Current Account',
                    kindUri: 'current-account',
                },
            },
            state: {
                externalStateId: 'externalStateId2',
                state: 'InActive',
            },
        },
        {
            id: '3cdb2224-8926-4b4d-a99f-1c9dfbbb4600',
            externalArrangementId: 'bcf10f4d-4b2f-4413-9bab-31ff693608b5',
            externalLegalEntityId: 'c7a382786d514262b75ab9531b749a2b',
            externalProductId: 'fade7867-533e-465e-90cb-e41675c54400',
            name: 'Company saving account',
            bankAlias: 'Langosh, Okuneva and Spencer',
            sourceId: 'LJBASI2XXXX',
            bookedBalance: 10550000,
            availableBalance: 1500,
            // eslint-disable-next-line @typescript-eslint/naming-convention
            IBAN: 'IT09R0442267398V9QB48EV3THQ',
            // eslint-disable-next-line @typescript-eslint/naming-convention
            BBAN: '904422673989483',
            currency: 'EUR',
            externalTransferAllowed: true,
            urgentTransferAllowed: true,
            accruedInterest: 36.16,
            // eslint-disable-next-line id-blacklist
            number: 'PANS',
            principalAmount: 620.54,
            currentInvestmentValue: 0.16,
            legalEntityIds: ['257da57a-11e4-4553-9175-54baf755069b', 'cd83683b-13f2-43d8-882b-39c9ab27d499'],
            productId: '36c8fc42-ec97-4f83-8a7c-d622625007f3',
            productNumber: 'ffdd939c-ac4a-4441-ae47-70a7259899e7',
            productKindName: 'Savings Account',
            productTypeName: 'productTypeName',
            // eslint-disable-next-line @typescript-eslint/naming-convention
            BIC: 'AABAFI22',
            bankBranchCode: 'bankBranchCode',
            visible: false,
            accountOpeningDate: '2016-01-28T16:41:41.090Z',
            accountInterestRate: 100.2,
            valueDateBalance: 100.1,
            creditLimitUsage: 100.3,
            creditLimitInterestRate: 100.4,
            creditLimitExpiryDate: '2019-09-28T16:41:41.090Z',
            startDate: '2016-02-28T16:41:41.090Z',
            termUnit: 'Y',
            termNumber: 50,
            interestPaymentFrequencyUnit: 'M',
            interestPaymentFrequencyNumber: 15,
            maturityDate: '2017-02-28T16:41:41.090Z',
            maturityAmount: 99.5,
            autoRenewalIndicator: true,
            interestSettlementAccount: 'interestSettlementAccount1',
            outstandingPrincipalAmount: 100.2,
            monthlyInstalmentAmount: 100.1,
            amountInArrear: 100.3,
            minimumRequiredBalance: 80.4,
            creditCardAccountNumber: '123456',
            validThru: '2019-02-28T16:41:41.090Z',
            applicableInterestRate: 101.2,
            remainingCredit: 50,
            outstandingPayment: 105.5,
            minimumPayment: 51.1,
            minimumPaymentDueDate: '2018-02-28T16:41:41.090Z',
            totalInvestmentValue: 110.2,
            debitCards: [
                {
                    // eslint-disable-next-line id-blacklist
                    number: '4578',
                    expiryDate: '2020-08-22',
                    cardId: 'id1',
                    cardholderName: 'John Doe',
                    cardType: 'Visa Electron',
                    cardStatus: 'Active',
                },
                {
                    // eslint-disable-next-line id-blacklist
                    number: '3241',
                    expiryDate: '2019-01-14',
                    cardId: 'id2',
                    cardholderName: 'John Doe',
                    cardType: 'Visa',
                    cardStatus: 'Active',
                },
            ],
            accountHolderAddressLine1: 'accountHolderAddressLine11',
            accountHolderAddressLine2: 'accountHolderAddressLine12',
            accountHolderStreetName: 'accountHolderStreetName1',
            town: 'Skopje',
            postCode: '2000',
            countrySubDivision: 'countrySubDivision1',
            accountHolderNames: 'Mile Panika',
            accountHolderCountry: 'MK',
            creditAccount: true,
            debitAccount: true,
            lastUpdateDate: '2016-01-28T16:41:41.090Z',
            favorite: true,
            userPreferences: {
                alias: 'Langosh, Okuneva and Spencer',
                visible: true,
                favorite: false,
            },
            product: {
                externalId: 'externalProductidId',
                externalTypeId: 'externalProductTypeId',
                typeName: 'Saving Account',
                productKind: {
                    id: 1,
                    externalKindId: 'kind1',
                    kindName: 'Saving Account',
                    kindUri: 'Saving-account',
                },
            },
            state: {
                externalStateId: 'externalStateId2',
                state: 'Open',
            },
        },
    ];
    var accountsDataMock = [
        {
            id: '1',
            name: 'Account Name',
            identifier: '1234 5678 9012',
            amount: 1,
            currency: 'EUR',
        },
        {
            id: '2',
            name: 'Account Name 2',
            identifier: '5678 9012 1234',
            amount: 2,
            currency: 'USD',
        },
    ];

    var ActivatedRouteStub = /** @class */ (function () {
        /* eslint-enable @typescript-eslint/member-ordering */
        function ActivatedRouteStub(initialParams) {
            this.subject = new rxjs.BehaviorSubject({});
            /* eslint-disable @typescript-eslint/member-ordering */
            this.paramMap = this.subject.asObservable();
            this.setParamMap(initialParams);
        }
        ActivatedRouteStub.prototype.setParamMap = function (params, parent) {
            if (params === void 0) { params = {}; }
            var paramMap = router.convertToParamMap(params);
            this._paramMap = paramMap;
            if (parent) {
                this.parent = new ActivatedRouteStub();
                this.parent.paramMap = rxjs.of(paramMap);
            }
            this.subject.next(paramMap);
        };
        return ActivatedRouteStub;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ACCOUNTS_REQUEST_ALL_SIZE = ACCOUNTS_REQUEST_ALL_SIZE;
    exports.AccountStatementBaseWidgetComponent = AccountStatementBaseWidgetComponent;
    exports.AccountStatementCommonModule = AccountStatementCommonModule;
    exports.AccountStatementDataService = AccountStatementDataService;
    exports.AccountStatementDomService = AccountStatementDomService;
    exports.ActivatedRouteStub = ActivatedRouteStub;
    exports.CUSTOM_FILTER_PERIODS_VALUES = CUSTOM_FILTER_PERIODS_VALUES;
    exports.DEFAULT_JOURNEY_CONFIGURATION = DEFAULT_JOURNEY_CONFIGURATION;
    exports.EMPTY_RESPONSE_ERROR = EMPTY_RESPONSE_ERROR;
    exports.JourneyConfigurationService = JourneyConfigurationService;
    exports.accountStatementsResponseMock = accountStatementsResponseMock;
    exports.accountsDataMock = accountsDataMock;
    exports.accountsResponseMock = accountsResponseMock;
    exports.convertDateObjToDateStruct = convertDateObjToDateStruct;
    exports.convertDateStructToDateObj = convertDateStructToDateObj;
    exports.firstDayInLastMonth = firstDayInLastMonth;
    exports.firstDayInLastQuarter = firstDayInLastQuarter;
    exports.firstDayInLastWeek = firstDayInLastWeek;
    exports.firstDayInThisMonth = firstDayInThisMonth;
    exports.firstDayInThisQuarter = firstDayInThisQuarter;
    exports.firstDayInThisWeek = firstDayInThisWeek;
    exports.firstDayInThisYear = firstDayInThisYear;
    exports.getDateFilterLimit = getDateFilterLimit;
    exports.getFilenameFromHeaders = getFilenameFromHeaders;
    exports.getMonthDiff = getMonthDiff;
    exports.getTotalCountFromHeaders = getTotalCountFromHeaders;
    exports.isDateFormatValid = isDateFormatValid;
    exports.isDateLimitValid = isDateLimitValid;
    exports.isMonthLimitValid = isMonthLimitValid;
    exports.isQueryStringExist = isQueryStringExist;
    exports.lastDayInLastMonth = lastDayInLastMonth;
    exports.lastDayInLastQuarter = lastDayInLastQuarter;
    exports.lastDayInLastWeek = lastDayInLastWeek;
    exports.lastDayInThisMonth = lastDayInThisMonth;
    exports.lastDayInThisQuarter = lastDayInThisQuarter;
    exports.lastDayInThisWeek = lastDayInThisWeek;
    exports.lastDayInThisYear = lastDayInThisYear;
    exports.mimeTypeExtensions = mimeTypeExtensions;
    exports.modelItemToBoolean = modelItemToBoolean;
    exports.secondsToMilliseconds = secondsToMilliseconds;
    exports.simpleArrayCompare = simpleArrayCompare;
    exports.smartLoadingState = smartLoadingState;
    exports.stringToWords = stringToWords;
    exports.toInteger = toInteger;
    exports.today = today;
    exports.unixZeroDay = unixZeroDay;
    exports.widgetPropertyNames = widgetPropertyNames;
    exports["ӨAccountStatementAccountSelectorComponent"] = AccountStatementAccountSelectorComponent;
    exports["ӨAccountStatementAccountSelectorCustomizableDirective"] = AccountStatementAccountSelectorCustomizableDirective;
    exports["ӨAccountStatementDownloadDocDirective"] = AccountStatementDownloadDocDirective;
    exports["ӨAccountStatementDownloadsComponent"] = AccountStatementDownloadsComponent;
    exports["ӨAccountStatementDownloadsCustomizableDirective"] = AccountStatementDownloadsCustomizableDirective;
    exports["ӨAccountStatementPaginationComponent"] = AccountStatementPaginationComponent;
    exports["ӨAccountStatementViewOnlineComponent"] = AccountStatementViewOnlineComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=backbase-account-statement-common-ang.umd.js.map
