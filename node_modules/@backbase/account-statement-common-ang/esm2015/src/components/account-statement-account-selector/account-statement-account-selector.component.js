import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/account-selector";
export class AccountStatementAccountSelectorComponent {
    constructor() {
        this.accounts = [];
        this.accountSelect = new EventEmitter();
        this.id = `bb-account-statement-account-selector-${AccountStatementAccountSelectorComponent.idCounter++}`;
    }
    onSelect(account) {
        this.accountSelect.emit(account);
    }
}
AccountStatementAccountSelectorComponent.idCounter = 0;
AccountStatementAccountSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementAccountSelectorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
AccountStatementAccountSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementAccountSelectorComponent, selector: "bb-account-statement-account-selector", inputs: { accounts: "accounts" }, outputs: { accountSelect: "accountSelect" }, ngImport: i0, template: "<ng-container\n  bbAccountStatementAccountSelectorCustomizableDirective\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    accounts: accounts\n  }\"\n>\n</ng-container>\n\n<ng-template bbAccountStatementAccountSelectorCustomizableDirective let-hostRef let-accounts=\"context.accounts\">\n  <span\n    [attr.id]=\"hostRef.id + '-label'\"\n    class=\"sr-only\"\n    data-role=\"account-selector-label\"\n    i18n=\"Account selector dropdown aria label@@account-statement.accounts-selector.label\"\n    >Account selector dropdown</span\n  >\n  <bb-account-selector-ui\n    [items]=\"accounts\"\n    [searchable]=\"false\"\n    [markFirst]=\"true\"\n    [selectedItems]=\"accounts[0]\"\n    [aria-labelledby]=\"hostRef.id + '-label'\"\n    (change)=\"hostRef.onSelect($event)\"\n    placeholder=\"Select an account\"\n    i18n-placeholder=\"Select an account|accounts selector placeholder@@account-statement.accounts-selector.placeholder\"\n  >\n  </bb-account-selector-ui>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i1.AccountSelectorComponent; }), selector: "bb-account-selector-ui", inputs: ["items", "disabled", "notFoundText", "showError", "productNumberFormat", "selectedItems", "multiple", "closeOnSelect", "searchable", "clearable", "placeholder", "loading", "dropdownPosition", "disableScrollEnd", "highlight", "filterItems", "markFirst", "internalFiltering", "virtualScroll", "required", "typeahead", "minTermLength", "typeToSearchText", "aria-describedby", "aria-labelledby", "aria-invalid", "searchFunc", "showCurrencySymbol", "showBankBranchCode", "groupByFn", "groupValueFn", "size", "compareItemsWith"], outputs: ["search", "clearSearch", "scroll", "scrollToEnd", "remove", "change", "filterChange", "focus", "blur"] }], directives: [{ type: i0.forwardRef(function () { return AccountStatementAccountSelectorCustomizableDirective; }), selector: "[bbAccountStatementAccountSelectorCustomizableDirective]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementAccountSelectorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-statement-account-selector',
                    templateUrl: './account-statement-account-selector.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { accounts: [{
                type: Input
            }], accountSelect: [{
                type: Output
            }] } });
export class AccountStatementAccountSelectorCustomizableDirective extends BbTemplate {
}
AccountStatementAccountSelectorCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementAccountSelectorCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
AccountStatementAccountSelectorCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementAccountSelectorCustomizableDirective, selector: "[bbAccountStatementAccountSelectorCustomizableDirective]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementAccountSelectorCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbAccountStatementAccountSelectorCustomizableDirective]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC1zdGF0ZW1lbnQtYWNjb3VudC1zZWxlY3Rvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2FjY291bnQtc3RhdGVtZW50LWNvbW1vbi1hbmcvc3JjL2NvbXBvbmVudHMvYWNjb3VudC1zdGF0ZW1lbnQtYWNjb3VudC1zZWxlY3Rvci9hY2NvdW50LXN0YXRlbWVudC1hY2NvdW50LXNlbGVjdG9yLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYWNjb3VudC1zdGF0ZW1lbnQtY29tbW9uLWFuZy9zcmMvY29tcG9uZW50cy9hY2NvdW50LXN0YXRlbWVudC1hY2NvdW50LXNlbGVjdG9yL2FjY291bnQtc3RhdGVtZW50LWFjY291bnQtc2VsZWN0b3IuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0csT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7QUFPM0QsTUFBTSxPQUFPLHdDQUF3QztJQUxyRDtRQVFXLGFBQVEsR0FBeUIsRUFBRSxDQUFDO1FBRW5DLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQXNCLENBQUM7UUFFeEQsT0FBRSxHQUFHLHlDQUF5Qyx3Q0FBd0MsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDO0tBSy9HO0lBSEMsUUFBUSxDQUFDLE9BQTJCO1FBQ2xDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25DLENBQUM7O0FBVmMsa0RBQVMsR0FBRyxDQUFDLENBQUM7c0lBRGxCLHdDQUF3QzswSEFBeEMsd0NBQXdDLDRKQ1RyRCxtK0JBNkJBLGkwQkRIYSxvREFBb0Q7NEZBakJwRCx3Q0FBd0M7a0JBTHBELFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHVDQUF1QztvQkFDakQsV0FBVyxFQUFFLHFEQUFxRDtvQkFDbEUsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzhCQUlVLFFBQVE7c0JBQWhCLEtBQUs7Z0JBRUksYUFBYTtzQkFBdEIsTUFBTTs7QUFZVCxNQUFNLE9BQU8sb0RBQXFELFNBQVEsVUFLekU7O2tKQUxZLG9EQUFvRDtzSUFBcEQsb0RBQW9EOzRGQUFwRCxvREFBb0Q7a0JBSGhFLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDBEQUEwRDtpQkFDckUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBEaXJlY3RpdmUsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUHJvZHVjdFN1bW1hcnlJdGVtIH0gZnJvbSAnQGJhY2tiYXNlL2RhdGEtYW5nL2FycmFuZ2VtZW50cyc7XG5pbXBvcnQgeyBCYlRlbXBsYXRlIH0gZnJvbSAnQGJhY2tiYXNlL2ZvdW5kYXRpb24tYW5nL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdiYi1hY2NvdW50LXN0YXRlbWVudC1hY2NvdW50LXNlbGVjdG9yJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FjY291bnQtc3RhdGVtZW50LWFjY291bnQtc2VsZWN0b3IuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgQWNjb3VudFN0YXRlbWVudEFjY291bnRTZWxlY3RvckNvbXBvbmVudCB7XG4gIHByaXZhdGUgc3RhdGljIGlkQ291bnRlciA9IDA7XG5cbiAgQElucHV0KCkgYWNjb3VudHM6IFByb2R1Y3RTdW1tYXJ5SXRlbVtdID0gW107XG5cbiAgQE91dHB1dCgpIGFjY291bnRTZWxlY3QgPSBuZXcgRXZlbnRFbWl0dGVyPFByb2R1Y3RTdW1tYXJ5SXRlbT4oKTtcblxuICByZWFkb25seSBpZCA9IGBiYi1hY2NvdW50LXN0YXRlbWVudC1hY2NvdW50LXNlbGVjdG9yLSR7QWNjb3VudFN0YXRlbWVudEFjY291bnRTZWxlY3RvckNvbXBvbmVudC5pZENvdW50ZXIrK31gO1xuXG4gIG9uU2VsZWN0KGFjY291bnQ6IFByb2R1Y3RTdW1tYXJ5SXRlbSkge1xuICAgIHRoaXMuYWNjb3VudFNlbGVjdC5lbWl0KGFjY291bnQpO1xuICB9XG59XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tiYkFjY291bnRTdGF0ZW1lbnRBY2NvdW50U2VsZWN0b3JDdXN0b21pemFibGVEaXJlY3RpdmVdJyxcbn0pXG5leHBvcnQgY2xhc3MgQWNjb3VudFN0YXRlbWVudEFjY291bnRTZWxlY3RvckN1c3RvbWl6YWJsZURpcmVjdGl2ZSBleHRlbmRzIEJiVGVtcGxhdGU8XG4gIEFjY291bnRTdGF0ZW1lbnRBY2NvdW50U2VsZWN0b3JDb21wb25lbnQsXG4gIHtcbiAgICBhY2NvdW50czogUHJvZHVjdFN1bW1hcnlJdGVtW107XG4gIH1cbj4ge31cbiIsIjxuZy1jb250YWluZXJcbiAgYmJBY2NvdW50U3RhdGVtZW50QWNjb3VudFNlbGVjdG9yQ3VzdG9taXphYmxlRGlyZWN0aXZlXG4gIFtiYkhvc3RSZWZdPVwidGhpc1wiXG4gIFtiYlRlbXBsYXRlQ29udGV4dF09XCJ7XG4gICAgYWNjb3VudHM6IGFjY291bnRzXG4gIH1cIlxuPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy10ZW1wbGF0ZSBiYkFjY291bnRTdGF0ZW1lbnRBY2NvdW50U2VsZWN0b3JDdXN0b21pemFibGVEaXJlY3RpdmUgbGV0LWhvc3RSZWYgbGV0LWFjY291bnRzPVwiY29udGV4dC5hY2NvdW50c1wiPlxuICA8c3BhblxuICAgIFthdHRyLmlkXT1cImhvc3RSZWYuaWQgKyAnLWxhYmVsJ1wiXG4gICAgY2xhc3M9XCJzci1vbmx5XCJcbiAgICBkYXRhLXJvbGU9XCJhY2NvdW50LXNlbGVjdG9yLWxhYmVsXCJcbiAgICBpMThuPVwiQWNjb3VudCBzZWxlY3RvciBkcm9wZG93biBhcmlhIGxhYmVsQEBhY2NvdW50LXN0YXRlbWVudC5hY2NvdW50cy1zZWxlY3Rvci5sYWJlbFwiXG4gICAgPkFjY291bnQgc2VsZWN0b3IgZHJvcGRvd248L3NwYW5cbiAgPlxuICA8YmItYWNjb3VudC1zZWxlY3Rvci11aVxuICAgIFtpdGVtc109XCJhY2NvdW50c1wiXG4gICAgW3NlYXJjaGFibGVdPVwiZmFsc2VcIlxuICAgIFttYXJrRmlyc3RdPVwidHJ1ZVwiXG4gICAgW3NlbGVjdGVkSXRlbXNdPVwiYWNjb3VudHNbMF1cIlxuICAgIFthcmlhLWxhYmVsbGVkYnldPVwiaG9zdFJlZi5pZCArICctbGFiZWwnXCJcbiAgICAoY2hhbmdlKT1cImhvc3RSZWYub25TZWxlY3QoJGV2ZW50KVwiXG4gICAgcGxhY2Vob2xkZXI9XCJTZWxlY3QgYW4gYWNjb3VudFwiXG4gICAgaTE4bi1wbGFjZWhvbGRlcj1cIlNlbGVjdCBhbiBhY2NvdW50fGFjY291bnRzIHNlbGVjdG9yIHBsYWNlaG9sZGVyQEBhY2NvdW50LXN0YXRlbWVudC5hY2NvdW50cy1zZWxlY3Rvci5wbGFjZWhvbGRlclwiXG4gID5cbiAgPC9iYi1hY2NvdW50LXNlbGVjdG9yLXVpPlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==