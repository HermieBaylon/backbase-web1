import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/account-statement-dom-service";
import * as i2 from "@backbase/ui-ang/icon";
import * as i3 from "@backbase/ui-ang/tooltip-directive";
import * as i4 from "@backbase/ui-ang/button";
export class AccountStatementViewOnlineComponent {
    constructor(domService, renderer) {
        this.domService = domService;
        this.renderer = renderer;
        this.href = '/';
        this.describedByElementId = '';
    }
    viewOnline() {
        this.domService.simulateLinkClick({
            target: '_blank',
            href: this.href,
        }, this.renderer);
    }
}
AccountStatementViewOnlineComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementViewOnlineComponent, deps: [{ token: i1.AccountStatementDomService }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
AccountStatementViewOnlineComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: AccountStatementViewOnlineComponent, selector: "bb-account-statement-view-online", inputs: { href: "href", describedByElementId: "describedByElementId" }, ngImport: i0, template: "<div\n  triggers=\"hover focus\"\n  bbTooltip=\"Preview\"\n  i18n-bbTooltip=\"Preview|Tooltip text for preview button@@account-statement.preview.tooltip-simple\"\n>\n  <button\n    bbButton\n    color=\"link\"\n    [circle]=\"true\"\n    aria-label=\"View online\"\n    i18n-aria-label=\"View online link aria label@@account-statement.view-online.aria-label\"\n    [attr.aria-describedby]=\"describedByElementId\"\n    (click)=\"viewOnline()\"\n    data-role=\"view-online\"\n  >\n    <bb-icon-ui name=\"open-in-new\"></bb-icon-ui>\n  </button>\n</div>\n", components: [{ type: i2.IconComponent, selector: "bb-icon-ui", inputs: ["name", "inverse", "size", "color", "animate", "aria-label", "cropped", "backgroundType"] }], directives: [{ type: i3.TooltipDirective, selector: "[bbTooltip]", inputs: ["bbTooltip", "triggers"] }, { type: i4.ButtonDirective, selector: "button[bbButton]", inputs: ["type", "color", "buttonSize", "block", "circle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: AccountStatementViewOnlineComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-account-statement-view-online',
                    templateUrl: './account-statement-view-online.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.AccountStatementDomService }, { type: i0.Renderer2 }]; }, propDecorators: { href: [{
                type: Input
            }], describedByElementId: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC1zdGF0ZW1lbnQtdmlldy1vbmxpbmUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hY2NvdW50LXN0YXRlbWVudC1jb21tb24tYW5nL3NyYy9jb21wb25lbnRzL2FjY291bnQtc3RhdGVtZW50LXZpZXctb25saW5lL2FjY291bnQtc3RhdGVtZW50LXZpZXctb25saW5lLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvYWNjb3VudC1zdGF0ZW1lbnQtY29tbW9uLWFuZy9zcmMvY29tcG9uZW50cy9hY2NvdW50LXN0YXRlbWVudC12aWV3LW9ubGluZS9hY2NvdW50LXN0YXRlbWVudC12aWV3LW9ubGluZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBYSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBUXJGLE1BQU0sT0FBTyxtQ0FBbUM7SUFLOUMsWUFBNkIsVUFBc0MsRUFBbUIsUUFBbUI7UUFBNUUsZUFBVSxHQUFWLFVBQVUsQ0FBNEI7UUFBbUIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUpoRyxTQUFJLEdBQUcsR0FBRyxDQUFDO1FBRVgseUJBQW9CLEdBQUcsRUFBRSxDQUFDO0lBRXlFLENBQUM7SUFFN0csVUFBVTtRQUNSLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQy9CO1lBQ0UsTUFBTSxFQUFFLFFBQVE7WUFDaEIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1NBQ2hCLEVBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FDZCxDQUFDO0lBQ0osQ0FBQzs7aUlBZlUsbUNBQW1DO3FIQUFuQyxtQ0FBbUMsZ0pDUmhELDRpQkFrQkE7NEZEVmEsbUNBQW1DO2tCQUwvQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLFdBQVcsRUFBRSxnREFBZ0Q7b0JBQzdELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDt5SUFFVSxJQUFJO3NCQUFaLEtBQUs7Z0JBRUcsb0JBQW9CO3NCQUE1QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWNjb3VudFN0YXRlbWVudERvbVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9hY2NvdW50LXN0YXRlbWVudC1kb20tc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWFjY291bnQtc3RhdGVtZW50LXZpZXctb25saW5lJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FjY291bnQtc3RhdGVtZW50LXZpZXctb25saW5lLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEFjY291bnRTdGF0ZW1lbnRWaWV3T25saW5lQ29tcG9uZW50IHtcbiAgQElucHV0KCkgaHJlZiA9ICcvJztcblxuICBASW5wdXQoKSBkZXNjcmliZWRCeUVsZW1lbnRJZCA9ICcnO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgZG9tU2VydmljZTogQWNjb3VudFN0YXRlbWVudERvbVNlcnZpY2UsIHByaXZhdGUgcmVhZG9ubHkgcmVuZGVyZXI6IFJlbmRlcmVyMikge31cblxuICB2aWV3T25saW5lKCkge1xuICAgIHRoaXMuZG9tU2VydmljZS5zaW11bGF0ZUxpbmtDbGljayhcbiAgICAgIHtcbiAgICAgICAgdGFyZ2V0OiAnX2JsYW5rJyxcbiAgICAgICAgaHJlZjogdGhpcy5ocmVmLFxuICAgICAgfSxcbiAgICAgIHRoaXMucmVuZGVyZXIsXG4gICAgKTtcbiAgfVxufVxuIiwiPGRpdlxuICB0cmlnZ2Vycz1cImhvdmVyIGZvY3VzXCJcbiAgYmJUb29sdGlwPVwiUHJldmlld1wiXG4gIGkxOG4tYmJUb29sdGlwPVwiUHJldmlld3xUb29sdGlwIHRleHQgZm9yIHByZXZpZXcgYnV0dG9uQEBhY2NvdW50LXN0YXRlbWVudC5wcmV2aWV3LnRvb2x0aXAtc2ltcGxlXCJcbj5cbiAgPGJ1dHRvblxuICAgIGJiQnV0dG9uXG4gICAgY29sb3I9XCJsaW5rXCJcbiAgICBbY2lyY2xlXT1cInRydWVcIlxuICAgIGFyaWEtbGFiZWw9XCJWaWV3IG9ubGluZVwiXG4gICAgaTE4bi1hcmlhLWxhYmVsPVwiVmlldyBvbmxpbmUgbGluayBhcmlhIGxhYmVsQEBhY2NvdW50LXN0YXRlbWVudC52aWV3LW9ubGluZS5hcmlhLWxhYmVsXCJcbiAgICBbYXR0ci5hcmlhLWRlc2NyaWJlZGJ5XT1cImRlc2NyaWJlZEJ5RWxlbWVudElkXCJcbiAgICAoY2xpY2spPVwidmlld09ubGluZSgpXCJcbiAgICBkYXRhLXJvbGU9XCJ2aWV3LW9ubGluZVwiXG4gID5cbiAgICA8YmItaWNvbi11aSBuYW1lPVwib3Blbi1pbi1uZXdcIj48L2JiLWljb24tdWk+XG4gIDwvYnV0dG9uPlxuPC9kaXY+XG4iXX0=