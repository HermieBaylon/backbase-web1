import { firstDayInLastMonth, firstDayInLastQuarter, firstDayInLastWeek, firstDayInThisMonth, firstDayInThisQuarter, firstDayInThisWeek, firstDayInThisYear, lastDayInLastMonth, lastDayInLastQuarter, lastDayInLastWeek, today, } from '../helpers/date-helpers';
import { DatePeriods } from '../models/date-periods.model';
export const CUSTOM_FILTER_PERIODS_VALUES = {
    [DatePeriods.AllTime]: () => ({
        from: undefined,
        to: undefined,
    }),
    [DatePeriods.Today]: () => ({
        from: today(),
        to: today(),
    }),
    [DatePeriods.Yesterday]: () => ({
        from: new Date(today().setDate(today().getDate() - 1)),
        to: new Date(today().setDate(today().getDate() - 1)),
    }),
    [DatePeriods.ThisWeek]: () => ({
        from: firstDayInThisWeek(),
        to: today(),
    }),
    [DatePeriods.LastWeek]: () => ({
        from: firstDayInLastWeek(),
        to: lastDayInLastWeek(),
    }),
    [DatePeriods.ThisMonth]: () => ({
        from: firstDayInThisMonth(),
        to: today(),
    }),
    [DatePeriods.LastMonth]: () => ({
        from: firstDayInLastMonth(),
        to: lastDayInLastMonth(),
    }),
    [DatePeriods.ThisQuarter]: () => ({
        from: firstDayInThisQuarter(),
        to: today(),
    }),
    [DatePeriods.LastQuarter]: () => ({
        from: firstDayInLastQuarter(),
        to: lastDayInLastQuarter(),
    }),
    [DatePeriods.ThisYear]: () => ({
        from: firstDayInThisYear(),
        to: today(),
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1wZXJpb2RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hY2NvdW50LXN0YXRlbWVudC1jb21tb24tYW5nL3NyYy9jb25zdGFudHMvZGF0ZS1wZXJpb2RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxtQkFBbUIsRUFDbkIscUJBQXFCLEVBQ3JCLGtCQUFrQixFQUNsQixtQkFBbUIsRUFDbkIscUJBQXFCLEVBQ3JCLGtCQUFrQixFQUNsQixrQkFBa0IsRUFDbEIsa0JBQWtCLEVBQ2xCLG9CQUFvQixFQUNwQixpQkFBaUIsRUFDakIsS0FBSyxHQUNOLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRTNELE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUVyQztJQUNGLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDNUIsSUFBSSxFQUFFLFNBQVM7UUFDZixFQUFFLEVBQUUsU0FBUztLQUNkLENBQUM7SUFDRixDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzFCLElBQUksRUFBRSxLQUFLLEVBQUU7UUFDYixFQUFFLEVBQUUsS0FBSyxFQUFFO0tBQ1osQ0FBQztJQUNGLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDOUIsSUFBSSxFQUFFLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN0RCxFQUFFLEVBQUUsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0tBQ3JELENBQUM7SUFDRixDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzdCLElBQUksRUFBRSxrQkFBa0IsRUFBRTtRQUMxQixFQUFFLEVBQUUsS0FBSyxFQUFFO0tBQ1osQ0FBQztJQUNGLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDN0IsSUFBSSxFQUFFLGtCQUFrQixFQUFFO1FBQzFCLEVBQUUsRUFBRSxpQkFBaUIsRUFBRTtLQUN4QixDQUFDO0lBQ0YsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUM5QixJQUFJLEVBQUUsbUJBQW1CLEVBQUU7UUFDM0IsRUFBRSxFQUFFLEtBQUssRUFBRTtLQUNaLENBQUM7SUFDRixDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzlCLElBQUksRUFBRSxtQkFBbUIsRUFBRTtRQUMzQixFQUFFLEVBQUUsa0JBQWtCLEVBQUU7S0FDekIsQ0FBQztJQUNGLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDaEMsSUFBSSxFQUFFLHFCQUFxQixFQUFFO1FBQzdCLEVBQUUsRUFBRSxLQUFLLEVBQUU7S0FDWixDQUFDO0lBQ0YsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNoQyxJQUFJLEVBQUUscUJBQXFCLEVBQUU7UUFDN0IsRUFBRSxFQUFFLG9CQUFvQixFQUFFO0tBQzNCLENBQUM7SUFDRixDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzdCLElBQUksRUFBRSxrQkFBa0IsRUFBRTtRQUMxQixFQUFFLEVBQUUsS0FBSyxFQUFFO0tBQ1osQ0FBQztDQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBmaXJzdERheUluTGFzdE1vbnRoLFxuICBmaXJzdERheUluTGFzdFF1YXJ0ZXIsXG4gIGZpcnN0RGF5SW5MYXN0V2VlayxcbiAgZmlyc3REYXlJblRoaXNNb250aCxcbiAgZmlyc3REYXlJblRoaXNRdWFydGVyLFxuICBmaXJzdERheUluVGhpc1dlZWssXG4gIGZpcnN0RGF5SW5UaGlzWWVhcixcbiAgbGFzdERheUluTGFzdE1vbnRoLFxuICBsYXN0RGF5SW5MYXN0UXVhcnRlcixcbiAgbGFzdERheUluTGFzdFdlZWssXG4gIHRvZGF5LFxufSBmcm9tICcuLi9oZWxwZXJzL2RhdGUtaGVscGVycyc7XG5pbXBvcnQgeyBEYXRlUGVyaW9kcyB9IGZyb20gJy4uL21vZGVscy9kYXRlLXBlcmlvZHMubW9kZWwnO1xuXG5leHBvcnQgY29uc3QgQ1VTVE9NX0ZJTFRFUl9QRVJJT0RTX1ZBTFVFUzoge1xuICBba2V5IGluIERhdGVQZXJpb2RzXTogKCkgPT4geyBmcm9tOiBEYXRlIHwgdW5kZWZpbmVkOyB0bzogRGF0ZSB8IHVuZGVmaW5lZCB9O1xufSA9IHtcbiAgW0RhdGVQZXJpb2RzLkFsbFRpbWVdOiAoKSA9PiAoe1xuICAgIGZyb206IHVuZGVmaW5lZCxcbiAgICB0bzogdW5kZWZpbmVkLFxuICB9KSxcbiAgW0RhdGVQZXJpb2RzLlRvZGF5XTogKCkgPT4gKHtcbiAgICBmcm9tOiB0b2RheSgpLFxuICAgIHRvOiB0b2RheSgpLFxuICB9KSxcbiAgW0RhdGVQZXJpb2RzLlllc3RlcmRheV06ICgpID0+ICh7XG4gICAgZnJvbTogbmV3IERhdGUodG9kYXkoKS5zZXREYXRlKHRvZGF5KCkuZ2V0RGF0ZSgpIC0gMSkpLFxuICAgIHRvOiBuZXcgRGF0ZSh0b2RheSgpLnNldERhdGUodG9kYXkoKS5nZXREYXRlKCkgLSAxKSksXG4gIH0pLFxuICBbRGF0ZVBlcmlvZHMuVGhpc1dlZWtdOiAoKSA9PiAoe1xuICAgIGZyb206IGZpcnN0RGF5SW5UaGlzV2VlaygpLFxuICAgIHRvOiB0b2RheSgpLFxuICB9KSxcbiAgW0RhdGVQZXJpb2RzLkxhc3RXZWVrXTogKCkgPT4gKHtcbiAgICBmcm9tOiBmaXJzdERheUluTGFzdFdlZWsoKSxcbiAgICB0bzogbGFzdERheUluTGFzdFdlZWsoKSxcbiAgfSksXG4gIFtEYXRlUGVyaW9kcy5UaGlzTW9udGhdOiAoKSA9PiAoe1xuICAgIGZyb206IGZpcnN0RGF5SW5UaGlzTW9udGgoKSxcbiAgICB0bzogdG9kYXkoKSxcbiAgfSksXG4gIFtEYXRlUGVyaW9kcy5MYXN0TW9udGhdOiAoKSA9PiAoe1xuICAgIGZyb206IGZpcnN0RGF5SW5MYXN0TW9udGgoKSxcbiAgICB0bzogbGFzdERheUluTGFzdE1vbnRoKCksXG4gIH0pLFxuICBbRGF0ZVBlcmlvZHMuVGhpc1F1YXJ0ZXJdOiAoKSA9PiAoe1xuICAgIGZyb206IGZpcnN0RGF5SW5UaGlzUXVhcnRlcigpLFxuICAgIHRvOiB0b2RheSgpLFxuICB9KSxcbiAgW0RhdGVQZXJpb2RzLkxhc3RRdWFydGVyXTogKCkgPT4gKHtcbiAgICBmcm9tOiBmaXJzdERheUluTGFzdFF1YXJ0ZXIoKSxcbiAgICB0bzogbGFzdERheUluTGFzdFF1YXJ0ZXIoKSxcbiAgfSksXG4gIFtEYXRlUGVyaW9kcy5UaGlzWWVhcl06ICgpID0+ICh7XG4gICAgZnJvbTogZmlyc3REYXlJblRoaXNZZWFyKCksXG4gICAgdG86IHRvZGF5KCksXG4gIH0pLFxufTtcbiJdfQ==