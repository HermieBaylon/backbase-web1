import { AccountStatementBasePropertiesService } from '../../models/account-statement-base-properties-service.model';
import { PaginationType } from '../../models/pagination-type.model';
import { SortDirection } from '../../models/sort-direction.model';
import * as i0 from "@angular/core";
export declare abstract class AccountStatementBaseWidgetComponent<T extends AccountStatementBasePropertiesService> {
    protected readonly propertiesService: T;
    /**
     * Number of statements per page
     */
    set pageSizeValue(value: number | undefined);
    /**
     * Sorting order (date, description, category)
     */
    set sortingOrderValue(value: string | undefined);
    /**
     * Sorting direction (ASC, DESC)
     */
    set sortingDirectionValue(value: SortDirection | undefined);
    /**
     * Flag to show/hide categories
     */
    set showCategoryValue(value: boolean | undefined);
    /**
     * Notification dismiss time in seconds
     */
    set notificationDismissTime(value: number | undefined);
    /**
     * Relative filter datepicker limit (months)
     */
    set relativeDateLimit(value: number | undefined);
    /**
     * Absolute filter datepicker limit (yyyy-mm-dd)
     */
    set absoluteDateLimit(value: string | undefined);
    /**
     * Pagination type (PAGINATION or LOAD_MORE)
     */
    set paginationType(value: PaginationType | undefined);
    protected constructor(propertiesService: T);
    static ɵfac: i0.ɵɵFactoryDeclaration<AccountStatementBaseWidgetComponent<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AccountStatementBaseWidgetComponent<any>, never, never, { "pageSizeValue": "pageSize"; "sortingOrderValue": "sortingOrder"; "sortingDirectionValue": "sortingDirection"; "showCategoryValue": "showCategory"; "notificationDismissTime": "notificationDismissTime"; "relativeDateLimit": "relativeDateLimit"; "absoluteDateLimit": "absoluteDateLimit"; "paginationType": "paginationType"; }, {}, never>;
}
