import { Observable } from 'rxjs';
import { AccountStatement, AccountStatementsPostRequest } from '@backbase/data-ang/account-statements';
import { LoadingState } from './loading-state.model';
import { SortDirection } from './sort-direction.model';
export declare type Categories = Array<string>;
export interface ProccessedAccountStatementsRawData {
    data: AccountStatement[] | null;
    totalCount: number;
}
export interface AccountStatementGetReqParams {
    accountId?: string;
    dateFrom?: string;
    dateTo?: string;
    category?: Categories;
    from?: number;
    cursor?: string;
    size?: number;
    orderBy?: string;
    direction?: AccountStatementsPostRequest.DirectionEnum;
    paginationType?: string;
}
export interface FilterParams {
    category?: Categories;
    dateFrom?: string;
    dateTo?: string;
}
export interface SortingParams {
    orderBy: string;
    direction: SortDirection;
}
export interface LoadingParams {
    size?: number;
    from?: number;
    cursor?: string;
}
/**
 * @deprecated since 3.6.0 - will be removed in 3.7.0, moved to template
 */
export interface TableHeader {
    label: string;
    sorting: {
        orderBy?: string;
        direction?: string;
    };
}
export interface StateCategories {
    data: Observable<Categories | null | undefined> | undefined;
    error?: boolean;
}
export interface StateAccountStatements {
    data: Observable<AccountStatement[] | null | undefined> | undefined;
    error?: boolean;
    totalCount?: number;
    isLoading: LoadingState;
    areFiltersApplied: boolean;
}
