import { HttpErrorResponse } from '@angular/common/http';
export declare class ConsentRequestAccessDenied {
    readonly error: HttpErrorResponse;
    kind: 'ConsentRequestAccessDenied';
    constructor(error: HttpErrorResponse);
}
export declare class ConsentRequestNotFound {
    readonly error: HttpErrorResponse;
    kind: 'ConsentRequestNotFound';
    constructor(error: HttpErrorResponse);
}
export declare class ConsentRequestBadRequest {
    readonly error: HttpErrorResponse;
    kind: 'ConsentRequestBadRequest';
    constructor(error: HttpErrorResponse);
}
export declare class ConsentRequestUnknownError {
    readonly error: HttpErrorResponse;
    kind: 'ConsentRequestUnknownError';
    constructor(error: HttpErrorResponse);
}
export declare class ConsentRequestConnectivityError {
    readonly error: HttpErrorResponse;
    kind: 'ConsentRequestConnectivityError';
    constructor(error: HttpErrorResponse);
}
export declare type ConsentRequestError = ConsentRequestAccessDenied | ConsentRequestNotFound | ConsentRequestBadRequest | ConsentRequestUnknownError | ConsentRequestConnectivityError;
export declare const parseError: (error: HttpErrorResponse) => ConsentRequestError;
