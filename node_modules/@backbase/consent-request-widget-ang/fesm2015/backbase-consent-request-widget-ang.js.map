{"version":3,"file":"backbase-consent-request-widget-ang.js","sources":["../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-error.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request.service.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-preferences.service.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-tpp-information/consent-request-tpp-information.component.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-tpp-information/consent-request-tpp-information.component.html","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-account-selector/consent-request-account-selector.component.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-account-selector/consent-request-account-selector.component.html","../../../../libs/consent-request-widget-ang/src/consent-request-widget/constants.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-permissions-information/consent-request-permissions-information.component.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-permissions-information/consent-request-permissions-information.component.html","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-error/consent-request-error.component.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-error/consent-request-error.component.html","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-container/consent-request-container.component.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget/consent-request-container/consent-request-container.component.html","../../../../libs/consent-request-widget-ang/src/consent-request-widget.component.ts","../../../../libs/consent-request-widget-ang/src/consent-request-widget.module.ts","../../../../libs/consent-request-widget-ang/backbase-consent-request-widget-ang.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\n\nexport class ConsentRequestAccessDenied {\n  kind: 'ConsentRequestAccessDenied' = 'ConsentRequestAccessDenied';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class ConsentRequestNotFound {\n  kind: 'ConsentRequestNotFound' = 'ConsentRequestNotFound';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class ConsentRequestBadRequest {\n  kind: 'ConsentRequestBadRequest' = 'ConsentRequestBadRequest';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class ConsentRequestUnknownError {\n  kind: 'ConsentRequestUnknownError' = 'ConsentRequestUnknownError';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport class ConsentRequestConnectivityError {\n  kind: 'ConsentRequestConnectivityError' = 'ConsentRequestConnectivityError';\n  constructor(readonly error: HttpErrorResponse) {}\n}\n\nexport type ConsentRequestError =\n  | ConsentRequestAccessDenied\n  | ConsentRequestNotFound\n  | ConsentRequestBadRequest\n  | ConsentRequestUnknownError\n  | ConsentRequestConnectivityError;\n\nexport const parseError = (error: HttpErrorResponse): ConsentRequestError => {\n  if (error.error instanceof ErrorEvent) {\n    return new ConsentRequestUnknownError(error);\n  } else {\n    switch (error.status) {\n      case 0:\n        return new ConsentRequestConnectivityError(error);\n      case 400:\n        return new ConsentRequestBadRequest(error);\n      case 401:\n        return new ConsentRequestAccessDenied(error);\n      case 403:\n        return new ConsentRequestAccessDenied(error);\n      case 404:\n        return new ConsentRequestNotFound(error);\n      default:\n        return new ConsentRequestUnknownError(error);\n    }\n  }\n};\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, ReplaySubject, BehaviorSubject, of } from 'rxjs';\nimport {\n  catchError,\n  pluck,\n  map,\n  filter,\n  distinctUntilChanged,\n  tap,\n  switchMap,\n  shareReplay,\n  take,\n} from 'rxjs/operators';\nimport {\n  ConsentRequestsHttpService,\n  ConsentsHttpService,\n  ConsentRequest,\n  Identifier,\n  Account,\n} from '@backbase/data-ang/consent';\nexport { ConsentRequest, Account, Tpp } from '@backbase/data-ang/consent';\n\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { parseError, ConsentRequestError } from './consent-request-error';\n\nexport interface RedirectUrl {\n  redirectUrl?: string;\n}\n\n@Injectable()\nexport class ConsentRequestService {\n  constructor(\n    private readonly consentReqService: ConsentRequestsHttpService,\n    private readonly consentHttpService: ConsentsHttpService,\n    private readonly notification: NotificationService,\n  ) {}\n\n  private readonly consentRequestId = new ReplaySubject<string>(1);\n\n  readonly loading = new BehaviorSubject<boolean>(true);\n  readonly error = new BehaviorSubject<ConsentRequestError | undefined>(undefined);\n\n  readonly saving = new BehaviorSubject<boolean>(false);\n  readonly savingError = new BehaviorSubject<ConsentRequestError | undefined>(undefined);\n\n  readonly consentRequest = this.consentRequestId.pipe(\n    filter((id: string) => !!id),\n    distinctUntilChanged(),\n    tap(() => this.loading.next(true)),\n    switchMap((id: string) => this.loadConsentRequest(id)),\n    tap(() => this.error.next(undefined)),\n    catchError((error: ConsentRequestError) => {\n      this.error.next(error);\n      return of(undefined);\n    }),\n    tap(() => this.loading.next(false)),\n    shareReplay(1),\n  );\n\n  getConsentRequestFrom(consentRequestId: Observable<string>) {\n    consentRequestId.subscribe(this.consentRequestId);\n  }\n\n  /**\n   * Function for allow consent request\n   * @param account - accounts list\n   * @param templateRef - template for notification\n   */\n  allowConsentRequest(account: Array<Account>, templateRef: TemplateRef<any> | string): Observable<RedirectUrl> {\n    return this.consentRequest.pipe(\n      take(1),\n      filter((consentRequest: ConsentRequest | undefined) => !!consentRequest),\n      tap(() => this.saving.next(true)),\n      switchMap((consentRequest: ConsentRequest | undefined) => this.allow(consentRequest as ConsentRequest, account)),\n      tap(() => this.savingError.next(undefined)),\n      catchError((error: ConsentRequestError) => this.handleError(error, templateRef)),\n      tap(() => this.saving.next(false)),\n    );\n  }\n\n  rejectConsentRequest(templateRef: TemplateRef<any> | string): Observable<RedirectUrl> {\n    return this.consentRequest.pipe(\n      take(1),\n      filter((consentRequest: ConsentRequest | undefined) => consentRequest !== undefined),\n      tap(() => this.saving.next(true)),\n      switchMap((consentRequest: ConsentRequest | undefined) => this.reject(consentRequest as ConsentRequest)),\n      tap(() => this.savingError.next(undefined)),\n      catchError((error: ConsentRequestError) => this.handleError(error, templateRef)),\n      tap(() => this.saving.next(false)),\n    );\n  }\n\n  private handleError(error: ConsentRequestError, templateRef: TemplateRef<any> | string) {\n    this.savingError.next(error);\n    if (templateRef) {\n      this.notification.showNotification({\n        header: templateRef,\n        message: '',\n        modifier: 'error',\n      });\n    }\n    return of({});\n  }\n\n  private loadConsentRequest(id: string): Observable<ConsentRequest> {\n    return this.consentReqService.getIdById({ id }, 'response').pipe(\n      pluck<HttpResponse<ConsentRequest>, ConsentRequest>('body'),\n      catchError<ConsentRequest, never>((error: HttpErrorResponse) => {\n        throw parseError(error);\n      }),\n    );\n  }\n\n  private allow(\n    { id: consentRequestId, allowConsentRedirectUrl: redirectUrl }: ConsentRequest,\n    accounts: Account[],\n  ): Observable<RedirectUrl> {\n    return this.consentHttpService\n      .postConsents(\n        {\n          consentPost: {\n            consentRequestId,\n            accounts: accounts.map((account: Account) => account.id),\n          },\n        },\n        'response',\n      )\n      .pipe(\n        pluck<HttpResponse<Identifier>, Identifier>('body'),\n        map(() => ({ redirectUrl })),\n        catchError((error: HttpErrorResponse) => {\n          throw parseError(error);\n        }),\n      );\n  }\n\n  private reject({ id, rejectConsentRedirectUrl: redirectUrl }: ConsentRequest): Observable<RedirectUrl> {\n    return this.consentReqService.postRejectById({ id }, 'response').pipe(\n      map(() => ({ redirectUrl })),\n      catchError((error: HttpErrorResponse) => {\n        throw parseError(error);\n      }),\n    );\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { ItemModel } from '@backbase/foundation-ang/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { Property } from '@backbase/lib-bb-page-bootstrap-cdn';\n\n@Injectable()\nexport class ConsentRequestPreferencesService {\n  constructor(@Optional() private readonly itemModel: ItemModel) {}\n\n  private getProperty<T>(input$: Observable<T | undefined>, itemModel: Observable<Property>): Observable<T> {\n    return combineLatest([input$, itemModel]).pipe(\n      map(([value, valueIM]) => (value === undefined ? valueIM : value) as T),\n    );\n  }\n\n  private getItemModelProperty<T extends Property>(name: string, defaultVal: T): Observable<T> {\n    return this.itemModel?.property<T>(name, defaultVal) || of(defaultVal);\n  }\n\n  /**\n   * Stream of multiAccountSelection property (based on CXP value)\n   */\n  private readonly multiAccountSelectionItemModel = this.getItemModelProperty('multiAccountSelection', false).pipe(\n    map(Boolean),\n  );\n\n  /**\n   * Stream of multiAccountSelection property (based on INPUT value)\n   */\n  readonly multiAccountSelectionInput = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Stream of multiAccountSelection property (based on BOTH values)\n   */\n  readonly multiAccountSelection$: Observable<boolean> = this.getProperty<boolean>(\n    this.multiAccountSelectionInput,\n    this.multiAccountSelectionItemModel,\n  );\n}\n","import { Component, Input, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Tpp } from '../consent-request.service';\n\n@Component({\n  selector: 'bb-consent-request-tpp-information',\n  templateUrl: './consent-request-tpp-information.component.html',\n})\nexport class ConsentRequestTppInformationComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentRequestTppInformationComponent = this;\n  /**\n   * Third party provider\n   */\n  @Input() tpp: Tpp | undefined;\n}\n\n@Directive({\n  selector: '[bbConsentRequestTppInformationCustomizable]',\n})\nexport class ConsentRequestTppInformationCustomizableDirective extends BbTemplate<\n  ConsentRequestTppInformationComponent,\n  Tpp\n> {}\n","<ng-container bbConsentRequestTppInformationCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"tpp\">\n</ng-container>\n\n<ng-template bbConsentRequestTppInformationCustomizable let-hostRef let-tpp=\"context\">\n  <div\n    class=\"bb-block--sm bb-text-bold\"\n    i18n=\"Requested by|Third party information@@consent-request.label.requestedBy\"\n    data-role=\"requested-by-label\">\n    Requested by\n  </div>\n\n  <div class=\"card card-sm\">\n    <div class=\"card-body\">\n      <bb-third-party-provider-ui\n        [name]=\"tpp.name\"\n        [url]=\"tpp.website\"\n        [verified]=\"tpp.isTrusted\"\n        [image]=\"tpp.imageUrl\"\n        data-role=\"third-party-provider-label\">\n      </bb-third-party-provider-ui>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, Directive, OnDestroy } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Account } from '../consent-request.service';\n\n@Component({\n  selector: 'bb-consent-request-account-selector',\n  templateUrl: './consent-request-account-selector.component.html',\n})\nexport class ConsentRequestAccountSelectorComponent implements OnDestroy {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentRequestAccountSelectorComponent = this;\n  /**\n   * If error should be shown\n   */\n  @Input() showError = false;\n  /**\n   * Flag for multi account selection\n   */\n  @Input() multiAccountSelection = false;\n  /**\n   * Setter for List of accounts\n   */\n  @Input() set accounts(value: Account[]) {\n    if (value) {\n      this._accounts = value;\n      this.allAccounts = value;\n    }\n  }\n\n  searchedFields = ['name', 'balance'];\n  _accounts: Account[] = [];\n  allAccounts: Account[] = [];\n  /**\n   * Selected Account\n   */\n  @Input() selectedAccount: Array<Account> | undefined;\n  /**\n   * Emitter that fires when you select an account\n   */\n  @Output() selectedAccountChange: EventEmitter<Array<Account>> = new EventEmitter<Array<Account>>();\n\n  private readonly form!: FormGroup;\n  private readonly destroy = new Subject<void>();\n\n  accountSelector = {\n    change: (self: any, item: any) => {\n      this.onSelectAccount(item);\n      self.selectedItem = item;\n      self.eventTriggered = '$change';\n      self.eventState = item;\n    },\n    scrollToEnd: (self: any, event: any) => {\n      self.eventTriggered = '$scrollToEnd';\n      self.eventState = event;\n    },\n  };\n\n  constructor() {\n    this.form = new FormGroup({\n      query: new FormControl(''),\n    });\n\n    (this.form.get('query') as FormArray).valueChanges.pipe(takeUntil(this.destroy)).subscribe(selectedValue => {\n      this._accounts = this.allAccounts.filter((item: any) => {\n        return this.searchedFields.some(\n          (field: any) => item[field].toString().toLocaleLowerCase().indexOf(selectedValue.toLocaleLowerCase()) !== -1,\n        );\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy.next();\n    this.destroy.complete();\n  }\n\n  /**\n   * Emit selected accounts\n   * @param account - account list\n   */\n  onSelectAccount(account: any): void {\n    this.selectedAccountChange.emit(this.multiAccountSelection ? account : [account]);\n    this.showError = false;\n  }\n\n  checkSelected(item: any) {\n    if (this.selectedAccount) {\n      return this.selectedAccount.includes(item);\n    }\n    return false;\n  }\n\n  onSearchClear() {\n    // @ts-ignore\n    this.form.get('query').setValue('');\n  }\n\n  selectAll() {\n    this.selectedAccountChange.emit(this.allAccounts);\n  }\n\n  unselectAll() {\n    this.selectedAccountChange.emit([]);\n  }\n}\n\n@Directive({\n  selector: '[bbConsentRequestAccountSelectorCustomizable]',\n})\nexport class ConsentRequestAccountSelectorCustomizableDirective extends BbTemplate<\n  ConsentRequestAccountSelectorComponent,\n  Account[]\n> {}\n","<ng-container bbConsentRequestAccountSelectorCustomizable [bbHostRef]=\"hostRef\" [bbTemplateContext]=\"_accounts\">\n</ng-container>\n\n<ng-template bbConsentRequestAccountSelectorCustomizable let-hostRef let-accounts=\"context\">\n  <div\n    class=\"bb-block bb-block--sm bb-text-bold\"\n    *ngIf=\"!hostRef.selectedAccount || (hostRef.selectedAccount && hostRef.selectedAccount.length <= 1)\"\n    i18n=\"Account Exposed|Account Exposed label@@consent-request.label.accountExposed\"\n    data-role=\"account-exposed-label\">\n    Account Exposed\n  </div>\n  <div\n    class=\"bb-block bb-block--sm bb-text-bold\"\n    *ngIf=\"hostRef.selectedAccount && hostRef.selectedAccount.length > 1\"\n    i18n=\"Accounts Exposed|Account Exposed label@@consent-request.label.accountsExposed\"\n    data-role=\"accounts-exposed-label\">\n    Accounts Exposed\n  </div>\n\n  <div [ngClass]=\"{ 'border border-danger rounded': hostRef.showError }\">\n    <bb-account-selector-ui\n      data-role=\"account-selector\"\n      [items]=\"accounts\"\n      [highlight]=\"true\"\n      [disableScrollEnd]=\"false\"\n      [filterItems]=\"false\"\n      [multiple]=\"hostRef.multiAccountSelection\"\n      [closeOnSelect]=\"!hostRef.multiAccountSelection\"\n      [dropdownPosition]=\"'bottom'\"\n      [selectedItems]=\"\n        hostRef.multiAccountSelection\n          ? hostRef.selectedAccount\n          : hostRef.selectedAccount\n          ? hostRef.selectedAccount[0]\n          : undefined\n      \"\n      (change)=\"hostRef.accountSelector.change(hostRef.accountSelector, $event)\"\n      (scrollToEnd)=\"hostRef.accountSelector.scrollToEnd(hostRef.accountSelector, $event)\"\n      placeholder=\"Select Accounts\"\n      i18n-placeholder=\"Select Accounts placeholder@@consent-request.account-selector.placeholder\">\n      <ng-template bbCustomOptionsHeader>\n        <div class=\"m-2\">\n          <form [formGroup]=\"hostRef.form\">\n            <bb-search-box-ui\n              formControlName=\"query\"\n              [showClear]=\"true\"\n              [showSearch]=\"true\"\n              (clear)=\"hostRef.onSearchClear($event)\"\n              [autofocus]=\"true\"\n              placeholder=\"Search\"\n              autocomplete=\"off\"\n              i18n-placeholder=\"Search@@consent-request.account-selector-ui.search.placeholder\"></bb-search-box-ui>\n          </form>\n        </div>\n        <div class=\"bb-account-selector--multiple__selected-account-filters\" *ngIf=\"hostRef.multiAccountSelection\">\n          <button\n            (click)=\"hostRef.selectAll()\"\n            bbButton\n            buttonSize=\"sm\"\n            color=\"link\"\n            i18n=\"Select all|Select all text@@consent-request.account-selector-ui.select.all.text\"\n            data-role=\"select-all\">\n            Select all\n          </button>\n          <button\n            (click)=\"hostRef.unselectAll()\"\n            bbButton\n            buttonSize=\"sm\"\n            color=\"link\"\n            i18n=\"Unselect all|Unselect all text@@consent-request.account-selector-ui.unselect.all.text\"\n            data-role=\"unselect-all\">\n            Unselect all\n          </button>\n        </div>\n      </ng-template>\n      <ng-template bbCustomSingleSelectedItemLabel let-item=\"item\">\n        <bb-product-item-basic-account-ui\n          [active]=\"true\"\n          [amount]=\"item.balance\"\n          [currency]=\"item.currency\"\n          [productNumber]=\"item.IBAN || item.BBAN || item.number\"\n          [title]=\"item.name\">\n          <ng-template bbCustomProductItemBasicAccountDetailsFormatter let-amount=\"amount\" let-currency=\"currency\">\n            <bb-amount-ui\n              class=\"font-weight-bold\"\n              [amount]=\"amount\"\n              [currency]=\"currency\"\n              [mapCurrency]=\"false\"></bb-amount-ui>\n          </ng-template>\n        </bb-product-item-basic-account-ui>\n      </ng-template>\n      <ng-template bbCustomOptionItem let-item$=\"item$\" let-item=\"item\">\n        <bb-product-item-basic-account-ui\n          [active]=\"hostRef.checkSelected(item)\"\n          [productNumber]=\"item.IBAN || item.BBAN || item.number\"\n          [amount]=\"item.balance\"\n          [currency]=\"item.currency\"\n          [title]=\"item.name\">\n          <ng-template bbCustomProductItemBasicAccountDetailsFormatter let-amount=\"amount\" let-currency=\"currency\">\n            <bb-amount-ui\n              class=\"bb-highlight bb-product-item__amount\"\n              [amount]=\"amount\"\n              [currency]=\"currency\"\n              [bbHighlight]=\"true\"></bb-amount-ui>\n          </ng-template>\n        </bb-product-item-basic-account-ui>\n      </ng-template>\n    </bb-account-selector-ui>\n  </div>\n  <div\n    *ngIf=\"hostRef.showError\"\n    class=\"text-danger mt-2\"\n    data-role=\"no-accounts-error-message\"\n    i18n=\"Select an account|No account selected label@@consent-request.label.noAccountSelected\">\n    Select an account.\n  </div>\n</ng-template>\n","export const Permission = {\n  ReadAccountsDetail: 'ReadAccountsDetail',\n  ReadBalances: 'ReadBalances',\n  ReadTransactionsDetail: 'ReadTransactionsDetail',\n  ReadBeneficiariesDetail: 'ReadBeneficiariesDetail',\n  ReadDirectDebits: 'ReadDirectDebits',\n  ReadProducts: 'ReadProducts',\n  ReadStandingOrdersDetail: 'ReadStandingOrdersDetail',\n  ReadTransactionsCredits: 'ReadTransactionsCredits',\n  ReadTransactionsDebits: 'ReadTransactionsDebits',\n};\n","import { Component, Input, Directive } from '@angular/core';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { Permission } from '../constants';\n\n@Component({\n  selector: 'bb-consent-request-permissions-information',\n  templateUrl: './consent-request-permissions-information.component.html',\n})\nexport class ConsentRequestPermissionsInformationComponent {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentRequestPermissionsInformationComponent = this;\n  /**\n   * List of permissions\n   */\n  @Input() permissions: string[] = [];\n\n  /**\n   * Permission mapper\n   */\n  readonly Permission = Permission;\n\n  /**\n   * Check if permission contains provided permission\n   * @param permission\n   */\n  hasPermission(permission: string): boolean {\n    return this.permissions.includes(permission);\n  }\n}\n\n@Directive({\n  selector: '[bbConsentRequestPermissionsInformationCustomizable]',\n})\nexport class ConsentRequestPermissionsInformationCustomizableDirective extends BbTemplate<\n  ConsentRequestPermissionsInformationComponent,\n  string[]\n> {}\n","<ng-container\n  bbConsentRequestPermissionsInformationCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"permissions\">\n</ng-container>\n\n<ng-template bbConsentRequestPermissionsInformationCustomizable let-hostRef let-permissions=\"context\">\n  <div\n    class=\"bb-block--sm bb-text-bold\"\n    i18n=\"Permission you grant|Permissions you grant label@@consent-request.label.grantPermissions\"\n    data-role=\"permissions-grant-label\">\n    What permissions you grant\n  </div>\n\n  <div class=\"card\">\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadAccountsDetail)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        data-role=\"account-information-label\"\n        i18n=\"\n          Account Information|Account Information Permission\n          title@@consent-request.label.permission.ReadAccountsDetail.title\">\n        Account information\n      </div>\n      <div\n        class=\"bb-consent-request__account-information\"\n        i18n=\"\n          Account Information details|Account Information Permission\n          subtitle@@consent-request.label.permission.ReadAccountsDetail.subtitle\">\n        Name, number\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadBalances)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        data-role=\"account-balance-label\"\n        i18n=\"Account Balance|Account Balance Permission title@@consent-request.label.permission.ReadBalances.title\">\n        Account balance\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsDetail)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        data-role=\"transactions-label\"\n        i18n=\"\n          Transactions|Transaction Details Permission\n          title@@consent-request.label.permission.ReadTransactionsDetail.title\">\n        Transactions\n      </div>\n      <div\n        i18n=\"\n          Transactions details |Transaction Details Permission\n          subtitle@@consent-request.label.permission.ReadTransactionsDetail.subtitle\">\n        Category, amount, date, time, beneficiary details\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadBeneficiariesDetail)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"Beneficiaries|Beneficiaries title@@consent-request.label.permission.ReadBeneficiariesDetail.title\">\n        Beneficiaries details\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadDirectDebits)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"Direct Debits|Direct Debits Permission title@@consent-request.label.permission.ReadDirectDebits.title\">\n        Direct Debits\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadProducts)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"Products|Products Permission title@@consent-request.label.permission.ReadProducts.title\">\n        Products\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadStandingOrdersDetail)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"\n          Standing Orders|Standing Orders Permission\n          title@@consent-request.label.permission.ReadStandingOrdersDetail.title\">\n        Standing Orders\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsCredits)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"\n          Transactions Credits|Transactions Credits Permission\n          title@@consent-request.label.permission.ReadTransactionsCredits.title\">\n        Transactions Credits\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsDebits)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"\n          Transactions Debits|Transactions Debits Permission\n          title@@consent-request.label.permission.ReadTransactionsDebits.title\">\n        Transactions Debits\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bb-consent-request-error',\n  templateUrl: './consent-request-error.component.html',\n})\nexport class ConsentRequestErrorComponent {\n  /**\n   * Id Required to check if invalid consent\n   */\n  @Input() consentRequestId: string | undefined | null;\n  /**\n   * Error kind to check against\n   */\n  @Input() errorKind: string | undefined;\n}\n","<bb-empty-state-ui\n  *ngIf=\"!consentRequestId\"\n  title=\"Unexpected Error\"\n  i18n-title=\"\n    Unexpected Error title|Empty state label when there is an unexpected\n    error@@consent-request.error.noConsentRequest.title\"\n  subtitle=\"Something's gone wrong with our server. Please try again later.\"\n  i18n-subtitle=\"\n    Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n    error@@consent-request.error.noConsentRequest.subtitle\"\n  iconModifier=\"error\"></bb-empty-state-ui>\n<ng-container *ngIf=\"consentRequestId && errorKind\" [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentRequestAccessDenied'\"\n    title=\"Permissions required\"\n    i18n-title=\"\n      Permissions required|Error state label when user does not have permissions to view consent\n      request@@consent-request.error.accessDenied.title\"\n    subtitle=\"You don't have permissions to manage consents.\"\n    i18n-subtitle=\"\n      No Permissions Subtitle|Error state subtitle label when user does not have permissions to view consent\n      requests@@consent-request.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentRequestConnectivityError'\"\n    title=\"Connectivity Error\"\n    i18n-title=\"\n      Connectivity Error title|Empty state label when there is connectivity\n      error@@consent-request.error.connectivity.title\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n    i18n-subtitle=\"\n      Connectivity Error subtitle|Empty state subtitle label when there is connectivity\n      error@@consent-request.error.connectivity.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n\n  <!-- This will usually happen on environment misconfiguration -->\n  <!-- ConsentRequestNotFound | ConsentRequestUnknownError | ConsentRequestBadRequest-->\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"Unexpected Error\"\n    i18n-title=\"\n      Unexpected Error title|Empty state label when there is an unexpected error@@consent-request.error.unexpected.title\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n    i18n-subtitle=\"\n      Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n      error@@consent-request.error.unexpected.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n</ng-container>\n","import { Component, Directive, ViewChild, TemplateRef, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable, combineLatest } from 'rxjs';\nimport { pluck, map, tap } from 'rxjs/operators';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\nimport { ConsentRequestService, ConsentRequest, Account, RedirectUrl } from '../consent-request.service';\nimport { ConsentRequestError } from '../consent-request-error';\nimport { ConsentRequestPreferencesService } from '../consent-request-preferences.service';\n\n@Component({\n  selector: 'bb-consent-request-container',\n  templateUrl: './consent-request-container.component.html',\n})\nexport class ConsentRequestContainerComponent implements OnInit {\n  /**\n   * Component context\n   */\n  readonly hostRef: ConsentRequestContainerComponent = this;\n  /**\n   * Stream for Multi-account selection usage flag.\n   * If true used a multi-selection account selector, else a single selection account selector.\n   * Retrieving value from CXP manager.\n   */\n  readonly multiAccountSelection$: Observable<boolean> = this.consentRequestPreferencesService.multiAccountSelection$;\n  /**\n   * Emitter that fires when allowing consent\n   */\n  @Output() redirectToAllowUrl: EventEmitter<string> = new EventEmitter<string>();\n  /**\n   * Emitter that fires when rejecting consent\n   */\n  @Output() redirectToRejectUrl: EventEmitter<string> = new EventEmitter<string>();\n  /**\n   * Notification error template reference\n   */\n  @ViewChild('notificationError')\n  notificationErrorTemplate: TemplateRef<any> | string = '';\n  /**\n   * Stream of Consent Request ID\n   */\n  readonly consentRequestId: Observable<string> = this.getRouteParam(this.route, 'consentRequestId').pipe(\n    map(consentRequestId => consentRequestId || ''),\n  );\n  /**\n   * Stream of loading spinner visibility flag\n   */\n  readonly loading: Observable<boolean> = this.service.loading;\n  /**\n   * Stream of Consent request errors\n   */\n  readonly error: Observable<ConsentRequestError | undefined> = this.service.error;\n  /**\n   * Stream of saving state flag\n   */\n  readonly saving: Observable<boolean> = this.service.saving;\n  /**\n   * Stream of saving consent request error\n   */\n  readonly savingError: Observable<ConsentRequestError | undefined> = this.service.savingError;\n  /**\n   * Stream of get consentRequest\n   */\n  readonly consentRequest: Observable<ConsentRequest | undefined> = this.service.consentRequest;\n  /**\n   * List of selected accounts from account selector\n   */\n  selectedAccount: Array<Account> | undefined;\n  /**\n   * Flag for show account error\n   */\n  showAccountError = false;\n\n  /**\n   * Function for allow consent request\n   */\n  allowConsentRequest(): void {\n    if (this.selectedAccount) {\n      this.showAccountError = false;\n      this.service\n        .allowConsentRequest(this.selectedAccount, this.notificationErrorTemplate)\n        .pipe(\n          tap((redirect: RedirectUrl) => {\n            if (redirect.redirectUrl) {\n              this.redirectToAllowUrl.emit(redirect.redirectUrl);\n            }\n          }),\n        )\n        .subscribe();\n    } else {\n      this.showAccountError = true;\n    }\n  }\n\n  /**\n   * Function for reject consent request\n   */\n  rejectConsentRequest(): void {\n    this.service\n      .rejectConsentRequest(this.notificationErrorTemplate)\n      .pipe(\n        tap((response: RedirectUrl) => {\n          if (response.redirectUrl) {\n            this.redirectToRejectUrl.emit(response.redirectUrl);\n          }\n        }),\n      )\n      .subscribe();\n  }\n\n  ngOnInit() {\n    this.service.getConsentRequestFrom(this.consentRequestId);\n  }\n\n  constructor(\n    private readonly service: ConsentRequestService,\n    private readonly route: ActivatedRoute,\n    private consentRequestPreferencesService: ConsentRequestPreferencesService,\n  ) {}\n\n  private getRouteParam(route: ActivatedRoute, param: string): Observable<string | null> {\n    const paramValue = combineLatest(\n      route.paramMap.pipe(pluck<ParamMap, string | null>('params', param)),\n      route.queryParamMap.pipe(pluck<ParamMap, string | null>('params', param)),\n      (params, qparams) => {\n        return params ? params : qparams;\n      },\n    );\n    if (!route.parent) {\n      return paramValue;\n    }\n\n    // ensure that level that has actual value keeps it from being cleared\n    return combineLatest([paramValue, this.getRouteParam(route.parent, param)]).pipe(\n      map(params => params[0] || params[1]),\n    );\n  }\n}\n\n@Directive({\n  selector: '[bbConsentRequestWidgetCustomizable]',\n})\nexport class ConsentRequestWidgetCustomizableDirective extends BbTemplate<\n  ConsentRequestContainerComponent,\n  { consentRequest: ConsentRequest | undefined | null; multiAccountSelection: boolean | null }\n> {}\n","<ng-container\n  bbConsentRequestWidgetCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"{\n    consentRequest: consentRequest | async,\n    multiAccountSelection: multiAccountSelection$ | async\n  }\">\n</ng-container>\n\n<ng-template\n  bbConsentRequestWidgetCustomizable\n  let-hostRef\n  let-consentRequest=\"context.consentRequest\"\n  let-multiAccountSelection=\"context.multiAccountSelection\">\n  <ng-container *ngIf=\"hostRef.consentRequestId | async; else errorTemplate\">\n    <ng-container *ngIf=\"!(hostRef.loading | async) as loading; else loadingTemplate\">\n      <ng-container *ngIf=\"!(hostRef.error | async); else errorTemplate\">\n        <div class=\"bb-consent-request\" *ngIf=\"consentRequest\">\n          <div\n            class=\"bb-heading-2 bb-block--lg\"\n            data-role=\"request-access-label\"\n            i18n=\"Widget header|Third party request access message@@consent-request.label.header\">\n            Third party requested access to your accounts\n          </div>\n\n          <ng-container *ngIf=\"!(hostRef.saving | async); else savingLoadingTemplate\">\n            <bb-alert-ui\n              *ngIf=\"hostRef.savingError | async\"\n              title=\"Unknown error\"\n              i18n-title=\"Unknown Error|Unknown Error Label@@consent-request.label.error.unknown\"\n              message=\"Try to make action again or contact your system administrator.\"\n              i18n-message=\"Try again|Try again error message@@consent-request.label.error.tryAgain\"\n              data-role=\"allow-consent-request-error\"></bb-alert-ui>\n\n            <div class=\"bb-block--lg\">\n              <bb-consent-request-tpp-information [tpp]=\"consentRequest.tpp\"></bb-consent-request-tpp-information>\n            </div>\n\n            <div class=\"bb-block--lg\">\n              <bb-consent-request-account-selector\n                [multiAccountSelection]=\"multiAccountSelection\"\n                [showError]=\"hostRef.showAccountError\"\n                [accounts]=\"consentRequest.accounts\"\n                [(selectedAccount)]=\"hostRef.selectedAccount\"></bb-consent-request-account-selector>\n            </div>\n\n            <div class=\"bb-block--lg\">\n              <bb-consent-request-permissions-information\n                [permissions]=\"consentRequest.permissions\"></bb-consent-request-permissions-information>\n            </div>\n\n            <div class=\"bb-block--lg\">\n              <div\n                class=\"bb-block--sm bb-text-bold\"\n                data-role=\"expiration-date-label\"\n                i18n=\"Expiration date|Consent expiration date@@consent-request.label.expiryDate\">\n                Expiration date\n              </div>\n\n              <div>{{ consentRequest.expiryDate | bbDate: 'bbShort' }}</div>\n            </div>\n          </ng-container>\n\n          <div class=\"bb-button-bar bb-button-bar--reverse\">\n            <button\n              bbButton\n              [disabled]=\"hostRef.saving | async\"\n              (click)=\"hostRef.allowConsentRequest()\"\n              i18n=\"Allow button|Allow consent request@@consent-request.label.allow\"\n              color=\"primary\"\n              class=\"bb-button-bar__button\"\n              data-role=\"allow-button\">\n              Allow\n            </button>\n            <button\n              bbButton\n              [disabled]=\"hostRef.saving | async\"\n              (click)=\"hostRef.rejectConsentRequest()\"\n              i18n=\"Reject button|Reject consent request@@consent-request.label.reject\"\n              color=\"secondary\"\n              class=\"bb-button-bar__button\"\n              data-role=\"reject-button\">\n              Reject\n            </button>\n          </div>\n\n          <ng-template #savingLoadingTemplate>\n            <div class=\"bb-state-container\">\n              <bb-loading-indicator-ui\n                text=\"Processing the request...\"\n                i18n-text=\"\n                  Processing|Processing the allow/reject request@@consent-request.label.processing\"></bb-loading-indicator-ui>\n            </div>\n          </ng-template>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #loadingTemplate>\n      <div class=\"bb-state-container\">\n        <bb-loading-indicator-ui></bb-loading-indicator-ui>\n      </div>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #errorTemplate>\n    <div class=\"bb-state-container\">\n      <bb-consent-request-error\n        [consentRequestId]=\"hostRef.consentRequestId | async\"\n        [errorKind]=\"$any(hostRef.error | async)?.kind\"></bb-consent-request-error>\n    </div>\n  </ng-template>\n\n  <ng-template #notificationError>\n    <span\n      i18n=\"\n        Operation Failed|Error notification when failing to save request\n        consent@@consent-request.label.notification.error\">\n      Operation failed\n    </span>\n  </ng-template>\n</ng-template>\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { ConsentRequestPreferencesService } from './consent-request-widget/consent-request-preferences.service';\nimport { ConsentRequestService } from './consent-request-widget/consent-request.service';\n\n@Component({\n  selector: 'bb-consent-request-widget',\n  template: `\n    <bb-consent-request-container\n      (redirectToAllowUrl)=\"redirectToAllowUrl($event)\"\n      (redirectToRejectUrl)=\"redirectToRejectUrl($event)\"></bb-consent-request-container>\n  `,\n  providers: [ConsentRequestService, ConsentRequestPreferencesService],\n})\nexport class ConsentRequestWidgetComponent {\n  constructor(private consentRequestPreferencesService: ConsentRequestPreferencesService) {}\n\n  /**\n   * Allow multi account selection\n   */\n  @Input() set multiAccountSelection(value: boolean) {\n    this.consentRequestPreferencesService.multiAccountSelectionInput.next(value);\n  }\n\n  /**\n   * Emitter that fires when allowing consent\n   */\n  @Output() allowConsentRequestRedirectUrl = new EventEmitter<string>();\n\n  /**\n   * Emitter that fires when rejecting consent\n   */\n  @Output() rejectConsentRequestRedirectUrl = new EventEmitter<string>();\n\n  redirectToAllowUrl(url: string) {\n    this.allowConsentRequestRedirectUrl.next(url);\n  }\n\n  redirectToRejectUrl(url: string) {\n    this.rejectConsentRequestRedirectUrl.next(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { ConsentUiModule } from '@backbase/consent-ui';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ProductItemBasicAccountModule } from '@backbase/ui-ang/product-item-basic-account';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { BbDatePipeModule } from '@backbase/ui-ang/date-pipe';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { AccountSelectorModule } from '@backbase/ui-ang/account-selector';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { SearchBoxModule } from '@backbase/ui-ang/search-box';\nimport { HighlightModule } from '@backbase/ui-ang/highlight';\nimport {\n  ConsentRequestContainerComponent,\n  ConsentRequestWidgetCustomizableDirective,\n} from './consent-request-widget/consent-request-container/consent-request-container.component';\nimport { ConsentRequestErrorComponent } from './consent-request-widget/consent-request-error/consent-request-error.component';\nimport {\n  ConsentRequestPermissionsInformationComponent,\n  ConsentRequestPermissionsInformationCustomizableDirective,\n} from './consent-request-widget/consent-request-permissions-information/consent-request-permissions-information.component';\nimport {\n  ConsentRequestAccountSelectorComponent,\n  ConsentRequestAccountSelectorCustomizableDirective,\n} from './consent-request-widget/consent-request-account-selector/consent-request-account-selector.component';\nimport {\n  ConsentRequestTppInformationComponent,\n  ConsentRequestTppInformationCustomizableDirective,\n} from './consent-request-widget/consent-request-tpp-information/consent-request-tpp-information.component';\nimport { ConsentRequestWidgetComponent } from './consent-request-widget.component';\n\nconst components = [\n  ConsentRequestWidgetComponent,\n  ConsentRequestErrorComponent,\n  ConsentRequestPermissionsInformationComponent,\n  ConsentRequestTppInformationComponent,\n  ConsentRequestAccountSelectorComponent,\n  ConsentRequestContainerComponent,\n];\n\nconst directives = [\n  ConsentRequestWidgetCustomizableDirective,\n  ConsentRequestPermissionsInformationCustomizableDirective,\n  ConsentRequestTppInformationCustomizableDirective,\n  ConsentRequestAccountSelectorCustomizableDirective,\n];\n\nconst uiModules = [\n  ConsentUiModule,\n  ButtonModule,\n  EmptyStateModule,\n  ProductItemBasicAccountModule,\n  AccountSelectorModule,\n  AlertModule,\n  LoadingIndicatorModule,\n  BbDatePipeModule,\n  NotificationModule,\n  AmountModule,\n  SearchBoxModule,\n  HighlightModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ...uiModules,\n    BackbaseCoreModule.withConfig({\n      classMap: { ConsentRequestWidgetComponent },\n    }),\n    ReactiveFormsModule,\n  ],\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives, ...uiModules],\n})\nexport class ConsentRequestWidgetModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}