import { Component, Input, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Permission } from '../constants';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ConsentRequestPermissionsInformationComponent {
    constructor() {
        /**
         * Component context
         */
        this.hostRef = this;
        /**
         * List of permissions
         */
        this.permissions = [];
        /**
         * Permission mapper
         */
        this.Permission = Permission;
    }
    /**
     * Check if permission contains provided permission
     * @param permission
     */
    hasPermission(permission) {
        return this.permissions.includes(permission);
    }
}
ConsentRequestPermissionsInformationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentRequestPermissionsInformationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ConsentRequestPermissionsInformationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentRequestPermissionsInformationComponent, selector: "bb-consent-request-permissions-information", inputs: { permissions: "permissions" }, ngImport: i0, template: "<ng-container\n  bbConsentRequestPermissionsInformationCustomizable\n  [bbHostRef]=\"hostRef\"\n  [bbTemplateContext]=\"permissions\">\n</ng-container>\n\n<ng-template bbConsentRequestPermissionsInformationCustomizable let-hostRef let-permissions=\"context\">\n  <div\n    class=\"bb-block--sm bb-text-bold\"\n    i18n=\"Permission you grant|Permissions you grant label@@consent-request.label.grantPermissions\"\n    data-role=\"permissions-grant-label\">\n    What permissions you grant\n  </div>\n\n  <div class=\"card\">\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadAccountsDetail)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        data-role=\"account-information-label\"\n        i18n=\"\n          Account Information|Account Information Permission\n          title@@consent-request.label.permission.ReadAccountsDetail.title\">\n        Account information\n      </div>\n      <div\n        class=\"bb-consent-request__account-information\"\n        i18n=\"\n          Account Information details|Account Information Permission\n          subtitle@@consent-request.label.permission.ReadAccountsDetail.subtitle\">\n        Name, number\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadBalances)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        data-role=\"account-balance-label\"\n        i18n=\"Account Balance|Account Balance Permission title@@consent-request.label.permission.ReadBalances.title\">\n        Account balance\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsDetail)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        data-role=\"transactions-label\"\n        i18n=\"\n          Transactions|Transaction Details Permission\n          title@@consent-request.label.permission.ReadTransactionsDetail.title\">\n        Transactions\n      </div>\n      <div\n        i18n=\"\n          Transactions details |Transaction Details Permission\n          subtitle@@consent-request.label.permission.ReadTransactionsDetail.subtitle\">\n        Category, amount, date, time, beneficiary details\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadBeneficiariesDetail)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"Beneficiaries|Beneficiaries title@@consent-request.label.permission.ReadBeneficiariesDetail.title\">\n        Beneficiaries details\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadDirectDebits)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"Direct Debits|Direct Debits Permission title@@consent-request.label.permission.ReadDirectDebits.title\">\n        Direct Debits\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadProducts)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"Products|Products Permission title@@consent-request.label.permission.ReadProducts.title\">\n        Products\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadStandingOrdersDetail)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"\n          Standing Orders|Standing Orders Permission\n          title@@consent-request.label.permission.ReadStandingOrdersDetail.title\">\n        Standing Orders\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsCredits)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"\n          Transactions Credits|Transactions Credits Permission\n          title@@consent-request.label.permission.ReadTransactionsCredits.title\">\n        Transactions Credits\n      </div>\n    </div>\n\n    <div class=\"card-section\" *ngIf=\"hostRef.hasPermission(hostRef.Permission.ReadTransactionsDebits)\">\n      <div\n        class=\"bb-consent-request__information-label\"\n        i18n=\"\n          Transactions Debits|Transactions Debits Permission\n          title@@consent-request.label.permission.ReadTransactionsDebits.title\">\n        Transactions Debits\n      </div>\n    </div>\n  </div>\n</ng-template>\n", directives: [{ type: i0.forwardRef(function () { return ConsentRequestPermissionsInformationCustomizableDirective; }), selector: "[bbConsentRequestPermissionsInformationCustomizable]" }, { type: i0.forwardRef(function () { return i1.NgIf; }), selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentRequestPermissionsInformationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-consent-request-permissions-information',
                    templateUrl: './consent-request-permissions-information.component.html',
                }]
        }], propDecorators: { permissions: [{
                type: Input
            }] } });
export class ConsentRequestPermissionsInformationCustomizableDirective extends BbTemplate {
}
ConsentRequestPermissionsInformationCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentRequestPermissionsInformationCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ConsentRequestPermissionsInformationCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.15", type: ConsentRequestPermissionsInformationCustomizableDirective, selector: "[bbConsentRequestPermissionsInformationCustomizable]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentRequestPermissionsInformationCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbConsentRequestPermissionsInformationCustomizable]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,