import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@backbase/ui-ang/empty-state";
import * as i2 from "@angular/common";
export class ConsentRequestErrorComponent {
}
ConsentRequestErrorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentRequestErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ConsentRequestErrorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.15", type: ConsentRequestErrorComponent, selector: "bb-consent-request-error", inputs: { consentRequestId: "consentRequestId", errorKind: "errorKind" }, ngImport: i0, template: "<bb-empty-state-ui\n  *ngIf=\"!consentRequestId\"\n  title=\"Unexpected Error\"\n  i18n-title=\"\n    Unexpected Error title|Empty state label when there is an unexpected\n    error@@consent-request.error.noConsentRequest.title\"\n  subtitle=\"Something's gone wrong with our server. Please try again later.\"\n  i18n-subtitle=\"\n    Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n    error@@consent-request.error.noConsentRequest.subtitle\"\n  iconModifier=\"error\"></bb-empty-state-ui>\n<ng-container *ngIf=\"consentRequestId && errorKind\" [ngSwitch]=\"errorKind\">\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentRequestAccessDenied'\"\n    title=\"Permissions required\"\n    i18n-title=\"\n      Permissions required|Error state label when user does not have permissions to view consent\n      request@@consent-request.error.accessDenied.title\"\n    subtitle=\"You don't have permissions to manage consents.\"\n    i18n-subtitle=\"\n      No Permissions Subtitle|Error state subtitle label when user does not have permissions to view consent\n      requests@@consent-request.error.accessDenied.subtitle\"\n    iconModifier=\"lock\"></bb-empty-state-ui>\n\n  <bb-empty-state-ui\n    *ngSwitchCase=\"'ConsentRequestConnectivityError'\"\n    title=\"Connectivity Error\"\n    i18n-title=\"\n      Connectivity Error title|Empty state label when there is connectivity\n      error@@consent-request.error.connectivity.title\"\n    subtitle=\"Are you connected to the internet? Please check your connection and try again.\"\n    i18n-subtitle=\"\n      Connectivity Error subtitle|Empty state subtitle label when there is connectivity\n      error@@consent-request.error.connectivity.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n\n  <!-- This will usually happen on environment misconfiguration -->\n  <!-- ConsentRequestNotFound | ConsentRequestUnknownError | ConsentRequestBadRequest-->\n  <bb-empty-state-ui\n    *ngSwitchDefault\n    title=\"Unexpected Error\"\n    i18n-title=\"\n      Unexpected Error title|Empty state label when there is an unexpected error@@consent-request.error.unexpected.title\"\n    subtitle=\"Something's gone wrong with our server. Please try again later.\"\n    i18n-subtitle=\"\n      Unexpected Error subtitle|Empty state subtitle label when there is an unexpected\n      error@@consent-request.error.unexpected.subtitle\"\n    iconModifier=\"error\"></bb-empty-state-ui>\n</ng-container>\n", components: [{ type: i1.EmptyStateComponent, selector: "bb-empty-state-ui", inputs: ["title", "subtitle", "showIcon", "iconClasses", "iconModifier", "iconSize", "iconColor"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.NgSwitchDefault, selector: "[ngSwitchDefault]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.15", ngImport: i0, type: ConsentRequestErrorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-consent-request-error',
                    templateUrl: './consent-request-error.component.html',
                }]
        }], propDecorators: { consentRequestId: [{
                type: Input
            }], errorKind: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc2VudC1yZXF1ZXN0LWVycm9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvY29uc2VudC1yZXF1ZXN0LXdpZGdldC1hbmcvc3JjL2NvbnNlbnQtcmVxdWVzdC13aWRnZXQvY29uc2VudC1yZXF1ZXN0LWVycm9yL2NvbnNlbnQtcmVxdWVzdC1lcnJvci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL2NvbnNlbnQtcmVxdWVzdC13aWRnZXQtYW5nL3NyYy9jb25zZW50LXJlcXVlc3Qtd2lkZ2V0L2NvbnNlbnQtcmVxdWVzdC1lcnJvci9jb25zZW50LXJlcXVlc3QtZXJyb3IuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFNakQsTUFBTSxPQUFPLDRCQUE0Qjs7MEhBQTVCLDRCQUE0Qjs4R0FBNUIsNEJBQTRCLDBJQ056QyxvN0VBaURBOzRGRDNDYSw0QkFBNEI7a0JBSnhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsV0FBVyxFQUFFLHdDQUF3QztpQkFDdEQ7OEJBS1UsZ0JBQWdCO3NCQUF4QixLQUFLO2dCQUlHLFNBQVM7c0JBQWpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2JiLWNvbnNlbnQtcmVxdWVzdC1lcnJvcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25zZW50LXJlcXVlc3QtZXJyb3IuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBDb25zZW50UmVxdWVzdEVycm9yQ29tcG9uZW50IHtcbiAgLyoqXG4gICAqIElkIFJlcXVpcmVkIHRvIGNoZWNrIGlmIGludmFsaWQgY29uc2VudFxuICAgKi9cbiAgQElucHV0KCkgY29uc2VudFJlcXVlc3RJZDogc3RyaW5nIHwgdW5kZWZpbmVkIHwgbnVsbDtcbiAgLyoqXG4gICAqIEVycm9yIGtpbmQgdG8gY2hlY2sgYWdhaW5zdFxuICAgKi9cbiAgQElucHV0KCkgZXJyb3JLaW5kOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59XG4iLCI8YmItZW1wdHktc3RhdGUtdWlcbiAgKm5nSWY9XCIhY29uc2VudFJlcXVlc3RJZFwiXG4gIHRpdGxlPVwiVW5leHBlY3RlZCBFcnJvclwiXG4gIGkxOG4tdGl0bGU9XCJcbiAgICBVbmV4cGVjdGVkIEVycm9yIHRpdGxlfEVtcHR5IHN0YXRlIGxhYmVsIHdoZW4gdGhlcmUgaXMgYW4gdW5leHBlY3RlZFxuICAgIGVycm9yQEBjb25zZW50LXJlcXVlc3QuZXJyb3Iubm9Db25zZW50UmVxdWVzdC50aXRsZVwiXG4gIHN1YnRpdGxlPVwiU29tZXRoaW5nJ3MgZ29uZSB3cm9uZyB3aXRoIG91ciBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuXCJcbiAgaTE4bi1zdWJ0aXRsZT1cIlxuICAgIFVuZXhwZWN0ZWQgRXJyb3Igc3VidGl0bGV8RW1wdHkgc3RhdGUgc3VidGl0bGUgbGFiZWwgd2hlbiB0aGVyZSBpcyBhbiB1bmV4cGVjdGVkXG4gICAgZXJyb3JAQGNvbnNlbnQtcmVxdWVzdC5lcnJvci5ub0NvbnNlbnRSZXF1ZXN0LnN1YnRpdGxlXCJcbiAgaWNvbk1vZGlmaWVyPVwiZXJyb3JcIj48L2JiLWVtcHR5LXN0YXRlLXVpPlxuPG5nLWNvbnRhaW5lciAqbmdJZj1cImNvbnNlbnRSZXF1ZXN0SWQgJiYgZXJyb3JLaW5kXCIgW25nU3dpdGNoXT1cImVycm9yS2luZFwiPlxuICA8YmItZW1wdHktc3RhdGUtdWlcbiAgICAqbmdTd2l0Y2hDYXNlPVwiJ0NvbnNlbnRSZXF1ZXN0QWNjZXNzRGVuaWVkJ1wiXG4gICAgdGl0bGU9XCJQZXJtaXNzaW9ucyByZXF1aXJlZFwiXG4gICAgaTE4bi10aXRsZT1cIlxuICAgICAgUGVybWlzc2lvbnMgcmVxdWlyZWR8RXJyb3Igc3RhdGUgbGFiZWwgd2hlbiB1c2VyIGRvZXMgbm90IGhhdmUgcGVybWlzc2lvbnMgdG8gdmlldyBjb25zZW50XG4gICAgICByZXF1ZXN0QEBjb25zZW50LXJlcXVlc3QuZXJyb3IuYWNjZXNzRGVuaWVkLnRpdGxlXCJcbiAgICBzdWJ0aXRsZT1cIllvdSBkb24ndCBoYXZlIHBlcm1pc3Npb25zIHRvIG1hbmFnZSBjb25zZW50cy5cIlxuICAgIGkxOG4tc3VidGl0bGU9XCJcbiAgICAgIE5vIFBlcm1pc3Npb25zIFN1YnRpdGxlfEVycm9yIHN0YXRlIHN1YnRpdGxlIGxhYmVsIHdoZW4gdXNlciBkb2VzIG5vdCBoYXZlIHBlcm1pc3Npb25zIHRvIHZpZXcgY29uc2VudFxuICAgICAgcmVxdWVzdHNAQGNvbnNlbnQtcmVxdWVzdC5lcnJvci5hY2Nlc3NEZW5pZWQuc3VidGl0bGVcIlxuICAgIGljb25Nb2RpZmllcj1cImxvY2tcIj48L2JiLWVtcHR5LXN0YXRlLXVpPlxuXG4gIDxiYi1lbXB0eS1zdGF0ZS11aVxuICAgICpuZ1N3aXRjaENhc2U9XCInQ29uc2VudFJlcXVlc3RDb25uZWN0aXZpdHlFcnJvcidcIlxuICAgIHRpdGxlPVwiQ29ubmVjdGl2aXR5IEVycm9yXCJcbiAgICBpMThuLXRpdGxlPVwiXG4gICAgICBDb25uZWN0aXZpdHkgRXJyb3IgdGl0bGV8RW1wdHkgc3RhdGUgbGFiZWwgd2hlbiB0aGVyZSBpcyBjb25uZWN0aXZpdHlcbiAgICAgIGVycm9yQEBjb25zZW50LXJlcXVlc3QuZXJyb3IuY29ubmVjdGl2aXR5LnRpdGxlXCJcbiAgICBzdWJ0aXRsZT1cIkFyZSB5b3UgY29ubmVjdGVkIHRvIHRoZSBpbnRlcm5ldD8gUGxlYXNlIGNoZWNrIHlvdXIgY29ubmVjdGlvbiBhbmQgdHJ5IGFnYWluLlwiXG4gICAgaTE4bi1zdWJ0aXRsZT1cIlxuICAgICAgQ29ubmVjdGl2aXR5IEVycm9yIHN1YnRpdGxlfEVtcHR5IHN0YXRlIHN1YnRpdGxlIGxhYmVsIHdoZW4gdGhlcmUgaXMgY29ubmVjdGl2aXR5XG4gICAgICBlcnJvckBAY29uc2VudC1yZXF1ZXN0LmVycm9yLmNvbm5lY3Rpdml0eS5zdWJ0aXRsZVwiXG4gICAgaWNvbk1vZGlmaWVyPVwiZXJyb3JcIj48L2JiLWVtcHR5LXN0YXRlLXVpPlxuXG4gIDwhLS0gVGhpcyB3aWxsIHVzdWFsbHkgaGFwcGVuIG9uIGVudmlyb25tZW50IG1pc2NvbmZpZ3VyYXRpb24gLS0+XG4gIDwhLS0gQ29uc2VudFJlcXVlc3ROb3RGb3VuZCB8IENvbnNlbnRSZXF1ZXN0VW5rbm93bkVycm9yIHwgQ29uc2VudFJlcXVlc3RCYWRSZXF1ZXN0LS0+XG4gIDxiYi1lbXB0eS1zdGF0ZS11aVxuICAgICpuZ1N3aXRjaERlZmF1bHRcbiAgICB0aXRsZT1cIlVuZXhwZWN0ZWQgRXJyb3JcIlxuICAgIGkxOG4tdGl0bGU9XCJcbiAgICAgIFVuZXhwZWN0ZWQgRXJyb3IgdGl0bGV8RW1wdHkgc3RhdGUgbGFiZWwgd2hlbiB0aGVyZSBpcyBhbiB1bmV4cGVjdGVkIGVycm9yQEBjb25zZW50LXJlcXVlc3QuZXJyb3IudW5leHBlY3RlZC50aXRsZVwiXG4gICAgc3VidGl0bGU9XCJTb21ldGhpbmcncyBnb25lIHdyb25nIHdpdGggb3VyIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5cIlxuICAgIGkxOG4tc3VidGl0bGU9XCJcbiAgICAgIFVuZXhwZWN0ZWQgRXJyb3Igc3VidGl0bGV8RW1wdHkgc3RhdGUgc3VidGl0bGUgbGFiZWwgd2hlbiB0aGVyZSBpcyBhbiB1bmV4cGVjdGVkXG4gICAgICBlcnJvckBAY29uc2VudC1yZXF1ZXN0LmVycm9yLnVuZXhwZWN0ZWQuc3VidGl0bGVcIlxuICAgIGljb25Nb2RpZmllcj1cImVycm9yXCI+PC9iYi1lbXB0eS1zdGF0ZS11aT5cbjwvbmctY29udGFpbmVyPlxuIl19