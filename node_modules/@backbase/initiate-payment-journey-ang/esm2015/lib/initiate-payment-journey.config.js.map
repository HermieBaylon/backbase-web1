{"version":3,"file":"initiate-payment-journey.config.js","sourceRoot":"","sources":["../../../../../libs/initiate-payment-journey-ang/src/lib/initiate-payment-journey.config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAC/C,OAAO,EACL,kBAAkB,GAOnB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AAevD,MAAM,CAAC,MAAM,6BAA6B,GAA2B;IACnE,QAAQ,EAAE,EAAE;IACZ,WAAW,EAAE,IAAI;IACjB,YAAY,EAAE,IAAI;IAClB,cAAc,EAAE,IAAI;IACpB,eAAe,EAAE,IAAI;IACrB,aAAa,EAAE,MAAM;IACrB,cAAc,EAAE,KAAK;IACrB,cAAc,EAAE,KAAK;IACrB,qBAAqB,EAAE,IAAI;IAC3B,sBAAsB,EAAE,KAAK;IAC7B,yBAAyB,EAAE,KAAK;IAChC,2BAA2B,EAAE,IAAI;IACjC,0BAA0B,EAAE,KAAK;IACjC,0BAA0B,EAAE,KAAK;IACjC,6BAA6B,EAAE,IAAI;IACnC,kBAAkB,EAAE,kBAAkB,CAAC,EAAE;IACzC,gBAAgB,EAAE,2BAA2B;IAC7C,MAAM,EAAE,kBAAkB;CAC3B,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAClC,IAAI,cAAc,CAAwB,yBAAyB,CAAC,CAAC","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport {\n  AccessContextScope,\n  FetchPaymentOptionsListenerFn,\n  InitiatePaymentOptions,\n  PaymentComponentsMap,\n  PaymentFormItem,\n  PaymentHooksOptions,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\nimport { defaultHeaderSetup } from './helpers/helpers';\n\nexport interface InitiatePaymentConfig {\n  paymentTypes: Omit<\n    PaymentTypeConfig,\n    'hooks' | 'customFields' | 'businessFunction'\n  >[];\n  businessFunctions: string[];\n  options?: InitiatePaymentOptions;\n  customFields?: PaymentComponentsMap;\n  fetchPaymentOptionsListener?: FetchPaymentOptionsListenerFn;\n  baseFields?: Array<PaymentFormItem>;\n  hooks?: PaymentHooksOptions;\n}\n\nexport const InitiatePaymentDefaultOptions: InitiatePaymentOptions = {\n  pageSize: 50,\n  isModalView: true,\n  pollInterval: 1000,\n  defaultCountry: 'US',\n  enableApprovals: true,\n  defaultScheme: 'BBAN',\n  isTemplateMode: false,\n  isDebitPayment: false,\n  isErrorTitleDisplayed: true,\n  enableNewPaymentButton: false,\n  checkClosedPaymentsAccess: false,\n  enableSavePaymentAsTemplate: true,\n  isOneOffToRecurrentAllowed: false,\n  isRecurrentToOneOffAllowed: false,\n  enablePaymentTemplateSelector: true,\n  accessContextScope: AccessContextScope.SA,\n  successEventName: 'bb.success.create.payment',\n  header: defaultHeaderSetup,\n};\n\nexport const INITIATE_PAYMENT_CONFIG =\n  new InjectionToken<InitiatePaymentConfig>('INITIATE_PAYMENT_CONFIG');\n"]}