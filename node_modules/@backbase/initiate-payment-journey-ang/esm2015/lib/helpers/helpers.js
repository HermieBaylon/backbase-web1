import { ACH_DEBIT, CHAPS, InitiatePaymentHeaderStates, INTERNAL_TRANSFER, INTERNAL_TRANSFER_BUSINESS, INTERNATIONAL_TRANSFER, INTRABANK_TRANSFER, normalizePaymentType, P2P_TRANSFER, SEPA, UK_FASTER_PAYMENT, US_ACH_CREDIT, US_DOMESTIC_WIRE, } from '@backbase/payment-orders-ang';
export function getPaymentConfig(paymentType) {
    switch (normalizePaymentType(paymentType)) {
        case 'SEPA_CREDIT_TRANSFER':
        case 'SEPA_CT':
        case 'SEPA':
            return SEPA;
        case 'ACH_CREDIT':
        case 'US_ACH_CREDIT':
            return US_ACH_CREDIT;
        case 'US_ACH_DEBIT':
        case 'ACH_DEBIT':
            return ACH_DEBIT;
        case 'FASTER_PAYMENT':
            return UK_FASTER_PAYMENT;
        case 'CHAPS':
            return CHAPS;
        case 'US_DOMESTIC_WIRE':
            return US_DOMESTIC_WIRE;
        case 'INTERNAL_TRANSFER':
            return INTERNAL_TRANSFER;
        case 'INTRABANK_TRANSFER':
            return INTRABANK_TRANSFER;
        case 'INTERNAL_TRANSFER_BUSINESS':
            return INTERNAL_TRANSFER_BUSINESS;
        case 'P2P_TRANSFER':
            return P2P_TRANSFER;
        case 'INTERNATIONAL_TRANSFER':
            return INTERNATIONAL_TRANSFER;
    }
    return US_DOMESTIC_WIRE;
}
export function getBusinessFunction(paymentType) {
    switch (normalizePaymentType(paymentType)) {
        case 'SEPA_CREDIT_TRANSFER':
        case 'SEPA_CT':
        case 'SEPA':
            return 'SEPA CT';
        case 'ACH_DEBIT':
            return 'ACH Debit';
        case 'ACH_CREDIT':
        case 'US_ACH_CREDIT':
        case 'CUSTOM_ACH_CREDIT':
            return 'ACH Credit Transfer';
        case 'CHAPS':
            return 'UK CHAPS';
        case 'FASTER_PAYMENT':
            return 'UK Faster Payments';
        case 'US_DOMESTIC_WIRE':
            return 'US Domestic Wire';
        case 'INTERNAL_TRANSFER':
        case 'INTERNAL_TRANSFER_BUSINESS':
        case 'INTRABANK_TRANSFER':
            return 'A2A Transfer';
        case 'INTERNATIONAL_TRANSFER':
            return 'US Foreign Wire';
        case 'P2P_TRANSFER':
            return 'P2P Transfer';
    }
    return 'US Domestic Wire';
}
export function getPaymentTypeTitle(paymentType) {
    switch (normalizePaymentType(paymentType)) {
        case 'SEPA_CREDIT_TRANSFER':
        case 'SEPA_CT':
        case 'SEPA':
            return $localize `:@@initiate-payment.payment-title.payment-type-sepa:SEPA`;
        case 'ACH_DEBIT':
        case 'ACH_CREDIT':
        case 'US_ACH_CREDIT':
        case 'CUSTOM_ACH_CREDIT':
            return $localize `:@@initiate-payment.payment-title.payment-type-ach:ACH`;
        case 'US_DOMESTIC_WIRE':
            return $localize `:@@initiate-payment.payment-title.payment-type-wire:Wire`;
        case 'INTERNAL_TRANSFER':
        case 'INTERNAL_TRANSFER_BUSINESS':
        case 'INTRABANK_TRANSFER':
            return $localize `:@@initiate-payment.payment-title.payment-type-internal:Internal`;
        case 'INTERNATIONAL_TRANSFER':
            return $localize `:@@initiate-payment.payment-title.payment-type-international-wire:International Wire`;
        case 'P2P_TRANSFER':
            return $localize `:@@initiate-payment.payment-title.payment-type-p2p:P2P`;
    }
    return $localize `:@@initiate-payment.payment-title.payment-type-default:`;
}
export function defaultHeaderSetup({ paymentType, paymentMode, state, isDebit, }) {
    const payment = isDebit
        ? $localize `:@@initiate-payment.payment-title.debit: Debit`
        : '';
    let title = `${getPaymentTypeTitle(paymentType)}${payment}`;
    if (paymentMode === null || paymentMode === void 0 ? void 0 : paymentMode.includes('EDIT')) {
        title = $localize `:@@initiate-payment.payment-title.edit-mode:Edit ${title}`;
    }
    else {
        title = $localize `:@@initiate-payment.payment-title.new-mode:New ${title}`;
    }
    if (paymentMode === null || paymentMode === void 0 ? void 0 : paymentMode.includes('TEMPLATE')) {
        title = $localize `:@@initiate-payment.payment-title.template:${title} Template`;
    }
    else if (!isDebit) {
        title = $localize `:@@initiate-payment.payment-title.payment:${title} Payment`;
    }
    if (state === InitiatePaymentHeaderStates.REVIEW) {
        title = $localize `:@@initiate-payment.payment-title.review-state:${title} - Review`;
    }
    else if (state === InitiatePaymentHeaderStates.SUBMITTED) {
        title = $localize `:@@initiate-payment.payment-title.submitted-state:${title} - Submitted`;
    }
    return title;
}
//# sourceMappingURL=helpers.js.map