{"version":3,"file":"communication.service.js","sourceRoot":"","sources":["../../../../../../libs/initiate-payment-journey-ang/src/lib/services/communication.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AA6B/C,MAAM,CAAC,MAAM,qCAAqC,GAChD,IAAI,cAAc,CAChB,0CAA0C,CAC3C,CAAC","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { TriggerInitiatePaymentPayload } from '@backbase/payment-orders-ang';\n\nexport interface InitiatePaymentJourneyComponentApi {\n  /**\n   * @param {TriggerInitiatePaymentPayload} [data] - Initiate payment payload\n   */\n  setupData(data?: TriggerInitiatePaymentPayload): void;\n}\n\nexport interface Communicator<API> {\n  /**\n   * Called upon initializing the journey. Use this method to open the form with a specific wizard flow.\n   */\n  init(api: API): void;\n  /**\n   * Called when the user clicks the Done or Close button.\n   */\n  closeEvent(): void;\n  /**\n   * Called on the onDestroy hook of the InitiatePaymentJourneyComponent.\n   */\n  reset(): void;\n  headerNavigationAction(_: any): void;\n}\n\nexport type InitiatePaymentJourneyCommunicationService =\n  Communicator<InitiatePaymentJourneyComponentApi>;\n\nexport const INITIATE_PAYMENT_JOURNEY_COMMUNICATOR =\n  new InjectionToken<InitiatePaymentJourneyCommunicationService>(\n    'bb-initiate-payment-journey-communicator'\n  );\n"]}