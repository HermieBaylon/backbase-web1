{"version":3,"file":"initiate-payment-config.service.js","sourceRoot":"","sources":["../../../../../../libs/initiate-payment-journey-ang/src/lib/services/initiate-payment-config.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport {\n  TriggerInitiatePaymentPayload,\n  PaymentOrderHttpService,\n  StateService,\n  PaymentMode,\n} from '@backbase/payment-orders-ang';\nimport { ComponentsFactoryService } from '@backbase/payord-form-builder-ang';\nimport { CreatePaymentConfigSetupService } from '@backbase/payments-collection-ui-ang';\n\nimport {\n  INITIATE_PAYMENT_CONFIG,\n  InitiatePaymentConfig,\n  InitiatePaymentDefaultOptions,\n} from '../initiate-payment-journey.config';\nimport { getBusinessFunction, getPaymentConfig } from '../helpers/helpers';\n\n@Injectable()\nexport class InitiatePaymentConfigService {\n  constructor(\n    private readonly stateService: StateService,\n    private readonly componentsFactory: ComponentsFactoryService,\n    private readonly paymentOrderHttpService: PaymentOrderHttpService,\n    private readonly createPaymentSetup: CreatePaymentConfigSetupService,\n    @Inject(INITIATE_PAYMENT_CONFIG)\n    private readonly initiatePaymentConfig: InitiatePaymentConfig\n  ) {}\n\n  /**\n   * @param {TriggerInitiatePaymentPayload} [data] - Initiate payment payload\n   */\n  setup(data?: TriggerInitiatePaymentPayload) {\n    if (data) {\n      data.options?.paymentMode !== PaymentMode.CREATE_PAYMENT\n        ? this.applyData(data)\n        : this.applyConfigWithData(data);\n    } else {\n      this.applyConfig();\n    }\n  }\n\n  private applyConfig(): void {\n    const {\n      paymentTypes,\n      hooks,\n      options,\n      businessFunctions,\n      baseFields,\n      fetchPaymentOptionsListener,\n      customFields,\n    } = this.initiatePaymentConfig;\n\n    this.createPaymentSetup.setHooks(hooks);\n    this.createPaymentSetup.setConfigs(paymentTypes);\n    this.createPaymentSetup.setOptions({\n      ...InitiatePaymentDefaultOptions,\n      ...(options || {}),\n    });\n    this.createPaymentSetup.setBaseFields(baseFields);\n    this.createPaymentSetup.setFetchPaymentOptionsListener(\n      fetchPaymentOptionsListener\n    );\n\n    this.paymentOrderHttpService.businessFunction = businessFunctions.join(',');\n\n    this.componentsFactory.registerCustomFields(customFields);\n    this.componentsFactory.registerCustomFieldsForPaymentConfigs(paymentTypes);\n  }\n\n  private applyData(data: TriggerInitiatePaymentPayload): void {\n    const template = data.template;\n    const paymentType = template\n      ? template.details.paymentType\n      : data.payment?.paymentType;\n    this.paymentOrderHttpService.businessFunction = getBusinessFunction(\n      paymentType as string\n    );\n\n    if (template) {\n      this.stateService.setPaymentTemplate(data.template);\n    } else {\n      this.stateService.setEditPayment(data.payment);\n    }\n\n    this.createPaymentSetup.setConfigs([\n      { ...getPaymentConfig(paymentType as string) },\n    ]);\n    this.createPaymentSetup.setOptions({\n      ...InitiatePaymentDefaultOptions,\n      ...(data.options || {}),\n    });\n  }\n\n  private applyConfigWithData(data: TriggerInitiatePaymentPayload): void {\n    const template = data.template;\n    if (template) {\n      this.stateService.setPaymentTemplate(data.template);\n    } else {\n      this.stateService.setEditPayment(data.payment);\n    }\n    this.applyConfig();\n  }\n}\n"]}