import { Injectable } from '@angular/core';
import { mergeNotificationChannels } from '../helpers/mappers';
import { hoursToMinutesArray } from '../helpers/time.helper';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class ActionsFormBuilderService {
    constructor(fb) {
        this.fb = fb;
    }
    /**
     * Method to build action recipe form group.
     *
     * @param specification - acton recipe specification
     * @param actionRecipe - action recipe
     * @param account - account data
     * @returns prefilled form object
     */
    buildActionRecipeFormGroup(specification, actionRecipe, account) {
        const actionRecipeFormValue = this.buildActionRecipeFormValue(specification, actionRecipe, account);
        return this.fb.group(Object.assign(Object.assign({}, actionRecipeFormValue), { actions: this.fb.group(actionRecipeFormValue.actions), recurrence: this.buildScheduleNotificationsFormGroup(actionRecipe) }));
    }
    /**
     * Method to build action recipe form value.
     *
     * @param specification - acton recipe specification
     * @param actionRecipe - action recipe
     * @param account - account data
     * @returns action recipe form value object
     */
    buildActionRecipeFormValue(specification, actionRecipe, account) {
        var _a, _b;
        const { actions, amount, active, recurrence, id, specificationId, name } = actionRecipe || this.getDefaultActionRecipe(specification);
        return Object.assign({ id, 
            // tslint:disable-next-line:no-null-keyword
            name: name || null, specificationId,
            active, recurrence: this.buildRecurrenceFormItem(recurrence), amount: {
                amount,
                currency: account ? account.currency : {},
            }, actions: this.buildChannelsFormValue(actions) }, (((_a = specification.recipeDefaults) === null || _a === void 0 ? void 0 : _a.additions) && { additions: Object.assign({}, (_b = specification.recipeDefaults) === null || _b === void 0 ? void 0 : _b.additions) }));
    }
    /**
     * Method to build schedule notificatons form group.
     *
     * @param actionRecipe - action recipe
     * @returns prefilled form object
     */
    buildScheduleNotificationsFormGroup(actionRecipe) {
        return this.fb.group({
            scheduleTime: this.getTimeOptions(actionRecipe),
        });
    }
    getDefaultActionRecipe(specification) {
        return {
            // tslint:disable-next-line:no-null-keyword
            id: null,
            // tslint:disable-next-line:no-null-keyword
            name: specification.name || null,
            specificationId: specification.id,
            amount: (specification.recipeDefaults && specification.recipeDefaults.amount) || '0',
            active: false,
            actions: mergeNotificationChannels(specification.actions, (specification.recipeDefaults && specification.recipeDefaults.actions) || []),
        };
    }
    buildChannelsFormValue(channels) {
        return channels.reduce((previous, current) => (Object.assign(Object.assign({}, previous), { [current.type]: current.enabled })), {});
    }
    buildRecurrenceFormItem(recurrence) {
        return Object.assign({ scheduleTime: hoursToMinutesArray(recurrence === null || recurrence === void 0 ? void 0 : recurrence.hoursOfDay) }, ((recurrence === null || recurrence === void 0 ? void 0 : recurrence.daysOfWeek) && { daysOfWeek: recurrence === null || recurrence === void 0 ? void 0 : recurrence.daysOfWeek }));
    }
    getTimeOptions(recipe) {
        var _a, _b;
        const mappedHours = ((_b = (_a = recipe === null || recipe === void 0 ? void 0 : recipe.recurrence) === null || _a === void 0 ? void 0 : _a.hoursOfDay) === null || _b === void 0 ? void 0 : _b.map(option => this.fb.control(Number(option) * 60))) || [];
        return this.fb.array((mappedHours === null || mappedHours === void 0 ? void 0 : mappedHours.length) !== 24 ? mappedHours : []);
    }
}
ActionsFormBuilderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsFormBuilderService, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Injectable });
ActionsFormBuilderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsFormBuilderService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsFormBuilderService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; } });
//# sourceMappingURL=data:application/json;base64,