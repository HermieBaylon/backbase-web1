import { ChangeDetectionStrategy, Component, Directive } from '@angular/core';
import { ArrangementBasedRecipeModel } from '../../models/arrangement-based-recipe.model';
import { BbTemplate } from '@backbase/foundation-ang/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/actions-form-builder.service";
import * as i2 from "@backbase/ui-ang/collapsible";
import * as i3 from "@backbase/ui-ang/header";
import * as i4 from "../switch-with-loading/switch-with-loading.component";
import * as i5 from "@backbase/ui-ang/amount";
import * as i6 from "@backbase/ui-ang/input-inline-edit";
import * as i7 from "../actions-notification-channels/actions-notification-channels.component";
import * as i8 from "@angular/forms";
import * as i9 from "@angular/common";
import * as i10 from "../../pipes/no-fraction-digits.pipe";
export class ActionsAccountBalanceRecipeFormComponent extends ArrangementBasedRecipeModel {
    constructor(actionsFormBuilderService) {
        super(actionsFormBuilderService);
        /**
         * Account balance action recipe ID.
         */
        this.id = `bb-actions-account-balance-recipe-form-${ActionsAccountBalanceRecipeFormComponent.idCounter++}`;
    }
    /**
     * Method to patch the form with the amount and currency.
     *
     * @param amount - amount input value
     */
    onInlineEditAccept(amount) {
        if (this.formGroup) {
            const amountControl = this.formGroup.get('amount');
            if (amountControl) {
                amountControl.patchValue({
                    amount: amount || '0',
                    currency: amountControl.value.currency,
                });
            }
        }
    }
}
ActionsAccountBalanceRecipeFormComponent.idCounter = 0;
ActionsAccountBalanceRecipeFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsAccountBalanceRecipeFormComponent, deps: [{ token: i1.ActionsFormBuilderService }], target: i0.ɵɵFactoryTarget.Component });
ActionsAccountBalanceRecipeFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: ActionsAccountBalanceRecipeFormComponent, selector: "bb-actions-account-balance-recipe-form", usesInheritance: true, ngImport: i0, template: "<ng-container\n  bbActionsAccountBalanceRecipeCustomizableDirective\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    formGroup: formGroup,\n    isLoading: isLoading\n  }\"\n></ng-container>\n\n<ng-template\n  bbActionsAccountBalanceRecipeCustomizableDirective\n  let-hostRef\n  let-formGroup=\"context.formGroup\"\n  let-isLoading=\"context.isLoading\"\n>\n  <form [formGroup]=\"formGroup\">\n    <bb-collapsible-ui class=\"card\" [isOpen]=\"hostRef.isCardExpanded\">\n      <ng-template bbCollapsibleHeader>\n        <div [ngClass]=\"hostRef.isCardExpanded ? 'card-header' : 'card-body'\">\n          <div class=\"bb-stack\">\n            <bb-header-ui\n              class=\"bb-stack__item\"\n              headingType=\"h5\"\n              heading=\"Balance\"\n              i18n-heading=\"Account balance recipe heading@@actions-common.account-balance-recipe.heading\"\n              data-role=\"balance-header\"\n            ></bb-header-ui>\n            <bb-switch-with-loading\n              [isLoading]=\"isLoading\"\n              (change)=\"hostRef.onActiveLoadingChange()\"\n              formControlName=\"active\"\n              class=\"bb-stack__item bb-stack__item--push-right\"\n              aria-label=\"Enable and expand account balance notifications\"\n              i18n-aria-label=\"\n                Account balance switcher aria label@@actions-common.account-balance-recipe.switcher.aria-label\"\n              data-role=\"balance-switcher\"\n            ></bb-switch-with-loading>\n          </div>\n          <div\n            class=\"bb-text-support\"\n            i18n=\"Account balance subheading@@actions-common.account-balance-recipe.subheading\"\n            data-role=\"balance-sub-header\"\n          >\n            Receive notifications when your balance is lower than a selected amount\n          </div>\n        </div>\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <div class=\"card-body\">\n          <label\n            id=\"currency-input-label\"\n            class=\"bb-label\"\n            i18n=\"Lower than input label@@actions-common.account-balance-recipe.lower-than-input\"\n            >Lower than\n          </label>\n          <div class=\"row\">\n            <div class=\"col-sm-6 col-12 bb-block bb-block--md\">\n              <ng-template #amountTemplate>\n                <bb-amount-ui\n                  class=\"bb-highlight\"\n                  [amount]=\"formGroup.get('amount').value.amount\"\n                  [currency]=\"account?.currency\"\n                ></bb-amount-ui>\n              </ng-template>\n              <bb-input-inline-edit-ui\n                pattern=\"-?\\d{1,18}\"\n                (accept)=\"hostRef.onInlineEditAccept($event)\"\n                [inputText]=\"formGroup.get('amount').value.amount | noFractionDigits\"\n                [inputInlineTemplate]=\"amountTemplate\"\n                data-role=\"balance-input\"\n                i18n-ariaLabelEdit=\"\n                  Edit amount without\n                  fractions@@actions-common.account-balance-recipe.edit-amount-without-fractions-button\"\n                ariaLabelEdit=\"Edit amount without fractions\"\n              ></bb-input-inline-edit-ui>\n            </div>\n          </div>\n          <bb-actions-notification-channels\n            formGroupName=\"actions\"\n            [actions]=\"hostRef.specificationActions\"\n          ></bb-actions-notification-channels>\n        </div>\n      </ng-template>\n    </bb-collapsible-ui>\n  </form>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i2.CollapsibleComponent; }), selector: "bb-collapsible-ui", inputs: ["recreateBodyContent", "hasChevron", "isOpen"], outputs: ["isOpenChange"] }, { type: i0.forwardRef(function () { return i3.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i4.SwitchWithLoadingComponent; }), selector: "bb-switch-with-loading", inputs: ["isLoading", "aria-label"] }, { type: i0.forwardRef(function () { return i5.AmountComponent; }), selector: "bb-amount-ui", inputs: ["currency", "showPlusSign", "mapCurrency", "showPercent", "abbreviate", "decimalPlaces", "trailingZeroes", "amount"] }, { type: i0.forwardRef(function () { return i6.InputInlineEditComponent; }), selector: "bb-input-inline-edit-ui", inputs: ["state", "canEdit", "hasLoadingState", "inputInlineTemplate", "inputText", "maxLength", "minLength", "maxValue", "minValue", "autofocus", "ariaLabelAccept", "ariaLabelCancel", "ariaLabelEdit", "tooltipAccept", "tooltipCancel", "tooltipEdit", "autocomplete", "pattern", "hint"], outputs: ["stateChange", "cancel", "accept"] }, { type: i0.forwardRef(function () { return i7.ActionsNotificationChannelsComponent; }), selector: "bb-actions-notification-channels", inputs: ["actions"] }], directives: [{ type: i0.forwardRef(function () { return ActionsAccountBalanceRecipeCustomizableDirective; }), selector: "[bbActionsAccountBalanceRecipeCustomizableDirective]" }, { type: i0.forwardRef(function () { return i8.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i8.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i8.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i2.CollapsibleHeaderDirective; }), selector: "ng-template[bbCollapsibleHeader]" }, { type: i0.forwardRef(function () { return i9.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0.forwardRef(function () { return i8.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i8.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i2.CollapsibleBodyDirective; }), selector: "ng-template[bbCollapsibleBody]" }, { type: i0.forwardRef(function () { return i8.FormGroupName; }), selector: "[formGroupName]", inputs: ["formGroupName"] }], pipes: { "noFractionDigits": i0.forwardRef(function () { return i10.NoFractionDigitsPipe; }) }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsAccountBalanceRecipeFormComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bb-actions-account-balance-recipe-form',
                    templateUrl: './actions-account-balance-recipe-form.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.ActionsFormBuilderService }]; } });
export class ActionsAccountBalanceRecipeCustomizableDirective extends BbTemplate {
}
ActionsAccountBalanceRecipeCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsAccountBalanceRecipeCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ActionsAccountBalanceRecipeCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: ActionsAccountBalanceRecipeCustomizableDirective, selector: "[bbActionsAccountBalanceRecipeCustomizableDirective]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsAccountBalanceRecipeCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbActionsAccountBalanceRecipeCustomizableDirective]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,