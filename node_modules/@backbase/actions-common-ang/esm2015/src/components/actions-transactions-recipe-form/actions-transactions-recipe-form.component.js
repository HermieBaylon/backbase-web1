import { ChangeDetectionStrategy, Component, Directive } from '@angular/core';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { ArrangementBasedRecipeModel } from '../../models/arrangement-based-recipe.model';
import * as i0 from "@angular/core";
import * as i1 from "../../services/actions-form-builder.service";
import * as i2 from "@backbase/ui-ang/collapsible";
import * as i3 from "@backbase/ui-ang/header";
import * as i4 from "../switch-with-loading/switch-with-loading.component";
import * as i5 from "../actions-notification-channels/actions-notification-channels.component";
import * as i6 from "@angular/forms";
import * as i7 from "@angular/common";
export class ActionsTransactionsRecipeFormComponent extends ArrangementBasedRecipeModel {
    constructor(actionsFormBuilderService) {
        super(actionsFormBuilderService);
    }
}
ActionsTransactionsRecipeFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsTransactionsRecipeFormComponent, deps: [{ token: i1.ActionsFormBuilderService }], target: i0.ɵɵFactoryTarget.Component });
ActionsTransactionsRecipeFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.14", type: ActionsTransactionsRecipeFormComponent, selector: "bb-actions-transactions-recipe-form", usesInheritance: true, ngImport: i0, template: "<ng-container\n  bbActionsTransactionsRecipeCustomizableDirective\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    formGroup: formGroup,\n    isLoading: isLoading\n  }\"\n></ng-container>\n\n<ng-template\n  bbActionsTransactionsRecipeCustomizableDirective\n  let-hostRef\n  let-formGroup=\"context.formGroup\"\n  let-isLoading=\"context.isLoading\"\n>\n  <form [formGroup]=\"formGroup\">\n    <bb-collapsible-ui class=\"card\" [isOpen]=\"hostRef.isCardExpanded\">\n      <ng-template bbCollapsibleHeader>\n        <div [ngClass]=\"hostRef.isCardExpanded ? 'card-header' : 'card-body'\" data-role=\"collapsible-header\">\n          <div class=\"bb-stack\">\n            <bb-header-ui\n              class=\"bb-stack__item\"\n              headingType=\"h5\"\n              heading=\"Debits and credits\"\n              i18n-heading=\"Debits and credits recipe heading@@actions-common.transactions-recipe.heading\"\n              data-role=\"transactions-recipe-header\"\n            ></bb-header-ui>\n            <bb-switch-with-loading\n              [isLoading]=\"isLoading\"\n              (change)=\"hostRef.onActiveLoadingChange()\"\n              formControlName=\"active\"\n              class=\"bb-stack__item bb-stack__item--push-right\"\n              aria-label=\"Enable and expand debits and credits notifications\"\n              i18n-aria-label=\"\n                Debits and credits switcher aria label@@actions-common.transactions-recipe.switcher.aria-label\"\n              data-role=\"transactions-recipe-switcher\"\n            ></bb-switch-with-loading>\n          </div>\n          <div\n            class=\"bb-text-support\"\n            i18n=\"Debits and credits subheading@@actions-common.transactions-recipe.subheading\"\n            data-role=\"transactions-recipe-sub-header\"\n          >\n            Receive notification when an amount is debited or credited from your account\n          </div>\n        </div>\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <div class=\"card-body\">\n          <bb-actions-notification-channels\n            formGroupName=\"actions\"\n            [actions]=\"hostRef.specificationActions\"\n          ></bb-actions-notification-channels>\n        </div>\n      </ng-template>\n    </bb-collapsible-ui>\n  </form>\n</ng-template>\n", components: [{ type: i0.forwardRef(function () { return i2.CollapsibleComponent; }), selector: "bb-collapsible-ui", inputs: ["recreateBodyContent", "hasChevron", "isOpen"], outputs: ["isOpenChange"] }, { type: i0.forwardRef(function () { return i3.HeaderComponent; }), selector: "bb-header-ui", inputs: ["headingClasses", "headingType", "heading"] }, { type: i0.forwardRef(function () { return i4.SwitchWithLoadingComponent; }), selector: "bb-switch-with-loading", inputs: ["isLoading", "aria-label"] }, { type: i0.forwardRef(function () { return i5.ActionsNotificationChannelsComponent; }), selector: "bb-actions-notification-channels", inputs: ["actions"] }], directives: [{ type: i0.forwardRef(function () { return ActionsTransactionsRecipeCustomizableDirective; }), selector: "[bbActionsTransactionsRecipeCustomizableDirective]" }, { type: i0.forwardRef(function () { return i6.ɵNgNoValidate; }), selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i0.forwardRef(function () { return i6.NgControlStatusGroup; }), selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i0.forwardRef(function () { return i6.FormGroupDirective; }), selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i0.forwardRef(function () { return i2.CollapsibleHeaderDirective; }), selector: "ng-template[bbCollapsibleHeader]" }, { type: i0.forwardRef(function () { return i7.NgClass; }), selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i0.forwardRef(function () { return i6.NgControlStatus; }), selector: "[formControlName],[ngModel],[formControl]" }, { type: i0.forwardRef(function () { return i6.FormControlName; }), selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i0.forwardRef(function () { return i2.CollapsibleBodyDirective; }), selector: "ng-template[bbCollapsibleBody]" }, { type: i0.forwardRef(function () { return i6.FormGroupName; }), selector: "[formGroupName]", inputs: ["formGroupName"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsTransactionsRecipeFormComponent, decorators: [{
            type: Component,
            args: [{
                    //TODO: remove first selector in 3.8.0
                    selector: 'bb-actions-transactions-recipe-form',
                    templateUrl: './actions-transactions-recipe-form.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.ActionsFormBuilderService }]; } });
export class ActionsTransactionsRecipeCustomizableDirective extends BbTemplate {
}
ActionsTransactionsRecipeCustomizableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsTransactionsRecipeCustomizableDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
ActionsTransactionsRecipeCustomizableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.14", type: ActionsTransactionsRecipeCustomizableDirective, selector: "[bbActionsTransactionsRecipeCustomizableDirective]", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.14", ngImport: i0, type: ActionsTransactionsRecipeCustomizableDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[bbActionsTransactionsRecipeCustomizableDirective]',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy10cmFuc2FjdGlvbnMtcmVjaXBlLWZvcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hY3Rpb25zLWNvbW1vbi1hbmcvc3JjL2NvbXBvbmVudHMvYWN0aW9ucy10cmFuc2FjdGlvbnMtcmVjaXBlLWZvcm0vYWN0aW9ucy10cmFuc2FjdGlvbnMtcmVjaXBlLWZvcm0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hY3Rpb25zLWNvbW1vbi1hbmcvc3JjL2NvbXBvbmVudHMvYWN0aW9ucy10cmFuc2FjdGlvbnMtcmVjaXBlLWZvcm0vYWN0aW9ucy10cmFuc2FjdGlvbnMtcmVjaXBlLWZvcm0uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRTNELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDOzs7Ozs7Ozs7QUFRMUYsTUFBTSxPQUFPLHNDQUF1QyxTQUFRLDJCQUEyQjtJQUNyRixZQUFZLHlCQUFvRDtRQUM5RCxLQUFLLENBQUMseUJBQXlCLENBQUMsQ0FBQztJQUNuQyxDQUFDOztvSUFIVSxzQ0FBc0M7d0hBQXRDLHNDQUFzQyxrR0NabkQscXhFQTBEQSxndEJEckNhLDhDQUE4Qzs0RkFUOUMsc0NBQXNDO2tCQU5sRCxTQUFTO21CQUFDO29CQUNULHNDQUFzQztvQkFDdEMsUUFBUSxFQUFFLHFDQUFxQztvQkFDL0MsV0FBVyxFQUFFLG1EQUFtRDtvQkFDaEUsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOztBQVVELE1BQU0sT0FBTyw4Q0FBK0MsU0FBUSxVQUtuRTs7NElBTFksOENBQThDO2dJQUE5Qyw4Q0FBOEM7NEZBQTlDLDhDQUE4QztrQkFIMUQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsb0RBQW9EO2lCQUMvRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQmJUZW1wbGF0ZSB9IGZyb20gJ0BiYWNrYmFzZS9mb3VuZGF0aW9uLWFuZy9jb3JlJztcbmltcG9ydCB7IEFjdGlvbnNGb3JtQnVpbGRlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9hY3Rpb25zLWZvcm0tYnVpbGRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEFycmFuZ2VtZW50QmFzZWRSZWNpcGVNb2RlbCB9IGZyb20gJy4uLy4uL21vZGVscy9hcnJhbmdlbWVudC1iYXNlZC1yZWNpcGUubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgLy9UT0RPOiByZW1vdmUgZmlyc3Qgc2VsZWN0b3IgaW4gMy44LjBcbiAgc2VsZWN0b3I6ICdiYi1hY3Rpb25zLXRyYW5zYWN0aW9ucy1yZWNpcGUtZm9ybScsXG4gIHRlbXBsYXRlVXJsOiAnLi9hY3Rpb25zLXRyYW5zYWN0aW9ucy1yZWNpcGUtZm9ybS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBBY3Rpb25zVHJhbnNhY3Rpb25zUmVjaXBlRm9ybUNvbXBvbmVudCBleHRlbmRzIEFycmFuZ2VtZW50QmFzZWRSZWNpcGVNb2RlbCB7XG4gIGNvbnN0cnVjdG9yKGFjdGlvbnNGb3JtQnVpbGRlclNlcnZpY2U6IEFjdGlvbnNGb3JtQnVpbGRlclNlcnZpY2UpIHtcbiAgICBzdXBlcihhY3Rpb25zRm9ybUJ1aWxkZXJTZXJ2aWNlKTtcbiAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbYmJBY3Rpb25zVHJhbnNhY3Rpb25zUmVjaXBlQ3VzdG9taXphYmxlRGlyZWN0aXZlXScsXG59KVxuZXhwb3J0IGNsYXNzIEFjdGlvbnNUcmFuc2FjdGlvbnNSZWNpcGVDdXN0b21pemFibGVEaXJlY3RpdmUgZXh0ZW5kcyBCYlRlbXBsYXRlPFxuICBBY3Rpb25zVHJhbnNhY3Rpb25zUmVjaXBlRm9ybUNvbXBvbmVudCxcbiAge1xuICAgIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuICB9XG4+IHt9XG4iLCI8bmctY29udGFpbmVyXG4gIGJiQWN0aW9uc1RyYW5zYWN0aW9uc1JlY2lwZUN1c3RvbWl6YWJsZURpcmVjdGl2ZVxuICBbYmJIb3N0UmVmXT1cInRoaXNcIlxuICBbYmJUZW1wbGF0ZUNvbnRleHRdPVwie1xuICAgIGZvcm1Hcm91cDogZm9ybUdyb3VwLFxuICAgIGlzTG9hZGluZzogaXNMb2FkaW5nXG4gIH1cIlxuPjwvbmctY29udGFpbmVyPlxuXG48bmctdGVtcGxhdGVcbiAgYmJBY3Rpb25zVHJhbnNhY3Rpb25zUmVjaXBlQ3VzdG9taXphYmxlRGlyZWN0aXZlXG4gIGxldC1ob3N0UmVmXG4gIGxldC1mb3JtR3JvdXA9XCJjb250ZXh0LmZvcm1Hcm91cFwiXG4gIGxldC1pc0xvYWRpbmc9XCJjb250ZXh0LmlzTG9hZGluZ1wiXG4+XG4gIDxmb3JtIFtmb3JtR3JvdXBdPVwiZm9ybUdyb3VwXCI+XG4gICAgPGJiLWNvbGxhcHNpYmxlLXVpIGNsYXNzPVwiY2FyZFwiIFtpc09wZW5dPVwiaG9zdFJlZi5pc0NhcmRFeHBhbmRlZFwiPlxuICAgICAgPG5nLXRlbXBsYXRlIGJiQ29sbGFwc2libGVIZWFkZXI+XG4gICAgICAgIDxkaXYgW25nQ2xhc3NdPVwiaG9zdFJlZi5pc0NhcmRFeHBhbmRlZCA/ICdjYXJkLWhlYWRlcicgOiAnY2FyZC1ib2R5J1wiIGRhdGEtcm9sZT1cImNvbGxhcHNpYmxlLWhlYWRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJiYi1zdGFja1wiPlxuICAgICAgICAgICAgPGJiLWhlYWRlci11aVxuICAgICAgICAgICAgICBjbGFzcz1cImJiLXN0YWNrX19pdGVtXCJcbiAgICAgICAgICAgICAgaGVhZGluZ1R5cGU9XCJoNVwiXG4gICAgICAgICAgICAgIGhlYWRpbmc9XCJEZWJpdHMgYW5kIGNyZWRpdHNcIlxuICAgICAgICAgICAgICBpMThuLWhlYWRpbmc9XCJEZWJpdHMgYW5kIGNyZWRpdHMgcmVjaXBlIGhlYWRpbmdAQGFjdGlvbnMtY29tbW9uLnRyYW5zYWN0aW9ucy1yZWNpcGUuaGVhZGluZ1wiXG4gICAgICAgICAgICAgIGRhdGEtcm9sZT1cInRyYW5zYWN0aW9ucy1yZWNpcGUtaGVhZGVyXCJcbiAgICAgICAgICAgID48L2JiLWhlYWRlci11aT5cbiAgICAgICAgICAgIDxiYi1zd2l0Y2gtd2l0aC1sb2FkaW5nXG4gICAgICAgICAgICAgIFtpc0xvYWRpbmddPVwiaXNMb2FkaW5nXCJcbiAgICAgICAgICAgICAgKGNoYW5nZSk9XCJob3N0UmVmLm9uQWN0aXZlTG9hZGluZ0NoYW5nZSgpXCJcbiAgICAgICAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwiYWN0aXZlXCJcbiAgICAgICAgICAgICAgY2xhc3M9XCJiYi1zdGFja19faXRlbSBiYi1zdGFja19faXRlbS0tcHVzaC1yaWdodFwiXG4gICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJFbmFibGUgYW5kIGV4cGFuZCBkZWJpdHMgYW5kIGNyZWRpdHMgbm90aWZpY2F0aW9uc1wiXG4gICAgICAgICAgICAgIGkxOG4tYXJpYS1sYWJlbD1cIlxuICAgICAgICAgICAgICAgIERlYml0cyBhbmQgY3JlZGl0cyBzd2l0Y2hlciBhcmlhIGxhYmVsQEBhY3Rpb25zLWNvbW1vbi50cmFuc2FjdGlvbnMtcmVjaXBlLnN3aXRjaGVyLmFyaWEtbGFiZWxcIlxuICAgICAgICAgICAgICBkYXRhLXJvbGU9XCJ0cmFuc2FjdGlvbnMtcmVjaXBlLXN3aXRjaGVyXCJcbiAgICAgICAgICAgID48L2JiLXN3aXRjaC13aXRoLWxvYWRpbmc+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3M9XCJiYi10ZXh0LXN1cHBvcnRcIlxuICAgICAgICAgICAgaTE4bj1cIkRlYml0cyBhbmQgY3JlZGl0cyBzdWJoZWFkaW5nQEBhY3Rpb25zLWNvbW1vbi50cmFuc2FjdGlvbnMtcmVjaXBlLnN1YmhlYWRpbmdcIlxuICAgICAgICAgICAgZGF0YS1yb2xlPVwidHJhbnNhY3Rpb25zLXJlY2lwZS1zdWItaGVhZGVyXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICBSZWNlaXZlIG5vdGlmaWNhdGlvbiB3aGVuIGFuIGFtb3VudCBpcyBkZWJpdGVkIG9yIGNyZWRpdGVkIGZyb20geW91ciBhY2NvdW50XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgIDxuZy10ZW1wbGF0ZSBiYkNvbGxhcHNpYmxlQm9keT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxuICAgICAgICAgIDxiYi1hY3Rpb25zLW5vdGlmaWNhdGlvbi1jaGFubmVsc1xuICAgICAgICAgICAgZm9ybUdyb3VwTmFtZT1cImFjdGlvbnNcIlxuICAgICAgICAgICAgW2FjdGlvbnNdPVwiaG9zdFJlZi5zcGVjaWZpY2F0aW9uQWN0aW9uc1wiXG4gICAgICAgICAgPjwvYmItYWN0aW9ucy1ub3RpZmljYXRpb24tY2hhbm5lbHM+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICA8L2JiLWNvbGxhcHNpYmxlLXVpPlxuICA8L2Zvcm0+XG48L25nLXRlbXBsYXRlPlxuIl19