{"version":3,"file":"backbase-actions-common-ang.js","sources":["../../../../libs/actions-common-ang/src/pipes/no-fraction-digits.pipe.ts","../../../../libs/actions-common-ang/src/helpers/time.helper.ts","../../../../libs/actions-common-ang/src/helpers/utils.ts","../../../../libs/actions-common-ang/src/helpers/mappers.ts","../../../../libs/actions-common-ang/src/services/actions-form-builder.service.ts","../../../../libs/actions-common-ang/src/constants/errors.ts","../../../../libs/actions-common-ang/src/services/actions-notifications-settings-data.service.ts","../../../../libs/actions-common-ang/src/components/actions-notification-channels/actions-notification-channels.component.ts","../../../../libs/actions-common-ang/src/components/actions-notification-channels/actions-notification-channels.component.html","../../../../libs/actions-common-ang/src/models/arrangement-based-recipe.model.ts","../../../../libs/actions-common-ang/src/components/switch-with-loading/switch-with-loading.component.ts","../../../../libs/actions-common-ang/src/components/switch-with-loading/switch-with-loading.component.html","../../../../libs/actions-common-ang/src/components/actions-account-balance-recipe-form/actions-account-balance-recipe-form.component.ts","../../../../libs/actions-common-ang/src/components/actions-account-balance-recipe-form/actions-account-balance-recipe-form.component.html","../../../../libs/actions-common-ang/src/components/actions-transactions-recipe-form/actions-transactions-recipe-form.component.ts","../../../../libs/actions-common-ang/src/components/actions-transactions-recipe-form/actions-transactions-recipe-form.component.html","../../../../libs/actions-common-ang/src/models/schedule-notifications.model.ts","../../../../libs/actions-common-ang/src/components/time-picker/time-picker.component.ts","../../../../libs/actions-common-ang/src/components/time-picker/time-picker.component.html","../../../../libs/actions-common-ang/src/components/actions-schedule-notifications/actions-schedule-notifications.component.ts","../../../../libs/actions-common-ang/src/components/actions-schedule-notifications/actions-schedule-notifications.component.html","../../../../libs/actions-common-ang/src/components/actions-toggle-recipe-form/actions-toggle-recipe-form.component.ts","../../../../libs/actions-common-ang/src/components/actions-toggle-recipe-form/actions-toggle-recipe-form.component.html","../../../../libs/actions-common-ang/src/components/time-picker/time-picker.module.ts","../../../../libs/actions-common-ang/src/models/notification-to-specification-id.model.ts","../../../../libs/actions-common-ang/src/services/actions-notifications-preferences-data.service.ts","../../../../libs/actions-common-ang/src/actions-common.module.ts","../../../../libs/actions-common-ang/src/services/notification-preferences-base-data.service.ts","../../../../libs/actions-common-ang/src/helpers/item-model-property.ts","../../../../libs/actions-common-ang/src/models/specification-ids.model.ts","../../../../libs/actions-common-ang/src/models/actions-base-properties-service.model.ts","../../../../libs/actions-common-ang/backbase-actions-common-ang.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'noFractionDigits',\n  pure: true,\n})\nexport class NoFractionDigitsPipe implements PipeTransform {\n  transform(val: string): string {\n    return val ? val.replace(/\\..*/, '') : '';\n  }\n}\n","import { DaysOfWeek, HoursOfDay } from '@backbase/actions-http-ang';\nimport { TimeOption } from '../models/schedule-notifications.model';\n\nconst AM_PM = ['AM', 'PM'];\n\nexport const DAYS_OF_WEEK: DaysOfWeek[] = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\n\nexport function getTimeOptions(\n  startTime: number,\n  minutesStep: number,\n  excludedOptions: number[],\n  amPmFormat: boolean,\n): TimeOption[] {\n  const timeOptions: TimeOption[] = [];\n  let index = 0;\n  while (startTime < 24 * 60) {\n    const hh = Math.floor(startTime / 60);\n    const mm = startTime % 60;\n    if (!excludedOptions.includes(startTime)) {\n      timeOptions[index] = {\n        label: getOptionLabel(hh, mm, amPmFormat),\n        time: startTime,\n      };\n\n      index++;\n    }\n\n    startTime = startTime + minutesStep;\n  }\n\n  return timeOptions;\n}\n\nexport function getHoursOfDay(scheduleTime: number[] = []): HoursOfDay[] {\n  const list = scheduleTime.map(time => String(time / 60)) as HoursOfDay[];\n  if (!list.length) {\n    for (let i = 0; i < 24; i++) {\n      list.push(`${i}` as HoursOfDay);\n    }\n  }\n\n  return list;\n}\n\nexport function hoursToMinutesArray(hours: HoursOfDay[] | undefined): number[] {\n  return hours?.map(hour => Number(hour) * 60) || [];\n}\n\nfunction getOptionLabel(hh: number, mm: number, amPmFormat: boolean): string {\n  const getFormattedTime = (hours = hh, suffix = '') => ('0' + hours).slice(-2) + '.' + ('0' + mm).slice(-2) + suffix;\n\n  return amPmFormat ? getFormattedTime(hh % 12, AM_PM[Math.floor(hh / 12)]) : getFormattedTime();\n}\n","export const firstNonEmptyString: (...args: (string | undefined)[]) => string = (...args) =>\n  args.find(item => !!item) || '';\n\nexport const filterObjectByPropNames = <T>(obj: T, keysToExclude: string[]): T => {\n  const resultObj = { ...obj };\n  keysToExclude.forEach((id: string) => delete (resultObj as { [key: string]: any })[id]);\n\n  return resultObj as T;\n};\n\nexport const isEqualNumberArrays = (arr1: number[], arr2: number[]): boolean => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  const sortedArr1 = sortNumberArray(arr1);\n  const sortedArr2 = sortNumberArray(arr2);\n\n  return sortedArr1.every((v: number, i: number) => v === sortedArr2[i]);\n};\n\nexport const sortNumberArray = (arr: number[], asc = true): number[] =>\n  arr.slice(0).sort((a, b) => (asc ? a - b : b - a));\n","import {\n  ActionParent,\n  ActionRecipeSpecification,\n  BatchRecipe,\n  Action,\n  Recurrence,\n  HoursOfDay,\n} from '@backbase/data-ang/actions';\nimport { SpecificationsWithAction } from '../models/specifications-with-action.model';\nimport {\n  ActionRecipeChannelsFormValue,\n  ActionRecipeFormItemValue,\n  ActionRecurrenceFormValue,\n} from '../models/action-recipes-form-value.model';\nimport { ActionRecipeItem } from '../models/action-recipe-item.model';\nimport { DAYS_OF_WEEK, getHoursOfDay, hoursToMinutesArray } from './time.helper';\nimport { isEqualNumberArrays } from './utils';\n\nexport const fromHttpResponse = <T>(body: T | null): T => {\n  if (body === null) {\n    throw new Error('Response body not set');\n  }\n\n  return body;\n};\n\nexport const secondsToMilliseconds = (seconds: number) => seconds * 1000;\n\nexport const actionRecipeFormItemToRequest = ({\n  id,\n  name,\n  amount,\n  actions,\n  recurrence,\n  ...restActionRecipe\n}: ActionRecipeFormItemValue): BatchRecipe => ({\n  ...restActionRecipe,\n  ...(id && { id }),\n  ...(name && { name }),\n  amount: amount?.amount || '0',\n  ...(Object.keys(notificationRecurrenceFormValueToRequest(recurrence)).length && {\n    recurrence: notificationRecurrenceFormValueToRequest(recurrence),\n  }),\n  actions: notificationChannelsFormValueToRequest(actions),\n});\n\nexport const parseActionRecipeFormItem = ({\n  id,\n  name,\n  amount,\n  actions,\n  recurrence,\n  ...restActionRecipe\n}: ActionRecipeFormItemValue): ActionRecipeItem => ({\n  ...restActionRecipe,\n  ...(id && { id }),\n  ...(name && { name }),\n  amount: amount.amount || '0',\n  actions: parseNotificationChannelsFormValue(actions),\n  ...(Object.keys(notificationRecurrenceFormValueToRequest(recurrence)).length && {\n    recurrence: notificationRecurrenceFormValueToRequest(recurrence),\n  }),\n});\n\nexport const arrangementActionRecipeToRequest =\n  (arrangementId: string) =>\n  (actionRecipeFormItemValue: ActionRecipeFormItemValue): BatchRecipe => ({\n    arrangementId,\n    ...actionRecipeFormItemToRequest(actionRecipeFormItemValue),\n  });\n\nexport const mergeNotificationChannels = (channels: ActionParent[], defaultChannels: ActionParent[]): Action[] =>\n  channels\n    ? channels.map(channel => ({\n        ...channel,\n        enabled: defaultChannels.some(({ type }) => type === channel.type),\n      }))\n    : [];\n\nexport const mergeSpecificationsWithActionRecipes = (\n  specs: ActionRecipeSpecification[],\n  recipes: ActionRecipeItem[],\n): SpecificationsWithAction =>\n  specs.reduce(\n    (prev, specification) => ({\n      ...prev,\n      [specification.id as string]: {\n        specification,\n        actionRecipe: recipes.find(({ specificationId }) => specificationId === specification.id),\n      },\n    }),\n    {} as SpecificationsWithAction,\n  );\n\nexport const getMappedRecurrenceResponse = (\n  responseRecurrence: Recurrence,\n  { recurrence: cachedRecurrence }: ActionRecipeFormItemValue,\n): Recurrence => ({\n  ...responseRecurrence,\n  hoursOfDay: getCachedHoursOfDay(responseRecurrence, cachedRecurrence),\n});\n\nconst notificationChannelsFormValueToRequest = (channels: ActionRecipeChannelsFormValue): ActionParent[] =>\n  Object.keys(channels)\n    .filter(key => channels[key])\n    .map(type => ({ type }));\n\nconst notificationRecurrenceFormValueToRequest = (rec?: ActionRecurrenceFormValue): Recurrence => ({\n  ...((rec?.scheduleTime.length || 0) !== 0 && { hoursOfDay: getHoursOfDay(rec?.scheduleTime) }),\n  ...((rec?.scheduleTime.length || 0) !== 0 && { daysOfWeek: rec?.daysOfWeek || DAYS_OF_WEEK }),\n});\n\nconst parseNotificationChannelsFormValue = (channels: ActionRecipeChannelsFormValue): Action[] =>\n  Object.keys(channels).map(type => ({\n    type,\n    enabled: channels[type],\n  }));\n\nconst getCachedHoursOfDay = (\n  responseRecurrence: Recurrence,\n  cachedRecurrence: ActionRecurrenceFormValue | undefined,\n): HoursOfDay[] | undefined => {\n  if (!cachedRecurrence?.scheduleTime) {\n    return responseRecurrence.hoursOfDay;\n  }\n  if (\n    !isEqualNumberArrays(cachedRecurrence.scheduleTime.slice(0), hoursToMinutesArray(responseRecurrence.hoursOfDay))\n  ) {\n    return responseRecurrence.hoursOfDay;\n  }\n\n  return cachedRecurrence.scheduleTime.map(minutes => String(minutes / 60)) as HoursOfDay[];\n};\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  ActionParent,\n  Action,\n  ActionRecipeGetResponseBody,\n  ActionRecipeSpecification,\n  Recurrence,\n} from '@backbase/data-ang/actions';\nimport {\n  ActionRecipeChannelsFormValue,\n  ActionRecipeFormItemValue,\n  ActionRecurrenceFormValue,\n} from '../models/action-recipes-form-value.model';\nimport { mergeNotificationChannels } from '../helpers/mappers';\nimport { AccountArrangementItem } from '@backbase/data-ang/arrangements';\nimport { hoursToMinutesArray } from '../helpers/time.helper';\n\ninterface DefaultActionRecipe extends Pick<ActionRecipeGetResponseBody, 'actions' | 'active' | 'specificationId'> {\n  id: string | null;\n  name: string | null;\n  amount: string;\n  recurrence?: Recurrence;\n}\n\n@Injectable()\nexport class ActionsFormBuilderService {\n  constructor(private readonly fb: FormBuilder) {}\n\n  /**\n   * Method to build action recipe form group.\n   *\n   * @param specification - acton recipe specification\n   * @param actionRecipe - action recipe\n   * @param account - account data\n   * @returns prefilled form object\n   */\n  buildActionRecipeFormGroup(\n    specification: ActionRecipeSpecification,\n    actionRecipe?: ActionRecipeGetResponseBody,\n    account?: AccountArrangementItem,\n  ): FormGroup {\n    const actionRecipeFormValue = this.buildActionRecipeFormValue(specification, actionRecipe, account);\n\n    return this.fb.group({\n      ...actionRecipeFormValue,\n      actions: this.fb.group(actionRecipeFormValue.actions),\n      recurrence: this.buildScheduleNotificationsFormGroup(actionRecipe),\n    });\n  }\n\n  /**\n   * Method to build action recipe form value.\n   *\n   * @param specification - acton recipe specification\n   * @param actionRecipe - action recipe\n   * @param account - account data\n   * @returns action recipe form value object\n   */\n  buildActionRecipeFormValue(\n    specification: ActionRecipeSpecification,\n    actionRecipe?: ActionRecipeGetResponseBody,\n    account?: AccountArrangementItem,\n  ): ActionRecipeFormItemValue {\n    const { actions, amount, active, recurrence, id, specificationId, name } =\n      actionRecipe || this.getDefaultActionRecipe(specification);\n\n    return {\n      id,\n      // tslint:disable-next-line:no-null-keyword\n      name: name || null,\n      specificationId,\n      active,\n      recurrence: this.buildRecurrenceFormItem(recurrence),\n      amount: {\n        amount,\n        currency: account ? account.currency : {},\n      } as { amount: string; currency: string | object },\n      actions: this.buildChannelsFormValue(actions),\n      ...(specification.recipeDefaults?.additions && { additions: { ...specification.recipeDefaults?.additions } }),\n    };\n  }\n\n  /**\n   * Method to build schedule notificatons form group.\n   *\n   * @param actionRecipe - action recipe\n   * @returns prefilled form object\n   */\n  buildScheduleNotificationsFormGroup(actionRecipe?: ActionRecipeGetResponseBody): FormGroup {\n    return this.fb.group({\n      scheduleTime: this.getTimeOptions(actionRecipe),\n    });\n  }\n\n  private getDefaultActionRecipe(specification: ActionRecipeSpecification): DefaultActionRecipe {\n    return {\n      // tslint:disable-next-line:no-null-keyword\n      id: null,\n      // tslint:disable-next-line:no-null-keyword\n      name: specification.name || null,\n      specificationId: specification.id as string,\n      amount: (specification.recipeDefaults && specification.recipeDefaults.amount) || '0',\n      active: false,\n      actions: mergeNotificationChannels(\n        specification.actions as ActionParent[],\n        (specification.recipeDefaults && specification.recipeDefaults.actions) || [],\n      ),\n    };\n  }\n\n  private buildChannelsFormValue(channels: Action[]): ActionRecipeChannelsFormValue {\n    return channels.reduce(\n      (previous, current) => ({\n        ...previous,\n        [current.type]: current.enabled,\n      }),\n      {},\n    );\n  }\n\n  private buildRecurrenceFormItem(recurrence: Recurrence | undefined): ActionRecurrenceFormValue {\n    return {\n      scheduleTime: hoursToMinutesArray(recurrence?.hoursOfDay),\n      ...(recurrence?.daysOfWeek && { daysOfWeek: recurrence?.daysOfWeek }),\n    };\n  }\n\n  private getTimeOptions(recipe?: ActionRecipeGetResponseBody): FormArray {\n    const mappedHours = recipe?.recurrence?.hoursOfDay?.map(option => this.fb.control(Number(option) * 60)) || [];\n\n    return this.fb.array(mappedHours?.length !== 24 ? mappedHours : []);\n  }\n}\n","export const EMPTY_RESPONSE_ERROR = new Error('Response data is empty');\n","import { Injectable } from '@angular/core';\nimport {\n  ActionRecipe,\n  ActionRecipeSpecification,\n  ActionRecipeSpecificationsHttpService,\n  ActionRecipesHttpService,\n  BatchProcessingPutResponseBody,\n} from '@backbase/data-ang/actions';\nimport { Observable, of, throwError } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { EMPTY_RESPONSE_ERROR } from '../constants/errors';\nimport { actionRecipeFormItemToRequest, arrangementActionRecipeToRequest, fromHttpResponse } from '../helpers/mappers';\nimport { ActionRecipeFormItemValue } from '../models/action-recipes-form-value.model';\nimport { NotificationsPreferencesBaseDataService } from './notification-preferences-base-data.service';\n\nexport const ACTION_RECIPES_LIMIT = 999999;\n\n@Injectable()\nexport class ActionsNotificationsSettingsDataService implements NotificationsPreferencesBaseDataService {\n  constructor(\n    private readonly dataHttpService: ActionRecipesHttpService,\n    private readonly actionSpecificationsService: ActionRecipeSpecificationsHttpService,\n  ) {}\n\n  /**\n   * Method to get action recipes.\n   *\n   * @param params - params object\n   * @returns action recipe array\n   */\n  getActionRecipes(params = {}): Observable<ActionRecipe[]> {\n    const requestParams = {\n      limit: ACTION_RECIPES_LIMIT,\n      ...params,\n    };\n\n    return this.dataHttpService.getActionRecipes(requestParams).pipe(\n      map(fromHttpResponse),\n      map(response => response.actionRecipes),\n    );\n  }\n\n  /**\n   * Method to get action recipe specifications.\n   *\n   * @returns action recipe specifications\n   */\n  getSpecifications(): Observable<ActionRecipeSpecification[]> {\n    return this.actionSpecificationsService.getActionRecipeSpecifications({}).pipe(\n      map(fromHttpResponse),\n      map(response => response.actionRecipeSpecifications || []),\n    );\n  }\n\n  /**\n   * Method to save action recipe.\n   *\n   * @param action - recipe form value\n   * @param arrangementId - arrangement ID\n   * @returns batch processing response\n   */\n  saveActionRecipe(\n    actionRecipeFormItem: ActionRecipeFormItemValue,\n    arrangementId?: string,\n  ): Observable<BatchProcessingPutResponseBody> {\n    const recipeToRequest = arrangementId\n      ? arrangementActionRecipeToRequest(arrangementId)\n      : actionRecipeFormItemToRequest;\n    const batchProcessingPutRequestBody = { actionRecipes: [recipeToRequest(actionRecipeFormItem)] };\n\n    return this.dataHttpService\n      .putBatchProcessing({ batchProcessingPutRequestBody })\n      .pipe(switchMap(body => (body ? of(body) : throwError(EMPTY_RESPONSE_ERROR))));\n  }\n}\n","import { AfterContentInit, ChangeDetectionStrategy, Component, Directive, Input } from '@angular/core';\nimport { ControlContainer, FormGroup } from '@angular/forms';\nimport { SpecificationAction } from '@backbase/data-ang/actions';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-actions-notification-channels',\n  templateUrl: './actions-notification-channels.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionsNotificationChannelsComponent implements AfterContentInit {\n  static idCounter = 0;\n\n  /**\n   * Action notification channels IDs.\n   */\n  readonly id = `bb-actions-notification-channels-${ActionsNotificationChannelsComponent.idCounter++}`;\n\n  /**\n   * Actions map setter.\n   */\n  @Input() set actions(value: SpecificationAction[]) {\n    this.actionsMap = new Map(value.map(action => [action.type, action]));\n  }\n\n  /**\n   * Actions map.\n   */\n  actionsMap: Map<SpecificationAction['type'], SpecificationAction> = new Map();\n\n  /**\n   * Notification channels settings form.\n   */\n  formGroup?: FormGroup;\n\n  constructor(private readonly controlContainer: ControlContainer) {}\n\n  ngAfterContentInit() {\n    this.formGroup = this.controlContainer.control as FormGroup;\n  }\n}\n\n@Directive({\n  selector: '[bbActionsNotificationChannelsCustomizableDirective]',\n})\nexport class ActionsNotificationChannelsCustomizableDirective extends BbTemplate<\n  ActionsNotificationChannelsComponent,\n  {\n    actionsMap: Map<SpecificationAction['type'], SpecificationAction>;\n  }\n> {}\n","<ng-container\n  bbActionsNotificationChannelsCustomizableDirective\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    actionsMap: actionsMap\n  }\"\n></ng-container>\n\n<ng-template bbActionsNotificationChannelsCustomizableDirective let-hostRef let-actionsMap=\"context.actionsMap\">\n  <label class=\"bb-label bb-stack\" *ngIf=\"actionsMap.has('sms') || actionsMap.has('email')\">\n    <span\n      class=\"bb-stack__item bb-stack__item--spacing-sm\"\n      i18n=\"Title for notification channels@@actions-common.notification-channels.title\"\n      data-role=\"channel-title\"\n      >Additional channels</span\n    >\n    <bb-icon-ui\n      class=\"bb-stack__item\"\n      tabindex=\"0\"\n      name=\"info\"\n      size=\"sm\"\n      data-role=\"channel-title-icon\"\n      triggers=\"hover focus\"\n      aria-label=\"Other channels that you would like to receive notifications through, additionally to the ones in-app\"\n      i18n-aria-label=\"\n        Channels that you would like to receive notifications through@@actions-common.notification-channels.others\"\n      bbTooltip=\"Other channels that you would like to receive notifications through, additionally to the ones in-app\"\n      i18n-bbTooltip=\"@@actions-common.notification-channels.others\"\n    ></bb-icon-ui>\n  </label>\n  <div [formGroup]=\"hostRef.formGroup\">\n    <div *ngIf=\"actionsMap.has('sms')\" class=\"bb-block bb-block--sm\">\n      <bb-input-checkbox-ui\n        label=\"SMS\"\n        i18n-label=\"Label for sms channel checkbox@@actions-common.notification-channels.sms.label\"\n        formControlName=\"sms\"\n        data-role=\"sms-checkbox\"\n      ></bb-input-checkbox-ui>\n    </div>\n\n    <div *ngIf=\"actionsMap.has('email')\" class=\"bb-block bb-block--sm\">\n      <bb-input-checkbox-ui\n        label=\"Email\"\n        i18n-label=\"Label for email channel checkbox@@actions-common.notification-channels.email.label\"\n        formControlName=\"email\"\n        data-role=\"email-checkbox\"\n      ></bb-input-checkbox-ui>\n    </div>\n  </div>\n</ng-template>\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, Directive } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  ActionRecipeGetResponseBody,\n  ActionRecipeSpecification,\n  SpecificationAction,\n} from '@backbase/data-ang/actions';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ActionsFormBuilderService } from '../services/actions-form-builder.service';\nimport { AccountArrangementItem } from '@backbase/data-ang/arrangements';\nimport { ActionRecipeFormItemValue } from './action-recipes-form-value.model';\n\n@Directive()\n// tslint:disable-next-line:directive-class-suffix\nexport abstract class ArrangementBasedRecipeModel implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Account data.\n   */\n  @Input() account?: AccountArrangementItem;\n\n  /**\n   * Action recipe data.\n   */\n  @Input() actionRecipe?: ActionRecipeGetResponseBody;\n\n  /**\n   * Specification setter.\n   */\n  @Input()\n  set specification(specification: ActionRecipeSpecification) {\n    this.specificationValue = specification;\n    this.specificationActions = specification.actions || [];\n  }\n\n  /**\n   * Specification getter.\n   */\n  get specification(): ActionRecipeSpecification {\n    return this.specificationValue as ActionRecipeSpecification;\n  }\n\n  /**\n   * Specification value.\n   */\n  specificationValue?: ActionRecipeSpecification;\n\n  /**\n   * On submit event emitter.\n   */\n  @Output() submit = new EventEmitter<ActionRecipeFormItemValue>();\n\n  /**\n   * Specifications with actions.\n   */\n  specificationActions: SpecificationAction[] = [];\n\n  /**\n   * Account data.\n   */\n  formGroup?: FormGroup;\n\n  /**\n   * Loading flag.\n   */\n  isLoading = false;\n\n  private readonly destroy$ = new Subject<void>();\n\n  /**\n   * Method to check if card form control is expanded.\n   *\n   * @returns boolean value\n   */\n  get isCardExpanded(): boolean {\n    const activeControl = this.formGroup && this.formGroup.get('active');\n\n    return activeControl && activeControl.value && !this.isLoading;\n  }\n\n  protected constructor(private readonly actionsFormBuilderService: ActionsFormBuilderService) {}\n\n  ngOnInit(): void {\n    this.formGroup = this.actionsFormBuilderService.buildActionRecipeFormGroup(\n      this.specification,\n      this.actionRecipe,\n      this.account,\n    );\n    this.formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      this.onSubmit(value);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { actionRecipe } = changes;\n    if (this.formGroup && actionRecipe && actionRecipe.previousValue !== actionRecipe.currentValue) {\n      this.formGroup.patchValue(\n        this.actionsFormBuilderService.buildActionRecipeFormValue(this.specification, this.actionRecipe, this.account),\n        {\n          emitEvent: false,\n        },\n      );\n      this.isLoading = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Method to submit action recipe form.\n   *\n   * @param formValue - action recipe form value\n   */\n  onSubmit(formValue: ActionRecipeFormItemValue) {\n    this.submit.emit(formValue);\n  }\n\n  /**\n   * Method to set loading flag to true.\n   */\n  onActiveLoadingChange() {\n    this.isLoading = true;\n  }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'bb-switch-with-loading',\n  templateUrl: './switch-with-loading.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SwitchWithLoadingComponent),\n      multi: true,\n    },\n  ],\n})\nexport class SwitchWithLoadingComponent implements ControlValueAccessor {\n  /**\n   * Loading indicator presentation marker.\n   */\n  @Input() isLoading = false;\n\n  /**\n   * aria-label attribute text.\n   */\n  @Input('aria-label') ariaLabel?: string;\n\n  private _value!: boolean;\n\n  /**\n   * ControlValueAccessor on change handler.\n   */\n  onChange: Function = () => {};\n\n  /**\n   * ControlValueAccessor on touch handler.\n   */\n  onTouch: Function = () => {};\n\n  /**\n   * ControlValueAccessor value setter.\n   */\n  set value(val: boolean) {\n    this._value = val;\n    this.onChange(val);\n    this.onTouch(val);\n  }\n\n  /**\n   * ControlValueAccessor value getter.\n   */\n  get value(): boolean {\n    return this._value;\n  }\n\n  /**\n   * Method from ControlValueAccessor to write a new value to the element.\n   *\n   * @param value - new value\n   */\n  writeValue(value: boolean) {\n    this._value = value;\n  }\n\n  /**\n   * Method from ControlValueAccessor to register on change handler.\n   *\n   * @param fn - on change handler function\n   */\n  registerOnChange(fn: Function) {\n    this.onChange = fn;\n  }\n\n  /**\n   * Method from ControlValueAccessor to register on touched handler.\n   *\n   * @param fn - on touched handler function\n   */\n  registerOnTouched(fn: Function) {\n    this.onTouch = fn;\n  }\n}\n","<bb-switch-ui\n  [aria-label]=\"ariaLabel\"\n  [(ngModel)]=\"value\"\n  (blur)=\"onTouch()\"\n  *ngIf=\"!isLoading; else loadingIndicator\"\n></bb-switch-ui>\n<ng-template #loadingIndicator>\n  <div class=\"bb-loading-indicator bb-loading-indicator--sm\" data-role=\"loading-indicator\">\n    <svg aria-label=\"Loading indicator\" class=\"bb-loading-indicator__circle\" preserveAspectRatio=\"xMinYMin meet\">\n      <circle class=\"bb-loading-indicator__path\" cx=\"50%\" cy=\"50%\" fill=\"none\" r=\"40%\" stroke=\"currentColor\"></circle>\n    </svg>\n  </div>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Directive } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActionsFormBuilderService } from '../../services/actions-form-builder.service';\nimport { ArrangementBasedRecipeModel } from '../../models/arrangement-based-recipe.model';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\n\n@Component({\n  selector: 'bb-actions-account-balance-recipe-form',\n  templateUrl: './actions-account-balance-recipe-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionsAccountBalanceRecipeFormComponent extends ArrangementBasedRecipeModel {\n  static idCounter = 0;\n\n  /**\n   * Account balance action recipe ID.\n   */\n  readonly id = `bb-actions-account-balance-recipe-form-${ActionsAccountBalanceRecipeFormComponent.idCounter++}`;\n\n  constructor(actionsFormBuilderService: ActionsFormBuilderService) {\n    super(actionsFormBuilderService);\n  }\n\n  /**\n   * Method to patch the form with the amount and currency.\n   *\n   * @param amount - amount input value\n   */\n  onInlineEditAccept(amount: string) {\n    if (this.formGroup) {\n      const amountControl = this.formGroup.get('amount');\n      if (amountControl) {\n        amountControl.patchValue({\n          amount: amount || '0',\n          currency: amountControl.value.currency,\n        });\n      }\n    }\n  }\n}\n\n@Directive({\n  selector: '[bbActionsAccountBalanceRecipeCustomizableDirective]',\n})\nexport class ActionsAccountBalanceRecipeCustomizableDirective extends BbTemplate<\n  ActionsAccountBalanceRecipeFormComponent,\n  {\n    formGroup: FormGroup;\n  }\n> {}\n","<ng-container\n  bbActionsAccountBalanceRecipeCustomizableDirective\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    formGroup: formGroup,\n    isLoading: isLoading\n  }\"\n></ng-container>\n\n<ng-template\n  bbActionsAccountBalanceRecipeCustomizableDirective\n  let-hostRef\n  let-formGroup=\"context.formGroup\"\n  let-isLoading=\"context.isLoading\"\n>\n  <form [formGroup]=\"formGroup\">\n    <bb-collapsible-ui class=\"card\" [isOpen]=\"hostRef.isCardExpanded\">\n      <ng-template bbCollapsibleHeader>\n        <div [ngClass]=\"hostRef.isCardExpanded ? 'card-header' : 'card-body'\">\n          <div class=\"bb-stack\">\n            <bb-header-ui\n              class=\"bb-stack__item\"\n              headingType=\"h5\"\n              heading=\"Balance\"\n              i18n-heading=\"Account balance recipe heading@@actions-common.account-balance-recipe.heading\"\n              data-role=\"balance-header\"\n            ></bb-header-ui>\n            <bb-switch-with-loading\n              [isLoading]=\"isLoading\"\n              (change)=\"hostRef.onActiveLoadingChange()\"\n              formControlName=\"active\"\n              class=\"bb-stack__item bb-stack__item--push-right\"\n              aria-label=\"Enable and expand account balance notifications\"\n              i18n-aria-label=\"\n                Account balance switcher aria label@@actions-common.account-balance-recipe.switcher.aria-label\"\n              data-role=\"balance-switcher\"\n            ></bb-switch-with-loading>\n          </div>\n          <div\n            class=\"bb-text-support\"\n            i18n=\"Account balance subheading@@actions-common.account-balance-recipe.subheading\"\n            data-role=\"balance-sub-header\"\n          >\n            Receive notifications when your balance is lower than a selected amount\n          </div>\n        </div>\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <div class=\"card-body\">\n          <label\n            id=\"currency-input-label\"\n            class=\"bb-label\"\n            i18n=\"Lower than input label@@actions-common.account-balance-recipe.lower-than-input\"\n            >Lower than\n          </label>\n          <div class=\"row\">\n            <div class=\"col-sm-6 col-12 bb-block bb-block--md\">\n              <ng-template #amountTemplate>\n                <bb-amount-ui\n                  class=\"bb-highlight\"\n                  [amount]=\"formGroup.get('amount').value.amount\"\n                  [currency]=\"account?.currency\"\n                ></bb-amount-ui>\n              </ng-template>\n              <bb-input-inline-edit-ui\n                pattern=\"-?\\d{1,18}\"\n                (accept)=\"hostRef.onInlineEditAccept($event)\"\n                [inputText]=\"formGroup.get('amount').value.amount | noFractionDigits\"\n                [inputInlineTemplate]=\"amountTemplate\"\n                data-role=\"balance-input\"\n                i18n-ariaLabelEdit=\"\n                  Edit amount without\n                  fractions@@actions-common.account-balance-recipe.edit-amount-without-fractions-button\"\n                ariaLabelEdit=\"Edit amount without fractions\"\n              ></bb-input-inline-edit-ui>\n            </div>\n          </div>\n          <bb-actions-notification-channels\n            formGroupName=\"actions\"\n            [actions]=\"hostRef.specificationActions\"\n          ></bb-actions-notification-channels>\n        </div>\n      </ng-template>\n    </bb-collapsible-ui>\n  </form>\n</ng-template>\n","import { ChangeDetectionStrategy, Component, Directive } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ActionsFormBuilderService } from '../../services/actions-form-builder.service';\nimport { ArrangementBasedRecipeModel } from '../../models/arrangement-based-recipe.model';\n\n@Component({\n  //TODO: remove first selector in 3.8.0\n  selector: 'bb-actions-transactions-recipe-form',\n  templateUrl: './actions-transactions-recipe-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionsTransactionsRecipeFormComponent extends ArrangementBasedRecipeModel {\n  constructor(actionsFormBuilderService: ActionsFormBuilderService) {\n    super(actionsFormBuilderService);\n  }\n}\n\n@Directive({\n  selector: '[bbActionsTransactionsRecipeCustomizableDirective]',\n})\nexport class ActionsTransactionsRecipeCustomizableDirective extends BbTemplate<\n  ActionsTransactionsRecipeFormComponent,\n  {\n    formGroup: FormGroup;\n  }\n> {}\n","<ng-container\n  bbActionsTransactionsRecipeCustomizableDirective\n  [bbHostRef]=\"this\"\n  [bbTemplateContext]=\"{\n    formGroup: formGroup,\n    isLoading: isLoading\n  }\"\n></ng-container>\n\n<ng-template\n  bbActionsTransactionsRecipeCustomizableDirective\n  let-hostRef\n  let-formGroup=\"context.formGroup\"\n  let-isLoading=\"context.isLoading\"\n>\n  <form [formGroup]=\"formGroup\">\n    <bb-collapsible-ui class=\"card\" [isOpen]=\"hostRef.isCardExpanded\">\n      <ng-template bbCollapsibleHeader>\n        <div [ngClass]=\"hostRef.isCardExpanded ? 'card-header' : 'card-body'\" data-role=\"collapsible-header\">\n          <div class=\"bb-stack\">\n            <bb-header-ui\n              class=\"bb-stack__item\"\n              headingType=\"h5\"\n              heading=\"Debits and credits\"\n              i18n-heading=\"Debits and credits recipe heading@@actions-common.transactions-recipe.heading\"\n              data-role=\"transactions-recipe-header\"\n            ></bb-header-ui>\n            <bb-switch-with-loading\n              [isLoading]=\"isLoading\"\n              (change)=\"hostRef.onActiveLoadingChange()\"\n              formControlName=\"active\"\n              class=\"bb-stack__item bb-stack__item--push-right\"\n              aria-label=\"Enable and expand debits and credits notifications\"\n              i18n-aria-label=\"\n                Debits and credits switcher aria label@@actions-common.transactions-recipe.switcher.aria-label\"\n              data-role=\"transactions-recipe-switcher\"\n            ></bb-switch-with-loading>\n          </div>\n          <div\n            class=\"bb-text-support\"\n            i18n=\"Debits and credits subheading@@actions-common.transactions-recipe.subheading\"\n            data-role=\"transactions-recipe-sub-header\"\n          >\n            Receive notification when an amount is debited or credited from your account\n          </div>\n        </div>\n      </ng-template>\n      <ng-template bbCollapsibleBody>\n        <div class=\"card-body\">\n          <bb-actions-notification-channels\n            formGroupName=\"actions\"\n            [actions]=\"hostRef.specificationActions\"\n          ></bb-actions-notification-channels>\n        </div>\n      </ng-template>\n    </bb-collapsible-ui>\n  </form>\n</ng-template>\n","export interface TimeOption {\n  label: string;\n  time: number;\n}\n\nexport type MinutesStep = 5 | 10 | 15 | 30 | 60;\nexport const MinutesInDay = 1440;\n\nexport enum ScheduleType {\n  RightAway = 'RightAway',\n  Custom = 'Custom',\n}\n\nexport const ScheduleDescriptionText: Record<ScheduleType, string> = {\n  // TODO: use in component template once localize pipe will be available\n  RightAway: 'Notifications will be sent immediately.',\n  Custom: 'Notifications will be grouped and sent at specified time.',\n};\n\nexport const DefaultTime = 480;\nexport const MaxOptionsQuantity = 4;\n","import { ChangeDetectionStrategy, Component, forwardRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { getTimeOptions } from '../../helpers/time.helper';\nimport { MinutesStep, TimeOption } from '../../models/schedule-notifications.model';\n\n@Component({\n  selector: 'bb-time-picker',\n  templateUrl: './time-picker.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TimePickerComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TimePickerComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  timeOptions: TimeOption[] = [];\n  private readonly excludedOptions$$ = new BehaviorSubject<number[]>([]);\n  private readonly componentDestroyed$ = new Subject<boolean>();\n\n  /**\n   * Start time\n   */\n  @Input() startTime = 0;\n\n  /**\n   * Step on minutes for time options\n   */\n  @Input() minutesStep: MinutesStep = 60;\n\n  /**\n   * Time format\n   */\n  @Input() amPmFormat!: false;\n\n  /**\n   * Options to exclude\n   */\n  @Input() set excludedOptions(options: number[]) {\n    this.excludedOptions$$.next(options || []);\n  }\n\n  /**\n   * Form control reference\n   */\n  @Input() controlRef!: FormControl;\n\n  /**\n   * Input's label\n   */\n  @Input() label: string | undefined;\n\n  /**\n   * Time form control\n   */\n  readonly timeControl = new FormControl();\n\n  ngOnInit() {\n    this.onExcludedOptionsChange();\n    this.onFormValueChange();\n  }\n\n  private onExcludedOptionsChange() {\n    this.excludedOptions$$.pipe(takeUntil(this.componentDestroyed$)).subscribe(options => {\n      const timeControlValue = this.timeControl.value?.time || this.controlRef?.value;\n      const excludedOptions =\n        timeControlValue || timeControlValue === 0 ? options.filter(option => option !== timeControlValue) : [];\n      this.timeOptions = getTimeOptions(this.startTime, this.minutesStep, excludedOptions, this.amPmFormat);\n      const selection = this.timeOptions.find(option => option.time === timeControlValue);\n      this.timeControl.setValue(selection);\n    });\n  }\n\n  private onFormValueChange() {\n    this.timeControl.valueChanges.pipe(takeUntil(this.componentDestroyed$)).subscribe(value => {\n      if (value) {\n        this.onChange(value.time);\n      }\n    });\n  }\n\n  /**\n   * Change event handler\n   */\n  onChange = (_time: number) => {}; // NOSONAR\n\n  /**\n   * Touched event handler\n   */\n  onTouched = () => {}; // NOSONAR\n\n  /**\n   * Method to register change event handler\n   *\n   * @param fn\n   */\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  /**\n   * Method to register touched event handler\n   *\n   * @param fn\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Method to write initial value to the input\n   *\n   * @param time\n   */\n  writeValue(time: number) {\n    this.timeControl.setValue(this.timeOptions.find(ts => ts.time === time));\n  }\n\n  markAsTouched(event: Event) {\n    const target = event.target as HTMLTextAreaElement;\n    target.blur();\n    this.onTouched();\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed$.next(true);\n  }\n}\n","<bb-dropdown-single-select-ui\n  iconName=\"caret-down\"\n  [options]=\"timeOptions\"\n  [label]=\"label\"\n  (change)=\"markAsTouched($event)\"\n  [formControl]=\"timeControl\"\n  displayAttributePath=\"label\"\n  data-role=\"time-picker-dropdown\"\n>\n</bb-dropdown-single-select-ui>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { ActionRecipeGetResponseBody } from '@backbase/actions-http-ang';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, takeUntil, tap } from 'rxjs/operators';\nimport {\n  DefaultTime,\n  MaxOptionsQuantity,\n  MinutesStep,\n  ScheduleType,\n  MinutesInDay,\n} from '../../models/schedule-notifications.model';\n\n@Component({\n  selector: 'bb-actions-schedule-notifications',\n  templateUrl: './actions-schedule-notifications.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionsScheduleNotificationsComponent implements OnInit, OnDestroy {\n  /**\n   * Selected schedule type\n   */\n  scheduleType!: ScheduleType;\n\n  /**\n   * Schedule type enum\n   */\n  readonly ScheduleType = ScheduleType;\n\n  /**\n   * Maximum options quantity\n   */\n  readonly MaxOptionsQuantity = MaxOptionsQuantity;\n\n  /**\n   * Stream of selected options\n   */\n  selectedTimeOptions$: Observable<number[]> = of([]);\n  selectedTimeOptions: number[] = [];\n  private readonly destroy$ = new Subject<void>();\n\n  /**\n   * Action recipe.\n   */\n  @Input() actionRecipe!: ActionRecipeGetResponseBody;\n\n  /**\n   * Schedule form group.\n   */\n  @Input() scheduleForm!: FormGroup;\n\n  /**\n   * Minutes step in time options list.\n   */\n  @Input() minutesStep: MinutesStep = 60;\n\n  /**\n   * Schedule form submit output.\n   */\n  @Output() readonly submit = new EventEmitter<FormGroup>();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.scheduleType = this.getScheduleType(this.actionRecipe);\n    this.onScheduleFormChange();\n  }\n\n  onScheduleTypeChange(event: Event) {\n    const target = event.target as HTMLTextAreaElement;\n    if (this.scheduleType === this.ScheduleType.RightAway) {\n      this.resetScheduleForm();\n    } else if (this.scheduleType === this.ScheduleType.Custom) {\n      this.addTimeOption();\n    }\n    target.blur();\n  }\n\n  addTimeOption() {\n    this.scheduleTime.push(this.fb.control(this.defaultTime));\n    this.submitScheduleForm();\n  }\n\n  deleteTimeOption(index: number) {\n    this.scheduleTime.removeAt(index);\n    this.submitScheduleForm();\n  }\n\n  timeControlChange() {\n    this.submitScheduleForm();\n  }\n\n  private onScheduleFormChange() {\n    this.selectedTimeOptions$ = this.scheduleForm.controls.scheduleTime.valueChanges.pipe(\n      filter(val => val),\n      tap(val => (this.selectedTimeOptions = val)),\n      distinctUntilChanged(),\n      takeUntil(this.destroy$),\n    );\n  }\n\n  private submitScheduleForm() {\n    this.submit.emit(this.scheduleForm);\n  }\n\n  private getScheduleType(recipe: ActionRecipeGetResponseBody): ScheduleType {\n    const hoursOfDayQuantity = recipe.recurrence?.hoursOfDay?.length || 0;\n    const hoursScheduleApplied = hoursOfDayQuantity !== 0 && hoursOfDayQuantity !== 24;\n\n    if (!hoursScheduleApplied) {\n      return ScheduleType.RightAway;\n    }\n\n    return ScheduleType.Custom;\n  }\n\n  private resetScheduleForm() {\n    this.scheduleTime.clear();\n    this.submitScheduleForm();\n  }\n\n  /**\n   * Getter for repeat count control\n   */\n  get scheduleTime(): FormArray {\n    return this.scheduleForm.get('scheduleTime') as FormArray;\n  }\n\n  /**\n   * Getter for default time which returns 08:00 for the first option and +1 hour for subsequent\n   */\n  private get defaultTime(): number {\n    const lastSelectedTimeOption = this.lastSelectedTimeOption;\n    let defaultTime = lastSelectedTimeOption + this.minutesStep;\n    if (!lastSelectedTimeOption && lastSelectedTimeOption !== 0) {\n      return DefaultTime;\n    }\n    if (defaultTime === MinutesInDay) {\n      defaultTime = 0;\n    }\n    while (this.selectedTimeOptions.includes(defaultTime)) {\n      if (defaultTime === MinutesInDay) {\n        defaultTime = 0;\n      } else {\n        defaultTime = defaultTime + 60;\n      }\n    }\n\n    return defaultTime;\n  }\n\n  /**\n   * Getter for last added time option\n   */\n  private get lastSelectedTimeOption(): number {\n    return this.scheduleTime.controls[this.scheduleTime.controls.length - 1]?.value;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n@Directive({\n  selector: '[bbActionsScheduleNotificationsComponentCustomizableDirective]',\n})\nexport class ActionsScheduleNotificationsComponentCustomizableDirective extends BbTemplate<\n  ActionsScheduleNotificationsComponent,\n  void\n> {}\n","<ng-container bbActionsScheduleNotificationsComponentCustomizableDirective [bbHostRef]=\"this\"> </ng-container>\n<ng-template bbActionsScheduleNotificationsComponentCustomizableDirective let-hostRef>\n  <div class=\"row bb-block bb-block--md bb-stack bb-stack--align-baseline\">\n    <div class=\"col-3\">\n      <span i18n=\"Notify me label@@actions-common.actions-schedule-notifications.title\"> Notify me </span>\n    </div>\n    <div class=\"col-3\">\n      <bb-dropdown-single-select-ui\n        iconName=\"caret-down\"\n        [required]=\"true\"\n        [(ngModel)]=\"hostRef.scheduleType\"\n        (change)=\"hostRef.onScheduleTypeChange($event)\"\n        aria-label=\"Schedule type\"\n        i18n-aria-label=\"\n          Schedule type dropdown@@actions-common.actions-schedule-notifications.schedule-type-dropdown.aria-label\"\n        data-role=\"notifications-schedule-type\"\n      >\n        <bb-dropdown-single-select-option-ui\n          i18n-label=\"\n            Schedule type dropdown right away\n            option@@actions-common.actions-schedule-notifications.schedule-type-right-away-option.label\"\n          label=\"Right away\"\n          [value]=\"hostRef.ScheduleType.RightAway\"\n        ></bb-dropdown-single-select-option-ui>\n        <bb-dropdown-single-select-option-ui\n          i18n-label=\"\n            Schedule type dropdown custom\n            option@@actions-common.actions-schedule-notifications.schedule-type-custom-option.label\"\n          label=\"Custom\"\n          [value]=\"hostRef.ScheduleType.Custom\"\n        ></bb-dropdown-single-select-option-ui>\n      </bb-dropdown-single-select-ui>\n    </div>\n    <div\n      class=\"col-6 row bb-stack bb-stack--align-baseline no-gutters\"\n      *ngIf=\"hostRef.scheduleType === hostRef.ScheduleType.Custom\"\n    >\n      <span\n        class=\"col-1\"\n        i18n=\"Schedule time picker title @@actions-common.actions-schedule-notifications.schedule-time-picker.title\"\n        >At</span\n      >\n      <form class=\"col-11\" [formGroup]=\"hostRef.scheduleForm\">\n        <div\n          class=\"row no-gutters bb-block bb-block--md\"\n          formArrayName=\"scheduleTime\"\n          *ngFor=\"let ref of hostRef.scheduleTime.controls; let i = index; let last = last\"\n        >\n          <bb-time-picker\n            class=\"col-6 actions-schedule-time-picker__dropdown\"\n            [formControlName]=\"i\"\n            [excludedOptions]=\"hostRef.selectedTimeOptions$ | async\"\n            [controlRef]=\"ref\"\n            [minutesStep]=\"hostRef.minutesStep\"\n            (change)=\"hostRef.timeControlChange()\"\n            data-role=\"schedule-time-picker\"\n            i18n-aria-label=\"\n              Schedule time picker label @@actions-common.actions-schedule-notifications.schedule-time-picker.aria-label\"\n            aria-label=\"actions-schedule-notifications-time-picker\"\n          ></bb-time-picker>\n          <button\n            bbButton\n            circle=\"true\"\n            *ngIf=\"last && i !== 0\"\n            (click)=\"hostRef.deleteTimeOption(i)\"\n            color=\"link\"\n            aria-label=\"Delete time option\"\n            i18n-aria-label=\"\n              Schedule delete time option\n              @@actions-common.actions-schedule-notifications.schedule-delete-time-option.aria-label\"\n            data-role=\"delete-time-option\"\n          >\n            <bb-icon-ui name=\"delete\" class=\"text-muted\"></bb-icon-ui>\n          </button>\n        </div>\n        <button\n          bbButton\n          class=\"bb-stack__item\"\n          color=\"primary\"\n          circle=\"true\"\n          buttonSize=\"sm\"\n          type=\"button\"\n          *ngIf=\"hostRef.scheduleTime.controls.length < hostRef.MaxOptionsQuantity\"\n          (click)=\"hostRef.addTimeOption()\"\n          aria-label=\"Add time option\"\n          i18n-aria-label=\"\n            Schedule add time option @@actions-common.actions-schedule-notifications.schedule-time-add-option.aria-label\"\n          data-role=\"add-time-option\"\n        >\n          <bb-icon-ui name=\"add\" size=\"sm\"></bb-icon-ui>\n        </button>\n      </form>\n    </div>\n  </div>\n  <div class=\"bb-block bb-block--md text-center bb-text-support\" data-role=\"schedule-description\">\n    <em i18n=\"Schedule description@@actions-common.actions-schedule-notifications.schedule-description\">\n      Notifications will be {hostRef.scheduleType, select, Custom {grouped and sent at specified time.} RightAway {sent\n      immediately.}}\n    </em>\n    <hr />\n  </div>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ActionRecipeGetResponseBody, ActionRecipeSpecification } from '@backbase/data-ang/actions';\nimport { BbTemplate } from '@backbase/foundation-ang/core';\nimport { ActionRecipeFormItemValue } from '../../models/action-recipes-form-value.model';\nimport { FormGroup } from '@angular/forms';\nimport { ActionsFormBuilderService } from '../../services/actions-form-builder.service';\n\n@Component({\n  selector: 'bb-actions-toggle-recipe-form',\n  templateUrl: './actions-toggle-recipe-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActionsToggleRecipeFormComponent implements OnChanges, OnInit {\n  /**\n   * Action recipe.\n   */\n  @Input() actionRecipe?: ActionRecipeGetResponseBody;\n\n  /**\n   * Action recipe specification.\n   */\n  @Input() specification!: ActionRecipeSpecification;\n\n  /**\n   * Label text.\n   */\n  @Input() label!: string;\n\n  /**\n   * Flag to control if schedule notifications is enabled\n   */\n  @Input() scheduleEnabled = false;\n\n  /**\n   * On form submit output.\n   */\n  @Output() submit = new EventEmitter<ActionRecipeFormItemValue>();\n\n  /**\n   * Loading state flag.\n   */\n  isLoading = false;\n\n  /**\n   * Action recipe form.\n   */\n  formGroup?: FormGroup;\n\n  constructor(private readonly actionsFormBuilderService: ActionsFormBuilderService) {}\n\n  ngOnInit() {\n    this.formGroup = this.actionsFormBuilderService.buildActionRecipeFormGroup(this.specification, this.actionRecipe);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { actionRecipe } = changes;\n    if (this.formGroup && actionRecipe && actionRecipe.previousValue !== actionRecipe.currentValue) {\n      this.isLoading = false;\n      this.formGroup.patchValue(\n        this.actionsFormBuilderService.buildActionRecipeFormValue(this.specification, this.actionRecipe),\n      );\n    }\n  }\n\n  /**\n   * Method to handle schedule form change and trigger submit action.\n   *\n   * @param value - action recipe form value\n   */\n  onScheduleChange(value: FormGroup) {\n    this.formGroup?.patchValue(value);\n    this.submit.emit(this.formGroup?.value);\n  }\n\n  /**\n   * Method to submit action recipe form.\n   *\n   * @param formValue - action recipe form value\n   */\n  onSubmit(formValue: ActionRecipeFormItemValue) {\n    this.isLoading = true;\n    this.submit.emit(formValue);\n  }\n}\n\n@Directive({\n  selector: '[bbActionsToggleRecipeFormCustomizableDirective]',\n})\nexport class ActionsToggleRecipeFormCustomizableDirective extends BbTemplate<ActionsToggleRecipeFormComponent, void> {}\n","<ng-container bbActionsToggleRecipeFormCustomizableDirective [bbHostRef]=\"this\"></ng-container>\n\n<ng-template bbActionsToggleRecipeFormCustomizableDirective let-hostRef>\n  <ng-container *ngIf=\"hostRef.formGroup\">\n    <form [formGroup]=\"hostRef.formGroup\">\n      <div class=\"bb-block bb-block--md bb-stack\">\n        <div\n          class=\"bb-stack__item bb-text-support bb-text-bold\"\n          [attr.data-role]=\"'toggle-recipe-label-' + hostRef.specification.id\"\n        >\n          {{ hostRef.label }}\n        </div>\n        <bb-switch-with-loading\n          [isLoading]=\"hostRef.isLoading\"\n          class=\"bb-stack__item bb-stack__item--push-right\"\n          formControlName=\"active\"\n          (change)=\"hostRef.onSubmit(hostRef.formGroup.value)\"\n          aria-label=\"{{ 'Switch on/off ' + hostRef.label }}\"\n          i18n-aria-label=\"Toggle recipe aria label@@actions-common.actions-toggle-recipe-form.switcher.aria-label\"\n          [attr.data-role]=\"'toggle-recipe-' + hostRef.specification.id\"\n        ></bb-switch-with-loading>\n      </div>\n      <bb-actions-schedule-notifications\n        class=\"bb-stack__item\"\n        *ngIf=\"hostRef.scheduleEnabled && hostRef.formGroup.value?.active && hostRef.actionRecipe\"\n        [scheduleForm]=\"hostRef.formGroup.get('recurrence')\"\n        [actionRecipe]=\"hostRef.actionRecipe\"\n        (submit)=\"hostRef.onScheduleChange($event)\"\n      ></bb-actions-schedule-notifications>\n    </form>\n  </ng-container>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownSingleSelectModule } from '@backbase/ui-ang/dropdown-single-select';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TimePickerComponent } from './time-picker.component';\n\n@NgModule({\n  imports: [CommonModule, DropdownSingleSelectModule, ReactiveFormsModule],\n  declarations: [TimePickerComponent],\n  exports: [TimePickerComponent, DropdownSingleSelectModule, ReactiveFormsModule],\n})\nexport class TimePickerModule {}\n","export interface PreferenceInfo {\n  generalNotificationId: string;\n  preferenceName: string;\n  preferenceLabel: string;\n  specificationId: string;\n}\n\nexport const PreferenceDataMap: Record<string, PreferenceInfo> = {\n  '1': {\n    generalNotificationId: 'new-transaction-occurred',\n    preferenceName: 'Transactions',\n    preferenceLabel: 'Transactions',\n    specificationId: '1',\n  },\n  '4': {\n    generalNotificationId: 'account-balance-low',\n    preferenceName: 'AccountBalance',\n    preferenceLabel: 'Account Balance',\n    specificationId: '4',\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport {\n  ActionRecipe,\n  ActionRecipeSpecification,\n  BatchProcessingPutResponseBody,\n  ActionRecipeGetResponseBody,\n} from '@backbase/data-ang/actions';\nimport {\n  NotificationPreferenceService,\n  GetNotificationPreferencesRequestParams,\n  NotificationPreference,\n  NotificationPreferencePutRequest,\n  NotificationPreferencePostRequest,\n} from '@backbase/data-ang/engagement';\nimport { ActionRecipeFormItemValue } from '../models/action-recipes-form-value.model';\nimport { PreferenceDataMap } from '../models/notification-to-specification-id.model';\nimport { NotificationsPreferencesBaseDataService } from './notification-preferences-base-data.service';\nimport { fromHttpResponse } from '../helpers/mappers';\n\n@Injectable()\nexport class ActionsNotificationsPreferencesDataService implements NotificationsPreferencesBaseDataService {\n  private readonly cachedNotificationPreferences$$ = new BehaviorSubject<NotificationPreference[]>([]);\n\n  constructor(private readonly dataHttpService: NotificationPreferenceService) {}\n\n  /**\n   * Method to get action recipes.\n   *\n   * @param arrangementId\n   * @returns action recipe array\n   */\n  getActionRecipes(arrangementId: string): Observable<ActionRecipe[]> {\n    const requestParams = {\n      entityId: arrangementId,\n      entityType: 'arrangement',\n    } as GetNotificationPreferencesRequestParams;\n\n    return this.dataHttpService.getNotificationPreferences(requestParams).pipe(\n      map(fromHttpResponse),\n      map(({ notificationPreferences }) => {\n        this.cachedNotificationPreferences$$.next(notificationPreferences);\n\n        return notificationPreferences.map(pref => this.preferenceToRecipe(pref));\n      }),\n    );\n  }\n\n  /**\n   * Method to get action recipe specifications.\n   *\n   * @returns action recipe specifications\n   */\n  getSpecifications(): Observable<ActionRecipeSpecification[]> {\n    return this.cachedNotificationPreferences$$.pipe(\n      map(fromHttpResponse),\n      map(notificationPreferences => notificationPreferences.map(pref => this.preferenceToSpecification(pref))),\n    );\n  }\n\n  /**\n   * Method to save action recipe.\n   *\n   * @param action - recipe form value\n   * @param arrangementId - arrangement ID\n   * @returns batch processing response\n   */\n  saveActionRecipe(\n    actionRecipeFormItem: ActionRecipeFormItemValue,\n    arrangementId: string,\n  ): Observable<BatchProcessingPutResponseBody> {\n    const notificationPreferences = this.cachedNotificationPreferences$$.getValue();\n    const preferenceToUpdate = notificationPreferences.find(\n      pref =>\n        pref.generalNotificationId === PreferenceDataMap[actionRecipeFormItem.specificationId].generalNotificationId,\n    ) as NotificationPreference;\n\n    if (preferenceToUpdate.id) {\n      return this.updateNotificationPreference(preferenceToUpdate, actionRecipeFormItem);\n    } else {\n      return this.createNotificationPreference(preferenceToUpdate, actionRecipeFormItem, arrangementId);\n    }\n  }\n\n  private updateNotificationPreference(\n    preferenceToUpdate: NotificationPreference,\n    actionRecipeFormItem: ActionRecipeFormItemValue,\n  ): Observable<BatchProcessingPutResponseBody> {\n    const notificationPreferencePutRequest = this.getNotificationPreferencePutRequest(\n      preferenceToUpdate,\n      actionRecipeFormItem,\n    );\n\n    return this.dataHttpService\n      .updateNotificationPreference({ id: preferenceToUpdate.id || '', notificationPreferencePutRequest })\n      .pipe(this.mapSavePreferenceResponce());\n  }\n\n  private createNotificationPreference(\n    preferenceToUpdate: NotificationPreference,\n    actionRecipeFormItem: ActionRecipeFormItemValue,\n    arrangementId: string,\n  ): Observable<BatchProcessingPutResponseBody> {\n    const notificationPreferencePostRequest = this.getNotificationPreferencePostRequest(\n      preferenceToUpdate,\n      actionRecipeFormItem,\n      arrangementId,\n    );\n\n    return this.dataHttpService\n      .createNotificationPreference({ notificationPreferencePostRequest })\n      .pipe(this.mapSavePreferenceResponce());\n  }\n\n  private mapSavePreferenceResponce = () => (preference: Observable<NotificationPreference>) =>\n    preference.pipe(\n      withLatestFrom(this.cachedNotificationPreferences$$),\n      switchMap(([pref, preferences]) => {\n        this.updatePreferencesCache(preferences, pref);\n\n        return of({\n          actionRecipes: [this.preferenceToRecipe(pref) as ActionRecipe],\n        } as BatchProcessingPutResponseBody);\n      }),\n    );\n\n  private getNotificationPreferencePutRequest(\n    preference: NotificationPreference,\n    actionRecipeFormItem: ActionRecipeFormItemValue,\n  ): NotificationPreferencePutRequest {\n    return {\n      active: actionRecipeFormItem.active,\n      channels: preference.channels.map(channel => ({\n        ...channel,\n        enabled: !!actionRecipeFormItem.actions[channel.channel],\n      })),\n      conditions: {\n        ...(actionRecipeFormItem.amount.amount !== undefined && {\n          amount: `${actionRecipeFormItem.amount.amount}` as any,\n        }),\n      },\n    };\n  }\n\n  private getNotificationPreferencePostRequest(\n    preference: NotificationPreference,\n    actionRecipeFormItem: ActionRecipeFormItemValue,\n    arrangementId: string,\n  ): NotificationPreferencePostRequest {\n    return {\n      generalNotificationId: preference.generalNotificationId,\n      active: actionRecipeFormItem.active,\n      eRef: arrangementId,\n      channels: preference.channels.map(channel => ({\n        ...channel,\n        enabled: !!actionRecipeFormItem.actions[channel.channel],\n      })),\n      conditions: { ...preference.userConditions?.conditions },\n    };\n  }\n\n  private preferenceToSpecification = ({\n    userConditions,\n    channels,\n    generalNotificationId,\n  }: NotificationPreference): ActionRecipeSpecification =>\n    ({\n      actions: channels.map(channel => ({ type: channel.channel })),\n      recipeDefaults: {\n        ...(userConditions?.conditions?.hasOwnProperty('amount') && {\n          amount: `${userConditions?.conditions?.amount}`,\n        }),\n      },\n      id: Object.values(PreferenceDataMap).find(pref => pref.generalNotificationId === generalNotificationId)\n        ?.specificationId,\n    } as ActionRecipeSpecification);\n\n  private preferenceToRecipe = ({\n    channels,\n    userConditions,\n    createdOn,\n    generalNotificationId,\n    active,\n    id,\n  }: NotificationPreference): ActionRecipeGetResponseBody =>\n    ({\n      specificationId: Object.values(PreferenceDataMap).find(\n        pref => pref.generalNotificationId === generalNotificationId,\n      )?.specificationId,\n      active,\n      actions: channels.map(channel => ({\n        type: channel.channel,\n        enabled: channel.enabled,\n      })),\n      createdOn,\n      ...(userConditions?.conditions?.hasOwnProperty('amount') && {\n        amount: `${userConditions?.conditions?.amount}`,\n      }),\n      id: id || '',\n    } as ActionRecipeGetResponseBody);\n\n  private updatePreferencesCache(preferences: NotificationPreference[], updatedPreference: NotificationPreference) {\n    const updatedPreferences = preferences.map(pref =>\n      pref.generalNotificationId === updatedPreference.generalNotificationId ? updatedPreference : pref,\n    );\n    this.cachedNotificationPreferences$$.next(updatedPreferences);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NoFractionDigitsPipe } from './pipes/no-fraction-digits.pipe';\nimport { ActionsFormBuilderService } from './services/actions-form-builder.service';\nimport { ActionsNotificationsSettingsDataService } from './services/actions-notifications-settings-data.service';\n\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { CollapsibleModule } from '@backbase/ui-ang/collapsible';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputCheckboxModule } from '@backbase/ui-ang/input-checkbox';\nimport { InputInlineEditModule } from '@backbase/ui-ang/input-inline-edit';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { SwitchModule } from '@backbase/ui-ang/switch';\nimport { TooltipModule } from '@backbase/ui-ang/tooltip-directive';\nimport { AmountModule } from '@backbase/ui-ang/amount';\n\nimport {\n  ActionsNotificationChannelsComponent,\n  ActionsNotificationChannelsCustomizableDirective,\n} from './components/actions-notification-channels/actions-notification-channels.component';\nimport {\n  ActionsAccountBalanceRecipeFormComponent,\n  ActionsAccountBalanceRecipeCustomizableDirective,\n} from './components/actions-account-balance-recipe-form/actions-account-balance-recipe-form.component';\nimport {\n  ActionsTransactionsRecipeFormComponent,\n  ActionsTransactionsRecipeCustomizableDirective,\n} from './components/actions-transactions-recipe-form/actions-transactions-recipe-form.component';\nimport {\n  ActionsToggleRecipeFormComponent,\n  ActionsToggleRecipeFormCustomizableDirective,\n} from './components/actions-toggle-recipe-form/actions-toggle-recipe-form.component';\nimport { SwitchWithLoadingComponent } from './components/switch-with-loading/switch-with-loading.component';\nimport {\n  ActionsScheduleNotificationsComponent,\n  ActionsScheduleNotificationsComponentCustomizableDirective,\n} from './components/actions-schedule-notifications/actions-schedule-notifications.component';\nimport { TimePickerModule } from './components/time-picker/time-picker.module';\nimport { ActionsNotificationsPreferencesDataService } from './services/actions-notifications-preferences-data.service';\n\nconst components = [\n  ActionsNotificationChannelsComponent,\n  ActionsAccountBalanceRecipeFormComponent,\n  ActionsTransactionsRecipeFormComponent,\n  ActionsToggleRecipeFormComponent,\n  SwitchWithLoadingComponent,\n  ActionsScheduleNotificationsComponent,\n];\n\nconst directives = [\n  ActionsNotificationChannelsCustomizableDirective,\n  ActionsAccountBalanceRecipeCustomizableDirective,\n  ActionsTransactionsRecipeCustomizableDirective,\n  ActionsToggleRecipeFormCustomizableDirective,\n  ActionsScheduleNotificationsComponentCustomizableDirective,\n];\n\nconst pipes = [NoFractionDigitsPipe];\n\nconst uiModules = [\n  AmountModule,\n  ModalModule,\n  ButtonModule,\n  InputCheckboxModule,\n  SwitchModule,\n  HeaderModule,\n  CollapsibleModule,\n  IconModule,\n  TooltipModule,\n  InputInlineEditModule,\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TimePickerModule, ...uiModules],\n  providers: [\n    ActionsFormBuilderService,\n    ActionsNotificationsSettingsDataService,\n    ActionsNotificationsPreferencesDataService,\n  ],\n  declarations: [...components, ...directives, ...pipes],\n  exports: [...components, ...uiModules, ...directives, ...pipes, TimePickerModule],\n})\nexport class ActionsCommonModule {}\n","import { ActionRecipe, ActionRecipeSpecification, BatchProcessingPutResponseBody } from '@backbase/actions-http-ang';\nimport { Observable } from 'rxjs';\nimport { ActionRecipeFormItemValue } from '../models/action-recipes-form-value.model';\n\nexport abstract class NotificationsPreferencesBaseDataService {\n  abstract getActionRecipes(arrangementId?: string): Observable<ActionRecipe[]>;\n  abstract getSpecifications(): Observable<ActionRecipeSpecification[]>;\n  abstract saveActionRecipe(\n    actionRecipeFormItem: ActionRecipeFormItemValue,\n    arrangementId?: string,\n  ): Observable<BatchProcessingPutResponseBody>;\n}\n","import { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const getPropertyValue = <T>(input: Observable<T | undefined>, prop: Observable<T>): Observable<T> =>\n  combineLatest([input, prop]).pipe(map(([inputVal, propVal]) => (inputVal !== undefined ? inputVal : propVal)));\n","export enum SpecificationIds {\n  Transactions = '1',\n  AccountBalance = '4',\n  Payments = '5',\n  Contacts = '6',\n  PaymentsToApprove = '13',\n  ContactsToApprove = '14',\n}\n","import { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { secondsToMilliseconds } from '../helpers/mappers';\n\nexport const DEFAULT_NOTIFICATION_DISMISS_TIME = 5;\nexport const DEFAULT_SPECIFICATION_IDS = '5, 6, 13, 14';\nexport const DEFAULT_API_MODE = 'actions';\n\nexport type ApiMode = 'actions' | 'engagements';\n\nexport abstract class ActionsBasePropertiesService {\n  /**\n   * Method to get notification dismiss time preference value.\n   *\n   * @returns notification dismiss time in seconds\n   */\n  getNotificationDismissTimeProperty(): Observable<number> {\n    return of(DEFAULT_NOTIFICATION_DISMISS_TIME).pipe(map(secondsToMilliseconds));\n  }\n\n  /**\n   * Method to get specification IDs.\n   *\n   * @returns specification IDs array\n   */\n  getSpecificationIDs(): Observable<string[]> {\n    return of(DEFAULT_SPECIFICATION_IDS).pipe(map(data => data.replace(/\\s/g, '').split(',')));\n  }\n\n  getApiMode(): ApiMode {\n    return DEFAULT_API_MODE;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}