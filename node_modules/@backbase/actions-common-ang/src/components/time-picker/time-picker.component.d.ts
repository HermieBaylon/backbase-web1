import { OnDestroy, OnInit } from '@angular/core';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import { MinutesStep, TimeOption } from '../../models/schedule-notifications.model';
import * as i0 from "@angular/core";
export declare class TimePickerComponent implements OnInit, OnDestroy, ControlValueAccessor {
    timeOptions: TimeOption[];
    private readonly excludedOptions$$;
    private readonly componentDestroyed$;
    /**
     * Start time
     */
    startTime: number;
    /**
     * Step on minutes for time options
     */
    minutesStep: MinutesStep;
    /**
     * Time format
     */
    amPmFormat: false;
    /**
     * Options to exclude
     */
    set excludedOptions(options: number[]);
    /**
     * Form control reference
     */
    controlRef: FormControl;
    /**
     * Input's label
     */
    label: string | undefined;
    /**
     * Time form control
     */
    readonly timeControl: FormControl;
    ngOnInit(): void;
    private onExcludedOptionsChange;
    private onFormValueChange;
    /**
     * Change event handler
     */
    onChange: (_time: number) => void;
    /**
     * Touched event handler
     */
    onTouched: () => void;
    /**
     * Method to register change event handler
     *
     * @param fn
     */
    registerOnChange(fn: any): void;
    /**
     * Method to register touched event handler
     *
     * @param fn
     */
    registerOnTouched(fn: any): void;
    /**
     * Method to write initial value to the input
     *
     * @param time
     */
    writeValue(time: number): void;
    markAsTouched(event: Event): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TimePickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TimePickerComponent, "bb-time-picker", never, { "startTime": "startTime"; "minutesStep": "minutesStep"; "amPmFormat": "amPmFormat"; "excludedOptions": "excludedOptions"; "controlRef": "controlRef"; "label": "label"; }, {}, never, never>;
}
