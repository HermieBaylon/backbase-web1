import { ControlValueAccessor } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class SwitchWithLoadingComponent implements ControlValueAccessor {
    /**
     * Loading indicator presentation marker.
     */
    isLoading: boolean;
    /**
     * aria-label attribute text.
     */
    ariaLabel?: string;
    private _value;
    /**
     * ControlValueAccessor on change handler.
     */
    onChange: Function;
    /**
     * ControlValueAccessor on touch handler.
     */
    onTouch: Function;
    /**
     * ControlValueAccessor value setter.
     */
    set value(val: boolean);
    /**
     * ControlValueAccessor value getter.
     */
    get value(): boolean;
    /**
     * Method from ControlValueAccessor to write a new value to the element.
     *
     * @param value - new value
     */
    writeValue(value: boolean): void;
    /**
     * Method from ControlValueAccessor to register on change handler.
     *
     * @param fn - on change handler function
     */
    registerOnChange(fn: Function): void;
    /**
     * Method from ControlValueAccessor to register on touched handler.
     *
     * @param fn - on touched handler function
     */
    registerOnTouched(fn: Function): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SwitchWithLoadingComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SwitchWithLoadingComponent, "bb-switch-with-loading", never, { "isLoading": "isLoading"; "ariaLabel": "aria-label"; }, {}, never, never>;
}
