import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { FormArray, FormBuilder, FormGroup } from '@angular/forms';
import { ActionRecipeGetResponseBody } from '@backbase/actions-http-ang';
import { BbTemplate } from '@backbase/foundation-ang/core';
import { Observable } from 'rxjs';
import { MinutesStep, ScheduleType } from '../../models/schedule-notifications.model';
import * as i0 from "@angular/core";
export declare class ActionsScheduleNotificationsComponent implements OnInit, OnDestroy {
    private readonly fb;
    /**
     * Selected schedule type
     */
    scheduleType: ScheduleType;
    /**
     * Schedule type enum
     */
    readonly ScheduleType: typeof ScheduleType;
    /**
     * Maximum options quantity
     */
    readonly MaxOptionsQuantity = 4;
    /**
     * Stream of selected options
     */
    selectedTimeOptions$: Observable<number[]>;
    selectedTimeOptions: number[];
    private readonly destroy$;
    /**
     * Action recipe.
     */
    actionRecipe: ActionRecipeGetResponseBody;
    /**
     * Schedule form group.
     */
    scheduleForm: FormGroup;
    /**
     * Minutes step in time options list.
     */
    minutesStep: MinutesStep;
    /**
     * Schedule form submit output.
     */
    readonly submit: EventEmitter<FormGroup>;
    constructor(fb: FormBuilder);
    ngOnInit(): void;
    onScheduleTypeChange(event: Event): void;
    addTimeOption(): void;
    deleteTimeOption(index: number): void;
    timeControlChange(): void;
    private onScheduleFormChange;
    private submitScheduleForm;
    private getScheduleType;
    private resetScheduleForm;
    /**
     * Getter for repeat count control
     */
    get scheduleTime(): FormArray;
    /**
     * Getter for default time which returns 08:00 for the first option and +1 hour for subsequent
     */
    private get defaultTime();
    /**
     * Getter for last added time option
     */
    private get lastSelectedTimeOption();
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsScheduleNotificationsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ActionsScheduleNotificationsComponent, "bb-actions-schedule-notifications", never, { "actionRecipe": "actionRecipe"; "scheduleForm": "scheduleForm"; "minutesStep": "minutesStep"; }, { "submit": "submit"; }, never, never>;
}
export declare class ActionsScheduleNotificationsComponentCustomizableDirective extends BbTemplate<ActionsScheduleNotificationsComponent, void> {
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionsScheduleNotificationsComponentCustomizableDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ActionsScheduleNotificationsComponentCustomizableDirective, "[bbActionsScheduleNotificationsComponentCustomizableDirective]", never, {}, {}, never>;
}
