{"version":3,"file":"backbase-payments-collection-ui-ang.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/constants/initiate-payment.const.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/helpers/payment-options-mappers.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/services/create-payment-config-setup.service.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/services/create-payment-fields-setup.service.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/constants/initiate-payment.i18n.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/services/create-payment.service.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/create-payment-form/create-payment-form.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/create-payment-form/create-payment-form.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/create-payment-form/create-payment-form.module.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/models/create-payment.model.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/initiator-details/initiator-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/initiator-details/initiator-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/creditor-account/creditor-account.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/creditor-account/creditor-account.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/remittance-details/remittance-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/remittance-details/remittance-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/creditor-details/creditor-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/creditor-details/creditor-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/counterparty-details/counterparty-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/counterparty-details/counterparty-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/schedule-details/schedule-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/schedule-details/schedule-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/adapted-review-container/adapted-review.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/adapted-review-container/adapted-review.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/review-payment-details/review-payment.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/review-payment-details/review-payment.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/review-payment-details/review-payment.module.ts","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/components/header-dropdown/header-dropdown.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/components/header-dropdown/header-dropdown.component.html","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/payments-header.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/payments-header.component.html","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/payments-header.module.ts","../../../../libs/payments-collection-ui-ang/src/backbase-payments-collection-ui-ang.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import {\n  CounterPartyFields,\n  defaultInitiatorConfig,\n  PaymentBaseFields,\n  PaymentComponents,\n  PaymentFormGroup,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { Validators } from '@angular/forms';\n\nconst counterPartyConfig: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.beneficiary-header-title:To`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.beneficiary-selector-label:Beneficiary's name`,\n        placeholder: $localize`:@@initiate-payment-base-fields.beneficiary-selector-placeholder:Select a beneficiary`,\n        saveNewContactLabel: $localize`:@@initiate-payment-base-fields.beneficiary-selector-new-contact-label:Save as a new contact`,\n        isWizardMode: true,\n        retainBankCountry: true,\n        cssClasses: ['col-12'],\n        dependants: [\n          CounterPartyFields.country,\n          CounterPartyFields.bankBranchCode,\n          CounterPartyFields.accountNumber,\n        ],\n        validationMessages: [\n          {\n            message: $localize`:@@initiate-payment-base-fields.same-accounts-error:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.country,\n      type: PaymentComponents.sanctionedCountrySelector,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@initiate-payment-base-fields.country.label:Country`,\n        placeholder: $localize`:@@initiate-payment-base-fields.country-placeholder:- select a country -`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`,\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required, Validators.minLength(6)],\n        maxLength: 36,\n        label: $localize`:@@initiate-payment-base-fields.acc-no-label:Account number or IBAN`,\n        validationMessages: [\n          {\n            name: 'minlength',\n            message: $localize`:@@initiate-payment-base-fields.acc-no-min-length-error:Account number should have minimum 6 characters`,\n          },\n          {\n            message: $localize`:@@initiate-payment-base-fields.iban-country-error-message:Invalid IBAN`,\n            name: 'invalidIbanCountry',\n          },\n        ],\n        cssClasses: ['d-inline-block', 'col-md-6'],\n      },\n    },\n    {\n      name: CounterPartyFields.bankBranchCode,\n      type: PaymentComponents.text,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.bank-branch-code-label:Sort code`,\n        maxLength: 20,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}`,\n      },\n    },\n  ],\n};\n\nexport const BaseFields = [\n  defaultInitiatorConfig,\n  {\n    name: PaymentBaseFields.remittanceInfo,\n    title: $localize`:@@initiate-payment-base-fields.remittance-group-title:Payment details`,\n    fields: [\n      {\n        type: PaymentComponents.sanctionedCurrencyAmount,\n        name: RemittanceInfoFields.amountCurrencyGroup,\n        options: {\n          cssClasses: ['col-12'],\n          label: $localize`:@@initiate-payment-base-fields.amount-title:Amount`,\n          validationMessages: [\n            {\n              message: $localize`:@@initiate-payment-base-fields.amount-error:Enter amount`,\n              name: 'invalidAmount',\n            },\n            {\n              message: $localize`:@@initiate-payment-base-fields.currency-error:Selected country does not allow payments in this currency`,\n              name: 'invalidCurrency',\n            },\n          ],\n        },\n      },\n    ],\n  },\n  counterPartyConfig,\n];\n\nexport const PaymentTypes = {\n  ILE_POSTFIX: '_ILE',\n  CLOSED_POSTFIX: '_CLOSED',\n  SEPA_PREFIX: 'SEPA_CT',\n  SEPA: 'SEPA_CREDIT_TRANSFER',\n};\n","import {\n  PaymentOptionsRequest,\n  SchemeName,\n} from '@backbase/data-ang/payment-order-options';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { PaymentTypes } from '../constants/initiate-payment.const';\nimport { FormGroup } from '@angular/forms';\nimport {\n  CounterPartyFields,\n  getConfig,\n  getCounterpartySchemeName,\n  isAddressTruthy,\n  PaymentBaseFields,\n  PaymentDetails,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n  stripSpaces,\n} from '@backbase/payment-orders-ang';\n\nexport const mapPaymentOptionRequest = (\n  formItem: PaymentDetails,\n  clientServiceAgreementID = '',\n  clientJurisdiction = ''\n): PaymentOptionsRequest => {\n  const { creditorBank } = formItem.counterparty;\n  const counterpartyCountry =\n    creditorBank &&\n    creditorBank.postalAddress &&\n    creditorBank.postalAddress.country;\n  const bankBranchCode = creditorBank && creditorBank.bankBranchCode;\n  const creditorScheme = getCounterpartySchemeName(formItem);\n  return {\n    ...(clientServiceAgreementID ? { clientServiceAgreementID } : null),\n    ...(clientJurisdiction ? { clientJurisdiction } : null),\n    originatorAccount: {\n      identification: formItem.initiator.id,\n      schemeName: SchemeName.ID,\n    },\n    counterpartyAccount: {\n      ...(bankBranchCode ? { bankBranchCode } : null),\n      identification:\n        creditorScheme === SchemeName.ID\n          ? stripSpaces(formItem.counterparty.id)\n          : stripSpaces(formItem.counterparty.accountNumber),\n      schemeName: <SchemeName>creditorScheme,\n    },\n    requestedExecutionDate: new Date().toISOString().substring(0, 10),\n    instructedAmount: {\n      amount: formItem.remittanceInfo.amountGroup.amount,\n      currencyCode: formItem.remittanceInfo.amountGroup.currency,\n    },\n    ...(counterpartyCountry ? { counterpartyCountry } : null),\n    additions: formItem.additions,\n  };\n};\n\nexport function normalizePaymentType(\n  selectedPaymentItem: PaymentTemplate | undefined\n): string | undefined {\n  let _selectedPayment = selectedPaymentItem?.details.paymentType;\n  if (\n    _selectedPayment ===\n      `${PaymentTypes.SEPA_PREFIX}${PaymentTypes.CLOSED_POSTFIX}` ||\n    _selectedPayment ===\n      `${PaymentTypes.SEPA_PREFIX}${PaymentTypes.ILE_POSTFIX}`\n  ) {\n    _selectedPayment = _selectedPayment.replace(\n      PaymentTypes.SEPA_PREFIX,\n      PaymentTypes.SEPA\n    );\n  }\n  let replacedPayment;\n  if (_selectedPayment) {\n    if (_selectedPayment.endsWith(PaymentTypes.ILE_POSTFIX)) {\n      replacedPayment = _selectedPayment.replace(PaymentTypes.ILE_POSTFIX, '');\n    } else if (_selectedPayment.endsWith(PaymentTypes.CLOSED_POSTFIX)) {\n      replacedPayment = _selectedPayment.replace(\n        PaymentTypes.CLOSED_POSTFIX,\n        ''\n      );\n    } else {\n      replacedPayment = _selectedPayment;\n    }\n  }\n\n  return replacedPayment;\n}\n\nexport function normalisePaymentTemplate(paymentTemplate: PaymentTemplate) {\n  return {\n    ...paymentTemplate,\n    details: {\n      ...paymentTemplate.details,\n      paymentType: normalizePaymentType(paymentTemplate),\n    },\n  };\n}\n\n/**\n * Reset beneficiary address if the form contains address details but the selected config does not contain address config.\n */\nexport function resetBeneficiaryAddress(\n  paymentTypeConfig: PaymentTypeConfig,\n  form: FormGroup\n) {\n  const counterPartyConfig = getConfig(\n    PaymentBaseFields.counterparty,\n    paymentTypeConfig\n  ) as PaymentFormGroup;\n  const beneficiaryAddress = getConfig(\n    CounterPartyFields.postalAddress,\n    counterPartyConfig\n  );\n  const beneficiaryAddressGroup = form.get([\n    PaymentBaseFields.counterparty,\n    CounterPartyFields.postalAddress,\n  ]);\n  if (\n    !beneficiaryAddress &&\n    beneficiaryAddressGroup &&\n    isAddressTruthy(beneficiaryAddressGroup.value)\n  ) {\n    beneficiaryAddressGroup.reset();\n  }\n}\n\n/**\n * Reset bank details if the form contains bank details but the selected config does not contain specific bank detail config.\n */\nexport function resetBankDetails(\n  paymentTypeConfig: PaymentTypeConfig,\n  form: FormGroup\n) {\n  const counterPartyConfig = getConfig(\n    PaymentBaseFields.counterparty,\n    paymentTypeConfig\n  ) as PaymentFormGroup;\n  const beneficiaryBankConfig = getConfig(\n    CounterPartyFields.creditorBank,\n    counterPartyConfig\n  ) as PaymentFormGroup;\n  const beneficiaryBankAddress = beneficiaryBankConfig\n    ? getConfig(CounterPartyFields.postalAddress, beneficiaryBankConfig)\n    : null;\n  const beneficiaryBankAddressGroup = form.get([\n    PaymentBaseFields.counterparty,\n    CounterPartyFields.creditorBank,\n    CounterPartyFields.postalAddress,\n  ]);\n\n  resetBankField(CounterPartyFields.bic, counterPartyConfig, form);\n  resetBankField(CounterPartyFields.bankName, counterPartyConfig, form);\n\n  if (\n    !beneficiaryBankAddress &&\n    beneficiaryBankAddressGroup &&\n    isAddressTruthy(beneficiaryBankAddressGroup.value)\n  ) {\n    for (const key in (<FormGroup>beneficiaryBankAddressGroup).controls) {\n      if (key !== 'country') {\n        (<FormGroup>beneficiaryBankAddressGroup).controls[key].reset();\n      }\n    }\n  }\n}\n\nexport function resetBankField(\n  fieldName: string,\n  counterpartyConfig: PaymentFormGroup,\n  form: FormGroup\n) {\n  const config = getConfig(fieldName, counterpartyConfig);\n  const control = form.get([\n    PaymentBaseFields.counterparty,\n    CounterPartyFields.creditorBank,\n    fieldName,\n  ]);\n  if (!config && control?.value) {\n    control.reset();\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport {\n  FetchPaymentOptionsListenerFn,\n  InitiatePaymentHeaderStates,\n  InitiatePaymentOptions,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentHooksOptions,\n  PaymentTypeConfig,\n  ReviewTemplateContext,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject } from 'rxjs';\nimport { BaseFields } from '../constants/initiate-payment.const';\n\n@Injectable()\nexport class CreatePaymentConfigSetupService {\n  private readonly configsSub$ = new BehaviorSubject<PaymentTypeConfig[]>([]);\n  private readonly optionsSub$ = new BehaviorSubject<InitiatePaymentOptions>(\n    {}\n  );\n  private readonly baseFieldsSub$ = new BehaviorSubject<\n    Array<PaymentFormFieldConfig | PaymentFormGroup>\n  >([]);\n  private readonly fetchPaymentOptionsListenerSub$ = new BehaviorSubject<\n    FetchPaymentOptionsListenerFn | undefined\n  >(undefined);\n  private readonly hooksSub$ = new BehaviorSubject<PaymentHooksOptions>({});\n  private readonly reviewTemplateSub$ = new BehaviorSubject<\n    TemplateRef<ReviewTemplateContext> | undefined\n  >(undefined);\n\n  readonly configs$ = this.configsSub$.asObservable();\n  readonly options$ = this.optionsSub$.asObservable();\n  readonly baseFields$ = this.baseFieldsSub$.asObservable();\n  readonly fetchPaymentOptionsListener$ =\n    this.fetchPaymentOptionsListenerSub$.asObservable();\n  readonly reviewTemplate$ = this.reviewTemplateSub$.asObservable();\n\n  get hooks(): PaymentHooksOptions {\n    return this.hooksSub$.value;\n  }\n\n  get options(): InitiatePaymentOptions {\n    return this.optionsSub$.value;\n  }\n\n  get configs(): PaymentTypeConfig[] {\n    return this.configsSub$.value;\n  }\n\n  setHooks(hooks: PaymentHooksOptions = {}) {\n    this.hooksSub$.next(hooks);\n  }\n\n  setConfigs(configs: PaymentTypeConfig[]) {\n    this.configsSub$.next(configs);\n  }\n\n  setOptions(options: InitiatePaymentOptions) {\n    this.optionsSub$.next(options);\n  }\n\n  setBaseFields(\n    baseFields: Array<PaymentFormFieldConfig | PaymentFormGroup> = BaseFields\n  ) {\n    this.baseFieldsSub$.next(baseFields);\n  }\n\n  setFetchPaymentOptionsListener(listenerFn?: FetchPaymentOptionsListenerFn) {\n    this.fetchPaymentOptionsListenerSub$.next(listenerFn);\n  }\n\n  setReviewTemplate(templateRef: TemplateRef<ReviewTemplateContext>) {\n    this.reviewTemplateSub$.next(templateRef);\n  }\n\n  getHeader(state: InitiatePaymentHeaderStates): string | undefined {\n    const paymentType =\n      this.configs.length === 1 ? this.configs[0].paymentType : '';\n    const data = {\n      paymentMode: this.options?.paymentMode,\n      state,\n      paymentType,\n      isDebit: this.options.isDebitPayment,\n    };\n    return this.options.header?.(data);\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  accMap,\n  BeneficiaryData,\n  BeneficiaryList,\n  FetchCreditorItemsParams,\n  handleCurrenciesList,\n  InitiatorFields,\n  mapArrangementList,\n  mapConnectedAccounts,\n  PaymentComponents,\n  InitiatePaymentOptions,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormGroup,\n  PaymentOption,\n  PaymentOptionsService,\n  PaymentOrderHttpService,\n  PaymentTypeConfig,\n  PaymentTypeOptions,\n  ScheduleFields,\n  shouldLoadTabContent,\n  ContactsAndArrangementsGetParams,\n  PaymentMode,\n  CounterPartyFields,\n  OutputItem,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  shareReplay,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { RateGet } from '@backbase/data-ang/payment-order';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { CreatePaymentConfigSetupService } from './create-payment-config-setup.service';\nimport {\n  ArrangementItem,\n  ArrangementList,\n  ContactList,\n  ExternalAccountFormItem,\n  InternalAccountFormItem,\n} from '@backbase/payment-orders-ang';\n\n@Injectable()\nexport class CreatePaymentFieldsSetupService implements OnDestroy {\n  private readonly destroyed$ = new Subject<void>();\n  private readonly fetchDebitItemPermissions$ = new Subject<string>();\n  private readonly fetchBeneficiaries$ =\n    new Subject<FetchCreditorItemsParams>();\n\n  private readonly paymentOptionsSub$ = new BehaviorSubject<PaymentOption[]>(\n    []\n  );\n  private readonly paymentOptionsErrorSub$ = new BehaviorSubject<boolean>(\n    false\n  );\n\n  private readonly exchangeRate$ = new Subject<number>();\n  private readonly getExchangeRate$ = new Subject<{\n    fromCurrency: string;\n    toCurrency: string;\n  }>();\n  private readonly exchangeRateError$ = new Subject<boolean>();\n  private readonly frequencyFieldSub$ = new Subject<PaymentFormFieldConfig>();\n\n  private readonly countries$ = this.loadSanctionedCountries();\n  private readonly currencies$ = this.loadSanctionedCurrencies();\n\n  private get debitAccounts$(): Observable<Array<OutputItem>> {\n    return this.paymentOrderHttpService\n      .getDebitAccounts({ size: this.options.pageSize })\n      .pipe(accMap(this.options.defaultScheme));\n  }\n\n  private get creditAccountList$() {\n    return this.paymentOrderHttpService\n      .getCreditAccounts({ size: this.options.pageSize })\n      .pipe(\n        map((arrangements) => ({\n          items: mapArrangementList(\n            arrangements as ArrangementList,\n            this.options.defaultScheme\n          ),\n          count: (arrangements as ArrangementList).count,\n        }))\n      );\n  }\n\n  private readonly fetchDebitAccounts$ =\n    new Subject<ContactsAndArrangementsGetParams>();\n  private readonly fetchCreditAccounts$ =\n    new Subject<ContactsAndArrangementsGetParams>();\n\n  private readonly connectedAccounts$ =\n    this.paymentOrderHttpService.connectedAccounts$.pipe(\n      map((accounts) => accounts?.map(mapConnectedAccounts))\n    );\n\n  private totalContacts = 0; // x-total-count from response header\n  private totalCreditAccounts = 0;\n  private totalContactsItemsCount = 0; // total count of items in response before extracting sub accounts\n  private checkClosedPaymentsAccess = false;\n\n  private contacts$!: Observable<ExternalAccountFormItem[] | HttpErrorResponse>;\n  private creditAccounts$!: Observable<\n    InternalAccountFormItem[] | HttpErrorResponse\n  >;\n\n  readonly paymentOptions$ = this.paymentOptionsSub$.asObservable();\n  readonly paymentOptionsError$ = this.paymentOptionsErrorSub$.asObservable();\n  readonly frequencyField$ = this.frequencyFieldSub$.asObservable();\n\n  get options(): InitiatePaymentOptions {\n    return this.createPaymentSetup.options;\n  }\n\n  get configs(): PaymentTypeConfig[] {\n    return this.createPaymentSetup.configs;\n  }\n\n  constructor(\n    private readonly createPaymentSetup: CreatePaymentConfigSetupService,\n    private readonly paymentOptionsService: PaymentOptionsService,\n    private readonly paymentOrderHttpService: PaymentOrderHttpService\n  ) {\n    this.fetchDebitItemPermissions$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((dataItemId) => {\n        this.paymentOrderHttpService.loadDataItemPermissions(dataItemId);\n      });\n\n    this.fetchBeneficiaries$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(({ params, type }: FetchCreditorItemsParams) => {\n        this.paymentOrderHttpService.fetchBeneficiaries(\n          { ...params, size: this.options.pageSize },\n          type\n        );\n      });\n\n    this.getExchangeRate$\n      .pipe(\n        filter(({ fromCurrency, toCurrency }) => {\n          const isExchangeValid = fromCurrency !== toCurrency;\n          if (!isExchangeValid) {\n            // If fromCurrency and toCurrency are same, don't fetch exchange rate\n            this.exchangeRate$.next(0);\n          }\n          return isExchangeValid;\n        }),\n        switchMap(({ fromCurrency, toCurrency }) =>\n          this.paymentOrderHttpService.getCurrencyExchangeRate(\n            fromCurrency,\n            toCurrency\n          )\n        ),\n        tap((exchangeRate: RateGet | null) => {\n          this.exchangeRateError$.next(!exchangeRate);\n          this.exchangeRate$.next(exchangeRate?.rate || 0);\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n\n    this.fetchDebitAccounts$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((params) => {\n        this.paymentOrderHttpService.loadMoreDebitAccounts({\n          ...params,\n          merge: true,\n          size: this.options.pageSize,\n        });\n      });\n\n    this.fetchCreditAccounts$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(({ from, ...params }) => {\n        this.paymentOrderHttpService.loadMoreCreditAccounts(from, {\n          ...params,\n          merge: true,\n          size: this.options.pageSize,\n        });\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n  }\n\n  private loadSanctionedCountries() {\n    return this.paymentOptionsService\n      .getSanctionedCountries(this.options?.defaultCountry)\n      .pipe(\n        shareReplay(1),\n        catchError((_) => {\n          this.paymentOrderHttpService.showNotification(false, {\n            header: $localize`:omni-payment-get-countries-failed:Failed to load countries list. Please try again later.`,\n          });\n          return of([]);\n        })\n      );\n  }\n\n  private loadSanctionedCurrencies(): Observable<{\n    currencies?: Array<string>;\n    dividerIndex?: number;\n  }> {\n    return this.paymentOptionsService\n      .getSanctionedCurrencies(this.options?.defaultCountry)\n      .pipe(\n        map((response) => {\n          const result: { currencies?: Array<string>; dividerIndex?: number } =\n            {};\n          if ('labeled' in response) {\n            const { currencies, dividerIndex } = handleCurrenciesList(response);\n\n            result.currencies = currencies;\n            result.dividerIndex = dividerIndex;\n          }\n          return result;\n        }),\n        shareReplay(1),\n        catchError((err) => {\n          this.paymentOrderHttpService.showNotification(false, {\n            header: $localize`:@omni-payment-get-countries-failed:Failed to load currencies list. Please try again later.`,\n          });\n          return of(err);\n        })\n      );\n  }\n\n  private loadAccountByAccountId(\n    id: string,\n    accountNumber: string\n  ): Observable<InternalAccountFormItem | undefined> {\n    return this.paymentOrderHttpService\n      .getAccountByAccountId(id, accountNumber)\n      .pipe(\n        map(\n          (item: ArrangementItem): ArrangementList => ({\n            count: 1,\n            items: [item as ArrangementItem],\n          })\n        ),\n        accMap(this.options.defaultScheme),\n        map(\n          (list: Array<InternalAccountFormItem>): InternalAccountFormItem =>\n            list[0]\n        ),\n        catchError(() => of(undefined))\n      );\n  }\n\n  private getContacts(): Observable<\n    ExternalAccountFormItem[] | HttpErrorResponse\n  > {\n    return this.paymentOrderHttpService\n      .getContacts({ size: this.options.pageSize, query: '' })\n      .pipe(\n        tap((data: ContactList | HttpErrorResponse) => {\n          if (!(data instanceof HttpErrorResponse)) {\n            this.totalContacts = data.count;\n            this.totalContactsItemsCount =\n              data.itemsCount && data.isLoadMore\n                ? this.totalContactsItemsCount + data.itemsCount\n                : data.itemsCount || 0;\n          } else {\n            this.totalContacts = 0;\n          }\n        }),\n        map((value: ContactList | HttpErrorResponse) =>\n          !(value instanceof HttpErrorResponse) ? value.items : value\n        )\n      );\n  }\n\n  private getCreditAccounts(): Observable<\n    InternalAccountFormItem[] | HttpErrorResponse\n  > {\n    return this.paymentOrderHttpService\n      .getCreditAccounts({ size: this.options.pageSize, searchTerm: '' })\n      .pipe(\n        tap((data: ArrangementList | HttpErrorResponse) => {\n          this.totalCreditAccounts = !(data instanceof HttpErrorResponse)\n            ? data.count\n            : 0;\n        }),\n        map((value) =>\n          !(value instanceof HttpErrorResponse)\n            ? mapArrangementList(value, this.options.defaultScheme)\n            : value\n        )\n      );\n  }\n\n  private getDebitAccounts(): Observable<ArrangementList> {\n    return this.paymentOrderHttpService\n      .getDebitAccounts({ size: this.options.pageSize, searchTerm: '' })\n      .pipe(\n        map((arrangements) => ({\n          items: mapArrangementList(arrangements, this.options.defaultScheme),\n          count: arrangements.count,\n        }))\n      );\n  }\n\n  private loadCreditorDetails(\n    options: PaymentFormFieldOptions\n  ): Observable<BeneficiaryData> {\n    this.contacts$ = shouldLoadTabContent(BeneficiaryList.CONTACTS, options)\n      ? this.getContacts()\n      : of([]);\n    this.creditAccounts$ = shouldLoadTabContent(\n      BeneficiaryList.ACCOUNTS,\n      options\n    )\n      ? this.getCreditAccounts()\n      : of([]);\n\n    return combineLatest([this.creditAccounts$, this.contacts$]).pipe(\n      map(([accounts, contacts]) => ({\n        accounts,\n        contacts,\n        totalCreditAccounts: this.totalCreditAccounts,\n        totalContacts: this.totalContacts,\n        totalContactsItemsCount: this.totalContactsItemsCount,\n      }))\n    );\n  }\n\n  setPaymentOptions(options: PaymentOption[]) {\n    this.paymentOptionsSub$.next(options);\n  }\n\n  setPaymentOptionsError(error: boolean) {\n    this.paymentOptionsErrorSub$.next(error);\n  }\n\n  clearPaymentOptions() {\n    this.paymentOptionsService.resetPaymentOptions();\n    this.setPaymentOptionsError(false);\n  }\n\n  injectData(\n    fields: Array<PaymentFormGroup | PaymentFormFieldConfig>,\n    paymentTypeOptions?: PaymentTypeOptions\n  ) {\n    fields.forEach((field) => {\n      field.options = field.options || {};\n      field.options.isTemplateMode = this.options.isTemplateMode;\n      field.options.templateModeType = this.options.templateModeType;\n      field.options.isModalView = this.options.isModalView;\n      field.options.checkClosedPaymentsAccess =\n        this.options.checkClosedPaymentsAccess ??\n        this.checkClosedPaymentsAccess;\n      field.options.isWizardMode = this.configs?.length > 1;\n\n      if ((<PaymentFormGroup>field).fields instanceof Array) {\n        this.injectData((<PaymentFormGroup>field).fields, paymentTypeOptions);\n      } else {\n        switch ((field as PaymentFormFieldConfig).type) {\n          case PaymentComponents.debitAccountSelector:\n            field.options.items$ = this.getDebitAccounts();\n            field.options.fetchItems$ = this.fetchDebitAccounts$;\n            field.options.loadAccountByAccountId =\n              this.loadAccountByAccountId.bind(this);\n            field.options.fetchArrangementPermissions$ =\n              this.fetchDebitItemPermissions$;\n            field.options.arrangementPermissions$ =\n              this.paymentOrderHttpService.arrangementUserPermissions$;\n            field.options.checkClosedPaymentsAccess =\n              this.options.checkClosedPaymentsAccess;\n            break;\n          case PaymentComponents.beneficiarySelector:\n            field.options.items$ = this.loadCreditorDetails(field.options);\n            field.options.fetchItems$ = this.fetchBeneficiaries$;\n            break;\n          case PaymentComponents.internalAccountSelector:\n            field.options.paymentTypeOptions = paymentTypeOptions;\n            field.options.connectedItems$ = this.connectedAccounts$;\n            field.options.items$ =\n              field.name === InitiatorFields.initiatorAccountGroup\n                ? this.debitAccounts$\n                : this.getCreditAccounts();\n            break;\n          case PaymentComponents.accountSelector:\n            field.options.paymentTypeOptions = paymentTypeOptions;\n            field.options.connectedItems$ = this.connectedAccounts$;\n            if (\n              field.name === CounterPartyFields.counterPartyAccountGroup ||\n              this.options.isDebitPayment\n            ) {\n              field.options.fetchItems$ = this.fetchCreditAccounts$;\n              field.options.items$ = this.creditAccountList$;\n            } else {\n              field.options.items$ = this.getDebitAccounts();\n              field.options.fetchItems$ = this.fetchDebitAccounts$;\n            }\n            break;\n          case PaymentComponents.contactSelector:\n            field.options.items$ = this.getContacts();\n            field.options.fetchItems$ = this.fetchBeneficiaries$;\n            break;\n          case PaymentComponents.selectPaymentOption:\n            field.options.items$ = this.paymentOptions$;\n            break;\n          case PaymentComponents.sanctionedCountrySelector:\n          case PaymentComponents.address:\n            field.options.items$ = this.countries$;\n            break;\n          case PaymentComponents.sanctionedCurrencyAmount:\n            field.options.items$ = this.currencies$;\n            field.options.getExchangeRate$ = this.getExchangeRate$;\n            field.options.exchangeRate$ = this.exchangeRate$;\n            field.options.exchangeRateError$ = this.exchangeRateError$;\n            break;\n          case PaymentComponents.select:\n            if (\n              field.name === ScheduleFields.frequency &&\n              this.options?.paymentMode === PaymentMode.EDIT_PAYMENT\n            ) {\n              this.frequencyFieldSub$.next(field as PaymentFormFieldConfig);\n            }\n            break;\n        }\n      }\n    });\n  }\n}\n","/* eslint-disable max-len */\nexport const formI18n = {\n  unknownErrorHeader: $localize`:@@initiate-payment-unknown-error-header:Server error`,\n  unknownError: $localize`:@@initiate-payment-unknown-error:Unknown error occured.`,\n  validateFailed: $localize`:@@initiate-payment-validate-failed:Payment data error`,\n};\n\nexport const commonI18n = {\n  templateSaveFailed: $localize`:@@initiate-payment-save-template-failed-message:Failed to save the template. Please try again.`,\n  templateSaveSuccess: (templateName: string) =>\n    $localize`:@@initiate-payment-create-payment-template-success-message:Template \"${templateName}\" has been saved`,\n};\n\nexport const reviewI18n = {\n  defaultPayment: {\n    submitSuccess: $localize`:@@initiate-payment-submit-success-notification:Payment submitted successfully`,\n    submitSuccessPendingApproval: $localize`:@@initiate-payment-submit-success-pendingApproval-notification:Payment is submitted successfully, \\\n  and pending further approval(s)`,\n    editSubmitSuccess: $localize`:@@initiate-payment-edit-submit-success-notification:Edited payment submitted successfully`,\n  },\n  debitPayment: {\n    submitSuccess: $localize`:@@initiate-debit-submit-success-notification:Debit request submitted successfully`,\n    submitSuccessPendingApproval: $localize`:@@initiate-debit-submit-success-pendingApproval-notification:Debit request is submitted successfully, and pending further approval(s)`,\n    editSubmitSuccess: $localize`:@@initiate-payment-edit-submit-success-notification:Edited debit request submitted successfully`,\n  },\n  paymentSubmitSuccess: $localize`:@@initiate-payment-submit-success-notification:Payment submitted successfully`,\n  editPaymentSubmitSuccess: $localize`:@@initiate-payment-edit-submit-success-notification:Edited payment submitted successfully`,\n  paymentSubmitSuccessPendingApproval: $localize`:@@initiate-payment-submit-success-pendingApproval-notification:Payment is submitted successfully, \\\n  and pending further approval(s)`,\n  newContactSubmitSuccess: $localize`:@@initiate-payment-newContact-submit-success-notification:Contact saved successfully`,\n  newContactSubmitFailure: $localize`:@@initiate-payment-newContact-submit-failure-notification:Failed to save contact. Please try again later.`,\n  newContactSubmitSuccessPendingApproval: $localize`:@@initiate-payment-newContact-submit-success-pendingApproval-notification:Contact submitted successfully, \\\n  and pending further approval(s)`,\n  submitPaymentFailure: $localize`:@@initiate-payment-submit-failure-notification:Payment data error`,\n  debitSubmitSuccess: $localize`:@@initiate-debit-submit-success-notification:Debit request submitted successfully`,\n  editdebitSubmitSuccess: $localize`:@@initiate-payment-edit-submit-success-notification:Edited debit request submitted successfully`,\n  debitSubmitSuccessPendingApproval: $localize`:@@initiate-debit-submit-success-pendingApproval-notification:Debit request is submitted successfully, and pending further approval(s)`,\n  submitDebitFailure: $localize`:@@initiate-debit-submit-failure-notification:Debit request data error`,\n  submitPaymentFailureUnknownError: $localize`:@@initiate-payment-submit-unknown-failure-notification:Unknown error occurred.`,\n  submitPaymentFailureUnknownErrorHeader: $localize`:@@initiate-payment-submit-unknown-failure-header-notification:Server error`,\n  submitPaymentApprovalFailureCOED: {\n    header: $localize`:@@edited-payment-submit-ts-failure-header-notification:Payment not submitted`,\n    message: $localize`:@@edited-payment-submit-ts-failure-message-notification:Payment is already edited by another user`,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  mapPaymentOptions,\n  PaymentDetails,\n  PaymentOption,\n  PaymentOptionsService,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { PaymentOption as PaymentOptionResponse } from '@backbase/data-ang/payment-order-options';\nimport { FormGroup } from '@angular/forms';\nimport {\n  resetBankDetails,\n  resetBeneficiaryAddress,\n} from '../helpers/payment-options-mappers';\nimport { CriticalFormValues } from '../models/create-payment.model';\n\n@Injectable()\nexport class CreatePaymentService {\n  private readonly selectedPaymentOptionSub$ = new BehaviorSubject<\n    PaymentOption | undefined\n  >(undefined);\n  private readonly selectedPaymentConfigSub$ = new BehaviorSubject<\n    PaymentTypeConfig | undefined\n  >(undefined);\n\n  selectedPaymentOption$ = this.selectedPaymentOptionSub$\n    .asObservable()\n    .pipe(distinctUntilChanged());\n  selectedPaymentConfig$ = this.selectedPaymentConfigSub$\n    .asObservable()\n    .pipe(distinctUntilChanged());\n\n  get selectedPaymentConfigValue(): PaymentTypeConfig | undefined {\n    return this.selectedPaymentConfigSub$.value;\n  }\n\n  static getCriticalFieldValues(\n    formValue: Partial<PaymentDetails> | null\n  ): CriticalFormValues {\n    const { initiator, counterparty, remittanceInfo } = formValue || {};\n    return {\n      debitAccountNumber: initiator?.accountNumber,\n      creditAccountNumber: counterparty?.accountNumber,\n      amount: remittanceInfo?.amountGroup,\n      country: counterparty?.creditorBank?.postalAddress?.country,\n    };\n  }\n\n  constructor(private readonly paymentOptionsService: PaymentOptionsService) {}\n\n  selectPaymentConfig(config?: PaymentTypeConfig) {\n    this.selectedPaymentConfigSub$.next(config);\n  }\n\n  selectPaymentOption(paymentOption?: PaymentOption) {\n    this.selectedPaymentOptionSub$.next(paymentOption);\n  }\n\n  getPaymentOptionsRequest(\n    configs: PaymentTypeConfig[]\n  ): Observable<PaymentOption[] | undefined> {\n    let optionsReq;\n\n    if (configs.length === 1) {\n      const config = configs[0];\n\n      // TODO: find a better solution for this\n      if (config.paymentType !== 'INTERNATIONAL_TRANSFER') {\n        return EMPTY;\n      }\n\n      optionsReq = this.paymentOptionsService\n        .getPaymentOptionsRecordByPaymentType(config.paymentType)\n        .pipe(\n          map((response: PaymentOptionResponse[]) =>\n            mapPaymentOptions(response, { [config.paymentType]: config.name })\n          )\n        );\n    } else {\n      optionsReq = this.paymentOptionsService.paymentOptions$.pipe(\n        filter((options) => !!options),\n        map((options?: PaymentOptionResponse[]) =>\n          mapPaymentOptions(options || [])\n        )\n      );\n    }\n\n    return optionsReq;\n  }\n\n  resetRedundantFields(paymentTypeConfig: PaymentTypeConfig, form: FormGroup) {\n    resetBeneficiaryAddress(paymentTypeConfig, form);\n    resetBankDetails(paymentTypeConfig, form);\n  }\n}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN,\n  CounterPartyFields,\n  defaultPaymentSuccessEventName,\n  FetchPaymentOptionsListenerFn,\n  HiddenFields,\n  InitiatePaymentHeaderStates,\n  InitiatePaymentOptions,\n  NavigationService,\n  PaymentBaseFields,\n  PaymentError,\n  PaymentErrors,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentHooks,\n  PaymentHooksOptions,\n  PaymentMode,\n  PaymentOption,\n  PaymentOptionsService,\n  PaymentOrderHttpService,\n  PaymentState,\n  PaymentTemplateFields,\n  PaymentTemplatesData,\n  PaymentTypeConfig,\n  PayordPaymentError,\n  removeScheduleFromConfig,\n  RoutableModalService,\n  P2PLimitErrorKeys,\n  setFormDetailsFromResponse,\n  setFormDetailsFromService,\n  setFrequencyOptionsPerConfig,\n  StateService,\n  toPostPaymentTemplate,\n  toPostRequest,\n  triggerPaymentHook,\n  focusErrorElement,\n  BaseObject,\n  RemittanceInfoFields,\n  getConfig,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport {\n  catchError,\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { PaymentOptionsResponse } from '@backbase/data-ang/payment-order-options';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport {\n  isEditFormDirty,\n  registerFormControl,\n} from '@backbase/payord-form-builder-ang';\n\nimport {\n  mapPaymentOptionRequest,\n  normalisePaymentTemplate,\n  normalizePaymentType,\n} from '../../helpers/payment-options-mappers';\nimport { CreatePaymentConfigSetupService } from '../../services/create-payment-config-setup.service';\nimport { CreatePaymentFieldsSetupService } from '../../services/create-payment-fields-setup.service';\nimport { commonI18n, formI18n } from '../../constants/initiate-payment.i18n';\nimport { CreatePaymentService } from '../../services/create-payment.service';\n\n@Component({\n  selector: 'bb-create-payment-form',\n  templateUrl: './create-payment-form.component.html',\n  providers: [CreatePaymentFieldsSetupService],\n})\nexport class CreatePaymentFormComponent\n  implements OnInit, AfterContentInit, OnDestroy, AfterViewInit\n{\n  private readonly destroyed$ = new Subject<void>();\n\n  private paymentTypes: string | undefined;\n  private paymentTemplate: PaymentTemplate | null = null;\n  private shouldResetPaymentOptions = false;\n  private formValue = this.stateService.formInstance?.value;\n\n  header: string | undefined;\n  readonly paymentTemplateSearch = new FormControl();\n  readonly fetchOptions$ = new Subject<FormGroup>();\n  readonly submitting$ = new BehaviorSubject<boolean>(false);\n  readonly paymentState$ = this.stateService.paymentState$;\n\n  readonly paymentTemplates$: Observable<PaymentTemplatesData> =\n    this.paymentOrderHttpService.paymentTemplates$;\n  readonly loadingTemplates$ = this.paymentOrderHttpService.loading$;\n\n  readonly fetchingPaymentOptions$ = new BehaviorSubject<boolean>(false);\n  readonly paymentOptions$ = this.fieldSetupService.paymentOptions$;\n  readonly paymentOptionsError$ = this.fieldSetupService.paymentOptionsError$;\n\n  readonly selectedPaymentConfig$ =\n    this.createPaymentService.selectedPaymentConfig$;\n  readonly selectedPaymentOption$ =\n    this.createPaymentService.selectedPaymentOption$;\n\n  readonly fetchPaymentOptionsListener$: Observable<\n    FetchPaymentOptionsListenerFn | undefined\n  > = this.createPaymentSetup.fetchPaymentOptionsListener$;\n  readonly baseFields$: Observable<\n    Array<PaymentFormFieldConfig | PaymentFormGroup>\n  > = this.createPaymentSetup.baseFields$.pipe(\n    map((baseFields) => {\n      this.fieldSetupService.injectData(baseFields);\n      return baseFields;\n    })\n  );\n\n  private editedPaymentDetails: IdentifiedPaymentOrder | undefined;\n\n  options: InitiatePaymentOptions = {};\n  configs: PaymentTypeConfig[] = [];\n\n  templateSelectorName?: string;\n  isPaymentCopyControl?: AbstractControl;\n  templateNameControl = this.stateService.formInstance?.get('templateName');\n\n  errors: { key: string; message: string }[] = [];\n  isEditPaymentConfirmationDialogOpen = false;\n  enablePaymentTemplateSelector = true;\n  editPaymentHasNoChanges = false;\n  isErrorTitleDisplayed = true;\n  shouldApplyTemplate = false;\n  genericError?: string;\n  searchValue?: string;\n  showApiError = false;\n  paymentMode = PaymentMode;\n\n  @ViewChild('outlet', { read: ViewContainerRef, static: true })\n  outletRef!: ViewContainerRef;\n  @ViewChild('content', { read: TemplateRef, static: true })\n  contentRef!: TemplateRef<any>;\n\n  @ViewChild('alertContainer') alertContainer?: ElementRef;\n\n  constructor(\n    private readonly paymentOrderHttpService: PaymentOrderHttpService,\n    private readonly paymentOptionsService: PaymentOptionsService,\n    private readonly createPaymentService: CreatePaymentService,\n    private readonly navigationService: NavigationService,\n    private readonly stateService: StateService,\n    private readonly cdRef: ChangeDetectorRef,\n    private readonly createPaymentSetup: CreatePaymentConfigSetupService,\n    private readonly fieldSetupService: CreatePaymentFieldsSetupService,\n    private readonly formEl: ElementRef,\n    @Optional() private readonly modalService: RoutableModalService,\n    @Inject(PUBSUB) private readonly eventBus: Pubsub,\n    @Optional()\n    @Inject(BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN)\n    readonly paymentErrors: PayordPaymentError\n  ) {}\n\n  ngOnInit(): void {\n    combineLatest([\n      this.createPaymentSetup.configs$,\n      this.createPaymentSetup.options$,\n      this.stateService.paymentEditState$,\n    ])\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe(([configs, options, editedPaymentDetails]) => {\n        this.options = options;\n        this.editedPaymentDetails = editedPaymentDetails;\n        this.isErrorTitleDisplayed =\n          options.isErrorTitleDisplayed ?? this.isErrorTitleDisplayed;\n        this.enablePaymentTemplateSelector =\n          options.enablePaymentTemplateSelector ??\n          this.enablePaymentTemplateSelector;\n\n        if (configs.length === 1) {\n          // TODO: find a better solution for this\n          this.setArrangementBusFunctions(\n            configs[0].options?.closedPaymentBusFns,\n            configs[0].businessFunction\n          );\n\n          this.onSelectConfig(configs[0]);\n        }\n        const { isOneOffToRecurrentAllowed, isRecurrentToOneOffAllowed } =\n          options;\n\n        this.configs = configs.map((config) => {\n          let _config = options.isTemplateMode\n            ? removeScheduleFromConfig(config)\n            : config;\n\n          if (editedPaymentDetails) {\n            _config = setFrequencyOptionsPerConfig(\n              config,\n              !!editedPaymentDetails.schedule,\n              {\n                isOneOffToRecurrentAllowed,\n                isRecurrentToOneOffAllowed,\n              }\n            );\n          }\n\n          this.fieldSetupService.injectData(_config.fields, _config.options);\n          return _config;\n        });\n\n        this.setupPaymentTypes(this.configs);\n\n        this.header = this.createPaymentSetup.getHeader(\n          InitiatePaymentHeaderStates.FORM\n        );\n      });\n\n    this.listen();\n\n    if (this.stateService.currentState !== PaymentState.EDIT) {\n      this.fieldSetupService.clearPaymentOptions();\n      this.shouldResetPaymentOptions = true;\n    }\n\n    this.createPaymentService\n      .getPaymentOptionsRequest(this.configs)\n      .pipe(\n        tap(\n          (options) => {\n            if (!this.shouldResetPaymentOptions && !options?.length) {\n              this.fieldSetupService.setPaymentOptionsError(true);\n            }\n            this.shouldResetPaymentOptions = false;\n            this.onPaymentTypeChange(options);\n          },\n          catchError(() => {\n            this.fieldSetupService.setPaymentOptionsError(true);\n            return of([]);\n          })\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n\n    triggerPaymentHook(\n      <PaymentHooksOptions>this.createPaymentSetup.hooks,\n      PaymentHooks.onInit\n    );\n  }\n\n  ngAfterViewInit() {\n    this.stateService.paymentTemplateState$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((template) => {\n        if (template) {\n          this.onSelectPaymentTemplate(template);\n        }\n      });\n\n    if (this.editedPaymentDetails) {\n      this.setEditFormValues(this.editedPaymentDetails);\n      this.stateService.setEditPayment(undefined); // This is to prevent overwrite manual edits on return from review screen\n    }\n  }\n\n  ngAfterContentInit() {\n    this.renderView();\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    triggerPaymentHook(\n      <PaymentHooksOptions>this.createPaymentSetup.hooks,\n      PaymentHooks.onDestroy\n    );\n  }\n\n  private setArrangementBusFunctions(\n    closedFunctions: string[] | undefined,\n    businessFunction: string | undefined\n  ) {\n    if (closedFunctions?.length && businessFunction) {\n      // TODO: temporary solution, need to find better way do not mutate object\n      const setOfBusFun = new Set([...closedFunctions, businessFunction]);\n      closedFunctions = Array.from(setOfBusFun);\n\n      this.paymentOrderHttpService.arrangementBusFunctions =\n        closedFunctions.toString();\n    }\n  }\n\n  private setEditFormValues(payment: IdentifiedPaymentOrder) {\n    const form: FormGroup = this.stateService.formInstance;\n    const counterparty = form.get(PaymentBaseFields.counterparty) as FormGroup;\n    registerFormControl(\n      counterparty,\n      CounterPartyFields.schemeName,\n      [],\n      [],\n      'BBAN'\n    );\n    registerFormControl(form, 'paymentOrderId', [], [], payment.id);\n    this.isPaymentCopyControl = registerFormControl(\n      form,\n      HiddenFields.isPaymentCopy\n    );\n    this.isPaymentCopyControl.patchValue(\n      this.options.paymentMode === this.paymentMode.COPY_PAYMENT\n    );\n    const editForm = setFormDetailsFromService(form, payment);\n    this.stateService.initialEditFormValue = editForm.value;\n    this.setForm(editForm);\n  }\n\n  private setupPaymentTypes(configs: PaymentTypeConfig[]) {\n    this.paymentTypes = configs.map((config) => config.paymentType).join(',');\n    this.paymentOrderHttpService.paymentType = this.paymentTypes;\n  }\n\n  private renderView() {\n    this.outletRef.clear();\n    this.outletRef.createEmbeddedView(this.contentRef);\n  }\n\n  private setTemplateValues(form: FormGroup, paymentTemplate: PaymentTemplate) {\n    this.setFormValues(normalisePaymentTemplate(paymentTemplate), form);\n    this.paymentTemplate = null;\n    this.stateService.setPaymentTemplate(undefined);\n  }\n\n  private prepareForTemplateApply() {\n    const formGroup = new FormGroup({});\n    this.formValue = null;\n    this.fieldSetupService.setPaymentOptions([]);\n    this.templateNameControl = registerFormControl(formGroup, 'templateName');\n    this.stateService.saveForm(formGroup);\n  }\n\n  private getPaymentConfig(\n    paymentType?: string\n  ): PaymentTypeConfig | undefined {\n    if (paymentType) {\n      return this.configs.filter(\n        (paymentConfig) => paymentType === paymentConfig.paymentType\n      )[0];\n    }\n    return;\n  }\n\n  private setFormValues(\n    { details, name, id }: PaymentTemplate,\n    form?: FormGroup\n  ) {\n    const _form = form || this.stateService.formInstance;\n    const templateForm = setFormDetailsFromResponse(_form, details, {\n      name,\n      id,\n    });\n    this.templateSelectorName = name;\n    this.templateNameControl?.setValue(name);\n    this.setForm(templateForm);\n    _form.markAllAsTouched();\n  }\n\n  private listen() {\n    this.fetchOptions$\n      .pipe(\n        filter(\n          (form: FormGroup) =>\n            JSON.stringify(\n              CreatePaymentService.getCriticalFieldValues(this.formValue)\n            ) !==\n            JSON.stringify(\n              CreatePaymentService.getCriticalFieldValues(form.getRawValue())\n            )\n        ),\n        switchMap((form: FormGroup) => {\n          this.formValue = form.getRawValue();\n          return this.fetchPaymentOptions(form);\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n  }\n\n  private setForm(formInstance: FormGroup) {\n    this.stateService.setPaymentState(PaymentState.EDIT);\n    this.stateService.saveForm(formInstance);\n\n    this.renderView();\n    this.cdRef.detectChanges();\n  }\n\n  /**\n   * Callback triggered when the payment type changes\n   */\n  private onPaymentTypeChange(paymentOptions: Array<PaymentOption> = []) {\n    if (paymentOptions && paymentOptions.length) {\n      this.fieldSetupService.setPaymentOptionsError(false);\n    }\n\n    this.fieldSetupService.setPaymentOptions(paymentOptions);\n    this.fetchingPaymentOptions$.next(false);\n  }\n\n  private validatePayment(form: FormGroup) {\n    this.paymentOrderHttpService\n      .validatePayment(toPostRequest(form.getRawValue()))\n      .pipe(take(1))\n      .subscribe(\n        (response) => {\n          const control =\n            form.get('isIntraLegalEntity') ||\n            registerFormControl(form, 'isIntraLegalEntity');\n          this.templateNameControl =\n            this.templateNameControl ||\n            registerFormControl(form, 'templateName');\n          control.setValue(response.isIntraLegalEntityPaymentOrder);\n          this.templateNameControl.setValue(this.templateSelectorName);\n          this.submitting$.next(false);\n          this.navigationService.review();\n          this.stateService.canApprove = response.canApprove;\n        },\n        ({ error }) => {\n          this.submitting$.next(false);\n          this.errors = error.errors;\n\n          if (!this.isP2PLimitError(error)) {\n            this.genericError = error.message;\n            this.showApiError = true;\n            if (this.errors?.length || this.genericError) {\n              const errorObject: PaymentErrors = {\n                errorResponse: error,\n                errors: this.errors,\n                paymentErrors: this.paymentErrors,\n                notificationHeader: formI18n.validateFailed,\n                genericMessage: this.genericError,\n              };\n              this.paymentOrderHttpService.manageErrorResponse(errorObject);\n            } else {\n              this.paymentOrderHttpService.showNotification(false, {\n                header: formI18n.unknownErrorHeader,\n                message: formI18n.unknownError,\n                headerContext: error,\n              });\n            }\n            this.scrollIntoAlertView();\n          } else {\n            this.showApiError = false;\n            this.handleP2PErrors(this.errors[0]);\n          }\n        }\n      );\n  }\n\n  private handleP2PErrors(error: BaseObject<any>): void {\n    if (error?.key) {\n      const amountGroupConfig = getConfig(\n        RemittanceInfoFields.amountCurrencyGroup,\n        this.configs[0]\n      );\n\n      const validationMsg =\n        amountGroupConfig?.options?.validationMessages?.find(\n          (validationMessage: { name: string; message: string }) =>\n            validationMessage.name === error.key\n        );\n\n      if (validationMsg?.message) {\n        validationMsg.message = validationMsg.message.replace(\n          '#amount#',\n          error.context?.limit\n        );\n\n        const amountGroup = this.stateService.formInstance\n          .get(PaymentBaseFields.remittanceInfo)\n          ?.get(RemittanceInfoFields.amountCurrencyGroup);\n        amountGroup?.setErrors({ [error.key]: true });\n        amountGroup\n          ?.get(RemittanceInfoFields.amount)\n          ?.setErrors({ invalid: true });\n\n        focusErrorElement(\n          this.formEl?.nativeElement,\n          'small.bb-input-validation-message'\n        );\n      }\n    }\n  }\n\n  private scrollIntoAlertView() {\n    this.alertContainer?.nativeElement.scrollIntoView(false, {\n      behavior: 'smooth',\n      block: 'start',\n    });\n  }\n\n  private isP2PLimitError(error: any): boolean {\n    if (!Array.isArray(error.errors)) return false;\n\n    const errKey = error.errors[0]?.key;\n    return Object.values(P2PLimitErrorKeys).includes(\n      errKey as P2PLimitErrorKeys\n    );\n  }\n\n  private saveTemplate(form: FormGroup) {\n    if (this.options.paymentMode === PaymentMode.EDIT_TEMPLATE) {\n      this.editPaymentTemplate(form);\n    } else {\n      this.createPaymentTemplate(form);\n    }\n  }\n\n  private editPaymentTemplate(form: FormGroup) {\n    const templateName = form.get(PaymentTemplateFields.templateName)?.value;\n    const paymentTemplateId = form.get(\n      PaymentTemplateFields.paymentTemplateId\n    )?.value;\n    if (paymentTemplateId) {\n      this.paymentOrderHttpService\n        .editPaymentTemplate(\n          paymentTemplateId,\n          toPostPaymentTemplate(form.getRawValue())\n        )\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe(\n          this.saveTemplateSuccessCallback.bind(this, templateName),\n          this.saveTemplateErrorCallback.bind(this)\n        );\n    }\n  }\n\n  private createPaymentTemplate(form: FormGroup) {\n    const templateName = form.get(PaymentTemplateFields.templateName)?.value;\n    this.paymentOrderHttpService\n      .postPaymentTemplate(toPostPaymentTemplate(form.getRawValue()))\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(\n        this.saveTemplateSuccessCallback.bind(this, templateName),\n        this.saveTemplateErrorCallback.bind(this)\n      );\n  }\n\n  private saveTemplateSuccessCallback(templateName: string) {\n    this.paymentOrderHttpService.showNotification(true, {\n      header: commonI18n.templateSaveSuccess(templateName),\n      headerContext: { name: templateName },\n    });\n    this.submitting$.next(false);\n    if (this.options.isModalView) {\n      this.modalService?.closeModal();\n    } else {\n      this.stateService.resetForm();\n      this.renderView();\n    }\n    this.eventBus.publish(\n      <string>(this.options.successEventName || defaultPaymentSuccessEventName),\n      true\n    );\n  }\n\n  private saveTemplateErrorCallback(response: PaymentError) {\n    const { error } = response;\n    this.paymentOrderHttpService.showNotification(false, {\n      header: error?.message || commonI18n.templateSaveFailed,\n    });\n    this.submitting$.next(false);\n  }\n\n  private onHooksDone(form: FormGroup, success = true) {\n    if (success) {\n      if (this.options.isTemplateMode) {\n        this.saveTemplate(form);\n      } else {\n        this.validatePayment(form);\n      }\n    } else {\n      this.submitting$.next(false);\n    }\n  }\n\n  private isEditFormNotChanged(form: FormGroup): boolean {\n    return !isEditFormDirty(form.value, this.stateService.initialEditFormValue);\n  }\n\n  onSelectPaymentTemplate(paymentTemplateData: PaymentTemplate) {\n    const config = this.getPaymentConfig(\n      normalizePaymentType(paymentTemplateData)\n    );\n    if (this.configs.length > 1 && config) {\n      this.prepareForTemplateApply();\n      this.paymentTemplate = normalisePaymentTemplate(paymentTemplateData);\n      this.shouldApplyTemplate = true;\n      this.stateService.setPaymentState(PaymentState.EDIT);\n      this.onSelectConfig(config);\n      this.renderView();\n    } else {\n      this.setFormValues(paymentTemplateData);\n    }\n  }\n\n  clearTemplateName() {\n    this.templateSelectorName = '';\n    if (this.templateNameControl) {\n      this.templateNameControl.setValue('');\n    }\n  }\n\n  onLoadingMoreTemplates(page: number) {\n    this.paymentOrderHttpService.loadMore(page);\n  }\n\n  search(text: string) {\n    this.paymentOrderHttpService.search(text);\n  }\n\n  onSelectConfig(config?: PaymentTypeConfig) {\n    this.createPaymentService.selectPaymentConfig(config);\n  }\n\n  onPaymentOptionSelect(paymentOption?: PaymentOption) {\n    this.createPaymentService.selectPaymentOption(paymentOption);\n  }\n\n  onApplyTemplate(form: FormGroup) {\n    this.shouldApplyTemplate = false;\n    if (this.paymentTemplate) {\n      this.setTemplateValues(form, this.paymentTemplate);\n    } else {\n      this.stateService.paymentTemplateState$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((template) => {\n          if (template) {\n            this.setTemplateValues(form, template);\n          }\n        });\n    }\n  }\n\n  /**\n   * Fetches the payment options for provided payment details\n   */\n\n  private fetchPaymentOptions(\n    form: FormGroup\n  ): Observable<PaymentOptionsResponse> {\n    this.fetchingPaymentOptions$.next(true);\n    return this.paymentOptionsService.fetchPaymentOptions(\n      mapPaymentOptionRequest(form.getRawValue())\n    );\n  }\n\n  discardEditPaymentChanges() {\n    this.modalService?.closeModal();\n  }\n\n  cancelEditPaymentConfirmationDialog() {\n    this.isEditPaymentConfirmationDialogOpen = false;\n  }\n\n  onSubmit(form: FormGroup) {\n    const configVal = this.createPaymentService.selectedPaymentConfigValue;\n\n    if (configVal) {\n      this.createPaymentService.resetRedundantFields(configVal, form);\n    }\n\n    this.stateService.saveForm(form);\n    this.submitting$.next(true);\n    if (this.createPaymentSetup.hooks?.[PaymentHooks.onSave]) {\n      triggerPaymentHook(\n        this.createPaymentSetup.hooks,\n        PaymentHooks.onSave,\n        this.onHooksDone.bind(this, form),\n        form\n      );\n    } else {\n      this.onHooksDone(form);\n    }\n  }\n\n  onClear() {\n    this.fieldSetupService.clearPaymentOptions();\n    this.stateService.setPaymentState(PaymentState.INITIAL);\n    this.stateService.resetForm();\n    this.clearTemplateName();\n    this.formValue = null;\n    this.searchValue = '';\n    this.showApiError = false;\n    this.renderView();\n  }\n\n  onEditCancel(form: FormGroup) {\n    if (this.isEditFormNotChanged(form)) {\n      this.modalService?.closeModal();\n    } else {\n      this.isEditPaymentConfirmationDialogOpen = true;\n    }\n  }\n\n  onEditSubmit(form: FormGroup) {\n    if (this.isEditFormNotChanged(form)) {\n      this.editPaymentHasNoChanges = true;\n      this.scrollIntoAlertView();\n    } else {\n      this.editPaymentHasNoChanges = false;\n      this.onSubmit(form);\n    }\n  }\n\n  getForm(paymentState: PaymentState): Observable<FormGroup | undefined> {\n    if (paymentState === PaymentState.REVIEW) {\n      this.stateService.resetForm();\n      this.stateService.setPaymentState(PaymentState.INITIAL);\n    }\n\n    return this.stateService.form$;\n  }\n}\n","<bb-header-ui\n  *ngIf=\"header\"\n  headingClasses=\"bb-block bb-block--lg\"\n  headingType=\"h2\"\n  [heading]=\"header\"\n></bb-header-ui>\n<div #alertContainer>\n  <ng-container *ngIf=\"errors?.length; else noSpecificError\">\n    <ng-container *ngFor=\"let error of errors\">\n      <ng-container *ngIf=\"error.message; else noSpecificError\">\n        <bb-alert-ui *ngIf=\"showApiError\" title=\"\" modifier=\"error\">\n          <div class=\"bb-text-bold bb-text-default d-inline-flex\">\n            <ng-container *ngIf=\"isErrorTitleDisplayed\">\n              <span i18n=\"@@initiate-payment-payments-error-alert-title\">\n                Payment data error: </span\n              >&nbsp;\n            </ng-container>\n            <span>{{ $any(error)?.message }}</span>\n          </div>\n        </bb-alert-ui>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n  <ng-template #noSpecificError>\n    <ng-container *ngIf=\"genericError; else unknownError\">\n      <bb-alert-ui *ngIf=\"showApiError\" title=\"\" modifier=\"error\">\n        <div class=\"bb-text-bold bb-text-default\">\n          <ng-container *ngIf=\"isErrorTitleDisplayed\">\n            <span\n              i18n=\"@@initiate-payment-payments-generic-message-alert-title\"\n            >\n              Payment data error:\n            </span>\n          </ng-container>\n          <span>{{ genericError }}</span>\n        </div>\n      </bb-alert-ui>\n    </ng-container>\n  </ng-template>\n  <ng-template #unknownError>\n    <div class=\"bb-text-bold bb-text-default\">\n      <bb-alert-ui\n        *ngIf=\"showApiError\"\n        i18n-title=\"@@initiate-payment-payments-unknown-error-alert-title\"\n        title=\"Server error: Unknown error occurred\"\n        modifier=\"error\"\n      >\n      </bb-alert-ui>\n    </div>\n  </ng-template>\n  <bb-alert-ui\n    *ngIf=\"editPaymentHasNoChanges\"\n    i18n-title=\"\n      @@initiate-payment-payments-edit-paymet-no-changes-warning-alert-title\"\n    title=\"Please make changes to continue.\"\n    modifier=\"warning\"\n  ></bb-alert-ui>\n</div>\n\n<ng-container\n  *ngIf=\"\n    enablePaymentTemplateSelector &&\n    !options?.isTemplateMode &&\n    options?.paymentMode !== paymentMode.EDIT_PAYMENT &&\n    options?.paymentMode !== paymentMode.COPY_PAYMENT\n  \"\n>\n  <bb-payment-template-selector\n    [paymentTemplateSearch]=\"paymentTemplateSearch\"\n    [items]=\"paymentTemplates$\"\n    [loading]=\"loadingTemplates$ | async\"\n    [templateName]=\"templateSelectorName || templateNameControl?.value\"\n    [searchValue]=\"searchValue\"\n    (setValues)=\"onSelectPaymentTemplate($event)\"\n    (loadMoreTemplates)=\"onLoadingMoreTemplates($event)\"\n    (searchTemplates)=\"search($event)\"\n    (clear)=\"clearTemplateName()\"\n  >\n  </bb-payment-template-selector>\n</ng-container>\n\n<ng-container #outlet></ng-container>\n<ng-template #content>\n  <ng-container *ngIf=\"paymentState$ | async as paymentState\">\n    <ng-container *ngIf=\"configs.length === 1; else adaptiveFormTmpl\">\n      <bb-payord-form\n        [config]=\"configs[0]\"\n        [formItem]=\"getForm(paymentState) | async\"\n        [submitting]=\"submitting$ | async\"\n        [isModalView]=\"options.isModalView\"\n        [isTemplateMode]=\"options.isTemplateMode\"\n        [isDebitPayment]=\"options.isDebitPayment\"\n        [paymentMode]=\"options.paymentMode\"\n        [templateModeType]=\"options.templateModeType\"\n        (clear)=\"onClear()\"\n        (submitted)=\"onSubmit($event)\"\n        (editPaymentCancel)=\"onEditCancel($event)\"\n        (editPaymentSubmit)=\"onEditSubmit($event)\"\n      >\n      </bb-payord-form>\n\n      <bb-confirmation-dialog\n        data-role=\"discard-payment-edit-confirmation-dialog\"\n        confirmButtonColor=\"danger\"\n        (confirm)=\"discardEditPaymentChanges()\"\n        [isOpen]=\"isEditPaymentConfirmationDialogOpen\"\n        (cancel)=\"cancelEditPaymentConfirmationDialog()\"\n      >\n        <span title i18n=\"@@confirmation-dialog.edit.payment.title.discard\"\n          >Discard edited data?</span\n        >\n        <span body i18n=\"@@confirmation-dialog.edit.payment.body.discard\">\n          Are you sure you want to exit and discard all changes? Edited data\n          will be lost.\n        </span>\n        <span\n          confirmActionName\n          i18n=\"@@confirmation-dialog.edit.payment.action.discard.confirm\"\n          >Discard</span\n        >\n        <span\n          cancelActionName\n          i18n=\"@@confirmation-dialog.edit.payment.action.discard.cancel\"\n          >Not now</span\n        >\n      </bb-confirmation-dialog>\n    </ng-container>\n    <ng-template #adaptiveFormTmpl>\n      <bb-adaptive-form\n        [formItem]=\"getForm(paymentState) | async\"\n        [paymentState]=\"paymentState\"\n        [paymentTypes]=\"configs\"\n        [baseFields]=\"baseFields$ | async\"\n        [fetchOptions$]=\"fetchOptions$\"\n        [fetchingOptions]=\"fetchingPaymentOptions$ | async\"\n        [paymentOptions$]=\"paymentOptions$\"\n        [paymentOptionsError]=\"paymentOptionsError$ | async\"\n        [selectedPaymentConfig]=\"selectedPaymentConfig$ | async\"\n        [selectedPaymentOption]=\"selectedPaymentOption$ | async\"\n        [fetchPaymentOptionsListener]=\"fetchPaymentOptionsListener$ | async\"\n        [shouldApplyTemplate]=\"shouldApplyTemplate\"\n        [checkClosedPaymentsAccess]=\"!!options.checkClosedPaymentsAccess\"\n        [submitting]=\"submitting$ | async\"\n        [isModalView]=\"options.isModalView\"\n        [isDebitPayment]=\"options.isDebitPayment\"\n        (selectConfig)=\"onSelectConfig($event)\"\n        (submitted)=\"onSubmit($event)\"\n        (selectPaymentOption)=\"onPaymentOptionSelect($event)\"\n        (clear)=\"onClear()\"\n        (applyPaymentTemplate)=\"onApplyTemplate($event)\"\n      ></bb-adaptive-form>\n    </ng-template>\n  </ng-container>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreatePaymentFormComponent } from './create-payment-form.component';\nimport { PayordFormBuilderAngModule } from '@backbase/payord-form-builder-ang';\n\nconst components = [CreatePaymentFormComponent];\n\n@NgModule({\n  imports: [CommonModule, PayordFormBuilderAngModule],\n  declarations: [...components],\n  exports: [...components],\n})\nexport class CreatePaymentFormModule {}\n","import { AmountGroup } from '@backbase/payment-orders-ang';\n\nexport interface CriticalFormValues {\n  debitAccountNumber: string | undefined;\n  creditAccountNumber: string | undefined;\n  amount: AmountGroup | undefined;\n  country: string | undefined;\n}\n\nexport interface CapabilityData {\n  'payment-order-id'?: string;\n  approvalRecordId?: string;\n}\n\nexport enum P2PLimitReasonCodes {\n  MIN_TRANSFER = 'PL01',\n  MAX_TRANSFER = 'PL02',\n  DAILY = 'PL03',\n  MONTHLY = 'PL04',\n}\n","import { Component, Input } from '@angular/core';\nimport {\n  InitiatorDetails,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-initiator-details',\n  templateUrl: './initiator-details.component.html',\n})\nexport class InitiatorDetailsComponent {\n  /**\n   * Details of payment Debitor\n   */\n  @Input() data!: InitiatorDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<div class=\"bb-text-bold bb-block bb-block--sm\">\n  <bb-payord-dynamic-label\n    name=\"initiator\"\n    [config]=\"paymentConfig\"\n    defaultLabel=\"From\"\n    i18n-defaultLabel=\"@@omni-payment-review-initiator.from-account.label\"\n  ></bb-payord-dynamic-label>\n</div>\n\n<div *ngIf=\"data?.accountNumber\">\n  <div\n    class=\"break-word bb-text-bold bb-block bb-block--xs\"\n    data-role=\"debit-account-name\"\n  >\n    {{ data?.alias || data?.name }}\n  </div>\n  <div\n    data-role=\"debit-account-number\"\n    class=\"bb-text-support break-word contextual-alternates-off\"\n  >\n    {{ data?.accountNumber }}\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport {\n  CounterPartyDetails,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-creditor-account',\n  templateUrl: './creditor-account.component.html',\n})\nexport class CreditorAccountComponent {\n  /**\n   * The details of beneficiary\n   */\n  @Input() data!: CounterPartyDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<div class=\"bb-text-bold bb-block bb-block--sm\">\n  <bb-payord-dynamic-label\n    name=\"counterparty\"\n    [config]=\"paymentConfig\"\n    defaultLabel=\"To\"\n    i18n-defaultLabel=\"@@omni-payment-review-counterparty.transfer-to.label\"\n  ></bb-payord-dynamic-label>\n</div>\n<div *ngIf=\"data?.accountNumber || data?.creditorBank?.bankBranchCode\">\n  <div\n    class=\"bb-text-bold bb-block bb-block--xs\"\n    data-role=\"beneficiary-account-name\"\n  >\n    {{ data?.alias || data?.name }}\n  </div>\n  <div class=\"bb-text-support break-word contextual-alternates-off\">\n    <span data-role=\"beneficiary-account-number\">\n      {{\n        data?.creditorBank?.bankBranchCode\n          ? data?.creditorBank?.bankBranchCode + ' / ' + data?.accountNumber\n          : data?.accountNumber\n      }}\n    </span>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport {\n  PaymentTypeConfig,\n  RemittanceDetails,\n} from '@backbase/payment-orders-ang';\nimport {\n  Currency,\n  ForexDetails,\n  ChargeBearer,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-remittance-details',\n  templateUrl: './remittance-details.component.html',\n})\nexport class RemittanceDetailsComponent {\n  /**\n   * Details of Remittance other than initiator and counterparty\n   */\n  @Input() data!: RemittanceDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n\n  /**\n   * The currency exchange details of the payment\n   */\n  @Input() forexDetails?: ForexDetails;\n\n  /**\n   * The fee details for the payment.\n   */\n  @Input() transferFee?: Currency;\n\n  /**\n   * The charge bearer type of teh payment\n   */\n  @Input() chargeBearer?: ChargeBearer;\n}\n","<div class=\"bb-text-bold bb-block bb-block--sm\">\n  <bb-payord-dynamic-label\n    name=\"amountGroup\"\n    [config]=\"paymentConfig\"\n    defaultLabel=\"Amount\"\n    i18n-defaultLabel=\"@@omni-payment-review-remittance-details.amount.label\"\n  ></bb-payord-dynamic-label>\n</div>\n<div class=\"bb-highlight break-word\" data-role=\"transfer-amount\">\n  <bb-amount-ui\n    class=\"bb-heading-1\"\n    [amount]=\"data?.amountGroup?.amount\"\n    [currency]=\"data?.amountGroup?.currency\"\n    [mapCurrency]=\"false\"\n  ></bb-amount-ui>\n</div>\n\n<div data-role=\"payment-is-urgent\" class=\"bb-stack\" *ngIf=\"data?.urgent\">\n  <bb-icon-ui color=\"secondary\" name=\"info\" size=\"md\"> </bb-icon-ui>\n  &nbsp;\n  <span i18n=\"@@omni-payment-review-remittance-details.urgent-payment.label\"\n    >Urgent payment</span\n  >\n</div>\n\n<div class=\"bb-stack bb-text-support\" *ngIf=\"data?.amountOptionLabel\">\n  <span>{{ data?.amountOptionLabel }}</span>\n</div>\n","import { Component, Input } from '@angular/core';\nimport {\n  CounterPartyDetails,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-creditor-details',\n  templateUrl: './creditor-details.component.html',\n})\nexport class CreditorDetailsComponent {\n  /**\n   * The details of beneficiary\n   */\n  @Input() data!: CounterPartyDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<ng-container\n  *ngIf=\"\n    data?.entryClass ||\n    data?.accountType ||\n    data?.recipientId ||\n    data?.postalAddress?.addressLine1 ||\n    data?.postalAddress?.addressLine2 ||\n    data?.postalAddress?.streetName\n  \"\n>\n  <div\n    class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  >\n    <div class=\"card-body\">\n      <div\n        class=\"bb-text-bold bb-block bb-block--md\"\n        i18n=\"@@counterparty-details.beneficiary-details.title\"\n      >\n        Beneficiary details\n      </div>\n      <div\n        class=\"row bb-block bb-block--md\"\n        *ngIf=\"data?.entryClass || data?.accountType\"\n      >\n        <div\n          class=\"col-md-6 bb-block bb-block--md\"\n          *ngIf=\"\n            data?.accountType &&\n            (data?.accountType === 'SAVINGS' ||\n              data?.accountType === 'CHECKING')\n          \"\n        >\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"accountType\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Account type\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.account-type-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            [ngSwitch]=\"data?.accountType\"\n            data-role=\"beneficiary-account-type\"\n          >\n            <ng-container\n              i18n=\"@@counterparty-details.account-type-savings\"\n              *ngSwitchCase=\"'SAVINGS'\"\n            >\n              Savings\n            </ng-container>\n            <ng-container\n              i18n=\"@@counterparty-details.account-type-checking\"\n              *ngSwitchCase=\"'CHECKING'\"\n            >\n              Checking\n            </ng-container>\n          </div>\n        </div>\n\n        <div class=\"col-md-6 bb-block bb-block--md\" *ngIf=\"data?.entryClass\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"entryClass\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Standard entry class (SEC Type)\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.entryClass-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            [ngSwitch]=\"data?.entryClass\"\n            data-role=\"beneficiary-standard-entry-class\"\n          >\n            <ng-container\n              i18n=\"@@counterparty-details.entryClass-ppd\"\n              *ngSwitchCase=\"'PPD'\"\n            >\n              Personal (PPD)\n            </ng-container>\n            <ng-container\n              i18n=\"@@counterparty-details.entryClass-ccd\"\n              *ngSwitchCase=\"'CCD'\"\n            >\n              Business (CCD)\n            </ng-container>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row bb-block bb-block--md\" *ngIf=\"data?.recipientId\">\n        <div class=\"col-md-6 bb-block bb-block--md\">\n          <div\n            class=\"bb-text-bold break-word\"\n            data-role=\"payment-counterparty-recipient-id-label\"\n          >\n            <bb-payord-dynamic-label\n              name=\"recipientId\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Recipient ID\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.recipientId-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div data-role=\"payment-counterparty-recipient-id\">\n            {{ data?.recipientId }}\n          </div>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"\n          data?.postalAddress?.addressLine1 ||\n          data?.postalAddress?.addressLine2 ||\n          data?.postalAddress?.streetName\n        \"\n      >\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"@@counterparty-details.beneficiary-address.title\"\n        >\n          Beneficiary Address\n        </div>\n        <div class=\"break-word\">\n          <bb-full-address [address]=\"data?.postalAddress\"></bb-full-address>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from '@angular/core';\nimport {\n  CounterPartyDetails,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-counterparty-details',\n  templateUrl: './counterparty-details.component.html',\n})\nexport class CounterpartyDetailsComponent {\n  /**\n   * The details of beneficiary\n   */\n  @Input() data!: CounterPartyDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<div\n  class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  *ngIf=\"\n    data?.creditorBank?.bankName ||\n    data?.creditorBank?.bic ||\n    data?.creditorBank?.postalAddress?.addressLine1 ||\n    data?.creditorBank?.postalAddress?.addressLine2 ||\n    data?.creditorBank?.postalAddress?.streetName\n  \"\n>\n  <div class=\"card-body\">\n    <div\n      class=\"bb-text-bold bb-block bb-block--md\"\n      i18n=\"@@counterparty-details.bank-details.title\"\n    >\n      Beneficiary bank details\n    </div>\n\n    <div\n      class=\"bb-block bb-block--md\"\n      *ngIf=\"data?.creditorBank?.bankName || data?.creditorBank?.bic\"\n    >\n      <div class=\"row\">\n        <div class=\"col-6\" *ngIf=\"data?.creditorBank?.bic\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bic\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"SWIFT/BIC code\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.creditor-bank-bic-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            class=\"break-word\"\n            *ngIf=\"data?.creditorBank?.bic\"\n            data-role=\"counterparty-bic-code\"\n          >\n            {{ data?.creditorBank?.bic }}\n          </div>\n        </div>\n        <div class=\"col-6\" *ngIf=\"data?.creditorBank?.bankName\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bankName\"\n              [config]=\"paymentConfig\"\n              parentName=\"creditorBank\"\n              defaultLabel=\"Bank name\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.creditor-bank-name-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ data?.creditorBank?.bankName }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"\n        data?.creditorBank?.postalAddress?.addressLine1 ||\n        data?.creditorBank?.postalAddress?.addressLine2 ||\n        data?.creditorBank?.postalAddress?.streetName\n      \"\n    >\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"@@counterparty-details.bank-address.title\"\n      >\n        Bank address\n      </div>\n      <div class=\"break-word\">\n        <bb-full-address\n          [address]=\"data?.creditorBank?.postalAddress\"\n        ></bb-full-address>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  *ngIf=\"\n    data?.correspondentBank?.bankName ||\n    data?.correspondentBank?.bic ||\n    data?.correspondentBank?.bankBranchCode ||\n    data?.correspondentBank?.postalAddress?.addressLine1 ||\n    data?.correspondentBank?.postalAddress?.addressLine2 ||\n    data?.correspondentBank?.postalAddress?.streetName\n  \"\n>\n  <div class=\"card-body\">\n    <div\n      class=\"bb-text-bold bb-block bb-block--md\"\n      i18n=\"@@counterparty-details.correspondant-bank-details.title\"\n    >\n      Correspondent bank details\n    </div>\n\n    <div\n      class=\"bb-block bb-block--md\"\n      *ngIf=\"\n        data?.correspondentBank?.bankName ||\n        data?.correspondentBank?.bankBranchCode ||\n        data?.correspondentBank?.bic\n      \"\n    >\n      <div class=\"row\">\n        <div class=\"col-6\" *ngIf=\"data?.correspondentBank?.bankBranchCode\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bankBranchCode\"\n              [config]=\"paymentConfig\"\n              parentName=\"correspondentBank\"\n              defaultLabel=\"Routing transit number (ABA)\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.routing-transit-number-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"bb-text-support\">\n            {{ data?.correspondentBank?.bankBranchCode }}\n          </div>\n        </div>\n\n        <div class=\"col-6\" *ngIf=\"data?.correspondentBank?.bic\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bic\"\n              [config]=\"paymentConfig\"\n              parentName=\"correspondentBank\"\n              defaultLabel=\"SWIFT/BIC code\"\n              i18n-defaultLabel=\"@@counterparty-details.bic-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            class=\"break-word\"\n            *ngIf=\"data?.correspondentBank?.bic\"\n            data-role=\"correspondent-bic-code\"\n          >\n            {{ data?.correspondentBank?.bic }}\n          </div>\n        </div>\n\n        <div class=\"col-6\" *ngIf=\"data?.correspondentBank?.bankName\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bankName\"\n              [config]=\"paymentConfig\"\n              parentName=\"correspondentBank\"\n              defaultLabel=\"Bank name\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.correspondent.bank-name-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ data?.correspondentBank?.bankName }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"\n        data?.correspondentBank?.postalAddress?.addressLine1 ||\n        data?.correspondentBank?.postalAddress?.addressLine2 ||\n        data?.correspondentBank?.postalAddress?.streetName\n      \"\n    >\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"@@counterparty-details.correspondant.bank-address.title\"\n      >\n        Bank address\n      </div>\n      <div class=\"break-word\">\n        <bb-full-address\n          [address]=\"data?.correspondentBank?.postalAddress\"\n        ></bb-full-address>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  *ngIf=\"\n    data?.intermediaryBank?.bankName ||\n    data?.intermediaryBank?.bic ||\n    data?.intermediaryBank?.bankBranchCode ||\n    data?.intermediaryBank?.postalAddress?.addressLine1 ||\n    data?.intermediaryBank?.postalAddress?.addressLine2 ||\n    data?.intermediaryBank?.postalAddress?.streetName\n  \"\n>\n  <div class=\"card-body\">\n    <div\n      class=\"bb-text-bold bb-block bb-block--md\"\n      i18n=\"@@counterparty-details.intermediary-bank-details.title\"\n    >\n      Intermediary bank details\n    </div>\n\n    <div\n      class=\"bb-block bb-block--md\"\n      *ngIf=\"\n        data?.intermediaryBank?.bankName ||\n        data?.intermediaryBank?.bankBranchCode ||\n        data?.intermediaryBank?.bic\n      \"\n    >\n      <div class=\"row\">\n        <div class=\"col-6\" *ngIf=\"data?.intermediaryBank?.bankBranchCode\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bankBranchCode\"\n              [config]=\"paymentConfig\"\n              parentName=\"intermediaryBank\"\n              defaultLabel=\"Routing transit number (ABA)\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.routing-transit-number-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"bb-text-support\">\n            {{ data?.intermediaryBank?.bankBranchCode }}\n          </div>\n        </div>\n\n        <div class=\"col-6\" *ngIf=\"data?.intermediaryBank?.bic\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bic\"\n              [config]=\"paymentConfig\"\n              parentName=\"intermediaryBank\"\n              defaultLabel=\"SWIFT/BIC code\"\n              i18n-defaultLabel=\"@@counterparty-details.bic-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            class=\"break-word\"\n            *ngIf=\"data?.intermediaryBank?.bic\"\n            data-role=\"correspondent-bic-code\"\n          >\n            {{ data?.intermediaryBank?.bic }}\n          </div>\n        </div>\n\n        <div class=\"col-6\">\n          <div class=\"bb-text-bold\" *ngIf=\"data?.intermediaryBank?.bankName\">\n            <bb-payord-dynamic-label\n              name=\"bankName\"\n              [config]=\"paymentConfig\"\n              parentName=\"intermediaryBank\"\n              defaultLabel=\"Bank name\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.intermediary-bank-name-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ data?.intermediaryBank?.bankName }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"\n        data?.intermediaryBank?.postalAddress?.addressLine1 ||\n        data?.intermediaryBank?.postalAddress?.addressLine2 ||\n        data?.intermediaryBank?.postalAddress?.streetName\n      \"\n    >\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"@@counterparty-details.intermediary-bank-address.title\"\n      >\n        Bank address\n      </div>\n      <div class=\"break-word\">\n        <bb-full-address\n          [address]=\"data?.intermediaryBank?.postalAddress\"\n        ></bb-full-address>\n      </div>\n    </div>\n  </div>\n</div>\n\n<hr\n  *ngIf=\"\n    data?.creditorBank?.bankName ||\n    data?.creditorBank?.bic ||\n    data?.creditorBank?.postalAddress?.addressLine1 ||\n    data?.creditorBank?.postalAddress?.addressLine2 ||\n    data?.creditorBank?.postalAddress?.streetName ||\n    data?.correspondentBank?.bankName ||\n    data?.correspondentBank?.bic ||\n    data?.correspondentBank?.bankBranchCode ||\n    data?.correspondentBank?.postalAddress?.addressLine1 ||\n    data?.correspondentBank?.postalAddress?.addressLine2 ||\n    data?.correspondentBank?.postalAddress?.streetName ||\n    data?.intermediaryBank?.bankName ||\n    data?.intermediaryBank?.bic ||\n    data?.intermediaryBank?.bankBranchCode ||\n    data?.intermediaryBank?.postalAddress?.addressLine1 ||\n    data?.intermediaryBank?.postalAddress?.addressLine2 ||\n    data?.intermediaryBank?.postalAddress?.streetName\n  \"\n/>\n","import { Component, Input } from '@angular/core';\nimport { PaymentTypeConfig, ScheduleItem } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-schedule-details',\n  templateUrl: './schedule-details.component.html',\n})\nexport class ScheduleDetailsComponent {\n  /**\n   * Payment schedule details\n   */\n  @Input() data!: ScheduleItem;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<div\n  class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n  *ngIf=\"data?.frequency?.value || data?.frequency as freq\"\n>\n  <bb-icon-ui\n    name=\"cached\"\n    class=\"bb-stack__item bb-stack__item--spacing-sm\"\n  ></bb-icon-ui>\n  <div class=\"bb-stack__item\">\n    <div class=\"bb-text-bold bb-block bb-block--xs\">\n      <bb-payord-dynamic-label\n        name=\"frequency\"\n        [config]=\"paymentConfig\"\n        parentName=\"schedule\"\n        defaultLabel=\"Frequency\"\n        i18n-defaultLabel=\"\n          @@omni-payment-review-schedule-details.frequency.label\"\n      ></bb-payord-dynamic-label>\n    </div>\n    <div\n      data-role=\"frequency-value\"\n      i18n=\"@@omni-payment-review-schedule-details.frequency\"\n    >\n      {freq, select, other {Once} DAILY {Daily} WEEKLY {Weekly} BIWEEKLY\n      {Bi-Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Annually}}\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n  *ngIf=\"data?.startDate\"\n>\n  <bb-icon-ui\n    name=\"today\"\n    class=\"bb-stack__item bb-stack__item--spacing-sm\"\n  ></bb-icon-ui>\n  <div class=\"bb-stack__item\">\n    <div class=\"bb-text-bold bb-block bb-block--xs\">\n      <bb-payord-dynamic-label\n        name=\"startDate\"\n        [config]=\"paymentConfig\"\n        parentName=\"schedule\"\n        defaultLabel=\"Start date\"\n        i18n-defaultLabel=\"\n          @@omni-payment-review-schedule-details.start-date.label\"\n      ></bb-payord-dynamic-label>\n    </div>\n    <div data-role=\"execution-date\">\n      {{ data?.startDate | date: 'mediumDate' }}\n    </div>\n    <div class=\"row\">\n      <span class=\"bb-text-support bb-subtitle col-md-6\">{{\n        data?.scheduleInfo\n      }}</span>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"data?.frequency?.value || data?.frequency as freq\">\n  <ng-container *ngIf=\"freq !== 'ONCE'\">\n    <div\n      class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n      *ngIf=\"data?.endType === 'after' && data?.repeat\"\n    >\n      <bb-icon-ui\n        name=\"today\"\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n      ></bb-icon-ui>\n      <div class=\"bb-stack__item\">\n        <div\n          class=\"bb-text-bold bb-block bb-block--xs\"\n          data-role=\"end-after-label\"\n        >\n          <bb-payord-dynamic-label\n            name=\"repeat\"\n            [config]=\"paymentConfig\"\n            parentName=\"schedule\"\n            defaultLabel=\"End after\"\n            i18n-defaultLabel=\"\n              @@omni-payment-review-schedule-details.end-after.label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div data-role=\"end-after\">\n          {{ data?.repeat }}\n          <span i18n=\"@@omni-payment-review-schedule-details.occurances.label\"\n            >occurrences</span\n          >\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n      *ngIf=\"data?.endType === 'on' && data?.endDate\"\n    >\n      <bb-icon-ui\n        name=\"today\"\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n      ></bb-icon-ui>\n      <div class=\"bb-stack__item\">\n        <div\n          class=\"bb-text-bold bb-block bb-block--xs\"\n          data-role=\"end-date-label\"\n        >\n          <bb-payord-dynamic-label\n            name=\"endDate\"\n            [config]=\"paymentConfig\"\n            parentName=\"schedule\"\n            defaultLabel=\"End date\"\n            i18n-defaultLabel=\"\n              @@omni-payment-review-schedule-details.end-date.label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div data-role=\"end-date\">\n          {{ data?.endDate | date: 'mediumDate' }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, ChangeDetectionStrategy, Input, Optional, OnInit } from '@angular/core';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { ProgressStatus, TransactionSigningService } from '@backbase/identity-auth/transaction-signing';\nimport { BaseObject, datePart, PaymentDetails, PaymentError, PaymentTypeConfig } from '@backbase/payment-orders-ang';\nimport { merge, Observable } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport { P2PLimitReasonCodes } from '../../../models/create-payment.model';\n\n@Component({\n  selector: 'bb-adapted-review-container',\n  templateUrl: './adapted-review.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdaptedReviewComponent implements OnInit {\n  /**\n   * The payment form values\n   */\n  @Input() payment?: PaymentDetails;\n  /**\n   * The status of payment progress\n   */\n  @Input() status?: string;\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n  /**\n   * Methods to handle events\n   */\n  @Input() methods?: BaseObject<any>;\n  /**\n   * Limit errors from payment-order POST call\n   */\n  @Input() breachError?: PaymentError;\n  /**\n   * Asset resolver for quick-transfer widget\n   */\n  private readonly resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-payord-omni-payment-widget-ang',\n    getURIFromAssetID: (assetId: string) => `${assetId}`,\n  });\n  /**\n   * Stream of resolved success image path\n   */\n  successImg: Observable<string> = this.resolveAsset('succeed.svg');\n  /**\n   * Stream of resolved success image path\n   */\n  successImgNoMotion: Observable<string> = this.resolveAsset('no-motion.svg');\n  /**\n   * unique time to reload animated svg image everytime\n   */\n  readonly timestamp = new Date().getTime();\n  /*\n   * To identify payment request is loading.\n   */\n  isLoading$?: Observable<boolean>;\n\n  constructor(\n    private readonly assetsService: AssetsService,\n    @Optional() private readonly identityService: TransactionSigningService,\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = merge(this.methods?.isSubmitting$(), this.identityService?.requestSubject.pipe(mapTo(false)));\n  }\n\n  /*\n   * Text for alert error content for server errors\n   */\n  get errorText(): string {\n    const amount = this.breachError?.reasonText?.split('|')[1];\n\n    if (this.isUserDeclined) {\n      return $localize`:@@initiate-payment.adapted-review.user-decline-error-message:`;\n    }\n\n    switch (this.breachError?.reasonCode) {\n      case P2PLimitReasonCodes.DAILY:\n        return $localize`:@@initiate-payment.adapted-review.P2P-daily-limit-error-message:The amount exceeds the daily limit of ${amount}`;\n      case P2PLimitReasonCodes.MONTHLY:\n        return $localize`:@@initiate-payment.adapted-review.P2P-monthly-limit-error-message:The amount exceeds the monthly limit of ${amount}`;\n      case P2PLimitReasonCodes.MAX_TRANSFER:\n        return $localize`:@@initiate-payment.adapted-review.P2P-max-limit-error-message:This amount can't exceed ${amount}`;\n      case P2PLimitReasonCodes.MIN_TRANSFER:\n        return $localize`:@@initiate-payment.adapted-review.P2P-max-limit-daily-error-message:This amount can't be lower than ${amount}`;\n      default:\n        return $localize`:@@initiate-payment.adapted-review.default-error-message:Failed to submit payment. Please try again later.`;\n    }\n  }\n\n  /*\n   * Title for alert error content for server errors\n   */\n  get errorTitle(): string {\n    if (this.breachError) {\n      return $localize`:@@initiate-payment.adapted-review.P2P-limit-error-title:Payment Failed Due to an Exceeding Limit`;\n    } else if (this.isUserDeclined) {\n      return $localize`:@@initiate-payment.adapted-review.user-declined-error-title:Your Transfer Has Been Cancelled.`;\n    } else {\n      return $localize`:@@initiate-payment.adapted-review.generic-error-title:`;\n    }\n  }\n\n  /*\n   * Boolean flag to display whether transfer date is for future\n   */\n  get isScheduledTransfer(): boolean {\n    const today = datePart();\n    const transferDate = datePart(this.payment?.schedule.startDate);\n\n    return new Date(transferDate) > new Date(today);\n  }\n\n  private get isUserDeclined(): boolean {\n    return this.status === ProgressStatus.USER_DECLINED;\n  }\n}\n","<ng-container *ngTemplateOutlet=\"status === 'SUCCESS' ? successScreen : reviewTemplate\"> </ng-container>\n\n<ng-template #reviewTemplate>\n  <div\n    *ngIf=\"isLoading$ | async\"\n    data-role=\"adapted-review-loader\"\n    class=\"bb-loading-indicator-wrapper bb-loading-indicator-wrapper--overlay\"\n  >\n    <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n  </div>\n\n  <fieldset class=\"bb-fieldset omni-payment-adapted-review\">\n    <legend class=\"bb-label bb-block bb-block--lg\" i18n=\"@@omni-payment-wrapper-review-page-title.label\">\n      Review your transfer\n    </legend>\n    <ng-container *ngIf=\"payment\">\n      <bb-alert-ui\n        *ngIf=\"status === 'ERROR' || status === 'USER_DECLINED' || breachError\"\n        [title]=\"errorTitle\"\n        (close)=\"(false)\"\n        modifier=\"error\"\n      >\n        <span data-role=\"failure-message\">{{ errorText }}</span>\n      </bb-alert-ui>\n\n      <div *ngIf=\"payment?.isIntraLegalEntity\" class=\"bb-block bb-block--sm bb-inline-stack bb-text-support\">\n        <div class=\"bb-inline-stack__item\">\n          <bb-icon-ui name=\"domain\"></bb-icon-ui>\n        </div>\n        <div\n          class=\"bb-inline-stack__item bb-text-bold\"\n          i18n=\"@@omni-payment-wrapper-review-payment-intra-company-payment.label\"\n        >\n          Intracompany payment\n        </div>\n      </div>\n\n      <div class=\"bb-item-log bb-block bb-block--lg\">\n        <div class=\"bb-item-log__record item-log__record--has-bullet\">\n          <div class=\"bb-stack bb-stack--align-top\">\n            <div\n              class=\"bb-item-log-record__bullet-icon bb-item-log-record__bullet-icon--filled bb-stack__item bb-stack__item--spacing-md\"\n            ></div>\n            <div class=\"bb-item-log-record__details\">\n              <bb-payment-initiator-details [data]=\"payment?.initiator\" [paymentConfig]=\"paymentConfig\">\n              </bb-payment-initiator-details>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-item-log__record item-log__record--has-bullet\">\n          <div class=\"bb-stack bb-stack--align-top\">\n            <div class=\"bb-item-log-record__bullet-icon bb-stack__item bb-stack__item--spacing-md\"></div>\n            <div class=\"bb-item-log-record__details\">\n              <bb-creditor-account [data]=\"payment?.counterparty\" [paymentConfig]=\"paymentConfig\">\n              </bb-creditor-account>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block--lg\">\n        <bb-payment-remittance-details\n          [data]=\"payment?.remittanceInfo\"\n          [transferFee]=\"payment?.transferFee\"\n          [chargeBearer]=\"payment?.chargeBearer\"\n          [forexDetails]=\"methods?.getForexDetails(payment)\"\n          [paymentConfig]=\"paymentConfig\"\n        ></bb-payment-remittance-details>\n      </div>\n\n      <bb-payment-creditor-details\n        [data]=\"payment?.counterparty\"\n        [paymentConfig]=\"paymentConfig\"\n      ></bb-payment-creditor-details>\n\n      <bb-payment-counterparty-details\n        [data]=\"payment?.counterparty\"\n        [paymentConfig]=\"paymentConfig\"\n      ></bb-payment-counterparty-details>\n\n      <bb-payment-schedule-details\n        [data]=\"payment?.schedule\"\n        [paymentConfig]=\"paymentConfig\"\n      ></bb-payment-schedule-details>\n\n      <div\n        *ngIf=\"\n          payment?.remittanceInfo?.description ||\n          payment?.remittanceInfo?.paymentReference ||\n          payment?.counterparty.messageToBank ||\n          payment?.counterparty.remittanceInformation\n        \"\n      >\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.paymentReference\">\n          <div class=\"bb-text-bold\" data-role=\"payment-reference-label\">\n            <bb-payord-dynamic-label\n              name=\"paymentReference\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Payment reference\"\n              i18n-defaultLabel=\"@@omni-payment-wrapper-review-remittance-info-payment-reference.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-reference\">\n            {{ payment?.remittanceInfo?.paymentReference }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md bb-inline-stack bb-stack--align-top\">\n          <bb-icon-ui name=\"subject\" class=\"bb-stack__item bb-stack__item--spacing-sm\"></bb-icon-ui>\n          <div class=\"bb-stack__item\">\n            <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n              <bb-payord-dynamic-label\n                name=\"description\"\n                parentName=\"remittanceInfo\"\n                defaultLabel=\"Memo\"\n                i18n-defaultLabel=\"@@omni-payment-wrapper-review-remittance-info-description.label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div class=\"break-word\" data-role=\"payment-description\">\n              {{ payment?.remittanceInfo?.description }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty.remittanceInformation\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary\"\n              i18n-defaultLabel=\"@@omni-payment-wrapper-review-counterparty-message-to-beneficiary.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ payment?.counterparty?.remittanceInformation }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.messageToBank || payment?.counterparty?.messageToBank\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary bank\"\n              i18n-defaultLabel=\"@@omni-payment-wrapper-review-message-to-bank.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ payment?.counterparty?.messageToBank || payment?.messageToBank }}\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </fieldset>\n\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      class=\"bb-button-bar__button\"\n      data-role=\"submit-button\"\n      (click)=\"methods?.submit()\"\n      [disabled]=\"methods?.isSubmitting$() | async\"\n      *ngIf=\"!methods?.isApprovalEnabled()\"\n      i18n=\"@@omni-payment-wrapper-review-btn-group-submit-payment.label\"\n    >\n      Confirm and Send Money\n    </button>\n    <div class=\"btn-group bb-button-bar__button\" data-role=\"button-group\" *ngIf=\"methods?.isApprovalEnabled()\">\n      <bb-load-button-ui\n        color=\"primary\"\n        [isLoading]=\"methods?.isSubmitting$() | async\"\n        (click)=\"methods?.submit()\"\n        i18n=\"@@omni-payment-wrapper-review-btn-group-submit-payment.label\"\n      >\n        Submit\n      </bb-load-button-ui>\n\n      <bb-dropdown-menu-ui\n        class=\"btn-group\"\n        btnColor=\"primary\"\n        icon=\"caret-down\"\n        data-role=\"dropdown-menu\"\n        container=\"body\"\n        position=\"top-right\"\n      >\n        <ng-template bbDropdownMenuItem>\n          <button\n            role=\"menuitem\"\n            type=\"button\"\n            class=\"dropdown-item\"\n            data-role=\"bus-submit-and-approve-button\"\n            [disabled]=\"methods?.isSubmitting$() | async\"\n            (bbKeyboardClick)=\"methods?.submit(true)\"\n            i18n=\"@@omni-payment-wrapper-review-btn-group-submit-and-approve-payment.label\"\n          >\n            Submit and Approve\n          </button>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n    <button\n      class=\"bb-button-bar__button\"\n      bbButton\n      color=\"secondary\"\n      data-role=\"edit-button\"\n      (click)=\"methods?.edit()\"\n      [disabled]=\"methods?.isSubmitting$() | async\"\n      i18n=\"@@omni-payment-wrapper-review-btn-group-edit-payment.label\"\n    >\n      Edit\n    </button>\n    <button\n      bbButton\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n      data-role=\"cancel-button\"\n      (click)=\"methods?.toggleDiscardDialog()\"\n      [disabled]=\"methods?.isSubmitting$() | async\"\n      i18n=\"@@omni-payment-wrapper-review-btn-group-discard-payment.label\"\n    >\n      Cancel\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #successScreen>\n  <div class=\"bb-text-align-center bb-block--xl\">\n    <picture>\n      <source srcset=\"{{ successImgNoMotion | async }}\" media=\"(prefers-reduced-motion: reduce)\" />\n      <img\n        srcset=\"{{ (successImg | async) + '?' + timestamp }}\"\n        alt=\"Success!\"\n        i18n-alt=\"Success!|Text for transfer succeeded@@omni-payment-wrapper.complete.transfer-succeeded\"\n        data-role=\"transfer-success-anim\"\n        class=\"img-fluid\"\n      />\n    </picture>\n    <div></div>\n    <bb-header-ui\n      headingClasses=\"bb-text-semi-bold\"\n      headingType=\"h2\"\n      heading=\"Success!\"\n      i18n-heading=\"Success!|Text for success@@omni-payment-wrapper.complete.success\"\n    ></bb-header-ui>\n    <div data-role=\"adapted-success-message\" *ngIf=\"!payment?.paymentOrderId; else editPaymentMessageTemplate\">\n      <span\n        *ngIf=\"!isScheduledTransfer\"\n        class=\"bb-text-support\"\n        i18n=\"Success Transfer|Text for success transfer@@omni-payment-wrapper.complete.success-message\"\n      >\n        You’ve just transferred\n        {{ payment?.remittanceInfo?.amountGroup.currency }}\n        {{ payment?.remittanceInfo?.amountGroup.amount }} to {{ payment?.counterparty.name }}'s.\n      </span>\n      <span\n        *ngIf=\"isScheduledTransfer\"\n        class=\"bb-text-support\"\n        i18n=\"\n          Success Scheduled Transfer|Text for success scheduled\n          transfer@@omni-payment-wrapper.scheduled-transfer.complete.success-message\"\n      >\n        You’ve just scheduled transfer to {{ payment?.counterparty.name }}'s.\n      </span>\n    </div>\n    <ng-template #editPaymentMessageTemplate>\n      <span\n        class=\"bb-text-support\"\n        i18n=\"Success edit transfer|Text for edit transfer success@@omni-payment-wrapper.complete.success-edit-message\"\n        data-role=\"adapted-success-edit-message\"\n      >\n        You’ve just edited the scheduled transfer to\n        {{ payment?.counterparty.name }}'s.\n      </span>\n    </ng-template>\n  </div>\n  <div class=\"bb-text-align-center bb-block bb-block--xl\" *ngIf=\"payment?.counterparty?.saveNewContact\">\n    <div class=\"bb-payment-account-details-card bb-inline-stack\">\n      <div class=\"bb-inline-stack\">\n        <ng-container *ngIf=\"!!(methods?.getSaveContactResponse$ | async)?.id; else saveContactFail\">\n          <bb-icon-ui name=\"success\" color=\"success\" class=\"bb-stack__item bb-stack__item--spacing-sm\"></bb-icon-ui>\n          <span\n            i18n=\"\n              Success Save Contact|Text for success save contact@@omni-payment-wrapper.complete.success-save-contact\"\n            >{{ payment?.counterparty?.name }} is saved to your contacts</span\n          >\n        </ng-container>\n        <ng-template #saveContactFail>\n          <bb-icon-ui\n            name=\"error-outline\"\n            color=\"danger\"\n            class=\"bb-stack__item bb-stack__item--spacing-sm\"\n          ></bb-icon-ui>\n          <span i18n=\"Fail Save Contact|Text for fail save contact@@omni-payment-wrapper.complete.fail-save-contact\"\n            >Can’t save {{ payment?.counterparty?.name }} to your contacts. Please try again later.</span\n          >\n        </ng-template>\n      </div>\n    </div>\n  </div>\n  <div class=\"bb-text-align-center\">\n    <div class=\"bb-block bb-block--md\">\n      <button\n        *ngIf=\"!payment?.paymentOrderId\"\n        bbButton\n        color=\"primary\"\n        (click)=\"methods?.reset()\"\n        i18n=\"Make another transfer button|Make another transfer@@omni-payment-wrapper.complete.button.transfer-done\"\n      >\n        Make another transfer\n      </button>\n      <button\n        *ngIf=\"payment?.paymentOrderId\"\n        bbButton\n        color=\"primary\"\n        (click)=\"methods?.navigateToAfterSuccessPage()\"\n        i18n=\"\n          View scheduled transfers button|View scheduled\n          transfers@@omni-payment-wrapper.complete.button.scheduled-transfer-done\"\n      >\n        View scheduled transfers\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<bb-modal-ui\n  [isOpen]=\"methods?.showDiscardDialog()\"\n  (cancel)=\"methods?.toggleDiscardDialog()\"\n  (confirm)=\"methods?.reset()\"\n>\n  <bb-modal-header-ui\n    title=\"Discard entered data?\"\n    i18n-title=\"omni-payment-adapted-review-discard-modal-title\"\n  ></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <ng-container i18n=\"@@omni-payment-adapted-review-discard-modal-content\">\n        Are you sure to exit and discard all changes? Entered data will be lost.\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"methods?.reset()\"\n          data-role=\"discard-action-btn\"\n          i18n=\"@@omni-payment-adapted-review-discard-modal-discard-btn\"\n        >\n          Discard\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          (click)=\"methods?.toggleDiscardDialog()\"\n          data-role=\"cancel-action-btn\"\n          i18n=\"@@omni-payment-adapted-review-discard-modal-cancel-btn\"\n        >\n          Cancel\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Component, ElementRef, Inject, OnDestroy, OnInit, Optional, TemplateRef, ViewChild } from '@angular/core';\nimport {\n  ApprovalStatus,\n  BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN,\n  BreachReportError,\n  contactItemToService,\n  defaultPaymentSuccessEventName,\n  ForexDetails,\n  getForexDetailsFromPayment,\n  getLabelFromPaymentConfig,\n  InitiatePaymentHeaderStates,\n  InitiatePaymentOptions,\n  isObjectTruthy,\n  ModalState,\n  NavigationService,\n  noWhitespaceValidator,\n  PaymentDetails,\n  PaymentError,\n  PaymentErrors,\n  PaymentHooks,\n  PaymentHooksOptions,\n  PaymentMode,\n  PaymentOrderHttpService,\n  PaymentOrderResponseItem,\n  PaymentState,\n  PaymentSubmitStatuses,\n  PaymentTypeConfig,\n  PayordPaymentError,\n  ProgressStatus,\n  ReviewScreens,\n  ReviewTemplateContext,\n  RoutableModalService,\n  StateService,\n  Status,\n  toPostRequest,\n  triggerPaymentHook,\n} from '@backbase/payment-orders-ang';\n\nimport { catchError, filter, map, pluck, takeUntil, tap } from 'rxjs/operators';\nimport { BehaviorSubject, EMPTY, Observable, of, Subject } from 'rxjs';\nimport {\n  PaymentOrderGetResponse,\n  PaymentOrderProgressStatusGet,\n  PaymentOrdersPostResponse,\n  PaymentOrdersValidatePost,\n} from '@backbase/data-ang/payment-order';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TransactionCallbackParam, TransactionSigningHelperService } from '@backbase/identity-auth/transaction-signing';\nimport { ActiveContactStatus, ContactsPostResponseBody } from '@backbase/data-ang/contact-manager';\nimport { PaymentTemplatesPostRequest } from '@backbase/data-ang/payment-template';\nimport { PurposeOfPayment } from '@backbase/data-ang/payment-order-options';\n\nimport { CreatePaymentService } from '../../services/create-payment.service';\nimport { CreatePaymentConfigSetupService } from '../../services/create-payment-config-setup.service';\nimport { commonI18n, reviewI18n } from '../../constants/initiate-payment.i18n';\nimport { CapabilityData, P2PLimitReasonCodes } from '../../models/create-payment.model';\n\n@Component({\n  selector: 'bb-review-payment',\n  templateUrl: 'review-payment.component.html',\n})\nexport class ReviewPaymentContainerComponent implements OnInit, OnDestroy {\n  private showConfirmation = false;\n  private paymentItem$!: Observable<PaymentDetails>;\n  private gc$ = new Subject();\n  private saveContactResponse$ = new BehaviorSubject<ContactsPostResponseBody | null>(null);\n  private paymentOrderId = '';\n  private paymentMessage?: string;\n  private approvalPending = false;\n  private enablePaymentTemplate = true;\n  private saveTemplate = false;\n  private canApprove = false;\n  private paymentForm?: FormGroup;\n  private paymentResponse?: Partial<PaymentOrderResponseItem>;\n\n  @ViewChild('alertContainer') alertContainer!: ElementRef;\n  header: string | undefined;\n  genericError?: string;\n  showBreachDetails = false;\n  paymentMode = PaymentMode;\n  paymentItem!: PaymentDetails;\n  isErrorTitleDisplayed = true;\n  reviewScreens = ReviewScreens;\n  breachError?: BreachReportError;\n  paymentTemplateForm!: FormGroup;\n  widgetOptions: InitiatePaymentOptions = {};\n  errors: { key: string; message: string }[] = [];\n  submitting$ = new BehaviorSubject<boolean>(false);\n  savingTemplate$ = new BehaviorSubject<boolean>(false);\n  reviewTemplate: TemplateRef<ReviewTemplateContext> | undefined;\n  paymentStatus$ = new BehaviorSubject<string | undefined>(undefined);\n  selectedPaymentConfig$: Observable<PaymentTypeConfig | undefined> = this.createPaymentService.selectedPaymentConfig$;\n  paymentTemplateModalState: BehaviorSubject<ModalState | undefined> = new BehaviorSubject<ModalState | undefined>(\n    undefined,\n  );\n\n  methods = {\n    edit: this.onEdit.bind(this),\n    submit: this.submitPayment.bind(this),\n    reset: this.resetPayment.bind(this),\n    discard: this.discardPayment.bind(this),\n    toggleDiscardDialog: this.toggleConfirmationDialog.bind(this),\n    showDiscardDialog: this.showDiscardDialog.bind(this),\n    isApprovalEnabled: this.isApprovalEnabled.bind(this),\n    isPaymentTemplateEnabled: this.isPaymentTemplateEnabled.bind(this),\n    isNewPaymentEnabled: this.isNewPaymentEnabled.bind(this),\n    isSavingTemplate$: this.isSavingTemplate$.bind(this),\n    getPaymentMessage: this.getPaymentMessage.bind(this),\n    getPurposeDescription: this.getPurposeDescription.bind(this),\n    isSubmitting$: this.isSubmitting$.bind(this),\n    getLabelText: getLabelFromPaymentConfig,\n    getForexDetails: this.getForexDetails.bind(this),\n    showBreachModal: this.showBreachModal.bind(this),\n    isTemplateSaved: this.isTemplateSaved.bind(this),\n    openTemplateModal: this.openTemplateModal.bind(this),\n    doneEditing: this.doneEditing.bind(this),\n    navigateToAfterSuccessPage: this.navigateToAfterSuccessPage.bind(this),\n    getPaymentResponse: this.getPaymentResponse.bind(this),\n    getSaveContactResponse$: this.saveContactResponse$,\n    getPaymentStatusType: this.getPaymentStatusType.bind(this),\n  };\n\n  createTemplatePermission$ = this.paymentOrderHttpService.createPermission$.pipe(\n    map(() => true),\n    catchError((error) => of(false)),\n  );\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly stateService: StateService,\n    @Inject(PUBSUB) private readonly eventBus: Pubsub,\n    private readonly navigationService: NavigationService,\n    private readonly createPaymentService: CreatePaymentService,\n    @Optional() private readonly modalService: RoutableModalService,\n    private readonly paymentOrderHttpService: PaymentOrderHttpService,\n    private readonly createPaymentSetup: CreatePaymentConfigSetupService,\n    @Optional()\n    private readonly transactionSigningHelper: TransactionSigningHelperService,\n    @Optional()\n    @Inject(BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN)\n    readonly paymentErrors: PayordPaymentError,\n  ) {}\n\n  onEdit(): void {\n    this.stateService.setPaymentState(PaymentState.EDIT);\n    this.navigationService.form();\n  }\n\n  ngOnInit(): void {\n    this.stateService.setPaymentState(PaymentState.REVIEW);\n    this.canApprove = this.stateService.canApprove;\n\n    this.createPaymentSetup.reviewTemplate$\n      .pipe(\n        takeUntil(this.gc$),\n        filter((template) => !!template),\n      )\n      .subscribe((template) => (this.reviewTemplate = template));\n\n    this.createPaymentSetup.options$.pipe(takeUntil(this.gc$)).subscribe((options) => {\n      this.isErrorTitleDisplayed = Boolean(options.isErrorTitleDisplayed);\n      this.widgetOptions = options;\n\n      this.header = this.createPaymentSetup.getHeader(InitiatePaymentHeaderStates.REVIEW);\n    });\n\n    this.paymentItem$ = this.stateService.form$.pipe(\n      takeUntil(this.gc$),\n      tap((form?: FormGroup) => (this.paymentForm = form)),\n      map((form) => form?.getRawValue() || {}),\n    );\n\n    this.paymentItem$.pipe(takeUntil(this.gc$)).subscribe((data?: PaymentDetails) => {\n      if (data && isObjectTruthy(data)) {\n        this.paymentItem = data;\n      } else {\n        this.stateService.setPaymentState(PaymentState.INITIAL);\n        this.navigationService.form();\n      }\n    });\n\n    this.paymentTemplateForm = this.buildPaymentTemplateForm();\n  }\n\n  isSavingTemplate$(): BehaviorSubject<boolean> {\n    return this.savingTemplate$;\n  }\n\n  private onSubmit(approved = false): void {\n    this.submitting$.next(true);\n\n    if (this.paymentItem.counterparty.saveNewContact) {\n      this.saveNewContact();\n    }\n\n    this.postPaymentOrder(approved);\n  }\n\n  private saveNewContact(): void {\n    this.paymentOrderHttpService\n      .saveNewContact({\n        ...contactItemToService(this.paymentItem.counterparty),\n        accessContextScope: this.widgetOptions.accessContextScope,\n      })\n      .pipe(takeUntil(this.gc$))\n      .subscribe((response: ContactsPostResponseBody | null) => {\n        const { id, status } = response || {};\n        this.saveContactResponse$.next(response);\n        const contactSaved = !!id;\n        this.paymentOrderHttpService.showNotification(contactSaved, {\n          header: contactSaved\n            ? status === ActiveContactStatus.PENDINGAPPROVAL\n              ? reviewI18n.newContactSubmitSuccessPendingApproval\n              : reviewI18n.newContactSubmitSuccess\n            : reviewI18n.newContactSubmitFailure,\n        });\n      });\n  }\n\n  private handlePaymentError(error: PaymentError) {\n    this.genericError = error?.error?.message;\n    this.errors = error?.error?.errors;\n    if (this.errors?.length || this.genericError) {\n      const errorObject: PaymentErrors = {\n        errorResponse: error,\n        genericMessage: this.genericError,\n        errors: this.errors,\n        paymentErrors: this.paymentErrors,\n        notificationHeader: reviewI18n.submitPaymentFailure,\n      };\n      this.paymentOrderHttpService.manageErrorResponse(errorObject);\n    } else {\n      this.paymentOrderHttpService.showNotification(false, {\n        header: reviewI18n.submitPaymentFailureUnknownErrorHeader,\n        message: reviewI18n.submitPaymentFailureUnknownError,\n      });\n    }\n    const message = error?.statusText;\n    let status: string;\n    switch (message) {\n      case 'rejected_by_user':\n        status = ProgressStatus.USER_DECLINED;\n        break;\n      default:\n        status = 'ERROR';\n    }\n\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n  }\n\n  private putOrPostPaymentOrder(post: PaymentOrdersValidatePost): Observable<PaymentOrdersPostResponse> {\n    const isCopyPayment = this.widgetOptions?.paymentMode === PaymentMode.COPY_PAYMENT;\n    const paymentOrderId = this.paymentItem.paymentOrderId;\n    return paymentOrderId && !isCopyPayment\n      ? this.paymentOrderHttpService.putPaymentOrder({ ...post, id: paymentOrderId }, paymentOrderId)\n      : this.paymentOrderHttpService.postPaymentOrder(post);\n  }\n\n  private postPaymentOrder(approved: boolean): void {\n    const shouldApprove = approved ? { approved } : null;\n    this.putOrPostPaymentOrder(toPostRequest({ ...this.paymentItem, ...shouldApprove }))\n      .pipe(\n        takeUntil(this.gc$),\n        catchError((error: HttpErrorResponse) => {\n          this.alertContainer?.nativeElement.scrollIntoView(false);\n\n          if (this.hasLimitBreach(error)) {\n            this.paymentStatus$.next('LIMIT_BREACH');\n            this.breachError = error.error || error;\n            this.submitting$.next(false);\n          } else {\n            this.handlePaymentError(error as PaymentError);\n          }\n\n          return EMPTY;\n        }),\n      )\n      .subscribe((response: PaymentOrdersPostResponse | CapabilityData) => {\n        if (this.transactionSigningHelper?.isTransactionSigningResponse(response)) {\n          this.handleTransactionSigning(response as CapabilityData);\n        } else {\n          this.handlePaymentSubmit(response as PaymentOrdersPostResponse);\n        }\n      });\n  }\n\n  private handlePaymentSubmit(response: PaymentOrderResponseItem | Omit<PaymentOrderGetResponse, 'version'>): void {\n    const { status: _paymentStatus } = response;\n    const isApprovalRejected = _paymentStatus === ApprovalStatus.REJECTED;\n    const status = !!response.id && !isApprovalRejected ? 'SUCCESS' : _paymentStatus || 'ERROR';\n\n    this.paymentOrderId = response?.id;\n    this.approvalPending = _paymentStatus === Status.ENTERED || _paymentStatus === ProgressStatus.PENDING_APPROVAL;\n\n    if (!!response.id && !isApprovalRejected) {\n      const isEditPayment = this.widgetOptions?.paymentMode === PaymentMode.EDIT_PAYMENT;\n      const { submitSuccess, submitSuccessPendingApproval, editSubmitSuccess } = this.widgetOptions.isDebitPayment\n        ? reviewI18n.debitPayment\n        : reviewI18n.defaultPayment;\n\n      const header = isEditPayment\n        ? editSubmitSuccess\n        : this.approvalPending\n        ? submitSuccessPendingApproval\n        : submitSuccess;\n\n      this.paymentOrderHttpService.showNotification(true, { header });\n\n      this.eventBus.publish(this.widgetOptions.successEventName || defaultPaymentSuccessEventName, true);\n      this.header = this.createPaymentSetup.getHeader(InitiatePaymentHeaderStates.SUBMITTED);\n    }\n\n    this.paymentResponse = response;\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n  }\n\n  private handleTransactionSigning(response: CapabilityData): void {\n    if (!this.transactionSigningHelper) {\n      return;\n    }\n    const paymentOrderId = response['payment-order-id'];\n    if (paymentOrderId) {\n      this.transactionSigningHelper.getTransactionInfo({\n        data: response,\n        asyncPollingOptions: {\n          pollInterval: this.widgetOptions.pollInterval,\n          maxRetries: 3,\n          pollUntilFn: this.isPaymentConfirmed,\n          complete$: this.gc$,\n        },\n        fetchFn: this.getPaymentProgressStatus.bind(this),\n        onSuccess: this.onTransactionSigningSuccess.bind(this, paymentOrderId),\n        onRejected: this.onTransactionSigningReject.bind(this, paymentOrderId),\n        onDeclined: this.onTransactionSigningDecline.bind(this),\n        onError: this.onTransactionSigningError.bind(this),\n      });\n    }\n  }\n\n  private onTransactionSigningSuccess(paymentOrderId: string): void {\n    this.paymentOrderHttpService\n      .getPayment(paymentOrderId)\n      .pipe(takeUntil(this.gc$))\n      .subscribe(this.handlePaymentSubmit.bind(this));\n  }\n\n  private onTransactionSigningReject(paymentOrderId: string, _: TransactionCallbackParam): void {\n    this.handleRejectedPayment(paymentOrderId);\n  }\n\n  private onTransactionSigningDecline({ status }: TransactionCallbackParam): void {\n    const header = this.widgetOptions.isDebitPayment ? reviewI18n.submitDebitFailure : reviewI18n.submitPaymentFailure;\n\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n    this.paymentOrderHttpService.showNotification(false, { header });\n  }\n\n  private onTransactionSigningError({ status }: TransactionCallbackParam): void {\n    const header = this.widgetOptions.isDebitPayment ? reviewI18n.submitDebitFailure : reviewI18n.submitPaymentFailure;\n    const errorMessage = status === 'COED' ? reviewI18n.submitPaymentApprovalFailureCOED : { header };\n\n    this.submitting$.next(false);\n    this.paymentStatus$.next(status === 'COED' ? 'COED' : 'ERROR');\n    this.paymentOrderHttpService.showNotification(false, { ...errorMessage });\n  }\n\n  private handleRejectedPayment(paymentOrderId: string): void {\n    this.paymentOrderHttpService\n      .getPayment(paymentOrderId)\n      .pipe(takeUntil(this.gc$))\n      .subscribe((response) => {\n        if (response.reasonCode === 'LTBR') {\n          this.paymentStatus$.next('LIMIT_BREACH');\n          this.breachError = {\n            message: '',\n            breachReport: response.breachReports,\n          };\n        } else {\n          const header = this.widgetOptions.isDebitPayment\n            ? reviewI18n.submitDebitFailure\n            : reviewI18n.submitPaymentFailure;\n\n          this.paymentOrderHttpService.showNotification(false, { header });\n          this.paymentStatus$.next('ERROR');\n        }\n\n        this.submitting$.next(false);\n      });\n  }\n\n  private getPaymentProgressStatus(data?: CapabilityData): Observable<string> {\n    return this.paymentOrderHttpService.getPaymentProgressStatus(data?.['payment-order-id'] || '').pipe(\n      map((res) => {\n        if (\n          res?.progressStatus === PaymentOrderProgressStatusGet.ProgressStatusEnum.REJECTED &&\n          res.reasonCode === 'COED'\n        ) {\n          res = {\n            ...res,\n            progressStatus: res.reasonCode as PaymentOrderProgressStatusGet.ProgressStatusEnum,\n          };\n        }\n\n        return res;\n      }),\n      pluck('progressStatus'),\n    );\n  }\n\n  private isPaymentConfirmed(status: string): boolean {\n    return !!status && status !== ProgressStatus.CONFIRMATION_PENDING && status !== ProgressStatus.SENDING;\n  }\n\n  private onHooksDone(approved: boolean, success = true): void {\n    if (success) {\n      this.onSubmit(approved);\n    } else {\n      this.submitting$.next(false);\n    }\n  }\n\n  private hasLimitBreach(response: any): boolean {\n    const isP2PLimitBreach = Object.values(P2PLimitReasonCodes).includes(response.reasonCode);\n    return !!response?.breachReport || !!response?.error?.breachReport || isP2PLimitBreach;\n  }\n\n  showBreachModal(): void {\n    this.showBreachDetails = true;\n  }\n\n  getPaymentResponse(): Partial<PaymentOrderResponseItem> | undefined {\n    return this.paymentResponse;\n  }\n\n  hideBreachModal(): void {\n    this.showBreachDetails = false;\n  }\n\n  isTemplateSaved(): boolean {\n    return this.saveTemplate;\n  }\n\n  private buildPaymentTemplateForm(): FormGroup {\n    return this.formBuilder.group({\n      templateName: ['', [Validators.required, noWhitespaceValidator]],\n    });\n  }\n\n  openTemplateModal(): void {\n    this.paymentTemplateModalState.next(ModalState.Preview);\n  }\n\n  closeTemplateModal(): void {\n    this.paymentTemplateModalState.next(ModalState.Hidden);\n    this.paymentTemplateForm.reset();\n  }\n\n  submitPaymentTemplate(templateName = ''): void {\n    if (this.paymentOrderId) {\n      const paymentOrderId = this.paymentOrderId;\n      const name = templateName || this.paymentTemplateForm.controls['templateName'].value;\n      const templateObject: PaymentTemplatesPostRequest = {\n        paymentOrderId,\n        name,\n      };\n\n      if (this.paymentTemplateForm.invalid) {\n        return;\n      }\n\n      this.savingTemplate$.next(true);\n\n      this.paymentOrderHttpService\n        .postPaymentTemplate(templateObject)\n        .pipe(takeUntil(this.gc$))\n        .subscribe(\n          () => {\n            this.saveTemplate = true;\n            this.savingTemplate$.next(false);\n            this.paymentOrderHttpService.showNotification(true, {\n              header: commonI18n.templateSaveSuccess(name),\n              headerContext: { name },\n            });\n            this.paymentTemplateForm.reset();\n            this.paymentTemplateModalState.next(ModalState.Hidden);\n            this.eventBus.publish(\n              <string>(this.widgetOptions.successEventName || defaultPaymentSuccessEventName),\n              true,\n            );\n          },\n          () => {\n            this.paymentOrderHttpService.showNotification(false, {\n              header: commonI18n.templateSaveFailed,\n            });\n            this.savingTemplate$.next(false);\n          },\n        );\n    }\n  }\n\n  submitPayment(approved = false): void {\n    const hasHooks = this.createPaymentSetup.hooks && this.createPaymentSetup.hooks[PaymentHooks.onSubmit];\n    this.submitting$.next(true);\n    if (hasHooks) {\n      triggerPaymentHook(\n        <PaymentHooksOptions>this.createPaymentSetup.hooks,\n        PaymentHooks.onSubmit,\n        this.onHooksDone.bind(this, approved),\n        this.paymentForm,\n      );\n    } else {\n      this.onSubmit(approved);\n    }\n  }\n\n  getForexDetails(payment: PaymentDetails): Partial<ForexDetails> | undefined {\n    return getForexDetailsFromPayment(payment);\n  }\n\n  isApprovalEnabled(): boolean {\n    return !!this.widgetOptions.enableApprovals && this.canApprove;\n  }\n\n  isPaymentTemplateEnabled(): boolean {\n    return !!this.widgetOptions.enableSavePaymentAsTemplate && this.enablePaymentTemplate;\n  }\n\n  isNewPaymentEnabled() {\n    return this.widgetOptions.enableNewPaymentButton !== false;\n  }\n\n  discardPayment() {\n    if (this.widgetOptions?.isModalView) {\n      this.modalService?.closeModal();\n    } else {\n      this.resetPayment();\n    }\n  }\n\n  resetPayment(): void {\n    this.showConfirmation = false;\n    this.widgetOptions.paymentMode = PaymentMode.CREATE_PAYMENT;\n    this.stateService.resetForm();\n    this.stateService.setPaymentState(PaymentState.INITIAL);\n    this.navigationService.form();\n  }\n\n  toggleConfirmationDialog(): void {\n    this.showConfirmation = !this.showConfirmation;\n  }\n\n  showDiscardDialog(): boolean {\n    return this.showConfirmation;\n  }\n\n  isApprovalPending(): boolean {\n    return this.approvalPending;\n  }\n\n  isSubmitting$(): BehaviorSubject<boolean> {\n    return this.submitting$;\n  }\n\n  getPaymentStatusType(): PaymentSubmitStatuses {\n    return this.widgetOptions?.paymentMode === PaymentMode.EDIT_PAYMENT\n      ? PaymentSubmitStatuses.PENDING_EDITED\n      : this.isApprovalPending()\n      ? PaymentSubmitStatuses.PENDING\n      : PaymentSubmitStatuses.SUCCESS;\n  }\n\n  getPaymentMessage(): string | undefined {\n    return this.paymentMessage;\n  }\n\n  getPurposeDescription(purpose: string): string | undefined {\n    const purposes = this.paymentItem.inputFormFromSettings?.purposesOfPayment;\n    return purposes?.length ? purposes.find((item: PurposeOfPayment) => item.code === purpose)?.description : '';\n  }\n\n  doneEditing(): void {\n    this.modalService?.closeModal();\n  }\n\n  navigateToAfterSuccessPage(): void {\n    this.navigationService.afterSuccess();\n  }\n\n  ngOnDestroy(): void {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n}\n","<div class=\"position-relative\">\n  <ng-container\n    *ngTemplateOutlet=\"\n      reviewTemplate || (widgetOptions.reviewScreenType === reviewScreens.ADAPTED ? adaptedReviewTmpl : defaultTmpl);\n      context: {\n        $implicit: paymentItem,\n        status: paymentStatus$ | async,\n        isSubmitting: submitting$ | async,\n        methods: methods,\n        paymentConfig: selectedPaymentConfig$ | async,\n        breachError: breachError\n      }\n    \"\n  ></ng-container>\n</div>\n\n<ng-template\n  let-payment\n  let-paymentConfig=\"paymentConfig\"\n  let-status=\"status\"\n  let-methods=\"methods\"\n  let-errors=\"errors\"\n  #adaptedReviewTmpl\n>\n  <bb-adapted-review-container\n    [payment]=\"payment\"\n    [paymentConfig]=\"paymentConfig\"\n    [status]=\"status\"\n    [methods]=\"methods\"\n    [breachError]=\"breachError\"\n  ></bb-adapted-review-container>\n</ng-template>\n\n<ng-template\n  let-payment\n  let-paymentConfig=\"paymentConfig\"\n  let-status=\"status\"\n  let-methods=\"methods\"\n  let-isSubmitting=\"isSubmitting\"\n  let-breachError=\"breachError\"\n  #defaultTmpl\n>\n  <fieldset class=\"bb-fieldset bb-fieldset__no-outline\">\n    <bb-header-ui\n      *ngIf=\"header\"\n      data-role=\"page-title\"\n      headingClasses=\"bb-block bb-block--lg\"\n      headingType=\"h2\"\n      [heading]=\"header\"\n    ></bb-header-ui>\n    <div #alertContainer></div>\n    <ng-container *ngIf=\"payment\">\n      <div class=\"bb-block bb-block--md\" *ngIf=\"status\">\n        <bb-payord-status-card\n          [status]=\"methods.getPaymentStatusType()\"\n          [isDebitPayment]=\"widgetOptions.isDebitPayment\"\n          *ngIf=\"status === 'SUCCESS'\"\n        ></bb-payord-status-card>\n\n        <ng-container *ngIf=\"!!status && status !== 'SUCCESS'\">\n          <ng-container *ngIf=\"errors?.length; else noSpecificError\">\n            <ng-container *ngFor=\"let error of errors\">\n              <ng-container *ngIf=\"error.message; else noSpecificError\">\n                <bb-alert-ui title=\"\" (close)=\"(false)\" modifier=\"error\">\n                  <div data-role=\"failure-message\" class=\"bb-text-bold bb-text-default d-inline-flex\">\n                    <ng-container *ngIf=\"isErrorTitleDisplayed\">\n                      <span>\n                        <ng-container\n                          *ngIf=\"!widgetOptions.isDebitPayment\"\n                          i18n=\"@@initiate-payment.review.payment-failed-alert.title\"\n                          >Payment data error:</ng-container\n                        >\n                        <ng-container\n                          *ngIf=\"widgetOptions.isDebitPayment\"\n                          i18n=\"@@initiate-payment.review.debit-failed-alert.title\"\n                          >Debit data error:</ng-container\n                        > </span\n                      >&nbsp;\n                    </ng-container>\n                    <span>{{ $any(error)?.message }}</span>\n                  </div>\n                </bb-alert-ui>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n\n          <ng-template #noSpecificError>\n            <ng-container *ngIf=\"genericError; else unknownError\">\n              <bb-alert-ui title=\"\" modifier=\"error\">\n                <div class=\"bb-text-bold bb-text-default\">\n                  <ng-container *ngIf=\"isErrorTitleDisplayed\">\n                    <span>\n                      <ng-container\n                        *ngIf=\"!widgetOptions.isDebitPayment\"\n                        i18n=\"@@initiate-payment-payments-generic-message-alert-title\"\n                        >Payment data error:</ng-container\n                      >\n                      <ng-container\n                        *ngIf=\"widgetOptions.isDebitPayment\"\n                        i18n=\"@@initiate-payment-debit-generic-message-alert-title\"\n                        >Debit data error:</ng-container\n                      >\n                    </span>\n                  </ng-container>\n                  <span>{{ genericError }}</span>\n                </div>\n              </bb-alert-ui>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #unknownError>\n            <ng-container *ngIf=\"status !== 'USER_DECLINED' && status !== 'LIMIT_BREACH' && status !== 'COED'\">\n              <div class=\"bb-stack__item bb-text-bold\">\n                <bb-alert-ui\n                  i18n-title=\"@@initiate-payment-review.payments-unknown-error-alert-title\"\n                  title=\"Server error: Unknown error occurred.\"\n                  modifier=\"error\"\n                >\n                </bb-alert-ui>\n              </div>\n            </ng-container>\n          </ng-template>\n\n          <ng-container *ngIf=\"status === 'USER_DECLINED' || status === 'LIMIT_BREACH' || status === 'COED'\">\n            <ng-container [ngSwitch]=\"status\">\n              <bb-alert-ui title=\"\" (close)=\"(false)\" modifier=\"error\" [ngSwitch]=\"status\">\n                <div class=\"bb-stack bb-text-default\" *ngSwitchCase=\"'LIMIT_BREACH'\">\n                  <div\n                    class=\"bb-stack__item bb-text-bold\"\n                    data-role=\"failure-message\"\n                    i18n=\"@@initiate-payment.review.limit-breach-error\"\n                  >\n                    Payment cannot be submitted because your limits have been breached\n                  </div>\n                  <button\n                    bbButton\n                    color=\"unstyled\"\n                    buttonSize=\"sm\"\n                    i18n=\"@@initiate-payment.review.limit-breach-error-see-details-button\"\n                    class=\"bb-stack__item bb-stack__item--push-right alert-link\"\n                    data-role=\"failure-see-details\"\n                    (click)=\"methods.showBreachModal()\"\n                  >\n                    See details\n                  </button>\n                </div>\n                <div *ngSwitchCase=\"'USER_DECLINED'\" data-role=\"failure-message\">\n                  <div\n                    i18n=\"@@initiate-payment.review.txn-signing-cancelled-error-title\"\n                    class=\"bb-text-bold bb-text-default\"\n                  >\n                    Payment not submitted\n                  </div>\n                  <div i18n=\"@@initiate-payment.review.txn-signing-cancelled-error-msg\" class=\"bb-text-default\">\n                    The transaction signing request was cancelled\n                  </div>\n                </div>\n                <div *ngSwitchCase=\"'COED'\" data-role=\"failure-message\">\n                  <div i18n=\"@@edit-payment.review.txn-signing-coed-error-title\" class=\"bb-text-bold bb-text-default\">\n                    Payment not submitted\n                  </div>\n                  <div i18n=\"@@edit-payment.review.txn-signing-coed-error-msg\" class=\"bb-text-default\">\n                    Payment is already edited by another user\n                  </div>\n                </div>\n              </bb-alert-ui>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div\n        *ngIf=\"payment?.isIntraLegalEntity || payment?.remittanceInfo?.urgent\"\n        class=\"bb-block bb-block--md bb-inline-stack bb-text-support\"\n      >\n        <div class=\"bb-inline-stack bb-inline-stack__item\" *ngIf=\"payment?.isIntraLegalEntity\">\n          <bb-icon-ui name=\"domain\"></bb-icon-ui>\n          <div class=\"bb-inline-stack__item\"></div>\n          <div\n            class=\"bb-inline-stack__item bb-text-bold bb-inline-stack__item--spacing-sm\"\n            i18n=\"@@initiate-payment.review.intra-company-transfer-label\"\n          >\n            Intracompany payment\n          </div>\n        </div>\n        <div *ngIf=\"payment?.remittanceInfo?.urgent\" class=\"bb-inline-stack bb-inline-stack__item\">\n          <bb-icon-ui name=\"priority-high\"></bb-icon-ui>\n          <div class=\"bb-inline-stack__item\"></div>\n          <div\n            class=\"bb-inline-stack__item bb-text-bold\"\n            data-role=\"payment-is-urgent\"\n            i18n=\"@@initiate-payment.review.urgent-transfer-label\"\n          >\n            Urgent payment\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-payment-account-details-card__container d-none d-md-flex\">\n        <div class=\"bb-text-bold w-md-50\">\n          <ng-container *ngTemplateOutlet=\"dynamicLabelInitiator\"></ng-container>\n        </div>\n        <div class=\"mr-3\">&nbsp;</div>\n        <div class=\"bb-text-bold w-md-50\">\n          <ng-container *ngTemplateOutlet=\"dynamicLabelCounterparty\"></ng-container>\n        </div>\n      </div>\n\n      <div\n        class=\"bb-payment-account-details-card__container bb-block bb-block--md break-word\"\n        [ngClass]=\"{\n          'flex-column-reverse flex-md-row-reverse': widgetOptions.isDebitPayment\n        }\"\n      >\n        <div class=\"w-md-50\">\n          <div class=\"bb-text-bold d-md-none\">\n            <ng-container\n              *ngTemplateOutlet=\"widgetOptions.isDebitPayment ? dynamicLabelCounterparty : dynamicLabelInitiator\"\n            ></ng-container>\n          </div>\n          <bb-debitor-details-card [details]=\"payment?.initiator\"></bb-debitor-details-card>\n        </div>\n\n        <div class=\"justify-content-center align-items-center d-md-flex d-none\">\n          <bb-icon-ui class=\"bb-account-transfer-icon\" name=\"arrow-forward\"></bb-icon-ui>\n        </div>\n        <div class=\"d-md-none\">&nbsp;</div>\n\n        <div class=\"w-md-50\">\n          <div class=\"bb-text-bold d-md-none\">\n            <ng-container\n              *ngTemplateOutlet=\"widgetOptions.isDebitPayment ? dynamicLabelInitiator : dynamicLabelCounterparty\"\n            ></ng-container>\n          </div>\n          <bb-creditor-details-card [details]=\"payment?.counterparty\"></bb-creditor-details-card>\n        </div>\n      </div>\n\n      <ng-template #dynamicLabelInitiator>\n        <ng-container *ngIf=\"widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            name=\"counterparty\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"Collect from\"\n            i18n-defaultLabel=\"@@initiate-payment.review.debit-counterparty-title\"\n            data-role=\"initiator-label\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n        <ng-container *ngIf=\"!widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            name=\"initiator\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"From\"\n            i18n-defaultLabel=\"@@initiate-payment.review.initiator-title\"\n            data-role=\"initiator-label\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n      </ng-template>\n\n      <ng-template #dynamicLabelCounterparty>\n        <ng-container *ngIf=\"widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            data-role=\"payee-label\"\n            name=\"initiator\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"Transfer to\"\n            i18n-defaultLabel=\"@@initiate-payment.review.debit-initiator-title\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n        <ng-container *ngIf=\"!widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            data-role=\"payee-label\"\n            name=\"counterparty\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"To\"\n            i18n-defaultLabel=\"@@initiate-payment.review.counterparty-title\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n      </ng-template>\n\n      <bb-payord-amount-details\n        [config]=\"paymentConfig\"\n        [details]=\"payment?.remittanceInfo\"\n        [transferFee]=\"payment?.transferFee\"\n        [chargeBearer]=\"payment?.chargeBearer\"\n        [forexDetails]=\"methods.getForexDetails(payment)\"\n      ></bb-payord-amount-details>\n\n      <bb-payord-counterparty-details\n        [details]=\"payment?.counterparty\"\n        [config]=\"paymentConfig\"\n        [isDebitPayment]=\"payment?.isDebitPayment\"\n      ></bb-payord-counterparty-details>\n\n      <div\n        *ngIf=\"\n          payment?.messageToBank ||\n          payment?.remittanceInfo?.description ||\n          payment?.remittanceInfo?.paymentReference ||\n          payment?.counterparty.messageToBank ||\n          payment?.counterparty.remittanceInformation ||\n          payment?.remittanceInfo?.purposeOfPayment ||\n          payment?.counterparty?.mandateIdentifier\n        \"\n      >\n        <hr />\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty?.mandateIdentifier\">\n          <div class=\"bb-text-bold\" data-role=\"mandate-identifier-label\">\n            <bb-payord-dynamic-label\n              name=\"mandateIdentifier\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Mandate identifier\"\n              i18n-defaultLabel=\"@@initiate-payment.review.mandate-identifier-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"mandate-identifier\">\n            {{ payment?.counterparty?.mandateIdentifier }}\n          </div>\n        </div>\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.paymentReference\">\n          <div class=\"bb-text-bold\" data-role=\"payment-reference-label\">\n            <bb-payord-dynamic-label\n              name=\"paymentReference\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Payment reference\"\n              i18n-defaultLabel=\"@@initiate-payment.review.payment-reference-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-reference\">\n            {{ payment?.remittanceInfo?.paymentReference }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.description\">\n          <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n            <bb-payord-dynamic-label\n              name=\"description\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Description\"\n              i18n-defaultLabel=\"@@initiate-payment.review.description-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-description\">\n            {{ payment?.remittanceInfo?.description }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty.remittanceInformation\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              *ngIf=\"!payment.isDebitPayment\"\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-beneficiary-title\"\n            ></bb-payord-dynamic-label>\n            <bb-payord-dynamic-label\n              *ngIf=\"payment.isDebitPayment\"\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to client\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-client-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div data-role=\"description\" class=\"break-word\">\n            {{ payment?.counterparty?.remittanceInformation }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.purposeOfPayment\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"purposeOfPayment\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Purpose of payment\"\n              i18n-defaultLabel=\"@@initiate-payment.review.purpose-of-payment-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"bb-stack\">\n            <div data-role=\"purpose-of-payment\" class=\"bb-stack__item bb-stack__item--align-top\">\n              {{ payment?.remittanceInfo?.purposeOfPayment }}\n            </div>\n            <div data-role=\"purpose-of-payment-description\" class=\"bb-stack__item bb-text-support\">\n              {{ methods.getPurposeDescription(payment?.remittanceInfo?.purposeOfPayment) }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.messageToBank || payment?.counterparty?.messageToBank\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              *ngIf=\"!payment.isDebitPayment\"\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary bank\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-bank.label\"\n            ></bb-payord-dynamic-label>\n            <bb-payord-dynamic-label\n              *ngIf=\"payment.isDebitPayment\"\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to client bank\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-client-bank.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"message-to-bank\">\n            {{ payment?.counterparty?.messageToBank || payment?.messageToBank }}\n          </div>\n        </div>\n        <hr />\n      </div>\n\n      <bb-payord-schedule-details [paymentConfig]=\"paymentConfig\" [data]=\"payment?.schedule\">\n      </bb-payord-schedule-details>\n    </ng-container>\n  </fieldset>\n\n  <ng-container *ngIf=\"status !== 'SUCCESS'; else closureSwitch\">\n    <div class=\"bb-button-bar\" [class.bb-button-bar--reverse]=\"!widgetOptions?.isModalView\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        data-role=\"submit-button\"\n        (click)=\"methods.submit()\"\n        *ngIf=\"!methods.isApprovalEnabled()\"\n        [disabled]=\"isSubmitting\"\n        i18n=\"@@initiate-payment.review.submit-dropdown-btn\"\n      >\n        Submit\n      </button>\n      <div class=\"btn-group bb-button-bar__button\" data-role=\"button-group\" *ngIf=\"methods.isApprovalEnabled()\">\n        <bb-load-button-ui\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          data-role=\"submit-button\"\n          [isLoading]=\"isSubmitting\"\n          (click)=\"methods.submit()\"\n          i18n=\"@@initiate-payment.review.submit-btn\"\n        >\n          Submit\n        </bb-load-button-ui>\n\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          btnColor=\"primary\"\n          icon=\"caret-down\"\n          data-role=\"dropdown-menu\"\n          position=\"top-right\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <button\n              role=\"menuitem\"\n              type=\"button\"\n              class=\"dropdown-item\"\n              data-role=\"bus-submit-and-approve-button\"\n              [disabled]=\"isSubmitting\"\n              (bbKeyboardClick)=\"methods.submit(true)\"\n              i18n=\"@@initiate-payment.review.submit-and-approve-btn\"\n            >\n              Submit and Approve\n            </button>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n      <button\n        class=\"bb-button-bar__button\"\n        bbButton\n        color=\"secondary\"\n        (click)=\"methods.edit()\"\n        [disabled]=\"isSubmitting\"\n        data-role=\"edit-button\"\n        i18n=\"@@initiate-payment.review.edit-btn\"\n      >\n        Edit\n      </button>\n\n      <button\n        bbButton\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        color=\"link\"\n        data-role=\"cancel-button\"\n        (click)=\"methods.toggleDiscardDialog()\"\n        [disabled]=\"isSubmitting\"\n        i18n=\"@@initiate-payment.review.discard-btn\"\n      >\n        Discard\n      </button>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"isSubmitting\" class=\"position-absolute w-100 h-100 top-0 fixed-top bg-white\" [style.opacity]=\"0.6\">\n    <bb-loading-indicator-ui loaderSize=\"lg\" class=\"absolute-center\"></bb-loading-indicator-ui>\n  </div>\n\n  <ng-template #closureSwitch>\n    <ng-container *ngIf=\"widgetOptions?.isModalView; else newPayment\">\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          data-role=\"done-payment-edit-button\"\n          *ngIf=\"status\"\n          (click)=\"methods.doneEditing()\"\n          i18n=\"@@initiate-payment.review.btn-done-edit-payment.label\"\n        >\n          Done\n        </button>\n\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"export-payment-button\"\n          *ngIf=\"methods.getPaymentResponse()?.exportAllowed\"\n          [bbExportPdf]=\"methods.getPaymentResponse()?.id\"\n        >\n          <bb-icon-ui class=\"mr-2\" name=\"file-download\"></bb-icon-ui>\n          <span i18n=\"@@initiate-payment.review.btn-export-payment.label\">Export PDF</span>\n        </button>\n\n        <ng-container *ngIf=\"widgetOptions?.paymentMode !== paymentMode.EDIT_PAYMENT\">\n          <ng-container *ngTemplateOutlet=\"newPaymentButton; context: { color: 'secondary' }\"></ng-container>\n          <div class=\"bb-button-bar__button bb-button-bar__button--across\">\n            <ng-container *ngTemplateOutlet=\"saveTemplateButton; context: { color: 'link' }\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #newPayment>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <ng-container *ngTemplateOutlet=\"newPaymentButton; context: { color: 'primary' }\"></ng-container>\n      <ng-container *ngTemplateOutlet=\"saveTemplateButton; context: { color: 'secondary' }\"></ng-container>\n    </div>\n  </ng-template>\n\n  <ng-template #newPaymentButton let-color=\"color\">\n    <button\n      *ngIf=\"status && methods.isNewPaymentEnabled()\"\n      bbButton\n      [color]=\"color\"\n      class=\"bb-button-bar__button\"\n      data-role=\"new-payment-button\"\n      (click)=\"methods.reset()\"\n      [disabled]=\"methods.isSavingTemplate$() | async\"\n    >\n      <ng-container *ngIf=\"!widgetOptions.isDebitPayment\" i18n=\"@@initiate-payment.review.btn-group-new-payment.label\"\n        >New Payment</ng-container\n      >\n      <ng-container *ngIf=\"widgetOptions.isDebitPayment\" i18n=\"@@initiate-payment.review.btn-group-new-debit.label\"\n        >New debit request</ng-container\n      >\n    </button>\n  </ng-template>\n\n  <ng-template #saveTemplateButton let-color=\"color\">\n    <button\n      *ngIf=\"status === 'SUCCESS' && methods.isPaymentTemplateEnabled() && (createTemplatePermission$ | async)\"\n      bbButton\n      [color]=\"color\"\n      class=\"bb-button-bar__button\"\n      data-role=\"save-as-template-button\"\n      (click)=\"methods.openTemplateModal()\"\n      [disabled]=\"methods.isTemplateSaved()\"\n      i18n=\"@@initiate-payment.review.btn-group-save-as-template.label\"\n    >\n      Save as a template\n    </button>\n  </ng-template>\n\n  <bb-modal-ui\n    [isOpen]=\"methods.showDiscardDialog()\"\n    (cancel)=\"methods.toggleDiscardDialog()\"\n    (confirm)=\"methods.discard()\"\n  >\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <div data-role=\"modal-header\">\n          <h2 class=\"modal-title\" i18n=\"omni-payment-edit-review-discard-modal-title\">\n            Discard {widgetOptions?.paymentMode === paymentMode.EDIT_PAYMENT, select, true {edited} other {entered}}\n            data?\n          </h2>\n        </div>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <ng-container i18n=\"@@initiate-payment.review.discard-modal-content\">\n          Are you sure you want to exit and discard all changes? {widgetOptions?.paymentMode ===\n          paymentMode.EDIT_PAYMENT, select, true {Edited} other {Entered}} data will be lost.\n        </ng-container>\n      </ng-template>\n    </bb-modal-body-ui>\n\n    <bb-modal-footer-ui #modalFooterRef>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            color=\"danger\"\n            class=\"bb-button-bar__button\"\n            (click)=\"methods.discard()\"\n            data-role=\"discard-action-btn\"\n            i18n=\"@@initiate-payment.review.discard-modal-discard-btn\"\n          >\n            Discard\n          </button>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"link\"\n            (click)=\"methods.toggleDiscardDialog()\"\n            data-role=\"cancel-action-btn\"\n            i18n=\"@@initiate-payment.review.discard-modal-cancel-btn\"\n          >\n            Not now\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n\n  <bb-breach-limit-details\n    [paymentDetails]=\"paymentItem\"\n    [error]=\"breachError\"\n    [isOpen]=\"showBreachDetails\"\n    (close)=\"hideBreachModal()\"\n  ></bb-breach-limit-details>\n</ng-template>\n\n<bb-payment-template-form\n  [paymentTemplateForm]=\"paymentTemplateForm\"\n  [isSavingTemplate]=\"savingTemplate$ | async\"\n  [modalState]=\"paymentTemplateModalState\"\n  (closeModal)=\"closeTemplateModal()\"\n  (openModal)=\"openTemplateModal()\"\n  (submitForm)=\"submitPaymentTemplate()\"\n></bb-payment-template-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PaymentOrdersUiModule } from '@backbase/payment-orders-ang';\nimport { ReviewPaymentContainerComponent } from './review-payment.component';\nimport { AdaptedReviewComponent } from '../adapted-review/adapted-review-container/adapted-review.component';\nimport { CounterpartyDetailsComponent } from '../adapted-review/counterparty-details/counterparty-details.component';\nimport { CreditorAccountComponent } from '../adapted-review/creditor-account/creditor-account.component';\nimport { CreditorDetailsComponent } from '../adapted-review/creditor-details/creditor-details.component';\nimport { InitiatorDetailsComponent } from '../adapted-review/initiator-details/initiator-details.component';\nimport { RemittanceDetailsComponent } from '../adapted-review/remittance-details/remittance-details.component';\nimport { ScheduleDetailsComponent } from '../adapted-review/schedule-details/schedule-details.component';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { FocusModule } from '@backbase/ui-ang/focus';\n\nconst components = [\n  ReviewPaymentContainerComponent,\n  RemittanceDetailsComponent,\n  CounterpartyDetailsComponent,\n  InitiatorDetailsComponent,\n  ScheduleDetailsComponent,\n  CreditorAccountComponent,\n  CreditorDetailsComponent,\n  AdaptedReviewComponent,\n];\n\nconst uiAngComponentModules = [\n  ModalModule,\n  DropdownMenuModule,\n  KeyboardClickModule,\n  NotificationModule,\n  AlertModule,\n  HeaderModule,\n  FocusModule,\n];\n\n@NgModule({\n  imports: [CommonModule, PaymentOrdersUiModule, ...uiAngComponentModules],\n  exports: [...components, ...uiAngComponentModules],\n  declarations: [...components],\n})\nexport class ReviewPaymentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Placement } from '@ng-bootstrap/ng-bootstrap';\nimport { PaymentsHeaderNavigationItem } from '../../models/payments-header.models';\n\n@Component({\n  selector: 'bb-header-dropdown',\n  templateUrl: './header-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderDropdownComponent {\n  /**\n   * Array of representation of the link menu object\n   */\n  @Input() menu: PaymentsHeaderNavigationItem<any>[] = [];\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() useFirstLinkAsDefault = false;\n\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() position: Placement = 'bottom-right';\n  /**\n   * Button label. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonLabel!: string;\n\n  /**\n   * Button icon. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonIcon!: string;\n  /**\n   * Color of the button. Default `primary`\n   */\n  @Input() buttonColor = 'primary';\n  /**\n   * Size of the button. Allowed values are `sm` or `md`. Default `md`\n   */\n  @Input() buttonSize: 'sm' | 'md' = 'md';\n\n  /**\n   * Event on item click\n   */\n  @Output() navigationAction = new EventEmitter<any>();\n\n  onClick(event: Event, value: any) {\n    event.preventDefault();\n    this.navigationAction.emit(value);\n  }\n}\n","<div class=\"btn-group bb-button-bar__button\">\n  <button\n    *ngIf=\"useFirstLinkAsDefault || menu.length === 1\"\n    class=\"bb-button-bar__button\"\n    bbButton\n    [color]=\"buttonColor\"\n    [buttonSize]=\"buttonSize\"\n    (click)=\"onClick($event, menu[0].value)\"\n  >\n    <bb-icon-ui *ngIf=\"menu[0].iconName\" [name]=\"menu[0].iconName\"></bb-icon-ui>\n    <span>{{ menu[0].label }}</span>\n  </button>\n  <ng-container *ngIf=\"menu.length > 1\">\n    <bb-dropdown-menu-ui\n      container=\"body\"\n      icon=\"caret-down\"\n      [btnColor]=\"buttonColor\"\n      [buttonSize]=\"buttonSize\"\n      [position]=\"position\"\n      [class.btn-group]=\"useFirstLinkAsDefault\"\n    >\n      <ng-template bbDropdownLabel>\n        <span class=\"d-flex align-items-center\" *ngIf=\"!useFirstLinkAsDefault\">\n          <bb-icon-ui *ngIf=\"buttonIcon\" [name]=\"buttonIcon\"></bb-icon-ui>\n          <span>{{ buttonLabel }}</span>\n        </span>\n      </ng-template>\n\n      <ng-template bbDropdownMenuItem>\n        <ng-container *ngFor=\"let item of menu; let i = index\">\n          <ng-container *ngIf=\"!(useFirstLinkAsDefault && i === 0)\">\n            <a\n              rel=\"noopener\"\n              role=\"menuitem\"\n              href=\"#\"\n              class=\"dropdown-item\"\n              (click)=\"onClick($event, item.value)\"\n            >\n              <span class=\"bb-stack\">\n                <bb-icon-ui\n                  *ngIf=\"item.iconName\"\n                  class=\"bb-stack__item bb-stack__item--align-top\"\n                  [name]=\"item.iconName ? item.iconName : undefined\"\n                  color=\"dark\"\n                ></bb-icon-ui>\n                <div class=\"bb-stack__item\">\n                  <span>{{ item.label }}</span>\n                  <div\n                    *ngIf=\"item.description\"\n                    class=\"bb-subtitle bb-text-support mr-4\"\n                  >\n                    {{ item.description }}\n                  </div>\n                </div>\n              </span>\n            </a>\n          </ng-container>\n        </ng-container>\n      </ng-template>\n    </bb-dropdown-menu-ui>\n  </ng-container>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  PaymentsHeaderNavigationItem,\n  PaymentsHeaderNavigationItemWithPermission,\n} from './models/payments-header.models';\nimport { Placement } from '@ng-bootstrap/ng-bootstrap';\nimport { CONDITIONS, PropertyResolver } from '@backbase/foundation-ang/web-sdk';\nimport { from, Observable, of } from 'rxjs';\nimport { concatMap, map, reduce } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-payments-header',\n  templateUrl: './payments-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentsHeaderComponent implements OnInit {\n  /**\n   * Custom class name\n   */\n  @Input() customClassName = '';\n\n  /**\n   * Heading Classes\n   */\n  @Input() headingClasses = '';\n\n  /**\n   * Heading type (h1-h6)\n   */\n  @Input() headingType = '';\n\n  /**\n   * Heading\n   */\n  @Input() heading = '';\n\n  /**\n   * Show right side button / dropdown\n   */\n  @Input() showNavigation = true;\n\n  /**\n   * Array of representation of the link menu object\n   */\n  @Input() navigationItems: PaymentsHeaderNavigationItem<any>[] = [];\n\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() useFirstLinkAsDefault = false;\n\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() position: Placement = 'bottom-right';\n\n  /**\n   * Button label. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonLabel!: string;\n\n  /**\n   * Button icon. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonIcon!: string;\n\n  /**\n   * Color of the button. Default `primary`\n   */\n  @Input() buttonColor = 'primary';\n\n  /**\n   * Size of the button. Allowed values are `sm` or `md`. Default `md`\n   */\n  @Input() buttonSize: 'sm' | 'md' = 'md';\n\n  /**\n   * Event on item click\n   */\n  @Output() navigationAction = new EventEmitter<any>();\n\n  menuItems!: Observable<PaymentsHeaderNavigationItem<any>[]>;\n\n  private hasPermissions(\n    item: PaymentsHeaderNavigationItem<any>\n  ): Observable<PaymentsHeaderNavigationItemWithPermission<any>> {\n    const hasPermissionsPromise = item.canView\n      ? this.conditions.resolveEntitlements(item.canView)\n      : of(true);\n    return from(hasPermissionsPromise).pipe(\n      map((hasPermissions) => ({ hasPermissions, ...item }))\n    );\n  }\n\n  private menuSetup(): Observable<PaymentsHeaderNavigationItem<any>[]> {\n    return from(this.navigationItems).pipe(\n      concatMap(this.hasPermissions.bind(this)),\n      reduce((acc, { hasPermissions, ...item }) => {\n        if (hasPermissions) {\n          acc.push({ ...item });\n        }\n        return acc;\n      }, [] as PaymentsHeaderNavigationItem<any>[])\n    );\n  }\n\n  constructor(\n    @Inject(CONDITIONS) private readonly conditions: PropertyResolver\n  ) {}\n\n  ngOnInit(): void {\n    this.menuItems = this.menuSetup();\n  }\n\n  onClick(value: any) {\n    this.navigationAction.emit(value);\n  }\n}\n","<div class=\"heading-widget bb-heading-widget {{ customClassName }}\">\n  <bb-header-ui\n    headingClasses=\"bb-heading-widget__heading {{ headingClasses }}\"\n    [headingType]=\"headingType\"\n    [heading]=\"heading\"\n  ></bb-header-ui>\n\n  <ng-container *ngIf=\"showNavigation\">\n    <ng-container *ngIf=\"menuItems | async as menu\">\n      <ng-container *ngIf=\"menu.length\">\n        <bb-header-dropdown\n          [menu]=\"menu\"\n          [useFirstLinkAsDefault]=\"useFirstLinkAsDefault\"\n          [position]=\"position\"\n          [buttonLabel]=\"buttonLabel\"\n          [buttonIcon]=\"buttonIcon\"\n          [buttonColor]=\"buttonColor\"\n          [buttonSize]=\"buttonSize\"\n          (navigationAction)=\"onClick($event)\"\n        >\n        </bb-header-dropdown>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaymentsHeaderComponent } from './payments-header.component';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { RouterModule } from '@angular/router';\nimport { HeaderDropdownComponent } from './components/header-dropdown/header-dropdown.component';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\n@NgModule({\n  declarations: [PaymentsHeaderComponent, HeaderDropdownComponent],\n  exports: [PaymentsHeaderComponent],\n  imports: [\n    CommonModule,\n    HeaderModule,\n    DropdownMenuModule,\n    IconModule,\n    RouterModule,\n    ButtonModule,\n  ],\n})\nexport class PaymentsHeaderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["PaymentBaseFields","PaymentComponents","templateObject_1","CounterPartyFields","templateObject_2","templateObject_3","templateObject_4","templateObject_5","Validators","templateObject_6","templateObject_7","templateObject_8","templateObject_9","templateObject_10","templateObject_11","defaultInitiatorConfig","templateObject_12","RemittanceInfoFields","templateObject_13","templateObject_14","templateObject_15","getCounterpartySchemeName","SchemeName","stripSpaces","getConfig","isAddressTruthy","BehaviorSubject","i0","Injectable","Subject","map","mapConnectedAccounts","takeUntil","filter","switchMap","tap","accMap","mapArrangementList","shareReplay","catchError","of","handleCurrenciesList","HttpErrorResponse","shouldLoadTabContent","BeneficiaryList","combineLatest","InitiatorFields","ScheduleFields","PaymentMode","i1.CreatePaymentConfigSetupService","i2","distinctUntilChanged","EMPTY","mapPaymentOptions","i1","FormControl","removeScheduleFromConfig","setFrequencyOptionsPerConfig","InitiatePaymentHeaderStates","PaymentState","triggerPaymentHook","PaymentHooks","registerFormControl","HiddenFields","setFormDetailsFromService","FormGroup","setFormDetailsFromResponse","toPostRequest","take","focusErrorElement","P2PLimitErrorKeys","PaymentTemplateFields","toPostPaymentTemplate","defaultPaymentSuccessEventName","isEditFormDirty","i2.CreatePaymentService","i3.CreatePaymentConfigSetupService","i4.CreatePaymentFieldsSetupService","PUBSUB","BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN","ViewContainerRef","TemplateRef","i5","i6","i7","i8","Component","Optional","Inject","ViewChild","components","CommonModule","PayordFormBuilderAngModule","NgModule","Input","i3","i4","merge","mapTo","datePart","ProgressStatus","i6.InitiatorDetailsComponent","i7.CreditorAccountComponent","i8.RemittanceDetailsComponent","i9.CreditorDetailsComponent","i10.CounterpartyDetailsComponent","i11.ScheduleDetailsComponent","i12","i13","i14","i15","i16","i17","i18","i19","ChangeDetectionStrategy","ReviewScreens","getLabelFromPaymentConfig","isObjectTruthy","contactItemToService","ActiveContactStatus","ApprovalStatus","Status","PaymentOrderProgressStatusGet","pluck","noWhitespaceValidator","ModalState","getForexDetailsFromPayment","PaymentSubmitStatuses","i3.CreatePaymentService","i4.CreatePaymentConfigSetupService","i6.AdaptedReviewComponent","i9","i10","i11","ModalModule","DropdownMenuModule","KeyboardClickModule","NotificationModule","AlertModule","HeaderModule","FocusModule","PaymentOrdersUiModule","EventEmitter","Output","from","concatMap","reduce","CONDITIONS","i2.HeaderDropdownComponent","IconModule","RouterModule","ButtonModule"],"mappings":"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"}