{"version":3,"file":"backbase-payments-collection-ui-ang.js","sources":["../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/constants/initiate-payment.const.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/helpers/payment-options-mappers.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/services/create-payment-config-setup.service.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/services/create-payment-fields-setup.service.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/constants/initiate-payment.i18n.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/services/create-payment.service.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/create-payment-form/create-payment-form.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/create-payment-form/create-payment-form.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/create-payment-form/create-payment-form.module.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/models/create-payment.model.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/initiator-details/initiator-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/initiator-details/initiator-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/creditor-account/creditor-account.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/creditor-account/creditor-account.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/remittance-details/remittance-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/remittance-details/remittance-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/creditor-details/creditor-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/creditor-details/creditor-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/counterparty-details/counterparty-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/counterparty-details/counterparty-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/schedule-details/schedule-details.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/schedule-details/schedule-details.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/adapted-review-container/adapted-review.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/adapted-review/adapted-review-container/adapted-review.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/review-payment-details/review-payment.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/review-payment-details/review-payment.component.html","../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/review-payment-details/review-payment.module.ts","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/components/header-dropdown/header-dropdown.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/components/header-dropdown/header-dropdown.component.html","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/payments-header.component.ts","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/payments-header.component.html","../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/payments-header.module.ts","../../../../libs/payments-collection-ui-ang/src/backbase-payments-collection-ui-ang.ts"],"sourcesContent":["import {\n  CounterPartyFields,\n  defaultInitiatorConfig,\n  PaymentBaseFields,\n  PaymentComponents,\n  PaymentFormGroup,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { Validators } from '@angular/forms';\n\nconst counterPartyConfig: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.beneficiary-header-title:To`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.beneficiary-selector-label:Beneficiary's name`,\n        placeholder: $localize`:@@initiate-payment-base-fields.beneficiary-selector-placeholder:Select a beneficiary`,\n        saveNewContactLabel: $localize`:@@initiate-payment-base-fields.beneficiary-selector-new-contact-label:Save as a new contact`,\n        isWizardMode: true,\n        retainBankCountry: true,\n        cssClasses: ['col-12'],\n        dependants: [\n          CounterPartyFields.country,\n          CounterPartyFields.bankBranchCode,\n          CounterPartyFields.accountNumber,\n        ],\n        validationMessages: [\n          {\n            message: $localize`:@@initiate-payment-base-fields.same-accounts-error:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.country,\n      type: PaymentComponents.sanctionedCountrySelector,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@initiate-payment-base-fields.country.label:Country`,\n        placeholder: $localize`:@@initiate-payment-base-fields.country-placeholder:- select a country -`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`,\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required, Validators.minLength(6)],\n        maxLength: 36,\n        label: $localize`:@@initiate-payment-base-fields.acc-no-label:Account number or IBAN`,\n        validationMessages: [\n          {\n            name: 'minlength',\n            message: $localize`:@@initiate-payment-base-fields.acc-no-min-length-error:Account number should have minimum 6 characters`,\n          },\n          {\n            message: $localize`:@@initiate-payment-base-fields.iban-country-error-message:Invalid IBAN`,\n            name: 'invalidIbanCountry',\n          },\n        ],\n        cssClasses: ['d-inline-block', 'col-md-6'],\n      },\n    },\n    {\n      name: CounterPartyFields.bankBranchCode,\n      type: PaymentComponents.text,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.bank-branch-code-label:Sort code`,\n        maxLength: 20,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}`,\n      },\n    },\n  ],\n};\n\nexport const BaseFields = [\n  defaultInitiatorConfig,\n  {\n    name: PaymentBaseFields.remittanceInfo,\n    title: $localize`:@@initiate-payment-base-fields.remittance-group-title:Payment details`,\n    fields: [\n      {\n        type: PaymentComponents.sanctionedCurrencyAmount,\n        name: RemittanceInfoFields.amountCurrencyGroup,\n        options: {\n          cssClasses: ['col-12'],\n          label: $localize`:@@initiate-payment-base-fields.amount-title:Amount`,\n          validationMessages: [\n            {\n              message: $localize`:@@initiate-payment-base-fields.amount-error:Enter amount`,\n              name: 'invalidAmount',\n            },\n            {\n              message: $localize`:@@initiate-payment-base-fields.currency-error:Selected country does not allow payments in this currency`,\n              name: 'invalidCurrency',\n            },\n          ],\n        },\n      },\n    ],\n  },\n  counterPartyConfig,\n];\n\nexport const PaymentTypes = {\n  ILE_POSTFIX: '_ILE',\n  CLOSED_POSTFIX: '_CLOSED',\n  SEPA_PREFIX: 'SEPA_CT',\n  SEPA: 'SEPA_CREDIT_TRANSFER',\n};\n","import {\n  PaymentOptionsRequest,\n  SchemeName,\n} from '@backbase/data-ang/payment-order-options';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { PaymentTypes } from '../constants/initiate-payment.const';\nimport { FormGroup } from '@angular/forms';\nimport {\n  CounterPartyFields,\n  getConfig,\n  getCounterpartySchemeName,\n  isAddressTruthy,\n  PaymentBaseFields,\n  PaymentDetails,\n  PaymentFormGroup,\n  PaymentTypeConfig,\n  stripSpaces,\n} from '@backbase/payment-orders-ang';\n\nexport const mapPaymentOptionRequest = (\n  formItem: PaymentDetails,\n  clientServiceAgreementID = '',\n  clientJurisdiction = ''\n): PaymentOptionsRequest => {\n  const { creditorBank } = formItem.counterparty;\n  const counterpartyCountry =\n    creditorBank &&\n    creditorBank.postalAddress &&\n    creditorBank.postalAddress.country;\n  const bankBranchCode = creditorBank && creditorBank.bankBranchCode;\n  const creditorScheme = getCounterpartySchemeName(formItem);\n  return {\n    ...(clientServiceAgreementID ? { clientServiceAgreementID } : null),\n    ...(clientJurisdiction ? { clientJurisdiction } : null),\n    originatorAccount: {\n      identification: formItem.initiator.id,\n      schemeName: SchemeName.ID,\n    },\n    counterpartyAccount: {\n      ...(bankBranchCode ? { bankBranchCode } : null),\n      identification:\n        creditorScheme === SchemeName.ID\n          ? stripSpaces(formItem.counterparty.id)\n          : stripSpaces(formItem.counterparty.accountNumber),\n      schemeName: <SchemeName>creditorScheme,\n    },\n    requestedExecutionDate: new Date().toISOString().substring(0, 10),\n    instructedAmount: {\n      amount: formItem.remittanceInfo.amountGroup.amount,\n      currencyCode: formItem.remittanceInfo.amountGroup.currency,\n    },\n    ...(counterpartyCountry ? { counterpartyCountry } : null),\n    additions: formItem.additions,\n  };\n};\n\nexport function normalizePaymentType(\n  selectedPaymentItem: PaymentTemplate | undefined\n): string | undefined {\n  let _selectedPayment = selectedPaymentItem?.details.paymentType;\n  if (\n    _selectedPayment ===\n      `${PaymentTypes.SEPA_PREFIX}${PaymentTypes.CLOSED_POSTFIX}` ||\n    _selectedPayment ===\n      `${PaymentTypes.SEPA_PREFIX}${PaymentTypes.ILE_POSTFIX}`\n  ) {\n    _selectedPayment = _selectedPayment.replace(\n      PaymentTypes.SEPA_PREFIX,\n      PaymentTypes.SEPA\n    );\n  }\n  let replacedPayment;\n  if (_selectedPayment) {\n    if (_selectedPayment.endsWith(PaymentTypes.ILE_POSTFIX)) {\n      replacedPayment = _selectedPayment.replace(PaymentTypes.ILE_POSTFIX, '');\n    } else if (_selectedPayment.endsWith(PaymentTypes.CLOSED_POSTFIX)) {\n      replacedPayment = _selectedPayment.replace(\n        PaymentTypes.CLOSED_POSTFIX,\n        ''\n      );\n    } else {\n      replacedPayment = _selectedPayment;\n    }\n  }\n\n  return replacedPayment;\n}\n\nexport function normalisePaymentTemplate(paymentTemplate: PaymentTemplate) {\n  return {\n    ...paymentTemplate,\n    details: {\n      ...paymentTemplate.details,\n      paymentType: normalizePaymentType(paymentTemplate),\n    },\n  };\n}\n\n/**\n * Reset beneficiary address if the form contains address details but the selected config does not contain address config.\n */\nexport function resetBeneficiaryAddress(\n  paymentTypeConfig: PaymentTypeConfig,\n  form: FormGroup\n) {\n  const counterPartyConfig = getConfig(\n    PaymentBaseFields.counterparty,\n    paymentTypeConfig\n  ) as PaymentFormGroup;\n  const beneficiaryAddress = getConfig(\n    CounterPartyFields.postalAddress,\n    counterPartyConfig\n  );\n  const beneficiaryAddressGroup = form.get([\n    PaymentBaseFields.counterparty,\n    CounterPartyFields.postalAddress,\n  ]);\n  if (\n    !beneficiaryAddress &&\n    beneficiaryAddressGroup &&\n    isAddressTruthy(beneficiaryAddressGroup.value)\n  ) {\n    beneficiaryAddressGroup.reset();\n  }\n}\n\n/**\n * Reset bank details if the form contains bank details but the selected config does not contain specific bank detail config.\n */\nexport function resetBankDetails(\n  paymentTypeConfig: PaymentTypeConfig,\n  form: FormGroup\n) {\n  const counterPartyConfig = getConfig(\n    PaymentBaseFields.counterparty,\n    paymentTypeConfig\n  ) as PaymentFormGroup;\n  const beneficiaryBankConfig = getConfig(\n    CounterPartyFields.creditorBank,\n    counterPartyConfig\n  ) as PaymentFormGroup;\n  const beneficiaryBankAddress = beneficiaryBankConfig\n    ? getConfig(CounterPartyFields.postalAddress, beneficiaryBankConfig)\n    : null;\n  const beneficiaryBankAddressGroup = form.get([\n    PaymentBaseFields.counterparty,\n    CounterPartyFields.creditorBank,\n    CounterPartyFields.postalAddress,\n  ]);\n\n  resetBankField(CounterPartyFields.bic, counterPartyConfig, form);\n  resetBankField(CounterPartyFields.bankName, counterPartyConfig, form);\n\n  if (\n    !beneficiaryBankAddress &&\n    beneficiaryBankAddressGroup &&\n    isAddressTruthy(beneficiaryBankAddressGroup.value)\n  ) {\n    for (const key in (<FormGroup>beneficiaryBankAddressGroup).controls) {\n      if (key !== 'country') {\n        (<FormGroup>beneficiaryBankAddressGroup).controls[key].reset();\n      }\n    }\n  }\n}\n\nexport function resetBankField(\n  fieldName: string,\n  counterpartyConfig: PaymentFormGroup,\n  form: FormGroup\n) {\n  const config = getConfig(fieldName, counterpartyConfig);\n  const control = form.get([\n    PaymentBaseFields.counterparty,\n    CounterPartyFields.creditorBank,\n    fieldName,\n  ]);\n  if (!config && control?.value) {\n    control.reset();\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport {\n  FetchPaymentOptionsListenerFn,\n  InitiatePaymentHeaderStates,\n  InitiatePaymentOptions,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentHooksOptions,\n  PaymentTypeConfig,\n  ReviewTemplateContext,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject } from 'rxjs';\nimport { BaseFields } from '../constants/initiate-payment.const';\n\n@Injectable()\nexport class CreatePaymentConfigSetupService {\n  private readonly configsSub$ = new BehaviorSubject<PaymentTypeConfig[]>([]);\n  private readonly optionsSub$ = new BehaviorSubject<InitiatePaymentOptions>(\n    {}\n  );\n  private readonly baseFieldsSub$ = new BehaviorSubject<\n    Array<PaymentFormFieldConfig | PaymentFormGroup>\n  >([]);\n  private readonly fetchPaymentOptionsListenerSub$ = new BehaviorSubject<\n    FetchPaymentOptionsListenerFn | undefined\n  >(undefined);\n  private readonly hooksSub$ = new BehaviorSubject<PaymentHooksOptions>({});\n  private readonly reviewTemplateSub$ = new BehaviorSubject<\n    TemplateRef<ReviewTemplateContext> | undefined\n  >(undefined);\n\n  readonly configs$ = this.configsSub$.asObservable();\n  readonly options$ = this.optionsSub$.asObservable();\n  readonly baseFields$ = this.baseFieldsSub$.asObservable();\n  readonly fetchPaymentOptionsListener$ =\n    this.fetchPaymentOptionsListenerSub$.asObservable();\n  readonly reviewTemplate$ = this.reviewTemplateSub$.asObservable();\n\n  get hooks(): PaymentHooksOptions {\n    return this.hooksSub$.value;\n  }\n\n  get options(): InitiatePaymentOptions {\n    return this.optionsSub$.value;\n  }\n\n  get configs(): PaymentTypeConfig[] {\n    return this.configsSub$.value;\n  }\n\n  setHooks(hooks: PaymentHooksOptions = {}) {\n    this.hooksSub$.next(hooks);\n  }\n\n  setConfigs(configs: PaymentTypeConfig[]) {\n    this.configsSub$.next(configs);\n  }\n\n  setOptions(options: InitiatePaymentOptions) {\n    this.optionsSub$.next(options);\n  }\n\n  setBaseFields(\n    baseFields: Array<PaymentFormFieldConfig | PaymentFormGroup> = BaseFields\n  ) {\n    this.baseFieldsSub$.next(baseFields);\n  }\n\n  setFetchPaymentOptionsListener(listenerFn?: FetchPaymentOptionsListenerFn) {\n    this.fetchPaymentOptionsListenerSub$.next(listenerFn);\n  }\n\n  setReviewTemplate(templateRef: TemplateRef<ReviewTemplateContext>) {\n    this.reviewTemplateSub$.next(templateRef);\n  }\n\n  getHeader(state: InitiatePaymentHeaderStates): string | undefined {\n    const paymentType =\n      this.configs.length === 1 ? this.configs[0].paymentType : '';\n    const data = {\n      paymentMode: this.options?.paymentMode,\n      state,\n      paymentType,\n      isDebit: this.options.isDebitPayment,\n    };\n    return this.options.header?.(data);\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  accMap,\n  BeneficiaryData,\n  BeneficiaryList,\n  FetchCreditorItemsParams,\n  handleCurrenciesList,\n  InitiatorFields,\n  mapArrangementList,\n  mapConnectedAccounts,\n  PaymentComponents,\n  InitiatePaymentOptions,\n  PaymentFormFieldConfig,\n  PaymentFormFieldOptions,\n  PaymentFormGroup,\n  PaymentOption,\n  PaymentOptionsService,\n  PaymentOrderHttpService,\n  PaymentTypeConfig,\n  PaymentTypeOptions,\n  ScheduleFields,\n  shouldLoadTabContent,\n  ContactsAndArrangementsGetParams,\n  PaymentMode,\n  CounterPartyFields,\n  OutputItem,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  shareReplay,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { RateGet } from '@backbase/data-ang/payment-order';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { CreatePaymentConfigSetupService } from './create-payment-config-setup.service';\nimport {\n  ArrangementItem,\n  ArrangementList,\n  ContactList,\n  ExternalAccountFormItem,\n  InternalAccountFormItem,\n} from '@backbase/payment-orders-ang';\n\n@Injectable()\nexport class CreatePaymentFieldsSetupService implements OnDestroy {\n  private readonly destroyed$ = new Subject<void>();\n  private readonly fetchDebitItemPermissions$ = new Subject<string>();\n  private readonly fetchBeneficiaries$ =\n    new Subject<FetchCreditorItemsParams>();\n\n  private readonly paymentOptionsSub$ = new BehaviorSubject<PaymentOption[]>(\n    []\n  );\n  private readonly paymentOptionsErrorSub$ = new BehaviorSubject<boolean>(\n    false\n  );\n\n  private readonly exchangeRate$ = new Subject<number>();\n  private readonly getExchangeRate$ = new Subject<{\n    fromCurrency: string;\n    toCurrency: string;\n  }>();\n  private readonly exchangeRateError$ = new Subject<boolean>();\n  private readonly frequencyFieldSub$ = new Subject<PaymentFormFieldConfig>();\n\n  private readonly countries$ = this.loadSanctionedCountries();\n  private readonly currencies$ = this.loadSanctionedCurrencies();\n\n  private get debitAccounts$(): Observable<Array<OutputItem>> {\n    return this.paymentOrderHttpService\n      .getDebitAccounts({ size: this.options.pageSize })\n      .pipe(accMap(this.options.defaultScheme));\n  }\n\n  private get creditAccountList$() {\n    return this.paymentOrderHttpService\n      .getCreditAccounts({ size: this.options.pageSize })\n      .pipe(\n        map((arrangements) => ({\n          items: mapArrangementList(\n            arrangements as ArrangementList,\n            this.options.defaultScheme\n          ),\n          count: (arrangements as ArrangementList).count,\n        }))\n      );\n  }\n\n  private readonly fetchDebitAccounts$ =\n    new Subject<ContactsAndArrangementsGetParams>();\n  private readonly fetchCreditAccounts$ =\n    new Subject<ContactsAndArrangementsGetParams>();\n\n  private readonly connectedAccounts$ =\n    this.paymentOrderHttpService.connectedAccounts$.pipe(\n      map((accounts) => accounts?.map(mapConnectedAccounts))\n    );\n\n  private totalContacts = 0; // x-total-count from response header\n  private totalCreditAccounts = 0;\n  private totalContactsItemsCount = 0; // total count of items in response before extracting sub accounts\n  private checkClosedPaymentsAccess = false;\n\n  private contacts$!: Observable<ExternalAccountFormItem[] | HttpErrorResponse>;\n  private creditAccounts$!: Observable<\n    InternalAccountFormItem[] | HttpErrorResponse\n  >;\n\n  readonly paymentOptions$ = this.paymentOptionsSub$.asObservable();\n  readonly paymentOptionsError$ = this.paymentOptionsErrorSub$.asObservable();\n  readonly frequencyField$ = this.frequencyFieldSub$.asObservable();\n\n  get options(): InitiatePaymentOptions {\n    return this.createPaymentSetup.options;\n  }\n\n  get configs(): PaymentTypeConfig[] {\n    return this.createPaymentSetup.configs;\n  }\n\n  constructor(\n    private readonly createPaymentSetup: CreatePaymentConfigSetupService,\n    private readonly paymentOptionsService: PaymentOptionsService,\n    private readonly paymentOrderHttpService: PaymentOrderHttpService\n  ) {\n    this.fetchDebitItemPermissions$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((dataItemId) => {\n        this.paymentOrderHttpService.loadDataItemPermissions(dataItemId);\n      });\n\n    this.fetchBeneficiaries$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(({ params, type }: FetchCreditorItemsParams) => {\n        this.paymentOrderHttpService.fetchBeneficiaries(\n          { ...params, size: this.options.pageSize },\n          type\n        );\n      });\n\n    this.getExchangeRate$\n      .pipe(\n        filter(({ fromCurrency, toCurrency }) => {\n          const isExchangeValid = fromCurrency !== toCurrency;\n          if (!isExchangeValid) {\n            // If fromCurrency and toCurrency are same, don't fetch exchange rate\n            this.exchangeRate$.next(0);\n          }\n          return isExchangeValid;\n        }),\n        switchMap(({ fromCurrency, toCurrency }) =>\n          this.paymentOrderHttpService.getCurrencyExchangeRate(\n            fromCurrency,\n            toCurrency\n          )\n        ),\n        tap((exchangeRate: RateGet | null) => {\n          this.exchangeRateError$.next(!exchangeRate);\n          this.exchangeRate$.next(exchangeRate?.rate || 0);\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n\n    this.fetchDebitAccounts$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((params) => {\n        this.paymentOrderHttpService.loadMoreDebitAccounts({\n          ...params,\n          merge: true,\n          size: this.options.pageSize,\n        });\n      });\n\n    this.fetchCreditAccounts$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(({ from, ...params }) => {\n        this.paymentOrderHttpService.loadMoreCreditAccounts(from, {\n          ...params,\n          merge: true,\n          size: this.options.pageSize,\n        });\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n  }\n\n  private loadSanctionedCountries() {\n    return this.paymentOptionsService\n      .getSanctionedCountries(this.options?.defaultCountry)\n      .pipe(\n        shareReplay(1),\n        catchError((_) => {\n          this.paymentOrderHttpService.showNotification(false, {\n            header: $localize`:omni-payment-get-countries-failed:Failed to load countries list. Please try again later.`,\n          });\n          return of([]);\n        })\n      );\n  }\n\n  private loadSanctionedCurrencies(): Observable<{\n    currencies?: Array<string>;\n    dividerIndex?: number;\n  }> {\n    return this.paymentOptionsService\n      .getSanctionedCurrencies(this.options?.defaultCountry)\n      .pipe(\n        map((response) => {\n          const result: { currencies?: Array<string>; dividerIndex?: number } =\n            {};\n          if ('labeled' in response) {\n            const { currencies, dividerIndex } = handleCurrenciesList(response);\n\n            result.currencies = currencies;\n            result.dividerIndex = dividerIndex;\n          }\n          return result;\n        }),\n        shareReplay(1),\n        catchError((err) => {\n          this.paymentOrderHttpService.showNotification(false, {\n            header: $localize`:@omni-payment-get-countries-failed:Failed to load currencies list. Please try again later.`,\n          });\n          return of(err);\n        })\n      );\n  }\n\n  private loadAccountByAccountId(\n    id: string,\n    accountNumber: string\n  ): Observable<InternalAccountFormItem | undefined> {\n    return this.paymentOrderHttpService\n      .getAccountByAccountId(id, accountNumber)\n      .pipe(\n        map(\n          (item: ArrangementItem): ArrangementList => ({\n            count: 1,\n            items: [item as ArrangementItem],\n          })\n        ),\n        accMap(this.options.defaultScheme),\n        map(\n          (list: Array<InternalAccountFormItem>): InternalAccountFormItem =>\n            list[0]\n        ),\n        catchError(() => of(undefined))\n      );\n  }\n\n  private getContacts(): Observable<\n    ExternalAccountFormItem[] | HttpErrorResponse\n  > {\n    return this.paymentOrderHttpService\n      .getContacts({ size: this.options.pageSize, query: '' })\n      .pipe(\n        tap((data: ContactList | HttpErrorResponse) => {\n          if (!(data instanceof HttpErrorResponse)) {\n            this.totalContacts = data.count;\n            this.totalContactsItemsCount =\n              data.itemsCount && data.isLoadMore\n                ? this.totalContactsItemsCount + data.itemsCount\n                : data.itemsCount || 0;\n          } else {\n            this.totalContacts = 0;\n          }\n        }),\n        map((value: ContactList | HttpErrorResponse) =>\n          !(value instanceof HttpErrorResponse) ? value.items : value\n        )\n      );\n  }\n\n  private getCreditAccounts(): Observable<\n    InternalAccountFormItem[] | HttpErrorResponse\n  > {\n    return this.paymentOrderHttpService\n      .getCreditAccounts({ size: this.options.pageSize, searchTerm: '' })\n      .pipe(\n        tap((data: ArrangementList | HttpErrorResponse) => {\n          this.totalCreditAccounts = !(data instanceof HttpErrorResponse)\n            ? data.count\n            : 0;\n        }),\n        map((value) =>\n          !(value instanceof HttpErrorResponse)\n            ? mapArrangementList(value, this.options.defaultScheme)\n            : value\n        )\n      );\n  }\n\n  private getDebitAccounts(): Observable<ArrangementList> {\n    return this.paymentOrderHttpService\n      .getDebitAccounts({ size: this.options.pageSize, searchTerm: '' })\n      .pipe(\n        map((arrangements) => ({\n          items: mapArrangementList(arrangements, this.options.defaultScheme),\n          count: arrangements.count,\n        }))\n      );\n  }\n\n  private loadCreditorDetails(\n    options: PaymentFormFieldOptions\n  ): Observable<BeneficiaryData> {\n    this.contacts$ = shouldLoadTabContent(BeneficiaryList.CONTACTS, options)\n      ? this.getContacts()\n      : of([]);\n    this.creditAccounts$ = shouldLoadTabContent(\n      BeneficiaryList.ACCOUNTS,\n      options\n    )\n      ? this.getCreditAccounts()\n      : of([]);\n\n    return combineLatest([this.creditAccounts$, this.contacts$]).pipe(\n      map(([accounts, contacts]) => ({\n        accounts,\n        contacts,\n        totalCreditAccounts: this.totalCreditAccounts,\n        totalContacts: this.totalContacts,\n        totalContactsItemsCount: this.totalContactsItemsCount,\n      }))\n    );\n  }\n\n  setPaymentOptions(options: PaymentOption[]) {\n    this.paymentOptionsSub$.next(options);\n  }\n\n  setPaymentOptionsError(error: boolean) {\n    this.paymentOptionsErrorSub$.next(error);\n  }\n\n  clearPaymentOptions() {\n    this.paymentOptionsService.resetPaymentOptions();\n    this.setPaymentOptionsError(false);\n  }\n\n  injectData(\n    fields: Array<PaymentFormGroup | PaymentFormFieldConfig>,\n    paymentTypeOptions?: PaymentTypeOptions\n  ) {\n    fields.forEach((field) => {\n      field.options = field.options || {};\n      field.options.isTemplateMode = this.options.isTemplateMode;\n      field.options.templateModeType = this.options.templateModeType;\n      field.options.isModalView = this.options.isModalView;\n      field.options.checkClosedPaymentsAccess =\n        this.options.checkClosedPaymentsAccess ??\n        this.checkClosedPaymentsAccess;\n      field.options.isWizardMode = this.configs?.length > 1;\n\n      if ((<PaymentFormGroup>field).fields instanceof Array) {\n        this.injectData((<PaymentFormGroup>field).fields, paymentTypeOptions);\n      } else {\n        switch ((field as PaymentFormFieldConfig).type) {\n          case PaymentComponents.debitAccountSelector:\n            field.options.items$ = this.getDebitAccounts();\n            field.options.fetchItems$ = this.fetchDebitAccounts$;\n            field.options.loadAccountByAccountId =\n              this.loadAccountByAccountId.bind(this);\n            field.options.fetchArrangementPermissions$ =\n              this.fetchDebitItemPermissions$;\n            field.options.arrangementPermissions$ =\n              this.paymentOrderHttpService.arrangementUserPermissions$;\n            field.options.checkClosedPaymentsAccess =\n              this.options.checkClosedPaymentsAccess;\n            break;\n          case PaymentComponents.beneficiarySelector:\n            field.options.items$ = this.loadCreditorDetails(field.options);\n            field.options.fetchItems$ = this.fetchBeneficiaries$;\n            break;\n          case PaymentComponents.internalAccountSelector:\n            field.options.paymentTypeOptions = paymentTypeOptions;\n            field.options.connectedItems$ = this.connectedAccounts$;\n            field.options.items$ =\n              field.name === InitiatorFields.initiatorAccountGroup\n                ? this.debitAccounts$\n                : this.getCreditAccounts();\n            break;\n          case PaymentComponents.accountSelector:\n            field.options.paymentTypeOptions = paymentTypeOptions;\n            field.options.connectedItems$ = this.connectedAccounts$;\n            if (\n              field.name === CounterPartyFields.counterPartyAccountGroup ||\n              this.options.isDebitPayment\n            ) {\n              field.options.fetchItems$ = this.fetchCreditAccounts$;\n              field.options.items$ = this.creditAccountList$;\n            } else {\n              field.options.items$ = this.getDebitAccounts();\n              field.options.fetchItems$ = this.fetchDebitAccounts$;\n            }\n            break;\n          case PaymentComponents.contactSelector:\n            field.options.items$ = this.getContacts();\n            field.options.fetchItems$ = this.fetchBeneficiaries$;\n            break;\n          case PaymentComponents.selectPaymentOption:\n            field.options.items$ = this.paymentOptions$;\n            break;\n          case PaymentComponents.sanctionedCountrySelector:\n          case PaymentComponents.address:\n            field.options.items$ = this.countries$;\n            break;\n          case PaymentComponents.sanctionedCurrencyAmount:\n            field.options.items$ = this.currencies$;\n            field.options.getExchangeRate$ = this.getExchangeRate$;\n            field.options.exchangeRate$ = this.exchangeRate$;\n            field.options.exchangeRateError$ = this.exchangeRateError$;\n            break;\n          case PaymentComponents.select:\n            if (\n              field.name === ScheduleFields.frequency &&\n              this.options?.paymentMode === PaymentMode.EDIT_PAYMENT\n            ) {\n              this.frequencyFieldSub$.next(field as PaymentFormFieldConfig);\n            }\n            break;\n        }\n      }\n    });\n  }\n}\n","/* eslint-disable max-len */\nexport const formI18n = {\n  unknownErrorHeader: $localize`:@@initiate-payment-unknown-error-header:Server error`,\n  unknownError: $localize`:@@initiate-payment-unknown-error:Unknown error occured.`,\n  validateFailed: $localize`:@@initiate-payment-validate-failed:Payment data error`,\n};\n\nexport const commonI18n = {\n  templateSaveFailed: $localize`:@@initiate-payment-save-template-failed-message:Failed to save the template. Please try again.`,\n  templateSaveSuccess: (templateName: string) =>\n    $localize`:@@initiate-payment-create-payment-template-success-message:Template \"${templateName}\" has been saved`,\n};\n\nexport const reviewI18n = {\n  defaultPayment: {\n    submitSuccess: $localize`:@@initiate-payment-submit-success-notification:Payment submitted successfully`,\n    submitSuccessPendingApproval: $localize`:@@initiate-payment-submit-success-pendingApproval-notification:Payment is submitted successfully, \\\n  and pending further approval(s)`,\n    editSubmitSuccess: $localize`:@@initiate-payment-edit-submit-success-notification:Edited payment submitted successfully`,\n  },\n  debitPayment: {\n    submitSuccess: $localize`:@@initiate-debit-submit-success-notification:Debit request submitted successfully`,\n    submitSuccessPendingApproval: $localize`:@@initiate-debit-submit-success-pendingApproval-notification:Debit request is submitted successfully, and pending further approval(s)`,\n    editSubmitSuccess: $localize`:@@initiate-payment-edit-submit-success-notification:Edited debit request submitted successfully`,\n  },\n  paymentSubmitSuccess: $localize`:@@initiate-payment-submit-success-notification:Payment submitted successfully`,\n  editPaymentSubmitSuccess: $localize`:@@initiate-payment-edit-submit-success-notification:Edited payment submitted successfully`,\n  paymentSubmitSuccessPendingApproval: $localize`:@@initiate-payment-submit-success-pendingApproval-notification:Payment is submitted successfully, \\\n  and pending further approval(s)`,\n  newContactSubmitSuccess: $localize`:@@initiate-payment-newContact-submit-success-notification:Contact saved successfully`,\n  newContactSubmitFailure: $localize`:@@initiate-payment-newContact-submit-failure-notification:Failed to save contact. Please try again later.`,\n  newContactSubmitSuccessPendingApproval: $localize`:@@initiate-payment-newContact-submit-success-pendingApproval-notification:Contact submitted successfully, \\\n  and pending further approval(s)`,\n  submitPaymentFailure: $localize`:@@initiate-payment-submit-failure-notification:Payment data error`,\n  debitSubmitSuccess: $localize`:@@initiate-debit-submit-success-notification:Debit request submitted successfully`,\n  editdebitSubmitSuccess: $localize`:@@initiate-payment-edit-submit-success-notification:Edited debit request submitted successfully`,\n  debitSubmitSuccessPendingApproval: $localize`:@@initiate-debit-submit-success-pendingApproval-notification:Debit request is submitted successfully, and pending further approval(s)`,\n  submitDebitFailure: $localize`:@@initiate-debit-submit-failure-notification:Debit request data error`,\n  submitPaymentFailureUnknownError: $localize`:@@initiate-payment-submit-unknown-failure-notification:Unknown error occurred.`,\n  submitPaymentFailureUnknownErrorHeader: $localize`:@@initiate-payment-submit-unknown-failure-header-notification:Server error`,\n  submitPaymentApprovalFailureCOED: {\n    header: $localize`:@@edited-payment-submit-ts-failure-header-notification:Payment not submitted`,\n    message: $localize`:@@edited-payment-submit-ts-failure-message-notification:Payment is already edited by another user`,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  mapPaymentOptions,\n  PaymentDetails,\n  PaymentOption,\n  PaymentOptionsService,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject, EMPTY, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { PaymentOption as PaymentOptionResponse } from '@backbase/data-ang/payment-order-options';\nimport { FormGroup } from '@angular/forms';\nimport {\n  resetBankDetails,\n  resetBeneficiaryAddress,\n} from '../helpers/payment-options-mappers';\nimport { CriticalFormValues } from '../models/create-payment.model';\n\n@Injectable()\nexport class CreatePaymentService {\n  private readonly selectedPaymentOptionSub$ = new BehaviorSubject<\n    PaymentOption | undefined\n  >(undefined);\n  private readonly selectedPaymentConfigSub$ = new BehaviorSubject<\n    PaymentTypeConfig | undefined\n  >(undefined);\n\n  selectedPaymentOption$ = this.selectedPaymentOptionSub$\n    .asObservable()\n    .pipe(distinctUntilChanged());\n  selectedPaymentConfig$ = this.selectedPaymentConfigSub$\n    .asObservable()\n    .pipe(distinctUntilChanged());\n\n  get selectedPaymentConfigValue(): PaymentTypeConfig | undefined {\n    return this.selectedPaymentConfigSub$.value;\n  }\n\n  static getCriticalFieldValues(\n    formValue: Partial<PaymentDetails> | null\n  ): CriticalFormValues {\n    const { initiator, counterparty, remittanceInfo } = formValue || {};\n    return {\n      debitAccountNumber: initiator?.accountNumber,\n      creditAccountNumber: counterparty?.accountNumber,\n      amount: remittanceInfo?.amountGroup,\n      country: counterparty?.creditorBank?.postalAddress?.country,\n    };\n  }\n\n  constructor(private readonly paymentOptionsService: PaymentOptionsService) {}\n\n  selectPaymentConfig(config?: PaymentTypeConfig) {\n    this.selectedPaymentConfigSub$.next(config);\n  }\n\n  selectPaymentOption(paymentOption?: PaymentOption) {\n    this.selectedPaymentOptionSub$.next(paymentOption);\n  }\n\n  getPaymentOptionsRequest(\n    configs: PaymentTypeConfig[]\n  ): Observable<PaymentOption[] | undefined> {\n    let optionsReq;\n\n    if (configs.length === 1) {\n      const config = configs[0];\n\n      // TODO: find a better solution for this\n      if (config.paymentType !== 'INTERNATIONAL_TRANSFER') {\n        return EMPTY;\n      }\n\n      optionsReq = this.paymentOptionsService\n        .getPaymentOptionsRecordByPaymentType(config.paymentType)\n        .pipe(\n          map((response: PaymentOptionResponse[]) =>\n            mapPaymentOptions(response, { [config.paymentType]: config.name })\n          )\n        );\n    } else {\n      optionsReq = this.paymentOptionsService.paymentOptions$.pipe(\n        filter((options) => !!options),\n        map((options?: PaymentOptionResponse[]) =>\n          mapPaymentOptions(options || [])\n        )\n      );\n    }\n\n    return optionsReq;\n  }\n\n  resetRedundantFields(paymentTypeConfig: PaymentTypeConfig, form: FormGroup) {\n    resetBeneficiaryAddress(paymentTypeConfig, form);\n    resetBankDetails(paymentTypeConfig, form);\n  }\n}\n","import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN,\n  CounterPartyFields,\n  defaultPaymentSuccessEventName,\n  FetchPaymentOptionsListenerFn,\n  HiddenFields,\n  InitiatePaymentHeaderStates,\n  InitiatePaymentOptions,\n  NavigationService,\n  PaymentBaseFields,\n  PaymentError,\n  PaymentErrors,\n  PaymentFormFieldConfig,\n  PaymentFormGroup,\n  PaymentHooks,\n  PaymentHooksOptions,\n  PaymentMode,\n  PaymentOption,\n  PaymentOptionsService,\n  PaymentOrderHttpService,\n  PaymentState,\n  PaymentTemplateFields,\n  PaymentTemplatesData,\n  PaymentTypeConfig,\n  PayordPaymentError,\n  removeScheduleFromConfig,\n  RoutableModalService,\n  P2PLimitErrorKeys,\n  setFormDetailsFromResponse,\n  setFormDetailsFromService,\n  setFrequencyOptionsPerConfig,\n  StateService,\n  toPostPaymentTemplate,\n  toPostRequest,\n  triggerPaymentHook,\n  focusErrorElement,\n  BaseObject,\n  RemittanceInfoFields,\n  getConfig,\n} from '@backbase/payment-orders-ang';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\nimport {\n  catchError,\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { PaymentTemplate } from '@backbase/data-ang/payment-template';\nimport { IdentifiedPaymentOrder } from '@backbase/data-ang/payment-order';\nimport { PaymentOptionsResponse } from '@backbase/data-ang/payment-order-options';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport {\n  isEditFormDirty,\n  registerFormControl,\n} from '@backbase/payord-form-builder-ang';\n\nimport {\n  mapPaymentOptionRequest,\n  normalisePaymentTemplate,\n  normalizePaymentType,\n} from '../../helpers/payment-options-mappers';\nimport { CreatePaymentConfigSetupService } from '../../services/create-payment-config-setup.service';\nimport { CreatePaymentFieldsSetupService } from '../../services/create-payment-fields-setup.service';\nimport { commonI18n, formI18n } from '../../constants/initiate-payment.i18n';\nimport { CreatePaymentService } from '../../services/create-payment.service';\n\n@Component({\n  selector: 'bb-create-payment-form',\n  templateUrl: './create-payment-form.component.html',\n  providers: [CreatePaymentFieldsSetupService],\n})\nexport class CreatePaymentFormComponent\n  implements OnInit, AfterContentInit, OnDestroy, AfterViewInit\n{\n  private readonly destroyed$ = new Subject<void>();\n\n  private paymentTypes: string | undefined;\n  private paymentTemplate: PaymentTemplate | null = null;\n  private shouldResetPaymentOptions = false;\n  private formValue = this.stateService.formInstance?.value;\n\n  header: string | undefined;\n  readonly paymentTemplateSearch = new FormControl();\n  readonly fetchOptions$ = new Subject<FormGroup>();\n  readonly submitting$ = new BehaviorSubject<boolean>(false);\n  readonly paymentState$ = this.stateService.paymentState$;\n\n  readonly paymentTemplates$: Observable<PaymentTemplatesData> =\n    this.paymentOrderHttpService.paymentTemplates$;\n  readonly loadingTemplates$ = this.paymentOrderHttpService.loading$;\n\n  readonly fetchingPaymentOptions$ = new BehaviorSubject<boolean>(false);\n  readonly paymentOptions$ = this.fieldSetupService.paymentOptions$;\n  readonly paymentOptionsError$ = this.fieldSetupService.paymentOptionsError$;\n\n  readonly selectedPaymentConfig$ =\n    this.createPaymentService.selectedPaymentConfig$;\n  readonly selectedPaymentOption$ =\n    this.createPaymentService.selectedPaymentOption$;\n\n  readonly fetchPaymentOptionsListener$: Observable<\n    FetchPaymentOptionsListenerFn | undefined\n  > = this.createPaymentSetup.fetchPaymentOptionsListener$;\n  readonly baseFields$: Observable<\n    Array<PaymentFormFieldConfig | PaymentFormGroup>\n  > = this.createPaymentSetup.baseFields$.pipe(\n    map((baseFields) => {\n      this.fieldSetupService.injectData(baseFields);\n      return baseFields;\n    })\n  );\n\n  private editedPaymentDetails: IdentifiedPaymentOrder | undefined;\n\n  options: InitiatePaymentOptions = {};\n  configs: PaymentTypeConfig[] = [];\n\n  templateSelectorName?: string;\n  isPaymentCopyControl?: AbstractControl;\n  templateNameControl = this.stateService.formInstance?.get('templateName');\n\n  errors: { key: string; message: string }[] = [];\n  isEditPaymentConfirmationDialogOpen = false;\n  enablePaymentTemplateSelector = true;\n  editPaymentHasNoChanges = false;\n  isErrorTitleDisplayed = true;\n  shouldApplyTemplate = false;\n  genericError?: string;\n  searchValue?: string;\n  showApiError = false;\n  paymentMode = PaymentMode;\n\n  @ViewChild('outlet', { read: ViewContainerRef, static: true })\n  outletRef!: ViewContainerRef;\n  @ViewChild('content', { read: TemplateRef, static: true })\n  contentRef!: TemplateRef<any>;\n\n  @ViewChild('alertContainer') alertContainer?: ElementRef;\n\n  constructor(\n    private readonly paymentOrderHttpService: PaymentOrderHttpService,\n    private readonly paymentOptionsService: PaymentOptionsService,\n    private readonly createPaymentService: CreatePaymentService,\n    private readonly navigationService: NavigationService,\n    private readonly stateService: StateService,\n    private readonly cdRef: ChangeDetectorRef,\n    private readonly createPaymentSetup: CreatePaymentConfigSetupService,\n    private readonly fieldSetupService: CreatePaymentFieldsSetupService,\n    private readonly formEl: ElementRef,\n    @Optional() private readonly modalService: RoutableModalService,\n    @Inject(PUBSUB) private readonly eventBus: Pubsub,\n    @Optional()\n    @Inject(BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN)\n    readonly paymentErrors: PayordPaymentError\n  ) {}\n\n  ngOnInit(): void {\n    combineLatest([\n      this.createPaymentSetup.configs$,\n      this.createPaymentSetup.options$,\n      this.stateService.paymentEditState$,\n    ])\n      .pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n      .subscribe(([configs, options, editedPaymentDetails]) => {\n        this.options = options;\n        this.editedPaymentDetails = editedPaymentDetails;\n        this.isErrorTitleDisplayed =\n          options.isErrorTitleDisplayed ?? this.isErrorTitleDisplayed;\n        this.enablePaymentTemplateSelector =\n          options.enablePaymentTemplateSelector ??\n          this.enablePaymentTemplateSelector;\n\n        if (configs.length === 1) {\n          // TODO: find a better solution for this\n          this.setArrangementBusFunctions(\n            configs[0].options?.closedPaymentBusFns,\n            configs[0].businessFunction\n          );\n\n          this.onSelectConfig(configs[0]);\n        }\n        const { isOneOffToRecurrentAllowed, isRecurrentToOneOffAllowed } =\n          options;\n\n        this.configs = configs.map((config) => {\n          let _config = options.isTemplateMode\n            ? removeScheduleFromConfig(config)\n            : config;\n\n          if (editedPaymentDetails) {\n            _config = setFrequencyOptionsPerConfig(\n              config,\n              !!editedPaymentDetails.schedule,\n              {\n                isOneOffToRecurrentAllowed,\n                isRecurrentToOneOffAllowed,\n              }\n            );\n          }\n\n          this.fieldSetupService.injectData(_config.fields, _config.options);\n          return _config;\n        });\n\n        this.setupPaymentTypes(this.configs);\n\n        this.header = this.createPaymentSetup.getHeader(\n          InitiatePaymentHeaderStates.FORM\n        );\n      });\n\n    this.listen();\n\n    if (this.stateService.currentState !== PaymentState.EDIT) {\n      this.fieldSetupService.clearPaymentOptions();\n      this.shouldResetPaymentOptions = true;\n    }\n\n    this.createPaymentService\n      .getPaymentOptionsRequest(this.configs)\n      .pipe(\n        tap(\n          (options) => {\n            if (!this.shouldResetPaymentOptions && !options?.length) {\n              this.fieldSetupService.setPaymentOptionsError(true);\n            }\n            this.shouldResetPaymentOptions = false;\n            this.onPaymentTypeChange(options);\n          },\n          catchError(() => {\n            this.fieldSetupService.setPaymentOptionsError(true);\n            return of([]);\n          })\n        ),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n\n    triggerPaymentHook(\n      <PaymentHooksOptions>this.createPaymentSetup.hooks,\n      PaymentHooks.onInit\n    );\n  }\n\n  ngAfterViewInit() {\n    this.stateService.paymentTemplateState$\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe((template) => {\n        if (template) {\n          this.onSelectPaymentTemplate(template);\n        }\n      });\n\n    if (this.editedPaymentDetails) {\n      this.setEditFormValues(this.editedPaymentDetails);\n      this.stateService.setEditPayment(undefined); // This is to prevent overwrite manual edits on return from review screen\n    }\n  }\n\n  ngAfterContentInit() {\n    this.renderView();\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    triggerPaymentHook(\n      <PaymentHooksOptions>this.createPaymentSetup.hooks,\n      PaymentHooks.onDestroy\n    );\n  }\n\n  private setArrangementBusFunctions(\n    closedFunctions: string[] | undefined,\n    businessFunction: string | undefined\n  ) {\n    if (closedFunctions?.length && businessFunction) {\n      // TODO: temporary solution, need to find better way do not mutate object\n      const setOfBusFun = new Set([...closedFunctions, businessFunction]);\n      closedFunctions = Array.from(setOfBusFun);\n\n      this.paymentOrderHttpService.arrangementBusFunctions =\n        closedFunctions.toString();\n    }\n  }\n\n  private setEditFormValues(payment: IdentifiedPaymentOrder) {\n    const form: FormGroup = this.stateService.formInstance;\n    const counterparty = form.get(PaymentBaseFields.counterparty) as FormGroup;\n    registerFormControl(\n      counterparty,\n      CounterPartyFields.schemeName,\n      [],\n      [],\n      'BBAN'\n    );\n    registerFormControl(form, 'paymentOrderId', [], [], payment.id);\n    this.isPaymentCopyControl = registerFormControl(\n      form,\n      HiddenFields.isPaymentCopy\n    );\n    this.isPaymentCopyControl.patchValue(\n      this.options.paymentMode === this.paymentMode.COPY_PAYMENT\n    );\n    const editForm = setFormDetailsFromService(form, payment);\n    this.stateService.initialEditFormValue = editForm.value;\n    this.setForm(editForm);\n  }\n\n  private setupPaymentTypes(configs: PaymentTypeConfig[]) {\n    this.paymentTypes = configs.map((config) => config.paymentType).join(',');\n    this.paymentOrderHttpService.paymentType = this.paymentTypes;\n  }\n\n  private renderView() {\n    this.outletRef.clear();\n    this.outletRef.createEmbeddedView(this.contentRef);\n  }\n\n  private setTemplateValues(form: FormGroup, paymentTemplate: PaymentTemplate) {\n    this.setFormValues(normalisePaymentTemplate(paymentTemplate), form);\n    this.paymentTemplate = null;\n    this.stateService.setPaymentTemplate(undefined);\n  }\n\n  private prepareForTemplateApply() {\n    const formGroup = new FormGroup({});\n    this.formValue = null;\n    this.fieldSetupService.setPaymentOptions([]);\n    this.templateNameControl = registerFormControl(formGroup, 'templateName');\n    this.stateService.saveForm(formGroup);\n  }\n\n  private getPaymentConfig(\n    paymentType?: string\n  ): PaymentTypeConfig | undefined {\n    if (paymentType) {\n      return this.configs.filter(\n        (paymentConfig) => paymentType === paymentConfig.paymentType\n      )[0];\n    }\n    return;\n  }\n\n  private setFormValues(\n    { details, name, id }: PaymentTemplate,\n    form?: FormGroup\n  ) {\n    const _form = form || this.stateService.formInstance;\n    const templateForm = setFormDetailsFromResponse(_form, details, {\n      name,\n      id,\n    });\n    this.templateSelectorName = name;\n    this.templateNameControl?.setValue(name);\n    this.setForm(templateForm);\n    _form.markAllAsTouched();\n  }\n\n  private listen() {\n    this.fetchOptions$\n      .pipe(\n        filter(\n          (form: FormGroup) =>\n            JSON.stringify(\n              CreatePaymentService.getCriticalFieldValues(this.formValue)\n            ) !==\n            JSON.stringify(\n              CreatePaymentService.getCriticalFieldValues(form.getRawValue())\n            )\n        ),\n        switchMap((form: FormGroup) => {\n          this.formValue = form.getRawValue();\n          return this.fetchPaymentOptions(form);\n        }),\n        takeUntil(this.destroyed$)\n      )\n      .subscribe();\n  }\n\n  private setForm(formInstance: FormGroup) {\n    this.stateService.setPaymentState(PaymentState.EDIT);\n    this.stateService.saveForm(formInstance);\n\n    this.renderView();\n    this.cdRef.detectChanges();\n  }\n\n  /**\n   * Callback triggered when the payment type changes\n   */\n  private onPaymentTypeChange(paymentOptions: Array<PaymentOption> = []) {\n    if (paymentOptions && paymentOptions.length) {\n      this.fieldSetupService.setPaymentOptionsError(false);\n    }\n\n    this.fieldSetupService.setPaymentOptions(paymentOptions);\n    this.fetchingPaymentOptions$.next(false);\n  }\n\n  private validatePayment(form: FormGroup) {\n    this.paymentOrderHttpService\n      .validatePayment(toPostRequest(form.getRawValue()))\n      .pipe(take(1))\n      .subscribe(\n        (response) => {\n          const control =\n            form.get('isIntraLegalEntity') ||\n            registerFormControl(form, 'isIntraLegalEntity');\n          this.templateNameControl =\n            this.templateNameControl ||\n            registerFormControl(form, 'templateName');\n          control.setValue(response.isIntraLegalEntityPaymentOrder);\n          this.templateNameControl.setValue(this.templateSelectorName);\n          this.submitting$.next(false);\n          this.navigationService.review();\n          this.stateService.canApprove = response.canApprove;\n        },\n        ({ error }) => {\n          this.submitting$.next(false);\n          this.errors = error.errors;\n\n          if (!this.isP2PLimitError(error)) {\n            this.genericError = error.message;\n            this.showApiError = true;\n            if (this.errors?.length || this.genericError) {\n              const errorObject: PaymentErrors = {\n                errorResponse: error,\n                errors: this.errors,\n                paymentErrors: this.paymentErrors,\n                notificationHeader: formI18n.validateFailed,\n                genericMessage: this.genericError,\n              };\n              this.paymentOrderHttpService.manageErrorResponse(errorObject);\n            } else {\n              this.paymentOrderHttpService.showNotification(false, {\n                header: formI18n.unknownErrorHeader,\n                message: formI18n.unknownError,\n                headerContext: error,\n              });\n            }\n            this.scrollIntoAlertView();\n          } else {\n            this.showApiError = false;\n            this.handleP2PErrors(this.errors[0]);\n          }\n        }\n      );\n  }\n\n  private handleP2PErrors(error: BaseObject<any>): void {\n    if (error?.key) {\n      const amountGroupConfig = getConfig(\n        RemittanceInfoFields.amountCurrencyGroup,\n        this.configs[0]\n      );\n\n      const validationMsg =\n        amountGroupConfig?.options?.validationMessages?.find(\n          (validationMessage: { name: string; message: string }) =>\n            validationMessage.name === error.key\n        );\n\n      if (validationMsg?.message) {\n        validationMsg.message = validationMsg.message.replace(\n          '#amount#',\n          error.context?.limit\n        );\n\n        const amountGroup = this.stateService.formInstance\n          .get(PaymentBaseFields.remittanceInfo)\n          ?.get(RemittanceInfoFields.amountCurrencyGroup);\n        amountGroup?.setErrors({ [error.key]: true });\n        amountGroup\n          ?.get(RemittanceInfoFields.amount)\n          ?.setErrors({ invalid: true });\n\n        focusErrorElement(\n          this.formEl?.nativeElement,\n          'small.bb-input-validation-message'\n        );\n      }\n    }\n  }\n\n  private scrollIntoAlertView() {\n    this.alertContainer?.nativeElement.scrollIntoView(false, {\n      behavior: 'smooth',\n      block: 'start',\n    });\n  }\n\n  private isP2PLimitError(error: any): boolean {\n    if (!Array.isArray(error.errors)) return false;\n\n    const errKey = error.errors[0]?.key;\n    return Object.values(P2PLimitErrorKeys).includes(\n      errKey as P2PLimitErrorKeys\n    );\n  }\n\n  private saveTemplate(form: FormGroup) {\n    if (this.options.paymentMode === PaymentMode.EDIT_TEMPLATE) {\n      this.editPaymentTemplate(form);\n    } else {\n      this.createPaymentTemplate(form);\n    }\n  }\n\n  private editPaymentTemplate(form: FormGroup) {\n    const templateName = form.get(PaymentTemplateFields.templateName)?.value;\n    const paymentTemplateId = form.get(\n      PaymentTemplateFields.paymentTemplateId\n    )?.value;\n    if (paymentTemplateId) {\n      this.paymentOrderHttpService\n        .editPaymentTemplate(\n          paymentTemplateId,\n          toPostPaymentTemplate(form.getRawValue())\n        )\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe(\n          this.saveTemplateSuccessCallback.bind(this, templateName),\n          this.saveTemplateErrorCallback.bind(this)\n        );\n    }\n  }\n\n  private createPaymentTemplate(form: FormGroup) {\n    const templateName = form.get(PaymentTemplateFields.templateName)?.value;\n    this.paymentOrderHttpService\n      .postPaymentTemplate(toPostPaymentTemplate(form.getRawValue()))\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(\n        this.saveTemplateSuccessCallback.bind(this, templateName),\n        this.saveTemplateErrorCallback.bind(this)\n      );\n  }\n\n  private saveTemplateSuccessCallback(templateName: string) {\n    this.paymentOrderHttpService.showNotification(true, {\n      header: commonI18n.templateSaveSuccess(templateName),\n      headerContext: { name: templateName },\n    });\n    this.submitting$.next(false);\n    if (this.options.isModalView) {\n      this.modalService?.closeModal();\n    } else {\n      this.stateService.resetForm();\n      this.renderView();\n    }\n    this.eventBus.publish(\n      <string>(this.options.successEventName || defaultPaymentSuccessEventName),\n      true\n    );\n  }\n\n  private saveTemplateErrorCallback(response: PaymentError) {\n    const { error } = response;\n    this.paymentOrderHttpService.showNotification(false, {\n      header: error?.message || commonI18n.templateSaveFailed,\n    });\n    this.submitting$.next(false);\n  }\n\n  private onHooksDone(form: FormGroup, success = true) {\n    if (success) {\n      if (this.options.isTemplateMode) {\n        this.saveTemplate(form);\n      } else {\n        this.validatePayment(form);\n      }\n    } else {\n      this.submitting$.next(false);\n    }\n  }\n\n  private isEditFormNotChanged(form: FormGroup): boolean {\n    return !isEditFormDirty(form.value, this.stateService.initialEditFormValue);\n  }\n\n  onSelectPaymentTemplate(paymentTemplateData: PaymentTemplate) {\n    const config = this.getPaymentConfig(\n      normalizePaymentType(paymentTemplateData)\n    );\n    if (this.configs.length > 1 && config) {\n      this.prepareForTemplateApply();\n      this.paymentTemplate = normalisePaymentTemplate(paymentTemplateData);\n      this.shouldApplyTemplate = true;\n      this.stateService.setPaymentState(PaymentState.EDIT);\n      this.onSelectConfig(config);\n      this.renderView();\n    } else {\n      this.setFormValues(paymentTemplateData);\n    }\n  }\n\n  clearTemplateName() {\n    this.templateSelectorName = '';\n    if (this.templateNameControl) {\n      this.templateNameControl.setValue('');\n    }\n  }\n\n  onLoadingMoreTemplates(page: number) {\n    this.paymentOrderHttpService.loadMore(page);\n  }\n\n  search(text: string) {\n    this.paymentOrderHttpService.search(text);\n  }\n\n  onSelectConfig(config?: PaymentTypeConfig) {\n    this.createPaymentService.selectPaymentConfig(config);\n  }\n\n  onPaymentOptionSelect(paymentOption?: PaymentOption) {\n    this.createPaymentService.selectPaymentOption(paymentOption);\n  }\n\n  onApplyTemplate(form: FormGroup) {\n    this.shouldApplyTemplate = false;\n    if (this.paymentTemplate) {\n      this.setTemplateValues(form, this.paymentTemplate);\n    } else {\n      this.stateService.paymentTemplateState$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((template) => {\n          if (template) {\n            this.setTemplateValues(form, template);\n          }\n        });\n    }\n  }\n\n  /**\n   * Fetches the payment options for provided payment details\n   */\n\n  private fetchPaymentOptions(\n    form: FormGroup\n  ): Observable<PaymentOptionsResponse> {\n    this.fetchingPaymentOptions$.next(true);\n    return this.paymentOptionsService.fetchPaymentOptions(\n      mapPaymentOptionRequest(form.getRawValue())\n    );\n  }\n\n  discardEditPaymentChanges() {\n    this.modalService?.closeModal();\n  }\n\n  cancelEditPaymentConfirmationDialog() {\n    this.isEditPaymentConfirmationDialogOpen = false;\n  }\n\n  onSubmit(form: FormGroup) {\n    const configVal = this.createPaymentService.selectedPaymentConfigValue;\n\n    if (configVal) {\n      this.createPaymentService.resetRedundantFields(configVal, form);\n    }\n\n    this.stateService.saveForm(form);\n    this.submitting$.next(true);\n    if (this.createPaymentSetup.hooks?.[PaymentHooks.onSave]) {\n      triggerPaymentHook(\n        this.createPaymentSetup.hooks,\n        PaymentHooks.onSave,\n        this.onHooksDone.bind(this, form),\n        form\n      );\n    } else {\n      this.onHooksDone(form);\n    }\n  }\n\n  onClear() {\n    this.fieldSetupService.clearPaymentOptions();\n    this.stateService.setPaymentState(PaymentState.INITIAL);\n    this.stateService.resetForm();\n    this.clearTemplateName();\n    this.formValue = null;\n    this.searchValue = '';\n    this.showApiError = false;\n    this.renderView();\n  }\n\n  onEditCancel(form: FormGroup) {\n    if (this.isEditFormNotChanged(form)) {\n      this.modalService?.closeModal();\n    } else {\n      this.isEditPaymentConfirmationDialogOpen = true;\n    }\n  }\n\n  onEditSubmit(form: FormGroup) {\n    if (this.isEditFormNotChanged(form)) {\n      this.editPaymentHasNoChanges = true;\n      this.scrollIntoAlertView();\n    } else {\n      this.editPaymentHasNoChanges = false;\n      this.onSubmit(form);\n    }\n  }\n\n  getForm(paymentState: PaymentState): Observable<FormGroup | undefined> {\n    if (paymentState === PaymentState.REVIEW) {\n      this.stateService.resetForm();\n      this.stateService.setPaymentState(PaymentState.INITIAL);\n    }\n\n    return this.stateService.form$;\n  }\n}\n","<bb-header-ui\n  *ngIf=\"header\"\n  headingClasses=\"bb-block bb-block--lg\"\n  headingType=\"h2\"\n  [heading]=\"header\"\n></bb-header-ui>\n<div #alertContainer>\n  <ng-container *ngIf=\"errors?.length; else noSpecificError\">\n    <ng-container *ngFor=\"let error of errors\">\n      <ng-container *ngIf=\"error.message; else noSpecificError\">\n        <bb-alert-ui *ngIf=\"showApiError\" title=\"\" modifier=\"error\">\n          <div class=\"bb-text-bold bb-text-default d-inline-flex\">\n            <ng-container *ngIf=\"isErrorTitleDisplayed\">\n              <span i18n=\"@@initiate-payment-payments-error-alert-title\">\n                Payment data error: </span\n              >&nbsp;\n            </ng-container>\n            <span>{{ $any(error)?.message }}</span>\n          </div>\n        </bb-alert-ui>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n  <ng-template #noSpecificError>\n    <ng-container *ngIf=\"genericError; else unknownError\">\n      <bb-alert-ui *ngIf=\"showApiError\" title=\"\" modifier=\"error\">\n        <div class=\"bb-text-bold bb-text-default\">\n          <ng-container *ngIf=\"isErrorTitleDisplayed\">\n            <span\n              i18n=\"@@initiate-payment-payments-generic-message-alert-title\"\n            >\n              Payment data error:\n            </span>\n          </ng-container>\n          <span>{{ genericError }}</span>\n        </div>\n      </bb-alert-ui>\n    </ng-container>\n  </ng-template>\n  <ng-template #unknownError>\n    <div class=\"bb-text-bold bb-text-default\">\n      <bb-alert-ui\n        *ngIf=\"showApiError\"\n        i18n-title=\"@@initiate-payment-payments-unknown-error-alert-title\"\n        title=\"Server error: Unknown error occurred\"\n        modifier=\"error\"\n      >\n      </bb-alert-ui>\n    </div>\n  </ng-template>\n  <bb-alert-ui\n    *ngIf=\"editPaymentHasNoChanges\"\n    i18n-title=\"\n      @@initiate-payment-payments-edit-paymet-no-changes-warning-alert-title\"\n    title=\"Please make changes to continue.\"\n    modifier=\"warning\"\n  ></bb-alert-ui>\n</div>\n\n<ng-container\n  *ngIf=\"\n    enablePaymentTemplateSelector &&\n    !options?.isTemplateMode &&\n    options?.paymentMode !== paymentMode.EDIT_PAYMENT &&\n    options?.paymentMode !== paymentMode.COPY_PAYMENT\n  \"\n>\n  <bb-payment-template-selector\n    [paymentTemplateSearch]=\"paymentTemplateSearch\"\n    [items]=\"paymentTemplates$\"\n    [loading]=\"loadingTemplates$ | async\"\n    [templateName]=\"templateSelectorName || templateNameControl?.value\"\n    [searchValue]=\"searchValue\"\n    (setValues)=\"onSelectPaymentTemplate($event)\"\n    (loadMoreTemplates)=\"onLoadingMoreTemplates($event)\"\n    (searchTemplates)=\"search($event)\"\n    (clear)=\"clearTemplateName()\"\n  >\n  </bb-payment-template-selector>\n</ng-container>\n\n<ng-container #outlet></ng-container>\n<ng-template #content>\n  <ng-container *ngIf=\"paymentState$ | async as paymentState\">\n    <ng-container *ngIf=\"configs.length === 1; else adaptiveFormTmpl\">\n      <bb-payord-form\n        [config]=\"configs[0]\"\n        [formItem]=\"getForm(paymentState) | async\"\n        [submitting]=\"submitting$ | async\"\n        [isModalView]=\"options.isModalView\"\n        [isTemplateMode]=\"options.isTemplateMode\"\n        [isDebitPayment]=\"options.isDebitPayment\"\n        [paymentMode]=\"options.paymentMode\"\n        [templateModeType]=\"options.templateModeType\"\n        (clear)=\"onClear()\"\n        (submitted)=\"onSubmit($event)\"\n        (editPaymentCancel)=\"onEditCancel($event)\"\n        (editPaymentSubmit)=\"onEditSubmit($event)\"\n      >\n      </bb-payord-form>\n\n      <bb-confirmation-dialog\n        data-role=\"discard-payment-edit-confirmation-dialog\"\n        confirmButtonColor=\"danger\"\n        (confirm)=\"discardEditPaymentChanges()\"\n        [isOpen]=\"isEditPaymentConfirmationDialogOpen\"\n        (cancel)=\"cancelEditPaymentConfirmationDialog()\"\n      >\n        <span title i18n=\"@@confirmation-dialog.edit.payment.title.discard\"\n          >Discard edited data?</span\n        >\n        <span body i18n=\"@@confirmation-dialog.edit.payment.body.discard\">\n          Are you sure you want to exit and discard all changes? Edited data\n          will be lost.\n        </span>\n        <span\n          confirmActionName\n          i18n=\"@@confirmation-dialog.edit.payment.action.discard.confirm\"\n          >Discard</span\n        >\n        <span\n          cancelActionName\n          i18n=\"@@confirmation-dialog.edit.payment.action.discard.cancel\"\n          >Not now</span\n        >\n      </bb-confirmation-dialog>\n    </ng-container>\n    <ng-template #adaptiveFormTmpl>\n      <bb-adaptive-form\n        [formItem]=\"getForm(paymentState) | async\"\n        [paymentState]=\"paymentState\"\n        [paymentTypes]=\"configs\"\n        [baseFields]=\"baseFields$ | async\"\n        [fetchOptions$]=\"fetchOptions$\"\n        [fetchingOptions]=\"fetchingPaymentOptions$ | async\"\n        [paymentOptions$]=\"paymentOptions$\"\n        [paymentOptionsError]=\"paymentOptionsError$ | async\"\n        [selectedPaymentConfig]=\"selectedPaymentConfig$ | async\"\n        [selectedPaymentOption]=\"selectedPaymentOption$ | async\"\n        [fetchPaymentOptionsListener]=\"fetchPaymentOptionsListener$ | async\"\n        [shouldApplyTemplate]=\"shouldApplyTemplate\"\n        [checkClosedPaymentsAccess]=\"!!options.checkClosedPaymentsAccess\"\n        [submitting]=\"submitting$ | async\"\n        [isModalView]=\"options.isModalView\"\n        [isDebitPayment]=\"options.isDebitPayment\"\n        (selectConfig)=\"onSelectConfig($event)\"\n        (submitted)=\"onSubmit($event)\"\n        (selectPaymentOption)=\"onPaymentOptionSelect($event)\"\n        (clear)=\"onClear()\"\n        (applyPaymentTemplate)=\"onApplyTemplate($event)\"\n      ></bb-adaptive-form>\n    </ng-template>\n  </ng-container>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreatePaymentFormComponent } from './create-payment-form.component';\nimport { PayordFormBuilderAngModule } from '@backbase/payord-form-builder-ang';\n\nconst components = [CreatePaymentFormComponent];\n\n@NgModule({\n  imports: [CommonModule, PayordFormBuilderAngModule],\n  declarations: [...components],\n  exports: [...components],\n})\nexport class CreatePaymentFormModule {}\n","import { AmountGroup } from '@backbase/payment-orders-ang';\n\nexport interface CriticalFormValues {\n  debitAccountNumber: string | undefined;\n  creditAccountNumber: string | undefined;\n  amount: AmountGroup | undefined;\n  country: string | undefined;\n}\n\nexport interface CapabilityData {\n  'payment-order-id'?: string;\n  approvalRecordId?: string;\n}\n\nexport enum P2PLimitReasonCodes {\n  MIN_TRANSFER = 'PL01',\n  MAX_TRANSFER = 'PL02',\n  DAILY = 'PL03',\n  MONTHLY = 'PL04',\n}\n","import { Component, Input } from '@angular/core';\nimport {\n  InitiatorDetails,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-initiator-details',\n  templateUrl: './initiator-details.component.html',\n})\nexport class InitiatorDetailsComponent {\n  /**\n   * Details of payment Debitor\n   */\n  @Input() data!: InitiatorDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<div class=\"bb-text-bold bb-block bb-block--sm\">\n  <bb-payord-dynamic-label\n    name=\"initiator\"\n    [config]=\"paymentConfig\"\n    defaultLabel=\"From\"\n    i18n-defaultLabel=\"@@omni-payment-review-initiator.from-account.label\"\n  ></bb-payord-dynamic-label>\n</div>\n\n<div *ngIf=\"data?.accountNumber\">\n  <div\n    class=\"break-word bb-text-bold bb-block bb-block--xs\"\n    data-role=\"debit-account-name\"\n  >\n    {{ data?.alias || data?.name }}\n  </div>\n  <div\n    data-role=\"debit-account-number\"\n    class=\"bb-text-support break-word contextual-alternates-off\"\n  >\n    {{ data?.accountNumber }}\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport {\n  CounterPartyDetails,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-creditor-account',\n  templateUrl: './creditor-account.component.html',\n})\nexport class CreditorAccountComponent {\n  /**\n   * The details of beneficiary\n   */\n  @Input() data!: CounterPartyDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<div class=\"bb-text-bold bb-block bb-block--sm\">\n  <bb-payord-dynamic-label\n    name=\"counterparty\"\n    [config]=\"paymentConfig\"\n    defaultLabel=\"To\"\n    i18n-defaultLabel=\"@@omni-payment-review-counterparty.transfer-to.label\"\n  ></bb-payord-dynamic-label>\n</div>\n<div *ngIf=\"data?.accountNumber || data?.creditorBank?.bankBranchCode\">\n  <div\n    class=\"bb-text-bold bb-block bb-block--xs\"\n    data-role=\"beneficiary-account-name\"\n  >\n    {{ data?.alias || data?.name }}\n  </div>\n  <div class=\"bb-text-support break-word contextual-alternates-off\">\n    <span data-role=\"beneficiary-account-number\">\n      {{\n        data?.creditorBank?.bankBranchCode\n          ? data?.creditorBank?.bankBranchCode + ' / ' + data?.accountNumber\n          : data?.accountNumber\n      }}\n    </span>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport {\n  PaymentTypeConfig,\n  RemittanceDetails,\n} from '@backbase/payment-orders-ang';\nimport {\n  Currency,\n  ForexDetails,\n  ChargeBearer,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-remittance-details',\n  templateUrl: './remittance-details.component.html',\n})\nexport class RemittanceDetailsComponent {\n  /**\n   * Details of Remittance other than initiator and counterparty\n   */\n  @Input() data!: RemittanceDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n\n  /**\n   * The currency exchange details of the payment\n   */\n  @Input() forexDetails?: ForexDetails;\n\n  /**\n   * The fee details for the payment.\n   */\n  @Input() transferFee?: Currency;\n\n  /**\n   * The charge bearer type of teh payment\n   */\n  @Input() chargeBearer?: ChargeBearer;\n}\n","<div class=\"bb-text-bold bb-block bb-block--sm\">\n  <bb-payord-dynamic-label\n    name=\"amountGroup\"\n    [config]=\"paymentConfig\"\n    defaultLabel=\"Amount\"\n    i18n-defaultLabel=\"@@omni-payment-review-remittance-details.amount.label\"\n  ></bb-payord-dynamic-label>\n</div>\n<div class=\"bb-highlight break-word\" data-role=\"transfer-amount\">\n  <bb-amount-ui\n    class=\"bb-heading-1\"\n    [amount]=\"data?.amountGroup?.amount\"\n    [currency]=\"data?.amountGroup?.currency\"\n    [mapCurrency]=\"false\"\n  ></bb-amount-ui>\n</div>\n\n<div data-role=\"payment-is-urgent\" class=\"bb-stack\" *ngIf=\"data?.urgent\">\n  <bb-icon-ui color=\"secondary\" name=\"info\" size=\"md\"> </bb-icon-ui>\n  &nbsp;\n  <span i18n=\"@@omni-payment-review-remittance-details.urgent-payment.label\"\n    >Urgent payment</span\n  >\n</div>\n\n<div class=\"bb-stack bb-text-support\" *ngIf=\"data?.amountOptionLabel\">\n  <span>{{ data?.amountOptionLabel }}</span>\n</div>\n","import { Component, Input } from '@angular/core';\nimport {\n  CounterPartyDetails,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-creditor-details',\n  templateUrl: './creditor-details.component.html',\n})\nexport class CreditorDetailsComponent {\n  /**\n   * The details of beneficiary\n   */\n  @Input() data!: CounterPartyDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<ng-container\n  *ngIf=\"\n    data?.entryClass ||\n    data?.accountType ||\n    data?.recipientId ||\n    data?.postalAddress?.addressLine1 ||\n    data?.postalAddress?.addressLine2 ||\n    data?.postalAddress?.streetName\n  \"\n>\n  <div\n    class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  >\n    <div class=\"card-body\">\n      <div\n        class=\"bb-text-bold bb-block bb-block--md\"\n        i18n=\"@@counterparty-details.beneficiary-details.title\"\n      >\n        Beneficiary details\n      </div>\n      <div\n        class=\"row bb-block bb-block--md\"\n        *ngIf=\"data?.entryClass || data?.accountType\"\n      >\n        <div\n          class=\"col-md-6 bb-block bb-block--md\"\n          *ngIf=\"\n            data?.accountType &&\n            (data?.accountType === 'SAVINGS' ||\n              data?.accountType === 'CHECKING')\n          \"\n        >\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"accountType\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Account type\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.account-type-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            [ngSwitch]=\"data?.accountType\"\n            data-role=\"beneficiary-account-type\"\n          >\n            <ng-container\n              i18n=\"@@counterparty-details.account-type-savings\"\n              *ngSwitchCase=\"'SAVINGS'\"\n            >\n              Savings\n            </ng-container>\n            <ng-container\n              i18n=\"@@counterparty-details.account-type-checking\"\n              *ngSwitchCase=\"'CHECKING'\"\n            >\n              Checking\n            </ng-container>\n          </div>\n        </div>\n\n        <div class=\"col-md-6 bb-block bb-block--md\" *ngIf=\"data?.entryClass\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"entryClass\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Standard entry class (SEC Type)\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.entryClass-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            [ngSwitch]=\"data?.entryClass\"\n            data-role=\"beneficiary-standard-entry-class\"\n          >\n            <ng-container\n              i18n=\"@@counterparty-details.entryClass-ppd\"\n              *ngSwitchCase=\"'PPD'\"\n            >\n              Personal (PPD)\n            </ng-container>\n            <ng-container\n              i18n=\"@@counterparty-details.entryClass-ccd\"\n              *ngSwitchCase=\"'CCD'\"\n            >\n              Business (CCD)\n            </ng-container>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row bb-block bb-block--md\" *ngIf=\"data?.recipientId\">\n        <div class=\"col-md-6 bb-block bb-block--md\">\n          <div\n            class=\"bb-text-bold break-word\"\n            data-role=\"payment-counterparty-recipient-id-label\"\n          >\n            <bb-payord-dynamic-label\n              name=\"recipientId\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Recipient ID\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.recipientId-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div data-role=\"payment-counterparty-recipient-id\">\n            {{ data?.recipientId }}\n          </div>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"\n          data?.postalAddress?.addressLine1 ||\n          data?.postalAddress?.addressLine2 ||\n          data?.postalAddress?.streetName\n        \"\n      >\n        <div\n          class=\"bb-text-bold\"\n          i18n=\"@@counterparty-details.beneficiary-address.title\"\n        >\n          Beneficiary Address\n        </div>\n        <div class=\"break-word\">\n          <bb-full-address [address]=\"data?.postalAddress\"></bb-full-address>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from '@angular/core';\nimport {\n  CounterPartyDetails,\n  PaymentTypeConfig,\n} from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-counterparty-details',\n  templateUrl: './counterparty-details.component.html',\n})\nexport class CounterpartyDetailsComponent {\n  /**\n   * The details of beneficiary\n   */\n  @Input() data!: CounterPartyDetails;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<div\n  class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  *ngIf=\"\n    data?.creditorBank?.bankName ||\n    data?.creditorBank?.bic ||\n    data?.creditorBank?.postalAddress?.addressLine1 ||\n    data?.creditorBank?.postalAddress?.addressLine2 ||\n    data?.creditorBank?.postalAddress?.streetName\n  \"\n>\n  <div class=\"card-body\">\n    <div\n      class=\"bb-text-bold bb-block bb-block--md\"\n      i18n=\"@@counterparty-details.bank-details.title\"\n    >\n      Beneficiary bank details\n    </div>\n\n    <div\n      class=\"bb-block bb-block--md\"\n      *ngIf=\"data?.creditorBank?.bankName || data?.creditorBank?.bic\"\n    >\n      <div class=\"row\">\n        <div class=\"col-6\" *ngIf=\"data?.creditorBank?.bic\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bic\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"SWIFT/BIC code\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.creditor-bank-bic-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            class=\"break-word\"\n            *ngIf=\"data?.creditorBank?.bic\"\n            data-role=\"counterparty-bic-code\"\n          >\n            {{ data?.creditorBank?.bic }}\n          </div>\n        </div>\n        <div class=\"col-6\" *ngIf=\"data?.creditorBank?.bankName\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bankName\"\n              [config]=\"paymentConfig\"\n              parentName=\"creditorBank\"\n              defaultLabel=\"Bank name\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.creditor-bank-name-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ data?.creditorBank?.bankName }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"\n        data?.creditorBank?.postalAddress?.addressLine1 ||\n        data?.creditorBank?.postalAddress?.addressLine2 ||\n        data?.creditorBank?.postalAddress?.streetName\n      \"\n    >\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"@@counterparty-details.bank-address.title\"\n      >\n        Bank address\n      </div>\n      <div class=\"break-word\">\n        <bb-full-address\n          [address]=\"data?.creditorBank?.postalAddress\"\n        ></bb-full-address>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  *ngIf=\"\n    data?.correspondentBank?.bankName ||\n    data?.correspondentBank?.bic ||\n    data?.correspondentBank?.bankBranchCode ||\n    data?.correspondentBank?.postalAddress?.addressLine1 ||\n    data?.correspondentBank?.postalAddress?.addressLine2 ||\n    data?.correspondentBank?.postalAddress?.streetName\n  \"\n>\n  <div class=\"card-body\">\n    <div\n      class=\"bb-text-bold bb-block bb-block--md\"\n      i18n=\"@@counterparty-details.correspondant-bank-details.title\"\n    >\n      Correspondent bank details\n    </div>\n\n    <div\n      class=\"bb-block bb-block--md\"\n      *ngIf=\"\n        data?.correspondentBank?.bankName ||\n        data?.correspondentBank?.bankBranchCode ||\n        data?.correspondentBank?.bic\n      \"\n    >\n      <div class=\"row\">\n        <div class=\"col-6\" *ngIf=\"data?.correspondentBank?.bankBranchCode\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bankBranchCode\"\n              [config]=\"paymentConfig\"\n              parentName=\"correspondentBank\"\n              defaultLabel=\"Routing transit number (ABA)\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.routing-transit-number-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"bb-text-support\">\n            {{ data?.correspondentBank?.bankBranchCode }}\n          </div>\n        </div>\n\n        <div class=\"col-6\" *ngIf=\"data?.correspondentBank?.bic\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bic\"\n              [config]=\"paymentConfig\"\n              parentName=\"correspondentBank\"\n              defaultLabel=\"SWIFT/BIC code\"\n              i18n-defaultLabel=\"@@counterparty-details.bic-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            class=\"break-word\"\n            *ngIf=\"data?.correspondentBank?.bic\"\n            data-role=\"correspondent-bic-code\"\n          >\n            {{ data?.correspondentBank?.bic }}\n          </div>\n        </div>\n\n        <div class=\"col-6\" *ngIf=\"data?.correspondentBank?.bankName\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bankName\"\n              [config]=\"paymentConfig\"\n              parentName=\"correspondentBank\"\n              defaultLabel=\"Bank name\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.correspondent.bank-name-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ data?.correspondentBank?.bankName }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"\n        data?.correspondentBank?.postalAddress?.addressLine1 ||\n        data?.correspondentBank?.postalAddress?.addressLine2 ||\n        data?.correspondentBank?.postalAddress?.streetName\n      \"\n    >\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"@@counterparty-details.correspondant.bank-address.title\"\n      >\n        Bank address\n      </div>\n      <div class=\"break-word\">\n        <bb-full-address\n          [address]=\"data?.correspondentBank?.postalAddress\"\n        ></bb-full-address>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"card card-sm card--highlight card--shadowless bb-block bb-block--md\"\n  *ngIf=\"\n    data?.intermediaryBank?.bankName ||\n    data?.intermediaryBank?.bic ||\n    data?.intermediaryBank?.bankBranchCode ||\n    data?.intermediaryBank?.postalAddress?.addressLine1 ||\n    data?.intermediaryBank?.postalAddress?.addressLine2 ||\n    data?.intermediaryBank?.postalAddress?.streetName\n  \"\n>\n  <div class=\"card-body\">\n    <div\n      class=\"bb-text-bold bb-block bb-block--md\"\n      i18n=\"@@counterparty-details.intermediary-bank-details.title\"\n    >\n      Intermediary bank details\n    </div>\n\n    <div\n      class=\"bb-block bb-block--md\"\n      *ngIf=\"\n        data?.intermediaryBank?.bankName ||\n        data?.intermediaryBank?.bankBranchCode ||\n        data?.intermediaryBank?.bic\n      \"\n    >\n      <div class=\"row\">\n        <div class=\"col-6\" *ngIf=\"data?.intermediaryBank?.bankBranchCode\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bankBranchCode\"\n              [config]=\"paymentConfig\"\n              parentName=\"intermediaryBank\"\n              defaultLabel=\"Routing transit number (ABA)\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.routing-transit-number-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"bb-text-support\">\n            {{ data?.intermediaryBank?.bankBranchCode }}\n          </div>\n        </div>\n\n        <div class=\"col-6\" *ngIf=\"data?.intermediaryBank?.bic\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"bic\"\n              [config]=\"paymentConfig\"\n              parentName=\"intermediaryBank\"\n              defaultLabel=\"SWIFT/BIC code\"\n              i18n-defaultLabel=\"@@counterparty-details.bic-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div\n            class=\"break-word\"\n            *ngIf=\"data?.intermediaryBank?.bic\"\n            data-role=\"correspondent-bic-code\"\n          >\n            {{ data?.intermediaryBank?.bic }}\n          </div>\n        </div>\n\n        <div class=\"col-6\">\n          <div class=\"bb-text-bold\" *ngIf=\"data?.intermediaryBank?.bankName\">\n            <bb-payord-dynamic-label\n              name=\"bankName\"\n              [config]=\"paymentConfig\"\n              parentName=\"intermediaryBank\"\n              defaultLabel=\"Bank name\"\n              i18n-defaultLabel=\"\n                @@counterparty-details.intermediary-bank-name-default-label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ data?.intermediaryBank?.bankName }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"\n        data?.intermediaryBank?.postalAddress?.addressLine1 ||\n        data?.intermediaryBank?.postalAddress?.addressLine2 ||\n        data?.intermediaryBank?.postalAddress?.streetName\n      \"\n    >\n      <div\n        class=\"bb-text-bold\"\n        i18n=\"@@counterparty-details.intermediary-bank-address.title\"\n      >\n        Bank address\n      </div>\n      <div class=\"break-word\">\n        <bb-full-address\n          [address]=\"data?.intermediaryBank?.postalAddress\"\n        ></bb-full-address>\n      </div>\n    </div>\n  </div>\n</div>\n\n<hr\n  *ngIf=\"\n    data?.creditorBank?.bankName ||\n    data?.creditorBank?.bic ||\n    data?.creditorBank?.postalAddress?.addressLine1 ||\n    data?.creditorBank?.postalAddress?.addressLine2 ||\n    data?.creditorBank?.postalAddress?.streetName ||\n    data?.correspondentBank?.bankName ||\n    data?.correspondentBank?.bic ||\n    data?.correspondentBank?.bankBranchCode ||\n    data?.correspondentBank?.postalAddress?.addressLine1 ||\n    data?.correspondentBank?.postalAddress?.addressLine2 ||\n    data?.correspondentBank?.postalAddress?.streetName ||\n    data?.intermediaryBank?.bankName ||\n    data?.intermediaryBank?.bic ||\n    data?.intermediaryBank?.bankBranchCode ||\n    data?.intermediaryBank?.postalAddress?.addressLine1 ||\n    data?.intermediaryBank?.postalAddress?.addressLine2 ||\n    data?.intermediaryBank?.postalAddress?.streetName\n  \"\n/>\n","import { Component, Input } from '@angular/core';\nimport { PaymentTypeConfig, ScheduleItem } from '@backbase/payment-orders-ang';\n\n@Component({\n  selector: 'bb-payment-schedule-details',\n  templateUrl: './schedule-details.component.html',\n})\nexport class ScheduleDetailsComponent {\n  /**\n   * Payment schedule details\n   */\n  @Input() data!: ScheduleItem;\n\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n}\n","<div\n  class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n  *ngIf=\"data?.frequency?.value || data?.frequency as freq\"\n>\n  <bb-icon-ui\n    name=\"cached\"\n    class=\"bb-stack__item bb-stack__item--spacing-sm\"\n  ></bb-icon-ui>\n  <div class=\"bb-stack__item\">\n    <div class=\"bb-text-bold bb-block bb-block--xs\">\n      <bb-payord-dynamic-label\n        name=\"frequency\"\n        [config]=\"paymentConfig\"\n        parentName=\"schedule\"\n        defaultLabel=\"Frequency\"\n        i18n-defaultLabel=\"\n          @@omni-payment-review-schedule-details.frequency.label\"\n      ></bb-payord-dynamic-label>\n    </div>\n    <div\n      data-role=\"frequency-value\"\n      i18n=\"@@omni-payment-review-schedule-details.frequency\"\n    >\n      {freq, select, other {Once} DAILY {Daily} WEEKLY {Weekly} BIWEEKLY\n      {Bi-Weekly} MONTHLY {Monthly} QUARTERLY {Quarterly} YEARLY {Annually}}\n    </div>\n  </div>\n</div>\n\n<div\n  class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n  *ngIf=\"data?.startDate\"\n>\n  <bb-icon-ui\n    name=\"today\"\n    class=\"bb-stack__item bb-stack__item--spacing-sm\"\n  ></bb-icon-ui>\n  <div class=\"bb-stack__item\">\n    <div class=\"bb-text-bold bb-block bb-block--xs\">\n      <bb-payord-dynamic-label\n        name=\"startDate\"\n        [config]=\"paymentConfig\"\n        parentName=\"schedule\"\n        defaultLabel=\"Start date\"\n        i18n-defaultLabel=\"\n          @@omni-payment-review-schedule-details.start-date.label\"\n      ></bb-payord-dynamic-label>\n    </div>\n    <div data-role=\"execution-date\">\n      {{ data?.startDate | date: 'mediumDate' }}\n    </div>\n    <div class=\"row\">\n      <span class=\"bb-text-support bb-subtitle col-md-6\">{{\n        data?.scheduleInfo\n      }}</span>\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"data?.frequency?.value || data?.frequency as freq\">\n  <ng-container *ngIf=\"freq !== 'ONCE'\">\n    <div\n      class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n      *ngIf=\"data?.endType === 'after' && data?.repeat\"\n    >\n      <bb-icon-ui\n        name=\"today\"\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n      ></bb-icon-ui>\n      <div class=\"bb-stack__item\">\n        <div\n          class=\"bb-text-bold bb-block bb-block--xs\"\n          data-role=\"end-after-label\"\n        >\n          <bb-payord-dynamic-label\n            name=\"repeat\"\n            [config]=\"paymentConfig\"\n            parentName=\"schedule\"\n            defaultLabel=\"End after\"\n            i18n-defaultLabel=\"\n              @@omni-payment-review-schedule-details.end-after.label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div data-role=\"end-after\">\n          {{ data?.repeat }}\n          <span i18n=\"@@omni-payment-review-schedule-details.occurances.label\"\n            >occurrences</span\n          >\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"bb-block bb-block--md bb-stack bb-stack--align-top\"\n      *ngIf=\"data?.endType === 'on' && data?.endDate\"\n    >\n      <bb-icon-ui\n        name=\"today\"\n        class=\"bb-stack__item bb-stack__item--spacing-sm\"\n      ></bb-icon-ui>\n      <div class=\"bb-stack__item\">\n        <div\n          class=\"bb-text-bold bb-block bb-block--xs\"\n          data-role=\"end-date-label\"\n        >\n          <bb-payord-dynamic-label\n            name=\"endDate\"\n            [config]=\"paymentConfig\"\n            parentName=\"schedule\"\n            defaultLabel=\"End date\"\n            i18n-defaultLabel=\"\n              @@omni-payment-review-schedule-details.end-date.label\"\n          ></bb-payord-dynamic-label>\n        </div>\n        <div data-role=\"end-date\">\n          {{ data?.endDate | date: 'mediumDate' }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, ChangeDetectionStrategy, Input, Optional, OnInit } from '@angular/core';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { ProgressStatus, TransactionSigningService } from '@backbase/identity-auth/transaction-signing';\nimport { BaseObject, datePart, PaymentDetails, PaymentError, PaymentTypeConfig } from '@backbase/payment-orders-ang';\nimport { merge, Observable } from 'rxjs';\nimport { mapTo } from 'rxjs/operators';\nimport { P2PLimitReasonCodes } from '../../../models/create-payment.model';\n\n@Component({\n  selector: 'bb-adapted-review-container',\n  templateUrl: './adapted-review.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdaptedReviewComponent implements OnInit {\n  /**\n   * The payment form values\n   */\n  @Input() payment?: PaymentDetails;\n  /**\n   * The status of payment progress\n   */\n  @Input() status?: string;\n  /**\n   * The payment config item\n   */\n  @Input() paymentConfig?: PaymentTypeConfig;\n  /**\n   * Methods to handle events\n   */\n  @Input() methods?: BaseObject<any>;\n  /**\n   * Limit errors from payment-order POST call\n   */\n  @Input() breachError?: PaymentError;\n  /**\n   * Asset resolver for quick-transfer widget\n   */\n  private readonly resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-payord-omni-payment-widget-ang',\n    getURIFromAssetID: (assetId: string) => `${assetId}`,\n  });\n  /**\n   * Stream of resolved success image path\n   */\n  successImg: Observable<string> = this.resolveAsset('succeed.svg');\n  /**\n   * Stream of resolved success image path\n   */\n  successImgNoMotion: Observable<string> = this.resolveAsset('no-motion.svg');\n  /**\n   * unique time to reload animated svg image everytime\n   */\n  readonly timestamp = new Date().getTime();\n  /*\n   * To identify payment request is loading.\n   */\n  isLoading$?: Observable<boolean>;\n\n  constructor(\n    private readonly assetsService: AssetsService,\n    @Optional() private readonly identityService: TransactionSigningService,\n  ) {}\n\n  ngOnInit() {\n    this.isLoading$ = merge(this.methods?.isSubmitting$(), this.identityService?.requestSubject.pipe(mapTo(false)));\n  }\n\n  /*\n   * Text for alert error content for server errors\n   */\n  get errorText(): string {\n    const amount = this.breachError?.reasonText?.split('|')[1];\n\n    if (this.isUserDeclined) {\n      return $localize`:@@initiate-payment.adapted-review.user-decline-error-message:`;\n    }\n\n    switch (this.breachError?.reasonCode) {\n      case P2PLimitReasonCodes.DAILY:\n        return $localize`:@@initiate-payment.adapted-review.P2P-daily-limit-error-message:The amount exceeds the daily limit of ${amount}`;\n      case P2PLimitReasonCodes.MONTHLY:\n        return $localize`:@@initiate-payment.adapted-review.P2P-monthly-limit-error-message:The amount exceeds the monthly limit of ${amount}`;\n      case P2PLimitReasonCodes.MAX_TRANSFER:\n        return $localize`:@@initiate-payment.adapted-review.P2P-max-limit-error-message:This amount can't exceed ${amount}`;\n      case P2PLimitReasonCodes.MIN_TRANSFER:\n        return $localize`:@@initiate-payment.adapted-review.P2P-max-limit-daily-error-message:This amount can't be lower than ${amount}`;\n      default:\n        return $localize`:@@initiate-payment.adapted-review.default-error-message:Failed to submit payment. Please try again later.`;\n    }\n  }\n\n  /*\n   * Title for alert error content for server errors\n   */\n  get errorTitle(): string {\n    if (this.breachError) {\n      return $localize`:@@initiate-payment.adapted-review.P2P-limit-error-title:Payment Failed Due to an Exceeding Limit`;\n    } else if (this.isUserDeclined) {\n      return $localize`:@@initiate-payment.adapted-review.user-declined-error-title:Your Transfer Has Been Cancelled.`;\n    } else {\n      return $localize`:@@initiate-payment.adapted-review.generic-error-title:`;\n    }\n  }\n\n  /*\n   * Boolean flag to display whether transfer date is for future\n   */\n  get isScheduledTransfer(): boolean {\n    const today = datePart();\n    const transferDate = datePart(this.payment?.schedule.startDate);\n\n    return new Date(transferDate) > new Date(today);\n  }\n\n  private get isUserDeclined(): boolean {\n    return this.status === ProgressStatus.USER_DECLINED;\n  }\n}\n","<ng-container *ngTemplateOutlet=\"status === 'SUCCESS' ? successScreen : reviewTemplate\"> </ng-container>\n\n<ng-template #reviewTemplate>\n  <div\n    *ngIf=\"isLoading$ | async\"\n    data-role=\"adapted-review-loader\"\n    class=\"bb-loading-indicator-wrapper bb-loading-indicator-wrapper--overlay\"\n  >\n    <bb-loading-indicator-ui loaderSize=\"lg\"></bb-loading-indicator-ui>\n  </div>\n\n  <fieldset class=\"bb-fieldset omni-payment-adapted-review\">\n    <legend class=\"bb-label bb-block bb-block--lg\" i18n=\"@@omni-payment-wrapper-review-page-title.label\">\n      Review your transfer\n    </legend>\n    <ng-container *ngIf=\"payment\">\n      <bb-alert-ui\n        *ngIf=\"status === 'ERROR' || status === 'USER_DECLINED' || breachError\"\n        [title]=\"errorTitle\"\n        (close)=\"(false)\"\n        modifier=\"error\"\n      >\n        <span data-role=\"failure-message\">{{ errorText }}</span>\n      </bb-alert-ui>\n\n      <div *ngIf=\"payment?.isIntraLegalEntity\" class=\"bb-block bb-block--sm bb-inline-stack bb-text-support\">\n        <div class=\"bb-inline-stack__item\">\n          <bb-icon-ui name=\"domain\"></bb-icon-ui>\n        </div>\n        <div\n          class=\"bb-inline-stack__item bb-text-bold\"\n          i18n=\"@@omni-payment-wrapper-review-payment-intra-company-payment.label\"\n        >\n          Intracompany payment\n        </div>\n      </div>\n\n      <div class=\"bb-item-log bb-block bb-block--lg\">\n        <div class=\"bb-item-log__record item-log__record--has-bullet\">\n          <div class=\"bb-stack bb-stack--align-top\">\n            <div\n              class=\"bb-item-log-record__bullet-icon bb-item-log-record__bullet-icon--filled bb-stack__item bb-stack__item--spacing-md\"\n            ></div>\n            <div class=\"bb-item-log-record__details\">\n              <bb-payment-initiator-details [data]=\"payment?.initiator\" [paymentConfig]=\"paymentConfig\">\n              </bb-payment-initiator-details>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-item-log__record item-log__record--has-bullet\">\n          <div class=\"bb-stack bb-stack--align-top\">\n            <div class=\"bb-item-log-record__bullet-icon bb-stack__item bb-stack__item--spacing-md\"></div>\n            <div class=\"bb-item-log-record__details\">\n              <bb-creditor-account [data]=\"payment?.counterparty\" [paymentConfig]=\"paymentConfig\">\n              </bb-creditor-account>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-block bb-block--lg\">\n        <bb-payment-remittance-details\n          [data]=\"payment?.remittanceInfo\"\n          [transferFee]=\"payment?.transferFee\"\n          [chargeBearer]=\"payment?.chargeBearer\"\n          [forexDetails]=\"methods?.getForexDetails(payment)\"\n          [paymentConfig]=\"paymentConfig\"\n        ></bb-payment-remittance-details>\n      </div>\n\n      <bb-payment-creditor-details\n        [data]=\"payment?.counterparty\"\n        [paymentConfig]=\"paymentConfig\"\n      ></bb-payment-creditor-details>\n\n      <bb-payment-counterparty-details\n        [data]=\"payment?.counterparty\"\n        [paymentConfig]=\"paymentConfig\"\n      ></bb-payment-counterparty-details>\n\n      <bb-payment-schedule-details\n        [data]=\"payment?.schedule\"\n        [paymentConfig]=\"paymentConfig\"\n      ></bb-payment-schedule-details>\n\n      <div\n        *ngIf=\"\n          payment?.remittanceInfo?.description ||\n          payment?.remittanceInfo?.paymentReference ||\n          payment?.counterparty.messageToBank ||\n          payment?.counterparty.remittanceInformation\n        \"\n      >\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.paymentReference\">\n          <div class=\"bb-text-bold\" data-role=\"payment-reference-label\">\n            <bb-payord-dynamic-label\n              name=\"paymentReference\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Payment reference\"\n              i18n-defaultLabel=\"@@omni-payment-wrapper-review-remittance-info-payment-reference.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-reference\">\n            {{ payment?.remittanceInfo?.paymentReference }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md bb-inline-stack bb-stack--align-top\">\n          <bb-icon-ui name=\"subject\" class=\"bb-stack__item bb-stack__item--spacing-sm\"></bb-icon-ui>\n          <div class=\"bb-stack__item\">\n            <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n              <bb-payord-dynamic-label\n                name=\"description\"\n                parentName=\"remittanceInfo\"\n                defaultLabel=\"Memo\"\n                i18n-defaultLabel=\"@@omni-payment-wrapper-review-remittance-info-description.label\"\n              ></bb-payord-dynamic-label>\n            </div>\n            <div class=\"break-word\" data-role=\"payment-description\">\n              {{ payment?.remittanceInfo?.description }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty.remittanceInformation\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary\"\n              i18n-defaultLabel=\"@@omni-payment-wrapper-review-counterparty-message-to-beneficiary.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ payment?.counterparty?.remittanceInformation }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.messageToBank || payment?.counterparty?.messageToBank\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary bank\"\n              i18n-defaultLabel=\"@@omni-payment-wrapper-review-message-to-bank.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\">\n            {{ payment?.counterparty?.messageToBank || payment?.messageToBank }}\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </fieldset>\n\n  <div class=\"bb-button-bar bb-button-bar--reverse\">\n    <button\n      bbButton\n      class=\"bb-button-bar__button\"\n      data-role=\"submit-button\"\n      (click)=\"methods?.submit()\"\n      [disabled]=\"methods?.isSubmitting$() | async\"\n      *ngIf=\"!methods?.isApprovalEnabled()\"\n      i18n=\"@@omni-payment-wrapper-review-btn-group-submit-payment.label\"\n    >\n      Confirm and Send Money\n    </button>\n    <div class=\"btn-group bb-button-bar__button\" data-role=\"button-group\" *ngIf=\"methods?.isApprovalEnabled()\">\n      <bb-load-button-ui\n        color=\"primary\"\n        [isLoading]=\"methods?.isSubmitting$() | async\"\n        (click)=\"methods?.submit()\"\n        i18n=\"@@omni-payment-wrapper-review-btn-group-submit-payment.label\"\n      >\n        Submit\n      </bb-load-button-ui>\n\n      <bb-dropdown-menu-ui\n        class=\"btn-group\"\n        btnColor=\"primary\"\n        icon=\"caret-down\"\n        data-role=\"dropdown-menu\"\n        container=\"body\"\n        position=\"top-right\"\n      >\n        <ng-template bbDropdownMenuItem>\n          <button\n            role=\"menuitem\"\n            type=\"button\"\n            class=\"dropdown-item\"\n            data-role=\"bus-submit-and-approve-button\"\n            [disabled]=\"methods?.isSubmitting$() | async\"\n            (bbKeyboardClick)=\"methods?.submit(true)\"\n            i18n=\"@@omni-payment-wrapper-review-btn-group-submit-and-approve-payment.label\"\n          >\n            Submit and Approve\n          </button>\n        </ng-template>\n      </bb-dropdown-menu-ui>\n    </div>\n    <button\n      class=\"bb-button-bar__button\"\n      bbButton\n      color=\"secondary\"\n      data-role=\"edit-button\"\n      (click)=\"methods?.edit()\"\n      [disabled]=\"methods?.isSubmitting$() | async\"\n      i18n=\"@@omni-payment-wrapper-review-btn-group-edit-payment.label\"\n    >\n      Edit\n    </button>\n    <button\n      bbButton\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      color=\"link\"\n      data-role=\"cancel-button\"\n      (click)=\"methods?.toggleDiscardDialog()\"\n      [disabled]=\"methods?.isSubmitting$() | async\"\n      i18n=\"@@omni-payment-wrapper-review-btn-group-discard-payment.label\"\n    >\n      Cancel\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #successScreen>\n  <div class=\"bb-text-align-center bb-block--xl\">\n    <picture>\n      <source srcset=\"{{ successImgNoMotion | async }}\" media=\"(prefers-reduced-motion: reduce)\" />\n      <img\n        srcset=\"{{ (successImg | async) + '?' + timestamp }}\"\n        alt=\"Success!\"\n        i18n-alt=\"Success!|Text for transfer succeeded@@omni-payment-wrapper.complete.transfer-succeeded\"\n        data-role=\"transfer-success-anim\"\n        class=\"img-fluid\"\n      />\n    </picture>\n    <div></div>\n    <bb-header-ui\n      headingClasses=\"bb-text-semi-bold\"\n      headingType=\"h2\"\n      heading=\"Success!\"\n      i18n-heading=\"Success!|Text for success@@omni-payment-wrapper.complete.success\"\n    ></bb-header-ui>\n    <div data-role=\"adapted-success-message\" *ngIf=\"!payment?.paymentOrderId; else editPaymentMessageTemplate\">\n      <span\n        *ngIf=\"!isScheduledTransfer\"\n        class=\"bb-text-support\"\n        i18n=\"Success Transfer|Text for success transfer@@omni-payment-wrapper.complete.success-message\"\n      >\n        You’ve just transferred\n        {{ payment?.remittanceInfo?.amountGroup.currency }}\n        {{ payment?.remittanceInfo?.amountGroup.amount }} to {{ payment?.counterparty.name }}'s.\n      </span>\n      <span\n        *ngIf=\"isScheduledTransfer\"\n        class=\"bb-text-support\"\n        i18n=\"\n          Success Scheduled Transfer|Text for success scheduled\n          transfer@@omni-payment-wrapper.scheduled-transfer.complete.success-message\"\n      >\n        You’ve just scheduled transfer to {{ payment?.counterparty.name }}'s.\n      </span>\n    </div>\n    <ng-template #editPaymentMessageTemplate>\n      <span\n        class=\"bb-text-support\"\n        i18n=\"Success edit transfer|Text for edit transfer success@@omni-payment-wrapper.complete.success-edit-message\"\n        data-role=\"adapted-success-edit-message\"\n      >\n        You’ve just edited the scheduled transfer to\n        {{ payment?.counterparty.name }}'s.\n      </span>\n    </ng-template>\n  </div>\n  <div class=\"bb-text-align-center bb-block bb-block--xl\" *ngIf=\"payment?.counterparty?.saveNewContact\">\n    <div class=\"bb-payment-account-details-card bb-inline-stack\">\n      <div class=\"bb-inline-stack\">\n        <ng-container *ngIf=\"!!(methods?.getSaveContactResponse$ | async)?.id; else saveContactFail\">\n          <bb-icon-ui name=\"success\" color=\"success\" class=\"bb-stack__item bb-stack__item--spacing-sm\"></bb-icon-ui>\n          <span\n            i18n=\"\n              Success Save Contact|Text for success save contact@@omni-payment-wrapper.complete.success-save-contact\"\n            >{{ payment?.counterparty?.name }} is saved to your contacts</span\n          >\n        </ng-container>\n        <ng-template #saveContactFail>\n          <bb-icon-ui\n            name=\"error-outline\"\n            color=\"danger\"\n            class=\"bb-stack__item bb-stack__item--spacing-sm\"\n          ></bb-icon-ui>\n          <span i18n=\"Fail Save Contact|Text for fail save contact@@omni-payment-wrapper.complete.fail-save-contact\"\n            >Can’t save {{ payment?.counterparty?.name }} to your contacts. Please try again later.</span\n          >\n        </ng-template>\n      </div>\n    </div>\n  </div>\n  <div class=\"bb-text-align-center\">\n    <div class=\"bb-block bb-block--md\">\n      <button\n        *ngIf=\"!payment?.paymentOrderId\"\n        bbButton\n        color=\"primary\"\n        (click)=\"methods?.reset()\"\n        i18n=\"Make another transfer button|Make another transfer@@omni-payment-wrapper.complete.button.transfer-done\"\n      >\n        Make another transfer\n      </button>\n      <button\n        *ngIf=\"payment?.paymentOrderId\"\n        bbButton\n        color=\"primary\"\n        (click)=\"methods?.navigateToAfterSuccessPage()\"\n        i18n=\"\n          View scheduled transfers button|View scheduled\n          transfers@@omni-payment-wrapper.complete.button.scheduled-transfer-done\"\n      >\n        View scheduled transfers\n      </button>\n    </div>\n  </div>\n</ng-template>\n\n<bb-modal-ui\n  [isOpen]=\"methods?.showDiscardDialog()\"\n  (cancel)=\"methods?.toggleDiscardDialog()\"\n  (confirm)=\"methods?.reset()\"\n>\n  <bb-modal-header-ui\n    title=\"Discard entered data?\"\n    i18n-title=\"omni-payment-adapted-review-discard-modal-title\"\n  ></bb-modal-header-ui>\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <ng-container i18n=\"@@omni-payment-adapted-review-discard-modal-content\">\n        Are you sure to exit and discard all changes? Entered data will be lost.\n      </ng-container>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"methods?.reset()\"\n          data-role=\"discard-action-btn\"\n          i18n=\"@@omni-payment-adapted-review-discard-modal-discard-btn\"\n        >\n          Discard\n        </button>\n\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          color=\"link\"\n          (click)=\"methods?.toggleDiscardDialog()\"\n          data-role=\"cancel-action-btn\"\n          i18n=\"@@omni-payment-adapted-review-discard-modal-cancel-btn\"\n        >\n          Cancel\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>\n","import { Component, ElementRef, Inject, OnDestroy, OnInit, Optional, TemplateRef, ViewChild } from '@angular/core';\nimport {\n  ApprovalStatus,\n  BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN,\n  BreachReportError,\n  contactItemToService,\n  defaultPaymentSuccessEventName,\n  ForexDetails,\n  getForexDetailsFromPayment,\n  getLabelFromPaymentConfig,\n  InitiatePaymentHeaderStates,\n  InitiatePaymentOptions,\n  isObjectTruthy,\n  ModalState,\n  NavigationService,\n  noWhitespaceValidator,\n  PaymentDetails,\n  PaymentError,\n  PaymentErrors,\n  PaymentHooks,\n  PaymentHooksOptions,\n  PaymentMode,\n  PaymentOrderHttpService,\n  PaymentOrderResponseItem,\n  PaymentState,\n  PaymentSubmitStatuses,\n  PaymentTypeConfig,\n  PayordPaymentError,\n  ProgressStatus,\n  ReviewScreens,\n  ReviewTemplateContext,\n  RoutableModalService,\n  StateService,\n  Status,\n  toPostRequest,\n  triggerPaymentHook,\n} from '@backbase/payment-orders-ang';\n\nimport { catchError, filter, map, pluck, takeUntil, tap } from 'rxjs/operators';\nimport { BehaviorSubject, EMPTY, Observable, of, Subject } from 'rxjs';\nimport {\n  PaymentOrderGetResponse,\n  PaymentOrderProgressStatusGet,\n  PaymentOrdersPostResponse,\n  PaymentOrdersValidatePost,\n} from '@backbase/data-ang/payment-order';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TransactionCallbackParam, TransactionSigningHelperService } from '@backbase/identity-auth/transaction-signing';\nimport { ActiveContactStatus, ContactsPostResponseBody } from '@backbase/data-ang/contact-manager';\nimport { PaymentTemplatesPostRequest } from '@backbase/data-ang/payment-template';\nimport { PurposeOfPayment } from '@backbase/data-ang/payment-order-options';\n\nimport { CreatePaymentService } from '../../services/create-payment.service';\nimport { CreatePaymentConfigSetupService } from '../../services/create-payment-config-setup.service';\nimport { commonI18n, reviewI18n } from '../../constants/initiate-payment.i18n';\nimport { CapabilityData, P2PLimitReasonCodes } from '../../models/create-payment.model';\n\n@Component({\n  selector: 'bb-review-payment',\n  templateUrl: 'review-payment.component.html',\n})\nexport class ReviewPaymentContainerComponent implements OnInit, OnDestroy {\n  private showConfirmation = false;\n  private paymentItem$!: Observable<PaymentDetails>;\n  private gc$ = new Subject();\n  private saveContactResponse$ = new BehaviorSubject<ContactsPostResponseBody | null>(null);\n  private paymentOrderId = '';\n  private paymentMessage?: string;\n  private approvalPending = false;\n  private enablePaymentTemplate = true;\n  private saveTemplate = false;\n  private canApprove = false;\n  private paymentForm?: FormGroup;\n  private paymentResponse?: Partial<PaymentOrderResponseItem>;\n\n  @ViewChild('alertContainer') alertContainer!: ElementRef;\n  header: string | undefined;\n  genericError?: string;\n  showBreachDetails = false;\n  paymentMode = PaymentMode;\n  paymentItem!: PaymentDetails;\n  isErrorTitleDisplayed = true;\n  reviewScreens = ReviewScreens;\n  breachError?: BreachReportError;\n  paymentTemplateForm!: FormGroup;\n  widgetOptions: InitiatePaymentOptions = {};\n  errors: { key: string; message: string }[] = [];\n  submitting$ = new BehaviorSubject<boolean>(false);\n  savingTemplate$ = new BehaviorSubject<boolean>(false);\n  reviewTemplate: TemplateRef<ReviewTemplateContext> | undefined;\n  paymentStatus$ = new BehaviorSubject<string | undefined>(undefined);\n  selectedPaymentConfig$: Observable<PaymentTypeConfig | undefined> = this.createPaymentService.selectedPaymentConfig$;\n  paymentTemplateModalState: BehaviorSubject<ModalState | undefined> = new BehaviorSubject<ModalState | undefined>(\n    undefined,\n  );\n\n  methods = {\n    edit: this.onEdit.bind(this),\n    submit: this.submitPayment.bind(this),\n    reset: this.resetPayment.bind(this),\n    discard: this.discardPayment.bind(this),\n    toggleDiscardDialog: this.toggleConfirmationDialog.bind(this),\n    showDiscardDialog: this.showDiscardDialog.bind(this),\n    isApprovalEnabled: this.isApprovalEnabled.bind(this),\n    isPaymentTemplateEnabled: this.isPaymentTemplateEnabled.bind(this),\n    isNewPaymentEnabled: this.isNewPaymentEnabled.bind(this),\n    isSavingTemplate$: this.isSavingTemplate$.bind(this),\n    getPaymentMessage: this.getPaymentMessage.bind(this),\n    getPurposeDescription: this.getPurposeDescription.bind(this),\n    isSubmitting$: this.isSubmitting$.bind(this),\n    getLabelText: getLabelFromPaymentConfig,\n    getForexDetails: this.getForexDetails.bind(this),\n    showBreachModal: this.showBreachModal.bind(this),\n    isTemplateSaved: this.isTemplateSaved.bind(this),\n    openTemplateModal: this.openTemplateModal.bind(this),\n    doneEditing: this.doneEditing.bind(this),\n    navigateToAfterSuccessPage: this.navigateToAfterSuccessPage.bind(this),\n    getPaymentResponse: this.getPaymentResponse.bind(this),\n    getSaveContactResponse$: this.saveContactResponse$,\n    getPaymentStatusType: this.getPaymentStatusType.bind(this),\n  };\n\n  createTemplatePermission$ = this.paymentOrderHttpService.createPermission$.pipe(\n    map(() => true),\n    catchError((error) => of(false)),\n  );\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly stateService: StateService,\n    @Inject(PUBSUB) private readonly eventBus: Pubsub,\n    private readonly navigationService: NavigationService,\n    private readonly createPaymentService: CreatePaymentService,\n    @Optional() private readonly modalService: RoutableModalService,\n    private readonly paymentOrderHttpService: PaymentOrderHttpService,\n    private readonly createPaymentSetup: CreatePaymentConfigSetupService,\n    @Optional()\n    private readonly transactionSigningHelper: TransactionSigningHelperService,\n    @Optional()\n    @Inject(BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN)\n    readonly paymentErrors: PayordPaymentError,\n  ) {}\n\n  onEdit(): void {\n    this.stateService.setPaymentState(PaymentState.EDIT);\n    this.navigationService.form();\n  }\n\n  ngOnInit(): void {\n    this.stateService.setPaymentState(PaymentState.REVIEW);\n    this.canApprove = this.stateService.canApprove;\n\n    this.createPaymentSetup.reviewTemplate$\n      .pipe(\n        takeUntil(this.gc$),\n        filter((template) => !!template),\n      )\n      .subscribe((template) => (this.reviewTemplate = template));\n\n    this.createPaymentSetup.options$.pipe(takeUntil(this.gc$)).subscribe((options) => {\n      this.isErrorTitleDisplayed = Boolean(options.isErrorTitleDisplayed);\n      this.widgetOptions = options;\n\n      this.header = this.createPaymentSetup.getHeader(InitiatePaymentHeaderStates.REVIEW);\n    });\n\n    this.paymentItem$ = this.stateService.form$.pipe(\n      takeUntil(this.gc$),\n      tap((form?: FormGroup) => (this.paymentForm = form)),\n      map((form) => form?.getRawValue() || {}),\n    );\n\n    this.paymentItem$.pipe(takeUntil(this.gc$)).subscribe((data?: PaymentDetails) => {\n      if (data && isObjectTruthy(data)) {\n        this.paymentItem = data;\n      } else {\n        this.stateService.setPaymentState(PaymentState.INITIAL);\n        this.navigationService.form();\n      }\n    });\n\n    this.paymentTemplateForm = this.buildPaymentTemplateForm();\n  }\n\n  isSavingTemplate$(): BehaviorSubject<boolean> {\n    return this.savingTemplate$;\n  }\n\n  private onSubmit(approved = false): void {\n    this.submitting$.next(true);\n\n    if (this.paymentItem.counterparty.saveNewContact) {\n      this.saveNewContact();\n    }\n\n    this.postPaymentOrder(approved);\n  }\n\n  private saveNewContact(): void {\n    this.paymentOrderHttpService\n      .saveNewContact({\n        ...contactItemToService(this.paymentItem.counterparty),\n        accessContextScope: this.widgetOptions.accessContextScope,\n      })\n      .pipe(takeUntil(this.gc$))\n      .subscribe((response: ContactsPostResponseBody | null) => {\n        const { id, status } = response || {};\n        this.saveContactResponse$.next(response);\n        const contactSaved = !!id;\n        this.paymentOrderHttpService.showNotification(contactSaved, {\n          header: contactSaved\n            ? status === ActiveContactStatus.PENDINGAPPROVAL\n              ? reviewI18n.newContactSubmitSuccessPendingApproval\n              : reviewI18n.newContactSubmitSuccess\n            : reviewI18n.newContactSubmitFailure,\n        });\n      });\n  }\n\n  private handlePaymentError(error: PaymentError) {\n    this.genericError = error?.error?.message;\n    this.errors = error?.error?.errors;\n    if (this.errors?.length || this.genericError) {\n      const errorObject: PaymentErrors = {\n        errorResponse: error,\n        genericMessage: this.genericError,\n        errors: this.errors,\n        paymentErrors: this.paymentErrors,\n        notificationHeader: reviewI18n.submitPaymentFailure,\n      };\n      this.paymentOrderHttpService.manageErrorResponse(errorObject);\n    } else {\n      this.paymentOrderHttpService.showNotification(false, {\n        header: reviewI18n.submitPaymentFailureUnknownErrorHeader,\n        message: reviewI18n.submitPaymentFailureUnknownError,\n      });\n    }\n    const message = error?.statusText;\n    let status: string;\n    switch (message) {\n      case 'rejected_by_user':\n        status = ProgressStatus.USER_DECLINED;\n        break;\n      default:\n        status = 'ERROR';\n    }\n\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n  }\n\n  private putOrPostPaymentOrder(post: PaymentOrdersValidatePost): Observable<PaymentOrdersPostResponse> {\n    const isCopyPayment = this.widgetOptions?.paymentMode === PaymentMode.COPY_PAYMENT;\n    const paymentOrderId = this.paymentItem.paymentOrderId;\n    return paymentOrderId && !isCopyPayment\n      ? this.paymentOrderHttpService.putPaymentOrder({ ...post, id: paymentOrderId }, paymentOrderId)\n      : this.paymentOrderHttpService.postPaymentOrder(post);\n  }\n\n  private postPaymentOrder(approved: boolean): void {\n    const shouldApprove = approved ? { approved } : null;\n    this.putOrPostPaymentOrder(toPostRequest({ ...this.paymentItem, ...shouldApprove }))\n      .pipe(\n        takeUntil(this.gc$),\n        catchError((error: HttpErrorResponse) => {\n          this.alertContainer?.nativeElement.scrollIntoView(false);\n\n          if (this.hasLimitBreach(error)) {\n            this.paymentStatus$.next('LIMIT_BREACH');\n            this.breachError = error.error || error;\n            this.submitting$.next(false);\n          } else {\n            this.handlePaymentError(error as PaymentError);\n          }\n\n          return EMPTY;\n        }),\n      )\n      .subscribe((response: PaymentOrdersPostResponse | CapabilityData) => {\n        if (this.transactionSigningHelper?.isTransactionSigningResponse(response)) {\n          this.handleTransactionSigning(response as CapabilityData);\n        } else {\n          this.handlePaymentSubmit(response as PaymentOrdersPostResponse);\n        }\n      });\n  }\n\n  private handlePaymentSubmit(response: PaymentOrderResponseItem | Omit<PaymentOrderGetResponse, 'version'>): void {\n    const { status: _paymentStatus } = response;\n    const isApprovalRejected = _paymentStatus === ApprovalStatus.REJECTED;\n    const status = !!response.id && !isApprovalRejected ? 'SUCCESS' : _paymentStatus || 'ERROR';\n\n    this.paymentOrderId = response?.id;\n    this.approvalPending = _paymentStatus === Status.ENTERED || _paymentStatus === ProgressStatus.PENDING_APPROVAL;\n\n    if (!!response.id && !isApprovalRejected) {\n      const isEditPayment = this.widgetOptions?.paymentMode === PaymentMode.EDIT_PAYMENT;\n      const { submitSuccess, submitSuccessPendingApproval, editSubmitSuccess } = this.widgetOptions.isDebitPayment\n        ? reviewI18n.debitPayment\n        : reviewI18n.defaultPayment;\n\n      const header = isEditPayment\n        ? editSubmitSuccess\n        : this.approvalPending\n        ? submitSuccessPendingApproval\n        : submitSuccess;\n\n      this.paymentOrderHttpService.showNotification(true, { header });\n\n      this.eventBus.publish(this.widgetOptions.successEventName || defaultPaymentSuccessEventName, true);\n      this.header = this.createPaymentSetup.getHeader(InitiatePaymentHeaderStates.SUBMITTED);\n    }\n\n    this.paymentResponse = response;\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n  }\n\n  private handleTransactionSigning(response: CapabilityData): void {\n    if (!this.transactionSigningHelper) {\n      return;\n    }\n    const paymentOrderId = response['payment-order-id'];\n    if (paymentOrderId) {\n      this.transactionSigningHelper.getTransactionInfo({\n        data: response,\n        asyncPollingOptions: {\n          pollInterval: this.widgetOptions.pollInterval,\n          maxRetries: 3,\n          pollUntilFn: this.isPaymentConfirmed,\n          complete$: this.gc$,\n        },\n        fetchFn: this.getPaymentProgressStatus.bind(this),\n        onSuccess: this.onTransactionSigningSuccess.bind(this, paymentOrderId),\n        onRejected: this.onTransactionSigningReject.bind(this, paymentOrderId),\n        onDeclined: this.onTransactionSigningDecline.bind(this),\n        onError: this.onTransactionSigningError.bind(this),\n      });\n    }\n  }\n\n  private onTransactionSigningSuccess(paymentOrderId: string): void {\n    this.paymentOrderHttpService\n      .getPayment(paymentOrderId)\n      .pipe(takeUntil(this.gc$))\n      .subscribe(this.handlePaymentSubmit.bind(this));\n  }\n\n  private onTransactionSigningReject(paymentOrderId: string, _: TransactionCallbackParam): void {\n    this.handleRejectedPayment(paymentOrderId);\n  }\n\n  private onTransactionSigningDecline({ status }: TransactionCallbackParam): void {\n    const header = this.widgetOptions.isDebitPayment ? reviewI18n.submitDebitFailure : reviewI18n.submitPaymentFailure;\n\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n    this.paymentOrderHttpService.showNotification(false, { header });\n  }\n\n  private onTransactionSigningError({ status }: TransactionCallbackParam): void {\n    const header = this.widgetOptions.isDebitPayment ? reviewI18n.submitDebitFailure : reviewI18n.submitPaymentFailure;\n    const errorMessage = status === 'COED' ? reviewI18n.submitPaymentApprovalFailureCOED : { header };\n\n    this.submitting$.next(false);\n    this.paymentStatus$.next(status === 'COED' ? 'COED' : 'ERROR');\n    this.paymentOrderHttpService.showNotification(false, { ...errorMessage });\n  }\n\n  private handleRejectedPayment(paymentOrderId: string): void {\n    this.paymentOrderHttpService\n      .getPayment(paymentOrderId)\n      .pipe(takeUntil(this.gc$))\n      .subscribe((response) => {\n        if (response.reasonCode === 'LTBR') {\n          this.paymentStatus$.next('LIMIT_BREACH');\n          this.breachError = {\n            message: '',\n            breachReport: response.breachReports,\n          };\n        } else {\n          const header = this.widgetOptions.isDebitPayment\n            ? reviewI18n.submitDebitFailure\n            : reviewI18n.submitPaymentFailure;\n\n          this.paymentOrderHttpService.showNotification(false, { header });\n          this.paymentStatus$.next('ERROR');\n        }\n\n        this.submitting$.next(false);\n      });\n  }\n\n  private getPaymentProgressStatus(data?: CapabilityData): Observable<string> {\n    return this.paymentOrderHttpService.getPaymentProgressStatus(data?.['payment-order-id'] || '').pipe(\n      map((res) => {\n        if (\n          res?.progressStatus === PaymentOrderProgressStatusGet.ProgressStatusEnum.REJECTED &&\n          res.reasonCode === 'COED'\n        ) {\n          res = {\n            ...res,\n            progressStatus: res.reasonCode as PaymentOrderProgressStatusGet.ProgressStatusEnum,\n          };\n        }\n\n        return res;\n      }),\n      pluck('progressStatus'),\n    );\n  }\n\n  private isPaymentConfirmed(status: string): boolean {\n    return !!status && status !== ProgressStatus.CONFIRMATION_PENDING && status !== ProgressStatus.SENDING;\n  }\n\n  private onHooksDone(approved: boolean, success = true): void {\n    if (success) {\n      this.onSubmit(approved);\n    } else {\n      this.submitting$.next(false);\n    }\n  }\n\n  private hasLimitBreach(response: any): boolean {\n    const isP2PLimitBreach = Object.values(P2PLimitReasonCodes).includes(response.reasonCode);\n    return !!response?.breachReport || !!response?.error?.breachReport || isP2PLimitBreach;\n  }\n\n  showBreachModal(): void {\n    this.showBreachDetails = true;\n  }\n\n  getPaymentResponse(): Partial<PaymentOrderResponseItem> | undefined {\n    return this.paymentResponse;\n  }\n\n  hideBreachModal(): void {\n    this.showBreachDetails = false;\n  }\n\n  isTemplateSaved(): boolean {\n    return this.saveTemplate;\n  }\n\n  private buildPaymentTemplateForm(): FormGroup {\n    return this.formBuilder.group({\n      templateName: ['', [Validators.required, noWhitespaceValidator]],\n    });\n  }\n\n  openTemplateModal(): void {\n    this.paymentTemplateModalState.next(ModalState.Preview);\n  }\n\n  closeTemplateModal(): void {\n    this.paymentTemplateModalState.next(ModalState.Hidden);\n    this.paymentTemplateForm.reset();\n  }\n\n  submitPaymentTemplate(templateName = ''): void {\n    if (this.paymentOrderId) {\n      const paymentOrderId = this.paymentOrderId;\n      const name = templateName || this.paymentTemplateForm.controls['templateName'].value;\n      const templateObject: PaymentTemplatesPostRequest = {\n        paymentOrderId,\n        name,\n      };\n\n      if (this.paymentTemplateForm.invalid) {\n        return;\n      }\n\n      this.savingTemplate$.next(true);\n\n      this.paymentOrderHttpService\n        .postPaymentTemplate(templateObject)\n        .pipe(takeUntil(this.gc$))\n        .subscribe(\n          () => {\n            this.saveTemplate = true;\n            this.savingTemplate$.next(false);\n            this.paymentOrderHttpService.showNotification(true, {\n              header: commonI18n.templateSaveSuccess(name),\n              headerContext: { name },\n            });\n            this.paymentTemplateForm.reset();\n            this.paymentTemplateModalState.next(ModalState.Hidden);\n            this.eventBus.publish(\n              <string>(this.widgetOptions.successEventName || defaultPaymentSuccessEventName),\n              true,\n            );\n          },\n          () => {\n            this.paymentOrderHttpService.showNotification(false, {\n              header: commonI18n.templateSaveFailed,\n            });\n            this.savingTemplate$.next(false);\n          },\n        );\n    }\n  }\n\n  submitPayment(approved = false): void {\n    const hasHooks = this.createPaymentSetup.hooks && this.createPaymentSetup.hooks[PaymentHooks.onSubmit];\n    this.submitting$.next(true);\n    if (hasHooks) {\n      triggerPaymentHook(\n        <PaymentHooksOptions>this.createPaymentSetup.hooks,\n        PaymentHooks.onSubmit,\n        this.onHooksDone.bind(this, approved),\n        this.paymentForm,\n      );\n    } else {\n      this.onSubmit(approved);\n    }\n  }\n\n  getForexDetails(payment: PaymentDetails): Partial<ForexDetails> | undefined {\n    return getForexDetailsFromPayment(payment);\n  }\n\n  isApprovalEnabled(): boolean {\n    return !!this.widgetOptions.enableApprovals && this.canApprove;\n  }\n\n  isPaymentTemplateEnabled(): boolean {\n    return !!this.widgetOptions.enableSavePaymentAsTemplate && this.enablePaymentTemplate;\n  }\n\n  isNewPaymentEnabled() {\n    return this.widgetOptions.enableNewPaymentButton !== false;\n  }\n\n  discardPayment() {\n    if (this.widgetOptions?.isModalView) {\n      this.modalService?.closeModal();\n    } else {\n      this.resetPayment();\n    }\n  }\n\n  resetPayment(): void {\n    this.showConfirmation = false;\n    this.widgetOptions.paymentMode = PaymentMode.CREATE_PAYMENT;\n    this.stateService.resetForm();\n    this.stateService.setPaymentState(PaymentState.INITIAL);\n    this.navigationService.form();\n  }\n\n  toggleConfirmationDialog(): void {\n    this.showConfirmation = !this.showConfirmation;\n  }\n\n  showDiscardDialog(): boolean {\n    return this.showConfirmation;\n  }\n\n  isApprovalPending(): boolean {\n    return this.approvalPending;\n  }\n\n  isSubmitting$(): BehaviorSubject<boolean> {\n    return this.submitting$;\n  }\n\n  getPaymentStatusType(): PaymentSubmitStatuses {\n    return this.widgetOptions?.paymentMode === PaymentMode.EDIT_PAYMENT\n      ? PaymentSubmitStatuses.PENDING_EDITED\n      : this.isApprovalPending()\n      ? PaymentSubmitStatuses.PENDING\n      : PaymentSubmitStatuses.SUCCESS;\n  }\n\n  getPaymentMessage(): string | undefined {\n    return this.paymentMessage;\n  }\n\n  getPurposeDescription(purpose: string): string | undefined {\n    const purposes = this.paymentItem.inputFormFromSettings?.purposesOfPayment;\n    return purposes?.length ? purposes.find((item: PurposeOfPayment) => item.code === purpose)?.description : '';\n  }\n\n  doneEditing(): void {\n    this.modalService?.closeModal();\n  }\n\n  navigateToAfterSuccessPage(): void {\n    this.navigationService.afterSuccess();\n  }\n\n  ngOnDestroy(): void {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n}\n","<div class=\"position-relative\">\n  <ng-container\n    *ngTemplateOutlet=\"\n      reviewTemplate || (widgetOptions.reviewScreenType === reviewScreens.ADAPTED ? adaptedReviewTmpl : defaultTmpl);\n      context: {\n        $implicit: paymentItem,\n        status: paymentStatus$ | async,\n        isSubmitting: submitting$ | async,\n        methods: methods,\n        paymentConfig: selectedPaymentConfig$ | async,\n        breachError: breachError\n      }\n    \"\n  ></ng-container>\n</div>\n\n<ng-template\n  let-payment\n  let-paymentConfig=\"paymentConfig\"\n  let-status=\"status\"\n  let-methods=\"methods\"\n  let-errors=\"errors\"\n  #adaptedReviewTmpl\n>\n  <bb-adapted-review-container\n    [payment]=\"payment\"\n    [paymentConfig]=\"paymentConfig\"\n    [status]=\"status\"\n    [methods]=\"methods\"\n    [breachError]=\"breachError\"\n  ></bb-adapted-review-container>\n</ng-template>\n\n<ng-template\n  let-payment\n  let-paymentConfig=\"paymentConfig\"\n  let-status=\"status\"\n  let-methods=\"methods\"\n  let-isSubmitting=\"isSubmitting\"\n  let-breachError=\"breachError\"\n  #defaultTmpl\n>\n  <fieldset class=\"bb-fieldset bb-fieldset__no-outline\">\n    <bb-header-ui\n      *ngIf=\"header\"\n      data-role=\"page-title\"\n      headingClasses=\"bb-block bb-block--lg\"\n      headingType=\"h2\"\n      [heading]=\"header\"\n    ></bb-header-ui>\n    <div #alertContainer></div>\n    <ng-container *ngIf=\"payment\">\n      <div class=\"bb-block bb-block--md\" *ngIf=\"status\">\n        <bb-payord-status-card\n          [status]=\"methods.getPaymentStatusType()\"\n          [isDebitPayment]=\"widgetOptions.isDebitPayment\"\n          *ngIf=\"status === 'SUCCESS'\"\n        ></bb-payord-status-card>\n\n        <ng-container *ngIf=\"!!status && status !== 'SUCCESS'\">\n          <ng-container *ngIf=\"errors?.length; else noSpecificError\">\n            <ng-container *ngFor=\"let error of errors\">\n              <ng-container *ngIf=\"error.message; else noSpecificError\">\n                <bb-alert-ui title=\"\" (close)=\"(false)\" modifier=\"error\">\n                  <div data-role=\"failure-message\" class=\"bb-text-bold bb-text-default d-inline-flex\">\n                    <ng-container *ngIf=\"isErrorTitleDisplayed\">\n                      <span>\n                        <ng-container\n                          *ngIf=\"!widgetOptions.isDebitPayment\"\n                          i18n=\"@@initiate-payment.review.payment-failed-alert.title\"\n                          >Payment data error:</ng-container\n                        >\n                        <ng-container\n                          *ngIf=\"widgetOptions.isDebitPayment\"\n                          i18n=\"@@initiate-payment.review.debit-failed-alert.title\"\n                          >Debit data error:</ng-container\n                        > </span\n                      >&nbsp;\n                    </ng-container>\n                    <span>{{ $any(error)?.message }}</span>\n                  </div>\n                </bb-alert-ui>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n\n          <ng-template #noSpecificError>\n            <ng-container *ngIf=\"genericError; else unknownError\">\n              <bb-alert-ui title=\"\" modifier=\"error\">\n                <div class=\"bb-text-bold bb-text-default\">\n                  <ng-container *ngIf=\"isErrorTitleDisplayed\">\n                    <span>\n                      <ng-container\n                        *ngIf=\"!widgetOptions.isDebitPayment\"\n                        i18n=\"@@initiate-payment-payments-generic-message-alert-title\"\n                        >Payment data error:</ng-container\n                      >\n                      <ng-container\n                        *ngIf=\"widgetOptions.isDebitPayment\"\n                        i18n=\"@@initiate-payment-debit-generic-message-alert-title\"\n                        >Debit data error:</ng-container\n                      >\n                    </span>\n                  </ng-container>\n                  <span>{{ genericError }}</span>\n                </div>\n              </bb-alert-ui>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #unknownError>\n            <ng-container *ngIf=\"status !== 'USER_DECLINED' && status !== 'LIMIT_BREACH' && status !== 'COED'\">\n              <div class=\"bb-stack__item bb-text-bold\">\n                <bb-alert-ui\n                  i18n-title=\"@@initiate-payment-review.payments-unknown-error-alert-title\"\n                  title=\"Server error: Unknown error occurred.\"\n                  modifier=\"error\"\n                >\n                </bb-alert-ui>\n              </div>\n            </ng-container>\n          </ng-template>\n\n          <ng-container *ngIf=\"status === 'USER_DECLINED' || status === 'LIMIT_BREACH' || status === 'COED'\">\n            <ng-container [ngSwitch]=\"status\">\n              <bb-alert-ui title=\"\" (close)=\"(false)\" modifier=\"error\" [ngSwitch]=\"status\">\n                <div class=\"bb-stack bb-text-default\" *ngSwitchCase=\"'LIMIT_BREACH'\">\n                  <div\n                    class=\"bb-stack__item bb-text-bold\"\n                    data-role=\"failure-message\"\n                    i18n=\"@@initiate-payment.review.limit-breach-error\"\n                  >\n                    Payment cannot be submitted because your limits have been breached\n                  </div>\n                  <button\n                    bbButton\n                    color=\"unstyled\"\n                    buttonSize=\"sm\"\n                    i18n=\"@@initiate-payment.review.limit-breach-error-see-details-button\"\n                    class=\"bb-stack__item bb-stack__item--push-right alert-link\"\n                    data-role=\"failure-see-details\"\n                    (click)=\"methods.showBreachModal()\"\n                  >\n                    See details\n                  </button>\n                </div>\n                <div *ngSwitchCase=\"'USER_DECLINED'\" data-role=\"failure-message\">\n                  <div\n                    i18n=\"@@initiate-payment.review.txn-signing-cancelled-error-title\"\n                    class=\"bb-text-bold bb-text-default\"\n                  >\n                    Payment not submitted\n                  </div>\n                  <div i18n=\"@@initiate-payment.review.txn-signing-cancelled-error-msg\" class=\"bb-text-default\">\n                    The transaction signing request was cancelled\n                  </div>\n                </div>\n                <div *ngSwitchCase=\"'COED'\" data-role=\"failure-message\">\n                  <div i18n=\"@@edit-payment.review.txn-signing-coed-error-title\" class=\"bb-text-bold bb-text-default\">\n                    Payment not submitted\n                  </div>\n                  <div i18n=\"@@edit-payment.review.txn-signing-coed-error-msg\" class=\"bb-text-default\">\n                    Payment is already edited by another user\n                  </div>\n                </div>\n              </bb-alert-ui>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div\n        *ngIf=\"payment?.isIntraLegalEntity || payment?.remittanceInfo?.urgent\"\n        class=\"bb-block bb-block--md bb-inline-stack bb-text-support\"\n      >\n        <div class=\"bb-inline-stack bb-inline-stack__item\" *ngIf=\"payment?.isIntraLegalEntity\">\n          <bb-icon-ui name=\"domain\"></bb-icon-ui>\n          <div class=\"bb-inline-stack__item\"></div>\n          <div\n            class=\"bb-inline-stack__item bb-text-bold bb-inline-stack__item--spacing-sm\"\n            i18n=\"@@initiate-payment.review.intra-company-transfer-label\"\n          >\n            Intracompany payment\n          </div>\n        </div>\n        <div *ngIf=\"payment?.remittanceInfo?.urgent\" class=\"bb-inline-stack bb-inline-stack__item\">\n          <bb-icon-ui name=\"priority-high\"></bb-icon-ui>\n          <div class=\"bb-inline-stack__item\"></div>\n          <div\n            class=\"bb-inline-stack__item bb-text-bold\"\n            data-role=\"payment-is-urgent\"\n            i18n=\"@@initiate-payment.review.urgent-transfer-label\"\n          >\n            Urgent payment\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-payment-account-details-card__container d-none d-md-flex\">\n        <div class=\"bb-text-bold w-md-50\">\n          <ng-container *ngTemplateOutlet=\"dynamicLabelInitiator\"></ng-container>\n        </div>\n        <div class=\"mr-3\">&nbsp;</div>\n        <div class=\"bb-text-bold w-md-50\">\n          <ng-container *ngTemplateOutlet=\"dynamicLabelCounterparty\"></ng-container>\n        </div>\n      </div>\n\n      <div\n        class=\"bb-payment-account-details-card__container bb-block bb-block--md break-word\"\n        [ngClass]=\"{\n          'flex-column-reverse flex-md-row-reverse': widgetOptions.isDebitPayment\n        }\"\n      >\n        <div class=\"w-md-50\">\n          <div class=\"bb-text-bold d-md-none\">\n            <ng-container\n              *ngTemplateOutlet=\"widgetOptions.isDebitPayment ? dynamicLabelCounterparty : dynamicLabelInitiator\"\n            ></ng-container>\n          </div>\n          <bb-debitor-details-card [details]=\"payment?.initiator\"></bb-debitor-details-card>\n        </div>\n\n        <div class=\"justify-content-center align-items-center d-md-flex d-none\">\n          <bb-icon-ui class=\"bb-account-transfer-icon\" name=\"arrow-forward\"></bb-icon-ui>\n        </div>\n        <div class=\"d-md-none\">&nbsp;</div>\n\n        <div class=\"w-md-50\">\n          <div class=\"bb-text-bold d-md-none\">\n            <ng-container\n              *ngTemplateOutlet=\"widgetOptions.isDebitPayment ? dynamicLabelInitiator : dynamicLabelCounterparty\"\n            ></ng-container>\n          </div>\n          <bb-creditor-details-card [details]=\"payment?.counterparty\"></bb-creditor-details-card>\n        </div>\n      </div>\n\n      <ng-template #dynamicLabelInitiator>\n        <ng-container *ngIf=\"widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            name=\"counterparty\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"Collect from\"\n            i18n-defaultLabel=\"@@initiate-payment.review.debit-counterparty-title\"\n            data-role=\"initiator-label\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n        <ng-container *ngIf=\"!widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            name=\"initiator\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"From\"\n            i18n-defaultLabel=\"@@initiate-payment.review.initiator-title\"\n            data-role=\"initiator-label\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n      </ng-template>\n\n      <ng-template #dynamicLabelCounterparty>\n        <ng-container *ngIf=\"widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            data-role=\"payee-label\"\n            name=\"initiator\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"Transfer to\"\n            i18n-defaultLabel=\"@@initiate-payment.review.debit-initiator-title\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n        <ng-container *ngIf=\"!widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            data-role=\"payee-label\"\n            name=\"counterparty\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"To\"\n            i18n-defaultLabel=\"@@initiate-payment.review.counterparty-title\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n      </ng-template>\n\n      <bb-payord-amount-details\n        [config]=\"paymentConfig\"\n        [details]=\"payment?.remittanceInfo\"\n        [transferFee]=\"payment?.transferFee\"\n        [chargeBearer]=\"payment?.chargeBearer\"\n        [forexDetails]=\"methods.getForexDetails(payment)\"\n      ></bb-payord-amount-details>\n\n      <bb-payord-counterparty-details\n        [details]=\"payment?.counterparty\"\n        [config]=\"paymentConfig\"\n        [isDebitPayment]=\"payment?.isDebitPayment\"\n      ></bb-payord-counterparty-details>\n\n      <div\n        *ngIf=\"\n          payment?.messageToBank ||\n          payment?.remittanceInfo?.description ||\n          payment?.remittanceInfo?.paymentReference ||\n          payment?.counterparty.messageToBank ||\n          payment?.counterparty.remittanceInformation ||\n          payment?.remittanceInfo?.purposeOfPayment ||\n          payment?.counterparty?.mandateIdentifier\n        \"\n      >\n        <hr />\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty?.mandateIdentifier\">\n          <div class=\"bb-text-bold\" data-role=\"mandate-identifier-label\">\n            <bb-payord-dynamic-label\n              name=\"mandateIdentifier\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Mandate identifier\"\n              i18n-defaultLabel=\"@@initiate-payment.review.mandate-identifier-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"mandate-identifier\">\n            {{ payment?.counterparty?.mandateIdentifier }}\n          </div>\n        </div>\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.paymentReference\">\n          <div class=\"bb-text-bold\" data-role=\"payment-reference-label\">\n            <bb-payord-dynamic-label\n              name=\"paymentReference\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Payment reference\"\n              i18n-defaultLabel=\"@@initiate-payment.review.payment-reference-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-reference\">\n            {{ payment?.remittanceInfo?.paymentReference }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.description\">\n          <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n            <bb-payord-dynamic-label\n              name=\"description\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Description\"\n              i18n-defaultLabel=\"@@initiate-payment.review.description-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-description\">\n            {{ payment?.remittanceInfo?.description }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty.remittanceInformation\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              *ngIf=\"!payment.isDebitPayment\"\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-beneficiary-title\"\n            ></bb-payord-dynamic-label>\n            <bb-payord-dynamic-label\n              *ngIf=\"payment.isDebitPayment\"\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to client\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-client-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div data-role=\"description\" class=\"break-word\">\n            {{ payment?.counterparty?.remittanceInformation }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.purposeOfPayment\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"purposeOfPayment\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Purpose of payment\"\n              i18n-defaultLabel=\"@@initiate-payment.review.purpose-of-payment-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"bb-stack\">\n            <div data-role=\"purpose-of-payment\" class=\"bb-stack__item bb-stack__item--align-top\">\n              {{ payment?.remittanceInfo?.purposeOfPayment }}\n            </div>\n            <div data-role=\"purpose-of-payment-description\" class=\"bb-stack__item bb-text-support\">\n              {{ methods.getPurposeDescription(payment?.remittanceInfo?.purposeOfPayment) }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.messageToBank || payment?.counterparty?.messageToBank\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              *ngIf=\"!payment.isDebitPayment\"\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary bank\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-bank.label\"\n            ></bb-payord-dynamic-label>\n            <bb-payord-dynamic-label\n              *ngIf=\"payment.isDebitPayment\"\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to client bank\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-client-bank.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"message-to-bank\">\n            {{ payment?.counterparty?.messageToBank || payment?.messageToBank }}\n          </div>\n        </div>\n        <hr />\n      </div>\n\n      <bb-payord-schedule-details [paymentConfig]=\"paymentConfig\" [data]=\"payment?.schedule\">\n      </bb-payord-schedule-details>\n    </ng-container>\n  </fieldset>\n\n  <ng-container *ngIf=\"status !== 'SUCCESS'; else closureSwitch\">\n    <div class=\"bb-button-bar\" [class.bb-button-bar--reverse]=\"!widgetOptions?.isModalView\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        data-role=\"submit-button\"\n        (click)=\"methods.submit()\"\n        *ngIf=\"!methods.isApprovalEnabled()\"\n        [disabled]=\"isSubmitting\"\n        i18n=\"@@initiate-payment.review.submit-dropdown-btn\"\n      >\n        Submit\n      </button>\n      <div class=\"btn-group bb-button-bar__button\" data-role=\"button-group\" *ngIf=\"methods.isApprovalEnabled()\">\n        <bb-load-button-ui\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          data-role=\"submit-button\"\n          [isLoading]=\"isSubmitting\"\n          (click)=\"methods.submit()\"\n          i18n=\"@@initiate-payment.review.submit-btn\"\n        >\n          Submit\n        </bb-load-button-ui>\n\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          btnColor=\"primary\"\n          icon=\"caret-down\"\n          data-role=\"dropdown-menu\"\n          position=\"top-right\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <button\n              role=\"menuitem\"\n              type=\"button\"\n              class=\"dropdown-item\"\n              data-role=\"bus-submit-and-approve-button\"\n              [disabled]=\"isSubmitting\"\n              (bbKeyboardClick)=\"methods.submit(true)\"\n              i18n=\"@@initiate-payment.review.submit-and-approve-btn\"\n            >\n              Submit and Approve\n            </button>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n      <button\n        class=\"bb-button-bar__button\"\n        bbButton\n        color=\"secondary\"\n        (click)=\"methods.edit()\"\n        [disabled]=\"isSubmitting\"\n        data-role=\"edit-button\"\n        i18n=\"@@initiate-payment.review.edit-btn\"\n      >\n        Edit\n      </button>\n\n      <button\n        bbButton\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        color=\"link\"\n        data-role=\"cancel-button\"\n        (click)=\"methods.toggleDiscardDialog()\"\n        [disabled]=\"isSubmitting\"\n        i18n=\"@@initiate-payment.review.discard-btn\"\n      >\n        Discard\n      </button>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"isSubmitting\" class=\"position-absolute w-100 h-100 top-0 fixed-top bg-white\" [style.opacity]=\"0.6\">\n    <bb-loading-indicator-ui loaderSize=\"lg\" class=\"absolute-center\"></bb-loading-indicator-ui>\n  </div>\n\n  <ng-template #closureSwitch>\n    <ng-container *ngIf=\"widgetOptions?.isModalView; else newPayment\">\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          data-role=\"done-payment-edit-button\"\n          *ngIf=\"status\"\n          (click)=\"methods.doneEditing()\"\n          i18n=\"@@initiate-payment.review.btn-done-edit-payment.label\"\n        >\n          Done\n        </button>\n\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"export-payment-button\"\n          *ngIf=\"methods.getPaymentResponse()?.exportAllowed\"\n          [bbExportPdf]=\"methods.getPaymentResponse()?.id\"\n        >\n          <bb-icon-ui class=\"mr-2\" name=\"file-download\"></bb-icon-ui>\n          <span i18n=\"@@initiate-payment.review.btn-export-payment.label\">Export PDF</span>\n        </button>\n\n        <ng-container *ngIf=\"widgetOptions?.paymentMode !== paymentMode.EDIT_PAYMENT\">\n          <ng-container *ngTemplateOutlet=\"newPaymentButton; context: { color: 'secondary' }\"></ng-container>\n          <div class=\"bb-button-bar__button bb-button-bar__button--across\">\n            <ng-container *ngTemplateOutlet=\"saveTemplateButton; context: { color: 'link' }\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #newPayment>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <ng-container *ngTemplateOutlet=\"newPaymentButton; context: { color: 'primary' }\"></ng-container>\n      <ng-container *ngTemplateOutlet=\"saveTemplateButton; context: { color: 'secondary' }\"></ng-container>\n    </div>\n  </ng-template>\n\n  <ng-template #newPaymentButton let-color=\"color\">\n    <button\n      *ngIf=\"status && methods.isNewPaymentEnabled()\"\n      bbButton\n      [color]=\"color\"\n      class=\"bb-button-bar__button\"\n      data-role=\"new-payment-button\"\n      (click)=\"methods.reset()\"\n      [disabled]=\"methods.isSavingTemplate$() | async\"\n    >\n      <ng-container *ngIf=\"!widgetOptions.isDebitPayment\" i18n=\"@@initiate-payment.review.btn-group-new-payment.label\"\n        >New Payment</ng-container\n      >\n      <ng-container *ngIf=\"widgetOptions.isDebitPayment\" i18n=\"@@initiate-payment.review.btn-group-new-debit.label\"\n        >New debit request</ng-container\n      >\n    </button>\n  </ng-template>\n\n  <ng-template #saveTemplateButton let-color=\"color\">\n    <button\n      *ngIf=\"status === 'SUCCESS' && methods.isPaymentTemplateEnabled() && (createTemplatePermission$ | async)\"\n      bbButton\n      [color]=\"color\"\n      class=\"bb-button-bar__button\"\n      data-role=\"save-as-template-button\"\n      (click)=\"methods.openTemplateModal()\"\n      [disabled]=\"methods.isTemplateSaved()\"\n      i18n=\"@@initiate-payment.review.btn-group-save-as-template.label\"\n    >\n      Save as a template\n    </button>\n  </ng-template>\n\n  <bb-modal-ui\n    [isOpen]=\"methods.showDiscardDialog()\"\n    (cancel)=\"methods.toggleDiscardDialog()\"\n    (confirm)=\"methods.discard()\"\n  >\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <div data-role=\"modal-header\">\n          <h2 class=\"modal-title\" i18n=\"omni-payment-edit-review-discard-modal-title\">\n            Discard {widgetOptions?.paymentMode === paymentMode.EDIT_PAYMENT, select, true {edited} other {entered}}\n            data?\n          </h2>\n        </div>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <ng-container i18n=\"@@initiate-payment.review.discard-modal-content\">\n          Are you sure you want to exit and discard all changes? {widgetOptions?.paymentMode ===\n          paymentMode.EDIT_PAYMENT, select, true {Edited} other {Entered}} data will be lost.\n        </ng-container>\n      </ng-template>\n    </bb-modal-body-ui>\n\n    <bb-modal-footer-ui #modalFooterRef>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            color=\"danger\"\n            class=\"bb-button-bar__button\"\n            (click)=\"methods.discard()\"\n            data-role=\"discard-action-btn\"\n            i18n=\"@@initiate-payment.review.discard-modal-discard-btn\"\n          >\n            Discard\n          </button>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"link\"\n            (click)=\"methods.toggleDiscardDialog()\"\n            data-role=\"cancel-action-btn\"\n            i18n=\"@@initiate-payment.review.discard-modal-cancel-btn\"\n          >\n            Not now\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n\n  <bb-breach-limit-details\n    [paymentDetails]=\"paymentItem\"\n    [error]=\"breachError\"\n    [isOpen]=\"showBreachDetails\"\n    (close)=\"hideBreachModal()\"\n  ></bb-breach-limit-details>\n</ng-template>\n\n<bb-payment-template-form\n  [paymentTemplateForm]=\"paymentTemplateForm\"\n  [isSavingTemplate]=\"savingTemplate$ | async\"\n  [modalState]=\"paymentTemplateModalState\"\n  (closeModal)=\"closeTemplateModal()\"\n  (openModal)=\"openTemplateModal()\"\n  (submitForm)=\"submitPaymentTemplate()\"\n></bb-payment-template-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PaymentOrdersUiModule } from '@backbase/payment-orders-ang';\nimport { ReviewPaymentContainerComponent } from './review-payment.component';\nimport { AdaptedReviewComponent } from '../adapted-review/adapted-review-container/adapted-review.component';\nimport { CounterpartyDetailsComponent } from '../adapted-review/counterparty-details/counterparty-details.component';\nimport { CreditorAccountComponent } from '../adapted-review/creditor-account/creditor-account.component';\nimport { CreditorDetailsComponent } from '../adapted-review/creditor-details/creditor-details.component';\nimport { InitiatorDetailsComponent } from '../adapted-review/initiator-details/initiator-details.component';\nimport { RemittanceDetailsComponent } from '../adapted-review/remittance-details/remittance-details.component';\nimport { ScheduleDetailsComponent } from '../adapted-review/schedule-details/schedule-details.component';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { KeyboardClickModule } from '@backbase/ui-ang/keyboard-click-directive';\nimport { NotificationModule } from '@backbase/ui-ang/notification';\nimport { AlertModule } from '@backbase/ui-ang/alert';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { FocusModule } from '@backbase/ui-ang/focus';\n\nconst components = [\n  ReviewPaymentContainerComponent,\n  RemittanceDetailsComponent,\n  CounterpartyDetailsComponent,\n  InitiatorDetailsComponent,\n  ScheduleDetailsComponent,\n  CreditorAccountComponent,\n  CreditorDetailsComponent,\n  AdaptedReviewComponent,\n];\n\nconst uiAngComponentModules = [\n  ModalModule,\n  DropdownMenuModule,\n  KeyboardClickModule,\n  NotificationModule,\n  AlertModule,\n  HeaderModule,\n  FocusModule,\n];\n\n@NgModule({\n  imports: [CommonModule, PaymentOrdersUiModule, ...uiAngComponentModules],\n  exports: [...components, ...uiAngComponentModules],\n  declarations: [...components],\n})\nexport class ReviewPaymentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Placement } from '@ng-bootstrap/ng-bootstrap';\nimport { PaymentsHeaderNavigationItem } from '../../models/payments-header.models';\n\n@Component({\n  selector: 'bb-header-dropdown',\n  templateUrl: './header-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderDropdownComponent {\n  /**\n   * Array of representation of the link menu object\n   */\n  @Input() menu: PaymentsHeaderNavigationItem<any>[] = [];\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() useFirstLinkAsDefault = false;\n\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() position: Placement = 'bottom-right';\n  /**\n   * Button label. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonLabel!: string;\n\n  /**\n   * Button icon. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonIcon!: string;\n  /**\n   * Color of the button. Default `primary`\n   */\n  @Input() buttonColor = 'primary';\n  /**\n   * Size of the button. Allowed values are `sm` or `md`. Default `md`\n   */\n  @Input() buttonSize: 'sm' | 'md' = 'md';\n\n  /**\n   * Event on item click\n   */\n  @Output() navigationAction = new EventEmitter<any>();\n\n  onClick(event: Event, value: any) {\n    event.preventDefault();\n    this.navigationAction.emit(value);\n  }\n}\n","<div class=\"btn-group bb-button-bar__button\">\n  <button\n    *ngIf=\"useFirstLinkAsDefault || menu.length === 1\"\n    class=\"bb-button-bar__button\"\n    bbButton\n    [color]=\"buttonColor\"\n    [buttonSize]=\"buttonSize\"\n    (click)=\"onClick($event, menu[0].value)\"\n  >\n    <bb-icon-ui *ngIf=\"menu[0].iconName\" [name]=\"menu[0].iconName\"></bb-icon-ui>\n    <span>{{ menu[0].label }}</span>\n  </button>\n  <ng-container *ngIf=\"menu.length > 1\">\n    <bb-dropdown-menu-ui\n      container=\"body\"\n      icon=\"caret-down\"\n      [btnColor]=\"buttonColor\"\n      [buttonSize]=\"buttonSize\"\n      [position]=\"position\"\n      [class.btn-group]=\"useFirstLinkAsDefault\"\n    >\n      <ng-template bbDropdownLabel>\n        <span class=\"d-flex align-items-center\" *ngIf=\"!useFirstLinkAsDefault\">\n          <bb-icon-ui *ngIf=\"buttonIcon\" [name]=\"buttonIcon\"></bb-icon-ui>\n          <span>{{ buttonLabel }}</span>\n        </span>\n      </ng-template>\n\n      <ng-template bbDropdownMenuItem>\n        <ng-container *ngFor=\"let item of menu; let i = index\">\n          <ng-container *ngIf=\"!(useFirstLinkAsDefault && i === 0)\">\n            <a\n              rel=\"noopener\"\n              role=\"menuitem\"\n              href=\"#\"\n              class=\"dropdown-item\"\n              (click)=\"onClick($event, item.value)\"\n            >\n              <span class=\"bb-stack\">\n                <bb-icon-ui\n                  *ngIf=\"item.iconName\"\n                  class=\"bb-stack__item bb-stack__item--align-top\"\n                  [name]=\"item.iconName ? item.iconName : undefined\"\n                  color=\"dark\"\n                ></bb-icon-ui>\n                <div class=\"bb-stack__item\">\n                  <span>{{ item.label }}</span>\n                  <div\n                    *ngIf=\"item.description\"\n                    class=\"bb-subtitle bb-text-support mr-4\"\n                  >\n                    {{ item.description }}\n                  </div>\n                </div>\n              </span>\n            </a>\n          </ng-container>\n        </ng-container>\n      </ng-template>\n    </bb-dropdown-menu-ui>\n  </ng-container>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  PaymentsHeaderNavigationItem,\n  PaymentsHeaderNavigationItemWithPermission,\n} from './models/payments-header.models';\nimport { Placement } from '@ng-bootstrap/ng-bootstrap';\nimport { CONDITIONS, PropertyResolver } from '@backbase/foundation-ang/web-sdk';\nimport { from, Observable, of } from 'rxjs';\nimport { concatMap, map, reduce } from 'rxjs/operators';\n\n@Component({\n  selector: 'bb-payments-header',\n  templateUrl: './payments-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentsHeaderComponent implements OnInit {\n  /**\n   * Custom class name\n   */\n  @Input() customClassName = '';\n\n  /**\n   * Heading Classes\n   */\n  @Input() headingClasses = '';\n\n  /**\n   * Heading type (h1-h6)\n   */\n  @Input() headingType = '';\n\n  /**\n   * Heading\n   */\n  @Input() heading = '';\n\n  /**\n   * Show right side button / dropdown\n   */\n  @Input() showNavigation = true;\n\n  /**\n   * Array of representation of the link menu object\n   */\n  @Input() navigationItems: PaymentsHeaderNavigationItem<any>[] = [];\n\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() useFirstLinkAsDefault = false;\n\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() position: Placement = 'bottom-right';\n\n  /**\n   * Button label. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonLabel!: string;\n\n  /**\n   * Button icon. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonIcon!: string;\n\n  /**\n   * Color of the button. Default `primary`\n   */\n  @Input() buttonColor = 'primary';\n\n  /**\n   * Size of the button. Allowed values are `sm` or `md`. Default `md`\n   */\n  @Input() buttonSize: 'sm' | 'md' = 'md';\n\n  /**\n   * Event on item click\n   */\n  @Output() navigationAction = new EventEmitter<any>();\n\n  menuItems!: Observable<PaymentsHeaderNavigationItem<any>[]>;\n\n  private hasPermissions(\n    item: PaymentsHeaderNavigationItem<any>\n  ): Observable<PaymentsHeaderNavigationItemWithPermission<any>> {\n    const hasPermissionsPromise = item.canView\n      ? this.conditions.resolveEntitlements(item.canView)\n      : of(true);\n    return from(hasPermissionsPromise).pipe(\n      map((hasPermissions) => ({ hasPermissions, ...item }))\n    );\n  }\n\n  private menuSetup(): Observable<PaymentsHeaderNavigationItem<any>[]> {\n    return from(this.navigationItems).pipe(\n      concatMap(this.hasPermissions.bind(this)),\n      reduce((acc, { hasPermissions, ...item }) => {\n        if (hasPermissions) {\n          acc.push({ ...item });\n        }\n        return acc;\n      }, [] as PaymentsHeaderNavigationItem<any>[])\n    );\n  }\n\n  constructor(\n    @Inject(CONDITIONS) private readonly conditions: PropertyResolver\n  ) {}\n\n  ngOnInit(): void {\n    this.menuItems = this.menuSetup();\n  }\n\n  onClick(value: any) {\n    this.navigationAction.emit(value);\n  }\n}\n","<div class=\"heading-widget bb-heading-widget {{ customClassName }}\">\n  <bb-header-ui\n    headingClasses=\"bb-heading-widget__heading {{ headingClasses }}\"\n    [headingType]=\"headingType\"\n    [heading]=\"heading\"\n  ></bb-header-ui>\n\n  <ng-container *ngIf=\"showNavigation\">\n    <ng-container *ngIf=\"menuItems | async as menu\">\n      <ng-container *ngIf=\"menu.length\">\n        <bb-header-dropdown\n          [menu]=\"menu\"\n          [useFirstLinkAsDefault]=\"useFirstLinkAsDefault\"\n          [position]=\"position\"\n          [buttonLabel]=\"buttonLabel\"\n          [buttonIcon]=\"buttonIcon\"\n          [buttonColor]=\"buttonColor\"\n          [buttonSize]=\"buttonSize\"\n          (navigationAction)=\"onClick($event)\"\n        >\n        </bb-header-dropdown>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaymentsHeaderComponent } from './payments-header.component';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { RouterModule } from '@angular/router';\nimport { HeaderDropdownComponent } from './components/header-dropdown/header-dropdown.component';\nimport { ButtonModule } from '@backbase/ui-ang/button';\n\n@NgModule({\n  declarations: [PaymentsHeaderComponent, HeaderDropdownComponent],\n  exports: [PaymentsHeaderComponent],\n  imports: [\n    CommonModule,\n    HeaderModule,\n    DropdownMenuModule,\n    IconModule,\n    RouterModule,\n    ButtonModule,\n  ],\n})\nexport class PaymentsHeaderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.CreatePaymentConfigSetupService","i1","i2.CreatePaymentService","i3.CreatePaymentConfigSetupService","i4.CreatePaymentFieldsSetupService","i8","components","i2","i3","i4","i5","i6.InitiatorDetailsComponent","i7.CreditorAccountComponent","i8.RemittanceDetailsComponent","i9.CreditorDetailsComponent","i10.CounterpartyDetailsComponent","i11.ScheduleDetailsComponent","i12","i14","i15","i16","i17","ProgressStatus","i3.CreatePaymentService","i4.CreatePaymentConfigSetupService","i6.AdaptedReviewComponent","i7","i9","i10","i11","i13","i2.HeaderDropdownComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,MAAM,kBAAkB,GAAqB;IAC3C,IAAI,EAAE,iBAAiB,CAAC,YAAY;AACpC,IAAA,MAAM,EAAE;AACN,QAAA;YACE,IAAI,EAAE,iBAAiB,CAAC,sBAAsB;YAC9C,IAAI,EAAE,iBAAiB,CAAC,sBAAsB;AAC9C,YAAA,OAAO,EAAE;gBACP,KAAK,EAAE,SAAS,CAAA,CAA6D,2DAAA,CAAA;AAC7E,gBAAA,eAAe,EAAE,IAAI;AACtB,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,kBAAkB,CAAC,IAAI;YAC7B,IAAI,EAAE,iBAAiB,CAAC,mBAAmB;AAC3C,YAAA,OAAO,EAAE;gBACP,KAAK,EAAE,SAAS,CAAA,CAA+E,6EAAA,CAAA;gBAC/F,WAAW,EAAE,SAAS,CAAA,CAAuF,qFAAA,CAAA;gBAC7G,mBAAmB,EAAE,SAAS,CAAA,CAA8F,4FAAA,CAAA;AAC5H,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,iBAAiB,EAAE,IAAI;gBACvB,UAAU,EAAE,CAAC,QAAQ,CAAC;AACtB,gBAAA,UAAU,EAAE;AACV,oBAAA,kBAAkB,CAAC,OAAO;AAC1B,oBAAA,kBAAkB,CAAC,cAAc;AACjC,oBAAA,kBAAkB,CAAC,aAAa;AACjC,iBAAA;AACD,gBAAA,kBAAkB,EAAE;AAClB,oBAAA;wBACE,OAAO,EAAE,SAAS,CAAA,CAAmG,iGAAA,CAAA;AACrH,wBAAA,IAAI,EAAE,iCAAiC;AACxC,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,kBAAkB,CAAC,OAAO;YAChC,IAAI,EAAE,iBAAiB,CAAC,yBAAyB;AACjD,YAAA,OAAO,EAAE;AACP,gBAAA,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACjC,KAAK,EAAE,SAAS,CAAA,CAAuD,qDAAA,CAAA;gBACvE,WAAW,EAAE,SAAS,CAAA,CAA0E,wEAAA,CAAA;AAChG,gBAAA,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,WAAW,CAAC;AACvD,gBAAA,UAAU,EAAE,CAAA,EAAG,iBAAiB,CAAC,YAAY,CAAA,CAAA,EAAI,kBAAkB,CAAC,YAAY,CAAA,CAAA,EAAI,kBAAkB,CAAC,aAAa,CAAE,CAAA;AACvH,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,kBAAkB,CAAC,aAAa;YACtC,IAAI,EAAE,iBAAiB,CAAC,IAAI;AAC5B,YAAA,OAAO,EAAE;AACP,gBAAA,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC1D,gBAAA,SAAS,EAAE,EAAE;gBACb,KAAK,EAAE,SAAS,CAAA,CAAqE,mEAAA,CAAA;AACrF,gBAAA,kBAAkB,EAAE;AAClB,oBAAA;AACE,wBAAA,IAAI,EAAE,WAAW;wBACjB,OAAO,EAAE,SAAS,CAAA,CAAyG,uGAAA,CAAA;AAC5H,qBAAA;AACD,oBAAA;wBACE,OAAO,EAAE,SAAS,CAAA,CAAyE,uEAAA,CAAA;AAC3F,wBAAA,IAAI,EAAE,oBAAoB;AAC3B,qBAAA;AACF,iBAAA;AACD,gBAAA,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,CAAC;AAC3C,aAAA;AACF,SAAA;AACD,QAAA;YACE,IAAI,EAAE,kBAAkB,CAAC,cAAc;YACvC,IAAI,EAAE,iBAAiB,CAAC,IAAI;AAC5B,YAAA,OAAO,EAAE;gBACP,KAAK,EAAE,SAAS,CAAA,CAAkE,gEAAA,CAAA;AAClF,gBAAA,SAAS,EAAE,EAAE;AACb,gBAAA,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,WAAW,CAAC;gBACvD,UAAU,EAAE,GAAG,iBAAiB,CAAC,YAAY,CAAI,CAAA,EAAA,kBAAkB,CAAC,YAAY,CAAE,CAAA;AACnF,aAAA;AACF,SAAA;AACF,KAAA;CACF,CAAC;AAEW,MAAA,UAAU,GAAG;IACxB,sBAAsB;AACtB,IAAA;QACE,IAAI,EAAE,iBAAiB,CAAC,cAAc;QACtC,KAAK,EAAE,SAAS,CAAA,CAAwE,sEAAA,CAAA;AACxF,QAAA,MAAM,EAAE;AACN,YAAA;gBACE,IAAI,EAAE,iBAAiB,CAAC,wBAAwB;gBAChD,IAAI,EAAE,oBAAoB,CAAC,mBAAmB;AAC9C,gBAAA,OAAO,EAAE;oBACP,UAAU,EAAE,CAAC,QAAQ,CAAC;oBACtB,KAAK,EAAE,SAAS,CAAA,CAAqD,mDAAA,CAAA;AACrE,oBAAA,kBAAkB,EAAE;AAClB,wBAAA;4BACE,OAAO,EAAE,SAAS,CAAA,CAA2D,yDAAA,CAAA;AAC7E,4BAAA,IAAI,EAAE,eAAe;AACtB,yBAAA;AACD,wBAAA;4BACE,OAAO,EAAE,SAAS,CAAA,CAA0G,wGAAA,CAAA;AAC5H,4BAAA,IAAI,EAAE,iBAAiB;AACxB,yBAAA;AACF,qBAAA;AACF,iBAAA;AACF,aAAA;AACF,SAAA;AACF,KAAA;IACD,kBAAkB;EAClB;AAEK,MAAM,YAAY,GAAG;AAC1B,IAAA,WAAW,EAAE,MAAM;AACnB,IAAA,cAAc,EAAE,SAAS;AACzB,IAAA,WAAW,EAAE,SAAS;AACtB,IAAA,IAAI,EAAE,sBAAsB;CAC7B;;ACvGM,MAAM,uBAAuB,GAAG,CACrC,QAAwB,EACxB,wBAAwB,GAAG,EAAE,EAC7B,kBAAkB,GAAG,EAAE,KACE;AACzB,IAAA,MAAM,EAAE,YAAY,EAAE,GAAG,QAAQ,CAAC,YAAY,CAAC;IAC/C,MAAM,mBAAmB,GACvB,YAAY;AACZ,QAAA,YAAY,CAAC,aAAa;AAC1B,QAAA,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC;AACrC,IAAA,MAAM,cAAc,GAAG,YAAY,IAAI,YAAY,CAAC,cAAc,CAAC;AACnE,IAAA,MAAM,cAAc,GAAG,yBAAyB,CAAC,QAAQ,CAAC,CAAC;AAC3D,IAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GACM,wBAAwB,GAAG,EAAE,wBAAwB,EAAE,GAAG,IAAI,EAAC,GAC/D,kBAAkB,GAAG,EAAE,kBAAkB,EAAE,GAAG,IAAI,EAAC,EAAA,EACvD,iBAAiB,EAAE;AACjB,YAAA,cAAc,EAAE,QAAQ,CAAC,SAAS,CAAC,EAAE;YACrC,UAAU,EAAE,UAAU,CAAC,EAAE;SAC1B,EACD,mBAAmB,mCACb,cAAc,GAAG,EAAE,cAAc,EAAE,GAAG,IAAI,EAC9C,EAAA,EAAA,cAAc,EACZ,cAAc,KAAK,UAAU,CAAC,EAAE;kBAC5B,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;AACvC,kBAAE,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,EACtD,UAAU,EAAc,cAAc,EAExC,CAAA,EAAA,sBAAsB,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EACjE,gBAAgB,EAAE;AAChB,YAAA,MAAM,EAAE,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM;AAClD,YAAA,YAAY,EAAE,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ;AAC3D,SAAA,EAAA,CAAA,GACG,mBAAmB,GAAG,EAAE,mBAAmB,EAAE,GAAG,IAAI,EACxD,EAAA,EAAA,SAAS,EAAE,QAAQ,CAAC,SAAS,EAC7B,CAAA,CAAA;AACJ,CAAC,CAAC;AAEI,SAAU,oBAAoB,CAClC,mBAAgD,EAAA;IAEhD,IAAI,gBAAgB,GAAG,mBAAmB,KAAnB,IAAA,IAAA,mBAAmB,KAAnB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,mBAAmB,CAAE,OAAO,CAAC,WAAW,CAAC;AAChE,IAAA,IACE,gBAAgB;AACd,QAAA,CAAA,EAAG,YAAY,CAAC,WAAW,GAAG,YAAY,CAAC,cAAc,CAAE,CAAA;QAC7D,gBAAgB;YACd,CAAG,EAAA,YAAY,CAAC,WAAW,CAAA,EAAG,YAAY,CAAC,WAAW,EAAE,EAC1D;AACA,QAAA,gBAAgB,GAAG,gBAAgB,CAAC,OAAO,CACzC,YAAY,CAAC,WAAW,EACxB,YAAY,CAAC,IAAI,CAClB,CAAC;AACH,KAAA;AACD,IAAA,IAAI,eAAe,CAAC;AACpB,IAAA,IAAI,gBAAgB,EAAE;QACpB,IAAI,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;YACvD,eAAe,GAAG,gBAAgB,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAC1E,SAAA;aAAM,IAAI,gBAAgB,CAAC,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE;YACjE,eAAe,GAAG,gBAAgB,CAAC,OAAO,CACxC,YAAY,CAAC,cAAc,EAC3B,EAAE,CACH,CAAC;AACH,SAAA;AAAM,aAAA;YACL,eAAe,GAAG,gBAAgB,CAAC;AACpC,SAAA;AACF,KAAA;AAED,IAAA,OAAO,eAAe,CAAC;AACzB,CAAC;AAEK,SAAU,wBAAwB,CAAC,eAAgC,EAAA;AACvE,IAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,eAAe,CAAA,EAAA,EAClB,OAAO,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACF,eAAe,CAAC,OAAO,CAC1B,EAAA,EAAA,WAAW,EAAE,oBAAoB,CAAC,eAAe,CAAC,EAEpD,CAAA,EAAA,CAAA,CAAA;AACJ,CAAC;AAED;;AAEG;AACa,SAAA,uBAAuB,CACrC,iBAAoC,EACpC,IAAe,EAAA;IAEf,MAAM,kBAAkB,GAAG,SAAS,CAClC,iBAAiB,CAAC,YAAY,EAC9B,iBAAiB,CACE,CAAC;IACtB,MAAM,kBAAkB,GAAG,SAAS,CAClC,kBAAkB,CAAC,aAAa,EAChC,kBAAkB,CACnB,CAAC;AACF,IAAA,MAAM,uBAAuB,GAAG,IAAI,CAAC,GAAG,CAAC;AACvC,QAAA,iBAAiB,CAAC,YAAY;AAC9B,QAAA,kBAAkB,CAAC,aAAa;AACjC,KAAA,CAAC,CAAC;AACH,IAAA,IACE,CAAC,kBAAkB;QACnB,uBAAuB;AACvB,QAAA,eAAe,CAAC,uBAAuB,CAAC,KAAK,CAAC,EAC9C;QACA,uBAAuB,CAAC,KAAK,EAAE,CAAC;AACjC,KAAA;AACH,CAAC;AAED;;AAEG;AACa,SAAA,gBAAgB,CAC9B,iBAAoC,EACpC,IAAe,EAAA;IAEf,MAAM,kBAAkB,GAAG,SAAS,CAClC,iBAAiB,CAAC,YAAY,EAC9B,iBAAiB,CACE,CAAC;IACtB,MAAM,qBAAqB,GAAG,SAAS,CACrC,kBAAkB,CAAC,YAAY,EAC/B,kBAAkB,CACC,CAAC;IACtB,MAAM,sBAAsB,GAAG,qBAAqB;UAChD,SAAS,CAAC,kBAAkB,CAAC,aAAa,EAAE,qBAAqB,CAAC;UAClE,IAAI,CAAC;AACT,IAAA,MAAM,2BAA2B,GAAG,IAAI,CAAC,GAAG,CAAC;AAC3C,QAAA,iBAAiB,CAAC,YAAY;AAC9B,QAAA,kBAAkB,CAAC,YAAY;AAC/B,QAAA,kBAAkB,CAAC,aAAa;AACjC,KAAA,CAAC,CAAC;IAEH,cAAc,CAAC,kBAAkB,CAAC,GAAG,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACjE,cAAc,CAAC,kBAAkB,CAAC,QAAQ,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;AAEtE,IAAA,IACE,CAAC,sBAAsB;QACvB,2BAA2B;AAC3B,QAAA,eAAe,CAAC,2BAA2B,CAAC,KAAK,CAAC,EAClD;AACA,QAAA,KAAK,MAAM,GAAG,IAAgB,2BAA4B,CAAC,QAAQ,EAAE;YACnE,IAAI,GAAG,KAAK,SAAS,EAAE;gBACT,2BAA4B,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;AAChE,aAAA;AACF,SAAA;AACF,KAAA;AACH,CAAC;SAEe,cAAc,CAC5B,SAAiB,EACjB,kBAAoC,EACpC,IAAe,EAAA;IAEf,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;AACxD,IAAA,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;AACvB,QAAA,iBAAiB,CAAC,YAAY;AAC9B,QAAA,kBAAkB,CAAC,YAAY;QAC/B,SAAS;AACV,KAAA,CAAC,CAAC;IACH,IAAI,CAAC,MAAM,KAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,KAAK,CAAA,EAAE;QAC7B,OAAO,CAAC,KAAK,EAAE,CAAC;AACjB,KAAA;AACH;;MCrKa,+BAA+B,CAAA;AAD5C,IAAA,WAAA,GAAA;AAEmB,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,eAAe,CAAsB,EAAE,CAAC,CAAC;AAC3D,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,eAAe,CAChD,EAAE,CACH,CAAC;AACe,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,eAAe,CAEnD,EAAE,CAAC,CAAC;AACW,QAAA,IAAA,CAAA,+BAA+B,GAAG,IAAI,eAAe,CAEpE,SAAS,CAAC,CAAC;AACI,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,eAAe,CAAsB,EAAE,CAAC,CAAC;AACzD,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,eAAe,CAEvD,SAAS,CAAC,CAAC;AAEJ,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;AAC3C,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;AAC3C,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;AACjD,QAAA,IAAA,CAAA,4BAA4B,GACnC,IAAI,CAAC,+BAA+B,CAAC,YAAY,EAAE,CAAC;AAC7C,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAmDnE,KAAA;AAjDC,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;KAC7B;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;KAC/B;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;KAC/B;IAED,QAAQ,CAAC,QAA6B,EAAE,EAAA;AACtC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5B;AAED,IAAA,UAAU,CAAC,OAA4B,EAAA;AACrC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAChC;AAED,IAAA,UAAU,CAAC,OAA+B,EAAA;AACxC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAChC;IAED,aAAa,CACX,aAA+D,UAAU,EAAA;AAEzE,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACtC;AAED,IAAA,8BAA8B,CAAC,UAA0C,EAAA;AACvE,QAAA,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACvD;AAED,IAAA,iBAAiB,CAAC,WAA+C,EAAA;AAC/D,QAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC3C;AAED,IAAA,SAAS,CAAC,KAAkC,EAAA;;QAC1C,MAAM,WAAW,GACf,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,EAAE,CAAC;AAC/D,QAAA,MAAM,IAAI,GAAG;AACX,YAAA,WAAW,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,0CAAE,WAAW;YACtC,KAAK;YACL,WAAW;AACX,YAAA,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;SACrC,CAAC;QACF,OAAO,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,EAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAG,IAAI,CAAC,CAAC;KACpC;;gJAvEU,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;oJAA/B,+BAA+B,EAAA,CAAA,CAAA;4FAA/B,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAD3C,UAAU;;;MCoCE,+BAA+B,CAAA;AA4E1C,IAAA,WAAA,CACmB,kBAAmD,EACnD,qBAA4C,EAC5C,uBAAgD,EAAA;QAFhD,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAiC;QACnD,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QAC5C,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;AA9ElD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACjC,QAAA,IAAA,CAAA,0BAA0B,GAAG,IAAI,OAAO,EAAU,CAAC;AACnD,QAAA,IAAA,CAAA,mBAAmB,GAClC,IAAI,OAAO,EAA4B,CAAC;AAEzB,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,eAAe,CACvD,EAAE,CACH,CAAC;AACe,QAAA,IAAA,CAAA,uBAAuB,GAAG,IAAI,eAAe,CAC5D,KAAK,CACN,CAAC;AAEe,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,OAAO,EAAU,CAAC;AACtC,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,OAAO,EAG3C,CAAC;AACY,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,OAAO,EAAW,CAAC;AAC5C,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,OAAO,EAA0B,CAAC;AAE3D,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAC5C,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;AAsB9C,QAAA,IAAA,CAAA,mBAAmB,GAClC,IAAI,OAAO,EAAoC,CAAC;AACjC,QAAA,IAAA,CAAA,oBAAoB,GACnC,IAAI,OAAO,EAAoC,CAAC;AAEjC,QAAA,IAAA,CAAA,kBAAkB,GACjC,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,IAAI,CAClD,GAAG,CAAC,CAAC,QAAQ,KAAK,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,GAAG,CAAC,oBAAoB,CAAC,CAAC,CACvD,CAAC;AAEI,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,CAAC;QAClB,IAAmB,CAAA,mBAAA,GAAG,CAAC,CAAC;AACxB,QAAA,IAAA,CAAA,uBAAuB,GAAG,CAAC,CAAC;QAC5B,IAAyB,CAAA,yBAAA,GAAG,KAAK,CAAC;AAOjC,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AACzD,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,YAAY,EAAE,CAAC;AACnE,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAehE,QAAA,IAAI,CAAC,0BAA0B;AAC5B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,aAAA,SAAS,CAAC,CAAC,UAAU,KAAI;AACxB,YAAA,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;AACnE,SAAC,CAAC,CAAC;AAEL,QAAA,IAAI,CAAC,mBAAmB;AACrB,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAA4B,KAAI;AACxD,YAAA,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACxC,MAAM,CAAE,EAAA,EAAA,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EACxC,CAAA,EAAA,IAAI,CACL,CAAC;AACJ,SAAC,CAAC,CAAC;AAEL,QAAA,IAAI,CAAC,gBAAgB;aAClB,IAAI,CACH,MAAM,CAAC,CAAC,EAAE,YAAY,EAAE,UAAU,EAAE,KAAI;AACtC,YAAA,MAAM,eAAe,GAAG,YAAY,KAAK,UAAU,CAAC;YACpD,IAAI,CAAC,eAAe,EAAE;;AAEpB,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5B,aAAA;AACD,YAAA,OAAO,eAAe,CAAC;AACzB,SAAC,CAAC,EACF,SAAS,CAAC,CAAC,EAAE,YAAY,EAAE,UAAU,EAAE,KACrC,IAAI,CAAC,uBAAuB,CAAC,uBAAuB,CAClD,YAAY,EACZ,UAAU,CACX,CACF,EACD,GAAG,CAAC,CAAC,YAA4B,KAAI;YACnC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC;AAC5C,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,IAAI,KAAI,CAAC,CAAC,CAAC;SAClD,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;AACA,aAAA,SAAS,EAAE,CAAC;AAEf,QAAA,IAAI,CAAC,mBAAmB;AACrB,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,aAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AACpB,YAAA,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,CAC7C,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,KACT,KAAK,EAAE,IAAI,EACX,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,IAC3B,CAAC;AACL,SAAC,CAAC,CAAC;AAEL,QAAA,IAAI,CAAC,oBAAoB;AACtB,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,aAAA,SAAS,CAAC,CAAC,EAAmB,KAAI;AAAvB,YAAA,IAAA,EAAE,IAAI,EAAa,GAAA,EAAA,EAAR,MAAM,GAAA,MAAA,CAAA,EAAA,EAAjB,QAAmB,CAAF,CAAA;YAC3B,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACnD,MAAM,CACT,EAAA,EAAA,KAAK,EAAE,IAAI,EACX,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAA,CAAA,CAC3B,CAAC;AACL,SAAC,CAAC,CAAC;KACN;AAnHD,IAAA,IAAY,cAAc,GAAA;QACxB,OAAO,IAAI,CAAC,uBAAuB;aAChC,gBAAgB,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;aACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;KAC7C;AAED,IAAA,IAAY,kBAAkB,GAAA;QAC5B,OAAO,IAAI,CAAC,uBAAuB;aAChC,iBAAiB,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;aAClD,IAAI,CACH,GAAG,CAAC,CAAC,YAAY,MAAM;YACrB,KAAK,EAAE,kBAAkB,CACvB,YAA+B,EAC/B,IAAI,CAAC,OAAO,CAAC,aAAa,CAC3B;YACD,KAAK,EAAG,YAAgC,CAAC,KAAK;SAC/C,CAAC,CAAC,CACJ,CAAC;KACL;AA0BD,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;KACxC;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC;KACxC;IAmED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;IAEO,uBAAuB,GAAA;;QAC7B,OAAO,IAAI,CAAC,qBAAqB;AAC9B,aAAA,sBAAsB,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC;aACpD,IAAI,CACH,WAAW,CAAC,CAAC,CAAC,EACd,UAAU,CAAC,CAAC,CAAC,KAAI;AACf,YAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE;gBACnD,MAAM,EAAE,SAAS,CAAA,CAA2F,yFAAA,CAAA;AAC7G,aAAA,CAAC,CAAC;AACH,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,CACH,CAAC;KACL;IAEO,wBAAwB,GAAA;;QAI9B,OAAO,IAAI,CAAC,qBAAqB;AAC9B,aAAA,uBAAuB,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC;AACrD,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,QAAQ,KAAI;YACf,MAAM,MAAM,GACV,EAAE,CAAC;YACL,IAAI,SAAS,IAAI,QAAQ,EAAE;gBACzB,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AAEpE,gBAAA,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;AAC/B,gBAAA,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;AACpC,aAAA;AACD,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,EACF,WAAW,CAAC,CAAC,CAAC,EACd,UAAU,CAAC,CAAC,GAAG,KAAI;AACjB,YAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE;gBACnD,MAAM,EAAE,SAAS,CAAA,CAA6F,2FAAA,CAAA;AAC/G,aAAA,CAAC,CAAC;AACH,YAAA,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;SAChB,CAAC,CACH,CAAC;KACL;IAEO,sBAAsB,CAC5B,EAAU,EACV,aAAqB,EAAA;QAErB,OAAO,IAAI,CAAC,uBAAuB;AAChC,aAAA,qBAAqB,CAAC,EAAE,EAAE,aAAa,CAAC;aACxC,IAAI,CACH,GAAG,CACD,CAAC,IAAqB,MAAuB;AAC3C,YAAA,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,CAAC,IAAuB,CAAC;AACjC,SAAA,CAAC,CACH,EACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAClC,GAAG,CACD,CAAC,IAAoC,KACnC,IAAI,CAAC,CAAC,CAAC,CACV,EACD,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,CAChC,CAAC;KACL;IAEO,WAAW,GAAA;QAGjB,OAAO,IAAI,CAAC,uBAAuB;AAChC,aAAA,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;AACvD,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,IAAqC,KAAI;AAC5C,YAAA,IAAI,EAAE,IAAI,YAAY,iBAAiB,CAAC,EAAE;AACxC,gBAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;AAChC,gBAAA,IAAI,CAAC,uBAAuB;AAC1B,oBAAA,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU;AAChC,0BAAE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,UAAU;AAChD,0BAAE,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;AAC5B,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AACxB,aAAA;SACF,CAAC,EACF,GAAG,CAAC,CAAC,KAAsC,KACzC,EAAE,KAAK,YAAY,iBAAiB,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAC5D,CACF,CAAC;KACL;IAEO,iBAAiB,GAAA;QAGvB,OAAO,IAAI,CAAC,uBAAuB;AAChC,aAAA,iBAAiB,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;AAClE,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,IAAyC,KAAI;YAChD,IAAI,CAAC,mBAAmB,GAAG,EAAE,IAAI,YAAY,iBAAiB,CAAC;kBAC3D,IAAI,CAAC,KAAK;kBACV,CAAC,CAAC;AACR,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,KAAK,KACR,EAAE,KAAK,YAAY,iBAAiB,CAAC;cACjC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;AACvD,cAAE,KAAK,CACV,CACF,CAAC;KACL;IAEO,gBAAgB,GAAA;QACtB,OAAO,IAAI,CAAC,uBAAuB;AAChC,aAAA,gBAAgB,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;aACjE,IAAI,CACH,GAAG,CAAC,CAAC,YAAY,MAAM;YACrB,KAAK,EAAE,kBAAkB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YACnE,KAAK,EAAE,YAAY,CAAC,KAAK;SAC1B,CAAC,CAAC,CACJ,CAAC;KACL;AAEO,IAAA,mBAAmB,CACzB,OAAgC,EAAA;QAEhC,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC;AACtE,cAAE,IAAI,CAAC,WAAW,EAAE;AACpB,cAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QACX,IAAI,CAAC,eAAe,GAAG,oBAAoB,CACzC,eAAe,CAAC,QAAQ,EACxB,OAAO,CACR;AACC,cAAE,IAAI,CAAC,iBAAiB,EAAE;AAC1B,cAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QAEX,OAAO,aAAa,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAC/D,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM;YAC7B,QAAQ;YACR,QAAQ;YACR,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;YAC7C,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;SACtD,CAAC,CAAC,CACJ,CAAC;KACH;AAED,IAAA,iBAAiB,CAAC,OAAwB,EAAA;AACxC,QAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACvC;AAED,IAAA,sBAAsB,CAAC,KAAc,EAAA;AACnC,QAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,mBAAmB,GAAA;AACjB,QAAA,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE,CAAC;AACjD,QAAA,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;KACpC;IAED,UAAU,CACR,MAAwD,EACxD,kBAAuC,EAAA;AAEvC,QAAA,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,KAAI;;YACvB,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;YACpC,KAAK,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;YAC3D,KAAK,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;YAC/D,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YACrD,KAAK,CAAC,OAAO,CAAC,yBAAyB;gBACrC,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,CAAC,yBAAyB,MACtC,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC,yBAAyB,CAAC;AACjC,YAAA,KAAK,CAAC,OAAO,CAAC,YAAY,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,IAAG,CAAC,CAAC;AAEtD,YAAA,IAAuB,KAAM,CAAC,MAAM,YAAY,KAAK,EAAE;gBACrD,IAAI,CAAC,UAAU,CAAoB,KAAM,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;AACvE,aAAA;AAAM,iBAAA;gBACL,QAAS,KAAgC,CAAC,IAAI;oBAC5C,KAAK,iBAAiB,CAAC,oBAAoB;wBACzC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBAC/C,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;wBACrD,KAAK,CAAC,OAAO,CAAC,sBAAsB;AAClC,4BAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACzC,KAAK,CAAC,OAAO,CAAC,4BAA4B;4BACxC,IAAI,CAAC,0BAA0B,CAAC;wBAClC,KAAK,CAAC,OAAO,CAAC,uBAAuB;AACnC,4BAAA,IAAI,CAAC,uBAAuB,CAAC,2BAA2B,CAAC;wBAC3D,KAAK,CAAC,OAAO,CAAC,yBAAyB;AACrC,4BAAA,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC;wBACzC,MAAM;oBACR,KAAK,iBAAiB,CAAC,mBAAmB;AACxC,wBAAA,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAC/D,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;wBACrD,MAAM;oBACR,KAAK,iBAAiB,CAAC,uBAAuB;AAC5C,wBAAA,KAAK,CAAC,OAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;wBACtD,KAAK,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC;wBACxD,KAAK,CAAC,OAAO,CAAC,MAAM;AAClB,4BAAA,KAAK,CAAC,IAAI,KAAK,eAAe,CAAC,qBAAqB;kCAChD,IAAI,CAAC,cAAc;AACrB,kCAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBAC/B,MAAM;oBACR,KAAK,iBAAiB,CAAC,eAAe;AACpC,wBAAA,KAAK,CAAC,OAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;wBACtD,KAAK,CAAC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC;AACxD,wBAAA,IACE,KAAK,CAAC,IAAI,KAAK,kBAAkB,CAAC,wBAAwB;AAC1D,4BAAA,IAAI,CAAC,OAAO,CAAC,cAAc,EAC3B;4BACA,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC;4BACtD,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAChD,yBAAA;AAAM,6BAAA;4BACL,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;4BAC/C,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;AACtD,yBAAA;wBACD,MAAM;oBACR,KAAK,iBAAiB,CAAC,eAAe;wBACpC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;wBAC1C,KAAK,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;wBACrD,MAAM;oBACR,KAAK,iBAAiB,CAAC,mBAAmB;wBACxC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;wBAC5C,MAAM;oBACR,KAAK,iBAAiB,CAAC,yBAAyB,CAAC;oBACjD,KAAK,iBAAiB,CAAC,OAAO;wBAC5B,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;wBACvC,MAAM;oBACR,KAAK,iBAAiB,CAAC,wBAAwB;wBAC7C,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;wBACxC,KAAK,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;wBACvD,KAAK,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;wBACjD,KAAK,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;wBAC3D,MAAM;oBACR,KAAK,iBAAiB,CAAC,MAAM;AAC3B,wBAAA,IACE,KAAK,CAAC,IAAI,KAAK,cAAc,CAAC,SAAS;4BACvC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,MAAK,WAAW,CAAC,YAAY,EACtD;AACA,4BAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAA+B,CAAC,CAAC;AAC/D,yBAAA;wBACD,MAAM;AACT,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;;gJA/XU,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,+BAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;oJAA/B,+BAA+B,EAAA,CAAA,CAAA;4FAA/B,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAD3C,UAAU;;;ACjDX;AACO,MAAM,QAAQ,GAAG;IACtB,kBAAkB,EAAE,SAAS,CAAA,CAAuD,qDAAA,CAAA;IACpF,YAAY,EAAE,SAAS,CAAA,CAA0D,wDAAA,CAAA;IACjF,cAAc,EAAE,SAAS,CAAA,CAAwD,sDAAA,CAAA;CAClF,CAAC;AAEK,MAAM,UAAU,GAAG;IACxB,kBAAkB,EAAE,SAAS,CAAA,CAAiG,+FAAA,CAAA;IAC9H,mBAAmB,EAAE,CAAC,YAAoB,KACxC,SAAS,CAAA,CAAyE,sEAAA,EAAA,YAAY,CAAkB,gBAAA,CAAA;CACnH,CAAC;AAEK,MAAM,UAAU,GAAG;AACxB,IAAA,cAAc,EAAE;QACd,aAAa,EAAE,SAAS,CAAA,CAAgF,8EAAA,CAAA;QACxG,4BAA4B,EAAE,SAAS,CAAA,CAAA;AACT,iCAAA,CAAA;QAC9B,iBAAiB,EAAE,SAAS,CAAA,CAA4F,0FAAA,CAAA;AACzH,KAAA;AACD,IAAA,YAAY,EAAE;QACZ,aAAa,EAAE,SAAS,CAAA,CAAoF,kFAAA,CAAA;QAC5G,4BAA4B,EAAE,SAAS,CAAA,CAAwI,sIAAA,CAAA;QAC/K,iBAAiB,EAAE,SAAS,CAAA,CAAkG,gGAAA,CAAA;AAC/H,KAAA;IACD,oBAAoB,EAAE,SAAS,CAAA,CAAgF,8EAAA,CAAA;IAC/G,wBAAwB,EAAE,SAAS,CAAA,CAA4F,0FAAA,CAAA;IAC/H,mCAAmC,EAAE,SAAS,CAAA,CAAA;AACd,iCAAA,CAAA;IAChC,uBAAuB,EAAE,SAAS,CAAA,CAAuF,qFAAA,CAAA;IACzH,uBAAuB,EAAE,SAAS,CAAA,CAA4G,0GAAA,CAAA;IAC9I,sCAAsC,EAAE,SAAS,CAAA,CAAA;AACjB,iCAAA,CAAA;IAChC,oBAAoB,EAAE,SAAS,CAAA,CAAoE,kEAAA,CAAA;IACnG,kBAAkB,EAAE,SAAS,CAAA,CAAoF,kFAAA,CAAA;IACjH,sBAAsB,EAAE,SAAS,CAAA,CAAkG,gGAAA,CAAA;IACnI,iCAAiC,EAAE,SAAS,CAAA,CAAwI,sIAAA,CAAA;IACpL,kBAAkB,EAAE,SAAS,CAAA,CAAwE,sEAAA,CAAA;IACrG,gCAAgC,EAAE,SAAS,CAAA,CAAiF,+EAAA,CAAA;IAC5H,sCAAsC,EAAE,SAAS,CAAA,CAA6E,2EAAA,CAAA;AAC9H,IAAA,gCAAgC,EAAE;QAChC,MAAM,EAAE,SAAS,CAAA,CAA+E,6EAAA,CAAA;QAChG,OAAO,EAAE,SAAS,CAAA,CAAoG,kGAAA,CAAA;AACvH,KAAA;CACF;;MCzBY,oBAAoB,CAAA;AA+B/B,IAAA,WAAA,CAA6B,qBAA4C,EAAA;QAA5C,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;AA9BxD,QAAA,IAAA,CAAA,yBAAyB,GAAG,IAAI,eAAe,CAE9D,SAAS,CAAC,CAAC;AACI,QAAA,IAAA,CAAA,yBAAyB,GAAG,IAAI,eAAe,CAE9D,SAAS,CAAC,CAAC;QAEb,IAAsB,CAAA,sBAAA,GAAG,IAAI,CAAC,yBAAyB;AACpD,aAAA,YAAY,EAAE;AACd,aAAA,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAChC,IAAsB,CAAA,sBAAA,GAAG,IAAI,CAAC,yBAAyB;AACpD,aAAA,YAAY,EAAE;AACd,aAAA,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;KAkB6C;AAhB7E,IAAA,IAAI,0BAA0B,GAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;KAC7C;IAED,OAAO,sBAAsB,CAC3B,SAAyC,EAAA;;QAEzC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,cAAc,EAAE,GAAG,SAAS,IAAI,EAAE,CAAC;QACpE,OAAO;AACL,YAAA,kBAAkB,EAAE,SAAS,KAAA,IAAA,IAAT,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,aAAa;AAC5C,YAAA,mBAAmB,EAAE,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,aAAa;AAChD,YAAA,MAAM,EAAE,cAAc,KAAA,IAAA,IAAd,cAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAc,CAAE,WAAW;AACnC,YAAA,OAAO,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,YAAY,KAAZ,IAAA,IAAA,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,0CAAE,OAAO;SAC5D,CAAC;KACH;AAID,IAAA,mBAAmB,CAAC,MAA0B,EAAA;AAC5C,QAAA,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7C;AAED,IAAA,mBAAmB,CAAC,aAA6B,EAAA;AAC/C,QAAA,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACpD;AAED,IAAA,wBAAwB,CACtB,OAA4B,EAAA;AAE5B,QAAA,IAAI,UAAU,CAAC;AAEf,QAAA,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,YAAA,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;AAG1B,YAAA,IAAI,MAAM,CAAC,WAAW,KAAK,wBAAwB,EAAE;AACnD,gBAAA,OAAO,KAAK,CAAC;AACd,aAAA;YAED,UAAU,GAAG,IAAI,CAAC,qBAAqB;AACpC,iBAAA,oCAAoC,CAAC,MAAM,CAAC,WAAW,CAAC;iBACxD,IAAI,CACH,GAAG,CAAC,CAAC,QAAiC,KACpC,iBAAiB,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CACnE,CACF,CAAC;AACL,SAAA;AAAM,aAAA;AACL,YAAA,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI,CAC1D,MAAM,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC,EAC9B,GAAG,CAAC,CAAC,OAAiC,KACpC,iBAAiB,CAAC,OAAO,IAAI,EAAE,CAAC,CACjC,CACF,CAAC;AACH,SAAA;AAED,QAAA,OAAO,UAAU,CAAC;KACnB;IAED,oBAAoB,CAAC,iBAAoC,EAAE,IAAe,EAAA;AACxE,QAAA,uBAAuB,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;AACjD,QAAA,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;KAC3C;;qIA5EU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,qBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;yIAApB,oBAAoB,EAAA,CAAA,CAAA;4FAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;;;MCwEE,0BAA0B,CAAA;IAoErC,WACmB,CAAA,uBAAgD,EAChD,qBAA4C,EAC5C,oBAA0C,EAC1C,iBAAoC,EACpC,YAA0B,EAC1B,KAAwB,EACxB,kBAAmD,EACnD,iBAAkD,EAClD,MAAkB,EACN,YAAkC,EAC9B,QAAgB,EAGxC,aAAiC,EAAA;;QAbzB,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;QAChD,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QAC5C,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACpC,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAK,CAAA,KAAA,GAAL,KAAK,CAAmB;QACxB,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAiC;QACnD,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAiC;QAClD,IAAM,CAAA,MAAA,GAAN,MAAM,CAAY;QACN,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAsB;QAC9B,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAQ;QAGxC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAoB;AA/E3B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;QAG1C,IAAe,CAAA,eAAA,GAA2B,IAAI,CAAC;QAC/C,IAAyB,CAAA,yBAAA,GAAG,KAAK,CAAC;QAClC,IAAS,CAAA,SAAA,GAAG,MAAA,IAAI,CAAC,YAAY,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC;AAGjD,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,WAAW,EAAE,CAAC;AAC1C,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,OAAO,EAAa,CAAC;AACzC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;AAClD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;AAEhD,QAAA,IAAA,CAAA,iBAAiB,GACxB,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC;AACxC,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC;AAE1D,QAAA,IAAA,CAAA,uBAAuB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;AAC9D,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC;AACzD,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;AAEnE,QAAA,IAAA,CAAA,sBAAsB,GAC7B,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC;AAC1C,QAAA,IAAA,CAAA,sBAAsB,GAC7B,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC;AAE1C,QAAA,IAAA,CAAA,4BAA4B,GAEjC,IAAI,CAAC,kBAAkB,CAAC,4BAA4B,CAAC;AAChD,QAAA,IAAA,CAAA,WAAW,GAEhB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAC1C,GAAG,CAAC,CAAC,UAAU,KAAI;AACjB,YAAA,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAC9C,YAAA,OAAO,UAAU,CAAC;SACnB,CAAC,CACH,CAAC;QAIF,IAAO,CAAA,OAAA,GAA2B,EAAE,CAAC;QACrC,IAAO,CAAA,OAAA,GAAwB,EAAE,CAAC;AAIlC,QAAA,IAAA,CAAA,mBAAmB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC,cAAc,CAAC,CAAC;QAE1E,IAAM,CAAA,MAAA,GAAuC,EAAE,CAAC;QAChD,IAAmC,CAAA,mCAAA,GAAG,KAAK,CAAC;QAC5C,IAA6B,CAAA,6BAAA,GAAG,IAAI,CAAC;QACrC,IAAuB,CAAA,uBAAA,GAAG,KAAK,CAAC;QAChC,IAAqB,CAAA,qBAAA,GAAG,IAAI,CAAC;QAC7B,IAAmB,CAAA,mBAAA,GAAG,KAAK,CAAC;QAG5B,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;QACrB,IAAW,CAAA,WAAA,GAAG,WAAW,CAAC;KAwBtB;IAEJ,QAAQ,GAAA;AACN,QAAA,aAAa,CAAC;YACZ,IAAI,CAAC,kBAAkB,CAAC,QAAQ;YAChC,IAAI,CAAC,kBAAkB,CAAC,QAAQ;YAChC,IAAI,CAAC,YAAY,CAAC,iBAAiB;SACpC,CAAC;aACC,IAAI,CAAC,oBAAoB,EAAE,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACxD,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,oBAAoB,CAAC,KAAI;;AACtD,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,YAAA,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;AACjD,YAAA,IAAI,CAAC,qBAAqB;AACxB,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,qBAAqB,mCAAI,IAAI,CAAC,qBAAqB,CAAC;AAC9D,YAAA,IAAI,CAAC,6BAA6B;AAChC,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,6BAA6B,mCACrC,IAAI,CAAC,6BAA6B,CAAC;AAErC,YAAA,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;;gBAExB,IAAI,CAAC,0BAA0B,CAC7B,CAAA,EAAA,GAAA,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,0CAAE,mBAAmB,EACvC,OAAO,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAC5B,CAAC;gBAEF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,aAAA;AACD,YAAA,MAAM,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,GAC9D,OAAO,CAAC;YAEV,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAI;AACpC,gBAAA,IAAI,OAAO,GAAG,OAAO,CAAC,cAAc;AAClC,sBAAE,wBAAwB,CAAC,MAAM,CAAC;sBAChC,MAAM,CAAC;AAEX,gBAAA,IAAI,oBAAoB,EAAE;oBACxB,OAAO,GAAG,4BAA4B,CACpC,MAAM,EACN,CAAC,CAAC,oBAAoB,CAAC,QAAQ,EAC/B;wBACE,0BAA0B;wBAC1B,0BAA0B;AAC3B,qBAAA,CACF,CAAC;AACH,iBAAA;AAED,gBAAA,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;AACnE,gBAAA,OAAO,OAAO,CAAC;AACjB,aAAC,CAAC,CAAC;AAEH,YAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAErC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAC7C,2BAA2B,CAAC,IAAI,CACjC,CAAC;AACJ,SAAC,CAAC,CAAC;QAEL,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,YAAY,CAAC,IAAI,EAAE;AACxD,YAAA,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;AAC7C,YAAA,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;AACvC,SAAA;AAED,QAAA,IAAI,CAAC,oBAAoB;AACtB,aAAA,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC;AACtC,aAAA,IAAI,CACH,GAAG,CACD,CAAC,OAAO,KAAI;AACV,YAAA,IAAI,CAAC,IAAI,CAAC,yBAAyB,IAAI,EAAC,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,MAAM,CAAA,EAAE;AACvD,gBAAA,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;AACrD,aAAA;AACD,YAAA,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;AACvC,YAAA,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;AACpC,SAAC,EACD,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;AACpD,YAAA,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,CACH,EACD,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;AACA,aAAA,SAAS,EAAE,CAAC;QAEf,kBAAkB,CACK,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAClD,YAAY,CAAC,MAAM,CACpB,CAAC;KACH;IAED,eAAe,GAAA;QACb,IAAI,CAAC,YAAY,CAAC,qBAAqB;AACpC,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,aAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;AACtB,YAAA,IAAI,QAAQ,EAAE;AACZ,gBAAA,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;AACxC,aAAA;AACH,SAAC,CAAC,CAAC;QAEL,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC7B,YAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC7C,SAAA;KACF;IAED,kBAAkB,GAAA;QAChB,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,kBAAkB,CACK,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAClD,YAAY,CAAC,SAAS,CACvB,CAAC;KACH;IAEO,0BAA0B,CAChC,eAAqC,EACrC,gBAAoC,EAAA;QAEpC,IAAI,CAAA,eAAe,KAAA,IAAA,IAAf,eAAe,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAf,eAAe,CAAE,MAAM,KAAI,gBAAgB,EAAE;;AAE/C,YAAA,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,eAAe,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACpE,YAAA,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE1C,IAAI,CAAC,uBAAuB,CAAC,uBAAuB;gBAClD,eAAe,CAAC,QAAQ,EAAE,CAAC;AAC9B,SAAA;KACF;AAEO,IAAA,iBAAiB,CAAC,OAA+B,EAAA;AACvD,QAAA,MAAM,IAAI,GAAc,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QACvD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,YAAY,CAAc,CAAC;AAC3E,QAAA,mBAAmB,CACjB,YAAY,EACZ,kBAAkB,CAAC,UAAU,EAC7B,EAAE,EACF,EAAE,EACF,MAAM,CACP,CAAC;AACF,QAAA,mBAAmB,CAAC,IAAI,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;QAChE,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAC7C,IAAI,EACJ,YAAY,CAAC,aAAa,CAC3B,CAAC;AACF,QAAA,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAClC,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3D,CAAC;QACF,MAAM,QAAQ,GAAG,yBAAyB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,oBAAoB,GAAG,QAAQ,CAAC,KAAK,CAAC;AACxD,QAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACxB;AAEO,IAAA,iBAAiB,CAAC,OAA4B,EAAA;QACpD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1E,IAAI,CAAC,uBAAuB,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;KAC9D;IAEO,UAAU,GAAA;AAChB,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACpD;IAEO,iBAAiB,CAAC,IAAe,EAAE,eAAgC,EAAA;QACzE,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,CAAC;AACpE,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC5B,QAAA,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;KACjD;IAEO,uBAAuB,GAAA;AAC7B,QAAA,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;AACpC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC1E,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KACvC;AAEO,IAAA,gBAAgB,CACtB,WAAoB,EAAA;AAEpB,QAAA,IAAI,WAAW,EAAE;YACf,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CACxB,CAAC,aAAa,KAAK,WAAW,KAAK,aAAa,CAAC,WAAW,CAC7D,CAAC,CAAC,CAAC,CAAC;AACN,SAAA;QACD,OAAO;KACR;IAEO,aAAa,CACnB,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAmB,EACtC,IAAgB,EAAA;;QAEhB,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;AACrD,QAAA,MAAM,YAAY,GAAG,0BAA0B,CAAC,KAAK,EAAE,OAAO,EAAE;YAC9D,IAAI;YACJ,EAAE;AACH,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,CAAA,EAAA,GAAA,IAAI,CAAC,mBAAmB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC3B,KAAK,CAAC,gBAAgB,EAAE,CAAC;KAC1B;IAEO,MAAM,GAAA;AACZ,QAAA,IAAI,CAAC,aAAa;aACf,IAAI,CACH,MAAM,CACJ,CAAC,IAAe,KACd,IAAI,CAAC,SAAS,CACZ,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAC5D;YACD,IAAI,CAAC,SAAS,CACZ,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAChE,CACJ,EACD,SAAS,CAAC,CAAC,IAAe,KAAI;AAC5B,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AACpC,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SACvC,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;AACA,aAAA,SAAS,EAAE,CAAC;KAChB;AAEO,IAAA,OAAO,CAAC,YAAuB,EAAA;QACrC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAEzC,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,QAAA,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;KAC5B;AAED;;AAEG;IACK,mBAAmB,CAAC,iBAAuC,EAAE,EAAA;AACnE,QAAA,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,EAAE;AAC3C,YAAA,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;AACtD,SAAA;AAED,QAAA,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;AACzD,QAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1C;AAEO,IAAA,eAAe,CAAC,IAAe,EAAA;AACrC,QAAA,IAAI,CAAC,uBAAuB;aACzB,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AAClD,aAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,aAAA,SAAS,CACR,CAAC,QAAQ,KAAI;AACX,YAAA,MAAM,OAAO,GACX,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC;AAC9B,gBAAA,mBAAmB,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;AAClD,YAAA,IAAI,CAAC,mBAAmB;AACtB,gBAAA,IAAI,CAAC,mBAAmB;AACxB,oBAAA,mBAAmB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC5C,YAAA,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,8BAA8B,CAAC,CAAC;YAC1D,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC7D,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,YAAA,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;AACrD,SAAC,EACD,CAAC,EAAE,KAAK,EAAE,KAAI;;AACZ,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;AAE3B,YAAA,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;AAChC,gBAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;AAClC,gBAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,KAAI,IAAI,CAAC,YAAY,EAAE;AAC5C,oBAAA,MAAM,WAAW,GAAkB;AACjC,wBAAA,aAAa,EAAE,KAAK;wBACpB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,aAAa,EAAE,IAAI,CAAC,aAAa;wBACjC,kBAAkB,EAAE,QAAQ,CAAC,cAAc;wBAC3C,cAAc,EAAE,IAAI,CAAC,YAAY;qBAClC,CAAC;AACF,oBAAA,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAC/D,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE;wBACnD,MAAM,EAAE,QAAQ,CAAC,kBAAkB;wBACnC,OAAO,EAAE,QAAQ,CAAC,YAAY;AAC9B,wBAAA,aAAa,EAAE,KAAK;AACrB,qBAAA,CAAC,CAAC;AACJ,iBAAA;gBACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC5B,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,aAAA;AACH,SAAC,CACF,CAAC;KACL;AAEO,IAAA,eAAe,CAAC,KAAsB,EAAA;;AAC5C,QAAA,IAAI,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,GAAG,EAAE;AACd,YAAA,MAAM,iBAAiB,GAAG,SAAS,CACjC,oBAAoB,CAAC,mBAAmB,EACxC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAChB,CAAC;AAEF,YAAA,MAAM,aAAa,GACjB,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,iBAAiB,KAAA,IAAA,IAAjB,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjB,iBAAiB,CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,kBAAkB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAClD,CAAC,iBAAoD,KACnD,iBAAiB,CAAC,IAAI,KAAK,KAAK,CAAC,GAAG,CACvC,CAAC;AAEJ,YAAA,IAAI,aAAa,KAAb,IAAA,IAAA,aAAa,uBAAb,aAAa,CAAE,OAAO,EAAE;AAC1B,gBAAA,aAAa,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,OAAO,CACnD,UAAU,EACV,MAAA,KAAK,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CACrB,CAAC;AAEF,gBAAA,MAAM,WAAW,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,CAAC,YAAY;AAC/C,qBAAA,GAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CACpC,GAAG,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;AAClD,gBAAA,WAAW,aAAX,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAX,WAAW,CAAE,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC;gBAC9C,CAAA,EAAA,GAAA,WAAW,aAAX,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAX,WAAW,CACP,GAAG,CAAC,oBAAoB,CAAC,MAAM,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAChC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAEjC,iBAAiB,CACf,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,aAAa,EAC1B,mCAAmC,CACpC,CAAC;AACH,aAAA;AACF,SAAA;KACF;IAEO,mBAAmB,GAAA;;QACzB,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC,cAAc,CAAC,KAAK,EAAE;AACvD,YAAA,QAAQ,EAAE,QAAQ;AAClB,YAAA,KAAK,EAAE,OAAO;AACf,SAAA,CAAC,CAAC;KACJ;AAEO,IAAA,eAAe,CAAC,KAAU,EAAA;;QAChC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;AAAE,YAAA,OAAO,KAAK,CAAC;QAE/C,MAAM,MAAM,GAAG,CAAA,EAAA,GAAA,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,CAAC;QACpC,OAAO,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAC9C,MAA2B,CAC5B,CAAC;KACH;AAEO,IAAA,YAAY,CAAC,IAAe,EAAA;QAClC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,WAAW,CAAC,aAAa,EAAE;AAC1D,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAChC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;AAClC,SAAA;KACF;AAEO,IAAA,mBAAmB,CAAC,IAAe,EAAA;;AACzC,QAAA,MAAM,YAAY,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,YAAY,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;AACzE,QAAA,MAAM,iBAAiB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,GAAG,CAChC,qBAAqB,CAAC,iBAAiB,CACxC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;AACT,QAAA,IAAI,iBAAiB,EAAE;AACrB,YAAA,IAAI,CAAC,uBAAuB;iBACzB,mBAAmB,CAClB,iBAAiB,EACjB,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAC1C;AACA,iBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBAChC,SAAS,CACR,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,EACzD,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAC1C,CAAC;AACL,SAAA;KACF;AAEO,IAAA,qBAAqB,CAAC,IAAe,EAAA;;AAC3C,QAAA,MAAM,YAAY,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,YAAY,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;AACzE,QAAA,IAAI,CAAC,uBAAuB;aACzB,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AAC9D,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CACR,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,EACzD,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAC1C,CAAC;KACL;AAEO,IAAA,2BAA2B,CAAC,YAAoB,EAAA;;AACtD,QAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,IAAI,EAAE;AAClD,YAAA,MAAM,EAAE,UAAU,CAAC,mBAAmB,CAAC,YAAY,CAAC;AACpD,YAAA,aAAa,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;AACtC,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;AAC5B,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,EAAE,CAAC;AACjC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,EAAE,CAAC;AACnB,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,EACV,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,8BAA8B,GACxE,IAAI,CACL,CAAC;KACH;AAEO,IAAA,yBAAyB,CAAC,QAAsB,EAAA;AACtD,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;AAC3B,QAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE;AACnD,YAAA,MAAM,EAAE,CAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,OAAO,KAAI,UAAU,CAAC,kBAAkB;AACxD,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;AAEO,IAAA,WAAW,CAAC,IAAe,EAAE,OAAO,GAAG,IAAI,EAAA;AACjD,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AAC/B,gBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACzB,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AAC5B,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAA;KACF;AAEO,IAAA,oBAAoB,CAAC,IAAe,EAAA;AAC1C,QAAA,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;KAC7E;AAED,IAAA,uBAAuB,CAAC,mBAAoC,EAAA;QAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAClC,oBAAoB,CAAC,mBAAmB,CAAC,CAC1C,CAAC;QACF,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,EAAE;YACrC,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAC/B,YAAA,IAAI,CAAC,eAAe,GAAG,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;AACrE,YAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACrD,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;AACnB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;AACzC,SAAA;KACF;IAED,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC5B,YAAA,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACvC,SAAA;KACF;AAED,IAAA,sBAAsB,CAAC,IAAY,EAAA;AACjC,QAAA,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC7C;AAED,IAAA,MAAM,CAAC,IAAY,EAAA;AACjB,QAAA,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC3C;AAED,IAAA,cAAc,CAAC,MAA0B,EAAA;AACvC,QAAA,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;KACvD;AAED,IAAA,qBAAqB,CAAC,aAA6B,EAAA;AACjD,QAAA,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;KAC9D;AAED,IAAA,eAAe,CAAC,IAAe,EAAA;AAC7B,QAAA,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;AACpD,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,YAAY,CAAC,qBAAqB;AACpC,iBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAChC,iBAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;AACtB,gBAAA,IAAI,QAAQ,EAAE;AACZ,oBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACxC,iBAAA;AACH,aAAC,CAAC,CAAC;AACN,SAAA;KACF;AAED;;AAEG;AAEK,IAAA,mBAAmB,CACzB,IAAe,EAAA;AAEf,QAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxC,QAAA,OAAO,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CACnD,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAC5C,CAAC;KACH;IAED,yBAAyB,GAAA;;AACvB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,EAAE,CAAC;KACjC;IAED,mCAAmC,GAAA;AACjC,QAAA,IAAI,CAAC,mCAAmC,GAAG,KAAK,CAAC;KAClD;AAED,IAAA,QAAQ,CAAC,IAAe,EAAA;;AACtB,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,0BAA0B,CAAC;AAEvE,QAAA,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACjE,SAAA;AAED,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,kBAAkB,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,YAAY,CAAC,MAAM,CAAC,EAAE;YACxD,kBAAkB,CAChB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAC7B,YAAY,CAAC,MAAM,EACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EACjC,IAAI,CACL,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACxB,SAAA;KACF;IAED,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxD,QAAA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;AAED,IAAA,YAAY,CAAC,IAAe,EAAA;;AAC1B,QAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE;AACnC,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,EAAE,CAAC;AACjC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,mCAAmC,GAAG,IAAI,CAAC;AACjD,SAAA;KACF;AAED,IAAA,YAAY,CAAC,IAAe,EAAA;AAC1B,QAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE;AACnC,YAAA,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;YACpC,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAC5B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;AACrC,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrB,SAAA;KACF;AAED,IAAA,OAAO,CAAC,YAA0B,EAAA;AAChC,QAAA,IAAI,YAAY,KAAK,YAAY,CAAC,MAAM,EAAE;AACxC,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACzD,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;KAChC;;2IAjoBU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAD,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAE,+BAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,+BAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAH,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EA+E3B,MAAM,EAAA,EAAA,EAAA,KAAA,EAEN,sCAAsC,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;+HAjFrC,0BAA0B,EAAA,QAAA,EAAA,wBAAA,EAAA,SAAA,EAF1B,CAAC,+BAA+B,CAAC,0GA+Df,gBAAgB,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,YAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,SAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAEf,WAAW,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECzJ3C,s1LA0JA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iCAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,SAAA,EAAA,cAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,mBAAA,EAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,eAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,2BAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,6BAAA,EAAA,YAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,sBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,OAAA,EAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAI,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDhEa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,wBAAwB;AAClC,oBAAA,WAAW,EAAE,sCAAsC;oBACnD,SAAS,EAAE,CAAC,+BAA+B,CAAC;AAC7C,iBAAA,CAAA;;0BA+EI,QAAQ;;0BACR,MAAM;2BAAC,MAAM,CAAA;;0BACb,QAAQ;;0BACR,MAAM;2BAAC,sCAAsC,CAAA;4CAnBhD,SAAS,EAAA,CAAA;sBADR,SAAS;uBAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBAG7D,UAAU,EAAA,CAAA;sBADT,SAAS;uBAAC,SAAS,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBAG5B,cAAc,EAAA,CAAA;sBAA1C,SAAS;uBAAC,gBAAgB,CAAA;;;AEvJ7B,MAAMC,YAAU,GAAG,CAAC,0BAA0B,CAAC,CAAC;MAOnC,uBAAuB,CAAA;;wIAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,mBAAA,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,iBAPhB,0BAA0B,CAAA,EAAA,OAAA,EAAA,CAGlC,YAAY,EAAE,0BAA0B,aAHhC,0BAA0B,CAAA,EAAA,CAAA,CAAA;AAOjC,mBAAA,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAJzB,OAAA,EAAA,CAAA,CAAC,YAAY,EAAE,0BAA0B,CAAC,CAAA,EAAA,CAAA,CAAA;4FAIxC,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,0BAA0B,CAAC;AACnD,oBAAA,YAAY,EAAE,CAAC,GAAGA,YAAU,CAAC;AAC7B,oBAAA,OAAO,EAAE,CAAC,GAAGA,YAAU,CAAC;AACzB,iBAAA,CAAA;;;ACGD,IAAY,mBAKX,CAAA;AALD,CAAA,UAAY,mBAAmB,EAAA;AAC7B,IAAA,mBAAA,CAAA,cAAA,CAAA,GAAA,MAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,cAAA,CAAA,GAAA,MAAqB,CAAA;AACrB,IAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,MAAc,CAAA;AACd,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,MAAgB,CAAA;AAClB,CAAC,EALW,mBAAmB,KAAnB,mBAAmB,GAK9B,EAAA,CAAA,CAAA;;MCTY,yBAAyB,CAAA;;0IAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzB,mBAAA,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,yBAAyB,8HCVtC,0oBAuBA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDba,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAJrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,8BAA8B;AACxC,oBAAA,WAAW,EAAE,oCAAoC;AAClD,iBAAA,CAAA;8BAKU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,aAAa,EAAA,CAAA;sBAArB,KAAK;;;METK,wBAAwB,CAAA;;yIAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,mBAAA,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,qHCVrC,60BAyBA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAN,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDfa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,WAAW,EAAE,mCAAmC;AACjD,iBAAA,CAAA;8BAKU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,aAAa,EAAA,CAAA;sBAArB,KAAK;;;MEJK,0BAA0B,CAAA;;2IAA1B,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,mBAAA,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,0BAA0B,uNCfvC,+8BA4BA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAN,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAM,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDba,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAJtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,+BAA+B;AACzC,oBAAA,WAAW,EAAE,qCAAqC;AACnD,iBAAA,CAAA;8BAKU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAKG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBAKG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAKG,YAAY,EAAA,CAAA;sBAApB,KAAK;;;ME7BK,wBAAwB,CAAA;;yIAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,mBAAA,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,6HCVrC,mvIAqIA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAR,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD3Ha,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACvC,oBAAA,WAAW,EAAE,mCAAmC;AACjD,iBAAA,CAAA;8BAKU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,aAAa,EAAA,CAAA;sBAArB,KAAK;;;METK,4BAA4B,CAAA;;6IAA5B,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,mBAAA,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,4BAA4B,iICVzC,4mUAoTA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAN,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD1Sa,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAJxC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,iCAAiC;AAC3C,oBAAA,WAAW,EAAE,uCAAuC;AACrD,iBAAA,CAAA;8BAKU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,aAAa,EAAA,CAAA;sBAArB,KAAK;;;MEZK,wBAAwB,CAAA;;yIAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,mBAAA,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,6HCPrC,2yHAwHA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAAA,GAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA;4FDjHa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACvC,oBAAA,WAAW,EAAE,mCAAmC;AACjD,iBAAA,CAAA;8BAKU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAKG,aAAa,EAAA,CAAA;sBAArB,KAAK;;;MEHK,sBAAsB,CAAA;IA6CjC,WACmB,CAAA,aAA4B,EAChB,eAA0C,EAAA;QADtD,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAChB,IAAe,CAAA,eAAA,GAAf,eAAe,CAA2B;AA1BzE;;AAEG;AACc,QAAA,IAAA,CAAA,YAAY,GAAmB,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC;AACtF,YAAA,UAAU,EAAE,mCAAmC;YAC/C,iBAAiB,EAAE,CAAC,OAAe,KAAK,CAAA,EAAG,OAAO,CAAE,CAAA;AACrD,SAAA,CAAC,CAAC;AACH;;AAEG;AACH,QAAA,IAAA,CAAA,UAAU,GAAuB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AAClE;;AAEG;AACH,QAAA,IAAA,CAAA,kBAAkB,GAAuB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;AAC5E;;AAEG;AACM,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;KAStC;IAEJ,QAAQ,GAAA;;AACN,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,EAAE,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACjH;AAED;;AAEG;AACH,IAAA,IAAI,SAAS,GAAA;;AACX,QAAA,MAAM,MAAM,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,GAAG,CAAE,CAAA,CAAC,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,OAAO,SAAS,CAAA,CAAA,8DAAA,CAAgE,CAAC;AAClF,SAAA;AAED,QAAA,QAAQ,MAAA,IAAI,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU;YAClC,KAAK,mBAAmB,CAAC,KAAK;AAC5B,gBAAA,OAAO,SAAS,CAAA,CAA0G,uGAAA,EAAA,MAAM,EAAE,CAAC;YACrI,KAAK,mBAAmB,CAAC,OAAO;AAC9B,gBAAA,OAAO,SAAS,CAAA,CAA8G,2GAAA,EAAA,MAAM,EAAE,CAAC;YACzI,KAAK,mBAAmB,CAAC,YAAY;AACnC,gBAAA,OAAO,SAAS,CAAA,CAA2F,wFAAA,EAAA,MAAM,EAAE,CAAC;YACtH,KAAK,mBAAmB,CAAC,YAAY;AACnC,gBAAA,OAAO,SAAS,CAAA,CAAwG,qGAAA,EAAA,MAAM,EAAE,CAAC;AACnI,YAAA;gBACE,OAAO,SAAS,CAAA,CAAA,0GAAA,CAA4G,CAAC;AAChI,SAAA;KACF;AAED;;AAEG;AACH,IAAA,IAAI,UAAU,GAAA;QACZ,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO,SAAS,CAAA,CAAA,iGAAA,CAAmG,CAAC;AACrH,SAAA;aAAM,IAAI,IAAI,CAAC,cAAc,EAAE;YAC9B,OAAO,SAAS,CAAA,CAAA,8FAAA,CAAgG,CAAC;AAClH,SAAA;AAAM,aAAA;YACL,OAAO,SAAS,CAAA,CAAA,uDAAA,CAAyD,CAAC;AAC3E,SAAA;KACF;AAED;;AAEG;AACH,IAAA,IAAI,mBAAmB,GAAA;;AACrB,QAAA,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;AACzB,QAAA,MAAM,YAAY,GAAG,QAAQ,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEhE,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;KACjD;AAED,IAAA,IAAY,cAAc,GAAA;AACxB,QAAA,OAAO,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC,aAAa,CAAC;KACrD;;uIAvGU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAP,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,IAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,mBAAA,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,qMCbnC,2qcAoXA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,WAAA,EAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,yBAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,0BAAA,EAAA,QAAA,EAAA,+BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,eAAA,EAAA,cAAA,EAAA,aAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,4BAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,mCAAA,EAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAH,IAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,KAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FDvWa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACvC,oBAAA,WAAW,EAAE,iCAAiC;oBAC9C,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA,CAAA;;0BAgDI,QAAQ;4CA3CF,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAIG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAIG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAIG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAIG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;;ME8BK,+BAA+B,CAAA;AAkE1C,IAAA,WAAA,CACmB,WAAwB,EACxB,YAA0B,EACV,QAAgB,EAChC,iBAAoC,EACpC,oBAA0C,EAC9B,YAAkC,EAC9C,uBAAgD,EAChD,kBAAmD,EAEnD,wBAAyD,EAGjE,aAAiC,EAAA;QAZzB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QACV,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAQ;QAChC,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACpC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAsB;QAC9C,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;QAChD,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAiC;QAEnD,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAAiC;QAGjE,IAAa,CAAA,aAAA,GAAb,aAAa,CAAoB;QA9EpC,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;AAEzB,QAAA,IAAA,CAAA,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;AACpB,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,eAAe,CAAkC,IAAI,CAAC,CAAC;QAClF,IAAc,CAAA,cAAA,GAAG,EAAE,CAAC;QAEpB,IAAe,CAAA,eAAA,GAAG,KAAK,CAAC;QACxB,IAAqB,CAAA,qBAAA,GAAG,IAAI,CAAC;QAC7B,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;QACrB,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;QAO3B,IAAiB,CAAA,iBAAA,GAAG,KAAK,CAAC;QAC1B,IAAW,CAAA,WAAA,GAAG,WAAW,CAAC;QAE1B,IAAqB,CAAA,qBAAA,GAAG,IAAI,CAAC;QAC7B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAG9B,IAAa,CAAA,aAAA,GAA2B,EAAE,CAAC;QAC3C,IAAM,CAAA,MAAA,GAAuC,EAAE,CAAC;AAChD,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;AAClD,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;AAEtD,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,eAAe,CAAqB,SAAS,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,sBAAsB,GAA8C,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC;AACrH,QAAA,IAAA,CAAA,yBAAyB,GAA4C,IAAI,eAAe,CACtF,SAAS,CACV,CAAC;AAEF,QAAA,IAAA,CAAA,OAAO,GAAG;YACR,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;YACrC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YACnC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;YACvC,mBAAmB,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7D,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;YACpD,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;YACpD,wBAAwB,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;YAClE,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;YACxD,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;YACpD,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;YACpD,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5D,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5C,YAAA,YAAY,EAAE,yBAAyB;YACvC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;YACpD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;YACxC,0BAA0B,EAAE,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC;YACtE,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;YACtD,uBAAuB,EAAE,IAAI,CAAC,oBAAoB;YAClD,oBAAoB,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;SAC3D,CAAC;AAEF,QAAA,IAAA,CAAA,yBAAyB,GAAG,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,IAAI,CAC7E,GAAG,CAAC,MAAM,IAAI,CAAC,EACf,UAAU,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CACjC,CAAC;KAgBE;IAEJ,MAAM,GAAA;QACJ,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC/B;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;QAE/C,IAAI,CAAC,kBAAkB,CAAC,eAAe;AACpC,aAAA,IAAI,CACH,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EACnB,MAAM,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC,CACjC;AACA,aAAA,SAAS,CAAC,CAAC,QAAQ,MAAM,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC;QAE7D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,KAAI;YAC/E,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACpE,YAAA,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;AAE7B,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;AACtF,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAC9C,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EACnB,GAAG,CAAC,CAAC,IAAgB,MAAM,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,EACpD,GAAG,CAAC,CAAC,IAAI,KAAK,CAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,WAAW,EAAE,KAAI,EAAE,CAAC,CACzC,CAAC;AAEF,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAqB,KAAI;AAC9E,YAAA,IAAI,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE;AAChC,gBAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACzB,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxD,gBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;AAC/B,aAAA;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;KAC5D;IAED,iBAAiB,GAAA;QACf,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAEO,QAAQ,CAAC,QAAQ,GAAG,KAAK,EAAA;AAC/B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAE5B,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,cAAc,EAAE;YAChD,IAAI,CAAC,cAAc,EAAE,CAAC;AACvB,SAAA;AAED,QAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KACjC;IAEO,cAAc,GAAA;AACpB,QAAA,IAAI,CAAC,uBAAuB;AACzB,aAAA,cAAc,iCACV,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAA,EAAA,EACtD,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,EACzD,CAAA,CAAA;AACD,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,aAAA,SAAS,CAAC,CAAC,QAAyC,KAAI;YACvD,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,QAAQ,IAAI,EAAE,CAAC;AACtC,YAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzC,YAAA,MAAM,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC;AAC1B,YAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,YAAY,EAAE;AAC1D,gBAAA,MAAM,EAAE,YAAY;AAClB,sBAAE,MAAM,KAAK,mBAAmB,CAAC,eAAe;0BAC5C,UAAU,CAAC,sCAAsC;0BACjD,UAAU,CAAC,uBAAuB;sBACpC,UAAU,CAAC,uBAAuB;AACvC,aAAA,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,kBAAkB,CAAC,KAAmB,EAAA;;AAC5C,QAAA,IAAI,CAAC,YAAY,GAAG,CAAA,EAAA,GAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;AAC1C,QAAA,IAAI,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAC;QACnC,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,KAAI,IAAI,CAAC,YAAY,EAAE;AAC5C,YAAA,MAAM,WAAW,GAAkB;AACjC,gBAAA,aAAa,EAAE,KAAK;gBACpB,cAAc,EAAE,IAAI,CAAC,YAAY;gBACjC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,kBAAkB,EAAE,UAAU,CAAC,oBAAoB;aACpD,CAAC;AACF,YAAA,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAC/D,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE;gBACnD,MAAM,EAAE,UAAU,CAAC,sCAAsC;gBACzD,OAAO,EAAE,UAAU,CAAC,gCAAgC;AACrD,aAAA,CAAC,CAAC;AACJ,SAAA;QACD,MAAM,OAAO,GAAG,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,UAAU,CAAC;AAClC,QAAA,IAAI,MAAc,CAAC;AACnB,QAAA,QAAQ,OAAO;AACb,YAAA,KAAK,kBAAkB;AACrB,gBAAA,MAAM,GAAGC,gBAAc,CAAC,aAAa,CAAC;gBACtC,MAAM;AACR,YAAA;gBACE,MAAM,GAAG,OAAO,CAAC;AACpB,SAAA;AAED,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;AAEO,IAAA,qBAAqB,CAAC,IAA+B,EAAA;;AAC3D,QAAA,MAAM,aAAa,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,MAAK,WAAW,CAAC,YAAY,CAAC;AACnF,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;QACvD,OAAO,cAAc,IAAI,CAAC,aAAa;AACrC,cAAE,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,IAAI,CAAA,EAAA,EAAE,EAAE,EAAE,cAAc,EAAA,CAAA,EAAI,cAAc,CAAC;cAC7F,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;KACzD;AAEO,IAAA,gBAAgB,CAAC,QAAiB,EAAA;AACxC,QAAA,MAAM,aAAa,GAAG,QAAQ,GAAG,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QACrD,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,IAAI,CAAC,WAAW,CAAA,EAAK,aAAa,CAAA,CAAG,CAAC;AACjF,aAAA,IAAI,CACH,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EACnB,UAAU,CAAC,CAAC,KAAwB,KAAI;;YACtC,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAEzD,YAAA,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AAC9B,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACzC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC;AACxC,gBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,kBAAkB,CAAC,KAAqB,CAAC,CAAC;AAChD,aAAA;AAED,YAAA,OAAO,KAAK,CAAC;AACf,SAAC,CAAC,CACH;AACA,aAAA,SAAS,CAAC,CAAC,QAAoD,KAAI;;YAClE,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,wBAAwB,0CAAE,4BAA4B,CAAC,QAAQ,CAAC,EAAE;AACzE,gBAAA,IAAI,CAAC,wBAAwB,CAAC,QAA0B,CAAC,CAAC;AAC3D,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,mBAAmB,CAAC,QAAqC,CAAC,CAAC;AACjE,aAAA;AACH,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,mBAAmB,CAAC,QAA6E,EAAA;;AACvG,QAAA,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,QAAQ,CAAC;AAC5C,QAAA,MAAM,kBAAkB,GAAG,cAAc,KAAK,cAAc,CAAC,QAAQ,CAAC;QACtE,MAAM,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,kBAAkB,GAAG,SAAS,GAAG,cAAc,IAAI,OAAO,CAAC;QAE5F,IAAI,CAAC,cAAc,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,EAAE,CAAC;AACnC,QAAA,IAAI,CAAC,eAAe,GAAG,cAAc,KAAK,MAAM,CAAC,OAAO,IAAI,cAAc,KAAKA,gBAAc,CAAC,gBAAgB,CAAC;QAE/G,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,kBAAkB,EAAE;AACxC,YAAA,MAAM,aAAa,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,MAAK,WAAW,CAAC,YAAY,CAAC;AACnF,YAAA,MAAM,EAAE,aAAa,EAAE,4BAA4B,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc;kBACxG,UAAU,CAAC,YAAY;AACzB,kBAAE,UAAU,CAAC,cAAc,CAAC;YAE9B,MAAM,MAAM,GAAG,aAAa;AAC1B,kBAAE,iBAAiB;kBACjB,IAAI,CAAC,eAAe;AACtB,sBAAE,4BAA4B;sBAC5B,aAAa,CAAC;YAElB,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;AAEhE,YAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,IAAI,8BAA8B,EAAE,IAAI,CAAC,CAAC;AACnG,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC;AACxF,SAAA;AAED,QAAA,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;AAChC,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;AAEO,IAAA,wBAAwB,CAAC,QAAwB,EAAA;AACvD,QAAA,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAClC,OAAO;AACR,SAAA;AACD,QAAA,MAAM,cAAc,GAAG,QAAQ,CAAC,kBAAkB,CAAC,CAAC;AACpD,QAAA,IAAI,cAAc,EAAE;AAClB,YAAA,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC;AAC/C,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,mBAAmB,EAAE;AACnB,oBAAA,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY;AAC7C,oBAAA,UAAU,EAAE,CAAC;oBACb,WAAW,EAAE,IAAI,CAAC,kBAAkB;oBACpC,SAAS,EAAE,IAAI,CAAC,GAAG;AACpB,iBAAA;gBACD,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;gBACjD,SAAS,EAAE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC;gBACtE,UAAU,EAAE,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC;gBACtE,UAAU,EAAE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC;gBACvD,OAAO,EAAE,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC;AACnD,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;AAEO,IAAA,2BAA2B,CAAC,cAAsB,EAAA;AACxD,QAAA,IAAI,CAAC,uBAAuB;aACzB,UAAU,CAAC,cAAc,CAAC;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACzB,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACnD;IAEO,0BAA0B,CAAC,cAAsB,EAAE,CAA2B,EAAA;AACpF,QAAA,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;KAC5C;IAEO,2BAA2B,CAAC,EAAE,MAAM,EAA4B,EAAA;AACtE,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,UAAU,CAAC,kBAAkB,GAAG,UAAU,CAAC,oBAAoB,CAAC;AAEnH,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;KAClE;IAEO,yBAAyB,CAAC,EAAE,MAAM,EAA4B,EAAA;AACpE,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,UAAU,CAAC,kBAAkB,GAAG,UAAU,CAAC,oBAAoB,CAAC;AACnH,QAAA,MAAM,YAAY,GAAG,MAAM,KAAK,MAAM,GAAG,UAAU,CAAC,gCAAgC,GAAG,EAAE,MAAM,EAAE,CAAC;AAElG,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;QAC/D,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,YAAY,CAAA,CAAG,CAAC;KAC3E;AAEO,IAAA,qBAAqB,CAAC,cAAsB,EAAA;AAClD,QAAA,IAAI,CAAC,uBAAuB;aACzB,UAAU,CAAC,cAAc,CAAC;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,aAAA,SAAS,CAAC,CAAC,QAAQ,KAAI;AACtB,YAAA,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,EAAE;AAClC,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACzC,IAAI,CAAC,WAAW,GAAG;AACjB,oBAAA,OAAO,EAAE,EAAE;oBACX,YAAY,EAAE,QAAQ,CAAC,aAAa;iBACrC,CAAC;AACH,aAAA;AAAM,iBAAA;AACL,gBAAA,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc;sBAC5C,UAAU,CAAC,kBAAkB;AAC/B,sBAAE,UAAU,CAAC,oBAAoB,CAAC;gBAEpC,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;AACjE,gBAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnC,aAAA;AAED,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,wBAAwB,CAAC,IAAqB,EAAA;QACpD,OAAO,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,CAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAG,kBAAkB,CAAC,KAAI,EAAE,CAAC,CAAC,IAAI,CACjG,GAAG,CAAC,CAAC,GAAG,KAAI;AACV,YAAA,IACE,CAAA,GAAG,KAAH,IAAA,IAAA,GAAG,KAAH,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAG,CAAE,cAAc,MAAK,6BAA6B,CAAC,kBAAkB,CAAC,QAAQ;AACjF,gBAAA,GAAG,CAAC,UAAU,KAAK,MAAM,EACzB;gBACA,GAAG,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACE,GAAG,CACN,EAAA,EAAA,cAAc,EAAE,GAAG,CAAC,UAA8D,EAAA,CACnF,CAAC;AACH,aAAA;AAED,YAAA,OAAO,GAAG,CAAC;AACb,SAAC,CAAC,EACF,KAAK,CAAC,gBAAgB,CAAC,CACxB,CAAC;KACH;AAEO,IAAA,kBAAkB,CAAC,MAAc,EAAA;AACvC,QAAA,OAAO,CAAC,CAAC,MAAM,IAAI,MAAM,KAAKA,gBAAc,CAAC,oBAAoB,IAAI,MAAM,KAAKA,gBAAc,CAAC,OAAO,CAAC;KACxG;AAEO,IAAA,WAAW,CAAC,QAAiB,EAAE,OAAO,GAAG,IAAI,EAAA;AACnD,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACzB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAA;KACF;AAEO,IAAA,cAAc,CAAC,QAAa,EAAA;;AAClC,QAAA,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC1F,QAAA,OAAO,CAAC,EAAC,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAE,YAAY,CAAA,IAAI,CAAC,EAAC,CAAA,EAAA,GAAA,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,CAAA,IAAI,gBAAgB,CAAC;KACxF;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KAC/B;IAED,kBAAkB,GAAA;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;KAChC;IAED,eAAe,GAAA;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAEO,wBAAwB,GAAA;AAC9B,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAC;AACjE,SAAA,CAAC,CAAC;KACJ;IAED,iBAAiB,GAAA;QACf,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KACzD;IAED,kBAAkB,GAAA;QAChB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;KAClC;IAED,qBAAqB,CAAC,YAAY,GAAG,EAAE,EAAA;QACrC,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;AAC3C,YAAA,MAAM,IAAI,GAAG,YAAY,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;AACrF,YAAA,MAAM,cAAc,GAAgC;gBAClD,cAAc;gBACd,IAAI;aACL,CAAC;AAEF,YAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE;gBACpC,OAAO;AACR,aAAA;AAED,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAEhC,YAAA,IAAI,CAAC,uBAAuB;iBACzB,mBAAmB,CAAC,cAAc,CAAC;AACnC,iBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACzB,SAAS,CACR,MAAK;AACH,gBAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,gBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,gBAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,IAAI,EAAE;AAClD,oBAAA,MAAM,EAAE,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC;oBAC5C,aAAa,EAAE,EAAE,IAAI,EAAE;AACxB,iBAAA,CAAC,CAAC;AACH,gBAAA,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;gBACjC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACvD,gBAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,EACV,IAAI,CAAC,aAAa,CAAC,gBAAgB,IAAI,8BAA8B,GAC9E,IAAI,CACL,CAAC;aACH,EACD,MAAK;AACH,gBAAA,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE;oBACnD,MAAM,EAAE,UAAU,CAAC,kBAAkB;AACtC,iBAAA,CAAC,CAAC;AACH,gBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,aAAC,CACF,CAAC;AACL,SAAA;KACF;IAED,aAAa,CAAC,QAAQ,GAAG,KAAK,EAAA;AAC5B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACvG,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,QAAA,IAAI,QAAQ,EAAE;YACZ,kBAAkB,CACK,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAClD,YAAY,CAAC,QAAQ,EACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EACrC,IAAI,CAAC,WAAW,CACjB,CAAC;AACH,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACzB,SAAA;KACF;AAED,IAAA,eAAe,CAAC,OAAuB,EAAA;AACrC,QAAA,OAAO,0BAA0B,CAAC,OAAO,CAAC,CAAC;KAC5C;IAED,iBAAiB,GAAA;QACf,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,IAAI,IAAI,CAAC,UAAU,CAAC;KAChE;IAED,wBAAwB,GAAA;QACtB,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,2BAA2B,IAAI,IAAI,CAAC,qBAAqB,CAAC;KACvF;IAED,mBAAmB,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,sBAAsB,KAAK,KAAK,CAAC;KAC5D;IAED,cAAc,GAAA;;AACZ,QAAA,IAAI,MAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAE;AACnC,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,EAAE,CAAC;AACjC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,YAAY,EAAE,CAAC;AACrB,SAAA;KACF;IAED,YAAY,GAAA;AACV,QAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,WAAW,CAAC,cAAc,CAAC;AAC5D,QAAA,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxD,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC/B;IAED,wBAAwB,GAAA;AACtB,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;KAChD;IAED,iBAAiB,GAAA;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAED,iBAAiB,GAAA;QACf,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAED,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,oBAAoB,GAAA;;QAClB,OAAO,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,0CAAE,WAAW,MAAK,WAAW,CAAC,YAAY;cAC/D,qBAAqB,CAAC,cAAc;AACtC,cAAE,IAAI,CAAC,iBAAiB,EAAE;kBACxB,qBAAqB,CAAC,OAAO;AAC/B,kBAAE,qBAAqB,CAAC,OAAO,CAAC;KACnC;IAED,iBAAiB,GAAA;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;AAED,IAAA,qBAAqB,CAAC,OAAe,EAAA;;QACnC,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,qBAAqB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,iBAAiB,CAAC;AAC3E,QAAA,OAAO,CAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,MAAM,IAAG,CAAA,EAAA,GAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAsB,KAAK,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,0CAAE,WAAW,GAAG,EAAE,CAAC;KAC9G;IAED,WAAW,GAAA;;AACT,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,EAAE,CAAC;KACjC;IAED,0BAA0B,GAAA;AACxB,QAAA,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;KACvC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;AAChB,QAAA,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;KACrB;;gJArhBU,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAArB,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAqEhC,MAAM,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAsB,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,+BAAA,EAAA,EAAA,EAAA,KAAA,EAAAd,IAAA,CAAA,+BAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EASN,sCAAsC,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA9ErC,mBAAA,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,+BAA+B,2KC/D5C,kpzBAmoBA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAe,sBAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,eAAA,EAAA,SAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAArB,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAsB,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,mCAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oCAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,cAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,6BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,aAAA,EAAA,cAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,mCAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,+BAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,mCAAA,EAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAZ,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,WAAA,EAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAa,KAAA,CAAA,cAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iCAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,qBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAX,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,GAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,KAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,0BAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDpkBa,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAJ3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,+BAA+B;AAC7C,iBAAA,CAAA;;0BAsEI,MAAM;2BAAC,MAAM,CAAA;;0BAGb,QAAQ;;0BAGR,QAAQ;;0BAER,QAAQ;;0BACR,MAAM;2BAAC,sCAAsC,CAAA;4CAhEnB,cAAc,EAAA,CAAA;sBAA1C,SAAS;uBAAC,gBAAgB,CAAA;;;AE1D7B,MAAM,UAAU,GAAG;IACjB,+BAA+B;IAC/B,0BAA0B;IAC1B,4BAA4B;IAC5B,yBAAyB;IACzB,wBAAwB;IACxB,wBAAwB;IACxB,wBAAwB;IACxB,sBAAsB;CACvB,CAAC;AAEF,MAAM,qBAAqB,GAAG;IAC5B,WAAW;IACX,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,WAAW;CACZ,CAAC;MAOW,mBAAmB,CAAA;;oIAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,iBAzB9B,+BAA+B;QAC/B,0BAA0B;QAC1B,4BAA4B;QAC5B,yBAAyB;QACzB,wBAAwB;QACxB,wBAAwB;QACxB,wBAAwB;AACxB,QAAA,sBAAsB,CAcZ,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,qBAAqB,EAV7C,WAAW;QACX,kBAAkB;QAClB,mBAAmB;QACnB,kBAAkB;QAClB,WAAW;QACX,YAAY;AACZ,QAAA,WAAW,aAjBX,+BAA+B;QAC/B,0BAA0B;QAC1B,4BAA4B;QAC5B,yBAAyB;QACzB,wBAAwB;QACxB,wBAAwB;QACxB,wBAAwB;AACxB,QAAA,sBAAsB,EAItB,WAAW;QACX,kBAAkB;QAClB,mBAAmB;QACnB,kBAAkB;QAClB,WAAW;QACX,YAAY;QACZ,WAAW,CAAA,EAAA,CAAA,CAAA;qIAQA,mBAAmB,EAAA,OAAA,EAAA,CAJrB,CAAC,YAAY,EAAE,qBAAqB,EAAE,GAAG,qBAAqB,CAAC,EAVxE,WAAW;QACX,kBAAkB;QAClB,mBAAmB;QACnB,kBAAkB;QAClB,WAAW;QACX,YAAY;QACZ,WAAW,CAAA,EAAA,CAAA,CAAA;4FAQA,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,qBAAqB,EAAE,GAAG,qBAAqB,CAAC;AACxE,oBAAA,OAAO,EAAE,CAAC,GAAG,UAAU,EAAE,GAAG,qBAAqB,CAAC;AAClD,oBAAA,YAAY,EAAE,CAAC,GAAG,UAAU,CAAC;AAC9B,iBAAA,CAAA;;;MC7BY,uBAAuB,CAAA;AALpC,IAAA,WAAA,GAAA;AAME;;AAEG;QACM,IAAI,CAAA,IAAA,GAAwC,EAAE,CAAC;AACxD;;AAEG;QACM,IAAqB,CAAA,qBAAA,GAAG,KAAK,CAAC;AAEvC;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAc,cAAc,CAAC;AAU9C;;AAEG;QACM,IAAW,CAAA,WAAA,GAAG,SAAS,CAAC;AACjC;;AAEG;QACM,IAAU,CAAA,UAAA,GAAgB,IAAI,CAAC;AAExC;;AAEG;AACO,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,YAAY,EAAO,CAAC;AAMtD,KAAA;IAJC,OAAO,CAAC,KAAY,EAAE,KAAU,EAAA;QAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnC;;wIAxCU,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,mBAAA,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,yTCfpC,+qEA8DA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAvB,IAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,mCAAA,EAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FD/Ca,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,WAAW,EAAE,kCAAkC;oBAC/C,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA,CAAA;8BAKU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAIG,qBAAqB,EAAA,CAAA;sBAA7B,KAAK;gBAKG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAIG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAKG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAIG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAIG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAKI,gBAAgB,EAAA,CAAA;sBAAzB,MAAM;;;ME3BI,uBAAuB,CAAA;AA2FlC,IAAA,WAAA,CACuC,UAA4B,EAAA;QAA5B,IAAU,CAAA,UAAA,GAAV,UAAU,CAAkB;AA3FnE;;AAEG;QACM,IAAe,CAAA,eAAA,GAAG,EAAE,CAAC;AAE9B;;AAEG;QACM,IAAc,CAAA,cAAA,GAAG,EAAE,CAAC;AAE7B;;AAEG;QACM,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;AAE1B;;AAEG;QACM,IAAO,CAAA,OAAA,GAAG,EAAE,CAAC;AAEtB;;AAEG;QACM,IAAc,CAAA,cAAA,GAAG,IAAI,CAAC;AAE/B;;AAEG;QACM,IAAe,CAAA,eAAA,GAAwC,EAAE,CAAC;AAEnE;;AAEG;QACM,IAAqB,CAAA,qBAAA,GAAG,KAAK,CAAC;AAEvC;;AAEG;QACM,IAAQ,CAAA,QAAA,GAAc,cAAc,CAAC;AAY9C;;AAEG;QACM,IAAW,CAAA,WAAA,GAAG,SAAS,CAAC;AAEjC;;AAEG;QACM,IAAU,CAAA,UAAA,GAAgB,IAAI,CAAC;AAExC;;AAEG;AACO,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,YAAY,EAAO,CAAC;KA6BjD;AAzBI,IAAA,cAAc,CACpB,IAAuC,EAAA;AAEvC,QAAA,MAAM,qBAAqB,GAAG,IAAI,CAAC,OAAO;cACtC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC;AACnD,cAAE,EAAE,CAAC,IAAI,CAAC,CAAC;QACb,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,CACrC,GAAG,CAAC,CAAC,cAAc,MAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,cAAc,IAAK,IAAI,CAAA,CAAG,CAAC,CACvD,CAAC;KACH;IAEO,SAAS,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CACpC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACzC,MAAM,CAAC,CAAC,GAAG,EAAE,EAA2B,KAAI;AAA/B,YAAA,IAAA,EAAE,cAAc,EAAW,GAAA,EAAA,EAAN,IAAI,GAAA,MAAA,CAAA,EAAA,EAAzB,kBAA2B,CAAF,CAAA;AACpC,YAAA,IAAI,cAAc,EAAE;AAClB,gBAAA,GAAG,CAAC,IAAI,CAAM,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,EAAG,CAAC;AACvB,aAAA;AACD,YAAA,OAAO,GAAG,CAAC;AACb,SAAC,EAAE,EAAyC,CAAC,CAC9C,CAAC;KACH;IAMD,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;KACnC;AAED,IAAA,OAAO,CAAC,KAAU,EAAA;AAChB,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnC;;AArGU,mBAAA,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,kBA4FxB,UAAU,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA5FT,mBAAA,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,ueCvBpC,i2BAyBA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA8B,uBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,uBAAA,EAAA,UAAA,EAAA,aAAA,EAAA,YAAA,EAAA,aAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAvB,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,GAAA,CAAA,SAAA,EAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;4FDFa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,WAAW,EAAE,kCAAkC;oBAC/C,eAAe,EAAE,uBAAuB,CAAC,MAAM;AAChD,iBAAA,CAAA;;0BA6FI,MAAM;2BAAC,UAAU,CAAA;4CAxFX,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBAKG,cAAc,EAAA,CAAA;sBAAtB,KAAK;gBAKG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAKG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAKG,cAAc,EAAA,CAAA;sBAAtB,KAAK;gBAKG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBAKG,qBAAqB,EAAA,CAAA;sBAA7B,KAAK;gBAKG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAKG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAKG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAKG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAKG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAKI,gBAAgB,EAAA,CAAA;sBAAzB,MAAM;;;MEjEI,oBAAoB,CAAA;;qIAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,mBAAA,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAXhB,YAAA,EAAA,CAAA,uBAAuB,EAAE,uBAAuB,aAG7D,YAAY;QACZ,YAAY;QACZ,kBAAkB;QAClB,UAAU;QACV,YAAY;AACZ,QAAA,YAAY,aAPJ,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAUtB,mBAAA,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EATtB,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,YAAY;YACZ,kBAAkB;YAClB,UAAU;YACV,YAAY;YACZ,YAAY;AACb,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEU,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAZhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,uBAAuB,EAAE,uBAAuB,CAAC;oBAChE,OAAO,EAAE,CAAC,uBAAuB,CAAC;AAClC,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,kBAAkB;wBAClB,UAAU;wBACV,YAAY;wBACZ,YAAY;AACb,qBAAA;AACF,iBAAA,CAAA;;;ACrBD;;AAEG;;;;"}