import { OnInit } from '@angular/core';
import { AssetsService } from '@backbase/foundation-ang/core';
import { TransactionSigningService } from '@backbase/identity-auth/transaction-signing';
import { BaseObject, PaymentDetails, PaymentError, PaymentTypeConfig } from '@backbase/payment-orders-ang';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class AdaptedReviewComponent implements OnInit {
    private readonly assetsService;
    private readonly identityService;
    /**
     * The payment form values
     */
    payment?: PaymentDetails;
    /**
     * The status of payment progress
     */
    status?: string;
    /**
     * The payment config item
     */
    paymentConfig?: PaymentTypeConfig;
    /**
     * Methods to handle events
     */
    methods?: BaseObject<any>;
    /**
     * Limit errors from payment-order POST call
     */
    breachError?: PaymentError;
    /**
     * Asset resolver for quick-transfer widget
     */
    private readonly resolveAsset;
    /**
     * Stream of resolved success image path
     */
    successImg: Observable<string>;
    /**
     * Stream of resolved success image path
     */
    successImgNoMotion: Observable<string>;
    /**
     * unique time to reload animated svg image everytime
     */
    readonly timestamp: number;
    isLoading$?: Observable<boolean>;
    constructor(assetsService: AssetsService, identityService: TransactionSigningService);
    ngOnInit(): void;
    get errorText(): string;
    get errorTitle(): string;
    get isScheduledTransfer(): boolean;
    private get isUserDeclined();
    static ɵfac: i0.ɵɵFactoryDeclaration<AdaptedReviewComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AdaptedReviewComponent, "bb-adapted-review-container", never, { "payment": "payment"; "status": "status"; "paymentConfig": "paymentConfig"; "methods": "methods"; "breachError": "breachError"; }, {}, never, never>;
}
