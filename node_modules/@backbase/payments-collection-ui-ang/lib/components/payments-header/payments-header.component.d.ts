import { EventEmitter, OnInit } from '@angular/core';
import { PaymentsHeaderNavigationItem } from './models/payments-header.models';
import { Placement } from '@ng-bootstrap/ng-bootstrap';
import { PropertyResolver } from '@backbase/foundation-ang/web-sdk';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class PaymentsHeaderComponent implements OnInit {
    private readonly conditions;
    /**
     * Custom class name
     */
    customClassName: string;
    /**
     * Heading Classes
     */
    headingClasses: string;
    /**
     * Heading type (h1-h6)
     */
    headingType: string;
    /**
     * Heading
     */
    heading: string;
    /**
     * Show right side button / dropdown
     */
    showNavigation: boolean;
    /**
     * Array of representation of the link menu object
     */
    navigationItems: PaymentsHeaderNavigationItem<any>[];
    /**
     * Flag to denote if the first link from buttons array should be used as default target
     */
    useFirstLinkAsDefault: boolean;
    /**
     * Flag to denote if the first link from buttons array should be used as default target
     */
    position: Placement;
    /**
     * Button label. Will be used if useFirstLinkAsDefault = false;
     */
    buttonLabel: string;
    /**
     * Button icon. Will be used if useFirstLinkAsDefault = false;
     */
    buttonIcon: string;
    /**
     * Color of the button. Default `primary`
     */
    buttonColor: string;
    /**
     * Size of the button. Allowed values are `sm` or `md`. Default `md`
     */
    buttonSize: 'sm' | 'md';
    /**
     * Event on item click
     */
    navigationAction: EventEmitter<any>;
    menuItems: Observable<PaymentsHeaderNavigationItem<any>[]>;
    private hasPermissions;
    private menuSetup;
    constructor(conditions: PropertyResolver);
    ngOnInit(): void;
    onClick(value: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentsHeaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PaymentsHeaderComponent, "bb-payments-header", never, { "customClassName": "customClassName"; "headingClasses": "headingClasses"; "headingType": "headingType"; "heading": "heading"; "showNavigation": "showNavigation"; "navigationItems": "navigationItems"; "useFirstLinkAsDefault": "useFirstLinkAsDefault"; "position": "position"; "buttonLabel": "buttonLabel"; "buttonIcon": "buttonIcon"; "buttonColor": "buttonColor"; "buttonSize": "buttonSize"; }, { "navigationAction": "navigationAction"; }, never, never>;
}
