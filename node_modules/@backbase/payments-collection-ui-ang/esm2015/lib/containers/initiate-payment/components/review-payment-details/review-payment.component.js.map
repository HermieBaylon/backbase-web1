{"version":3,"file":"review-payment.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/review-payment-details/review-payment.component.ts","../../../../../../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/components/review-payment-details/review-payment.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, Inject, OnDestroy, OnInit, Optional, TemplateRef, ViewChild } from '@angular/core';\nimport {\n  ApprovalStatus,\n  BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN,\n  BreachReportError,\n  contactItemToService,\n  defaultPaymentSuccessEventName,\n  ForexDetails,\n  getForexDetailsFromPayment,\n  getLabelFromPaymentConfig,\n  InitiatePaymentHeaderStates,\n  InitiatePaymentOptions,\n  isObjectTruthy,\n  ModalState,\n  NavigationService,\n  noWhitespaceValidator,\n  PaymentDetails,\n  PaymentError,\n  PaymentErrors,\n  PaymentHooks,\n  PaymentHooksOptions,\n  PaymentMode,\n  PaymentOrderHttpService,\n  PaymentOrderResponseItem,\n  PaymentState,\n  PaymentSubmitStatuses,\n  PaymentTypeConfig,\n  PayordPaymentError,\n  ProgressStatus,\n  ReviewScreens,\n  ReviewTemplateContext,\n  RoutableModalService,\n  StateService,\n  Status,\n  toPostRequest,\n  triggerPaymentHook,\n} from '@backbase/payment-orders-ang';\n\nimport { catchError, filter, map, pluck, takeUntil, tap } from 'rxjs/operators';\nimport { BehaviorSubject, EMPTY, Observable, of, Subject } from 'rxjs';\nimport {\n  PaymentOrderGetResponse,\n  PaymentOrderProgressStatusGet,\n  PaymentOrdersPostResponse,\n  PaymentOrdersValidatePost,\n} from '@backbase/data-ang/payment-order';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Pubsub, PUBSUB } from '@backbase/foundation-ang/web-sdk';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TransactionCallbackParam, TransactionSigningHelperService } from '@backbase/identity-auth/transaction-signing';\nimport { ActiveContactStatus, ContactsPostResponseBody } from '@backbase/data-ang/contact-manager';\nimport { PaymentTemplatesPostRequest } from '@backbase/data-ang/payment-template';\nimport { PurposeOfPayment } from '@backbase/data-ang/payment-order-options';\n\nimport { CreatePaymentService } from '../../services/create-payment.service';\nimport { CreatePaymentConfigSetupService } from '../../services/create-payment-config-setup.service';\nimport { commonI18n, reviewI18n } from '../../constants/initiate-payment.i18n';\nimport { CapabilityData, P2PLimitReasonCodes } from '../../models/create-payment.model';\n\n@Component({\n  selector: 'bb-review-payment',\n  templateUrl: 'review-payment.component.html',\n})\nexport class ReviewPaymentContainerComponent implements OnInit, OnDestroy {\n  private showConfirmation = false;\n  private paymentItem$!: Observable<PaymentDetails>;\n  private gc$ = new Subject();\n  private saveContactResponse$ = new BehaviorSubject<ContactsPostResponseBody | null>(null);\n  private paymentOrderId = '';\n  private paymentMessage?: string;\n  private approvalPending = false;\n  private enablePaymentTemplate = true;\n  private saveTemplate = false;\n  private canApprove = false;\n  private paymentForm?: FormGroup;\n  private paymentResponse?: Partial<PaymentOrderResponseItem>;\n\n  @ViewChild('alertContainer') alertContainer!: ElementRef;\n  header: string | undefined;\n  genericError?: string;\n  showBreachDetails = false;\n  paymentMode = PaymentMode;\n  paymentItem!: PaymentDetails;\n  isErrorTitleDisplayed = true;\n  reviewScreens = ReviewScreens;\n  breachError?: BreachReportError;\n  paymentTemplateForm!: FormGroup;\n  widgetOptions: InitiatePaymentOptions = {};\n  errors: { key: string; message: string }[] = [];\n  submitting$ = new BehaviorSubject<boolean>(false);\n  savingTemplate$ = new BehaviorSubject<boolean>(false);\n  reviewTemplate: TemplateRef<ReviewTemplateContext> | undefined;\n  paymentStatus$ = new BehaviorSubject<string | undefined>(undefined);\n  selectedPaymentConfig$: Observable<PaymentTypeConfig | undefined> = this.createPaymentService.selectedPaymentConfig$;\n  paymentTemplateModalState: BehaviorSubject<ModalState | undefined> = new BehaviorSubject<ModalState | undefined>(\n    undefined,\n  );\n\n  methods = {\n    edit: this.onEdit.bind(this),\n    submit: this.submitPayment.bind(this),\n    reset: this.resetPayment.bind(this),\n    discard: this.discardPayment.bind(this),\n    toggleDiscardDialog: this.toggleConfirmationDialog.bind(this),\n    showDiscardDialog: this.showDiscardDialog.bind(this),\n    isApprovalEnabled: this.isApprovalEnabled.bind(this),\n    isPaymentTemplateEnabled: this.isPaymentTemplateEnabled.bind(this),\n    isNewPaymentEnabled: this.isNewPaymentEnabled.bind(this),\n    isSavingTemplate$: this.isSavingTemplate$.bind(this),\n    getPaymentMessage: this.getPaymentMessage.bind(this),\n    getPurposeDescription: this.getPurposeDescription.bind(this),\n    isSubmitting$: this.isSubmitting$.bind(this),\n    getLabelText: getLabelFromPaymentConfig,\n    getForexDetails: this.getForexDetails.bind(this),\n    showBreachModal: this.showBreachModal.bind(this),\n    isTemplateSaved: this.isTemplateSaved.bind(this),\n    openTemplateModal: this.openTemplateModal.bind(this),\n    doneEditing: this.doneEditing.bind(this),\n    navigateToAfterSuccessPage: this.navigateToAfterSuccessPage.bind(this),\n    getPaymentResponse: this.getPaymentResponse.bind(this),\n    getSaveContactResponse$: this.saveContactResponse$,\n    getPaymentStatusType: this.getPaymentStatusType.bind(this),\n  };\n\n  createTemplatePermission$ = this.paymentOrderHttpService.createPermission$.pipe(\n    map(() => true),\n    catchError((error) => of(false)),\n  );\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly stateService: StateService,\n    @Inject(PUBSUB) private readonly eventBus: Pubsub,\n    private readonly navigationService: NavigationService,\n    private readonly createPaymentService: CreatePaymentService,\n    @Optional() private readonly modalService: RoutableModalService,\n    private readonly paymentOrderHttpService: PaymentOrderHttpService,\n    private readonly createPaymentSetup: CreatePaymentConfigSetupService,\n    @Optional()\n    private readonly transactionSigningHelper: TransactionSigningHelperService,\n    @Optional()\n    @Inject(BB_PAYORD_PAYMENT_ERROR_MESSAGES_TOKEN)\n    readonly paymentErrors: PayordPaymentError,\n  ) {}\n\n  onEdit(): void {\n    this.stateService.setPaymentState(PaymentState.EDIT);\n    this.navigationService.form();\n  }\n\n  ngOnInit(): void {\n    this.stateService.setPaymentState(PaymentState.REVIEW);\n    this.canApprove = this.stateService.canApprove;\n\n    this.createPaymentSetup.reviewTemplate$\n      .pipe(\n        takeUntil(this.gc$),\n        filter((template) => !!template),\n      )\n      .subscribe((template) => (this.reviewTemplate = template));\n\n    this.createPaymentSetup.options$.pipe(takeUntil(this.gc$)).subscribe((options) => {\n      this.isErrorTitleDisplayed = Boolean(options.isErrorTitleDisplayed);\n      this.widgetOptions = options;\n\n      this.header = this.createPaymentSetup.getHeader(InitiatePaymentHeaderStates.REVIEW);\n    });\n\n    this.paymentItem$ = this.stateService.form$.pipe(\n      takeUntil(this.gc$),\n      tap((form?: FormGroup) => (this.paymentForm = form)),\n      map((form) => form?.getRawValue() || {}),\n    );\n\n    this.paymentItem$.pipe(takeUntil(this.gc$)).subscribe((data?: PaymentDetails) => {\n      if (data && isObjectTruthy(data)) {\n        this.paymentItem = data;\n      } else {\n        this.stateService.setPaymentState(PaymentState.INITIAL);\n        this.navigationService.form();\n      }\n    });\n\n    this.paymentTemplateForm = this.buildPaymentTemplateForm();\n  }\n\n  isSavingTemplate$(): BehaviorSubject<boolean> {\n    return this.savingTemplate$;\n  }\n\n  private onSubmit(approved = false): void {\n    this.submitting$.next(true);\n\n    if (this.paymentItem.counterparty.saveNewContact) {\n      this.saveNewContact();\n    }\n\n    this.postPaymentOrder(approved);\n  }\n\n  private saveNewContact(): void {\n    this.paymentOrderHttpService\n      .saveNewContact({\n        ...contactItemToService(this.paymentItem.counterparty),\n        accessContextScope: this.widgetOptions.accessContextScope,\n      })\n      .pipe(takeUntil(this.gc$))\n      .subscribe((response: ContactsPostResponseBody | null) => {\n        const { id, status } = response || {};\n        this.saveContactResponse$.next(response);\n        const contactSaved = !!id;\n        this.paymentOrderHttpService.showNotification(contactSaved, {\n          header: contactSaved\n            ? status === ActiveContactStatus.PENDINGAPPROVAL\n              ? reviewI18n.newContactSubmitSuccessPendingApproval\n              : reviewI18n.newContactSubmitSuccess\n            : reviewI18n.newContactSubmitFailure,\n        });\n      });\n  }\n\n  private handlePaymentError(error: PaymentError) {\n    this.genericError = error?.error?.message;\n    this.errors = error?.error?.errors;\n    if (this.errors?.length || this.genericError) {\n      const errorObject: PaymentErrors = {\n        errorResponse: error,\n        genericMessage: this.genericError,\n        errors: this.errors,\n        paymentErrors: this.paymentErrors,\n        notificationHeader: reviewI18n.submitPaymentFailure,\n      };\n      this.paymentOrderHttpService.manageErrorResponse(errorObject);\n    } else {\n      this.paymentOrderHttpService.showNotification(false, {\n        header: reviewI18n.submitPaymentFailureUnknownErrorHeader,\n        message: reviewI18n.submitPaymentFailureUnknownError,\n      });\n    }\n    const message = error?.statusText;\n    let status: string;\n    switch (message) {\n      case 'rejected_by_user':\n        status = ProgressStatus.USER_DECLINED;\n        break;\n      default:\n        status = 'ERROR';\n    }\n\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n  }\n\n  private putOrPostPaymentOrder(post: PaymentOrdersValidatePost): Observable<PaymentOrdersPostResponse> {\n    const isCopyPayment = this.widgetOptions?.paymentMode === PaymentMode.COPY_PAYMENT;\n    const paymentOrderId = this.paymentItem.paymentOrderId;\n    return paymentOrderId && !isCopyPayment\n      ? this.paymentOrderHttpService.putPaymentOrder({ ...post, id: paymentOrderId }, paymentOrderId)\n      : this.paymentOrderHttpService.postPaymentOrder(post);\n  }\n\n  private postPaymentOrder(approved: boolean): void {\n    const shouldApprove = approved ? { approved } : null;\n    this.putOrPostPaymentOrder(toPostRequest({ ...this.paymentItem, ...shouldApprove }))\n      .pipe(\n        takeUntil(this.gc$),\n        catchError((error: HttpErrorResponse) => {\n          this.alertContainer?.nativeElement.scrollIntoView(false);\n\n          if (this.hasLimitBreach(error)) {\n            this.paymentStatus$.next('LIMIT_BREACH');\n            this.breachError = error.error || error;\n            this.submitting$.next(false);\n          } else {\n            this.handlePaymentError(error as PaymentError);\n          }\n\n          return EMPTY;\n        }),\n      )\n      .subscribe((response: PaymentOrdersPostResponse | CapabilityData) => {\n        if (this.transactionSigningHelper?.isTransactionSigningResponse(response)) {\n          this.handleTransactionSigning(response as CapabilityData);\n        } else {\n          this.handlePaymentSubmit(response as PaymentOrdersPostResponse);\n        }\n      });\n  }\n\n  private handlePaymentSubmit(response: PaymentOrderResponseItem | Omit<PaymentOrderGetResponse, 'version'>): void {\n    const { status: _paymentStatus } = response;\n    const isApprovalRejected = _paymentStatus === ApprovalStatus.REJECTED;\n    const status = !!response.id && !isApprovalRejected ? 'SUCCESS' : _paymentStatus || 'ERROR';\n\n    this.paymentOrderId = response?.id;\n    this.approvalPending = _paymentStatus === Status.ENTERED || _paymentStatus === ProgressStatus.PENDING_APPROVAL;\n\n    if (!!response.id && !isApprovalRejected) {\n      const isEditPayment = this.widgetOptions?.paymentMode === PaymentMode.EDIT_PAYMENT;\n      const { submitSuccess, submitSuccessPendingApproval, editSubmitSuccess } = this.widgetOptions.isDebitPayment\n        ? reviewI18n.debitPayment\n        : reviewI18n.defaultPayment;\n\n      const header = isEditPayment\n        ? editSubmitSuccess\n        : this.approvalPending\n        ? submitSuccessPendingApproval\n        : submitSuccess;\n\n      this.paymentOrderHttpService.showNotification(true, { header });\n\n      this.eventBus.publish(this.widgetOptions.successEventName || defaultPaymentSuccessEventName, true);\n      this.header = this.createPaymentSetup.getHeader(InitiatePaymentHeaderStates.SUBMITTED);\n    }\n\n    this.paymentResponse = response;\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n  }\n\n  private handleTransactionSigning(response: CapabilityData): void {\n    if (!this.transactionSigningHelper) {\n      return;\n    }\n    const paymentOrderId = response['payment-order-id'];\n    if (paymentOrderId) {\n      this.transactionSigningHelper.getTransactionInfo({\n        data: response,\n        asyncPollingOptions: {\n          pollInterval: this.widgetOptions.pollInterval,\n          maxRetries: 3,\n          pollUntilFn: this.isPaymentConfirmed,\n          complete$: this.gc$,\n        },\n        fetchFn: this.getPaymentProgressStatus.bind(this),\n        onSuccess: this.onTransactionSigningSuccess.bind(this, paymentOrderId),\n        onRejected: this.onTransactionSigningReject.bind(this, paymentOrderId),\n        onDeclined: this.onTransactionSigningDecline.bind(this),\n        onError: this.onTransactionSigningError.bind(this),\n      });\n    }\n  }\n\n  private onTransactionSigningSuccess(paymentOrderId: string): void {\n    this.paymentOrderHttpService\n      .getPayment(paymentOrderId)\n      .pipe(takeUntil(this.gc$))\n      .subscribe(this.handlePaymentSubmit.bind(this));\n  }\n\n  private onTransactionSigningReject(paymentOrderId: string, _: TransactionCallbackParam): void {\n    this.handleRejectedPayment(paymentOrderId);\n  }\n\n  private onTransactionSigningDecline({ status }: TransactionCallbackParam): void {\n    const header = this.widgetOptions.isDebitPayment ? reviewI18n.submitDebitFailure : reviewI18n.submitPaymentFailure;\n\n    this.paymentStatus$.next(status);\n    this.submitting$.next(false);\n    this.paymentOrderHttpService.showNotification(false, { header });\n  }\n\n  private onTransactionSigningError({ status }: TransactionCallbackParam): void {\n    const header = this.widgetOptions.isDebitPayment ? reviewI18n.submitDebitFailure : reviewI18n.submitPaymentFailure;\n    const errorMessage = status === 'COED' ? reviewI18n.submitPaymentApprovalFailureCOED : { header };\n\n    this.submitting$.next(false);\n    this.paymentStatus$.next(status === 'COED' ? 'COED' : 'ERROR');\n    this.paymentOrderHttpService.showNotification(false, { ...errorMessage });\n  }\n\n  private handleRejectedPayment(paymentOrderId: string): void {\n    this.paymentOrderHttpService\n      .getPayment(paymentOrderId)\n      .pipe(takeUntil(this.gc$))\n      .subscribe((response) => {\n        if (response.reasonCode === 'LTBR') {\n          this.paymentStatus$.next('LIMIT_BREACH');\n          this.breachError = {\n            message: '',\n            breachReport: response.breachReports,\n          };\n        } else {\n          const header = this.widgetOptions.isDebitPayment\n            ? reviewI18n.submitDebitFailure\n            : reviewI18n.submitPaymentFailure;\n\n          this.paymentOrderHttpService.showNotification(false, { header });\n          this.paymentStatus$.next('ERROR');\n        }\n\n        this.submitting$.next(false);\n      });\n  }\n\n  private getPaymentProgressStatus(data?: CapabilityData): Observable<string> {\n    return this.paymentOrderHttpService.getPaymentProgressStatus(data?.['payment-order-id'] || '').pipe(\n      map((res) => {\n        if (\n          res?.progressStatus === PaymentOrderProgressStatusGet.ProgressStatusEnum.REJECTED &&\n          res.reasonCode === 'COED'\n        ) {\n          res = {\n            ...res,\n            progressStatus: res.reasonCode as PaymentOrderProgressStatusGet.ProgressStatusEnum,\n          };\n        }\n\n        return res;\n      }),\n      pluck('progressStatus'),\n    );\n  }\n\n  private isPaymentConfirmed(status: string): boolean {\n    return !!status && status !== ProgressStatus.CONFIRMATION_PENDING && status !== ProgressStatus.SENDING;\n  }\n\n  private onHooksDone(approved: boolean, success = true): void {\n    if (success) {\n      this.onSubmit(approved);\n    } else {\n      this.submitting$.next(false);\n    }\n  }\n\n  private hasLimitBreach(response: any): boolean {\n    const isP2PLimitBreach = Object.values(P2PLimitReasonCodes).includes(response.reasonCode);\n    return !!response?.breachReport || !!response?.error?.breachReport || isP2PLimitBreach;\n  }\n\n  showBreachModal(): void {\n    this.showBreachDetails = true;\n  }\n\n  getPaymentResponse(): Partial<PaymentOrderResponseItem> | undefined {\n    return this.paymentResponse;\n  }\n\n  hideBreachModal(): void {\n    this.showBreachDetails = false;\n  }\n\n  isTemplateSaved(): boolean {\n    return this.saveTemplate;\n  }\n\n  private buildPaymentTemplateForm(): FormGroup {\n    return this.formBuilder.group({\n      templateName: ['', [Validators.required, noWhitespaceValidator]],\n    });\n  }\n\n  openTemplateModal(): void {\n    this.paymentTemplateModalState.next(ModalState.Preview);\n  }\n\n  closeTemplateModal(): void {\n    this.paymentTemplateModalState.next(ModalState.Hidden);\n    this.paymentTemplateForm.reset();\n  }\n\n  submitPaymentTemplate(templateName = ''): void {\n    if (this.paymentOrderId) {\n      const paymentOrderId = this.paymentOrderId;\n      const name = templateName || this.paymentTemplateForm.controls['templateName'].value;\n      const templateObject: PaymentTemplatesPostRequest = {\n        paymentOrderId,\n        name,\n      };\n\n      if (this.paymentTemplateForm.invalid) {\n        return;\n      }\n\n      this.savingTemplate$.next(true);\n\n      this.paymentOrderHttpService\n        .postPaymentTemplate(templateObject)\n        .pipe(takeUntil(this.gc$))\n        .subscribe(\n          () => {\n            this.saveTemplate = true;\n            this.savingTemplate$.next(false);\n            this.paymentOrderHttpService.showNotification(true, {\n              header: commonI18n.templateSaveSuccess(name),\n              headerContext: { name },\n            });\n            this.paymentTemplateForm.reset();\n            this.paymentTemplateModalState.next(ModalState.Hidden);\n            this.eventBus.publish(\n              <string>(this.widgetOptions.successEventName || defaultPaymentSuccessEventName),\n              true,\n            );\n          },\n          () => {\n            this.paymentOrderHttpService.showNotification(false, {\n              header: commonI18n.templateSaveFailed,\n            });\n            this.savingTemplate$.next(false);\n          },\n        );\n    }\n  }\n\n  submitPayment(approved = false): void {\n    const hasHooks = this.createPaymentSetup.hooks && this.createPaymentSetup.hooks[PaymentHooks.onSubmit];\n    this.submitting$.next(true);\n    if (hasHooks) {\n      triggerPaymentHook(\n        <PaymentHooksOptions>this.createPaymentSetup.hooks,\n        PaymentHooks.onSubmit,\n        this.onHooksDone.bind(this, approved),\n        this.paymentForm,\n      );\n    } else {\n      this.onSubmit(approved);\n    }\n  }\n\n  getForexDetails(payment: PaymentDetails): Partial<ForexDetails> | undefined {\n    return getForexDetailsFromPayment(payment);\n  }\n\n  isApprovalEnabled(): boolean {\n    return !!this.widgetOptions.enableApprovals && this.canApprove;\n  }\n\n  isPaymentTemplateEnabled(): boolean {\n    return !!this.widgetOptions.enableSavePaymentAsTemplate && this.enablePaymentTemplate;\n  }\n\n  isNewPaymentEnabled() {\n    return this.widgetOptions.enableNewPaymentButton !== false;\n  }\n\n  discardPayment() {\n    if (this.widgetOptions?.isModalView) {\n      this.modalService?.closeModal();\n    } else {\n      this.resetPayment();\n    }\n  }\n\n  resetPayment(): void {\n    this.showConfirmation = false;\n    this.widgetOptions.paymentMode = PaymentMode.CREATE_PAYMENT;\n    this.stateService.resetForm();\n    this.stateService.setPaymentState(PaymentState.INITIAL);\n    this.navigationService.form();\n  }\n\n  toggleConfirmationDialog(): void {\n    this.showConfirmation = !this.showConfirmation;\n  }\n\n  showDiscardDialog(): boolean {\n    return this.showConfirmation;\n  }\n\n  isApprovalPending(): boolean {\n    return this.approvalPending;\n  }\n\n  isSubmitting$(): BehaviorSubject<boolean> {\n    return this.submitting$;\n  }\n\n  getPaymentStatusType(): PaymentSubmitStatuses {\n    return this.widgetOptions?.paymentMode === PaymentMode.EDIT_PAYMENT\n      ? PaymentSubmitStatuses.PENDING_EDITED\n      : this.isApprovalPending()\n      ? PaymentSubmitStatuses.PENDING\n      : PaymentSubmitStatuses.SUCCESS;\n  }\n\n  getPaymentMessage(): string | undefined {\n    return this.paymentMessage;\n  }\n\n  getPurposeDescription(purpose: string): string | undefined {\n    const purposes = this.paymentItem.inputFormFromSettings?.purposesOfPayment;\n    return purposes?.length ? purposes.find((item: PurposeOfPayment) => item.code === purpose)?.description : '';\n  }\n\n  doneEditing(): void {\n    this.modalService?.closeModal();\n  }\n\n  navigateToAfterSuccessPage(): void {\n    this.navigationService.afterSuccess();\n  }\n\n  ngOnDestroy(): void {\n    this.gc$.next();\n    this.gc$.complete();\n  }\n}\n","<div class=\"position-relative\">\n  <ng-container\n    *ngTemplateOutlet=\"\n      reviewTemplate || (widgetOptions.reviewScreenType === reviewScreens.ADAPTED ? adaptedReviewTmpl : defaultTmpl);\n      context: {\n        $implicit: paymentItem,\n        status: paymentStatus$ | async,\n        isSubmitting: submitting$ | async,\n        methods: methods,\n        paymentConfig: selectedPaymentConfig$ | async,\n        breachError: breachError\n      }\n    \"\n  ></ng-container>\n</div>\n\n<ng-template\n  let-payment\n  let-paymentConfig=\"paymentConfig\"\n  let-status=\"status\"\n  let-methods=\"methods\"\n  let-errors=\"errors\"\n  #adaptedReviewTmpl\n>\n  <bb-adapted-review-container\n    [payment]=\"payment\"\n    [paymentConfig]=\"paymentConfig\"\n    [status]=\"status\"\n    [methods]=\"methods\"\n    [breachError]=\"breachError\"\n  ></bb-adapted-review-container>\n</ng-template>\n\n<ng-template\n  let-payment\n  let-paymentConfig=\"paymentConfig\"\n  let-status=\"status\"\n  let-methods=\"methods\"\n  let-isSubmitting=\"isSubmitting\"\n  let-breachError=\"breachError\"\n  #defaultTmpl\n>\n  <fieldset class=\"bb-fieldset bb-fieldset__no-outline\">\n    <bb-header-ui\n      *ngIf=\"header\"\n      data-role=\"page-title\"\n      headingClasses=\"bb-block bb-block--lg\"\n      headingType=\"h2\"\n      [heading]=\"header\"\n    ></bb-header-ui>\n    <div #alertContainer></div>\n    <ng-container *ngIf=\"payment\">\n      <div class=\"bb-block bb-block--md\" *ngIf=\"status\">\n        <bb-payord-status-card\n          [status]=\"methods.getPaymentStatusType()\"\n          [isDebitPayment]=\"widgetOptions.isDebitPayment\"\n          *ngIf=\"status === 'SUCCESS'\"\n        ></bb-payord-status-card>\n\n        <ng-container *ngIf=\"!!status && status !== 'SUCCESS'\">\n          <ng-container *ngIf=\"errors?.length; else noSpecificError\">\n            <ng-container *ngFor=\"let error of errors\">\n              <ng-container *ngIf=\"error.message; else noSpecificError\">\n                <bb-alert-ui title=\"\" (close)=\"(false)\" modifier=\"error\">\n                  <div data-role=\"failure-message\" class=\"bb-text-bold bb-text-default d-inline-flex\">\n                    <ng-container *ngIf=\"isErrorTitleDisplayed\">\n                      <span>\n                        <ng-container\n                          *ngIf=\"!widgetOptions.isDebitPayment\"\n                          i18n=\"@@initiate-payment.review.payment-failed-alert.title\"\n                          >Payment data error:</ng-container\n                        >\n                        <ng-container\n                          *ngIf=\"widgetOptions.isDebitPayment\"\n                          i18n=\"@@initiate-payment.review.debit-failed-alert.title\"\n                          >Debit data error:</ng-container\n                        > </span\n                      >&nbsp;\n                    </ng-container>\n                    <span>{{ $any(error)?.message }}</span>\n                  </div>\n                </bb-alert-ui>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n\n          <ng-template #noSpecificError>\n            <ng-container *ngIf=\"genericError; else unknownError\">\n              <bb-alert-ui title=\"\" modifier=\"error\">\n                <div class=\"bb-text-bold bb-text-default\">\n                  <ng-container *ngIf=\"isErrorTitleDisplayed\">\n                    <span>\n                      <ng-container\n                        *ngIf=\"!widgetOptions.isDebitPayment\"\n                        i18n=\"@@initiate-payment-payments-generic-message-alert-title\"\n                        >Payment data error:</ng-container\n                      >\n                      <ng-container\n                        *ngIf=\"widgetOptions.isDebitPayment\"\n                        i18n=\"@@initiate-payment-debit-generic-message-alert-title\"\n                        >Debit data error:</ng-container\n                      >\n                    </span>\n                  </ng-container>\n                  <span>{{ genericError }}</span>\n                </div>\n              </bb-alert-ui>\n            </ng-container>\n          </ng-template>\n\n          <ng-template #unknownError>\n            <ng-container *ngIf=\"status !== 'USER_DECLINED' && status !== 'LIMIT_BREACH' && status !== 'COED'\">\n              <div class=\"bb-stack__item bb-text-bold\">\n                <bb-alert-ui\n                  i18n-title=\"@@initiate-payment-review.payments-unknown-error-alert-title\"\n                  title=\"Server error: Unknown error occurred.\"\n                  modifier=\"error\"\n                >\n                </bb-alert-ui>\n              </div>\n            </ng-container>\n          </ng-template>\n\n          <ng-container *ngIf=\"status === 'USER_DECLINED' || status === 'LIMIT_BREACH' || status === 'COED'\">\n            <ng-container [ngSwitch]=\"status\">\n              <bb-alert-ui title=\"\" (close)=\"(false)\" modifier=\"error\" [ngSwitch]=\"status\">\n                <div class=\"bb-stack bb-text-default\" *ngSwitchCase=\"'LIMIT_BREACH'\">\n                  <div\n                    class=\"bb-stack__item bb-text-bold\"\n                    data-role=\"failure-message\"\n                    i18n=\"@@initiate-payment.review.limit-breach-error\"\n                  >\n                    Payment cannot be submitted because your limits have been breached\n                  </div>\n                  <button\n                    bbButton\n                    color=\"unstyled\"\n                    buttonSize=\"sm\"\n                    i18n=\"@@initiate-payment.review.limit-breach-error-see-details-button\"\n                    class=\"bb-stack__item bb-stack__item--push-right alert-link\"\n                    data-role=\"failure-see-details\"\n                    (click)=\"methods.showBreachModal()\"\n                  >\n                    See details\n                  </button>\n                </div>\n                <div *ngSwitchCase=\"'USER_DECLINED'\" data-role=\"failure-message\">\n                  <div\n                    i18n=\"@@initiate-payment.review.txn-signing-cancelled-error-title\"\n                    class=\"bb-text-bold bb-text-default\"\n                  >\n                    Payment not submitted\n                  </div>\n                  <div i18n=\"@@initiate-payment.review.txn-signing-cancelled-error-msg\" class=\"bb-text-default\">\n                    The transaction signing request was cancelled\n                  </div>\n                </div>\n                <div *ngSwitchCase=\"'COED'\" data-role=\"failure-message\">\n                  <div i18n=\"@@edit-payment.review.txn-signing-coed-error-title\" class=\"bb-text-bold bb-text-default\">\n                    Payment not submitted\n                  </div>\n                  <div i18n=\"@@edit-payment.review.txn-signing-coed-error-msg\" class=\"bb-text-default\">\n                    Payment is already edited by another user\n                  </div>\n                </div>\n              </bb-alert-ui>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n\n      <div\n        *ngIf=\"payment?.isIntraLegalEntity || payment?.remittanceInfo?.urgent\"\n        class=\"bb-block bb-block--md bb-inline-stack bb-text-support\"\n      >\n        <div class=\"bb-inline-stack bb-inline-stack__item\" *ngIf=\"payment?.isIntraLegalEntity\">\n          <bb-icon-ui name=\"domain\"></bb-icon-ui>\n          <div class=\"bb-inline-stack__item\"></div>\n          <div\n            class=\"bb-inline-stack__item bb-text-bold bb-inline-stack__item--spacing-sm\"\n            i18n=\"@@initiate-payment.review.intra-company-transfer-label\"\n          >\n            Intracompany payment\n          </div>\n        </div>\n        <div *ngIf=\"payment?.remittanceInfo?.urgent\" class=\"bb-inline-stack bb-inline-stack__item\">\n          <bb-icon-ui name=\"priority-high\"></bb-icon-ui>\n          <div class=\"bb-inline-stack__item\"></div>\n          <div\n            class=\"bb-inline-stack__item bb-text-bold\"\n            data-role=\"payment-is-urgent\"\n            i18n=\"@@initiate-payment.review.urgent-transfer-label\"\n          >\n            Urgent payment\n          </div>\n        </div>\n      </div>\n\n      <div class=\"bb-payment-account-details-card__container d-none d-md-flex\">\n        <div class=\"bb-text-bold w-md-50\">\n          <ng-container *ngTemplateOutlet=\"dynamicLabelInitiator\"></ng-container>\n        </div>\n        <div class=\"mr-3\">&nbsp;</div>\n        <div class=\"bb-text-bold w-md-50\">\n          <ng-container *ngTemplateOutlet=\"dynamicLabelCounterparty\"></ng-container>\n        </div>\n      </div>\n\n      <div\n        class=\"bb-payment-account-details-card__container bb-block bb-block--md break-word\"\n        [ngClass]=\"{\n          'flex-column-reverse flex-md-row-reverse': widgetOptions.isDebitPayment\n        }\"\n      >\n        <div class=\"w-md-50\">\n          <div class=\"bb-text-bold d-md-none\">\n            <ng-container\n              *ngTemplateOutlet=\"widgetOptions.isDebitPayment ? dynamicLabelCounterparty : dynamicLabelInitiator\"\n            ></ng-container>\n          </div>\n          <bb-debitor-details-card [details]=\"payment?.initiator\"></bb-debitor-details-card>\n        </div>\n\n        <div class=\"justify-content-center align-items-center d-md-flex d-none\">\n          <bb-icon-ui class=\"bb-account-transfer-icon\" name=\"arrow-forward\"></bb-icon-ui>\n        </div>\n        <div class=\"d-md-none\">&nbsp;</div>\n\n        <div class=\"w-md-50\">\n          <div class=\"bb-text-bold d-md-none\">\n            <ng-container\n              *ngTemplateOutlet=\"widgetOptions.isDebitPayment ? dynamicLabelInitiator : dynamicLabelCounterparty\"\n            ></ng-container>\n          </div>\n          <bb-creditor-details-card [details]=\"payment?.counterparty\"></bb-creditor-details-card>\n        </div>\n      </div>\n\n      <ng-template #dynamicLabelInitiator>\n        <ng-container *ngIf=\"widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            name=\"counterparty\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"Collect from\"\n            i18n-defaultLabel=\"@@initiate-payment.review.debit-counterparty-title\"\n            data-role=\"initiator-label\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n        <ng-container *ngIf=\"!widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            name=\"initiator\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"From\"\n            i18n-defaultLabel=\"@@initiate-payment.review.initiator-title\"\n            data-role=\"initiator-label\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n      </ng-template>\n\n      <ng-template #dynamicLabelCounterparty>\n        <ng-container *ngIf=\"widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            data-role=\"payee-label\"\n            name=\"initiator\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"Transfer to\"\n            i18n-defaultLabel=\"@@initiate-payment.review.debit-initiator-title\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n        <ng-container *ngIf=\"!widgetOptions.isDebitPayment\">\n          <bb-payord-dynamic-label\n            data-role=\"payee-label\"\n            name=\"counterparty\"\n            [config]=\"paymentConfig\"\n            defaultLabel=\"To\"\n            i18n-defaultLabel=\"@@initiate-payment.review.counterparty-title\"\n          ></bb-payord-dynamic-label>\n        </ng-container>\n      </ng-template>\n\n      <bb-payord-amount-details\n        [config]=\"paymentConfig\"\n        [details]=\"payment?.remittanceInfo\"\n        [transferFee]=\"payment?.transferFee\"\n        [chargeBearer]=\"payment?.chargeBearer\"\n        [forexDetails]=\"methods.getForexDetails(payment)\"\n      ></bb-payord-amount-details>\n\n      <bb-payord-counterparty-details\n        [details]=\"payment?.counterparty\"\n        [config]=\"paymentConfig\"\n        [isDebitPayment]=\"payment?.isDebitPayment\"\n      ></bb-payord-counterparty-details>\n\n      <div\n        *ngIf=\"\n          payment?.messageToBank ||\n          payment?.remittanceInfo?.description ||\n          payment?.remittanceInfo?.paymentReference ||\n          payment?.counterparty.messageToBank ||\n          payment?.counterparty.remittanceInformation ||\n          payment?.remittanceInfo?.purposeOfPayment ||\n          payment?.counterparty?.mandateIdentifier\n        \"\n      >\n        <hr />\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty?.mandateIdentifier\">\n          <div class=\"bb-text-bold\" data-role=\"mandate-identifier-label\">\n            <bb-payord-dynamic-label\n              name=\"mandateIdentifier\"\n              [config]=\"paymentConfig\"\n              parentName=\"counterparty\"\n              defaultLabel=\"Mandate identifier\"\n              i18n-defaultLabel=\"@@initiate-payment.review.mandate-identifier-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"mandate-identifier\">\n            {{ payment?.counterparty?.mandateIdentifier }}\n          </div>\n        </div>\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.paymentReference\">\n          <div class=\"bb-text-bold\" data-role=\"payment-reference-label\">\n            <bb-payord-dynamic-label\n              name=\"paymentReference\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Payment reference\"\n              i18n-defaultLabel=\"@@initiate-payment.review.payment-reference-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-reference\">\n            {{ payment?.remittanceInfo?.paymentReference }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.description\">\n          <div class=\"bb-text-bold\" data-role=\"payment-description-label\">\n            <bb-payord-dynamic-label\n              name=\"description\"\n              [config]=\"paymentConfig\"\n              parentName=\"remittanceInfo\"\n              defaultLabel=\"Description\"\n              i18n-defaultLabel=\"@@initiate-payment.review.description-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"payment-description\">\n            {{ payment?.remittanceInfo?.description }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.counterparty.remittanceInformation\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              *ngIf=\"!payment.isDebitPayment\"\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-beneficiary-title\"\n            ></bb-payord-dynamic-label>\n            <bb-payord-dynamic-label\n              *ngIf=\"payment.isDebitPayment\"\n              name=\"remittanceInformation\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to client\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-client-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div data-role=\"description\" class=\"break-word\">\n            {{ payment?.counterparty?.remittanceInformation }}\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.remittanceInfo?.purposeOfPayment\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              name=\"purposeOfPayment\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Purpose of payment\"\n              i18n-defaultLabel=\"@@initiate-payment.review.purpose-of-payment-title\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"bb-stack\">\n            <div data-role=\"purpose-of-payment\" class=\"bb-stack__item bb-stack__item--align-top\">\n              {{ payment?.remittanceInfo?.purposeOfPayment }}\n            </div>\n            <div data-role=\"purpose-of-payment-description\" class=\"bb-stack__item bb-text-support\">\n              {{ methods.getPurposeDescription(payment?.remittanceInfo?.purposeOfPayment) }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"bb-block bb-block--md\" *ngIf=\"payment?.messageToBank || payment?.counterparty?.messageToBank\">\n          <div class=\"bb-text-bold\">\n            <bb-payord-dynamic-label\n              *ngIf=\"!payment.isDebitPayment\"\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to beneficiary bank\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-bank.label\"\n            ></bb-payord-dynamic-label>\n            <bb-payord-dynamic-label\n              *ngIf=\"payment.isDebitPayment\"\n              name=\"messageToBank\"\n              [config]=\"paymentConfig\"\n              defaultLabel=\"Message to client bank\"\n              i18n-defaultLabel=\"@@initiate-payment.review.message-to-client-bank.label\"\n            ></bb-payord-dynamic-label>\n          </div>\n          <div class=\"break-word\" data-role=\"message-to-bank\">\n            {{ payment?.counterparty?.messageToBank || payment?.messageToBank }}\n          </div>\n        </div>\n        <hr />\n      </div>\n\n      <bb-payord-schedule-details [paymentConfig]=\"paymentConfig\" [data]=\"payment?.schedule\">\n      </bb-payord-schedule-details>\n    </ng-container>\n  </fieldset>\n\n  <ng-container *ngIf=\"status !== 'SUCCESS'; else closureSwitch\">\n    <div class=\"bb-button-bar\" [class.bb-button-bar--reverse]=\"!widgetOptions?.isModalView\">\n      <button\n        bbButton\n        class=\"bb-button-bar__button\"\n        data-role=\"submit-button\"\n        (click)=\"methods.submit()\"\n        *ngIf=\"!methods.isApprovalEnabled()\"\n        [disabled]=\"isSubmitting\"\n        i18n=\"@@initiate-payment.review.submit-dropdown-btn\"\n      >\n        Submit\n      </button>\n      <div class=\"btn-group bb-button-bar__button\" data-role=\"button-group\" *ngIf=\"methods.isApprovalEnabled()\">\n        <bb-load-button-ui\n          class=\"bb-button-bar__button\"\n          color=\"primary\"\n          data-role=\"submit-button\"\n          [isLoading]=\"isSubmitting\"\n          (click)=\"methods.submit()\"\n          i18n=\"@@initiate-payment.review.submit-btn\"\n        >\n          Submit\n        </bb-load-button-ui>\n\n        <bb-dropdown-menu-ui\n          class=\"btn-group\"\n          btnColor=\"primary\"\n          icon=\"caret-down\"\n          data-role=\"dropdown-menu\"\n          position=\"top-right\"\n        >\n          <ng-template bbDropdownMenuItem>\n            <button\n              role=\"menuitem\"\n              type=\"button\"\n              class=\"dropdown-item\"\n              data-role=\"bus-submit-and-approve-button\"\n              [disabled]=\"isSubmitting\"\n              (bbKeyboardClick)=\"methods.submit(true)\"\n              i18n=\"@@initiate-payment.review.submit-and-approve-btn\"\n            >\n              Submit and Approve\n            </button>\n          </ng-template>\n        </bb-dropdown-menu-ui>\n      </div>\n      <button\n        class=\"bb-button-bar__button\"\n        bbButton\n        color=\"secondary\"\n        (click)=\"methods.edit()\"\n        [disabled]=\"isSubmitting\"\n        data-role=\"edit-button\"\n        i18n=\"@@initiate-payment.review.edit-btn\"\n      >\n        Edit\n      </button>\n\n      <button\n        bbButton\n        class=\"bb-button-bar__button bb-button-bar__button--across\"\n        color=\"link\"\n        data-role=\"cancel-button\"\n        (click)=\"methods.toggleDiscardDialog()\"\n        [disabled]=\"isSubmitting\"\n        i18n=\"@@initiate-payment.review.discard-btn\"\n      >\n        Discard\n      </button>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"isSubmitting\" class=\"position-absolute w-100 h-100 top-0 fixed-top bg-white\" [style.opacity]=\"0.6\">\n    <bb-loading-indicator-ui loaderSize=\"lg\" class=\"absolute-center\"></bb-loading-indicator-ui>\n  </div>\n\n  <ng-template #closureSwitch>\n    <ng-container *ngIf=\"widgetOptions?.isModalView; else newPayment\">\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          class=\"bb-button-bar__button\"\n          data-role=\"done-payment-edit-button\"\n          *ngIf=\"status\"\n          (click)=\"methods.doneEditing()\"\n          i18n=\"@@initiate-payment.review.btn-done-edit-payment.label\"\n        >\n          Done\n        </button>\n\n        <button\n          bbButton\n          color=\"secondary\"\n          class=\"bb-button-bar__button\"\n          data-role=\"export-payment-button\"\n          *ngIf=\"methods.getPaymentResponse()?.exportAllowed\"\n          [bbExportPdf]=\"methods.getPaymentResponse()?.id\"\n        >\n          <bb-icon-ui class=\"mr-2\" name=\"file-download\"></bb-icon-ui>\n          <span i18n=\"@@initiate-payment.review.btn-export-payment.label\">Export PDF</span>\n        </button>\n\n        <ng-container *ngIf=\"widgetOptions?.paymentMode !== paymentMode.EDIT_PAYMENT\">\n          <ng-container *ngTemplateOutlet=\"newPaymentButton; context: { color: 'secondary' }\"></ng-container>\n          <div class=\"bb-button-bar__button bb-button-bar__button--across\">\n            <ng-container *ngTemplateOutlet=\"saveTemplateButton; context: { color: 'link' }\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #newPayment>\n    <div class=\"bb-button-bar bb-button-bar--reverse\">\n      <ng-container *ngTemplateOutlet=\"newPaymentButton; context: { color: 'primary' }\"></ng-container>\n      <ng-container *ngTemplateOutlet=\"saveTemplateButton; context: { color: 'secondary' }\"></ng-container>\n    </div>\n  </ng-template>\n\n  <ng-template #newPaymentButton let-color=\"color\">\n    <button\n      *ngIf=\"status && methods.isNewPaymentEnabled()\"\n      bbButton\n      [color]=\"color\"\n      class=\"bb-button-bar__button\"\n      data-role=\"new-payment-button\"\n      (click)=\"methods.reset()\"\n      [disabled]=\"methods.isSavingTemplate$() | async\"\n    >\n      <ng-container *ngIf=\"!widgetOptions.isDebitPayment\" i18n=\"@@initiate-payment.review.btn-group-new-payment.label\"\n        >New Payment</ng-container\n      >\n      <ng-container *ngIf=\"widgetOptions.isDebitPayment\" i18n=\"@@initiate-payment.review.btn-group-new-debit.label\"\n        >New debit request</ng-container\n      >\n    </button>\n  </ng-template>\n\n  <ng-template #saveTemplateButton let-color=\"color\">\n    <button\n      *ngIf=\"status === 'SUCCESS' && methods.isPaymentTemplateEnabled() && (createTemplatePermission$ | async)\"\n      bbButton\n      [color]=\"color\"\n      class=\"bb-button-bar__button\"\n      data-role=\"save-as-template-button\"\n      (click)=\"methods.openTemplateModal()\"\n      [disabled]=\"methods.isTemplateSaved()\"\n      i18n=\"@@initiate-payment.review.btn-group-save-as-template.label\"\n    >\n      Save as a template\n    </button>\n  </ng-template>\n\n  <bb-modal-ui\n    [isOpen]=\"methods.showDiscardDialog()\"\n    (cancel)=\"methods.toggleDiscardDialog()\"\n    (confirm)=\"methods.discard()\"\n  >\n    <bb-modal-header-ui>\n      <ng-template bbCustomModalHeader>\n        <div data-role=\"modal-header\">\n          <h2 class=\"modal-title\" i18n=\"omni-payment-edit-review-discard-modal-title\">\n            Discard {widgetOptions?.paymentMode === paymentMode.EDIT_PAYMENT, select, true {edited} other {entered}}\n            data?\n          </h2>\n        </div>\n      </ng-template>\n    </bb-modal-header-ui>\n    <bb-modal-body-ui>\n      <ng-template bbCustomModalBody>\n        <ng-container i18n=\"@@initiate-payment.review.discard-modal-content\">\n          Are you sure you want to exit and discard all changes? {widgetOptions?.paymentMode ===\n          paymentMode.EDIT_PAYMENT, select, true {Edited} other {Entered}} data will be lost.\n        </ng-container>\n      </ng-template>\n    </bb-modal-body-ui>\n\n    <bb-modal-footer-ui #modalFooterRef>\n      <ng-template bbCustomModalFooter>\n        <div class=\"bb-button-bar\">\n          <button\n            bbButton\n            color=\"danger\"\n            class=\"bb-button-bar__button\"\n            (click)=\"methods.discard()\"\n            data-role=\"discard-action-btn\"\n            i18n=\"@@initiate-payment.review.discard-modal-discard-btn\"\n          >\n            Discard\n          </button>\n\n          <button\n            bbButton\n            class=\"bb-button-bar__button\"\n            color=\"link\"\n            (click)=\"methods.toggleDiscardDialog()\"\n            data-role=\"cancel-action-btn\"\n            i18n=\"@@initiate-payment.review.discard-modal-cancel-btn\"\n          >\n            Not now\n          </button>\n        </div>\n      </ng-template>\n    </bb-modal-footer-ui>\n  </bb-modal-ui>\n\n  <bb-breach-limit-details\n    [paymentDetails]=\"paymentItem\"\n    [error]=\"breachError\"\n    [isOpen]=\"showBreachDetails\"\n    (close)=\"hideBreachModal()\"\n  ></bb-breach-limit-details>\n</ng-template>\n\n<bb-payment-template-form\n  [paymentTemplateForm]=\"paymentTemplateForm\"\n  [isSavingTemplate]=\"savingTemplate$ | async\"\n  [modalState]=\"paymentTemplateModalState\"\n  (closeModal)=\"closeTemplateModal()\"\n  (openModal)=\"openTemplateModal()\"\n  (submitForm)=\"submitPaymentTemplate()\"\n></bb-payment-template-form>\n"]}