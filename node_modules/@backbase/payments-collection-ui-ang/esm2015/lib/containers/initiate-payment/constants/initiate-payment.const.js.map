{"version":3,"file":"initiate-payment.const.js","sourceRoot":"","sources":["../../../../../../../../libs/payments-collection-ui-ang/src/lib/containers/initiate-payment/constants/initiate-payment.const.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,kBAAkB,EAClB,sBAAsB,EACtB,iBAAiB,EACjB,iBAAiB,EAEjB,oBAAoB,GACrB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAE5C,MAAM,kBAAkB,GAAqB;IAC3C,IAAI,EAAE,iBAAiB,CAAC,YAAY;IACpC,MAAM,EAAE;QACN;YACE,IAAI,EAAE,iBAAiB,CAAC,sBAAsB;YAC9C,IAAI,EAAE,iBAAiB,CAAC,sBAAsB;YAC9C,OAAO,EAAE;gBACP,KAAK,EAAE,SAAS,CAAA,6DAA6D;gBAC7E,eAAe,EAAE,IAAI;aACtB;SACF;QACD;YACE,IAAI,EAAE,kBAAkB,CAAC,IAAI;YAC7B,IAAI,EAAE,iBAAiB,CAAC,mBAAmB;YAC3C,OAAO,EAAE;gBACP,KAAK,EAAE,SAAS,CAAA,+EAA+E;gBAC/F,WAAW,EAAE,SAAS,CAAA,uFAAuF;gBAC7G,mBAAmB,EAAE,SAAS,CAAA,8FAA8F;gBAC5H,YAAY,EAAE,IAAI;gBAClB,iBAAiB,EAAE,IAAI;gBACvB,UAAU,EAAE,CAAC,QAAQ,CAAC;gBACtB,UAAU,EAAE;oBACV,kBAAkB,CAAC,OAAO;oBAC1B,kBAAkB,CAAC,cAAc;oBACjC,kBAAkB,CAAC,aAAa;iBACjC;gBACD,kBAAkB,EAAE;oBAClB;wBACE,OAAO,EAAE,SAAS,CAAA,mGAAmG;wBACrH,IAAI,EAAE,iCAAiC;qBACxC;iBACF;aACF;SACF;QACD;YACE,IAAI,EAAE,kBAAkB,CAAC,OAAO;YAChC,IAAI,EAAE,iBAAiB,CAAC,yBAAyB;YACjD,OAAO,EAAE;gBACP,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACjC,KAAK,EAAE,SAAS,CAAA,uDAAuD;gBACvE,WAAW,EAAE,SAAS,CAAA,0EAA0E;gBAChG,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,WAAW,CAAC;gBACvD,UAAU,EAAE,GAAG,iBAAiB,CAAC,YAAY,IAAI,kBAAkB,CAAC,YAAY,IAAI,kBAAkB,CAAC,aAAa,EAAE;aACvH;SACF;QACD;YACE,IAAI,EAAE,kBAAkB,CAAC,aAAa;YACtC,IAAI,EAAE,iBAAiB,CAAC,IAAI;YAC5B,OAAO,EAAE;gBACP,UAAU,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC1D,SAAS,EAAE,EAAE;gBACb,KAAK,EAAE,SAAS,CAAA,qEAAqE;gBACrF,kBAAkB,EAAE;oBAClB;wBACE,IAAI,EAAE,WAAW;wBACjB,OAAO,EAAE,SAAS,CAAA,yGAAyG;qBAC5H;oBACD;wBACE,OAAO,EAAE,SAAS,CAAA,yEAAyE;wBAC3F,IAAI,EAAE,oBAAoB;qBAC3B;iBACF;gBACD,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,CAAC;aAC3C;SACF;QACD;YACE,IAAI,EAAE,kBAAkB,CAAC,cAAc;YACvC,IAAI,EAAE,iBAAiB,CAAC,IAAI;YAC5B,OAAO,EAAE;gBACP,KAAK,EAAE,SAAS,CAAA,kEAAkE;gBAClF,SAAS,EAAE,EAAE;gBACb,UAAU,EAAE,CAAC,gBAAgB,EAAE,UAAU,EAAE,WAAW,CAAC;gBACvD,UAAU,EAAE,GAAG,iBAAiB,CAAC,YAAY,IAAI,kBAAkB,CAAC,YAAY,EAAE;aACnF;SACF;KACF;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG;IACxB,sBAAsB;IACtB;QACE,IAAI,EAAE,iBAAiB,CAAC,cAAc;QACtC,KAAK,EAAE,SAAS,CAAA,wEAAwE;QACxF,MAAM,EAAE;YACN;gBACE,IAAI,EAAE,iBAAiB,CAAC,wBAAwB;gBAChD,IAAI,EAAE,oBAAoB,CAAC,mBAAmB;gBAC9C,OAAO,EAAE;oBACP,UAAU,EAAE,CAAC,QAAQ,CAAC;oBACtB,KAAK,EAAE,SAAS,CAAA,qDAAqD;oBACrE,kBAAkB,EAAE;wBAClB;4BACE,OAAO,EAAE,SAAS,CAAA,2DAA2D;4BAC7E,IAAI,EAAE,eAAe;yBACtB;wBACD;4BACE,OAAO,EAAE,SAAS,CAAA,0GAA0G;4BAC5H,IAAI,EAAE,iBAAiB;yBACxB;qBACF;iBACF;aACF;SACF;KACF;IACD,kBAAkB;CACnB,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,WAAW,EAAE,MAAM;IACnB,cAAc,EAAE,SAAS;IACzB,WAAW,EAAE,SAAS;IACtB,IAAI,EAAE,sBAAsB;CAC7B,CAAC","sourcesContent":["import {\n  CounterPartyFields,\n  defaultInitiatorConfig,\n  PaymentBaseFields,\n  PaymentComponents,\n  PaymentFormGroup,\n  RemittanceInfoFields,\n} from '@backbase/payment-orders-ang';\nimport { Validators } from '@angular/forms';\n\nconst counterPartyConfig: PaymentFormGroup = {\n  name: PaymentBaseFields.counterparty,\n  fields: [\n    {\n      name: PaymentComponents.beneficiaryGroupHeader,\n      type: PaymentComponents.beneficiaryGroupHeader,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.beneficiary-header-title:To`,\n        hasDynamicTitle: true,\n      },\n    },\n    {\n      name: CounterPartyFields.name,\n      type: PaymentComponents.beneficiarySelector,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.beneficiary-selector-label:Beneficiary's name`,\n        placeholder: $localize`:@@initiate-payment-base-fields.beneficiary-selector-placeholder:Select a beneficiary`,\n        saveNewContactLabel: $localize`:@@initiate-payment-base-fields.beneficiary-selector-new-contact-label:Save as a new contact`,\n        isWizardMode: true,\n        retainBankCountry: true,\n        cssClasses: ['col-12'],\n        dependants: [\n          CounterPartyFields.country,\n          CounterPartyFields.bankBranchCode,\n          CounterPartyFields.accountNumber,\n        ],\n        validationMessages: [\n          {\n            message: $localize`:@@initiate-payment-base-fields.same-accounts-error:Beneficiary is same as selected Debit account`,\n            name: 'sameDebitCreditAccountsSelected',\n          },\n        ],\n      },\n    },\n    {\n      name: CounterPartyFields.country,\n      type: PaymentComponents.sanctionedCountrySelector,\n      options: {\n        validators: [Validators.required],\n        label: $localize`:@@initiate-payment-base-fields.country.label:Country`,\n        placeholder: $localize`:@@initiate-payment-base-fields.country-placeholder:- select a country -`,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}.${CounterPartyFields.postalAddress}`,\n      },\n    },\n    {\n      name: CounterPartyFields.accountNumber,\n      type: PaymentComponents.text,\n      options: {\n        validators: [Validators.required, Validators.minLength(6)],\n        maxLength: 36,\n        label: $localize`:@@initiate-payment-base-fields.acc-no-label:Account number or IBAN`,\n        validationMessages: [\n          {\n            name: 'minlength',\n            message: $localize`:@@initiate-payment-base-fields.acc-no-min-length-error:Account number should have minimum 6 characters`,\n          },\n          {\n            message: $localize`:@@initiate-payment-base-fields.iban-country-error-message:Invalid IBAN`,\n            name: 'invalidIbanCountry',\n          },\n        ],\n        cssClasses: ['d-inline-block', 'col-md-6'],\n      },\n    },\n    {\n      name: CounterPartyFields.bankBranchCode,\n      type: PaymentComponents.text,\n      options: {\n        label: $localize`:@@initiate-payment-base-fields.bank-branch-code-label:Sort code`,\n        maxLength: 20,\n        cssClasses: ['d-inline-block', 'col-md-6', 'align-top'],\n        mapToField: `${PaymentBaseFields.counterparty}.${CounterPartyFields.creditorBank}`,\n      },\n    },\n  ],\n};\n\nexport const BaseFields = [\n  defaultInitiatorConfig,\n  {\n    name: PaymentBaseFields.remittanceInfo,\n    title: $localize`:@@initiate-payment-base-fields.remittance-group-title:Payment details`,\n    fields: [\n      {\n        type: PaymentComponents.sanctionedCurrencyAmount,\n        name: RemittanceInfoFields.amountCurrencyGroup,\n        options: {\n          cssClasses: ['col-12'],\n          label: $localize`:@@initiate-payment-base-fields.amount-title:Amount`,\n          validationMessages: [\n            {\n              message: $localize`:@@initiate-payment-base-fields.amount-error:Enter amount`,\n              name: 'invalidAmount',\n            },\n            {\n              message: $localize`:@@initiate-payment-base-fields.currency-error:Selected country does not allow payments in this currency`,\n              name: 'invalidCurrency',\n            },\n          ],\n        },\n      },\n    ],\n  },\n  counterPartyConfig,\n];\n\nexport const PaymentTypes = {\n  ILE_POSTFIX: '_ILE',\n  CLOSED_POSTFIX: '_CLOSED',\n  SEPA_PREFIX: 'SEPA_CT',\n  SEPA: 'SEPA_CREDIT_TRANSFER',\n};\n"]}