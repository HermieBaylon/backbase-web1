import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { BaseFields } from '../constants/initiate-payment.const';
import * as i0 from "@angular/core";
export class CreatePaymentConfigSetupService {
    constructor() {
        this.configsSub$ = new BehaviorSubject([]);
        this.optionsSub$ = new BehaviorSubject({});
        this.baseFieldsSub$ = new BehaviorSubject([]);
        this.fetchPaymentOptionsListenerSub$ = new BehaviorSubject(undefined);
        this.hooksSub$ = new BehaviorSubject({});
        this.reviewTemplateSub$ = new BehaviorSubject(undefined);
        this.configs$ = this.configsSub$.asObservable();
        this.options$ = this.optionsSub$.asObservable();
        this.baseFields$ = this.baseFieldsSub$.asObservable();
        this.fetchPaymentOptionsListener$ = this.fetchPaymentOptionsListenerSub$.asObservable();
        this.reviewTemplate$ = this.reviewTemplateSub$.asObservable();
    }
    get hooks() {
        return this.hooksSub$.value;
    }
    get options() {
        return this.optionsSub$.value;
    }
    get configs() {
        return this.configsSub$.value;
    }
    setHooks(hooks = {}) {
        this.hooksSub$.next(hooks);
    }
    setConfigs(configs) {
        this.configsSub$.next(configs);
    }
    setOptions(options) {
        this.optionsSub$.next(options);
    }
    setBaseFields(baseFields = BaseFields) {
        this.baseFieldsSub$.next(baseFields);
    }
    setFetchPaymentOptionsListener(listenerFn) {
        this.fetchPaymentOptionsListenerSub$.next(listenerFn);
    }
    setReviewTemplate(templateRef) {
        this.reviewTemplateSub$.next(templateRef);
    }
    getHeader(state) {
        var _a, _b, _c;
        const paymentType = this.configs.length === 1 ? this.configs[0].paymentType : '';
        const data = {
            paymentMode: (_a = this.options) === null || _a === void 0 ? void 0 : _a.paymentMode,
            state,
            paymentType,
            isDebit: this.options.isDebitPayment,
        };
        return (_c = (_b = this.options).header) === null || _c === void 0 ? void 0 : _c.call(_b, data);
    }
}
/** @nocollapse */ CreatePaymentConfigSetupService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CreatePaymentConfigSetupService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ CreatePaymentConfigSetupService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CreatePaymentConfigSetupService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CreatePaymentConfigSetupService, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=create-payment-config-setup.service.js.map