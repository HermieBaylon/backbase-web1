{"version":3,"file":"header-dropdown.component.js","sourceRoot":"","sources":["../../../../../../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/components/header-dropdown/header-dropdown.component.ts","../../../../../../../../../libs/payments-collection-ui-ang/src/lib/components/payments-header/components/header-dropdown/header-dropdown.component.html"],"names":[],"mappings":"AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,KAAK,EACL,MAAM,GACP,MAAM,eAAe,CAAC;;;;;;AASvB,MAAM,OAAO,uBAAuB;IALpC;QAME;;WAEG;QACM,SAAI,GAAwC,EAAE,CAAC;QACxD;;WAEG;QACM,0BAAqB,GAAG,KAAK,CAAC;QAEvC;;WAEG;QACM,aAAQ,GAAc,cAAc,CAAC;QAU9C;;WAEG;QACM,gBAAW,GAAG,SAAS,CAAC;QACjC;;WAEG;QACM,eAAU,GAAgB,IAAI,CAAC;QAExC;;WAEG;QACO,qBAAgB,GAAG,IAAI,YAAY,EAAO,CAAC;KAMtD;IAJC,OAAO,CAAC,KAAY,EAAE,KAAU;QAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;;wIAxCU,uBAAuB;4HAAvB,uBAAuB,yTCfpC,+qEA8DA;4FD/Ca,uBAAuB;kBALnC,SAAS;mBAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,WAAW,EAAE,kCAAkC;oBAC/C,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;8BAKU,IAAI;sBAAZ,KAAK;gBAIG,qBAAqB;sBAA7B,KAAK;gBAKG,QAAQ;sBAAhB,KAAK;gBAIG,WAAW;sBAAnB,KAAK;gBAKG,UAAU;sBAAlB,KAAK;gBAIG,WAAW;sBAAnB,KAAK;gBAIG,UAAU;sBAAlB,KAAK;gBAKI,gBAAgB;sBAAzB,MAAM","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Placement } from '@ng-bootstrap/ng-bootstrap';\nimport { PaymentsHeaderNavigationItem } from '../../models/payments-header.models';\n\n@Component({\n  selector: 'bb-header-dropdown',\n  templateUrl: './header-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HeaderDropdownComponent {\n  /**\n   * Array of representation of the link menu object\n   */\n  @Input() menu: PaymentsHeaderNavigationItem<any>[] = [];\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() useFirstLinkAsDefault = false;\n\n  /**\n   * Flag to denote if the first link from buttons array should be used as default target\n   */\n  @Input() position: Placement = 'bottom-right';\n  /**\n   * Button label. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonLabel!: string;\n\n  /**\n   * Button icon. Will be used if useFirstLinkAsDefault = false;\n   */\n  @Input() buttonIcon!: string;\n  /**\n   * Color of the button. Default `primary`\n   */\n  @Input() buttonColor = 'primary';\n  /**\n   * Size of the button. Allowed values are `sm` or `md`. Default `md`\n   */\n  @Input() buttonSize: 'sm' | 'md' = 'md';\n\n  /**\n   * Event on item click\n   */\n  @Output() navigationAction = new EventEmitter<any>();\n\n  onClick(event: Event, value: any) {\n    event.preventDefault();\n    this.navigationAction.emit(value);\n  }\n}\n","<div class=\"btn-group bb-button-bar__button\">\n  <button\n    *ngIf=\"useFirstLinkAsDefault || menu.length === 1\"\n    class=\"bb-button-bar__button\"\n    bbButton\n    [color]=\"buttonColor\"\n    [buttonSize]=\"buttonSize\"\n    (click)=\"onClick($event, menu[0].value)\"\n  >\n    <bb-icon-ui *ngIf=\"menu[0].iconName\" [name]=\"menu[0].iconName\"></bb-icon-ui>\n    <span>{{ menu[0].label }}</span>\n  </button>\n  <ng-container *ngIf=\"menu.length > 1\">\n    <bb-dropdown-menu-ui\n      container=\"body\"\n      icon=\"caret-down\"\n      [btnColor]=\"buttonColor\"\n      [buttonSize]=\"buttonSize\"\n      [position]=\"position\"\n      [class.btn-group]=\"useFirstLinkAsDefault\"\n    >\n      <ng-template bbDropdownLabel>\n        <span class=\"d-flex align-items-center\" *ngIf=\"!useFirstLinkAsDefault\">\n          <bb-icon-ui *ngIf=\"buttonIcon\" [name]=\"buttonIcon\"></bb-icon-ui>\n          <span>{{ buttonLabel }}</span>\n        </span>\n      </ng-template>\n\n      <ng-template bbDropdownMenuItem>\n        <ng-container *ngFor=\"let item of menu; let i = index\">\n          <ng-container *ngIf=\"!(useFirstLinkAsDefault && i === 0)\">\n            <a\n              rel=\"noopener\"\n              role=\"menuitem\"\n              href=\"#\"\n              class=\"dropdown-item\"\n              (click)=\"onClick($event, item.value)\"\n            >\n              <span class=\"bb-stack\">\n                <bb-icon-ui\n                  *ngIf=\"item.iconName\"\n                  class=\"bb-stack__item bb-stack__item--align-top\"\n                  [name]=\"item.iconName ? item.iconName : undefined\"\n                  color=\"dark\"\n                ></bb-icon-ui>\n                <div class=\"bb-stack__item\">\n                  <span>{{ item.label }}</span>\n                  <div\n                    *ngIf=\"item.description\"\n                    class=\"bb-subtitle bb-text-support mr-4\"\n                  >\n                    {{ item.description }}\n                  </div>\n                </div>\n              </span>\n            </a>\n          </ng-container>\n        </ng-container>\n      </ng-template>\n    </bb-dropdown-menu-ui>\n  </ng-container>\n</div>\n"]}