import { ProductSummaryHttpService } from '@backbase/data-ang/arrangements';
import { Pocket, PocketTailorClientHttpService } from '@backbase/data-ang/pocket-tailor';
import { Observable } from 'rxjs';
import { AccountItem } from '../model/accounts.model';
import { NewPocketItem, PocketResponse } from '../model/pocket-item.model';
import * as i0 from "@angular/core";
export declare class ManagePocketsService {
    private readonly pocketTailorService;
    private readonly productSummaryDataService;
    private readonly pocketListApiError;
    pocketListApiError$: Observable<boolean>;
    retrievePocketList(): Observable<PocketResponse>;
    postPocket(newPocketItem: Partial<NewPocketItem>): Observable<Pocket>;
    retrieveAccountList(): Observable<AccountItem[]>;
    private handleApiError;
    constructor(pocketTailorService: PocketTailorClientHttpService, productSummaryDataService: ProductSummaryHttpService);
    static ɵfac: i0.ɵɵFactoryDeclaration<ManagePocketsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ManagePocketsService>;
}
