import { ChangeDetectorRef, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { NotificationService } from '@backbase/ui-ang/notification';
import { Observable } from 'rxjs';
import { AccountItem } from '../manage-pockets-common/model/accounts.model';
import { PaymentFormItem } from '../manage-pockets-common/model/payment.model';
import { PocketTransferItem, TransferTypeEnum } from '../manage-pockets-common/model/pocket-item.model';
import { ManagePocketsService } from '../manage-pockets-common/services/manage-pockets.service';
import { PaymentOrderService } from '../manage-pockets-common/services/payment-order.service';
import { ManagePocketsJourneyConfigService } from '../manage-pockets-journey-config.service';
import * as i0 from "@angular/core";
export declare class ManagePocketsTransfersViewComponent implements OnInit {
    private readonly managePocketsService;
    private readonly paymentOrderService;
    private readonly router;
    private readonly route;
    private readonly cd;
    private readonly notificationService;
    readonly configService: ManagePocketsJourneyConfigService;
    accountList$?: Observable<AccountItem[]>;
    awaitingTransferResponse: boolean;
    pocketInfo?: PocketTransferItem;
    pocketLocalizations: {
        transfers: {
            details: {
                addMoneyContinueButton: string;
                addMoneyError: string;
                addMoneyHeader: string;
                withdrawMoneyContinueButton: string;
                withdrawMoneyError: string;
                withdrawMoneyHeader: string;
            };
            review: {
                addMoneyHeader: string;
                withdrawMoneyHeader: string;
            };
            wrapper: {
                addMoneyModalBody: string;
                addMoneyModalConfirm: string;
                addMoneyModalHeader: string;
                withdrawMoneyModalBody: string;
                withdrawMoneyModalConfirm: string;
                withdrawMoneyModalHeader: string;
            };
        };
        views: {
            transfers: {
                addMoneyHeader: string;
                withdrawMoneyHeader: string;
            };
        };
    };
    transferTypesEnum: typeof TransferTypeEnum;
    ngOnInit(): void;
    refreshAccountList(): void;
    abort(): void;
    performTransfer(paymentInfo: PaymentFormItem): void;
    private navigateToList;
    private pushNotification;
    private generateNotificationLocalizations;
    constructor(managePocketsService: ManagePocketsService, paymentOrderService: PaymentOrderService, router: Router, route: ActivatedRoute, cd: ChangeDetectorRef, notificationService: NotificationService, configService: ManagePocketsJourneyConfigService);
    static ɵfac: i0.ɵɵFactoryDeclaration<ManagePocketsTransfersViewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ManagePocketsTransfersViewComponent, "bb-manage-pockets-list-view", never, {}, {}, never, never>;
}
