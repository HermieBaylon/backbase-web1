import { EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';
import { ManagePocketsBaseWrapperComponent } from '../../../manage-pockets-common/components/manage-pockets-base-wrapper/manage-pockets-base-wrapper.component';
import { NewPocketItem } from '../../../manage-pockets-common/model/pocket-item.model';
import * as i0 from "@angular/core";
export declare class ManagePocketsCreateWrapperComponent extends ManagePocketsBaseWrapperComponent {
    pocketImageList?: string[];
    awaitingCreateResponse?: boolean;
    newPocket: EventEmitter<Partial<NewPocketItem>>;
    private pocketStore;
    partialPocket: Observable<Partial<NewPocketItem>>;
    goNext(partialPocket?: Partial<NewPocketItem>): void;
    saveNewPocket(newPocketItem: Partial<NewPocketItem>): void;
    private setCurrentUserValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<ManagePocketsCreateWrapperComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ManagePocketsCreateWrapperComponent, "bb-manage-pockets-create-wrapper", never, { "pocketImageList": "pocketImageList"; "awaitingCreateResponse": "awaitingCreateResponse"; }, { "newPocket": "newPocket"; }, never, never>;
}
