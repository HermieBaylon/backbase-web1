import { EventEmitter, OnInit } from '@angular/core';
import { ManagePocketsBaseWrapperComponent } from '../../../manage-pockets-common/components/manage-pockets-base-wrapper/manage-pockets-base-wrapper.component';
import { AccountItem } from '../../../manage-pockets-common/model/accounts.model';
import { PaymentFormItem } from '../../../manage-pockets-common/model/payment.model';
import { PocketTransferItem, TransferTypeEnum } from '../../../manage-pockets-common/model/pocket-item.model';
import * as i0 from "@angular/core";
export declare class ManagePocketsTransfersWrapperComponent extends ManagePocketsBaseWrapperComponent implements OnInit {
    accountList?: AccountItem[];
    awaitingTransferResponse?: boolean;
    partialNewPayment?: PaymentFormItem;
    pocketInfo?: PocketTransferItem;
    newTransfer: EventEmitter<PaymentFormItem>;
    transferTypesEnum: typeof TransferTypeEnum;
    pocketLocalizations: {
        transfers: {
            details: {
                addMoneyContinueButton: string;
                addMoneyError: string;
                addMoneyHeader: string;
                withdrawMoneyContinueButton: string;
                withdrawMoneyError: string;
                withdrawMoneyHeader: string;
            };
            review: {
                addMoneyHeader: string;
                withdrawMoneyHeader: string;
            };
            wrapper: {
                addMoneyModalBody: string;
                addMoneyModalConfirm: string;
                addMoneyModalHeader: string;
                withdrawMoneyModalBody: string;
                withdrawMoneyModalConfirm: string;
                withdrawMoneyModalHeader: string;
            };
        };
        views: {
            transfers: {
                addMoneyHeader: string;
                withdrawMoneyHeader: string;
            };
        };
    };
    ngOnInit(): void;
    accountChange(account: AccountItem): void;
    goNext(paymentData: PaymentFormItem): void;
    performTransfer(paymentInfo: PaymentFormItem): void;
    private generatePaymentInfo;
    static ɵfac: i0.ɵɵFactoryDeclaration<ManagePocketsTransfersWrapperComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ManagePocketsTransfersWrapperComponent, "bb-manage-pockets-transfers-wrapper", never, { "accountList": "accountList"; "awaitingTransferResponse": "awaitingTransferResponse"; "partialNewPayment": "partialNewPayment"; "pocketInfo": "pocketInfo"; }, { "newTransfer": "newTransfer"; }, never, never>;
}
