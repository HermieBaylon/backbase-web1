{"version":3,"file":"backbase-manage-pockets-journey-ang.js","sources":["../../../../libs/manage-pockets-journey/src/manage-pockets-common/components/manage-pockets-base-wrapper/manage-pockets-base-wrapper.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/helpers/formatting.helper.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/model/pocket-item.model.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/components/manage-pockets-card/manage-pockets-card.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/components/manage-pockets-card/manage-pockets-card.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-common/directives/accessibility-keyboard.directive.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/services/dom-attributes.service.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/directives/dynamic-id.directive.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/pipes/regex-replace.pipe.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/model/accounts.model.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/services/manage-pockets.service.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/manage-pockets-common.module.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/localization/manage-pockets-journey.localizations.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/components/manage-pockets-base-step/manage-pockets-base-step.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-create-base-step/manage-pockets-create-base-step.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-confirmation/manage-pockets-confirmation.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-confirmation/manage-pockets-confirmation.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-create/manage-pockets-create.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-create/manage-pockets-create.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-details/manage-pockets-details.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-details/manage-pockets-details.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-common/validators/form-validators.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-goals/manage-pockets-goals.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-goals/manage-pockets-goals.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-create-wrapper/manage-pockets-create-wrapper.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-create/components/manage-pockets-create-wrapper/manage-pockets-create-wrapper.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-create/manage-pockets-create.module.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-journey-config.service.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-journey.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-list/components/manage-pockets-empty-list/manage-pockets-empty-list.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-list/components/manage-pockets-empty-list/manage-pockets-empty-list.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-list/components/manage-pockets-list/manage-pockets-list.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-list/components/manage-pockets-list/manage-pockets-list.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-list/components/manage-pockets-list-wrapper/manage-pockets-list-wrapper.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-list/components/manage-pockets-list-wrapper/manage-pockets-list-wrapper.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-list/manage-pockets-list.module.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-transfers/components/manage-pockets-transfers-details/manage-pockets-transfers-details.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-transfers/components/manage-pockets-transfers-details/manage-pockets-transfers-details.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-transfers/components/manage-pockets-transfers-review/manage-pockets-transfers-review.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-transfers/components/manage-pockets-transfers-review/manage-pockets-transfers-review.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-transfers/components/manage-pockets-transfers-wrapper/manage-pockets-transfers-wrapper.component.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-transfers/components/manage-pockets-transfers-wrapper/manage-pockets-transfers-wrapper.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-transfers/manage-pockets-transfers.module.ts","../../../../libs/manage-pockets-journey/src/views/manage-pockets-create-view.component.ts","../../../../libs/manage-pockets-journey/src/views/manage-pockets-create-view.component.html","../../../../libs/manage-pockets-journey/src/views/manage-pockets-list-view.component.ts","../../../../libs/manage-pockets-journey/src/views/manage-pockets-list-view.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-common/model/payment.model.ts","../../../../libs/manage-pockets-journey/src/manage-pockets-common/services/payment-order.service.ts","../../../../libs/manage-pockets-journey/src/views/manage-pockets-transfers-view.component.ts","../../../../libs/manage-pockets-journey/src/views/manage-pockets-transfers-view.component.html","../../../../libs/manage-pockets-journey/src/manage-pockets-journey.module.ts","../../../../libs/manage-pockets-journey/backbase-manage-pockets-journey-ang.ts"],"sourcesContent":["import { Directive, EventEmitter, Input, Output } from '@angular/core';\n\n@Directive()\nexport class ManagePocketsBaseWrapperComponent {\n  @Input() journeyCurrency?: string;\n  @Output() cancel = new EventEmitter<void>();\n\n  currentStep = 1;\n  showDialog = false;\n\n  confirmAbort() {\n    this.cancel.emit();\n    this.showDialog = false;\n  }\n\n  showAbortDialog() {\n    this.showDialog = true;\n  }\n\n  closeAbortDialog() {\n    this.showDialog = false;\n  }\n\n  goBack() {\n    this.goToStep(this.currentStep - 1);\n  }\n\n  protected goToStep(value: number) {\n    this.currentStep = value;\n  }\n}\n","export function pocketFormatDate(date: Date = new Date()) {\n  date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n  return date.toISOString().slice(0, 10);\n}\n","import { PostPocketRequestParams } from '@backbase/data-ang/pocket-tailor';\nimport { pocketFormatDate } from '../helpers/formatting.helper';\n\nexport interface PocketResponse {\n  pockets?: PocketItem[];\n}\n\nexport interface PocketItem extends NewPocketItem {\n  id: string;\n  arrangementId: string;\n  balance: PocketBalance;\n  goal?: PocketGoal;\n}\nexport interface NewPocketItem {\n  name: string;\n  icon: string;\n  goal?: NewPocketGoal;\n}\n\nexport interface PocketGoal extends NewPocketGoal {\n  progress?: number;\n}\n\nexport interface NewPocketGoal {\n  amountCurrency?: PocketBalance;\n  deadline?: string;\n}\n\nexport interface PocketBalance {\n  amount: string;\n  currencyCode: string;\n  additions?: any;\n}\n\nexport interface PocketItemDropdown {\n  label: string;\n  value: TransferType;\n}\n\nexport interface PocketTransferItem {\n  pocket: PocketItem;\n  transferType: TransferType;\n}\n\nexport type TransferType = 'ADD' | 'WITHDRAW';\nexport enum TransferTypeEnum {\n  ADD = 'ADD',\n  WITHDRAW = 'WITHDRAW',\n}\n\nexport namespace PocketNamespace {\n  export function buildNewPocketPostRequest(pocketItem: Partial<NewPocketItem>): PostPocketRequestParams {\n    const { name = '', icon = '', goal = {}, ...others } = pocketItem;\n\n    return {\n      pocketPostRequest: {\n        name,\n        icon,\n        goal: formatGoal(goal),\n        ...others,\n      },\n    };\n  }\n\n  function formatGoal(pocketGoal?: NewPocketGoal) {\n    const amount = pocketGoal?.amountCurrency?.amount || undefined;\n    const currencyCode = pocketGoal?.amountCurrency?.currencyCode || undefined;\n\n    const deadline = pocketGoal?.deadline ? pocketFormatDate(new Date(pocketGoal.deadline)) : undefined;\n    const amountCurrency: PocketBalance | undefined = amount && currencyCode ? { amount, currencyCode } : undefined;\n\n    return {\n      ...(!!deadline ? { deadline } : {}),\n      ...(!!amountCurrency ? { amountCurrency } : {}),\n    };\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { PocketItem, PocketItemDropdown, PocketTransferItem, TransferTypeEnum } from '../../model/pocket-item.model';\n\n@Component({\n  selector: 'bb-manage-pockets-card',\n  templateUrl: './manage-pockets-card.component.html',\n})\nexport class ManagePocketsCardComponent implements OnInit {\n  @Input() pocket?: PocketItem;\n  @Output() pocketTransfer = new EventEmitter<PocketTransferItem>();\n\n  pocketImage?: Observable<string>;\n  dropdownMenuOptions: PocketItemDropdown[] = [\n    {\n      label: $localize`:Add Money dropdown option@@managePockets.common.card.dropdown.addMoney.label:Add Money`,\n      value: TransferTypeEnum.ADD,\n    },\n    {\n      label: $localize`:Withdraw Money dropdown option@@managePockets.common.card.dropdown.withdrawMoney.label:Withdraw Money`,\n      value: TransferTypeEnum.WITHDRAW,\n    },\n  ];\n  dropdownMenuOptionsLabel = this.dropdownMenuOptions.map((item) => item.label);\n\n  private resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-manage-pockets-journey-ang',\n    getURIFromAssetID: (assetId: string) => assetId,\n  });\n\n  ngOnInit() {\n    this.pocketImage = this.resolveAsset(`${this.pocket!.icon}-img.webp`);\n  }\n\n  onButtonDropdownSelect(label: string) {\n    const item = this.dropdownMenuOptions.find((option) => option.label === label);\n\n    if (item && this.pocket) {\n      this.pocketTransfer.emit({\n        pocket: this.pocket,\n        transferType: item.value,\n      });\n    }\n  }\n\n  constructor(private readonly assetsService: AssetsService) {}\n}\n","<div class=\"bb-card bb-card--lg\">\n  <div class=\"bb-card__body\">\n    <div class=\"bb-stack bb-stack--wrap\">\n      <div class=\"bb-stack__item bb-stack__item--spacing-lg bb-manage-pockets-common-pocket-card__pocket-image-container\">\n        <img \n          [src]=\"pocketImage | async\" \n          alt=\"Representation of the selected pocket type\" \n          i18n-alt=\"Pocket image|changes according to the type of pocket@@managePockets.common.card.pocketImage\" \n          class=\"bb-manage-pockets-common-pocket-card__pocket-image\"\n        >\n      </div>\n      <div class=\"bb-stack__break bb-stack__break--sm-down\"></div>\n      <div class=\"bb-stack__item bb-stack__item--fill\">\n        <div class=\"bb-block bb-block--md\">\n          <div class=\"bb-stack\">\n            <div class=\"bb-stack__item\">\n              <h2 class=\"bb-block bb-block--no-margin\">\n                {{pocket?.name}}\n              </h2>\n            </div>\n            <div class=\"bb-stack__item bb-stack__item--push-right\">\n              <bb-dropdown-menu-ui\n                icon=\"ellipsis-h\"\n                btnColor=\"link-dark\"\n                [btnCircle]=\"true\"\n                container=\"body\"\n                [options]=\"dropdownMenuOptionsLabel\"\n                (select)=\"onButtonDropdownSelect($event)\"\n              ></bb-dropdown-menu-ui>\n            </div>\n          </div>\n        </div>\n        <div class=\"bb-block bb-block--sm bb-subtitle bb-text-support\">\n          <span i18n=\"Available Balance|Current stored balance in pocket@@managePockets.common.card.availableBalance\">\n            Available Balance\n          </span\n          ><span *ngIf=\"!!pocket?.goal?.amountCurrency?.amount\" i18n=\"Pocket Goal|Expected amount to reach to complete pocket@@managePockets.common.card.goalAmount\">\n            / Goal Amount\n          </span>\n        </div>\n        <div class=\"bb-block\" [ngClass]=\"{ 'bb-block--xl': pocket?.goal?.progress != undefined }\">\n          <span class=\"bb-heading-2\">\n            <bb-amount-ui\n              [amount]=\"pocket?.balance?.amount\"\n              [currency]=\"pocket?.balance?.currencyCode\"\n            ></bb-amount-ui>\n          </span>\n          <span class=\"bb-manage-pockets-common-pocket-card__goal-amount bb-heading-3 bb-text-support\" *ngIf=\"!!pocket?.goal?.amountCurrency?.amount\">\n            /\n            <bb-amount-ui\n              [amount]=\"pocket?.goal?.amountCurrency?.amount\"\n              [currency]=\"pocket?.goal?.amountCurrency?.currencyCode\"\n              [decimalPlaces]=\"0\"\n            ></bb-amount-ui>\n          </span>\n        </div>\n        <ng-container *ngIf=\"!!pocket?.goal\">\n          <div class=\"bb-block bb-block--sm\" *ngIf=\"!!pocket?.goal?.progress || pocket?.goal?.progress == 0\">\n            <bb-progressbar-ui\n              [type]=\"pocket?.goal?.progress != '100' ? 'primary' : 'success'\"\n              height=\"8px\"\n              [value]=\"pocket?.goal?.progress\"\n            >\n            </bb-progressbar-ui>\n          </div>\n          <div class=\"bb-block\">\n            <div class=\"bb-stack\">\n              <div class=\"bb-stack__item\" *ngIf=\"!!pocket?.goal?.progress || pocket?.goal?.progress == 0\">\n                <div [ngClass]=\"pocket?.goal?.progress != 100 ? 'bb-text-primary' : 'bb-text-success'\">\n                  <span class=\"bb-manage-pockets-common-pocket-card__goal-percentage\">\n                    <bb-amount-ui\n                      [amount]=\"pocket?.goal?.progress\"\n                      [showPercent]=\"true\"\n                      [trailingZeroes]=\"false\"\n                    ></bb-amount-ui>\n                    <span i18n=\"Completed|Percentage of the goal currently completed@@managePockets.common.card.amountCompleted\">\n                      Completed\n                    </span>\n                  </span>\n                  <bb-icon-ui\n                    *ngIf=\"pocket?.goal?.progress == '100'\"\n                    name=\"check\"\n                    [inverse]=\"true\"\n                    size=\"sm\"\n                  ></bb-icon-ui>\n                </div>\n              </div>\n              <div class=\"bb-stack__item bb-stack__item--push-right bb-text-support\" *ngIf=\"!!pocket?.goal?.deadline\">\n                <bb-icon-ui\n                  name=\"calendar-today\"\n                  [inverse]=\"true\"\n                  size=\"sm\"\n                ></bb-icon-ui>\n                <span class=\"bb-manage-pockets-common-pocket-card__deadline-date\">\n                  {{pocket?.goal?.deadline | date}}\n                </span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[bbAccessibilityKeyboard]',\n})\nexport class AccessibilityKeyboardDirective {\n  constructor(readonly element: ElementRef) {\n    element.nativeElement.tabIndex = 0;\n  }\n\n  // eslint-disable-next-line\n  @HostListener('keydown.enter', ['$event'])\n  // eslint-disable-next-line\n  @HostListener('keydown.space', ['$event'])\n  eventListener(event: any) {\n    this.element.nativeElement.click(event);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Utility service for DOM manipulations\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DomAttributesService {\n  private basePrefix = 'bb_manage_pockets';\n  private idCounter = 0;\n\n  public nextId(prefix?: string) {\n    return `${this.basePrefix}-${!!prefix ? prefix : 'default'}-${Date.now()}-${this.idCounter++}`;\n  }\n}\n","import { ChangeDetectorRef, Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\nimport { DomAttributesService } from '../services/dom-attributes.service';\n\n/**\n * Dynamic id generator\n * Intended use is to improve accesibility by relating inputs to other label or error messages\n *\n * <label [for]=\"labelInput.id\"> Label </label>\n * <input bbDynamicId #labelInput />\n */\n\n@Directive({\n  selector: '[bbDynamicId]',\n  exportAs: 'bbDynamicId',\n})\nexport class DynamicIdDirective implements OnInit {\n  constructor(\n    private readonly _elRef: ElementRef,\n    private readonly _renderer: Renderer2,\n    private readonly domAttributesService: DomAttributesService,\n    private readonly cd: ChangeDetectorRef,\n  ) {}\n\n  @Input() bbDynamicId: string | undefined;\n\n  ngOnInit() {\n    setTimeout(() => {\n      this._renderer.setAttribute(this._elRef.nativeElement, 'id', this.domAttributesService.nextId(this.bbDynamicId));\n      this.cd.markForCheck();\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bbRegexReplace',\n})\nexport class RegexReplacePipe implements PipeTransform {\n  transform(value: string, regexValue: string, replaceValue: string): any {\n    let regex = new RegExp(regexValue, 'g');\n    return value.replace(regex, replaceValue);\n  }\n}\n","import { ProductSummaryItem } from '@backbase/product-summary-common-ang';\n\nexport interface AccountItem {\n  id: string;\n  name: string;\n  balance?: number;\n  number?: string;\n  currency?: string;\n  favorite?: boolean;\n  bankBranchCode?: string;\n}\n\nexport namespace AccountsNamespace {\n  export function formatHttpresponse(accountList: ProductSummaryItem[]): AccountItem[] {\n    const formattedItem: AccountItem[] = accountList.map((account) => ({\n      id: account.id,\n      name: account.name || '',\n      balance: account.availableBalance,\n      number: account.number,\n      currency: account.currency,\n      favorite: account.favorite,\n      bankBranchCode: account.bankBranchCode,\n    }));\n    return formattedItem;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  GetArrangementsByBusinessFunctionRequestParams,\n  ProductSummaryHttpService,\n} from '@backbase/data-ang/arrangements';\nimport { Pocket, PocketTailorClientHttpService } from '@backbase/data-ang/pocket-tailor';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AccountItem, AccountsNamespace } from '../model/accounts.model';\nimport { NewPocketItem, PocketNamespace, PocketResponse } from '../model/pocket-item.model';\n\n@Injectable()\nexport class ManagePocketsService {\n  private readonly pocketListApiError = new BehaviorSubject(false);\n  pocketListApiError$ = this.pocketListApiError.asObservable();\n\n  retrievePocketList(): Observable<PocketResponse> {\n    this.pocketListApiError.next(false);\n    return this.pocketTailorService.listPockets().pipe(catchError(this.handleApiError));\n  }\n\n  postPocket(newPocketItem: Partial<NewPocketItem>): Observable<Pocket> {\n    const payload = PocketNamespace.buildNewPocketPostRequest(newPocketItem);\n    return this.pocketTailorService.postPocket(payload);\n  }\n\n  retrieveAccountList(): Observable<AccountItem[]> {\n    const RESOURCE_NAME = 'Payments';\n    const PRIVILEGE = 'create';\n    const FROM_PAGES = 0;\n    const PAGE_SIZE = 50;\n    const BUSINESS_FUNCTION = 'A2A Transfer';\n    const productSummaryParameters: GetArrangementsByBusinessFunctionRequestParams = {\n      businessFunction: BUSINESS_FUNCTION,\n      resourceName: RESOURCE_NAME,\n      privilege: PRIVILEGE,\n      from: FROM_PAGES,\n      size: PAGE_SIZE,\n    };\n    return this.productSummaryDataService\n      .getArrangementsByBusinessFunction(productSummaryParameters)\n      .pipe(map(AccountsNamespace.formatHttpresponse));\n  }\n\n  private handleApiError = () => {\n    this.pocketListApiError.next(true);\n    return of({ pockets: [] });\n  };\n\n  constructor(\n    private readonly pocketTailorService: PocketTailorClientHttpService,\n    private readonly productSummaryDataService: ProductSummaryHttpService,\n  ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AmountModule } from '@backbase/ui-ang/amount';\nimport { ButtonModule } from '@backbase/ui-ang/button';\nimport { DropdownMenuModule } from '@backbase/ui-ang/dropdown-menu';\nimport { EmptyStateModule } from '@backbase/ui-ang/empty-state';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { ProgressbarModule } from '@backbase/ui-ang/progressbar';\nimport { ManagePocketsCardComponent } from './components/manage-pockets-card/manage-pockets-card.component';\nimport { AccessibilityKeyboardDirective } from './directives/accessibility-keyboard.directive';\nimport { DynamicIdDirective } from './directives/dynamic-id.directive';\nimport { RegexReplacePipe } from './pipes/regex-replace.pipe';\nimport { DomAttributesService } from './services/dom-attributes.service';\nimport { ManagePocketsService } from './services/manage-pockets.service';\n\nconst modules = [AmountModule, ButtonModule, DropdownMenuModule, EmptyStateModule, IconModule, ProgressbarModule];\nconst components = [AccessibilityKeyboardDirective, DynamicIdDirective, ManagePocketsCardComponent, RegexReplacePipe];\n\n@NgModule({\n  imports: [CommonModule, ...modules],\n  providers: [ManagePocketsService, DomAttributesService],\n  declarations: [...components],\n  exports: [...components, ...modules],\n})\nexport class ManagePocketsCommonModule {}\n","export const POCKET_LOCALIZATIONS = {\n  transfers: {\n    details: {\n      addMoneyContinueButton: $localize`:Review Transfer@@managePockets.transfers.details.button.continue.add:Review Transfer`,\n      addMoneyError: $localize`:Your account balance is insufficient@@managePockets.transfers.details.amount.error.add.max:Your account balance is insufficient`,\n      addMoneyHeader: $localize`:From Account@@managePockets.transfers.details.heading.addMoney:From Account`,\n      withdrawMoneyContinueButton: $localize`:Review Withdrawal@@managePockets.transfers.details.button.continue.withdraw:Review Withdrawal`,\n      withdrawMoneyError: $localize`:Your pocket balance is insufficient@@managePockets.transfers.details.amount.error.withdraw.max:Your pocket balance is insufficient`,\n      withdrawMoneyHeader: $localize`:To Account@@managePockets.transfers.details.heading.withdrawMoney:To Account`,\n    },\n    review: {\n      addMoneyHeader: $localize`:Review Your Transfer@@managePockets.transfers.review.header.add:Review Your Transfer`,\n      withdrawMoneyHeader: $localize`:Review Your Withdrawal@@managePockets.transfers.review.header.withdraw:Review Your Withdrawal`,\n    },\n    wrapper: {\n      addMoneyModalBody: $localize`:All transfer information will be permanently lost.@@managePockets.transfers.wrapper.modal.body.add:All transfer information will be permanently lost.`,\n      addMoneyModalConfirm: $localize`:Discard Transfer@@managePockets.transfers.wrapper.modal.button.confirm.add:Discard Transfer`,\n      addMoneyModalHeader: $localize`:Discard Transfer?@@managePockets.transfers.wrapper.modal.header.add:Discard Transfer?`,\n      withdrawMoneyModalBody: $localize`:All withdrawal information will be permanently lost.@@managePockets.transfers.wrapper.modal.body.withdraw:All withdrawal information will be permanently lost.`,\n      withdrawMoneyModalConfirm: $localize`:Discard Withdrawal@@managePockets.transfers.wrapper.modal.button.confirm.withdraw:Discard Withdrawal`,\n      withdrawMoneyModalHeader: $localize`:Discard Withdrawal?@@managePockets.transfers.wrapper.modal.header.withdraw:Discard Withdrawal?`,\n    },\n  },\n  views: {\n    transfers: {\n      addMoneyHeader: $localize`:Add Money@@managePockets.transfersView.heading.add:Add Money`,\n      withdrawMoneyHeader: $localize`:Withdraw Money@@managePockets.transfersView.heading.withdraw:Withdraw Money`,\n    },\n  },\n};\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { POCKET_LOCALIZATIONS } from '../../localization/manage-pockets-journey.localizations';\nimport { PaymentFormItem } from '../../model/payment.model';\nimport { TransferTypeEnum } from '../../model/pocket-item.model';\n\n@Directive()\n// eslint-disable-next-line\nexport abstract class ManagePocketsBaseStep {\n  @Output() back = new EventEmitter<void>();\n  @Output() cancel = new EventEmitter<void>();\n  @Input() journeyCurrency?: string;\n  @Input() partialNewPayment?: PaymentFormItem;\n  pocketLocalizations = POCKET_LOCALIZATIONS;\n  transferTypesEnum = TransferTypeEnum;\n\n  goBack() {\n    this.back.emit();\n  }\n\n  abort() {\n    this.cancel.emit();\n  }\n\n  isFieldValid(form?: FormGroup, fieldName?: string): boolean {\n    const controlField = form?.get(fieldName || '');\n    return !!controlField?.valid || !!controlField?.untouched;\n  }\n\n  getFieldErrors(form?: FormGroup, field?: string) {\n    return form?.get(field || '')?.errors;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { ManagePocketsBaseStep } from '../../../manage-pockets-common/components/manage-pockets-base-step/manage-pockets-base-step';\nimport { NewPocketItem } from '../../../manage-pockets-common/model/pocket-item.model';\n\n@Directive()\n// eslint-disable-next-line\nexport abstract class ManagePocketsCreateBaseStep extends ManagePocketsBaseStep {\n  @Output() next = new EventEmitter<Partial<NewPocketItem>>();\n  @Input() partialPocket?: Partial<NewPocketItem>;\n\n  goNext(newPocket: Partial<NewPocketItem>) {\n    this.next.emit(newPocket);\n  }\n\n  constructor() {\n    super();\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { NewPocketItem } from '../../../manage-pockets-common/model/pocket-item.model';\nimport { ManagePocketsCreateBaseStep } from '../manage-pockets-create-base-step/manage-pockets-create-base-step';\n\n@Component({\n  selector: 'bb-manage-pockets-confirmation',\n  templateUrl: './manage-pockets-confirmation.component.html',\n})\nexport class ManagePocketsConfirmationComponent extends ManagePocketsCreateBaseStep implements OnInit {\n  @Input() awaitingCreateResponse?: boolean;\n  @Output() newPocket = new EventEmitter<Partial<NewPocketItem>>();\n  selectedImageAssetUrl?: Observable<string>;\n\n  ngOnInit(): void {\n    this.selectedImageAssetUrl = this.resolveAsset(`${this.partialPocket?.icon}-img.webp`);\n  }\n\n  saveNewPocket() {\n    this.newPocket.emit(this.partialPocket);\n  }\n\n  private resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-manage-pockets-journey-ang',\n    getURIFromAssetID: (assetId: string) => assetId,\n  });\n\n  constructor(protected readonly assetsService: AssetsService) {\n    super();\n  }\n}\n","<div class=\"bb-block bb-block--xl\">\n  <h2 i18n=\"Review And Confirm Your Pocket Details@@managePockets.create.confirmation.header\">\n    Review And Confirm Your Pocket Details\n  </h2>\n</div>\n\n<div class=\"bb-block bb-block--md\">\n  <div class=\"bb-stack bb-stack--density-xl bb-stack--wrap\">\n    <div class=\"bb-stack__item\">\n      <!-- Pocket Image -->\n      <img \n        [src]=\"selectedImageAssetUrl | async\" \n        class=\"bb-manage-pockets-common-pocket-card__pocket-image bb-block bb-block--sm\" \n        alt=\"Representation of the selected pocket type\"\n        i18n-alt=\"Pocket image|changes according to the type of pocket@@managePockets.create.confirmation.selectedImageAssetUrl\"\n      >\n    </div>\n    <div class=\"bb-stack__break bb-stack__break--xs bb-block bb-block--lg\"></div>\n    <div class=\"bb-stack__item bb-stack__item--align-top\">\n      <!-- Pocket Name  -->\n      <div class=\"bb-block bb-block--md\">\n        <p class=\"bb-block bb-block--no-margin bb-subtitle bb-text-support\" i18n=\"Pocket Name@@managePockets.create.confirmation.name.label\">\n          Pocket Name\n        </p>\n        <h3>{{partialPocket?.name}}</h3>  \n      </div>\n  \n      <!-- Goal Date -->\n      <div class=\"bb-block bb-block--md\" *ngIf=\"partialPocket?.goal?.deadline | date as pocketDate\">\n        <p class=\"bb-block bb-block--no-margin bb-subtitle bb-text-support\" i18n=\"Goal Date@@managePockets.create.confirmation.date.label\">\n          Goal Date\n        </p>\n        <h3>{{pocketDate | date}}</h3>  \n      </div>\n  \n      <!-- Goal Amount -->\n      <div class=\"bb-block bb-block--md\" *ngIf=\"partialPocket?.goal?.amountCurrency?.amount as pocketAmount\">\n        <p class=\"bb-block bb-block--no-margin bb-subtitle bb-text-support\" i18n=\"Goal Amount@@managePockets.create.confirmation.amount.label\">\n          Goal Amount\n        </p>\n        <h3>\n          <bb-amount-ui\n            [currency]=\"journeyCurrency\"\n            [amount]=\"pocketAmount\"\n            [mapCurrency]=\"true\"\n          ></bb-amount-ui>\n        </h3>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"bb-button-bar\">    \n  <bb-load-button-ui\n    i18n=\"Confirm Pocket@@managePockets.create.confirmation.button.continue\"\n    color=\"primary\"\n    class=\"bb-button-bar__button\"\n    [isLoading]=\"awaitingCreateResponse\"\n    (click)=\"!awaitingCreateResponse && saveNewPocket()\"\n  >\n    Confirm Pocket\n  </bb-load-button-ui>\n  <button \n    bbButton\n    i18n=\"Back@@managePockets.create.confirmation.button.back\"\n    class=\"bb-button-bar__button\"\n    color=\"secondary\" \n    (click)=\"goBack()\"\n  >\n    Back\n  </button>\n  <button \n    bbButton \n    color=\"link\"\n    class=\"bb-button-bar__button bb-button-bar__button--across\"\n    i18n=\"Cancel@@managePockets.create.confirmation.button.cancel\"\n    (click)=\"abort()\"\n  >\n    Cancel\n  </button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'bb-manage-pockets-create',\n  templateUrl: './manage-pockets-create.component.html',\n})\nexport class ManagePocketsCreateComponent {}\n","<div class=\"bb-card bb-card--lg\">\n  <div class=\"bb-card__body\">\n    <ng-content></ng-content>\n  </div>\n</div>","import { TitleCasePipe } from '@angular/common';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { NewPocketItem } from '../../../manage-pockets-common/model/pocket-item.model';\nimport { RegexReplacePipe } from '../../../manage-pockets-common/pipes/regex-replace.pipe';\nimport { ManagePocketsCreateBaseStep } from '../manage-pockets-create-base-step/manage-pockets-create-base-step';\n\n@Component({\n  selector: 'bb-manage-pockets-details',\n  templateUrl: './manage-pockets-details.component.html',\n})\nexport class ManagePocketsDetailsComponent extends ManagePocketsCreateBaseStep implements OnInit {\n  @Input() pocketImageList?: string[];\n  pocketDetailsForm?: FormGroup;\n  selectedImageAssetUrl?: Observable<string>;\n  showDialog = false;\n\n  ngOnInit(): void {\n    const defaultImage = this.pocketImageList?.[0] || 'home';\n    this.pocketDetailsForm = this.formBuilder.group({\n      name: [this.partialPocket?.name || this.formatName(defaultImage), Validators.required],\n      icon: [this.partialPocket?.icon || defaultImage, Validators.required],\n    });\n    this.selectedImageAssetUrl = this.resolveAsset(`${this.partialPocket?.icon || defaultImage}-img.webp`);\n  }\n\n  formatName(pocketName: string): string {\n    const titleCasePipe = new TitleCasePipe();\n    const regexPipe = new RegexReplacePipe();\n    let formatedTittle = pocketName;\n    formatedTittle = regexPipe.transform(formatedTittle, '-', ' ');\n    formatedTittle = titleCasePipe.transform(formatedTittle);\n\n    return formatedTittle;\n  }\n\n  openDialog() {\n    this.showDialog = true;\n  }\n\n  closeDialog() {\n    this.showDialog = false;\n  }\n\n  changeType(img: string) {\n    this.pocketDetailsForm!.patchValue({ name: this.formatName(img), icon: img });\n    this.selectedImageAssetUrl = this.resolveAsset(`${img}-img.webp`);\n    this.closeDialog();\n  }\n\n  getImage(img: string): Observable<string> {\n    return this.resolveAsset(`${img}-img.webp`);\n  }\n\n  isTypeSelected(img: string): boolean {\n    return this.pocketDetailsForm!.get('icon')!.value === img;\n  }\n\n  save() {\n    if (this.pocketDetailsForm!.valid) {\n      this.goNext(this.formatDetailsValues());\n    } else {\n      this.pocketDetailsForm!.markAllAsTouched();\n    }\n  }\n\n  private formatDetailsValues(): Partial<NewPocketItem> {\n    const { name, icon } = this.pocketDetailsForm!.value;\n    return { name, icon };\n  }\n\n  private resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-manage-pockets-journey-ang',\n    getURIFromAssetID: (assetId: string) => assetId,\n  });\n\n  constructor(private readonly formBuilder: FormBuilder, protected readonly assetsService: AssetsService) {\n    super();\n  }\n}\n","<div class=\"bb-block bb-block--xl\">\n  <h2 i18n=\"Choose Your Pocket Image and Name@@managePockets.create.details.header\">\n    Choose Your Pocket Image and Name\n  </h2>\n</div>\n<form [formGroup]=\"pocketDetailsForm\" (submit)=\"save()\">\n  <div class=\"bb-block bb-block--xl\">\n    <div class=\"bb-stack bb-stack--wrap bb-stack--align-top\">\n      <div class=\"bb-stack__item bb-stack__item--spacing-xl bb-manage-pockets-create-details__pocket-image-container\">\n        <img \n          [src]=\"selectedImageAssetUrl | async\" \n          class=\"bb-manage-pockets-create-details__pocket-image bb-block bb-block--sm\" \n          alt=\"Representation of the selected pocket type\"\n          i18n-alt=\"Pocket image|changes according to the type of pocket@@managePockets.create.details.selectedImageAssetUrl\"\n          (click)=\"openDialog()\"\n        >\n        <div>\n          <button\n            #button\n            bbButton\n            buttonSize=\"sm\"\n            [block]=\"true\"\n            color=\"link-text\"\n            (click)=\"openDialog()\"\n            i18n=\"Change image button@@managePockets.create.details.button.changeImage\"\n          >\n            Change image\n          </button>\n        </div>\n      </div>\n      <div class=\"bb-stack__break bb-stack__break--xs-down\"></div>\n      <div class=\"bb-stack__item bb-manage-pockets-create-details__input-container\">\n        <bb-input-text-ui\n          formControlName=\"name\"\n          data-role=\"manage-pocket-creation-name\"\n          label=\"What's this Pocket for?\"\n          i18n-label=\"What's this Pocket for?@@managePockets.create.details.input.label\"\n          maxLength=\"50\"\n          [attr.aria-invalid]=\"!isFieldValid(pocketDetailsForm, 'name')\"\n          [attr.aria-describedby]=\"pocketNameError?.id\"\n        ></bb-input-text-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid(pocketDetailsForm, 'name')\">\n          <span \n            #pocketNameError\n            bbDynamicId\n            data-role=\"user-details-phone-number-validation-msg\"\n            i18n=\"You need to specify a Pocket name@@managePockets.create.details.input.validationError.required\"\n          >\n            You need to specify a Pocket name\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      i18n=\"Continue@@managePockets.create.details.button.continue\"\n      class=\"bb-button-bar__button\" \n      type=\"submit\"\n    >\n      Continue\n    </button>\n    <button \n      bbButton \n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel@@managePockets.create.details.button.cancel\"\n      (click)=\"abort()\"\n    >\n      Cancel\n    </button>\n  </div>\n</form>\n\n<bb-modal-ui [isOpen]=\"showDialog\" (cancel)=\"closeDialog()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item\">\n          <span class=\"modal-title\" i18n=\"Choose pocket image@@managePockets.create.details.modal.title\">\n            Choose Pocket Image\n          </span>\n        </div>\n        <div class=\"bb-stack__item--push-right\">\n          <button\n            bbButton\n            (click)=\"closeDialog()\"\n            class=\"bb-stack__item-sm\"\n            color=\"unstyled\"\n            aria-label=\"close dialog\"\n            i18n-aria-label=\"close dialog button@@managePockets.create.details.modal.button.close\"\n          >\n            <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <div class=\"bb-stack bb-stack--wrap\">\n        <div class=\"bb-stack__box-item bb-manage-pockets-create-details__modal-image-item\" *ngFor=\"let imageName of pocketImageList\" bbAccessibilityKeyboard (click)=\"changeType(imageName)\">\n          <div class=\"bb-block bb-block--sm\">\n            <img\n              class=\"bb-manage-pockets-create-details__pocket-image\"\n              [ngClass]=\"{ 'active': isTypeSelected(imageName)}\"\n              [src]=\"getImage(imageName) | async\" \n              alt=\"\" \n            >\n          </div>\n          <p class=\"bb-text-align-center bb-subtitle bb-text-bold\" [ngClass]=\"isTypeSelected(imageName) ? 'bb-text-primary' : 'bb-text-support'\">\n            {{imageName | bbRegexReplace: '-' : ' ' | titlecase}}\n          </p>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-body-ui>\n</bb-modal-ui>","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport function nonZero(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const validAmount = control.value.length === 0 || control.value != 0;\n    return validAmount ? null : { isZero: true };\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { NewPocketItem } from '../../../manage-pockets-common/model/pocket-item.model';\nimport { nonZero } from '../../../manage-pockets-common/validators/form-validators';\nimport { ManagePocketsCreateBaseStep } from '../manage-pockets-create-base-step/manage-pockets-create-base-step';\n\n@Component({\n  selector: 'bb-manage-pockets-goals',\n  templateUrl: './manage-pockets-goals.component.html',\n})\nexport class ManagePocketsGoalsComponent extends ManagePocketsCreateBaseStep implements OnInit {\n  pocketGoalsForm?: FormGroup;\n  readonly today = new Date();\n  readonly minDate = new Date(\n    this.today.getFullYear(),\n    this.today.getMonth(),\n    this.today.getDate(),\n    0,\n    0,\n  ).toISOString();\n\n  ngOnInit(): void {\n    this.pocketGoalsForm = this.formBuilder.group({\n      amount: [this.partialPocket?.goal?.amountCurrency?.amount || '', nonZero()],\n      deadline: [this.partialPocket?.goal?.deadline || ''],\n    });\n  }\n\n  save() {\n    if (this.pocketGoalsForm!.valid) {\n      this.goNext(this.formatGoalsValues());\n    } else {\n      this.pocketGoalsForm!.markAllAsTouched();\n    }\n  }\n\n  private formatGoalsValues(): Partial<NewPocketItem> {\n    const { amount, deadline } = this.pocketGoalsForm!.value;\n    return { goal: { amountCurrency: { amount, currencyCode: this.journeyCurrency! }, deadline } };\n  }\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n}\n","<div class=\"bb-block bb-block--sm\">\n  <h2 i18n=\"Choose Your Goal Amount And Date@@managePockets.create.goals.header\">\n    Choose Your Goal Amount And Date\n  </h2>\n</div>\n<div class=\"bb-block bb-block--xl\">\n  <p class=\"bb-text-support bb-subtitle\" i18n=\"You can choose to skip this step by clicking 'Continue'@@managePockets.create.goals.description\">\n    You can choose to skip this step by clicking 'Continue'.\n  </p>\n</div>\n\n<form [formGroup]=\"pocketGoalsForm\" (submit)=\"save()\">\n  <div class=\"bb-block--lg\">\n\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--xl col-md-6\">\n        <bb-amount-input-ui\n          label=\"Goal Amount\"\n          i18n-label=\"Goal Amount@@managePockets.create.goals.amount.label\"\n          [attr.aria-invalid]=\"!isFieldValid(pocketGoalsForm, 'amount')\"\n          [attr.aria-describedby]=\"goalAmountZeroError?.id\"\n          formControlName=\"amount\"\n          [currency]=\"journeyCurrency\"\n          placeholder=\"0.00\"\n          i18n-placeholder=\"0.00|Price example@@managePockets.create.goals.amount.placeholder\"\n        ></bb-amount-input-ui>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid(pocketGoalsForm, 'amount')\">\n          <span i18n=\"Goal amount can only be bigger than 0 or empty@@managePockets.create.goals.amount.error.zero\" bbDynamicId #goalAmountZeroError>\n            Goal amount can only be bigger than 0 or empty\n          </span>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"bb-block bb-block--sm col-md-6\">\n        <bb-input-datepicker-ui\n          label=\"Goal Date\"\n          i18n-label=\"Goal Date@@managePockets.create.goals.deadline.label\"\n          [attr.aria-invalid]=\"!isFieldValid(pocketGoalsForm, 'deadline')\"\n          datepickerDescribedby=\"{{datePickerDescription?.id}} {{datePickerError?.id}}\"\n          formControlName=\"deadline\"\n          [minDate]=\"minDate\"\n        ></bb-input-datepicker-ui>\n      </div>\n    </div>\n    <div bbDynamicId #datePickerError>\n      <bb-input-validation-message-ui [showErrors]=\"!isFieldValid(pocketGoalsForm, 'deadline')\">\n        <ng-container *ngFor=\"let error of getFieldErrors(pocketGoalsForm, 'deadline') | keyvalue; last as last\">\n          <ng-container *ngIf=\"last\" [ngSwitch]=\"error.key\">\n            <div class=\"bb-block bb-block--md\">\n              <span i18n=\"Enter a valid date format@@managePockets.create.goals.deadline.error.invalidFormat\" *ngSwitchCase=\"'invalidDateFormat'\">\n                Enter a valid date format\n              </span>\n              <span i18n=\"Invalid goal date@@managePockets.create.goals.deadline.error.invalidDate\" *ngSwitchCase=\"'dateLessThanMinDate'\">\n                Invalid goal date\n              </span>\n            </div>\n          </ng-container>\n        </ng-container>\n      </bb-input-validation-message-ui>\n    </div>\n    <p\n      bbDynamicId\n      #datePickerDescription\n      i18n=\"It will help you to track progress towards your goal@@managePockets.create.goals.deadline.description\" \n      class=\"bb-text-support bb-subtitle\"\n    >\n      It will help you to track progress towards your goal\n    </p>\n\n  </div>\n  <div class=\"bb-button-bar\">    \n    <button \n      bbButton \n      i18n=\"Continue@@managePockets.create.goals.button.continue\"\n      class=\"bb-button-bar__button\" \n      type=\"submit\"\n    >\n      Continue\n    </button>\n    <button \n      bbButton\n      i18n=\"Back@@managePockets.create.goals.button.back\"\n      class=\"bb-button-bar__button\"\n      color=\"secondary\" \n      (click)=\"goBack()\"\n    >\n      Back\n    </button>\n    <button \n      bbButton \n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel@@managePockets.create.goals.button.cancel\"\n      (click)=\"abort()\"\n    >\n      Cancel\n    </button>\n  </div>\n</form>\n\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ManagePocketsBaseWrapperComponent } from '../../../manage-pockets-common/components/manage-pockets-base-wrapper/manage-pockets-base-wrapper.component';\nimport { NewPocketItem } from '../../../manage-pockets-common/model/pocket-item.model';\n\n@Component({\n  selector: 'bb-manage-pockets-create-wrapper',\n  templateUrl: './manage-pockets-create-wrapper.component.html',\n})\nexport class ManagePocketsCreateWrapperComponent extends ManagePocketsBaseWrapperComponent {\n  @Input() pocketImageList?: string[];\n  @Input() awaitingCreateResponse?: boolean;\n  @Output() newPocket = new EventEmitter<Partial<NewPocketItem>>();\n\n  private pocketStore: BehaviorSubject<Partial<NewPocketItem>> = new BehaviorSubject({});\n\n  partialPocket: Observable<Partial<NewPocketItem>> = this.pocketStore.asObservable();\n\n  goNext(partialPocket?: Partial<NewPocketItem>) {\n    this.setCurrentUserValue(partialPocket);\n    this.goToStep(this.currentStep + 1);\n  }\n\n  saveNewPocket(newPocketItem: Partial<NewPocketItem>) {\n    this.newPocket.emit(newPocketItem);\n  }\n\n  private setCurrentUserValue(value?: Partial<NewPocketItem>) {\n    this.pocketStore.next({ ...this.pocketStore.value, ...value });\n  }\n}\n","<div class=\"bb-block bb-block--lg row bb-stack--center\">\n  <bb-stepper-ui class=\"col-12 col-md-8\">\n    <bb-stepper-step-ui\n      label=\"Make It Yours\"\n      i18n-label=\"Make It Yours@@managePockets.create.wrapper.stepper.step1.label\"\n      [isActive]=\"currentStep >= 1\"\n      [isChecked]=\"currentStep > 1\"\n      [isCurrent]=\"currentStep === 1\"\n    ></bb-stepper-step-ui>\n    <bb-stepper-step-ui\n      label=\"What's Your Goal?\"\n      i18n-label=\"What's Your Goal?@@managePockets.create.wrapper.stepper.step2.label\"\n      [isActive]=\"currentStep >= 2\"\n      [isChecked]=\"currentStep > 2\"\n      [isCurrent]=\"currentStep === 2\"\n    ></bb-stepper-step-ui>\n    <bb-stepper-step-ui\n      label=\"Review Pocket\"\n      i18n-label=\"Review Pocket@@managePockets.create.wrapper.stepper.step3.label\"\n      [isActive]=\"currentStep >= 3\"\n      [isChecked]=\"currentStep > 3\"\n      [isCurrent]=\"currentStep === 3\"\n    ></bb-stepper-step-ui>\n  </bb-stepper-ui>\n</div>\n\n<bb-manage-pockets-create>\n  <bb-manage-pockets-details\n    *ngIf=\"currentStep === 1\"\n    [pocketImageList]=\"pocketImageList\"\n    [partialPocket]=\"partialPocket | async\"\n    (next)=\"goNext($event)\"\n    (back)=\"goBack()\"\n    (cancel)=\"showAbortDialog()\"\n  ></bb-manage-pockets-details>\n\n  <bb-manage-pockets-goals\n    *ngIf=\"currentStep === 2\"\n    [partialPocket]=\"partialPocket | async\"\n    [journeyCurrency]=\"journeyCurrency\"\n    (next)=\"goNext($event)\"\n    (back)=\"goBack()\"\n    (cancel)=\"showAbortDialog()\"\n  ></bb-manage-pockets-goals>\n\n  <bb-manage-pockets-confirmation\n    *ngIf=\"currentStep === 3\"\n    [partialPocket]=\"partialPocket | async\"\n    [journeyCurrency]=\"journeyCurrency\"\n    [awaitingCreateResponse]=\"awaitingCreateResponse\"\n    (newPocket)=\"saveNewPocket($event)\"\n    (back)=\"goBack()\"\n    (cancel)=\"showAbortDialog()\"\n  ></bb-manage-pockets-confirmation>\n</bb-manage-pockets-create>\n\n<bb-modal-ui [isOpen]=\"showDialog\" (cancel)=\"closeAbortDialog()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item\">\n          <span class=\"modal-title\" i18n=\"Discard Pocket?@@managePockets.create.wrapper.modal.header\">\n            Discard Pocket?\n          </span>\n        </div>\n        <div class=\"bb-stack__item--push-right\">\n          <button\n            bbButton\n            (click)=\"closeAbortDialog()\"\n            class=\"bb-stack__item-sm\"\n            color=\"unstyled\"\n            aria-label=\"close dialog\"\n            i18n-aria-label=\"close dialog button@@managePockets.create.wrapper.modal.button.close\"\n          >\n            <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span i18n=\"All this pocket information will be permanently lost.@@managePockets.create.wrapper.modal.body\">\n        All this pocket information will be permanently lost.\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"confirmAbort()\"\n          i18n=\"Discard Pocket@@managePockets.create.wrapper.modal.button.confirm\"\n        >\n          Discard Pocket\n        </button>\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"closeAbortDialog()\"\n          i18n=\"Keep it@@managePockets.create.wrapper.modal.button.cancel\"\n        >\n          Keep it\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AmountInputModule } from '@backbase/ui-ang/amount-input';\nimport { IconModule } from '@backbase/ui-ang/icon';\nimport { InputDatepickerModule } from '@backbase/ui-ang/input-datepicker';\nimport { InputTextModule } from '@backbase/ui-ang/input-text';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { StepperModule } from '@backbase/ui-ang/stepper';\nimport { ManagePocketsCommonModule } from '../manage-pockets-common/manage-pockets-common.module';\nimport { ManagePocketsConfirmationComponent } from './components/manage-pockets-confirmation/manage-pockets-confirmation.component';\nimport { ManagePocketsCreateWrapperComponent } from './components/manage-pockets-create-wrapper/manage-pockets-create-wrapper.component';\nimport { ManagePocketsCreateComponent } from './components/manage-pockets-create/manage-pockets-create.component';\nimport { ManagePocketsDetailsComponent } from './components/manage-pockets-details/manage-pockets-details.component';\nimport { ManagePocketsGoalsComponent } from './components/manage-pockets-goals/manage-pockets-goals.component';\n\nconst components = [\n  ManagePocketsCreateComponent,\n  ManagePocketsCreateWrapperComponent,\n  ManagePocketsDetailsComponent,\n  ManagePocketsGoalsComponent,\n  ManagePocketsConfirmationComponent,\n];\nconst modules = [\n  AmountInputModule,\n  FormsModule,\n  IconModule,\n  InputDatepickerModule,\n  InputTextModule,\n  InputValidationMessageModule,\n  LoadButtonModule,\n  ModalModule,\n  ReactiveFormsModule,\n  StepperModule,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [\n    CommonModule,\n    ManagePocketsCommonModule,\n    ...modules,\n    BackbaseCoreModule.withConfig({\n      classMap: { ManagePocketsCreateWrapperComponent },\n    }),\n  ],\n  exports: [...components, ...modules],\n})\nexport class ManagePocketsCreateModule {}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\n\nexport const ManagePocketsJourneyConfigurationToken = new InjectionToken<ManagePocketsJourneyConfiguration>(\n  'ManagePocketsJourneyConfiguration injection token',\n);\n\nexport interface ManagePocketsJourneyConfiguration {\n  displayHeaders: boolean;\n  journeyCurrency: string;\n  pocketImageList: string[];\n}\n\nconst configDefaults: ManagePocketsJourneyConfiguration = {\n  displayHeaders: true,\n  journeyCurrency: 'EUR',\n  pocketImageList: [\n    'home',\n    'travel',\n    'rent',\n    'holidays',\n    'savings',\n    'utilities',\n    'new-car',\n    'insurance',\n    'new-phone',\n    'entertainment',\n    'gift',\n    'business',\n    'custom',\n  ],\n};\n\nexport const getDefaultConfigValues = (config: ManagePocketsJourneyConfiguration) => ({\n  ...configDefaults,\n  ...(config || {}),\n});\n\n@Injectable()\nexport class ManagePocketsJourneyConfigService {\n  private _config: ManagePocketsJourneyConfiguration;\n\n  constructor(@Optional() @Inject(ManagePocketsJourneyConfigurationToken) config: ManagePocketsJourneyConfiguration) {\n    this._config = getDefaultConfigValues(config);\n  }\n\n  get defaults(): ManagePocketsJourneyConfiguration {\n    return configDefaults;\n  }\n\n  /**\n   * Defines if the journey display header on each view\n   */\n  get displayHeaders(): boolean {\n    return this._config.displayHeaders;\n  }\n\n  /**\n   * Names for pockets images, used to both name the type and look for the asset\n   */\n  get pocketImageList(): string[] {\n    return this._config.pocketImageList;\n  }\n\n  /**\n   * Currency used across the whole journey\n   */\n  get journeyCurrency(): string {\n    return this._config.journeyCurrency;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ManagePocketsJourneyConfigService } from './manage-pockets-journey-config.service';\n\n@Component({\n  selector: 'bb-manage-pockets-journey',\n  template: '<router-outlet></router-outlet>',\n  providers: [ManagePocketsJourneyConfigService],\n})\nexport class ManagePocketsJourneyComponent {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'bb-manage-pockets-empty-list',\n  templateUrl: `./manage-pockets-empty-list.component.html`,\n})\nexport class ManagePocketsEmptyListComponent {\n  @Input() emptyStateImageUrl?: string;\n\n  @Output() readonly createPocket = new EventEmitter();\n\n  goToCreatePocket() {\n    this.createPocket.emit();\n  }\n}\n","<div class=\"bb-card bb-card--lg\">\n  <div class=\"bb-card__body bb-text-align-center\">\n    <div class=\"bb-block bb-block--lg\">\n      <img \n        class=\"img-fluid\" \n        *ngIf=\"!!emptyStateImageUrl\" \n        [src]=\"emptyStateImageUrl\"\n        alt=\"empty-state-image\"\n      />\n    </div>\n    <h2 \n      class=\"bb-block bb-block--sm\"\n      data-role=\"empty-state-message\"\n      i18n=\"Manage pockets empty state header@@managePockets.list.empty.state.header\"\n    >\n      Save More With Pockets!\n    </h2>\n    <div class=\"bb-block bb-block--lg\">\n      <span\n        class=\"bb-text-support text-small\"\n        data-role=\"empty-state-description\"\n        i18n=\"Manage pockets empty state description@managePockets.list.empty.state.description\"\n      >\n        Set up a dedicated space to help you stay on track with your saving goals\n      </span>\n    </div>\n    <div class=\"bb-block\">\n      <button bbButton color=\"primary\" (click)=\"goToCreatePocket()\">\n        <bb-icon-ui name=\"add\"></bb-icon-ui> \n        <span i18n=\"Create new pocket button@@managePockets.list.empty.state.createPocket.button\">\n          Create Pocket\n        </span>\n      </button>\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PocketItem, PocketTransferItem } from '../../../manage-pockets-common/model/pocket-item.model';\n\n@Component({\n  selector: 'bb-manage-pockets-list',\n  templateUrl: `./manage-pockets-list.component.html`,\n})\nexport class ManagePocketsListComponent {\n  @Input() pocketList?: PocketItem[];\n  @Output() pocketTransfer = new EventEmitter<PocketTransferItem>();\n\n  goToPocketTransfer(transferType: PocketTransferItem) {\n    this.pocketTransfer.emit(transferType);\n  }\n}\n","<ng-container *ngFor=\"let pocket of pocketList\">\n  <div class=\"bb-block bb-block--xl\">\n    <bb-manage-pockets-card\n      [pocket]=\"pocket\"\n      (pocketTransfer)=\"goToPocketTransfer($event)\"\n    ></bb-manage-pockets-card>\n  </div>\n</ng-container>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PocketResponse, PocketTransferItem } from '../../../manage-pockets-common/model/pocket-item.model';\n\n@Component({\n  selector: 'bb-manage-pockets-list-wrapper',\n  templateUrl: `manage-pockets-list-wrapper.component.html`,\n})\nexport class ManagePocketsListWrapperComponent {\n  @Input() pocketList?: PocketResponse;\n  @Input() pocketListApiError?: boolean;\n  @Input() emptyStateImageUrl?: string;\n  @Output() readonly refreshData = new EventEmitter<void>();\n  @Output() readonly createPocket = new EventEmitter();\n  @Output() pocketTransfer = new EventEmitter<PocketTransferItem>();\n\n  goToPocketTransfer(transferType: PocketTransferItem) {\n    this.pocketTransfer.emit(transferType);\n  }\n\n  onRefreshData() {\n    this.refreshData.emit();\n  }\n\n  goToCreatePocket() {\n    this.createPocket.emit();\n  }\n}\n","<ng-container *ngIf=\"!pocketListApiError; else errorState\">\n  <ng-container *ngIf=\"pocketList?.pockets?.length > 0; else emptyState\">\n    <div class=\"bb-block bb-block--lg bb-card bb-card--sm\">\n      <div class=\"bb-card__body\">\n        <div class=\"bb-stack\">\n          <div class=\"bb-stack__item bb-stack__item--fill bb-stack\">\n            <bb-icon-ui name=\"attach-money\" size=\"lg\"></bb-icon-ui>\n            <h5 \n              class=\"bb-block bb-block--no-margin\"\n              i18n=\"Plan to save something else?|New Pocket title@@managePockets.component.listWrapper.header.title\"\n            >\n              Plan to save for something else?\n            </h5>\n          </div>\n          <div class=\"bb-stack__item\">\n            <button bbButton color=\"primary\" (click)=\"goToCreatePocket()\">\n              <bb-icon-ui name=\"add\" cropped></bb-icon-ui> \n              <span i18n=\"Create new pocket button@@managePockets.component.listWrapper.header.createPocket.button\">\n                Create Pocket\n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <bb-manage-pockets-list\n      [pocketList]=\"pocketList.pockets\"\n      (pocketTransfer)=\"goToPocketTransfer($event)\"\n    ></bb-manage-pockets-list>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyState>\n  <bb-manage-pockets-empty-list [emptyStateImageUrl]=\"emptyStateImageUrl\" (createPocket)=\"goToCreatePocket()\"></bb-manage-pockets-empty-list>\n</ng-template>\n\n<ng-template #errorState>\n  <div class=\"card\">\n    <div class=\"card-body bb-state-container\">\n      <bb-empty-state-ui\n        iconModifier=\"error-outline\"\n        iconColor=\"dark\"\n        iconSize='xxl'\n        title=\"Page couldn't load\"\n        i18n-title=\"Error state title@@managePockets.component.listWrapper.errorState.title\"\n        subtitle=\"Try to reload the page or contact the system administrator.\"\n        i18n-subtitle=\"Error state message@@managePockets.component.listWrapper.errorState.message\"\n      ></bb-empty-state-ui>\n      <div class=\"bb-state-container__footer\">\n        <button \n          bbButton \n          color=\"primary\" \n          i18n=\"Reload button text@@managePockets.component.listWrapper.errorState.reloadButton\"\n          (click)=\"onRefreshData()\"\n        >\n          Reload\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { LoadingIndicatorModule } from '@backbase/ui-ang/loading-indicator';\nimport { ManagePocketsCommonModule } from '../manage-pockets-common/manage-pockets-common.module';\nimport { ManagePocketsEmptyListComponent } from './components/manage-pockets-empty-list/manage-pockets-empty-list.component';\nimport { ManagePocketsListWrapperComponent } from './components/manage-pockets-list-wrapper/manage-pockets-list-wrapper.component';\nimport { ManagePocketsListComponent } from './components/manage-pockets-list/manage-pockets-list.component';\n\nconst components = [ManagePocketsEmptyListComponent, ManagePocketsListComponent, ManagePocketsListWrapperComponent];\nconst modules = [LoadingIndicatorModule];\n\n@NgModule({\n  declarations: [...components],\n  imports: [\n    CommonModule,\n    ManagePocketsCommonModule,\n    ...modules,\n    BackbaseCoreModule.withConfig({\n      classMap: { ManagePocketsListWrapperComponent },\n    }),\n  ],\n  exports: [...components, ...modules],\n})\nexport class ManagePocketsListModule {}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ManagePocketsBaseStep } from '../../../manage-pockets-common/components/manage-pockets-base-step/manage-pockets-base-step';\nimport { AccountItem } from '../../../manage-pockets-common/model/accounts.model';\nimport { PaymentFormItem } from '../../../manage-pockets-common/model/payment.model';\n\n@Component({\n  selector: 'bb-manage-pockets-transfers-details',\n  templateUrl: './manage-pockets-transfers-details.component.html',\n})\nexport class ManagePocketsTransfersDetailsComponent extends ManagePocketsBaseStep implements OnInit {\n  @Input() accountList?: AccountItem[];\n  @Input() journeyCurrency?: string;\n  @Output() accountChange = new EventEmitter<AccountItem>();\n  @Output() next = new EventEmitter<PaymentFormItem>();\n  transferDetailsForm?: FormGroup;\n\n  ngOnInit(): void {\n    this.transferDetailsForm = this.formBuilder.group({\n      amount: [\n        this.partialNewPayment?.amount || '',\n        Validators.compose([\n          Validators.required,\n          Validators.min(0.01),\n          this.validatorsSelector(this.partialNewPayment?.account),\n        ]),\n      ],\n    });\n  }\n\n  goNext() {\n    if (this.transferDetailsForm!.valid) {\n      const paymentForm: PaymentFormItem = {\n        ...this.partialNewPayment,\n        amount: this.transferDetailsForm!.get('amount')!.value,\n      };\n\n      this.next.emit(paymentForm);\n    } else {\n      this.transferDetailsForm!.markAllAsTouched();\n    }\n  }\n\n  onAccountSelection(account: AccountItem) {\n    const control = this.transferDetailsForm!.get('amount');\n    control!.setValidators([Validators.required, Validators.min(0.01), this.validatorsSelector(account)]);\n    control!.updateValueAndValidity();\n    this.accountChange.emit(account);\n  }\n\n  private validatorsSelector(account?: AccountItem): ValidatorFn {\n    const pocketBalance = this.partialNewPayment?.pocketInfo?.pocket.balance.amount || 0;\n    return this.partialNewPayment?.pocketInfo?.transferType === this.transferTypesEnum.ADD\n      ? Validators.max(account?.balance || 0)\n      : Validators.max(Number(pocketBalance));\n  }\n\n  constructor(private formBuilder: FormBuilder) {\n    super();\n  }\n}\n","<form [formGroup]=\"transferDetailsForm\" (submit)=\"goNext()\">\n  <div class=\"bb-block bb-block--xl\">\n\n    <label>\n      {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.details.addMoneyHeader : pocketLocalizations.transfers.details.withdrawMoneyHeader }}\n    </label>\n\n    <bb-account-selector-ui\n      [items]=\"accountList\"\n      [selectedItems]=\"partialNewPayment?.account ?? ''\"\n      [closeOnSelect]=\"true\"\n      [highlight]=\"false\"\n      [required]=\"true\"\n      dropdownPosition=\"bottom\"\n      placeholder=\"Select an Account\"\n      i18n-placeholder=\"Select an Account@@managePockets.transfers.details.accountSelector.placeholder\"\n      (change)=\"onAccountSelection($event)\"\n    ></bb-account-selector-ui>\n  </div>\n\n  <div class=\"bb-block bb-block--xl\">\n    <div class=\"bb-stack row\">\n      <div class=\"bb-stack__item col-6\">\n        <div class=\"bb-block bb-block--sm\">\n          <bb-amount-input-ui\n            formControlName=\"amount\"\n            label=\"Amount\"\n            i18n-label=\"Amount@@managePockets.transfers.details.amount.placeholder\"\n            [attr.aria-invalid]=\"!isFieldValid(transferDetailsForm, 'amount')\"\n            [currency]=\"journeyCurrency\"\n            placeholder=\"0.00\"\n            i18n-placeholder=\"0.00|Price example@@managePockets.transfers.details.amount.placeholder\"\n          ></bb-amount-input-ui>\n        </div>\n        <div class=\"bb-subtitle bb-text-support\" i18n=\"Available balance|Value includes a formatted currendy@@managePockets.transfers.details.availableBalance\" *ngIf=\"partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.WITHDRAW\">\n          <span>Available Balance: </span>\n          <bb-amount-ui\n            [amount]=\"partialNewPayment?.pocketInfo?.pocket?.balance?.amount\"\n            [currency]=\"partialNewPayment?.pocketInfo?.pocket?.balance?.currencyCode\"\n          ></bb-amount-ui>\n        </div>\n        <bb-input-validation-message-ui [showErrors]=\"!isFieldValid(transferDetailsForm, 'amount')\" >\n          <ng-container *ngFor=\"let error of getFieldErrors(transferDetailsForm, 'amount') | keyvalue; last as last\">\n            <ng-container *ngIf=\"last\" [ngSwitch]=\"error.key\">\n              <span *ngSwitchCase=\"'max'\">\n                {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.details.addMoneyError : pocketLocalizations.transfers.details.withdrawMoneyError }}\n              </span>\n              <span i18n=\"Amount is required@@managePockets.transfers.details.amount.error.required\" *ngSwitchDefault>\n                Amount is required\n              </span>\n            </ng-container>\n          </ng-container>\n        </bb-input-validation-message-ui>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bb-button-bar\">\n    <button \n      bbButton \n      class=\"bb-button-bar__button\" \n      type=\"submit\"\n    >\n      {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.details.addMoneyContinueButton : pocketLocalizations.transfers.details.withdrawMoneyContinueButton }}\n    </button>\n    <button \n      bbButton \n      color=\"link\"\n      class=\"bb-button-bar__button bb-button-bar__button--across\"\n      i18n=\"Cancel@@managePockets.transfers.details.button.cancel\"\n      (click)=\"abort()\"\n    >\n      Cancel\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ManagePocketsBaseStep } from '../../../manage-pockets-common/components/manage-pockets-base-step/manage-pockets-base-step';\nimport { PaymentFormItem } from '../../../manage-pockets-common/model/payment.model';\n\n@Component({\n  selector: 'bb-manage-pockets-transfers-review',\n  templateUrl: './manage-pockets-transfers-review.component.html',\n})\nexport class ManagePocketsTransfersReviewComponent extends ManagePocketsBaseStep {\n  @Input() awaitingTransferResponse?: boolean;\n  @Output() newTransfer = new EventEmitter<PaymentFormItem>();\n\n  performTransfer() {\n    this.newTransfer.emit(this.partialNewPayment);\n  }\n}\n","<div class=\"bb-block bb-block--lg\">\n  <h2>{{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.review.addMoneyHeader : pocketLocalizations.transfers.review.withdrawMoneyHeader }}</h2>\n</div>\n\n<div class=\"bb-item-log bb-block bb-block--lg\">\n  <div class=\"bb-item-log__record bb-item-log__record--has-bullet\">\n    <div class=\"bb-item-log-record__bullet-icon bb-item-log-record__bullet-icon--filled bb-item-log-record__bullet-icon--spacing-md\"></div>\n    <div class=\"bb-block bb-block--md bb-item-log-record__details\">\n      <div class=\"bb-text-bold bb-block bb-block--sm\" i18n=\"From@@managePockets.transfers.review.itemLog.from.label\">\n        From\n      </div>\n      <ng-container *ngIf=\"partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD; then accountSlot; else pocketSlot\"></ng-container>\n    </div>\n  </div>\n  <div class=\"bb-item-log__record bb-item-log__record--has-bullet\">\n    <div class=\"bb-item-log-record__bullet-icon bb-item-log-record__bullet-icon--spacing-md\"></div>\n    <div class=\"bb-item-log-record__details\">\n      <div class=\"bb-text-bold bb-block bb-block--sm\" i18n=\"To@@managePockets.transfers.review.itemLog.to.label\">\n        To\n      </div>\n      <ng-container *ngIf=\"partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD; then pocketSlot; else accountSlot\"></ng-container>\n    </div>\n  </div>\n</div>\n\n<div class=\"bb-block bb-block--xl\">\n  <div class=\"bb-block bb-block--sm\">\n    <span class=\"bb-text-semi-bold\" i18n=\"Amount@@managePockets.transfers.review.amount.header\">\n      Amount\n    </span>\n  </div>\n  <bb-amount-ui\n    class=\"bb-heading-1\"\n    [amount]=\"partialNewPayment?.amount\"\n    [currency]=\"journeyCurrency\"\n  ></bb-amount-ui>\n</div>\n\n<div class=\"bb-button-bar\">\n  <bb-load-button-ui\n    i18n=\"Confirm Transfer@@managePockets.transfers.review.button.confirmTransfer\"\n    color=\"primary\"\n    class=\"bb-button-bar__button\"\n    [isLoading]=\"awaitingTransferResponse\"\n    (click)=\"!awaitingTransferResponse && performTransfer()\"\n  >\n    Confirm Transfer\n  </bb-load-button-ui>\n  <button \n    bbButton \n    color=\"secondary\"\n    class=\"bb-button-bar__button\"\n    i18n=\"Back@@managePockets.transfers.review.button.back\"\n    (click)=\"goBack()\"\n  >\n    Back\n  </button>\n  <button \n    bbButton \n    color=\"link\"\n    class=\"bb-button-bar__button bb-button-bar__button--across\"\n    i18n=\"Cancel@@managePockets.transfers.review.button.cancel\"\n    (click)=\"abort()\"\n  >\n    Cancel\n  </button>\n</div>\n\n<ng-template #pocketSlot>\n  <div class=\"break-word bb-highlight bb-block bb-block--xs\">\n    {{partialNewPayment?.pocketInfo?.pocket?.name}}\n  </div>\n  <div class=\"bb-text-support bb-subtitle break-word contextual-alternates-off\" i18n=\"Pocket@@managePockets.transfers.review.itemLog.to.details\">\n    Pocket\n  </div>\n</ng-template>\n\n<ng-template #accountSlot>\n  <div class=\"break-word bb-highlight bb-block bb-block--xs\">\n    {{partialNewPayment?.account?.name}}\n  </div>\n  <div class=\"bb-text-support bb-subtitle break-word contextual-alternates-off\">\n    {{partialNewPayment?.account?.number}}\n  </div>\n</ng-template>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ManagePocketsBaseWrapperComponent } from '../../../manage-pockets-common/components/manage-pockets-base-wrapper/manage-pockets-base-wrapper.component';\nimport { POCKET_LOCALIZATIONS } from '../../../manage-pockets-common/localization/manage-pockets-journey.localizations';\nimport { AccountItem } from '../../../manage-pockets-common/model/accounts.model';\nimport { PaymentFormItem } from '../../../manage-pockets-common/model/payment.model';\nimport { PocketTransferItem, TransferTypeEnum } from '../../../manage-pockets-common/model/pocket-item.model';\n\n@Component({\n  selector: 'bb-manage-pockets-transfers-wrapper',\n  templateUrl: './manage-pockets-transfers-wrapper.component.html',\n})\nexport class ManagePocketsTransfersWrapperComponent extends ManagePocketsBaseWrapperComponent implements OnInit {\n  @Input() accountList?: AccountItem[];\n  @Input() awaitingTransferResponse?: boolean;\n  @Input() partialNewPayment?: PaymentFormItem;\n  @Input() pocketInfo?: PocketTransferItem;\n  @Output() newTransfer = new EventEmitter<PaymentFormItem>();\n  transferTypesEnum = TransferTypeEnum;\n  pocketLocalizations = POCKET_LOCALIZATIONS;\n\n  ngOnInit(): void {\n    this.partialNewPayment = this.generatePaymentInfo();\n  }\n\n  accountChange(account: AccountItem) {\n    this.partialNewPayment = {\n      ...this.partialNewPayment!,\n      account,\n    };\n  }\n\n  goNext(paymentData: PaymentFormItem) {\n    this.partialNewPayment = paymentData;\n    this.goToStep(this.currentStep + 1);\n  }\n\n  performTransfer(paymentInfo: PaymentFormItem) {\n    this.newTransfer.emit(paymentInfo);\n  }\n\n  private generatePaymentInfo(): PaymentFormItem {\n    return {\n      ...this.partialNewPayment,\n      account: this.accountList?.[0],\n      currencyCode: this.journeyCurrency,\n      pocketInfo: this.pocketInfo,\n    };\n  }\n}\n","<bb-manage-pockets-transfers-details\n  *ngIf=\"currentStep === 1\"\n  [accountList]=\"accountList\"\n  [journeyCurrency]=\"journeyCurrency\"\n  [partialNewPayment]=\"partialNewPayment\"\n  (accountChange)=\"accountChange($event)\"\n  (cancel)=\"showAbortDialog()\"\n  (next)=\"goNext($event)\"\n></bb-manage-pockets-transfers-details>\n<bb-manage-pockets-transfers-review\n  *ngIf=\"currentStep === 2\"\n  [awaitingTransferResponse]=\"awaitingTransferResponse\"\n  [journeyCurrency]=\"journeyCurrency\"\n  [partialNewPayment]=\"partialNewPayment\"\n  [pocketInfo]=\"pocketInfo\"\n  (back)=\"goBack()\"\n  (cancel)=\"showAbortDialog()\"\n  (newTransfer)=\"performTransfer($event)\"\n></bb-manage-pockets-transfers-review>\n\n<bb-modal-ui [isOpen]=\"showDialog\" (cancel)=\"closeAbortDialog()\">\n  <bb-modal-header-ui>\n    <ng-template bbCustomModalHeader>\n      <div class=\"bb-stack\">\n        <div class=\"bb-stack__item\">\n          <span class=\"modal-title\">\n            {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.wrapper.addMoneyModalHeader : pocketLocalizations.transfers.wrapper.withdrawMoneyModalHeader }}\n          </span>\n          <ng-container *ngIf=\"partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD; then addMoneyModalHeader; else withdrawMoneyModalHeader\"></ng-container>\n        </div>\n        <div class=\"bb-stack__item--push-right\">\n          <button\n            bbButton\n            (click)=\"closeAbortDialog()\"\n            class=\"bb-stack__item-sm\"\n            color=\"unstyled\"\n            aria-label=\"close dialog\"\n            i18n-aria-label=\"close dialog button@@managePockets.transfers.wrapper.modal.button.close\"\n          >\n            <bb-icon-ui color=\"muted\" name=\"clear\"></bb-icon-ui>\n          </button>\n        </div>\n      </div>\n    </ng-template>\n  </bb-modal-header-ui>\n\n  <bb-modal-body-ui>\n    <ng-template bbCustomModalBody>\n      <span>\n        {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.wrapper.addMoneyModalBody : pocketLocalizations.transfers.wrapper.withdrawMoneyModalBody }}\n      </span>\n    </ng-template>\n  </bb-modal-body-ui>\n\n  <bb-modal-footer-ui>\n    <ng-template bbCustomModalFooter>\n      <div class=\"bb-button-bar\">\n        <button\n          bbButton\n          color=\"danger\"\n          class=\"bb-button-bar__button\"\n          (click)=\"confirmAbort()\"\n        >\n          {{ partialNewPayment?.pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.transfers.wrapper.addMoneyModalConfirm : pocketLocalizations.transfers.wrapper.withdrawMoneyModalConfirm }}\n        </button>\n        <button\n          bbButton\n          color=\"link\"\n          class=\"bb-button-bar__button\"\n          (click)=\"closeAbortDialog()\"\n          i18n=\"Keep it@@managePockets.transfers.wrapper.modal.button.cancel\"\n        >\n          Keep it\n        </button>\n      </div>\n    </ng-template>\n  </bb-modal-footer-ui>\n</bb-modal-ui>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { AccountSelectorModule } from '@backbase/ui-ang/account-selector';\nimport { AmountInputModule } from '@backbase/ui-ang/amount-input';\nimport { InputValidationMessageModule } from '@backbase/ui-ang/input-validation-message';\nimport { LoadButtonModule } from '@backbase/ui-ang/load-button';\nimport { ModalModule } from '@backbase/ui-ang/modal';\nimport { ManagePocketsCommonModule } from '../manage-pockets-common/manage-pockets-common.module';\nimport { ManagePocketsTransfersDetailsComponent } from './components/manage-pockets-transfers-details/manage-pockets-transfers-details.component';\nimport { ManagePocketsTransfersReviewComponent } from './components/manage-pockets-transfers-review/manage-pockets-transfers-review.component';\nimport { ManagePocketsTransfersWrapperComponent } from './components/manage-pockets-transfers-wrapper/manage-pockets-transfers-wrapper.component';\n\nconst components = [\n  ManagePocketsTransfersReviewComponent,\n  ManagePocketsTransfersWrapperComponent,\n  ManagePocketsTransfersDetailsComponent,\n];\n\nconst modules = [\n  AccountSelectorModule,\n  AmountInputModule,\n  InputValidationMessageModule,\n  FormsModule,\n  LoadButtonModule,\n  ModalModule,\n  ReactiveFormsModule,\n];\n\n@NgModule({\n  declarations: [...components],\n  imports: [\n    ...modules,\n    CommonModule,\n    ManagePocketsCommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { ManagePocketsTransfersWrapperComponent },\n    }),\n  ],\n  exports: [...components, ...modules],\n})\nexport class ManagePocketsTransfersModule {}\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { NotificationMessage, NotificationModifier } from '../manage-pockets-common/model/notifications.model';\nimport { NewPocketItem } from '../manage-pockets-common/model/pocket-item.model';\nimport { ManagePocketsService } from '../manage-pockets-common/services/manage-pockets.service';\nimport { ManagePocketsJourneyConfigService } from '../manage-pockets-journey-config.service';\n\n@Component({\n  selector: 'bb-manage-pockets-create-view',\n  templateUrl: './manage-pockets-create-view.component.html',\n})\nexport class ManagePocketsCreateViewComponent {\n  awaitingCreateResponse = false;\n\n  abort() {\n    this.navigateToList();\n  }\n\n  saveNewPocket(newPocketItem: Partial<NewPocketItem>) {\n    this.awaitingCreateResponse = true;\n\n    const onSuccess = () => {\n      this.awaitingCreateResponse = false;\n      this.cd.markForCheck();\n      this.pushNotification(\n        $localize`:Success pocket creation toast message@@managePockets.create.toast.success.message:Your \"${newPocketItem.name}:pocket name:\" pocket is created.`,\n        'success',\n        $localize`:Success pocket creation toast header@@managePockets.create.toast.success.header:Your Pocket is Ready!`,\n      );\n      this.navigateToList();\n    };\n\n    const onError = () => {\n      this.awaitingCreateResponse = false;\n      this.cd.markForCheck();\n      this.pushNotification(\n        $localize`:Error pocket creation toast message@@managePockets.create.toast.error.message:Unable to proceed, please try again.`,\n        'error',\n        $localize`:Error pocket creation toast header@@managePockets.create.toast.error.header:Failed to Create Pocket`,\n      );\n    };\n\n    this.managePocketsService.postPocket(newPocketItem).subscribe(onSuccess, onError);\n  }\n\n  private navigateToList() {\n    this.router.navigate(['../list'], { relativeTo: this.route });\n  }\n\n  private pushNotification(\n    message: NotificationMessage,\n    modifier?: NotificationModifier,\n    header?: NotificationMessage,\n  ) {\n    this.notificationService.showNotification({\n      header,\n      message,\n      modifier,\n      dismissible: true,\n      ttl: 5000,\n    });\n  }\n\n  constructor(\n    private readonly managePocketsService: ManagePocketsService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly cd: ChangeDetectorRef,\n    private readonly notificationService: NotificationService,\n    readonly configService: ManagePocketsJourneyConfigService,\n  ) {}\n}\n","<div class=\"heading-widget bb-heading-widget px-0\" *ngIf=\"configService.displayHeaders\">\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Create Pocket\"\n    i18n-heading=\"Create Pocket heading@@managePockets.createView.heading.title\"\n  ></bb-header-ui>\n</div>\n\n<bb-manage-pockets-create-wrapper\n  (cancel)=\"abort()\"\n  (newPocket)=\"saveNewPocket($event)\"\n  [pocketImageList]=\"configService.pocketImageList\"\n  [journeyCurrency]=\"configService.journeyCurrency\"\n  [awaitingCreateResponse]=\"awaitingCreateResponse\"\n></bb-manage-pockets-create-wrapper>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AssetsResolver, AssetsService } from '@backbase/foundation-ang/core';\nimport { Observable } from 'rxjs';\nimport { PocketResponse, PocketTransferItem } from '../manage-pockets-common/model/pocket-item.model';\nimport { ManagePocketsService } from '../manage-pockets-common/services/manage-pockets.service';\nimport { ManagePocketsJourneyConfigService } from '../manage-pockets-journey-config.service';\n\n@Component({\n  selector: 'bb-manage-pockets-list-view',\n  templateUrl: './manage-pockets-list-view.component.html',\n})\nexport class ManagePocketsListViewComponent implements OnInit {\n  /**\n   * Pocket list response, can contain either succesfull request or API error\n   */\n  pocketList$?: Observable<PocketResponse>;\n  /**\n   * Api Error status observable. Will return `true` is API fails for any reason\n   */\n  apiErrorStatus$? = this.managePocketsService.pocketListApiError$;\n\n  ngOnInit() {\n    this.refreshPocketList();\n  }\n\n  refreshPocketList() {\n    this.pocketList$ = this.managePocketsService.retrievePocketList();\n  }\n\n  goToCreatePocket() {\n    this.router.navigate(['../create'], { relativeTo: this.route });\n  }\n\n  goToPocketTransfer(pocketTransferItem: PocketTransferItem) {\n    this.router.navigate(['../transfer'], { state: pocketTransferItem, relativeTo: this.route });\n  }\n\n  private resolveAsset: AssetsResolver = this.assetsService.createAssetsResolver({\n    widgetName: 'bb-manage-pockets-journey-ang',\n    getURIFromAssetID: (assetId: string) => assetId,\n  });\n\n  get imageEmptyStateUrl(): Observable<string> {\n    return this.resolveAsset('manage-pockets-empty-state-img.webp');\n  }\n\n  constructor(\n    private readonly managePocketsService: ManagePocketsService,\n    private readonly assetsService: AssetsService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    readonly configService: ManagePocketsJourneyConfigService,\n  ) {}\n}\n","<div class=\"heading-widget bb-heading-widget px-0\" *ngIf=\"configService.displayHeaders\">\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    heading=\"Pockets\"\n    i18n-heading=\"Pockets heading@@managePockets.listView.heading.title\"\n  ></bb-header-ui>\n</div>\n\n<bb-manage-pockets-list-wrapper\n  *ngIf=\"pocketList$ | async as pocketList; else loadingState\"\n  [pocketList]=\"pocketList\"\n  [pocketListApiError]=\"apiErrorStatus$ | async\"\n  [emptyStateImageUrl]=\"imageEmptyStateUrl | async\"\n  (createPocket)=\"goToCreatePocket()\"\n  (pocketTransfer)=\"goToPocketTransfer($event)\"\n  (refreshData)=\"refreshPocketList()\"\n></bb-manage-pockets-list-wrapper>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui \n    loaderSize=\"lg\" \n    text=\"Loading your pockets...\"\n    i18n-text=\"Loading your pockets...|Text for the loading indicator@@managePockets.listView.loading.indicator.text\"\n  ></bb-loading-indicator-ui>\n</ng-template>","import { PostPaymentOrdersRequestParams } from '@backbase/data-ang/payment-order';\nimport { pocketFormatDate } from '../helpers/formatting.helper';\nimport { AccountItem } from './accounts.model';\nimport { PocketTransferItem, TransferTypeEnum } from './pocket-item.model';\n\nexport interface PaymentFormItem {\n  account?: AccountItem;\n  amount?: number;\n  currencyCode?: string;\n  pocketInfo?: PocketTransferItem;\n}\n\nexport enum PaymentTypeEnum {\n  POCKET_TRANSFER = 'POCKET_TRANSFER',\n}\n\nexport enum PaymentRoleEnum {\n  CREDITOR = 'CREDITOR',\n  DEBTOR = 'DEBTOR',\n}\n\nexport enum SchemeNameTypeEnum {\n  IBAN = 'IBAN',\n  BBAN = 'BBAN',\n  ID = 'ID',\n  EXTERNAL_ID = 'EXTERNAL_ID',\n  EMAIL = 'EMAIL',\n  MOBILE = 'MOBILE',\n}\n\nexport namespace PaymentOrderNamespace {\n  export function buildPaymentOrderPostRequest(paymentInfo: PaymentFormItem): PostPaymentOrdersRequestParams {\n    return {\n      paymentOrdersPost: {\n        paymentType: PaymentTypeEnum.POCKET_TRANSFER,\n        batchBooking: false,\n        requestedExecutionDate: pocketFormatDate(),\n        originatorAccount: {\n          identification: {\n            identification: paymentInfo.account?.id || '',\n            schemeName: SchemeNameTypeEnum.ID,\n          },\n        },\n        transferTransactionInformation: {\n          counterparty: {\n            name: paymentInfo.pocketInfo?.pocket?.name || '',\n            role:\n              paymentInfo.pocketInfo?.transferType === TransferTypeEnum.ADD\n                ? PaymentRoleEnum.CREDITOR\n                : PaymentRoleEnum.DEBTOR,\n          },\n          counterpartyAccount: {\n            identification: {\n              identification: paymentInfo.pocketInfo?.pocket?.arrangementId || '',\n              schemeName: SchemeNameTypeEnum.ID,\n            },\n          },\n          instructedAmount: {\n            amount: paymentInfo?.amount?.toString() || '',\n            currencyCode: paymentInfo?.currencyCode || '',\n          },\n        },\n      },\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PaymentOrdersHttpService, PaymentOrdersPostResponse } from '@backbase/data-ang/payment-order';\nimport { Observable } from 'rxjs';\nimport { PaymentFormItem, PaymentOrderNamespace } from '../model/payment.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentOrderService {\n  transferMoney(paymentInfo: PaymentFormItem): Observable<PaymentOrdersPostResponse> {\n    const payload = PaymentOrderNamespace.buildPaymentOrderPostRequest(paymentInfo);\n    return this.paymentOrderService.postPaymentOrders(payload);\n  }\n\n  constructor(private readonly paymentOrderService: PaymentOrdersHttpService) {}\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NotificationService } from '@backbase/ui-ang/notification';\nimport { Observable } from 'rxjs';\nimport { POCKET_LOCALIZATIONS } from '../manage-pockets-common/localization/manage-pockets-journey.localizations';\nimport { AccountItem } from '../manage-pockets-common/model/accounts.model';\nimport { NotificationMessage, NotificationModifier } from '../manage-pockets-common/model/notifications.model';\nimport { PaymentFormItem } from '../manage-pockets-common/model/payment.model';\nimport { PocketTransferItem, TransferTypeEnum } from '../manage-pockets-common/model/pocket-item.model';\nimport { ManagePocketsService } from '../manage-pockets-common/services/manage-pockets.service';\nimport { PaymentOrderService } from '../manage-pockets-common/services/payment-order.service';\nimport { ManagePocketsJourneyConfigService } from '../manage-pockets-journey-config.service';\n\n@Component({\n  selector: 'bb-manage-pockets-list-view',\n  templateUrl: './manage-pockets-transfers-view.component.html',\n})\nexport class ManagePocketsTransfersViewComponent implements OnInit {\n  accountList$?: Observable<AccountItem[]>;\n  awaitingTransferResponse = false;\n  pocketInfo?: PocketTransferItem;\n  pocketLocalizations = POCKET_LOCALIZATIONS;\n  transferTypesEnum = TransferTypeEnum;\n\n  ngOnInit(): void {\n    if (!this.pocketInfo) {\n      console.error(\n        `\"pocketInfo\" input is required in \"ManagePocketsTransfersViewComponent\". Redirecting to Pocket List`,\n      );\n      this.navigateToList();\n    }\n    this.refreshAccountList();\n  }\n\n  refreshAccountList() {\n    this.accountList$ = this.managePocketsService.retrieveAccountList();\n  }\n\n  abort() {\n    this.navigateToList();\n  }\n\n  performTransfer(paymentInfo: PaymentFormItem) {\n    this.awaitingTransferResponse = true;\n    const notificationLocalizations = this.generateNotificationLocalizations(paymentInfo);\n\n    const onSuccess = () => {\n      this.awaitingTransferResponse = false;\n      const notificationMessage = notificationLocalizations.success.message;\n      const notificationHeader = notificationLocalizations.success.header;\n\n      this.cd.markForCheck();\n      this.pushNotification(notificationMessage, 'success', notificationHeader);\n      this.navigateToList();\n    };\n\n    const onError = () => {\n      this.awaitingTransferResponse = false;\n      const notificationMessage = notificationLocalizations.error.message;\n      const notificationHeader = notificationLocalizations.error.header;\n\n      this.cd.markForCheck();\n      this.pushNotification(notificationMessage, 'error', notificationHeader);\n    };\n\n    this.paymentOrderService.transferMoney(paymentInfo).subscribe(onSuccess, onError);\n  }\n\n  private navigateToList() {\n    this.router.navigate(['../list'], { relativeTo: this.route });\n  }\n\n  private pushNotification(\n    message: NotificationMessage,\n    modifier?: NotificationModifier,\n    header?: NotificationMessage,\n  ) {\n    this.notificationService.showNotification({\n      header,\n      message,\n      modifier,\n      dismissible: true,\n      ttl: 5000,\n    });\n  }\n\n  private generateNotificationLocalizations(paymentInfo: PaymentFormItem) {\n    const addMoneyLocalizations = {\n      success: {\n        header: $localize`:Success pocket transfer toast header@@managePockets.transfer.toast.success.header:Transfer Successful!`,\n        message: $localize`:Success pocket transfer toast message@@managePockets.transfer.toast.success.add.message:You've just transfered ${paymentInfo.currencyCode} ${paymentInfo.amount} to your '${paymentInfo.pocketInfo?.pocket.name}' pocket.`,\n      },\n      error: {\n        header: $localize`:Error pocket creation toast header@@managePockets.transfer.toast.error.header.add:Failed to Add Money`,\n        message: $localize`:Error pocket creation toast message@@managePockets.transfer.toast.error.message.add:Unable to proceed, please try again.`,\n      },\n    };\n\n    const withdrawMoneyLocalizations = {\n      success: {\n        header: $localize`:Success pocket withdraw toast header@@managePockets.transfer.toast.success.header:Withdrawal Successful!`,\n        message: $localize`:Success pocket withdraw toast message@@managePockets.transfer.toast.success.withdraw.message:You've just withdrawn ${paymentInfo.currencyCode} ${paymentInfo.amount} from your '${paymentInfo.pocketInfo?.pocket.name}' pocket.`,\n      },\n      error: {\n        header: $localize`:Error pocket creation toast header@@managePockets.transfer.toast.error.header.withdraw:Failed to Withdraw Money`,\n        message: $localize`:Error pocket creation toast message@@managePockets.transfer.toast.error.message.withdraw:Unable to proceed, please try again.`,\n      },\n    };\n\n    return paymentInfo?.pocketInfo?.transferType === this.transferTypesEnum.ADD\n      ? addMoneyLocalizations\n      : withdrawMoneyLocalizations;\n  }\n\n  constructor(\n    private readonly managePocketsService: ManagePocketsService,\n    private readonly paymentOrderService: PaymentOrderService,\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly cd: ChangeDetectorRef,\n    private readonly notificationService: NotificationService,\n    readonly configService: ManagePocketsJourneyConfigService,\n  ) {\n    const nav = this.router.getCurrentNavigation();\n    this.pocketInfo = nav?.extras.state as PocketTransferItem;\n  }\n}\n","<div class=\"heading-widget bb-heading-widget px-0\" *ngIf=\"configService.displayHeaders\">\n  <bb-header-ui\n    headingType=\"h1\"\n    headingClasses=\"bb-heading-widget__heading\"\n    [heading]=\"pocketInfo?.transferType === transferTypesEnum.ADD ? pocketLocalizations.views.transfers.addMoneyHeader : pocketLocalizations.views.transfers.withdrawMoneyHeader\"\n  ></bb-header-ui>\n</div>\n\n<div class=\"bb-card bb-card--lg\">\n  <div class=\"bb-card__body\">\n    <bb-manage-pockets-transfers-wrapper\n      *ngIf=\"accountList$ | async as accountList; else loadingState\"\n      [accountList]=\"accountList\"\n      [awaitingTransferResponse]=\"awaitingTransferResponse\"\n      [journeyCurrency]=\"configService.journeyCurrency\"\n      [pocketInfo]=\"pocketInfo\"\n      (cancel)=\"abort()\"\n      (newTransfer)=\"performTransfer($event)\"\n    ></bb-manage-pockets-transfers-wrapper>\n  </div>\n</div>\n\n<ng-template #loadingState>\n  <bb-loading-indicator-ui\n    loaderSize=\"lg\"\n    text=\"Loading...\"\n    i18n-text=\"Loading...|Text for the loading indicator@@managePockets.transfersView.loading.indicator.text\"    \n  ></bb-loading-indicator-ui>\n</ng-template>","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport '@angular/localize/init';\nimport { provideRoutes, Route, RouterModule } from '@angular/router';\nimport { BackbaseCoreModule } from '@backbase/foundation-ang/core';\nimport { HeaderModule } from '@backbase/ui-ang/header';\nimport { ManagePocketsCreateModule } from './manage-pockets-create/manage-pockets-create.module';\nimport { ManagePocketsJourneyComponent } from './manage-pockets-journey.component';\nimport { ManagePocketsListModule } from './manage-pockets-list/manage-pockets-list.module';\nimport { ManagePocketsTransfersModule } from './manage-pockets-transfers/manage-pockets-transfers.module';\nimport { ManagePocketsCreateViewComponent } from './views/manage-pockets-create-view.component';\nimport { ManagePocketsListViewComponent } from './views/manage-pockets-list-view.component';\nimport { ManagePocketsTransfersViewComponent } from './views/manage-pockets-transfers-view.component';\n\nexport const defaultRoute: Route = {\n  path: '',\n  component: ManagePocketsJourneyComponent,\n  children: [\n    {\n      path: '',\n      redirectTo: 'list',\n      pathMatch: 'full',\n    },\n    {\n      path: 'list',\n      data: { title: 'Manage Pockets List' },\n      component: ManagePocketsListViewComponent,\n    },\n    {\n      path: 'create',\n      data: { title: 'Create Pocket' },\n      component: ManagePocketsCreateViewComponent,\n    },\n    {\n      path: 'transfer',\n      data: { title: 'Money Transfer' },\n      component: ManagePocketsTransfersViewComponent,\n    },\n  ],\n};\n\n@NgModule({\n  declarations: [\n    ManagePocketsJourneyComponent,\n    ManagePocketsListViewComponent,\n    ManagePocketsCreateViewComponent,\n    ManagePocketsTransfersViewComponent,\n  ],\n  imports: [\n    CommonModule,\n    BackbaseCoreModule.withConfig({\n      classMap: { ManagePocketsJourneyComponent },\n    }),\n    RouterModule,\n    HeaderModule,\n    ManagePocketsListModule,\n    ManagePocketsCreateModule,\n    ManagePocketsTransfersModule,\n  ],\n})\nexport class ManagePocketsJourneyModule {\n  static forRoot(\n    data: { route: Route; [key: string]: any } = { route: defaultRoute },\n  ): ModuleWithProviders<ManagePocketsJourneyModule> {\n    return {\n      ngModule: ManagePocketsJourneyModule,\n      providers: [provideRoutes([data.route])],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["modules","components"],"mappings":"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"}